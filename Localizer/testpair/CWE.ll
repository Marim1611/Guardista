
define i32 @function_401091(i32 %arg1) local_unnamed_addr {
dec_label_pc_401091:
  %0 = call i32 @__acrt_DownlevelLocaleNameToLCID(i16* bitcast (i32* @80 to i16*)), !insn.addr !0
  ret i32 %0, !insn.addr !0
}

define i32 @function_4010c3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_4010c3:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_p"(i32* nonnull @80), !insn.addr !1
  %1 = sext i1 %0 to i32, !insn.addr !1
  ret i32 %1, !insn.addr !1
}

define i32 @function_4010e1() local_unnamed_addr {
dec_label_pc_4010e1:
  %0 = call i8** @__dcrt_get_or_create_narrow_environment_nolock(), !insn.addr !2
  %1 = ptrtoint i8** %0 to i32, !insn.addr !2
  ret i32 %1, !insn.addr !2
}

define i32 @function_4011c2(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i16* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_4011c2:
  %0 = call i32 @__acrt_GetStringTypeA(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3
  ret i32 %0, !insn.addr !3
}

define i32 @function_4011db(i32 %arg1) local_unnamed_addr {
dec_label_pc_4011db:
  call void @__acrt_lowio_unlock_fh(i32 ptrtoint (i32* @80 to i32)), !insn.addr !4
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !4
}

define i32 @function_401221() local_unnamed_addr {
dec_label_pc_401221:
  %0 = call i32 @"__crt_mbstring::__c32rtomb_utf8"(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), %_Mbstatet* bitcast (i32* @80 to %_Mbstatet*)), !insn.addr !5
  ret i32 %0, !insn.addr !5
}

define i32 @function_40124e() local_unnamed_addr {
dec_label_pc_40124e:
  %0 = call i32 @__acrt_stdio_flush_and_write_narrow_nolock(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6
  ret i32 %0, !insn.addr !6
}

define i32 @function_40125d() local_unnamed_addr {
dec_label_pc_40125d:
  call void @_freea_crt(i8* bitcast (i32* @80 to i8*)), !insn.addr !7
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !7
}

define i32 @function_40132f() local_unnamed_addr {
dec_label_pc_40132f:
  call void @__acrt_lowio_lock_fh(i32 ptrtoint (i32* @80 to i32)), !insn.addr !8
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !8
}

define i32 @"___acrt_LCMapStringEx@36"(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_401393:
  %0 = call i32 @__acrt_LCMapStringEx(i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !9
  ret i32 %0, !insn.addr !9
}

define i32 @function_4013de() {
dec_label_pc_4013de:
  %0 = call i8 @"charNode::getLastChar"(i32* nonnull @80), !insn.addr !10
  %1 = sext i8 %0 to i32, !insn.addr !10
  ret i32 %1, !insn.addr !10
}

define i32 @function_401500() local_unnamed_addr {
dec_label_pc_401500:
  call void @_aulldvrm(), !insn.addr !11
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !11
}

define i32 @"___acrt_FlsSetValue@8"() local_unnamed_addr {
dec_label_pc_401569:
  %0 = call i32 @__acrt_FlsSetValue(i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*)), !insn.addr !12
  ret i32 %0, !insn.addr !12
}

define i32 @function_40158c() {
dec_label_pc_40158c:
  %0 = call i32 @"DNameStatusNode::raw_length"(i32* nonnull @80), !insn.addr !13
  ret i32 %0, !insn.addr !13
}

define i32 @function_4015c3() local_unnamed_addr {
dec_label_pc_4015c3:
  %0 = call i1 @"__crt_strtox::is_overflow_condition<unsigned long>"(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !14
  %1 = sext i1 %0 to i32, !insn.addr !14
  ret i32 %1, !insn.addr !14
}

define i32 @function_40169f() local_unnamed_addr {
dec_label_pc_40169f:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_precision"(i32* nonnull @80), !insn.addr !15
  %1 = sext i1 %0 to i32, !insn.addr !15
  ret i32 %1, !insn.addr !15
}

define i32 @function_401712() local_unnamed_addr {
dec_label_pc_401712:
  %0 = call i32 @__acrt_MultiByteToWideChar(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !16
  ret i32 %0, !insn.addr !16
}

define i32 @function_401730() local_unnamed_addr {
dec_label_pc_401730:
  call void @_aullshr(), !insn.addr !17
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !17
}

define i32 @function_40174e() local_unnamed_addr {
dec_label_pc_40174e:
  call void @strrchr_1(i8* bitcast (i32* @80 to i8*), i8 ptrtoint (i32* @80 to i8)), !insn.addr !18
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !18
}

define i32 @function_4017d5(i32 %arg1) local_unnamed_addr {
dec_label_pc_4017d5:
  call void @__acrt_unlock(i32 ptrtoint (i32* @80 to i32)), !insn.addr !19
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !19
}

define i32 @function_40180c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_40180c:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_Z"(i32* nonnull @80), !insn.addr !20
  %1 = sext i1 %0 to i32, !insn.addr !20
  ret i32 %1, !insn.addr !20
}

define i32 @function_401852(i32 %arg1) local_unnamed_addr {
dec_label_pc_401852:
  call void @"__crt_stdio_output::output_adapter_common<char,__crt_stdio_output::stream_output_adapter<char> >::write_string_impl"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, i32* nonnull @80), !insn.addr !21
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !21
}

define i32 @function_40190b() {
dec_label_pc_40190b:
  %0 = call i32 @"pDNameNode::raw_length"(i32* nonnull @80), !insn.addr !22
  ret i32 %0, !insn.addr !22
}

define i32 @function_401942() local_unnamed_addr {
dec_label_pc_401942:
  %0 = call i32 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::find_next_state"(i32* nonnull @80, i8 ptrtoint (i32* @80 to i8), i32 ptrtoint (i32* @80 to i32)), !insn.addr !23
  ret i32 %0, !insn.addr !23
}

define i32 @function_40196a() local_unnamed_addr {
dec_label_pc_40196a:
  call void @strchr_1(i8* bitcast (i32* @80 to i8*), i8 ptrtoint (i32* @80 to i8)), !insn.addr !24
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !24
}

define i32 @function_401974(i32 %arg1) local_unnamed_addr {
dec_label_pc_401974:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_c_tchar"(i32* nonnull @80, i8 ptrtoint (i32* @80 to i8)), !insn.addr !25
  %1 = sext i1 %0 to i32, !insn.addr !25
  ret i32 %1, !insn.addr !25
}

define i32 @function_401997(i32 %arg1) local_unnamed_addr {
dec_label_pc_401997:
  call void @__acrt_stdio_allocate_buffer_nolock(i32 ptrtoint (i32* @80 to i32)), !insn.addr !26
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !26
}

define i32 @function_4019ce() {
dec_label_pc_4019ce:
  %0 = call i32 @"pcharNode::length"(i32* nonnull @80), !insn.addr !27
  ret i32 %0, !insn.addr !27
}

define i32 @function_401a00(i32 %arg1) local_unnamed_addr {
dec_label_pc_401a00:
  call void @__acrt_locale_free_numeric(%lconv* bitcast (i32* @80 to %lconv*)), !insn.addr !28
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !28
}

define i32 @function_401a64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_401a64:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_s"(i32* nonnull @80), !insn.addr !29
  %1 = sext i1 %0 to i32, !insn.addr !29
  ret i32 %1, !insn.addr !29
}

define i32 @function_401afa() {
dec_label_pc_401afa:
  %0 = call i8* @"pcharNode::getString"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*)), !insn.addr !30
  %1 = ptrtoint i8* %0 to i32, !insn.addr !30
  ret i32 %1, !insn.addr !30
}

define i32 @function_401b54(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_401b54:
  call void @__SEH_prolog4(), !insn.addr !31
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !31
}

define i32 @function_401b63(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_401b63:
  call void @"__crt_stdio_output::force_decimal_point"(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !32
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !32
}

define i32 @function_401cb7() {
dec_label_pc_401cb7:
  %0 = call i8* @"std::exception::what"(i32* nonnull @80), !insn.addr !33
  %1 = ptrtoint i8* %0 to i32, !insn.addr !33
  ret i32 %1, !insn.addr !33
}

define i32 @function_401d57(i32 %arg1) local_unnamed_addr {
dec_label_pc_401d57:
  %0 = call i32 @"__crt_mbstring::return_illegal_sequence"(%_Mbstatet* bitcast (i32* @80 to %_Mbstatet*)), !insn.addr !34
  ret i32 %0, !insn.addr !34
}

define i32 @function_401d7a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_401d7a:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_o"(i32* nonnull @80), !insn.addr !35
  %1 = sext i1 %0 to i32, !insn.addr !35
  ret i32 %1, !insn.addr !35
}

define i32 @function_401d8e() local_unnamed_addr {
dec_label_pc_401d8e:
  call void @_allmul(), !insn.addr !36
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !36
}

define i32 @"?to_integer_size@__crt_stdio_output@@YAIW4length_modifier@1@@Z"(i32 %arg1) local_unnamed_addr {
dec_label_pc_401e56:
  %0 = call i32 @"__crt_stdio_output::to_integer_size"(i32 ptrtoint (i32* @80 to i32)), !insn.addr !37
  ret i32 %0, !insn.addr !37
}

define i32 @function_401f64() local_unnamed_addr {
dec_label_pc_401f64:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_type"(i32* nonnull @80), !insn.addr !38
  %1 = sext i1 %0 to i32, !insn.addr !38
  ret i32 %1, !insn.addr !38
}

define i32 @function_401fc3(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_401fc3:
  %0 = call i32 @__acrt_CompareStringA(i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !39
  ret i32 %0, !insn.addr !39
}

define i32 @function_401fcd(i32 %arg1) local_unnamed_addr {
dec_label_pc_401fcd:
  call void @__acrt_fenv_set_status(i32 ptrtoint (i32* @80 to i32)), !insn.addr !40
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !40
}

define i32 @function_402031() local_unnamed_addr {
dec_label_pc_402031:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_size"(i32* nonnull @80), !insn.addr !41
  %1 = sext i1 %0 to i32, !insn.addr !41
  ret i32 %1, !insn.addr !41
}

define i32 @function_402130() local_unnamed_addr {
dec_label_pc_402130:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_width"(i32* nonnull @80), !insn.addr !42
  %1 = sext i1 %0 to i32, !insn.addr !42
  ret i32 %1, !insn.addr !42
}

define i32 @function_402194() local_unnamed_addr {
dec_label_pc_402194:
  %0 = call i8* @_recalloc_base(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !43
  %1 = ptrtoint i8* %0 to i32, !insn.addr !43
  ret i32 %1, !insn.addr !43
}

define i32 @function_402248(i32 %arg1) local_unnamed_addr {
dec_label_pc_402248:
  call void @"__crt_strtox::c_string_character_source<char>::unget"(i32* nonnull @80, i8 ptrtoint (i32* @80 to i8)), !insn.addr !44
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !44
}

define i32 @function_402252() {
dec_label_pc_402252:
  %0 = call i8* @"DNameStatusNode::getString"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*)), !insn.addr !45
  %1 = ptrtoint i8* %0 to i32, !insn.addr !45
  ret i32 %1, !insn.addr !45
}

define i32 @function_4022c5(i32 %arg1) local_unnamed_addr {
dec_label_pc_4022c5:
  call void @__acrt_add_locale_ref(i32 ptrtoint (i32* @80 to i32)), !insn.addr !46
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !46
}

define i32 @function_4023ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_4023ce:
  %0 = call i32 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::process"(i32* nonnull @80), !insn.addr !47
  ret i32 %0, !insn.addr !47
}

define i32 @function_402446(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_402446:
  %0 = call i8* @"__crt_stdio_output::formatting_buffer::scratch_data<char>"(i32* nonnull @80), !insn.addr !48
  %1 = ptrtoint i8* %0 to i32, !insn.addr !48
  ret i32 %1, !insn.addr !48
}

define i32 @function_40250e() local_unnamed_addr {
dec_label_pc_40250e:
  call void @"__crt_win32_buffer<wchar_t,__crt_win32_buffer_internal_dynamic_resizing>::_deallocate"(i32* nonnull @80), !insn.addr !49
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !49
}

define i32 @function_40263a(i32 %arg1) local_unnamed_addr {
dec_label_pc_40263a:
  call void @__acrt_locale_free_monetary(%lconv* bitcast (i32* @80 to %lconv*)), !insn.addr !50
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !50
}

define i32 @__invoke_watson() local_unnamed_addr {
dec_label_pc_402793:
  call void @_invoke_watson(i16* bitcast (i32* @80 to i16*), i16* bitcast (i32* @80 to i16*), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !51
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !51
}

define i32 @function_402851() {
dec_label_pc_402851:
  %0 = call i32 @"pcharNode::raw_length"(i32* nonnull @80), !insn.addr !52
  ret i32 %0, !insn.addr !52
}

define i32 @function_40289c() {
dec_label_pc_40289c:
  %0 = call i8* @"charNode::getString"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*)), !insn.addr !53
  %1 = ptrtoint i8* %0 to i32, !insn.addr !53
  ret i32 %1, !insn.addr !53
}

define i32 @"___acrt_FlsGetValue@4"(i32 %arg1) local_unnamed_addr {
dec_label_pc_4028a1:
  %0 = call i8* @__acrt_FlsGetValue(i32 ptrtoint (i32* @80 to i32)), !insn.addr !54
  %1 = ptrtoint i8* %0 to i32, !insn.addr !54
  ret i32 %1, !insn.addr !54
}

define i32 @function_4028c4(i32* %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_4028c4:
  %0 = call i32 @__dcrt_write_console(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32* nonnull @80), !insn.addr !55
  ret i32 %0, !insn.addr !55
}

define i32 @function_402982() {
dec_label_pc_402982:
  %0 = call i8* @"std::bad_exception::`scalar deleting destructor'"(i32* nonnull @80), !insn.addr !56
  %1 = ptrtoint i8* %0 to i32, !insn.addr !56
  ret i32 %1, !insn.addr !56
}

define i32 @function_402991(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_402991:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_a"(i32* nonnull @80), !insn.addr !57
  %1 = sext i1 %0 to i32, !insn.addr !57
  ret i32 %1, !insn.addr !57
}

define i32 @function_402a40() {
dec_label_pc_402a40:
  %0 = call i32 @"pairNode::raw_length"(i32* nonnull @80), !insn.addr !58
  ret i32 %0, !insn.addr !58
}

define i32 @function_402ae5() local_unnamed_addr {
dec_label_pc_402ae5:
  %0 = call i32 @__acrt_get_utf8_acp_compatibility_codepage(), !insn.addr !59
  ret i32 %0, !insn.addr !59
}

define i32 @function_402b53(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_402b53:
  %0 = call i32 @__acrt_LocaleNameToLCID(i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !60
  ret i32 %0, !insn.addr !60
}

define i32 @function_402b9e(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_402b9e:
  %0 = call i32 @__acrt_fp_strflt_to_string(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), %_strflt* bitcast (i32* @80 to %_strflt*)), !insn.addr !61
  ret i32 %0, !insn.addr !61
}

define i32 @function_402bee(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_402bee:
  %0 = call i1 @"__crt_stdio_output::stream_output_adapter<char>::validate"(i32* nonnull @80), !insn.addr !62
  %1 = sext i1 %0 to i32, !insn.addr !62
  ret i32 %1, !insn.addr !62
}

define i32 @function_402bf3(i32 %arg1) local_unnamed_addr {
dec_label_pc_402bf3:
  %0 = call i32 @"__crt_win32_buffer<wchar_t,__crt_win32_buffer_internal_dynamic_resizing>::allocate"(i32* nonnull @80, i32 ptrtoint (i32* @80 to i32)), !insn.addr !63
  ret i32 %0, !insn.addr !63
}

define i32 @function_402c20() local_unnamed_addr {
dec_label_pc_402c20:
  call void @"__crt_stdio_output::write_multiple_characters<__crt_stdio_output::stream_output_adapter<char>,char>"(i32* nonnull @80, i8 ptrtoint (i32* @80 to i8), i32 ptrtoint (i32* @80 to i32), i32* nonnull @80), !insn.addr !64
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !64
}

define i32 @function_402c2f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_402c2f:
  %0 = call i1 @"__crt_strtox::c_string_character_source<char>::validate"(i32* nonnull @80), !insn.addr !65
  %1 = sext i1 %0 to i32, !insn.addr !65
  ret i32 %1, !insn.addr !65
}

define i32 @function_402c9d(i32 %arg1, i32 %arg2, i32 %arg3, %_Mbstatet.720* %arg4) local_unnamed_addr {
dec_label_pc_402c9d:
  %0 = call i32 @"__crt_mbstring::__mbrtowc_utf8"(i16* bitcast (i32* @80 to i16*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), %_Mbstatet* bitcast (i32* @80 to %_Mbstatet*)), !insn.addr !66
  ret i32 %0, !insn.addr !66
}

define i32 @function_402cb1() local_unnamed_addr {
dec_label_pc_402cb1:
  call void @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_integer_parse_into_buffer<unsigned int>"(i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i1 ptrtoint (i32* @80 to i1)), !insn.addr !67
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !67
}

define i32 @function_402cca() {
dec_label_pc_402cca:
  %0 = call i8 @"pairNode::getLastChar"(i32* nonnull @80), !insn.addr !68
  %1 = sext i8 %0 to i32, !insn.addr !68
  ret i32 %1, !insn.addr !68
}

define i32 @function_402ccf() {
dec_label_pc_402ccf:
  %0 = call i8 @"pcharNode::getLastChar"(i32* nonnull @80), !insn.addr !69
  %1 = sext i8 %0 to i32, !insn.addr !69
  ret i32 %1, !insn.addr !69
}

define i32 @function_402d5b(i32* %arg1) local_unnamed_addr {
dec_label_pc_402d5b:
  %0 = call i32* @"__crt_unique_heap_ptr<char,__crt_internal_free_policy>::operator="(i32* nonnull @80, i32* nonnull @80), !insn.addr !70
  %1 = ptrtoint i32* %0 to i32, !insn.addr !70
  ret i32 %1, !insn.addr !70
}

define i32 @function_402d88(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_402d88:
  call void @"__crt_stdio_output::output_adapter_data<char,__crt_stdio_output::stream_output_adapter<char> >::output_adapter_data<char,__crt_stdio_output::stream_output_adapter<char> >"(i32* nonnull @80, i32* nonnull @80, i64 ptrtoint (i32* @80 to i64), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*)), !insn.addr !71
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !71
}

define i32 @function_402e32() local_unnamed_addr {
dec_label_pc_402e32:
  call void @"CWE23_Relative_Path_Traversal__char_environment_fopen_44::good"(), !insn.addr !72
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !72
}

define i32 @function_402e78() local_unnamed_addr {
dec_label_pc_402e78:
  call void @_allshl(), !insn.addr !73
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !73
}

define i32 @function_402ee1(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_402ee1:
  %0 = call i32 @__acrt_fp_format(double* bitcast (i32* @80 to double*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i64 ptrtoint (i32* @80 to i64), i32 ptrtoint (i32* @80 to i32)), !insn.addr !74
  ret i32 %0, !insn.addr !74
}

define i32 @function_402f22() {
dec_label_pc_402f22:
  %0 = call i32 @"pDNameNode::length"(i32* nonnull @80), !insn.addr !75
  ret i32 %0, !insn.addr !75
}

define i32 @function_402f68() local_unnamed_addr {
dec_label_pc_402f68:
  %0 = call i32 @__acrt_stdio_flush_nolock(i32 ptrtoint (i32* @80 to i32)), !insn.addr !76
  ret i32 %0, !insn.addr !76
}

define i32 @function_402f8b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_402f8b:
  %0 = call i1 @__acrt_stdio_begin_temporary_buffering_nolock(i32 ptrtoint (i32* @80 to i32)), !insn.addr !77
  %1 = sext i1 %0 to i32, !insn.addr !77
  ret i32 %1, !insn.addr !77
}

define i32 @function_402fd1() {
dec_label_pc_402fd1:
  %0 = call i8* @"pairNode::getString"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*)), !insn.addr !78
  %1 = ptrtoint i8* %0 to i32, !insn.addr !78
  ret i32 %1, !insn.addr !78
}

define i32 @function_402ff9() local_unnamed_addr {
dec_label_pc_402ff9:
  call void @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_integer_parse_into_buffer<unsigned __int64>"(i32* nonnull @80, i64 ptrtoint (i32* @80 to i64), i32 ptrtoint (i32* @80 to i32), i1 ptrtoint (i32* @80 to i1)), !insn.addr !79
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !79
}

define i32 @___acrt_getptd() local_unnamed_addr {
dec_label_pc_40301c:
  %0 = call i32 @__acrt_getptd(), !insn.addr !80
  ret i32 %0, !insn.addr !80
}

define i32 @function_403099(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_403099:
  call void @__acrt_update_locale_info(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !81
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !81
}

define i32 @function_4030df(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_4030df:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_n"(i32* nonnull @80), !insn.addr !82
  %1 = sext i1 %0 to i32, !insn.addr !82
  ret i32 %1, !insn.addr !82
}

define i32 @function_4030f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_4030f8:
  %0 = call i32 @__acrt_fp_classify(double* bitcast (i32* @80 to double*)), !insn.addr !83
  ret i32 %0, !insn.addr !83
}

define i32 @function_40315c(i32 %arg1) local_unnamed_addr {
dec_label_pc_40315c:
  %0 = call i8* @"__crt_fast_encode_pointer<void *>"(i8* bitcast (i32* @80 to i8*)), !insn.addr !84
  %1 = ptrtoint i8* %0 to i32, !insn.addr !84
  ret i32 %1, !insn.addr !84
}

define i32 @function_40321f() local_unnamed_addr {
dec_label_pc_40321f:
  call void @"__crt_stdio_output::formatting_buffer::~formatting_buffer"(i32* nonnull @80), !insn.addr !85
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !85
}

define i32 @function_403242() local_unnamed_addr {
dec_label_pc_403242:
  %0 = call i32 @__acrt_CompareStringEx(i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !86
  ret i32 %0, !insn.addr !86
}

define i32 @function_4032b5() local_unnamed_addr {
dec_label_pc_4032b5:
  %0 = call i1 @"__crt_stdio_output::is_wide_character_specifier<char>"(i64 ptrtoint (i32* @80 to i64), i8 ptrtoint (i32* @80 to i8), i32 ptrtoint (i32* @80 to i32)), !insn.addr !87
  %1 = sext i1 %0 to i32, !insn.addr !87
  ret i32 %1, !insn.addr !87
}

define i32 @function_4032bf() local_unnamed_addr {
dec_label_pc_4032bf:
  %0 = call i64 @"__crt_strtox::divide"(%"__crt_strtox::big_integer"* bitcast (i32* @80 to %"__crt_strtox::big_integer"*), %"__crt_strtox::big_integer"* bitcast (i32* @80 to %"__crt_strtox::big_integer"*)), !insn.addr !88
  %1 = trunc i64 %0 to i32, !insn.addr !88
  ret i32 %1, !insn.addr !88
}

define i32 @function_40333c() local_unnamed_addr {
dec_label_pc_40333c:
  %0 = call i32 @__acrt_fenv_get_status(), !insn.addr !89
  ret i32 %0, !insn.addr !89
}

define i32 @function_40334b() local_unnamed_addr {
dec_label_pc_40334b:
  %0 = call i1 @__acrt_initialize_multibyte(), !insn.addr !90
  %1 = sext i1 %0 to i32, !insn.addr !90
  ret i32 %1, !insn.addr !90
}

define i32 @function_40339b() local_unnamed_addr {
dec_label_pc_40339b:
  %0 = call i32 @__acrt_AreFileApisANSI(), !insn.addr !91
  ret i32 %0, !insn.addr !91
}

define i32 @function_40340e() {
dec_label_pc_40340e:
  %0 = call i32 @"pairNode::length"(i32* nonnull @80), !insn.addr !92
  ret i32 %0, !insn.addr !92
}

define i32 @"@_guard_check_icall_nop@4"() local_unnamed_addr {
dec_label_pc_4034a9:
  call void @_guard_check_icall_nop(i32 ptrtoint (i32* @80 to i32)), !insn.addr !93
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !93
}

define i32 @function_4034d6() local_unnamed_addr {
dec_label_pc_4034d6:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::write_stored_string_tchar"(i32* nonnull @80, i8 ptrtoint (i32* @80 to i8)), !insn.addr !94
  %1 = sext i1 %0 to i32, !insn.addr !94
  ret i32 %1, !insn.addr !94
}

define i32 @function_40350d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_40350d:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_integer"(i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i1 ptrtoint (i32* @80 to i1)), !insn.addr !95
  %1 = sext i1 %0 to i32, !insn.addr !95
  ret i32 %1, !insn.addr !95
}

define i32 @function_403512() local_unnamed_addr {
dec_label_pc_403512:
  call void @__acrt_errno_map_os_error(i32 ptrtoint (i32* @80 to i32)), !insn.addr !96
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !96
}

define i32 @function_403535(i32 %arg1, i32 %arg2, i32 %arg3, %fenv_t %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_403535:
  call void @__acrt_fenv_set_control(i32 ptrtoint (i32* @80 to i32)), !insn.addr !97
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !97
}

define i32 @function_403594() local_unnamed_addr {
dec_label_pc_403594:
  %0 = call i1 @"__crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>"(i32* nonnull @80, i32 ptrtoint (i32* @80 to i32)), !insn.addr !98
  %1 = sext i1 %0 to i32, !insn.addr !98
  ret i32 %1, !insn.addr !98
}

define i32 @function_40359e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_40359e:
  %0 = call i32 @__dcrt_lowio_ensure_console_output_initialized(), !insn.addr !99
  ret i32 %0, !insn.addr !99
}

define i32 @function_403661() {
dec_label_pc_403661:
  %0 = call i8 @"pDNameNode::getLastChar"(i32* nonnull @80), !insn.addr !100
  %1 = sext i8 %0 to i32, !insn.addr !100
  ret i32 %1, !insn.addr !100
}

define i32 @function_403675() local_unnamed_addr {
dec_label_pc_403675:
  %0 = call i32 @"__crt_mbstring::__mbrtoc32_utf8"(i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), %_Mbstatet* bitcast (i32* @80 to %_Mbstatet*)), !insn.addr !101
  ret i32 %0, !insn.addr !101
}

define i32 @function_403747() local_unnamed_addr {
dec_label_pc_403747:
  %0 = call i32 @"__acrt_mbs_to_wcs_cp<__crt_win32_buffer_internal_dynamic_resizing>"(i8* bitcast (i32* @80 to i8*), i32* nonnull @80, i32 ptrtoint (i32* @80 to i32)), !insn.addr !102
  ret i32 %0, !insn.addr !102
}

define i32 @function_403832(i32 %arg1) local_unnamed_addr {
dec_label_pc_403832:
  call void @_crt_debugger_hook(i32 ptrtoint (i32* @80 to i32)), !insn.addr !103
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !103
}

define i32 @function_403896() local_unnamed_addr {
dec_label_pc_403896:
  call void @__acrt_set_locale_changed(), !insn.addr !104
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !104
}

define i32 @function_40391d(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_40391d:
  %0 = call i32 @"__crt_strtox::make_c_string_character_source<char,char * *>"(i8* bitcast (i32* @80 to i8*), i8** bitcast (i32* @80 to i8**)), !insn.addr !105
  ret i32 %0, !insn.addr !105
}

define i32 @function_403945() {
dec_label_pc_403945:
  %0 = call i8* @"pDNameNode::getString"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*)), !insn.addr !106
  %1 = ptrtoint i8* %0 to i32, !insn.addr !106
  ret i32 %1, !insn.addr !106
}

define i32 @function_4039bd() local_unnamed_addr {
dec_label_pc_4039bd:
  call void @"CWE23_Relative_Path_Traversal__char_environment_fopen_44::bad"(), !insn.addr !107
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !107
}

define i32 @function_4039c7() local_unnamed_addr {
dec_label_pc_4039c7:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_flag"(i32* nonnull @80), !insn.addr !108
  %1 = sext i1 %0 to i32, !insn.addr !108
  ret i32 %1, !insn.addr !108
}

define i32 @function_4039fe(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4039fe:
  call void @_CIlog10(), !insn.addr !109
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !109
}

define i32 @function_403a2b(i32 %arg1) local_unnamed_addr {
dec_label_pc_403a2b:
  call void @__acrt_locale_free_lc_time_if_unreferenced(%__crt_lc_time_data* bitcast (i32* @80 to %__crt_lc_time_data*)), !insn.addr !110
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !110
}

define i32 @function_403a58(i32 %arg1) local_unnamed_addr {
dec_label_pc_403a58:
  call void @__acrt_release_locale_ref(i32 ptrtoint (i32* @80 to i32)), !insn.addr !111
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !111
}

define i32 @function_403a8f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_403a8f:
  %0 = call i32 @__acrt_SetEnvironmentVariableA(i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*)), !insn.addr !112
  ret i32 %0, !insn.addr !112
}

define i32 @function_403b66(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_403b66:
  call void @__acrt_fltout(%_CRT_DOUBLE.747 { double bitcast (i64 ptrtoint (i32* @80 to i64) to double) }, i32 ptrtoint (i32* @80 to i32), %_strflt* bitcast (i32* @80 to %_strflt*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !113
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !113
}

define i32 @function_403bf7() local_unnamed_addr {
dec_label_pc_403bf7:
  %0 = call i32 @__acrt_getptd_head(), !insn.addr !114
  ret i32 %0, !insn.addr !114
}

define i32 @function_403bfc() local_unnamed_addr {
dec_label_pc_403bfc:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_normal"(i32* nonnull @80), !insn.addr !115
  %1 = sext i1 %0 to i32, !insn.addr !115
  ret i32 %1, !insn.addr !115
}

define i32 @function_403c60() local_unnamed_addr {
dec_label_pc_403c60:
  %0 = call i32 @__dcrt_set_variable_in_narrow_environment_nolock(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !116
  ret i32 %0, !insn.addr !116
}

define i32 @function_403d55() local_unnamed_addr {
dec_label_pc_403d55:
  %0 = call i32* @__acrt_get_sigabrt_handler(), !insn.addr !117
  %1 = ptrtoint i32* %0 to i32, !insn.addr !117
  ret i32 %1, !insn.addr !117
}

define i32 @function_403d91(i32 %arg1) local_unnamed_addr {
dec_label_pc_403d91:
  call void @"_LocaleUpdate::_LocaleUpdate"(i32* nonnull @80, i32 ptrtoint (i32* @80 to i32)), !insn.addr !118
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !118
}

define i32 @function_403dfa(i8* %arg1) local_unnamed_addr {
dec_label_pc_403dfa:
  call void @printLine(i8* bitcast (i32* @80 to i8*)), !insn.addr !119
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !119
}

define i32 @function_403e13() local_unnamed_addr {
dec_label_pc_403e13:
  %0 = call i8* @__dcrt_get_narrow_environment_from_os(), !insn.addr !120
  %1 = ptrtoint i8* %0 to i32, !insn.addr !120
  ret i32 %1, !insn.addr !120
}

define i32 @function_403e63() local_unnamed_addr {
dec_label_pc_403e63:
  %0 = call i32 @"__crt_stdio_output::formatting_buffer::count<char>"(i32* nonnull @80), !insn.addr !121
  ret i32 %0, !insn.addr !121
}

define i32 @function_403e86(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_403e86:
  call void @__acrt_stdio_end_temporary_buffering_nolock(i1 ptrtoint (i32* @80 to i1), i32 ptrtoint (i32* @80 to i32)), !insn.addr !122
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !122
}

define i32 @function_403ebd(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_403ebd:
  call void @__acrt_call_reportfault(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !123
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !123
}

define i32 @function_403fa8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_403fa8:
  call void @"__crt_stdio_output::crop_zeroes"(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !124
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !124
}

define i32 @function_403fdf() local_unnamed_addr {
dec_label_pc_403fdf:
  %0 = call i32 @__acrt_fenv_get_control(), !insn.addr !125
  ret i32 %0, !insn.addr !125
}

define i32 @function_403ffd() {
dec_label_pc_403ffd:
  %0 = call i8* @"std::exception::`scalar deleting destructor'"(i32* nonnull @80), !insn.addr !126
  %1 = ptrtoint i8* %0 to i32, !insn.addr !126
  ret i32 %1, !insn.addr !126
}

define i32 @function_404016(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_404016:
  call void @"__crt_stdio_output::common_data<char>::common_data<char>"(i32* nonnull @80), !insn.addr !127
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !127
}

define i32 @function_404093(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_404093:
  %0 = call i32 @_setmbcp_nolock(i32 ptrtoint (i32* @80 to i32), %__crt_multibyte_data* bitcast (i32* @80 to %__crt_multibyte_data*)), !insn.addr !128
  ret i32 %0, !insn.addr !128
}

define i32 @function_4040b6(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_4040b6:
  call void @__acrt_GetSystemTimePreciseAsFileTime(%_FILETIME* bitcast (i32* @80 to %_FILETIME*)), !insn.addr !129
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !129
}

define i32 @function_4040cf() local_unnamed_addr {
dec_label_pc_4040cf:
  %0 = call i1 @"__crt_stdio_output::stream_output_adapter<char>::write_character_without_count_update"(i32* nonnull @80, i8 ptrtoint (i32* @80 to i8)), !insn.addr !130
  %1 = sext i1 %0 to i32, !insn.addr !130
  ret i32 %1, !insn.addr !130
}

define i32 @function_4040de() local_unnamed_addr {
dec_label_pc_4040de:
  call void @_alldvrm(), !insn.addr !131
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !131
}

define i32 @function_40410b() {
dec_label_pc_40410b:
  %0 = call i32 @"charNode::length"(i32* nonnull @80), !insn.addr !132
  ret i32 %0, !insn.addr !132
}

define i32 @function_404110(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_404110:
  %0 = call i32 @__acrt_LCMapStringA(i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !133
  ret i32 %0, !insn.addr !133
}

define i32 @function_404160() local_unnamed_addr {
dec_label_pc_404160:
  call void @"__crt_stdio_output::stream_output_adapter<char>::write_string"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, i32* nonnull @80), !insn.addr !134
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !134
}

define i32 @function_404241() {
dec_label_pc_404241:
  %0 = call i32 @"DNameStatusNode::length"(i32* nonnull @80), !insn.addr !135
  ret i32 %0, !insn.addr !135
}

define i32 @function_404250(i32 %arg1) local_unnamed_addr {
dec_label_pc_404250:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::parse_int_from_format_string"(i32* nonnull @80, i32* nonnull @80), !insn.addr !136
  %1 = sext i1 %0 to i32, !insn.addr !136
  ret i32 %1, !insn.addr !136
}

define i32 @function_40431d() local_unnamed_addr {
dec_label_pc_40431d:
  call void @__dcrt_terminate_console_output(), !insn.addr !137
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !137
}

define i32 @function_40432c(i32 %arg1) local_unnamed_addr {
dec_label_pc_40432c:
  %0 = call i32 @"__crt_mbstring::__mbsrtowcs_utf8"(i16* bitcast (i32* @80 to i16*), i8** bitcast (i32* @80 to i8**), i32 ptrtoint (i32* @80 to i32), %_Mbstatet* bitcast (i32* @80 to %_Mbstatet*)), !insn.addr !138
  ret i32 %0, !insn.addr !138
}

define i32 @function_404340() local_unnamed_addr {
dec_label_pc_404340:
  %0 = call i32 @__acrt_locale_get_ctype_array_value(i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !139
  ret i32 %0, !insn.addr !139
}

define i32 @function_404395(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_404395:
  call void @__acrt_update_multibyte_info(i32 ptrtoint (i32* @80 to i32), %__crt_multibyte_data** bitcast (i32* @80 to %__crt_multibyte_data**)), !insn.addr !140
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !140
}

define i32 @function_40439f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_40439f:
  %0 = call i32 @"__crt_win32_buffer_internal_dynamic_resizing::allocate"(i8** bitcast (i32* @80 to i8**), i32 ptrtoint (i32* @80 to i32), i32* nonnull @80), !insn.addr !141
  ret i32 %0, !insn.addr !141
}

define i32 @function_4043c7(i32 %arg1) local_unnamed_addr {
dec_label_pc_4043c7:
  %0 = call i32 @"__crt_strtox::parse_integer<unsigned long,__crt_strtox::c_string_character_source<char> >"(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i1 ptrtoint (i32* @80 to i1)), !insn.addr !142
  ret i32 %0, !insn.addr !142
}

define i32 @function_404421() {
dec_label_pc_404421:
  %0 = call i32 @"charNode::raw_length"(i32* nonnull @80), !insn.addr !143
  ret i32 %0, !insn.addr !143
}

define i32 @function_404548(i32 %arg1) local_unnamed_addr {
dec_label_pc_404548:
  call void @__acrt_lock(i32 ptrtoint (i32* @80 to i32)), !insn.addr !144
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !144
}

define i32 @function_40461f() local_unnamed_addr {
dec_label_pc_40461f:
  %0 = call i32 @__acrt_WideCharToMultiByte(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32* nonnull @80), !insn.addr !145
  ret i32 %0, !insn.addr !145
}

define i32 @function_404624() {
dec_label_pc_404624:
  %0 = call i8 @"DNameStatusNode::getLastChar"(i32* nonnull @80), !insn.addr !146
  %1 = sext i8 %0 to i32, !insn.addr !146
  ret i32 %1, !insn.addr !146
}

define i32 @function_404660() {
dec_label_pc_404660:
  %0 = call i8* @"type_info::`scalar deleting destructor'"(i32* nonnull @80), !insn.addr !147
  %1 = ptrtoint i8* %0 to i32, !insn.addr !147
  ret i32 %1, !insn.addr !147
}

define i32 @___acrt_getptd_noexit() local_unnamed_addr {
dec_label_pc_4047e1:
  %0 = call i32 @__acrt_getptd_noexit(), !insn.addr !148
  ret i32 %0, !insn.addr !148
}

define i32 @function_40481d(i32 %arg1) local_unnamed_addr {
dec_label_pc_40481d:
  call void @__acrt_free_locale(i32 ptrtoint (i32* @80 to i32)), !insn.addr !149
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !149
}

define i32 @function_40482c(i32 %arg1) local_unnamed_addr {
dec_label_pc_40482c:
  call void @__acrt_locale_free_time(%__crt_lc_time_data* bitcast (i32* @80 to %__crt_lc_time_data*)), !insn.addr !150
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !150
}

define void @printLine(i8* %line) local_unnamed_addr {
dec_label_pc_408120:
  %0 = icmp eq i8* %line, null, !insn.addr !151
  br i1 %0, label %dec_label_pc_40813a, label %dec_label_pc_408129, !insn.addr !152

dec_label_pc_408129:                              ; preds = %dec_label_pc_408120
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_47c008, i32 0, i32 0), i8* nonnull %line), !insn.addr !153
  br label %dec_label_pc_40813a, !insn.addr !154

dec_label_pc_40813a:                              ; preds = %dec_label_pc_408129, %dec_label_pc_408120
  ret void, !insn.addr !155
}

define i64* @__local_stdio_printf_options() local_unnamed_addr {
dec_label_pc_4086f0:
  ret i64* @_OptionsStorage, !insn.addr !156
}

define i32 @_vfprintf_l(i32* %_Stream, i8* %_Format, i32* %_Locale, i8* %_ArgList) local_unnamed_addr {
dec_label_pc_408710:
  %0 = call i64* @__local_stdio_printf_options(), !insn.addr !157
  %1 = bitcast i64* %0 to i32*, !insn.addr !157
  %2 = ptrtoint i64* %0 to i32, !insn.addr !157
  %3 = add i32 %2, 4, !insn.addr !158
  %4 = inttoptr i32 %3 to i32*, !insn.addr !158
  %5 = load i32, i32* %4, align 4, !insn.addr !158
  %6 = load i32, i32* %1, align 4, !insn.addr !159
  %7 = sext i32 %6 to i64, !insn.addr !160
  %8 = call i32 @__stdio_common_vfprintf(i64 %7, i32 %5, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*)), !insn.addr !160
  ret i32 %8, !insn.addr !161
}

define i32 @printf(i8* %_Format, ...) local_unnamed_addr {
dec_label_pc_408810:
  %0 = call i32* @__acrt_iob_func(i32 1), !insn.addr !162
  %1 = call i32 @_vfprintf_l(i32* %0, i8* bitcast (i32* @80 to i8*), i32* nonnull @80, i8* bitcast (i32* @80 to i8*)), !insn.addr !163
  ret i32 %1, !insn.addr !164
}

define i64 @time(i64* %_Time) local_unnamed_addr {
dec_label_pc_408c20:
  %0 = call i64 @_time64(i64* %_Time), !insn.addr !165
  %1 = mul i64 %0, 4294967296
  %2 = sdiv i64 %1, 4294967296, !insn.addr !166
  ret i64 %2, !insn.addr !166
}

define void @"CWE23_Relative_Path_Traversal__char_environment_fopen_44::bad"() local_unnamed_addr {
dec_label_pc_408c80:
  %stack_var_-259 = alloca i32, align 4
  %dataBuffer_-268 = alloca [260 x i8], align 1
  store [260 x i8] [i8 99, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef], [260 x i8]* %dataBuffer_-268, align 1, !insn.addr !167
  %0 = bitcast i32* %stack_var_-259 to i8*
  call void @memset(i8* nonnull %0, i8 0, i32 251), !insn.addr !168
  %1 = getelementptr inbounds [260 x i8], [260 x i8]* %dataBuffer_-268, i32 0, i32 0, !insn.addr !169
  %2 = call i32 @strlen(i8* nonnull %1), !insn.addr !170
  %3 = call i8* @getenv(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_470e70, i32 0, i32 0)), !insn.addr !171
  %4 = icmp eq i8* %3, null, !insn.addr !172
  %5 = ptrtoint [260 x i8]* %dataBuffer_-268 to i32
  br i1 %4, label %dec_label_pc_408d3e, label %dec_label_pc_408d13, !insn.addr !173

dec_label_pc_408d13:                              ; preds = %dec_label_pc_408c80
  %6 = sub i32 259, %2, !insn.addr !174
  %7 = add i32 %2, %5, !insn.addr !175
  %8 = inttoptr i32 %7 to i8*, !insn.addr !176
  %9 = call i8* @strncat(i8* %8, i8* nonnull %3, i32 %6), !insn.addr !177
  br label %dec_label_pc_408d3e, !insn.addr !178

dec_label_pc_408d3e:                              ; preds = %dec_label_pc_408d13, %dec_label_pc_408c80
  call void @__security_check_cookie(i32 %5), !insn.addr !179
  ret void, !insn.addr !180
}

define void @"CWE23_Relative_Path_Traversal__char_environment_fopen_44::goodG2B"() local_unnamed_addr {
dec_label_pc_408da0:
  %stack_var_-259 = alloca i32, align 4
  %dataBuffer_-268 = alloca [260 x i8], align 1
  store [260 x i8] [i8 99, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef], [260 x i8]* %dataBuffer_-268, align 1, !insn.addr !181
  %0 = bitcast i32* %stack_var_-259 to i8*
  call void @memset(i8* nonnull %0, i8 0, i32 251), !insn.addr !182
  %1 = getelementptr inbounds [260 x i8], [260 x i8]* %dataBuffer_-268, i32 0, i32 0, !insn.addr !183
  %2 = call i8* @strcat(i8* nonnull %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_470e84, i32 0, i32 0)), !insn.addr !184
  %3 = ptrtoint [260 x i8]* %dataBuffer_-268 to i32, !insn.addr !185
  call void @__security_check_cookie(i32 %3), !insn.addr !185
  ret void, !insn.addr !186
}

define void @"CWE23_Relative_Path_Traversal__char_environment_fopen_44::good"() local_unnamed_addr {
dec_label_pc_408e40:
  call void @"CWE23_Relative_Path_Traversal__char_environment_fopen_44::goodG2B"(), !insn.addr !187
  ret void, !insn.addr !188
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
dec_label_pc_408e50:
  %0 = call i64 @time(i64* null), !insn.addr !189
  %1 = trunc i64 %0 to i32, !insn.addr !189
  call void @srand(i32 %1), !insn.addr !190
  %2 = call i32 @function_403dfa(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_470e90, i32 0, i32 0)), !insn.addr !191
  %3 = call i32 @function_402e32(), !insn.addr !192
  %4 = call i32 @function_403dfa(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_470ea4, i32 0, i32 0)), !insn.addr !193
  %5 = call i32 @function_403dfa(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_470eb4, i32 0, i32 0)), !insn.addr !194
  %6 = call i32 @function_4039bd(), !insn.addr !195
  %7 = call i32 @function_403dfa(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_470ec8, i32 0, i32 0)), !insn.addr !196
  ret i32 0, !insn.addr !197
}

declare void @__security_check_cookie(i32) local_unnamed_addr

define void @_crt_debugger_hook(i32 %reserved) local_unnamed_addr {
dec_label_pc_409eb7:
  store i32 0, i32* @__scrt_debugger_hook_flag, align 4, !insn.addr !198
  ret void, !insn.addr !199
}

define void @__SEH_prolog4() local_unnamed_addr {
dec_label_pc_409f30:
  %stack_var_8 = alloca i32, align 4
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %1 = call i32 @__readfsdword(i32 0), !insn.addr !200
  store i32 %1, i32* %stack_var_-8, align 4, !insn.addr !200
  %2 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !200
  %3 = ptrtoint i32* %stack_var_8 to i32, !insn.addr !201
  %4 = sub i32 %2, %0, !insn.addr !202
  %5 = add i32 %4, -4, !insn.addr !203
  %6 = inttoptr i32 %5 to i32*, !insn.addr !203
  %7 = add i32 %4, -8, !insn.addr !204
  %8 = inttoptr i32 %7 to i32*, !insn.addr !204
  %9 = add i32 %4, -12, !insn.addr !205
  %10 = inttoptr i32 %9 to i32*, !insn.addr !205
  %11 = load i32, i32* @__security_cookie, align 4, !insn.addr !206
  %12 = xor i32 %11, %3, !insn.addr !207
  %13 = add i32 %4, -16, !insn.addr !208
  %14 = inttoptr i32 %13 to i32*, !insn.addr !208
  store i32 %12, i32* %14, align 4, !insn.addr !208
  %15 = add i32 %4, -20, !insn.addr !209
  %16 = inttoptr i32 %15 to i32*, !insn.addr !209
  call void @__writefsdword(i32 0, i32 %2), !insn.addr !210
  ret void, !insn.addr !211
}

define void @_guard_check_icall_nop(i32 %Target) local_unnamed_addr {
dec_label_pc_409f9e:
  ret void, !insn.addr !212
}

define void @memset(i8* %dst, i8 %value, i32 %count) local_unnamed_addr {
dec_label_pc_40a640:
  %edi.9.reg2mem = alloca i32, !insn.addr !213
  %ecx.9.reg2mem = alloca i32, !insn.addr !213
  %edi.8.reg2mem = alloca i32, !insn.addr !213
  %ecx.8.reg2mem = alloca i32, !insn.addr !213
  %edi.7.reg2mem = alloca i32, !insn.addr !213
  %ecx.7.reg2mem = alloca i32, !insn.addr !213
  %edi.6.reg2mem = alloca i32, !insn.addr !213
  %ecx.6.reg2mem = alloca i32, !insn.addr !213
  %edi.5.reg2mem = alloca i32, !insn.addr !213
  %ecx.5.reg2mem = alloca i32, !insn.addr !213
  %edi.4.reg2mem = alloca i32, !insn.addr !213
  %ecx.4.reg2mem = alloca i32, !insn.addr !213
  %edi.3.reg2mem = alloca i32, !insn.addr !213
  %ecx.3.reg2mem = alloca i32, !insn.addr !213
  %edi.2.reg2mem = alloca i32, !insn.addr !213
  %ecx.2.reg2mem = alloca i32, !insn.addr !213
  %xmm0.0.reg2mem = alloca i128, !insn.addr !213
  %edi.1.reg2mem = alloca i32, !insn.addr !213
  %ecx.1.reg2mem = alloca i32, !insn.addr !213
  %edi.0.reg2mem = alloca i32, !insn.addr !213
  %ecx.0.reg2mem = alloca i32, !insn.addr !213
  %0 = icmp eq i32 %count, 0, !insn.addr !214
  br i1 %0, label %dec_label_pc_40a793, label %dec_label_pc_40a657, !insn.addr !215

dec_label_pc_40a657:                              ; preds = %dec_label_pc_40a640
  %1 = ptrtoint i8* %dst to i32
  %2 = zext i8 %value to i32, !insn.addr !216
  %3 = mul nuw i32 %2, 16843009, !insn.addr !217
  %4 = icmp ult i32 %count, 33
  store i32 %count, i32* %ecx.5.reg2mem, !insn.addr !218
  store i32 %1, i32* %edi.5.reg2mem, !insn.addr !218
  br i1 %4, label %dec_label_pc_40a745, label %dec_label_pc_40a666, !insn.addr !218

dec_label_pc_40a666:                              ; preds = %dec_label_pc_40a657
  %5 = icmp ult i32 %count, 128, !insn.addr !219
  store i32 %count, i32* %ecx.1.reg2mem, !insn.addr !220
  store i32 %1, i32* %edi.1.reg2mem, !insn.addr !220
  br i1 %5, label %dec_label_pc_40a6fd, label %dec_label_pc_40a672, !insn.addr !220

dec_label_pc_40a672:                              ; preds = %dec_label_pc_40a666
  %6 = load i32, i32* @__favor, align 4, !insn.addr !221
  %7 = and i32 %6, 2, !insn.addr !221
  %8 = icmp ne i32 %7, 0, !insn.addr !221
  %9 = icmp eq i1 %8, false, !insn.addr !222
  br i1 %9, label %dec_label_pc_40a685, label %dec_label_pc_40a67c, !insn.addr !222

dec_label_pc_40a67c:                              ; preds = %dec_label_pc_40a672
  %10 = trunc i32 %3 to i8, !insn.addr !223
  call void @__asm_rep_stosb_memset(i8* %dst, i8 %10, i32 %count), !insn.addr !223
  ret void, !insn.addr !224

dec_label_pc_40a685:                              ; preds = %dec_label_pc_40a672
  %11 = load i32, i32* @__isa_enabled, align 4, !insn.addr !225
  %12 = and i32 %11, 2, !insn.addr !225
  %13 = icmp ne i32 %12, 0, !insn.addr !225
  %14 = icmp eq i1 %13, false, !insn.addr !226
  store i32 %count, i32* %ecx.5.reg2mem, !insn.addr !226
  store i32 %1, i32* %edi.5.reg2mem, !insn.addr !226
  br i1 %14, label %dec_label_pc_40a745, label %dec_label_pc_40a693, !insn.addr !226

dec_label_pc_40a693:                              ; preds = %dec_label_pc_40a685
  %15 = call i128 @__asm_movd(i32 %3), !insn.addr !227
  %16 = call i128 @__asm_pshufd(i128 %15, i32 0), !insn.addr !228
  %17 = add i32 %1, %count, !insn.addr !229
  %18 = bitcast i8* %dst to i128*, !insn.addr !230
  %19 = load i128, i128* %18, align 4, !insn.addr !230
  call void @__asm_movups(i128 %19, i128 %16), !insn.addr !230
  %20 = add i32 %1, 16, !insn.addr !231
  %21 = and i32 %20, -16, !insn.addr !232
  %22 = sub i32 %17, %21, !insn.addr !233
  %23 = icmp ult i32 %22, 129
  store i32 %22, i32* %ecx.0.reg2mem, !insn.addr !234
  store i32 %21, i32* %edi.0.reg2mem, !insn.addr !234
  store i32 %22, i32* %ecx.1.reg2mem, !insn.addr !234
  store i32 %21, i32* %edi.1.reg2mem, !insn.addr !234
  br i1 %23, label %dec_label_pc_40a6fd, label %dec_label_pc_40a6c0, !insn.addr !234

dec_label_pc_40a6c0:                              ; preds = %dec_label_pc_40a693, %dec_label_pc_40a6c0
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %24 = inttoptr i32 %edi.0.reload to i128*, !insn.addr !235
  %25 = load i128, i128* %24, align 16, !insn.addr !235
  call void @__asm_movdqa(i128 %25, i128 %16), !insn.addr !235
  %26 = add i32 %edi.0.reload, 16, !insn.addr !236
  %27 = inttoptr i32 %26 to i128*, !insn.addr !236
  %28 = load i128, i128* %27, align 16, !insn.addr !236
  call void @__asm_movdqa(i128 %28, i128 %16), !insn.addr !236
  %29 = add i32 %edi.0.reload, 32, !insn.addr !237
  %30 = inttoptr i32 %29 to i128*, !insn.addr !237
  %31 = load i128, i128* %30, align 16, !insn.addr !237
  call void @__asm_movdqa(i128 %31, i128 %16), !insn.addr !237
  %32 = add i32 %edi.0.reload, 48, !insn.addr !238
  %33 = inttoptr i32 %32 to i128*, !insn.addr !238
  %34 = load i128, i128* %33, align 16, !insn.addr !238
  call void @__asm_movdqa(i128 %34, i128 %16), !insn.addr !238
  %35 = add i32 %edi.0.reload, 64, !insn.addr !239
  %36 = inttoptr i32 %35 to i128*, !insn.addr !239
  %37 = load i128, i128* %36, align 16, !insn.addr !239
  call void @__asm_movdqa(i128 %37, i128 %16), !insn.addr !239
  %38 = add i32 %edi.0.reload, 80, !insn.addr !240
  %39 = inttoptr i32 %38 to i128*, !insn.addr !240
  %40 = load i128, i128* %39, align 16, !insn.addr !240
  call void @__asm_movdqa(i128 %40, i128 %16), !insn.addr !240
  %41 = add i32 %edi.0.reload, 96, !insn.addr !241
  %42 = inttoptr i32 %41 to i128*, !insn.addr !241
  %43 = load i128, i128* %42, align 16, !insn.addr !241
  call void @__asm_movdqa(i128 %43, i128 %16), !insn.addr !241
  %44 = add i32 %edi.0.reload, 112, !insn.addr !242
  %45 = inttoptr i32 %44 to i128*, !insn.addr !242
  %46 = load i128, i128* %45, align 16, !insn.addr !242
  call void @__asm_movdqa(i128 %46, i128 %16), !insn.addr !242
  %47 = add i32 %edi.0.reload, 128, !insn.addr !243
  %48 = add i32 %ecx.0.reload, -128, !insn.addr !244
  %49 = icmp ult i32 %48, 256, !insn.addr !245
  %50 = icmp eq i1 %49, false, !insn.addr !246
  store i32 %48, i32* %ecx.0.reg2mem, !insn.addr !246
  store i32 %47, i32* %edi.0.reg2mem, !insn.addr !246
  store i128 %16, i128* %xmm0.0.reg2mem, !insn.addr !246
  store i32 %48, i32* %ecx.2.reg2mem, !insn.addr !246
  store i32 %47, i32* %edi.2.reg2mem, !insn.addr !246
  br i1 %50, label %dec_label_pc_40a6c0, label %dec_label_pc_40a710, !insn.addr !246

dec_label_pc_40a6fd:                              ; preds = %dec_label_pc_40a693, %dec_label_pc_40a666
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %51 = load i32, i32* @__isa_enabled, align 4, !insn.addr !247
  %52 = and i32 %51, 2, !insn.addr !247
  %53 = icmp ne i32 %52, 0, !insn.addr !247
  %54 = icmp eq i1 %53, false, !insn.addr !248
  store i32 %ecx.1.reload, i32* %ecx.5.reg2mem, !insn.addr !248
  store i32 %edi.1.reload, i32* %edi.5.reg2mem, !insn.addr !248
  br i1 %54, label %dec_label_pc_40a745, label %dec_label_pc_40a707, !insn.addr !248

dec_label_pc_40a707:                              ; preds = %dec_label_pc_40a6fd
  %55 = call i128 @__asm_movd(i32 %3), !insn.addr !249
  %56 = call i128 @__asm_pshufd(i128 %55, i32 0), !insn.addr !250
  store i128 %56, i128* %xmm0.0.reg2mem, !insn.addr !250
  store i32 %ecx.1.reload, i32* %ecx.2.reg2mem, !insn.addr !250
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !250
  br label %dec_label_pc_40a710, !insn.addr !250

dec_label_pc_40a710:                              ; preds = %dec_label_pc_40a6c0, %dec_label_pc_40a707
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %xmm0.0.reload = load i128, i128* %xmm0.0.reg2mem
  %57 = icmp ult i32 %ecx.2.reload, 32, !insn.addr !251
  store i32 %ecx.2.reload, i32* %ecx.3.reg2mem, !insn.addr !252
  store i32 %edi.2.reload, i32* %edi.3.reg2mem, !insn.addr !252
  store i32 %ecx.2.reload, i32* %ecx.4.reg2mem, !insn.addr !252
  store i32 %edi.2.reload, i32* %edi.4.reg2mem, !insn.addr !252
  br i1 %57, label %dec_label_pc_40a731, label %dec_label_pc_40a715, !insn.addr !252

dec_label_pc_40a715:                              ; preds = %dec_label_pc_40a710, %dec_label_pc_40a715
  %edi.3.reload = load i32, i32* %edi.3.reg2mem
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %58 = inttoptr i32 %edi.3.reload to i128*, !insn.addr !253
  %59 = load i128, i128* %58, align 4, !insn.addr !253
  call void @__asm_movdqu(i128 %59, i128 %xmm0.0.reload), !insn.addr !253
  %60 = add i32 %edi.3.reload, 16, !insn.addr !254
  %61 = inttoptr i32 %60 to i128*, !insn.addr !254
  %62 = load i128, i128* %61, align 4, !insn.addr !254
  call void @__asm_movdqu(i128 %62, i128 %xmm0.0.reload), !insn.addr !254
  %63 = add i32 %edi.3.reload, 32, !insn.addr !255
  %64 = add i32 %ecx.3.reload, -32, !insn.addr !256
  %65 = icmp ult i32 %64, 32, !insn.addr !257
  %66 = icmp eq i1 %65, false, !insn.addr !258
  store i32 %64, i32* %ecx.3.reg2mem, !insn.addr !258
  store i32 %63, i32* %edi.3.reg2mem, !insn.addr !258
  br i1 %66, label %dec_label_pc_40a715, label %dec_label_pc_40a729, !insn.addr !258

dec_label_pc_40a729:                              ; preds = %dec_label_pc_40a715
  %67 = and i32 %64, 31, !insn.addr !259
  %68 = icmp eq i32 %67, 0, !insn.addr !259
  store i32 %64, i32* %ecx.4.reg2mem, !insn.addr !260
  store i32 %63, i32* %edi.4.reg2mem, !insn.addr !260
  br i1 %68, label %dec_label_pc_40a793, label %dec_label_pc_40a731, !insn.addr !260

dec_label_pc_40a731:                              ; preds = %dec_label_pc_40a729, %dec_label_pc_40a710
  %edi.4.reload = load i32, i32* %edi.4.reg2mem
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %69 = add i32 %ecx.4.reload, -32, !insn.addr !261
  %70 = add i32 %69, %edi.4.reload, !insn.addr !261
  %71 = inttoptr i32 %70 to i128*, !insn.addr !262
  %72 = load i128, i128* %71, align 4, !insn.addr !262
  call void @__asm_movdqu(i128 %72, i128 %xmm0.0.reload), !insn.addr !262
  %73 = add i32 %70, 16, !insn.addr !263
  %74 = inttoptr i32 %73 to i128*, !insn.addr !263
  %75 = load i128, i128* %74, align 4, !insn.addr !263
  call void @__asm_movdqu(i128 %75, i128 %xmm0.0.reload), !insn.addr !263
  ret void, !insn.addr !264

dec_label_pc_40a745:                              ; preds = %dec_label_pc_40a6fd, %dec_label_pc_40a685, %dec_label_pc_40a657
  %edi.5.reload = load i32, i32* %edi.5.reg2mem
  %ecx.5.reload = load i32, i32* %ecx.5.reg2mem
  %76 = and i32 %ecx.5.reload, 3, !insn.addr !265
  %77 = icmp eq i32 %76, 0, !insn.addr !265
  store i32 %ecx.5.reload, i32* %ecx.7.reg2mem, !insn.addr !266
  store i32 %edi.5.reload, i32* %edi.7.reg2mem, !insn.addr !266
  br i1 %77, label %dec_label_pc_40a75b, label %dec_label_pc_40a74d.preheader, !insn.addr !266

dec_label_pc_40a74d.preheader:                    ; preds = %dec_label_pc_40a745
  %78 = trunc i32 %3 to i8, !insn.addr !267
  store i32 %ecx.5.reload, i32* %ecx.6.reg2mem
  store i32 %edi.5.reload, i32* %edi.6.reg2mem
  br label %dec_label_pc_40a74d

dec_label_pc_40a74d:                              ; preds = %dec_label_pc_40a74d.preheader, %dec_label_pc_40a74d
  %edi.6.reload = load i32, i32* %edi.6.reg2mem
  %ecx.6.reload = load i32, i32* %ecx.6.reg2mem
  %79 = inttoptr i32 %edi.6.reload to i8*, !insn.addr !267
  store i8 %78, i8* %79, align 1, !insn.addr !267
  %80 = add i32 %edi.6.reload, 1, !insn.addr !268
  %81 = add i32 %ecx.6.reload, -1, !insn.addr !269
  %82 = and i32 %81, 3, !insn.addr !270
  %83 = icmp eq i32 %82, 0, !insn.addr !270
  %84 = icmp eq i1 %83, false, !insn.addr !271
  store i32 %81, i32* %ecx.6.reg2mem, !insn.addr !271
  store i32 %80, i32* %edi.6.reg2mem, !insn.addr !271
  store i32 %81, i32* %ecx.7.reg2mem, !insn.addr !271
  store i32 %80, i32* %edi.7.reg2mem, !insn.addr !271
  br i1 %84, label %dec_label_pc_40a74d, label %dec_label_pc_40a75b, !insn.addr !271

dec_label_pc_40a75b:                              ; preds = %dec_label_pc_40a74d, %dec_label_pc_40a745
  %edi.7.reload = load i32, i32* %edi.7.reg2mem
  %ecx.7.reload = load i32, i32* %ecx.7.reg2mem
  %85 = and i32 %ecx.7.reload, 4, !insn.addr !272
  %86 = icmp eq i32 %85, 0, !insn.addr !272
  store i32 %ecx.7.reload, i32* %ecx.8.reg2mem, !insn.addr !273
  store i32 %edi.7.reload, i32* %edi.8.reg2mem, !insn.addr !273
  br i1 %86, label %dec_label_pc_40a76b, label %dec_label_pc_40a763, !insn.addr !273

dec_label_pc_40a763:                              ; preds = %dec_label_pc_40a75b
  %87 = inttoptr i32 %edi.7.reload to i32*, !insn.addr !274
  store i32 %3, i32* %87, align 4, !insn.addr !274
  %88 = add i32 %edi.7.reload, 4, !insn.addr !275
  %89 = add i32 %ecx.7.reload, -4, !insn.addr !276
  store i32 %89, i32* %ecx.8.reg2mem, !insn.addr !276
  store i32 %88, i32* %edi.8.reg2mem, !insn.addr !276
  br label %dec_label_pc_40a76b, !insn.addr !276

dec_label_pc_40a76b:                              ; preds = %dec_label_pc_40a763, %dec_label_pc_40a75b
  %edi.8.reload = load i32, i32* %edi.8.reg2mem
  %ecx.8.reload = load i32, i32* %ecx.8.reg2mem
  %90 = icmp ult i32 %ecx.8.reload, 8, !insn.addr !277
  store i32 %ecx.8.reload, i32* %ecx.9.reg2mem, !insn.addr !278
  store i32 %edi.8.reload, i32* %edi.9.reg2mem, !insn.addr !278
  br i1 %90, label %dec_label_pc_40a793, label %dec_label_pc_40a780, !insn.addr !278

dec_label_pc_40a780:                              ; preds = %dec_label_pc_40a76b, %dec_label_pc_40a780
  %edi.9.reload = load i32, i32* %edi.9.reg2mem
  %ecx.9.reload = load i32, i32* %ecx.9.reg2mem
  %91 = inttoptr i32 %edi.9.reload to i32*, !insn.addr !279
  store i32 %3, i32* %91, align 4, !insn.addr !279
  %92 = add i32 %edi.9.reload, 4, !insn.addr !280
  %93 = inttoptr i32 %92 to i32*, !insn.addr !280
  store i32 %3, i32* %93, align 4, !insn.addr !280
  %94 = add i32 %edi.9.reload, 8, !insn.addr !281
  %95 = add i32 %ecx.9.reload, -8, !insn.addr !282
  %96 = icmp ult i32 %95, 8, !insn.addr !283
  %97 = icmp eq i1 %96, false, !insn.addr !284
  store i32 %95, i32* %ecx.9.reg2mem, !insn.addr !284
  store i32 %94, i32* %edi.9.reg2mem, !insn.addr !284
  br i1 %97, label %dec_label_pc_40a780, label %dec_label_pc_40a793, !insn.addr !284

dec_label_pc_40a793:                              ; preds = %dec_label_pc_40a780, %dec_label_pc_40a76b, %dec_label_pc_40a729, %dec_label_pc_40a640
  ret void, !insn.addr !285
}

define i8 @"DNameStatusNode::getLastChar"(i32* %this) local_unnamed_addr {
dec_label_pc_40fec3:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 4, !insn.addr !286
  %2 = inttoptr i32 %1 to i32*, !insn.addr !286
  %3 = load i32, i32* %2, align 4, !insn.addr !286
  %4 = icmp eq i32 %3, 1, !insn.addr !286
  %5 = icmp eq i1 %4, false, !insn.addr !287
  %6 = select i1 %5, i8 0, i8 32, !insn.addr !288
  ret i8 %6, !insn.addr !288
}

define i8 @"charNode::getLastChar"(i32* %this) local_unnamed_addr {
dec_label_pc_40fed2:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 4, !insn.addr !289
  %2 = inttoptr i32 %1 to i8*, !insn.addr !289
  %3 = load i8, i8* %2, align 1, !insn.addr !289
  ret i8 %3, !insn.addr !290
}

define i8 @"pDNameNode::getLastChar"(i32* %this) local_unnamed_addr {
dec_label_pc_40fed6:
  ret i8 0, !insn.addr !291
}

define i8 @"pairNode::getLastChar"(i32* %this) local_unnamed_addr {
dec_label_pc_40fee7:
  %.pre-phi.reg2mem = alloca i8, !insn.addr !292
  %0 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !293
  %1 = trunc i32 %0 to i8
  %2 = icmp eq i8 %1, 0, !insn.addr !294
  %3 = icmp eq i1 %2, false, !insn.addr !295
  store i8 %1, i8* %.pre-phi.reg2mem, !insn.addr !295
  br i1 %3, label %dec_label_pc_40ff18, label %dec_label_pc_40ff04, !insn.addr !295

dec_label_pc_40ff04:                              ; preds = %dec_label_pc_40fee7
  %4 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !296
  %.pre = trunc i32 %4 to i8, !insn.addr !297
  store i8 %.pre, i8* %.pre-phi.reg2mem, !insn.addr !298
  br label %dec_label_pc_40ff18, !insn.addr !298

dec_label_pc_40ff18:                              ; preds = %dec_label_pc_40ff04, %dec_label_pc_40fee7
  %.pre-phi.reload = load i8, i8* %.pre-phi.reg2mem
  ret i8 %.pre-phi.reload, !insn.addr !297
}

define i8 @"pcharNode::getLastChar"(i32* %this) local_unnamed_addr {
dec_label_pc_40ff29:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 8, !insn.addr !299
  %2 = inttoptr i32 %1 to i32*, !insn.addr !299
  %3 = load i32, i32* %2, align 4, !insn.addr !299
  %4 = icmp eq i32 %3, 0, !insn.addr !300
  br i1 %4, label %dec_label_pc_40ff38, label %dec_label_pc_40ff30, !insn.addr !301

dec_label_pc_40ff30:                              ; preds = %dec_label_pc_40ff29
  %5 = add i32 %0, 4, !insn.addr !302
  %6 = inttoptr i32 %5 to i32*, !insn.addr !302
  %7 = load i32, i32* %6, align 4, !insn.addr !302
  %8 = add i32 %3, -1, !insn.addr !303
  %9 = add i32 %8, %7, !insn.addr !303
  %10 = inttoptr i32 %9 to i8*, !insn.addr !303
  %11 = load i8, i8* %10, align 1, !insn.addr !303
  ret i8 %11, !insn.addr !304

dec_label_pc_40ff38:                              ; preds = %dec_label_pc_40ff29
  ret i8 0, !insn.addr !305
}

define i8* @"DNameStatusNode::getString"(i32* %this, i8* %buf, i8* %end) local_unnamed_addr {
dec_label_pc_411849:
  %storemerge.reg2mem = alloca i32, !insn.addr !306
  %ecx.1.reg2mem = alloca i32, !insn.addr !306
  %esi.0.reg2mem = alloca i32, !insn.addr !306
  %ebx.0.reg2mem = alloca i32, !insn.addr !306
  %ecx.0.reg2mem = alloca i32, !insn.addr !306
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 4, !insn.addr !307
  %2 = inttoptr i32 %1 to i32*, !insn.addr !307
  %3 = load i32, i32* %2, align 4, !insn.addr !307
  %4 = icmp eq i32 %3, 1, !insn.addr !307
  %5 = icmp eq i1 %4, false, !insn.addr !308
  br i1 %5, label %dec_label_pc_411888, label %dec_label_pc_411852, !insn.addr !308

dec_label_pc_411852:                              ; preds = %dec_label_pc_411849
  %6 = ptrtoint i8* %buf to i32, !insn.addr !309
  %7 = ptrtoint i32* %this to i32, !insn.addr !310
  %8 = sub i32 %6, %7, !insn.addr !311
  %9 = icmp sgt i32 %8, 3, !insn.addr !312
  store i32 4, i32* %ecx.0.reg2mem, !insn.addr !312
  br i1 %9, label %dec_label_pc_411867, label %dec_label_pc_411861, !insn.addr !312

dec_label_pc_411861:                              ; preds = %dec_label_pc_411852
  %10 = icmp eq i32 %8, 0, !insn.addr !313
  store i32 %8, i32* %ecx.0.reg2mem, !insn.addr !314
  store i32 0, i32* %ecx.1.reg2mem, !insn.addr !314
  br i1 %10, label %dec_label_pc_411883, label %dec_label_pc_411867, !insn.addr !314

dec_label_pc_411867:                              ; preds = %dec_label_pc_411861, %dec_label_pc_411852
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %11 = sub i32 ptrtoint ([5 x i8]* @global_var_47208c to i32), %7, !insn.addr !315
  store i32 %ecx.0.reload, i32* %ebx.0.reg2mem, !insn.addr !316
  store i32 %7, i32* %esi.0.reg2mem, !insn.addr !316
  br label %dec_label_pc_411875, !insn.addr !316

dec_label_pc_411875:                              ; preds = %dec_label_pc_411875, %dec_label_pc_411867
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %12 = add i32 %11, %esi.0.reload, !insn.addr !317
  %13 = inttoptr i32 %12 to i8*, !insn.addr !317
  %14 = load i8, i8* %13, align 1, !insn.addr !317
  %15 = inttoptr i32 %esi.0.reload to i8*, !insn.addr !318
  store i8 %14, i8* %15, align 1, !insn.addr !318
  %16 = add i32 %esi.0.reload, 1, !insn.addr !319
  %17 = add i32 %ebx.0.reload, -1, !insn.addr !320
  %18 = icmp eq i32 %17, 0, !insn.addr !320
  %19 = icmp eq i1 %18, false, !insn.addr !321
  store i32 %17, i32* %ebx.0.reg2mem, !insn.addr !321
  store i32 %16, i32* %esi.0.reg2mem, !insn.addr !321
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !321
  br i1 %19, label %dec_label_pc_411875, label %dec_label_pc_411883, !insn.addr !321

dec_label_pc_411883:                              ; preds = %dec_label_pc_411875, %dec_label_pc_411861
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %20 = add i32 %ecx.1.reload, %7, !insn.addr !322
  store i32 %20, i32* %storemerge.reg2mem, !insn.addr !323
  br label %dec_label_pc_41188b, !insn.addr !323

dec_label_pc_411888:                              ; preds = %dec_label_pc_411849
  %21 = ptrtoint i32* %this to i32, !insn.addr !324
  store i32 %21, i32* %storemerge.reg2mem, !insn.addr !324
  br label %dec_label_pc_41188b, !insn.addr !324

dec_label_pc_41188b:                              ; preds = %dec_label_pc_411888, %dec_label_pc_411883
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %22 = inttoptr i32 %storemerge.reload to i8*, !insn.addr !325
  ret i8* %22, !insn.addr !325
}

define i8* @"charNode::getString"(i32* %this, i8* %buf, i8* %end) local_unnamed_addr {
dec_label_pc_4118a0:
  %eax.0.reg2mem = alloca i32, !insn.addr !326
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = ptrtoint i32* %this to i32
  %2 = bitcast i8* %buf to i32*
  %3 = icmp ugt i32* %2, %this, !insn.addr !327
  %4 = icmp eq i1 %3, false, !insn.addr !328
  store i32 %1, i32* %eax.0.reg2mem, !insn.addr !328
  br i1 %4, label %dec_label_pc_4118b1, label %dec_label_pc_4118ab, !insn.addr !328

dec_label_pc_4118ab:                              ; preds = %dec_label_pc_4118a0
  %5 = add i32 %0, 4, !insn.addr !329
  %6 = inttoptr i32 %5 to i8*, !insn.addr !329
  %7 = load i8, i8* %6, align 1, !insn.addr !329
  %8 = bitcast i32* %this to i8*, !insn.addr !330
  store i8 %7, i8* %8, align 1, !insn.addr !330
  %9 = add i32 %1, 1, !insn.addr !331
  store i32 %9, i32* %eax.0.reg2mem, !insn.addr !331
  br label %dec_label_pc_4118b1, !insn.addr !331

dec_label_pc_4118b1:                              ; preds = %dec_label_pc_4118ab, %dec_label_pc_4118a0
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %10 = inttoptr i32 %eax.0.reload to i8*, !insn.addr !332
  ret i8* %10, !insn.addr !332
}

define i8* @"pDNameNode::getString"(i32* %this, i8* %buf, i8* %end) local_unnamed_addr {
dec_label_pc_4118ba:
  %0 = bitcast i32* %this to i8*
  ret i8* %0, !insn.addr !333
}

define i8* @"pairNode::getString"(i32* %this, i8* %buf, i8* %end) local_unnamed_addr {
dec_label_pc_4118d6:
  %eax.0.reg2mem = alloca i32, !insn.addr !334
  %0 = ptrtoint i8* %buf to i32
  %1 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !335
  %2 = icmp ult i32 %1, %0, !insn.addr !336
  %3 = icmp eq i1 %2, false, !insn.addr !337
  store i32 %1, i32* %eax.0.reg2mem, !insn.addr !337
  br i1 %3, label %dec_label_pc_411915, label %dec_label_pc_4118fd, !insn.addr !337

dec_label_pc_4118fd:                              ; preds = %dec_label_pc_4118d6
  %4 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !338
  store i32 %4, i32* %eax.0.reg2mem, !insn.addr !339
  br label %dec_label_pc_411915, !insn.addr !339

dec_label_pc_411915:                              ; preds = %dec_label_pc_4118fd, %dec_label_pc_4118d6
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %5 = inttoptr i32 %eax.0.reload to i8*, !insn.addr !340
  ret i8* %5, !insn.addr !340
}

define i8* @"pcharNode::getString"(i32* %this, i8* %buf, i8* %end) local_unnamed_addr {
dec_label_pc_41192d:
  unreachable
}

define i32 @"DNameStatusNode::length"(i32* %this) local_unnamed_addr {
dec_label_pc_4131db:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 8, !insn.addr !341
  %2 = inttoptr i32 %1 to i32*, !insn.addr !341
  %3 = load i32, i32* %2, align 4, !insn.addr !341
  ret i32 %3, !insn.addr !342
}

define i32 @"charNode::length"(i32* %this) local_unnamed_addr {
dec_label_pc_4131df:
  ret i32 1, !insn.addr !343
}

define i32 @"pDNameNode::length"(i32* %this) local_unnamed_addr {
dec_label_pc_4131e3:
  ret i32 0, !insn.addr !344
}

define i32 @"pairNode::length"(i32* %this) local_unnamed_addr {
dec_label_pc_4131f4:
  %eax.0.reg2mem = alloca i32, !insn.addr !345
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 12, !insn.addr !346
  %2 = inttoptr i32 %1 to i32*, !insn.addr !346
  %3 = load i32, i32* %2, align 4, !insn.addr !346
  %4 = icmp slt i32 %3, 0, !insn.addr !347
  %5 = icmp eq i1 %4, false, !insn.addr !348
  store i32 %3, i32* %eax.0.reg2mem, !insn.addr !348
  br i1 %5, label %dec_label_pc_41323b, label %dec_label_pc_413202, !insn.addr !348

dec_label_pc_413202:                              ; preds = %dec_label_pc_4131f4
  %6 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !349
  %7 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !350
  %8 = add i32 %7, %6, !insn.addr !351
  store i32 %8, i32* %2, align 4, !insn.addr !352
  store i32 %8, i32* %eax.0.reg2mem, !insn.addr !352
  br label %dec_label_pc_41323b, !insn.addr !352

dec_label_pc_41323b:                              ; preds = %dec_label_pc_413202, %dec_label_pc_4131f4
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !353
}

define i32 @"pcharNode::length"(i32* %this) local_unnamed_addr {
dec_label_pc_41324f:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 8, !insn.addr !354
  %2 = inttoptr i32 %1 to i32*, !insn.addr !354
  %3 = load i32, i32* %2, align 4, !insn.addr !354
  ret i32 %3, !insn.addr !355
}

define i32 @"DNameStatusNode::raw_length"(i32* %this) local_unnamed_addr {
dec_label_pc_4133ae:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 8, !insn.addr !356
  %2 = inttoptr i32 %1 to i32*, !insn.addr !356
  %3 = load i32, i32* %2, align 4, !insn.addr !356
  ret i32 %3, !insn.addr !357
}

define i32 @"charNode::raw_length"(i32* %this) local_unnamed_addr {
dec_label_pc_4133b2:
  ret i32 1, !insn.addr !358
}

define i32 @"pDNameNode::raw_length"(i32* %this) local_unnamed_addr {
dec_label_pc_4133b6:
  ret i32 -1, !insn.addr !359
}

define i32 @"pairNode::raw_length"(i32* %this) local_unnamed_addr {
dec_label_pc_4133ba:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 12, !insn.addr !360
  %2 = inttoptr i32 %1 to i32*, !insn.addr !360
  %3 = load i32, i32* %2, align 4, !insn.addr !360
  ret i32 %3, !insn.addr !361
}

define i32 @"pcharNode::raw_length"(i32* %this) local_unnamed_addr {
dec_label_pc_4133be:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 8, !insn.addr !362
  %2 = inttoptr i32 %1 to i32*, !insn.addr !362
  %3 = load i32, i32* %2, align 4, !insn.addr !362
  ret i32 %3, !insn.addr !363
}

define void @memcpy(i8* %dst, i8* %src, i32 %count) local_unnamed_addr {
dec_label_pc_4142a0:
  %edi.33.reg2mem = alloca i32, !insn.addr !364
  %esi.33.reg2mem = alloca i32, !insn.addr !364
  %eax.9.reg2mem = alloca i32, !insn.addr !364
  %edi.32.reg2mem = alloca i32, !insn.addr !364
  %esi.32.reg2mem = alloca i32, !insn.addr !364
  %edi.31.reg2mem = alloca i32, !insn.addr !364
  %esi.31.reg2mem = alloca i32, !insn.addr !364
  %ecx.24.reg2mem = alloca i32, !insn.addr !364
  %edi.30.reg2mem = alloca i32, !insn.addr !364
  %esi.30.reg2mem = alloca i32, !insn.addr !364
  %ecx.23.reg2mem = alloca i32, !insn.addr !364
  %edi.29.reg2mem = alloca i32, !insn.addr !364
  %esi.29.reg2mem = alloca i32, !insn.addr !364
  %edi.28.reg2mem = alloca i32, !insn.addr !364
  %esi.28.reg2mem = alloca i32, !insn.addr !364
  %ecx.22.reg2mem = alloca i32, !insn.addr !364
  %edi.27.reg2mem = alloca i32, !insn.addr !364
  %esi.27.reg2mem = alloca i32, !insn.addr !364
  %ecx.21.reg2mem = alloca i32, !insn.addr !364
  %edi.26.reg2mem = alloca i32, !insn.addr !364
  %esi.26.reg2mem = alloca i32, !insn.addr !364
  %edx.2.reg2mem = alloca i32, !insn.addr !364
  %ecx.204.reg2mem = alloca i32, !insn.addr !364
  %esi.255.reg2mem = alloca i32, !insn.addr !364
  %edi.256.reg2mem = alloca i32, !insn.addr !364
  %edi.25.reg2mem = alloca i32, !insn.addr !364
  %esi.25.reg2mem = alloca i32, !insn.addr !364
  %edi.24.reg2mem = alloca i32, !insn.addr !364
  %esi.24.reg2mem = alloca i32, !insn.addr !364
  %edx.1.reg2mem = alloca i32, !insn.addr !364
  %edi.23.reg2mem = alloca i32, !insn.addr !364
  %esi.23.reg2mem = alloca i32, !insn.addr !364
  %ecx.19.reg2mem = alloca i32, !insn.addr !364
  %edi.22.reg2mem = alloca i32, !insn.addr !364
  %esi.22.reg2mem = alloca i32, !insn.addr !364
  %ecx.18.reg2mem = alloca i32, !insn.addr !364
  %edi.21.reg2mem = alloca i32, !insn.addr !364
  %esi.21.reg2mem = alloca i32, !insn.addr !364
  %ecx.17.reg2mem = alloca i32, !insn.addr !364
  %edi.20.reg2mem = alloca i32, !insn.addr !364
  %esi.20.reg2mem = alloca i32, !insn.addr !364
  %ecx.16.reg2mem = alloca i32, !insn.addr !364
  %edi.19.reg2mem = alloca i32, !insn.addr !364
  %esi.19.reg2mem = alloca i32, !insn.addr !364
  %ecx.15.reg2mem = alloca i32, !insn.addr !364
  %edi.18.reg2mem = alloca i32, !insn.addr !364
  %esi.18.reg2mem = alloca i32, !insn.addr !364
  %ecx.14.reg2mem = alloca i32, !insn.addr !364
  %edi.17.reg2mem = alloca i32, !insn.addr !364
  %esi.17.reg2mem = alloca i32, !insn.addr !364
  %ecx.13.reg2mem = alloca i32, !insn.addr !364
  %edi.16.reg2mem = alloca i32, !insn.addr !364
  %esi.16.reg2mem = alloca i32, !insn.addr !364
  %ecx.12.reg2mem = alloca i32, !insn.addr !364
  %edi.16.ph.reg2mem = alloca i32, !insn.addr !364
  %esi.16.ph.reg2mem = alloca i32, !insn.addr !364
  %ecx.12.ph.reg2mem = alloca i32, !insn.addr !364
  %edi.15.reg2mem = alloca i32, !insn.addr !364
  %esi.15.reg2mem = alloca i32, !insn.addr !364
  %ecx.11.reg2mem = alloca i32, !insn.addr !364
  %edi.14.reg2mem = alloca i32, !insn.addr !364
  %esi.14.reg2mem = alloca i32, !insn.addr !364
  %ecx.10.reg2mem = alloca i32, !insn.addr !364
  %edi.13.reg2mem = alloca i32, !insn.addr !364
  %esi.13.reg2mem = alloca i32, !insn.addr !364
  %edx.0.reg2mem = alloca i32, !insn.addr !364
  %edi.12.reg2mem = alloca i32, !insn.addr !364
  %esi.12.reg2mem = alloca i32, !insn.addr !364
  %edi.11.reg2mem = alloca i32, !insn.addr !364
  %esi.11.reg2mem = alloca i32, !insn.addr !364
  %edi.10.reg2mem = alloca i32, !insn.addr !364
  %esi.10.reg2mem = alloca i32, !insn.addr !364
  %edi.9.reg2mem = alloca i32, !insn.addr !364
  %esi.9.reg2mem = alloca i32, !insn.addr !364
  %ecx.9.reg2mem = alloca i32, !insn.addr !364
  %edi.8.reg2mem = alloca i32, !insn.addr !364
  %esi.8.reg2mem = alloca i32, !insn.addr !364
  %ecx.8.reg2mem = alloca i32, !insn.addr !364
  %edi.7.reg2mem = alloca i32, !insn.addr !364
  %esi.7.reg2mem = alloca i32, !insn.addr !364
  %ecx.7.reg2mem = alloca i32, !insn.addr !364
  %edi.6.reg2mem = alloca i32, !insn.addr !364
  %esi.6.reg2mem = alloca i32, !insn.addr !364
  %ecx.6.reg2mem = alloca i32, !insn.addr !364
  %edi.5.lcssa.reg2mem = alloca i32, !insn.addr !364
  %esi.5.lcssa.reg2mem = alloca i32, !insn.addr !364
  %ecx.5.lcssa.reg2mem = alloca i32, !insn.addr !364
  %ecx.546.reg2mem = alloca i32, !insn.addr !364
  %esi.547.reg2mem = alloca i32, !insn.addr !364
  %edi.548.reg2mem = alloca i32, !insn.addr !364
  %edi.5.ph.reg2mem = alloca i32, !insn.addr !364
  %esi.5.ph.reg2mem = alloca i32, !insn.addr !364
  %ecx.5.ph.reg2mem = alloca i32, !insn.addr !364
  %edi.4.reg2mem = alloca i32, !insn.addr !364
  %esi.4.reg2mem = alloca i32, !insn.addr !364
  %ecx.4.reg2mem = alloca i32, !insn.addr !364
  %xmm1.2.reg2mem = alloca i128, !insn.addr !364
  %edi.3.reg2mem = alloca i32, !insn.addr !364
  %esi.3.reg2mem = alloca i32, !insn.addr !364
  %ecx.3.reg2mem = alloca i32, !insn.addr !364
  %xmm1.1.reg2mem = alloca i128, !insn.addr !364
  %edi.2.reg2mem = alloca i32, !insn.addr !364
  %esi.2.reg2mem = alloca i32, !insn.addr !364
  %ecx.2.reg2mem = alloca i32, !insn.addr !364
  %xmm1.0.reg2mem = alloca i128, !insn.addr !364
  %edi.1.reg2mem = alloca i32, !insn.addr !364
  %esi.1.reg2mem = alloca i32, !insn.addr !364
  %ecx.1.reg2mem = alloca i32, !insn.addr !364
  %edi.0.reg2mem = alloca i32, !insn.addr !364
  %esi.0.reg2mem = alloca i32, !insn.addr !364
  %ecx.0.reg2mem = alloca i32, !insn.addr !364
  %0 = call i1 @__decompiler_undefined_function_7()
  %1 = ptrtoint i8* %src to i32
  %2 = ptrtoint i8* %dst to i32
  %3 = add i32 %1, %count, !insn.addr !365
  %4 = icmp ugt i8* %dst, %src
  %5 = icmp ugt i32 %3, %2, !insn.addr !366
  %or.cond = icmp eq i1 %4, %5
  br i1 %or.cond, label %dec_label_pc_414554, label %dec_label_pc_4142c0, !insn.addr !367

dec_label_pc_4142c0:                              ; preds = %dec_label_pc_4142a0
  %6 = icmp ult i32 %count, 32, !insn.addr !368
  store i32 %count, i32* %ecx.21.reg2mem, !insn.addr !369
  store i32 %1, i32* %esi.27.reg2mem, !insn.addr !369
  store i32 %2, i32* %edi.27.reg2mem, !insn.addr !369
  br i1 %6, label %dec_label_pc_41479b, label %dec_label_pc_4142c9, !insn.addr !369

dec_label_pc_4142c9:                              ; preds = %dec_label_pc_4142c0
  %7 = icmp ult i32 %count, 128, !insn.addr !370
  %8 = icmp eq i1 %7, false, !insn.addr !371
  br i1 %8, label %dec_label_pc_4142e4, label %dec_label_pc_4142d1, !insn.addr !371

dec_label_pc_4142d1:                              ; preds = %dec_label_pc_4142c9
  %9 = load i32, i32* @__isa_enabled, align 4, !insn.addr !372
  %10 = and i32 %9, 2, !insn.addr !372
  %11 = icmp eq i32 %10, 0, !insn.addr !372
  store i32 %2, i32* %edi.256.reg2mem, !insn.addr !373
  store i32 %1, i32* %esi.255.reg2mem, !insn.addr !373
  store i32 %count, i32* %ecx.204.reg2mem, !insn.addr !373
  br i1 %11, label %dec_label_pc_4144c7, label %dec_label_pc_414771, !insn.addr !373

dec_label_pc_4142e4:                              ; preds = %dec_label_pc_4142c9
  %12 = load i32, i32* @__favor, align 4, !insn.addr !374
  %13 = and i32 %12, 2, !insn.addr !374
  %14 = icmp ne i32 %13, 0, !insn.addr !374
  %15 = icmp eq i1 %14, false, !insn.addr !375
  br i1 %15, label %dec_label_pc_4142f7, label %dec_label_pc_4142ee, !insn.addr !375

dec_label_pc_4142ee:                              ; preds = %dec_label_pc_4142e4
  call void @__asm_rep_movsb_memcpy(i8* %dst, i8* %src, i32 %count), !insn.addr !376
  ret void, !insn.addr !377

dec_label_pc_4142f7:                              ; preds = %dec_label_pc_4142e4
  %16 = xor i32 %1, %2, !insn.addr !378
  %17 = and i32 %16, 15, !insn.addr !379
  %18 = icmp eq i32 %17, 0, !insn.addr !379
  %19 = icmp eq i1 %18, false, !insn.addr !380
  br i1 %19, label %dec_label_pc_414310, label %dec_label_pc_414302, !insn.addr !380

dec_label_pc_414302:                              ; preds = %dec_label_pc_4142f7
  %20 = load i32, i32* @__isa_enabled, align 4, !insn.addr !381
  %21 = and i32 %20, 2, !insn.addr !381
  %22 = icmp eq i32 %21, 0, !insn.addr !381
  br i1 %22, label %dec_label_pc_414310, label %dec_label_pc_4146f0, !insn.addr !382

dec_label_pc_414310:                              ; preds = %dec_label_pc_414302, %dec_label_pc_4142f7
  %23 = and i32 %12, 1, !insn.addr !383
  %24 = icmp ne i32 %23, 0, !insn.addr !383
  %25 = icmp eq i1 %24, false, !insn.addr !384
  br i1 %25, label %dec_label_pc_4144c7, label %dec_label_pc_41431e, !insn.addr !384

dec_label_pc_41431e:                              ; preds = %dec_label_pc_414310
  %26 = and i32 %2, 3, !insn.addr !385
  %27 = icmp eq i32 %26, 0, !insn.addr !385
  %28 = icmp eq i1 %27, false, !insn.addr !386
  br i1 %28, label %dec_label_pc_4144c7, label %dec_label_pc_41432a, !insn.addr !386

dec_label_pc_41432a:                              ; preds = %dec_label_pc_41431e
  %29 = and i32 %1, 3, !insn.addr !387
  %30 = icmp eq i32 %29, 0, !insn.addr !387
  %31 = icmp eq i1 %30, false, !insn.addr !388
  store i32 %count, i32* %ecx.9.reg2mem, !insn.addr !388
  store i32 %1, i32* %esi.9.reg2mem, !insn.addr !388
  store i32 %2, i32* %edi.9.reg2mem, !insn.addr !388
  br i1 %31, label %dec_label_pc_4144e2, label %dec_label_pc_414336, !insn.addr !388

dec_label_pc_414336:                              ; preds = %dec_label_pc_41432a
  %32 = and i32 %2, 4, !insn.addr !389
  %33 = icmp ne i32 %32, 0, !insn.addr !389
  %34 = icmp eq i1 %33, false, !insn.addr !390
  store i32 %count, i32* %ecx.0.reg2mem, !insn.addr !390
  store i32 %1, i32* %esi.0.reg2mem, !insn.addr !390
  store i32 %2, i32* %edi.0.reg2mem, !insn.addr !390
  br i1 %34, label %dec_label_pc_414349, label %dec_label_pc_41433c, !insn.addr !390

dec_label_pc_41433c:                              ; preds = %dec_label_pc_414336
  %35 = bitcast i8* %src to i32*, !insn.addr !391
  %36 = load i32, i32* %35, align 4, !insn.addr !391
  %37 = add i32 %count, -4, !insn.addr !392
  %38 = add i32 %1, 4, !insn.addr !393
  %39 = bitcast i8* %dst to i32*, !insn.addr !394
  store i32 %36, i32* %39, align 4, !insn.addr !394
  %40 = add i32 %2, 4, !insn.addr !395
  store i32 %37, i32* %ecx.0.reg2mem, !insn.addr !395
  store i32 %38, i32* %esi.0.reg2mem, !insn.addr !395
  store i32 %40, i32* %edi.0.reg2mem, !insn.addr !395
  br label %dec_label_pc_414349, !insn.addr !395

dec_label_pc_414349:                              ; preds = %dec_label_pc_41433c, %dec_label_pc_414336
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %41 = and i32 %edi.0.reload, 8, !insn.addr !396
  %42 = icmp ne i32 %41, 0, !insn.addr !396
  %43 = icmp eq i1 %42, false, !insn.addr !397
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !397
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !397
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !397
  br i1 %43, label %dec_label_pc_414360, label %dec_label_pc_41434f, !insn.addr !397

dec_label_pc_41434f:                              ; preds = %dec_label_pc_414349
  %44 = inttoptr i32 %esi.0.reload to i64*, !insn.addr !398
  %45 = load i64, i64* %44, align 4, !insn.addr !398
  %46 = call i128 @__asm_movq(i64 %45), !insn.addr !398
  %47 = add i32 %ecx.0.reload, -8, !insn.addr !399
  %48 = add i32 %esi.0.reload, 8, !insn.addr !400
  %49 = inttoptr i32 %edi.0.reload to i64*, !insn.addr !401
  %50 = load i64, i64* %49, align 4, !insn.addr !401
  call void @__asm_movq.7(i64 %50, i128 %46), !insn.addr !401
  %51 = add i32 %edi.0.reload, 8, !insn.addr !402
  store i32 %47, i32* %ecx.1.reg2mem, !insn.addr !402
  store i32 %48, i32* %esi.1.reg2mem, !insn.addr !402
  store i32 %51, i32* %edi.1.reg2mem, !insn.addr !402
  br label %dec_label_pc_414360, !insn.addr !402

dec_label_pc_414360:                              ; preds = %dec_label_pc_41434f, %dec_label_pc_414349
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %52 = and i32 %esi.1.reload, 7, !insn.addr !403
  %53 = icmp eq i32 %52, 0, !insn.addr !403
  br i1 %53, label %dec_label_pc_4143cd, label %dec_label_pc_414368, !insn.addr !404

dec_label_pc_414368:                              ; preds = %dec_label_pc_414360
  %54 = and i32 %esi.1.reload, 8, !insn.addr !405
  %55 = icmp ne i32 %54, 0, !insn.addr !405
  %56 = icmp eq i1 %55, false, !insn.addr !406
  br i1 %56, label %dec_label_pc_414426, label %dec_label_pc_414372, !insn.addr !406

dec_label_pc_414372:                              ; preds = %dec_label_pc_414368
  %57 = add i32 %esi.1.reload, -12, !insn.addr !407
  %58 = inttoptr i32 %57 to i128*, !insn.addr !407
  %59 = load i128, i128* %58, align 4, !insn.addr !407
  %60 = call i128 @__asm_movdqa.8(i128 %59), !insn.addr !407
  store i128 %60, i128* %xmm1.0.reg2mem, !insn.addr !408
  store i32 %ecx.1.reload, i32* %ecx.2.reg2mem, !insn.addr !408
  store i32 %57, i32* %esi.2.reg2mem, !insn.addr !408
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !408
  br label %dec_label_pc_41437c, !insn.addr !408

dec_label_pc_41437c:                              ; preds = %dec_label_pc_41437c, %dec_label_pc_414372
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %xmm1.0.reload = load i128, i128* %xmm1.0.reg2mem
  %61 = add i32 %esi.2.reload, 16, !insn.addr !409
  %62 = inttoptr i32 %61 to i128*, !insn.addr !409
  %63 = load i128, i128* %62, align 4, !insn.addr !409
  %64 = call i128 @__asm_movdqa.8(i128 %63), !insn.addr !409
  %65 = add i32 %ecx.2.reload, -48, !insn.addr !410
  %66 = add i32 %esi.2.reload, 32, !insn.addr !411
  %67 = inttoptr i32 %66 to i128*, !insn.addr !411
  %68 = load i128, i128* %67, align 4, !insn.addr !411
  %69 = call i128 @__asm_movdqa.8(i128 %68), !insn.addr !411
  %70 = add i32 %esi.2.reload, 48, !insn.addr !412
  %71 = inttoptr i32 %70 to i128*, !insn.addr !412
  %72 = load i128, i128* %71, align 4, !insn.addr !412
  %73 = call i128 @__asm_movdqa.8(i128 %72), !insn.addr !412
  %74 = icmp ult i32 %65, 48, !insn.addr !413
  %75 = call i128 @__asm_movdqa.8(i128 %64), !insn.addr !414
  %76 = call i128 @__asm_palignr(i128 %64, i128 %xmm1.0.reload, i32 12), !insn.addr !415
  %77 = inttoptr i32 %edi.2.reload to i128*, !insn.addr !416
  %78 = load i128, i128* %77, align 4, !insn.addr !416
  call void @__asm_movdqa(i128 %78, i128 %76), !insn.addr !416
  %79 = call i128 @__asm_movdqa.8(i128 %69), !insn.addr !417
  %80 = call i128 @__asm_palignr(i128 %69, i128 %75, i32 12), !insn.addr !418
  %81 = add i32 %edi.2.reload, 16, !insn.addr !419
  %82 = inttoptr i32 %81 to i128*, !insn.addr !419
  %83 = load i128, i128* %82, align 4, !insn.addr !419
  call void @__asm_movdqa(i128 %83, i128 %80), !insn.addr !419
  %84 = call i128 @__asm_movdqa.8(i128 %73), !insn.addr !420
  %85 = call i128 @__asm_palignr(i128 %73, i128 %79, i32 12), !insn.addr !421
  %86 = add i32 %edi.2.reload, 32, !insn.addr !422
  %87 = inttoptr i32 %86 to i128*, !insn.addr !422
  %88 = load i128, i128* %87, align 4, !insn.addr !422
  call void @__asm_movdqa(i128 %88, i128 %85), !insn.addr !422
  %89 = add i32 %edi.2.reload, 48, !insn.addr !423
  %90 = icmp eq i1 %74, false, !insn.addr !424
  store i128 %84, i128* %xmm1.0.reg2mem, !insn.addr !424
  store i32 %65, i32* %ecx.2.reg2mem, !insn.addr !424
  store i32 %70, i32* %esi.2.reg2mem, !insn.addr !424
  store i32 %89, i32* %edi.2.reg2mem, !insn.addr !424
  br i1 %90, label %dec_label_pc_41437c, label %dec_label_pc_4143c5, !insn.addr !424

dec_label_pc_4143c5:                              ; preds = %dec_label_pc_41437c
  %91 = add i32 %esi.2.reload, 60, !insn.addr !425
  store i32 %65, i32* %ecx.5.ph.reg2mem, !insn.addr !426
  store i32 %91, i32* %esi.5.ph.reg2mem, !insn.addr !426
  store i32 %89, i32* %edi.5.ph.reg2mem, !insn.addr !426
  br label %dec_label_pc_41447c.preheader, !insn.addr !426

dec_label_pc_4143cd:                              ; preds = %dec_label_pc_414360
  %92 = add i32 %esi.1.reload, -8, !insn.addr !427
  %93 = inttoptr i32 %92 to i128*, !insn.addr !427
  %94 = load i128, i128* %93, align 4, !insn.addr !427
  %95 = call i128 @__asm_movdqa.8(i128 %94), !insn.addr !427
  store i128 %95, i128* %xmm1.1.reg2mem, !insn.addr !428
  store i32 %ecx.1.reload, i32* %ecx.3.reg2mem, !insn.addr !428
  store i32 %92, i32* %esi.3.reg2mem, !insn.addr !428
  store i32 %edi.1.reload, i32* %edi.3.reg2mem, !insn.addr !428
  br label %dec_label_pc_4143d8, !insn.addr !428

dec_label_pc_4143d8:                              ; preds = %dec_label_pc_4143d8, %dec_label_pc_4143cd
  %edi.3.reload = load i32, i32* %edi.3.reg2mem
  %esi.3.reload = load i32, i32* %esi.3.reg2mem
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %xmm1.1.reload = load i128, i128* %xmm1.1.reg2mem
  %96 = add i32 %esi.3.reload, 16, !insn.addr !429
  %97 = inttoptr i32 %96 to i128*, !insn.addr !429
  %98 = load i128, i128* %97, align 4, !insn.addr !429
  %99 = call i128 @__asm_movdqa.8(i128 %98), !insn.addr !429
  %100 = add i32 %ecx.3.reload, -48, !insn.addr !430
  %101 = add i32 %esi.3.reload, 32, !insn.addr !431
  %102 = inttoptr i32 %101 to i128*, !insn.addr !431
  %103 = load i128, i128* %102, align 4, !insn.addr !431
  %104 = call i128 @__asm_movdqa.8(i128 %103), !insn.addr !431
  %105 = add i32 %esi.3.reload, 48, !insn.addr !432
  %106 = inttoptr i32 %105 to i128*, !insn.addr !432
  %107 = load i128, i128* %106, align 4, !insn.addr !432
  %108 = call i128 @__asm_movdqa.8(i128 %107), !insn.addr !432
  %109 = icmp ult i32 %100, 48, !insn.addr !433
  %110 = call i128 @__asm_movdqa.8(i128 %99), !insn.addr !434
  %111 = call i128 @__asm_palignr(i128 %99, i128 %xmm1.1.reload, i32 8), !insn.addr !435
  %112 = inttoptr i32 %edi.3.reload to i128*, !insn.addr !436
  %113 = load i128, i128* %112, align 4, !insn.addr !436
  call void @__asm_movdqa(i128 %113, i128 %111), !insn.addr !436
  %114 = call i128 @__asm_movdqa.8(i128 %104), !insn.addr !437
  %115 = call i128 @__asm_palignr(i128 %104, i128 %110, i32 8), !insn.addr !438
  %116 = add i32 %edi.3.reload, 16, !insn.addr !439
  %117 = inttoptr i32 %116 to i128*, !insn.addr !439
  %118 = load i128, i128* %117, align 4, !insn.addr !439
  call void @__asm_movdqa(i128 %118, i128 %115), !insn.addr !439
  %119 = call i128 @__asm_movdqa.8(i128 %108), !insn.addr !440
  %120 = call i128 @__asm_palignr(i128 %108, i128 %114, i32 8), !insn.addr !441
  %121 = add i32 %edi.3.reload, 32, !insn.addr !442
  %122 = inttoptr i32 %121 to i128*, !insn.addr !442
  %123 = load i128, i128* %122, align 4, !insn.addr !442
  call void @__asm_movdqa(i128 %123, i128 %120), !insn.addr !442
  %124 = add i32 %edi.3.reload, 48, !insn.addr !443
  %125 = icmp eq i1 %109, false, !insn.addr !444
  store i128 %119, i128* %xmm1.1.reg2mem, !insn.addr !444
  store i32 %100, i32* %ecx.3.reg2mem, !insn.addr !444
  store i32 %105, i32* %esi.3.reg2mem, !insn.addr !444
  store i32 %124, i32* %edi.3.reg2mem, !insn.addr !444
  br i1 %125, label %dec_label_pc_4143d8, label %dec_label_pc_414421, !insn.addr !444

dec_label_pc_414421:                              ; preds = %dec_label_pc_4143d8
  %126 = add i32 %esi.3.reload, 56, !insn.addr !445
  store i32 %100, i32* %ecx.5.ph.reg2mem, !insn.addr !446
  store i32 %126, i32* %esi.5.ph.reg2mem, !insn.addr !446
  store i32 %124, i32* %edi.5.ph.reg2mem, !insn.addr !446
  br label %dec_label_pc_41447c.preheader, !insn.addr !446

dec_label_pc_414426:                              ; preds = %dec_label_pc_414368
  %127 = add i32 %esi.1.reload, -4, !insn.addr !447
  %128 = inttoptr i32 %127 to i128*, !insn.addr !447
  %129 = load i128, i128* %128, align 4, !insn.addr !447
  %130 = call i128 @__asm_movdqa.8(i128 %129), !insn.addr !447
  store i128 %130, i128* %xmm1.2.reg2mem, !insn.addr !448
  store i32 %ecx.1.reload, i32* %ecx.4.reg2mem, !insn.addr !448
  store i32 %127, i32* %esi.4.reg2mem, !insn.addr !448
  store i32 %edi.1.reload, i32* %edi.4.reg2mem, !insn.addr !448
  br label %dec_label_pc_414430, !insn.addr !448

dec_label_pc_414430:                              ; preds = %dec_label_pc_414430, %dec_label_pc_414426
  %edi.4.reload = load i32, i32* %edi.4.reg2mem
  %esi.4.reload = load i32, i32* %esi.4.reg2mem
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %xmm1.2.reload = load i128, i128* %xmm1.2.reg2mem
  %131 = add i32 %esi.4.reload, 16, !insn.addr !449
  %132 = inttoptr i32 %131 to i128*, !insn.addr !449
  %133 = load i128, i128* %132, align 4, !insn.addr !449
  %134 = call i128 @__asm_movdqa.8(i128 %133), !insn.addr !449
  %135 = add i32 %ecx.4.reload, -48, !insn.addr !450
  %136 = add i32 %esi.4.reload, 32, !insn.addr !451
  %137 = inttoptr i32 %136 to i128*, !insn.addr !451
  %138 = load i128, i128* %137, align 4, !insn.addr !451
  %139 = call i128 @__asm_movdqa.8(i128 %138), !insn.addr !451
  %140 = add i32 %esi.4.reload, 48, !insn.addr !452
  %141 = inttoptr i32 %140 to i128*, !insn.addr !452
  %142 = load i128, i128* %141, align 4, !insn.addr !452
  %143 = call i128 @__asm_movdqa.8(i128 %142), !insn.addr !452
  %144 = icmp ult i32 %135, 48, !insn.addr !453
  %145 = call i128 @__asm_movdqa.8(i128 %134), !insn.addr !454
  %146 = call i128 @__asm_palignr(i128 %134, i128 %xmm1.2.reload, i32 4), !insn.addr !455
  %147 = inttoptr i32 %edi.4.reload to i128*, !insn.addr !456
  %148 = load i128, i128* %147, align 4, !insn.addr !456
  call void @__asm_movdqa(i128 %148, i128 %146), !insn.addr !456
  %149 = call i128 @__asm_movdqa.8(i128 %139), !insn.addr !457
  %150 = call i128 @__asm_palignr(i128 %139, i128 %145, i32 4), !insn.addr !458
  %151 = add i32 %edi.4.reload, 16, !insn.addr !459
  %152 = inttoptr i32 %151 to i128*, !insn.addr !459
  %153 = load i128, i128* %152, align 4, !insn.addr !459
  call void @__asm_movdqa(i128 %153, i128 %150), !insn.addr !459
  %154 = call i128 @__asm_movdqa.8(i128 %143), !insn.addr !460
  %155 = call i128 @__asm_palignr(i128 %143, i128 %149, i32 4), !insn.addr !461
  %156 = add i32 %edi.4.reload, 32, !insn.addr !462
  %157 = inttoptr i32 %156 to i128*, !insn.addr !462
  %158 = load i128, i128* %157, align 4, !insn.addr !462
  call void @__asm_movdqa(i128 %158, i128 %155), !insn.addr !462
  %159 = add i32 %edi.4.reload, 48, !insn.addr !463
  %160 = icmp eq i1 %144, false, !insn.addr !464
  store i128 %154, i128* %xmm1.2.reg2mem, !insn.addr !464
  store i32 %135, i32* %ecx.4.reg2mem, !insn.addr !464
  store i32 %140, i32* %esi.4.reg2mem, !insn.addr !464
  store i32 %159, i32* %edi.4.reg2mem, !insn.addr !464
  br i1 %160, label %dec_label_pc_414430, label %dec_label_pc_414479, !insn.addr !464

dec_label_pc_414479:                              ; preds = %dec_label_pc_414430
  %161 = add i32 %esi.4.reload, 52, !insn.addr !465
  store i32 %135, i32* %ecx.5.ph.reg2mem, !insn.addr !465
  store i32 %161, i32* %esi.5.ph.reg2mem, !insn.addr !465
  store i32 %159, i32* %edi.5.ph.reg2mem, !insn.addr !465
  br label %dec_label_pc_41447c.preheader, !insn.addr !465

dec_label_pc_41447c.preheader:                    ; preds = %dec_label_pc_4143c5, %dec_label_pc_414421, %dec_label_pc_414479
  %edi.5.ph.reload = load i32, i32* %edi.5.ph.reg2mem
  %esi.5.ph.reload = load i32, i32* %esi.5.ph.reg2mem
  %ecx.5.ph.reload = load i32, i32* %ecx.5.ph.reg2mem
  %162 = icmp ult i32 %ecx.5.ph.reload, 16, !insn.addr !466
  store i32 %edi.5.ph.reload, i32* %edi.548.reg2mem, !insn.addr !467
  store i32 %esi.5.ph.reload, i32* %esi.547.reg2mem, !insn.addr !467
  store i32 %ecx.5.ph.reload, i32* %ecx.546.reg2mem, !insn.addr !467
  store i32 %ecx.5.ph.reload, i32* %ecx.5.lcssa.reg2mem, !insn.addr !467
  store i32 %esi.5.ph.reload, i32* %esi.5.lcssa.reg2mem, !insn.addr !467
  store i32 %edi.5.ph.reload, i32* %edi.5.lcssa.reg2mem, !insn.addr !467
  br i1 %162, label %dec_label_pc_414494, label %dec_label_pc_414481, !insn.addr !467

dec_label_pc_414481:                              ; preds = %dec_label_pc_41447c.preheader, %dec_label_pc_414481
  %ecx.546.reload = load i32, i32* %ecx.546.reg2mem
  %esi.547.reload = load i32, i32* %esi.547.reg2mem
  %edi.548.reload = load i32, i32* %edi.548.reg2mem
  %163 = inttoptr i32 %esi.547.reload to i128*, !insn.addr !468
  %164 = load i128, i128* %163, align 4, !insn.addr !468
  %165 = call i128 @__asm_movdqu.5(i128 %164), !insn.addr !468
  %166 = add i32 %ecx.546.reload, -16, !insn.addr !469
  %167 = add i32 %esi.547.reload, 16, !insn.addr !470
  %168 = inttoptr i32 %edi.548.reload to i128*, !insn.addr !471
  %169 = load i128, i128* %168, align 4, !insn.addr !471
  call void @__asm_movdqa(i128 %169, i128 %165), !insn.addr !471
  %170 = add i32 %edi.548.reload, 16, !insn.addr !472
  %171 = icmp ult i32 %166, 16, !insn.addr !466
  store i32 %170, i32* %edi.548.reg2mem, !insn.addr !467
  store i32 %167, i32* %esi.547.reg2mem, !insn.addr !467
  store i32 %166, i32* %ecx.546.reg2mem, !insn.addr !467
  br i1 %171, label %dec_label_pc_41447c.dec_label_pc_414494_crit_edge, label %dec_label_pc_414481, !insn.addr !467

dec_label_pc_41447c.dec_label_pc_414494_crit_edge: ; preds = %dec_label_pc_414481
  %172 = and i32 %ecx.5.ph.reload, 15
  store i32 %172, i32* %ecx.5.lcssa.reg2mem
  store i32 %167, i32* %esi.5.lcssa.reg2mem
  store i32 %170, i32* %edi.5.lcssa.reg2mem
  br label %dec_label_pc_414494

dec_label_pc_414494:                              ; preds = %dec_label_pc_41447c.dec_label_pc_414494_crit_edge, %dec_label_pc_41447c.preheader
  %edi.5.lcssa.reload = load i32, i32* %edi.5.lcssa.reg2mem
  %esi.5.lcssa.reload = load i32, i32* %esi.5.lcssa.reg2mem
  %ecx.5.lcssa.reload = load i32, i32* %ecx.5.lcssa.reg2mem
  %173 = and i32 %ecx.5.lcssa.reload, 4, !insn.addr !473
  %174 = icmp ne i32 %173, 0, !insn.addr !473
  %175 = icmp eq i1 %174, false, !insn.addr !474
  store i32 %ecx.5.lcssa.reload, i32* %ecx.6.reg2mem, !insn.addr !474
  store i32 %esi.5.lcssa.reload, i32* %esi.6.reg2mem, !insn.addr !474
  store i32 %edi.5.lcssa.reload, i32* %edi.6.reg2mem, !insn.addr !474
  br i1 %175, label %dec_label_pc_4144a7, label %dec_label_pc_41449a, !insn.addr !474

dec_label_pc_41449a:                              ; preds = %dec_label_pc_414494
  %176 = inttoptr i32 %esi.5.lcssa.reload to i32*, !insn.addr !475
  %177 = load i32, i32* %176, align 4, !insn.addr !475
  %178 = add i32 %ecx.5.lcssa.reload, -4, !insn.addr !476
  %179 = add i32 %esi.5.lcssa.reload, 4, !insn.addr !477
  %180 = inttoptr i32 %edi.5.lcssa.reload to i32*, !insn.addr !478
  store i32 %177, i32* %180, align 4, !insn.addr !478
  %181 = add i32 %edi.5.lcssa.reload, 4, !insn.addr !479
  store i32 %178, i32* %ecx.6.reg2mem, !insn.addr !479
  store i32 %179, i32* %esi.6.reg2mem, !insn.addr !479
  store i32 %181, i32* %edi.6.reg2mem, !insn.addr !479
  br label %dec_label_pc_4144a7, !insn.addr !479

dec_label_pc_4144a7:                              ; preds = %dec_label_pc_41449a, %dec_label_pc_414494
  %edi.6.reload = load i32, i32* %edi.6.reg2mem
  %esi.6.reload = load i32, i32* %esi.6.reg2mem
  %ecx.6.reload = load i32, i32* %ecx.6.reg2mem
  store i32 %ecx.6.reload, i32* %ecx.7.reg2mem
  store i32 %esi.6.reload, i32* %esi.7.reg2mem
  store i32 %edi.6.reload, i32* %edi.7.reg2mem
  br label %dec_label_pc_4144be

dec_label_pc_4144ad:                              ; preds = %dec_label_pc_4144be
  %182 = inttoptr i32 %esi.7.reload to i64*, !insn.addr !480
  %183 = load i64, i64* %182, align 4, !insn.addr !480
  %184 = call i128 @__asm_movq(i64 %183), !insn.addr !480
  %185 = add i32 %ecx.7.reload, -8, !insn.addr !481
  %186 = add i32 %esi.7.reload, 8, !insn.addr !482
  %187 = inttoptr i32 %edi.7.reload to i64*, !insn.addr !483
  %188 = load i64, i64* %187, align 4, !insn.addr !483
  call void @__asm_movq.7(i64 %188, i128 %184), !insn.addr !483
  %189 = add i32 %edi.7.reload, 8, !insn.addr !484
  store i32 %185, i32* %ecx.7.reg2mem, !insn.addr !484
  store i32 %186, i32* %esi.7.reg2mem, !insn.addr !484
  store i32 %189, i32* %edi.7.reg2mem, !insn.addr !484
  br label %dec_label_pc_4144be, !insn.addr !484

dec_label_pc_4144be:                              ; preds = %dec_label_pc_4144a7, %dec_label_pc_4144ad
  %edi.7.reload = load i32, i32* %edi.7.reg2mem
  %esi.7.reload = load i32, i32* %esi.7.reg2mem
  %ecx.7.reload = load i32, i32* %ecx.7.reg2mem
  store i32 %ecx.7.reload, i32* @2, align 4, !insn.addr !485
  store i32 %esi.7.reload, i32* %esi.10.reg2mem, !insn.addr !486
  store i32 %edi.7.reload, i32* %edi.10.reg2mem, !insn.addr !486
  store i32 %esi.7.reload, i32* %esi.11.reg2mem, !insn.addr !486
  store i32 %edi.7.reload, i32* %edi.11.reg2mem, !insn.addr !486
  store i32 %esi.7.reload, i32* %esi.12.reg2mem, !insn.addr !486
  store i32 %edi.7.reload, i32* %edi.12.reg2mem, !insn.addr !486
  switch i32 %ecx.7.reload, label %dec_label_pc_4144ad [
    i32 0, label %dec_label_pc_414514
    i32 1, label %dec_label_pc_41451c
    i32 2, label %dec_label_pc_414528
    i32 3, label %dec_label_pc_41453c
  ], !insn.addr !486

dec_label_pc_4144c7:                              ; preds = %dec_label_pc_4142d1, %dec_label_pc_41431e, %dec_label_pc_414310
  %190 = and i32 %2, 3, !insn.addr !487
  %191 = icmp eq i32 %190, 0, !insn.addr !487
  store i32 %count, i32* %ecx.8.reg2mem, !insn.addr !488
  store i32 %1, i32* %esi.8.reg2mem, !insn.addr !488
  store i32 %2, i32* %edi.8.reg2mem, !insn.addr !488
  store i32 %count, i32* %ecx.9.reg2mem, !insn.addr !488
  store i32 %1, i32* %esi.9.reg2mem, !insn.addr !488
  store i32 %2, i32* %edi.9.reg2mem, !insn.addr !488
  br i1 %191, label %dec_label_pc_4144e2, label %dec_label_pc_4144cf, !insn.addr !488

dec_label_pc_4144cf:                              ; preds = %dec_label_pc_4144c7, %dec_label_pc_4144cf
  %edi.8.reload = load i32, i32* %edi.8.reg2mem
  %esi.8.reload = load i32, i32* %esi.8.reg2mem
  %ecx.8.reload = load i32, i32* %ecx.8.reg2mem
  %192 = inttoptr i32 %esi.8.reload to i8*, !insn.addr !489
  %193 = load i8, i8* %192, align 1, !insn.addr !489
  %194 = inttoptr i32 %edi.8.reload to i8*, !insn.addr !490
  store i8 %193, i8* %194, align 1, !insn.addr !490
  %195 = add i32 %ecx.8.reload, -1, !insn.addr !491
  %196 = add i32 %esi.8.reload, 1, !insn.addr !492
  %197 = add i32 %edi.8.reload, 1, !insn.addr !493
  %198 = and i32 %197, 3, !insn.addr !494
  %199 = icmp eq i32 %198, 0, !insn.addr !494
  %200 = icmp eq i1 %199, false, !insn.addr !495
  store i32 %195, i32* %ecx.8.reg2mem, !insn.addr !495
  store i32 %196, i32* %esi.8.reg2mem, !insn.addr !495
  store i32 %197, i32* %edi.8.reg2mem, !insn.addr !495
  store i32 %195, i32* %ecx.9.reg2mem, !insn.addr !495
  store i32 %196, i32* %esi.9.reg2mem, !insn.addr !495
  store i32 %197, i32* %edi.9.reg2mem, !insn.addr !495
  br i1 %200, label %dec_label_pc_4144cf, label %dec_label_pc_4144e2, !insn.addr !495

dec_label_pc_4144e2:                              ; preds = %dec_label_pc_4144cf, %dec_label_pc_4144c7, %dec_label_pc_41432a
  %edi.9.reload = load i32, i32* %edi.9.reg2mem
  %esi.9.reload = load i32, i32* %esi.9.reg2mem
  %ecx.9.reload = load i32, i32* %ecx.9.reg2mem
  %201 = udiv i32 %ecx.9.reload, 4, !insn.addr !496
  %202 = inttoptr i32 %esi.9.reload to i8*, !insn.addr !497
  %203 = inttoptr i32 %edi.9.reload to i8*, !insn.addr !497
  call void @__asm_rep_movsd_memcpy(i8* %203, i8* %202, i32 %201), !insn.addr !497
  %204 = select i1 %0, i32 -4, i32 4, !insn.addr !497
  %205 = mul i32 %201, %204, !insn.addr !497
  %206 = add i32 %edi.9.reload, %205, !insn.addr !497
  %207 = and i32 %ecx.9.reload, 3, !insn.addr !498
  store i32 %207, i32* @3, align 4, !insn.addr !499
  store i32 %206, i32* %esi.10.reg2mem, !insn.addr !499
  store i32 %206, i32* %edi.10.reg2mem, !insn.addr !499
  store i32 %206, i32* %esi.11.reg2mem, !insn.addr !499
  store i32 %206, i32* %edi.11.reg2mem, !insn.addr !499
  store i32 %206, i32* %esi.12.reg2mem, !insn.addr !499
  store i32 %206, i32* %edi.12.reg2mem, !insn.addr !499
  switch i32 %207, label %dec_label_pc_41479b3 [
    i32 0, label %dec_label_pc_414514
    i32 1, label %dec_label_pc_41451c
    i32 2, label %dec_label_pc_414528
    i32 3, label %dec_label_pc_41453c
  ], !insn.addr !499

dec_label_pc_414514:                              ; preds = %dec_label_pc_4144be, %dec_label_pc_4147bd, %dec_label_pc_4146d5, %dec_label_pc_414596, %dec_label_pc_41476d, %dec_label_pc_41479b, %dec_label_pc_4147b6, %dec_label_pc_4146d1, %dec_label_pc_4144e2
  ret void, !insn.addr !500

dec_label_pc_41451c:                              ; preds = %dec_label_pc_4144be, %dec_label_pc_4144e2
  %edi.10.reload = load i32, i32* %edi.10.reg2mem
  %esi.10.reload = load i32, i32* %esi.10.reg2mem
  %208 = inttoptr i32 %esi.10.reload to i8*, !insn.addr !501
  %209 = load i8, i8* %208, align 1, !insn.addr !501
  %210 = inttoptr i32 %edi.10.reload to i8*, !insn.addr !502
  store i8 %209, i8* %210, align 1, !insn.addr !502
  ret void, !insn.addr !503

dec_label_pc_414528:                              ; preds = %dec_label_pc_4144be, %dec_label_pc_4144e2
  %edi.11.reload = load i32, i32* %edi.11.reg2mem
  %esi.11.reload = load i32, i32* %esi.11.reg2mem
  %211 = inttoptr i32 %esi.11.reload to i8*, !insn.addr !504
  %212 = load i8, i8* %211, align 1, !insn.addr !504
  %213 = inttoptr i32 %edi.11.reload to i8*, !insn.addr !505
  store i8 %212, i8* %213, align 1, !insn.addr !505
  %214 = add i32 %esi.11.reload, 1, !insn.addr !506
  %215 = inttoptr i32 %214 to i8*, !insn.addr !506
  %216 = load i8, i8* %215, align 1, !insn.addr !506
  %217 = add i32 %edi.11.reload, 1, !insn.addr !507
  %218 = inttoptr i32 %217 to i8*, !insn.addr !507
  store i8 %216, i8* %218, align 1, !insn.addr !507
  ret void, !insn.addr !508

dec_label_pc_41453c:                              ; preds = %dec_label_pc_4144be, %dec_label_pc_4144e2
  %edi.12.reload = load i32, i32* %edi.12.reg2mem
  %esi.12.reload = load i32, i32* %esi.12.reg2mem
  %219 = inttoptr i32 %esi.12.reload to i8*, !insn.addr !509
  %220 = load i8, i8* %219, align 1, !insn.addr !509
  %221 = inttoptr i32 %edi.12.reload to i8*, !insn.addr !510
  store i8 %220, i8* %221, align 1, !insn.addr !510
  %222 = add i32 %esi.12.reload, 1, !insn.addr !511
  %223 = inttoptr i32 %222 to i8*, !insn.addr !511
  %224 = load i8, i8* %223, align 1, !insn.addr !511
  %225 = add i32 %edi.12.reload, 1, !insn.addr !512
  %226 = inttoptr i32 %225 to i8*, !insn.addr !512
  store i8 %224, i8* %226, align 1, !insn.addr !512
  %227 = add i32 %esi.12.reload, 2, !insn.addr !513
  %228 = inttoptr i32 %227 to i8*, !insn.addr !513
  %229 = load i8, i8* %228, align 1, !insn.addr !513
  %230 = add i32 %edi.12.reload, 2, !insn.addr !514
  %231 = inttoptr i32 %230 to i8*, !insn.addr !514
  store i8 %229, i8* %231, align 1, !insn.addr !514
  ret void, !insn.addr !515

dec_label_pc_414554:                              ; preds = %dec_label_pc_4142a0
  %232 = add i32 %2, %count, !insn.addr !516
  %233 = icmp ult i32 %count, 32, !insn.addr !517
  store i32 %count, i32* %ecx.15.reg2mem, !insn.addr !518
  store i32 %3, i32* %esi.19.reg2mem, !insn.addr !518
  store i32 %232, i32* %edi.19.reg2mem, !insn.addr !518
  br i1 %233, label %dec_label_pc_4146b4, label %dec_label_pc_414563, !insn.addr !518

dec_label_pc_414563:                              ; preds = %dec_label_pc_414554
  %234 = load i32, i32* @__isa_enabled, align 4, !insn.addr !519
  %235 = and i32 %234, 2, !insn.addr !519
  %236 = icmp eq i32 %235, 0, !insn.addr !519
  br i1 %236, label %dec_label_pc_414571, label %dec_label_pc_414605, !insn.addr !520

dec_label_pc_414571:                              ; preds = %dec_label_pc_414563
  %237 = and i32 %232, 3, !insn.addr !521
  %238 = icmp eq i32 %237, 0, !insn.addr !521
  store i32 %237, i32* %edx.0.reg2mem, !insn.addr !522
  store i32 %3, i32* %esi.13.reg2mem, !insn.addr !522
  store i32 %232, i32* %edi.13.reg2mem, !insn.addr !522
  store i32 %count, i32* %ecx.10.reg2mem, !insn.addr !522
  store i32 %3, i32* %esi.14.reg2mem, !insn.addr !522
  store i32 %232, i32* %edi.14.reg2mem, !insn.addr !522
  br i1 %238, label %dec_label_pc_414596, label %dec_label_pc_414580, !insn.addr !522

dec_label_pc_414580:                              ; preds = %dec_label_pc_414571, %dec_label_pc_414580
  %edi.13.reload = load i32, i32* %edi.13.reg2mem
  %esi.13.reload = load i32, i32* %esi.13.reg2mem
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %239 = add i32 %esi.13.reload, -1, !insn.addr !523
  %240 = inttoptr i32 %239 to i8*, !insn.addr !523
  %241 = load i8, i8* %240, align 1, !insn.addr !523
  %242 = add i32 %edi.13.reload, -1, !insn.addr !524
  %243 = inttoptr i32 %242 to i8*, !insn.addr !524
  store i8 %241, i8* %243, align 1, !insn.addr !524
  %244 = add i32 %edx.0.reload, -1, !insn.addr !525
  %245 = icmp eq i32 %244, 0, !insn.addr !525
  %246 = icmp eq i1 %245, false, !insn.addr !526
  store i32 %244, i32* %edx.0.reg2mem, !insn.addr !526
  store i32 %239, i32* %esi.13.reg2mem, !insn.addr !526
  store i32 %242, i32* %edi.13.reg2mem, !insn.addr !526
  br i1 %246, label %dec_label_pc_414580, label %dec_label_pc_414596.loopexit, !insn.addr !526

dec_label_pc_414596.loopexit:                     ; preds = %dec_label_pc_414580
  %247 = sub i32 %count, %237, !insn.addr !527
  store i32 %247, i32* %ecx.10.reg2mem
  store i32 %239, i32* %esi.14.reg2mem
  store i32 %242, i32* %edi.14.reg2mem
  br label %dec_label_pc_414596

dec_label_pc_414596:                              ; preds = %dec_label_pc_414596.loopexit, %dec_label_pc_414571
  %edi.14.reload = load i32, i32* %edi.14.reg2mem
  %esi.14.reload = load i32, i32* %esi.14.reg2mem
  %ecx.10.reload = load i32, i32* %ecx.10.reg2mem
  %248 = udiv i32 %ecx.10.reload, 4, !insn.addr !528
  %249 = and i32 %ecx.10.reload, 3, !insn.addr !529
  %250 = add i32 %esi.14.reload, -4, !insn.addr !530
  %251 = add i32 %edi.14.reload, -4, !insn.addr !531
  %252 = inttoptr i32 %250 to i8*, !insn.addr !532
  %253 = inttoptr i32 %251 to i8*, !insn.addr !532
  call void @__asm_rep_movsd_memcpy(i8* %253, i8* %252, i32 %248), !insn.addr !532
  store i32 %249, i32* @4, align 4, !insn.addr !533
  br label %dec_label_pc_414514

dec_label_pc_414605:                              ; preds = %dec_label_pc_414563
  %254 = and i32 %232, 15, !insn.addr !534
  %255 = icmp eq i32 %254, 0, !insn.addr !534
  store i32 %count, i32* %ecx.11.reg2mem, !insn.addr !535
  store i32 %3, i32* %esi.15.reg2mem, !insn.addr !535
  store i32 %232, i32* %edi.15.reg2mem, !insn.addr !535
  store i32 %count, i32* %ecx.12.ph.reg2mem, !insn.addr !535
  store i32 %3, i32* %esi.16.ph.reg2mem, !insn.addr !535
  store i32 %232, i32* %edi.16.ph.reg2mem, !insn.addr !535
  br i1 %255, label %dec_label_pc_41461c.preheader, label %dec_label_pc_41460d, !insn.addr !535

dec_label_pc_41460d:                              ; preds = %dec_label_pc_414605, %dec_label_pc_41460d
  %edi.15.reload = load i32, i32* %edi.15.reg2mem
  %esi.15.reload = load i32, i32* %esi.15.reg2mem
  %ecx.11.reload = load i32, i32* %ecx.11.reg2mem
  %256 = add i32 %ecx.11.reload, -1, !insn.addr !536
  %257 = add i32 %esi.15.reload, -1, !insn.addr !537
  %258 = add i32 %edi.15.reload, -1, !insn.addr !538
  %259 = inttoptr i32 %257 to i8*, !insn.addr !539
  %260 = load i8, i8* %259, align 1, !insn.addr !539
  %261 = inttoptr i32 %258 to i8*, !insn.addr !540
  store i8 %260, i8* %261, align 1, !insn.addr !540
  %262 = and i32 %258, 15, !insn.addr !541
  %263 = icmp eq i32 %262, 0, !insn.addr !541
  %264 = icmp eq i1 %263, false, !insn.addr !542
  store i32 %256, i32* %ecx.11.reg2mem, !insn.addr !542
  store i32 %257, i32* %esi.15.reg2mem, !insn.addr !542
  store i32 %258, i32* %edi.15.reg2mem, !insn.addr !542
  store i32 %256, i32* %ecx.12.ph.reg2mem, !insn.addr !542
  store i32 %257, i32* %esi.16.ph.reg2mem, !insn.addr !542
  store i32 %258, i32* %edi.16.ph.reg2mem, !insn.addr !542
  br i1 %264, label %dec_label_pc_41460d, label %dec_label_pc_41461c.preheader, !insn.addr !542

dec_label_pc_41461c.preheader:                    ; preds = %dec_label_pc_41460d, %dec_label_pc_414605
  %edi.16.ph.reload = load i32, i32* %edi.16.ph.reg2mem
  %esi.16.ph.reload = load i32, i32* %esi.16.ph.reg2mem
  %ecx.12.ph.reload = load i32, i32* %ecx.12.ph.reg2mem
  store i32 %ecx.12.ph.reload, i32* %ecx.12.reg2mem
  store i32 %esi.16.ph.reload, i32* %esi.16.reg2mem
  store i32 %edi.16.ph.reload, i32* %edi.16.reg2mem
  br label %dec_label_pc_41461c

dec_label_pc_41461c:                              ; preds = %dec_label_pc_41461c.preheader, %dec_label_pc_414624
  %edi.16.reload = load i32, i32* %edi.16.reg2mem
  %esi.16.reload = load i32, i32* %esi.16.reg2mem
  %ecx.12.reload = load i32, i32* %ecx.12.reg2mem
  %265 = icmp ult i32 %ecx.12.reload, 128, !insn.addr !543
  store i32 %ecx.12.reload, i32* %ecx.13.reg2mem, !insn.addr !544
  store i32 %esi.16.reload, i32* %esi.17.reg2mem, !insn.addr !544
  store i32 %edi.16.reload, i32* %edi.17.reg2mem, !insn.addr !544
  br i1 %265, label %dec_label_pc_41468c, label %dec_label_pc_414624, !insn.addr !544

dec_label_pc_414624:                              ; preds = %dec_label_pc_41461c
  %266 = add i32 %esi.16.reload, -128, !insn.addr !545
  %267 = add i32 %edi.16.reload, -128, !insn.addr !546
  %268 = inttoptr i32 %266 to i128*, !insn.addr !547
  %269 = load i128, i128* %268, align 4, !insn.addr !547
  %270 = call i128 @__asm_movdqu.5(i128 %269), !insn.addr !547
  %271 = add i32 %esi.16.reload, -112, !insn.addr !548
  %272 = inttoptr i32 %271 to i128*, !insn.addr !548
  %273 = load i128, i128* %272, align 4, !insn.addr !548
  %274 = call i128 @__asm_movdqu.5(i128 %273), !insn.addr !548
  %275 = add i32 %esi.16.reload, -96, !insn.addr !549
  %276 = inttoptr i32 %275 to i128*, !insn.addr !549
  %277 = load i128, i128* %276, align 4, !insn.addr !549
  %278 = call i128 @__asm_movdqu.5(i128 %277), !insn.addr !549
  %279 = add i32 %esi.16.reload, -80, !insn.addr !550
  %280 = inttoptr i32 %279 to i128*, !insn.addr !550
  %281 = load i128, i128* %280, align 4, !insn.addr !550
  %282 = call i128 @__asm_movdqu.5(i128 %281), !insn.addr !550
  %283 = add i32 %esi.16.reload, -64, !insn.addr !551
  %284 = inttoptr i32 %283 to i128*, !insn.addr !551
  %285 = load i128, i128* %284, align 4, !insn.addr !551
  %286 = call i128 @__asm_movdqu.5(i128 %285), !insn.addr !551
  %287 = add i32 %esi.16.reload, -48, !insn.addr !552
  %288 = inttoptr i32 %287 to i128*, !insn.addr !552
  %289 = load i128, i128* %288, align 4, !insn.addr !552
  %290 = call i128 @__asm_movdqu.5(i128 %289), !insn.addr !552
  %291 = add i32 %esi.16.reload, -32, !insn.addr !553
  %292 = inttoptr i32 %291 to i128*, !insn.addr !553
  %293 = load i128, i128* %292, align 4, !insn.addr !553
  %294 = call i128 @__asm_movdqu.5(i128 %293), !insn.addr !553
  %295 = add i32 %esi.16.reload, -16, !insn.addr !554
  %296 = inttoptr i32 %295 to i128*, !insn.addr !554
  %297 = load i128, i128* %296, align 4, !insn.addr !554
  %298 = call i128 @__asm_movdqu.5(i128 %297), !insn.addr !554
  %299 = inttoptr i32 %267 to i128*, !insn.addr !555
  %300 = load i128, i128* %299, align 4, !insn.addr !555
  call void @__asm_movdqu(i128 %300, i128 %270), !insn.addr !555
  %301 = add i32 %edi.16.reload, -112, !insn.addr !556
  %302 = inttoptr i32 %301 to i128*, !insn.addr !556
  %303 = load i128, i128* %302, align 4, !insn.addr !556
  call void @__asm_movdqu(i128 %303, i128 %274), !insn.addr !556
  %304 = add i32 %edi.16.reload, -96, !insn.addr !557
  %305 = inttoptr i32 %304 to i128*, !insn.addr !557
  %306 = load i128, i128* %305, align 4, !insn.addr !557
  call void @__asm_movdqu(i128 %306, i128 %278), !insn.addr !557
  %307 = add i32 %edi.16.reload, -80, !insn.addr !558
  %308 = inttoptr i32 %307 to i128*, !insn.addr !558
  %309 = load i128, i128* %308, align 4, !insn.addr !558
  call void @__asm_movdqu(i128 %309, i128 %282), !insn.addr !558
  %310 = add i32 %edi.16.reload, -64, !insn.addr !559
  %311 = inttoptr i32 %310 to i128*, !insn.addr !559
  %312 = load i128, i128* %311, align 4, !insn.addr !559
  call void @__asm_movdqu(i128 %312, i128 %286), !insn.addr !559
  %313 = add i32 %edi.16.reload, -48, !insn.addr !560
  %314 = inttoptr i32 %313 to i128*, !insn.addr !560
  %315 = load i128, i128* %314, align 4, !insn.addr !560
  call void @__asm_movdqu(i128 %315, i128 %290), !insn.addr !560
  %316 = add i32 %edi.16.reload, -32, !insn.addr !561
  %317 = inttoptr i32 %316 to i128*, !insn.addr !561
  %318 = load i128, i128* %317, align 4, !insn.addr !561
  call void @__asm_movdqu(i128 %318, i128 %294), !insn.addr !561
  %319 = add i32 %edi.16.reload, -16, !insn.addr !562
  %320 = inttoptr i32 %319 to i128*, !insn.addr !562
  %321 = load i128, i128* %320, align 4, !insn.addr !562
  call void @__asm_movdqu(i128 %321, i128 %298), !insn.addr !562
  %322 = add i32 %ecx.12.reload, -128, !insn.addr !563
  %323 = icmp ult i32 %322, 128, !insn.addr !564
  %324 = icmp eq i1 %323, false, !insn.addr !565
  store i32 %322, i32* %ecx.12.reg2mem, !insn.addr !565
  store i32 %266, i32* %esi.16.reg2mem, !insn.addr !565
  store i32 %267, i32* %edi.16.reg2mem, !insn.addr !565
  store i32 %322, i32* %ecx.13.reg2mem, !insn.addr !565
  store i32 %266, i32* %esi.17.reg2mem, !insn.addr !565
  store i32 %267, i32* %edi.17.reg2mem, !insn.addr !565
  br i1 %324, label %dec_label_pc_41461c, label %dec_label_pc_41468c, !insn.addr !565

dec_label_pc_41468c:                              ; preds = %dec_label_pc_414624, %dec_label_pc_41461c
  %edi.17.reload = load i32, i32* %edi.17.reg2mem
  %esi.17.reload = load i32, i32* %esi.17.reg2mem
  %ecx.13.reload = load i32, i32* %ecx.13.reg2mem
  %325 = icmp ult i32 %ecx.13.reload, 32, !insn.addr !566
  store i32 %ecx.13.reload, i32* %ecx.14.reg2mem, !insn.addr !567
  store i32 %esi.17.reload, i32* %esi.18.reg2mem, !insn.addr !567
  store i32 %edi.17.reload, i32* %edi.18.reg2mem, !insn.addr !567
  store i32 %ecx.13.reload, i32* %ecx.15.reg2mem, !insn.addr !567
  store i32 %esi.17.reload, i32* %esi.19.reg2mem, !insn.addr !567
  store i32 %edi.17.reload, i32* %edi.19.reg2mem, !insn.addr !567
  br i1 %325, label %dec_label_pc_4146b4, label %dec_label_pc_414691, !insn.addr !567

dec_label_pc_414691:                              ; preds = %dec_label_pc_41468c, %dec_label_pc_414691
  %edi.18.reload = load i32, i32* %edi.18.reg2mem
  %esi.18.reload = load i32, i32* %esi.18.reg2mem
  %ecx.14.reload = load i32, i32* %ecx.14.reg2mem
  %326 = add i32 %esi.18.reload, -32, !insn.addr !568
  %327 = add i32 %edi.18.reload, -32, !insn.addr !569
  %328 = inttoptr i32 %326 to i128*, !insn.addr !570
  %329 = load i128, i128* %328, align 4, !insn.addr !570
  %330 = call i128 @__asm_movdqu.5(i128 %329), !insn.addr !570
  %331 = add i32 %esi.18.reload, -16, !insn.addr !571
  %332 = inttoptr i32 %331 to i128*, !insn.addr !571
  %333 = load i128, i128* %332, align 4, !insn.addr !571
  %334 = call i128 @__asm_movdqu.5(i128 %333), !insn.addr !571
  %335 = inttoptr i32 %327 to i128*, !insn.addr !572
  %336 = load i128, i128* %335, align 4, !insn.addr !572
  call void @__asm_movdqu(i128 %336, i128 %330), !insn.addr !572
  %337 = add i32 %edi.18.reload, -16, !insn.addr !573
  %338 = inttoptr i32 %337 to i128*, !insn.addr !573
  %339 = load i128, i128* %338, align 4, !insn.addr !573
  call void @__asm_movdqu(i128 %339, i128 %334), !insn.addr !573
  %340 = add i32 %ecx.14.reload, -32, !insn.addr !574
  %341 = icmp ult i32 %340, 32, !insn.addr !575
  %342 = icmp eq i1 %341, false, !insn.addr !576
  store i32 %340, i32* %ecx.14.reg2mem, !insn.addr !576
  store i32 %326, i32* %esi.18.reg2mem, !insn.addr !576
  store i32 %327, i32* %edi.18.reg2mem, !insn.addr !576
  store i32 %340, i32* %ecx.15.reg2mem, !insn.addr !576
  store i32 %326, i32* %esi.19.reg2mem, !insn.addr !576
  store i32 %327, i32* %edi.19.reg2mem, !insn.addr !576
  br i1 %342, label %dec_label_pc_414691, label %dec_label_pc_4146b4, !insn.addr !576

dec_label_pc_4146b4:                              ; preds = %dec_label_pc_414691, %dec_label_pc_41468c, %dec_label_pc_414554
  %edi.19.reload = load i32, i32* %edi.19.reg2mem
  %esi.19.reload = load i32, i32* %esi.19.reg2mem
  %ecx.15.reload = load i32, i32* %ecx.15.reg2mem
  %343 = icmp ult i32 %ecx.15.reload, 4, !insn.addr !577
  store i32 %ecx.15.reload, i32* %ecx.16.reg2mem, !insn.addr !578
  store i32 %esi.19.reload, i32* %esi.20.reg2mem, !insn.addr !578
  store i32 %edi.19.reload, i32* %edi.20.reg2mem, !insn.addr !578
  store i32 %ecx.15.reload, i32* %ecx.17.reg2mem, !insn.addr !578
  store i32 %esi.19.reload, i32* %esi.21.reg2mem, !insn.addr !578
  store i32 %edi.19.reload, i32* %edi.21.reg2mem, !insn.addr !578
  br i1 %343, label %dec_label_pc_4146d1, label %dec_label_pc_4146bc, !insn.addr !578

dec_label_pc_4146bc:                              ; preds = %dec_label_pc_4146b4, %dec_label_pc_4146bc
  %edi.20.reload = load i32, i32* %edi.20.reg2mem
  %esi.20.reload = load i32, i32* %esi.20.reg2mem
  %ecx.16.reload = load i32, i32* %ecx.16.reg2mem
  %344 = add i32 %edi.20.reload, -4, !insn.addr !579
  %345 = add i32 %esi.20.reload, -4, !insn.addr !580
  %346 = inttoptr i32 %345 to i32*, !insn.addr !581
  %347 = load i32, i32* %346, align 4, !insn.addr !581
  %348 = inttoptr i32 %344 to i32*, !insn.addr !582
  store i32 %347, i32* %348, align 4, !insn.addr !582
  %349 = add i32 %ecx.16.reload, -4, !insn.addr !583
  %350 = icmp ult i32 %349, 4, !insn.addr !584
  %351 = icmp eq i1 %350, false, !insn.addr !585
  store i32 %349, i32* %ecx.16.reg2mem, !insn.addr !585
  store i32 %345, i32* %esi.20.reg2mem, !insn.addr !585
  store i32 %344, i32* %edi.20.reg2mem, !insn.addr !585
  store i32 %349, i32* %ecx.17.reg2mem, !insn.addr !585
  store i32 %345, i32* %esi.21.reg2mem, !insn.addr !585
  store i32 %344, i32* %edi.21.reg2mem, !insn.addr !585
  br i1 %351, label %dec_label_pc_4146bc, label %dec_label_pc_4146d1, !insn.addr !585

dec_label_pc_4146d1:                              ; preds = %dec_label_pc_4146bc, %dec_label_pc_4146b4
  %edi.21.reload = load i32, i32* %edi.21.reg2mem
  %esi.21.reload = load i32, i32* %esi.21.reg2mem
  %ecx.17.reload = load i32, i32* %ecx.17.reg2mem
  %352 = icmp eq i32 %ecx.17.reload, 0, !insn.addr !586
  store i32 %ecx.17.reload, i32* %ecx.18.reg2mem, !insn.addr !587
  store i32 %esi.21.reload, i32* %esi.22.reg2mem, !insn.addr !587
  store i32 %edi.21.reload, i32* %edi.22.reg2mem, !insn.addr !587
  br i1 %352, label %dec_label_pc_414514, label %dec_label_pc_4146d5, !insn.addr !587

dec_label_pc_4146d5:                              ; preds = %dec_label_pc_4146d1, %dec_label_pc_4146d5
  %edi.22.reload = load i32, i32* %edi.22.reg2mem
  %esi.22.reload = load i32, i32* %esi.22.reg2mem
  %ecx.18.reload = load i32, i32* %ecx.18.reg2mem
  %353 = add i32 %edi.22.reload, -1, !insn.addr !588
  %354 = add i32 %esi.22.reload, -1, !insn.addr !589
  %355 = inttoptr i32 %354 to i8*, !insn.addr !590
  %356 = load i8, i8* %355, align 1, !insn.addr !590
  %357 = inttoptr i32 %353 to i8*, !insn.addr !591
  store i8 %356, i8* %357, align 1, !insn.addr !591
  %358 = add i32 %ecx.18.reload, -1, !insn.addr !592
  %359 = icmp eq i32 %358, 0, !insn.addr !592
  %360 = icmp eq i1 %359, false, !insn.addr !593
  store i32 %358, i32* %ecx.18.reg2mem, !insn.addr !593
  store i32 %354, i32* %esi.22.reg2mem, !insn.addr !593
  store i32 %353, i32* %edi.22.reg2mem, !insn.addr !593
  br i1 %360, label %dec_label_pc_4146d5, label %dec_label_pc_414514, !insn.addr !593

dec_label_pc_4146f0:                              ; preds = %dec_label_pc_414302
  %361 = and i32 %1, 15, !insn.addr !594
  %362 = icmp eq i32 %361, 0, !insn.addr !595
  %363 = icmp eq i1 %362, false, !insn.addr !596
  store i32 %count, i32* %ecx.19.reg2mem, !insn.addr !596
  store i32 %1, i32* %esi.23.reg2mem, !insn.addr !596
  store i32 %2, i32* %edi.23.reg2mem, !insn.addr !596
  br i1 %363, label %dec_label_pc_4147e0, label %dec_label_pc_4146fd, !insn.addr !596

dec_label_pc_4146fd:                              ; preds = %dec_label_pc_414801, %dec_label_pc_4147fc, %dec_label_pc_4146f0
  %edi.23.reload = load i32, i32* %edi.23.reg2mem
  %esi.23.reload = load i32, i32* %esi.23.reg2mem
  %ecx.19.reload = load i32, i32* %ecx.19.reg2mem
  %364 = udiv i32 %ecx.19.reload, 128, !insn.addr !597
  %365 = icmp ult i32 %ecx.19.reload, 128
  store i32 %364, i32* %edx.1.reg2mem, !insn.addr !598
  store i32 %esi.23.reload, i32* %esi.24.reg2mem, !insn.addr !598
  store i32 %edi.23.reload, i32* %edi.24.reg2mem, !insn.addr !598
  store i32 %esi.23.reload, i32* %esi.25.reg2mem, !insn.addr !598
  store i32 %edi.23.reload, i32* %edi.25.reg2mem, !insn.addr !598
  br i1 %365, label %dec_label_pc_41476d, label %dec_label_pc_414710, !insn.addr !598

dec_label_pc_414710:                              ; preds = %dec_label_pc_4146fd, %dec_label_pc_414710
  %edi.24.reload = load i32, i32* %edi.24.reg2mem
  %esi.24.reload = load i32, i32* %esi.24.reg2mem
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %366 = inttoptr i32 %esi.24.reload to i128*, !insn.addr !599
  %367 = load i128, i128* %366, align 4, !insn.addr !599
  %368 = call i128 @__asm_movdqa.8(i128 %367), !insn.addr !599
  %369 = add i32 %esi.24.reload, 16, !insn.addr !600
  %370 = inttoptr i32 %369 to i128*, !insn.addr !600
  %371 = load i128, i128* %370, align 4, !insn.addr !600
  %372 = call i128 @__asm_movdqa.8(i128 %371), !insn.addr !600
  %373 = add i32 %esi.24.reload, 32, !insn.addr !601
  %374 = inttoptr i32 %373 to i128*, !insn.addr !601
  %375 = load i128, i128* %374, align 4, !insn.addr !601
  %376 = call i128 @__asm_movdqa.8(i128 %375), !insn.addr !601
  %377 = add i32 %esi.24.reload, 48, !insn.addr !602
  %378 = inttoptr i32 %377 to i128*, !insn.addr !602
  %379 = load i128, i128* %378, align 4, !insn.addr !602
  %380 = call i128 @__asm_movdqa.8(i128 %379), !insn.addr !602
  %381 = inttoptr i32 %edi.24.reload to i128*, !insn.addr !603
  %382 = load i128, i128* %381, align 4, !insn.addr !603
  call void @__asm_movdqa(i128 %382, i128 %368), !insn.addr !603
  %383 = add i32 %edi.24.reload, 16, !insn.addr !604
  %384 = inttoptr i32 %383 to i128*, !insn.addr !604
  %385 = load i128, i128* %384, align 4, !insn.addr !604
  call void @__asm_movdqa(i128 %385, i128 %372), !insn.addr !604
  %386 = add i32 %edi.24.reload, 32, !insn.addr !605
  %387 = inttoptr i32 %386 to i128*, !insn.addr !605
  %388 = load i128, i128* %387, align 4, !insn.addr !605
  call void @__asm_movdqa(i128 %388, i128 %376), !insn.addr !605
  %389 = add i32 %edi.24.reload, 48, !insn.addr !606
  %390 = inttoptr i32 %389 to i128*, !insn.addr !606
  %391 = load i128, i128* %390, align 4, !insn.addr !606
  call void @__asm_movdqa(i128 %391, i128 %380), !insn.addr !606
  %392 = add i32 %esi.24.reload, 64, !insn.addr !607
  %393 = inttoptr i32 %392 to i128*, !insn.addr !607
  %394 = load i128, i128* %393, align 4, !insn.addr !607
  %395 = call i128 @__asm_movdqa.8(i128 %394), !insn.addr !607
  %396 = add i32 %esi.24.reload, 80, !insn.addr !608
  %397 = inttoptr i32 %396 to i128*, !insn.addr !608
  %398 = load i128, i128* %397, align 4, !insn.addr !608
  %399 = call i128 @__asm_movdqa.8(i128 %398), !insn.addr !608
  %400 = add i32 %esi.24.reload, 96, !insn.addr !609
  %401 = inttoptr i32 %400 to i128*, !insn.addr !609
  %402 = load i128, i128* %401, align 4, !insn.addr !609
  %403 = call i128 @__asm_movdqa.8(i128 %402), !insn.addr !609
  %404 = add i32 %esi.24.reload, 112, !insn.addr !610
  %405 = inttoptr i32 %404 to i128*, !insn.addr !610
  %406 = load i128, i128* %405, align 4, !insn.addr !610
  %407 = call i128 @__asm_movdqa.8(i128 %406), !insn.addr !610
  %408 = add i32 %edi.24.reload, 64, !insn.addr !611
  %409 = inttoptr i32 %408 to i128*, !insn.addr !611
  %410 = load i128, i128* %409, align 4, !insn.addr !611
  call void @__asm_movdqa(i128 %410, i128 %395), !insn.addr !611
  %411 = add i32 %edi.24.reload, 80, !insn.addr !612
  %412 = inttoptr i32 %411 to i128*, !insn.addr !612
  %413 = load i128, i128* %412, align 4, !insn.addr !612
  call void @__asm_movdqa(i128 %413, i128 %399), !insn.addr !612
  %414 = add i32 %edi.24.reload, 96, !insn.addr !613
  %415 = inttoptr i32 %414 to i128*, !insn.addr !613
  %416 = load i128, i128* %415, align 4, !insn.addr !613
  call void @__asm_movdqa(i128 %416, i128 %403), !insn.addr !613
  %417 = add i32 %edi.24.reload, 112, !insn.addr !614
  %418 = inttoptr i32 %417 to i128*, !insn.addr !614
  %419 = load i128, i128* %418, align 4, !insn.addr !614
  call void @__asm_movdqa(i128 %419, i128 %407), !insn.addr !614
  %420 = add i32 %esi.24.reload, 128, !insn.addr !615
  %421 = add i32 %edi.24.reload, 128, !insn.addr !616
  %422 = add i32 %edx.1.reload, -1, !insn.addr !617
  %423 = icmp eq i32 %422, 0, !insn.addr !617
  %424 = icmp eq i1 %423, false, !insn.addr !618
  store i32 %422, i32* %edx.1.reg2mem, !insn.addr !618
  store i32 %420, i32* %esi.24.reg2mem, !insn.addr !618
  store i32 %421, i32* %edi.24.reg2mem, !insn.addr !618
  store i32 %420, i32* %esi.25.reg2mem, !insn.addr !618
  store i32 %421, i32* %edi.25.reg2mem, !insn.addr !618
  br i1 %424, label %dec_label_pc_414710, label %dec_label_pc_41476d, !insn.addr !618

dec_label_pc_41476d:                              ; preds = %dec_label_pc_414710, %dec_label_pc_4146fd
  %425 = and i32 %ecx.19.reload, 127, !insn.addr !619
  %edi.25.reload = load i32, i32* %edi.25.reg2mem
  %esi.25.reload = load i32, i32* %esi.25.reg2mem
  %426 = icmp eq i32 %425, 0, !insn.addr !620
  store i32 %edi.25.reload, i32* %edi.256.reg2mem, !insn.addr !621
  store i32 %esi.25.reload, i32* %esi.255.reg2mem, !insn.addr !621
  store i32 %425, i32* %ecx.204.reg2mem, !insn.addr !621
  br i1 %426, label %dec_label_pc_414514, label %dec_label_pc_414771, !insn.addr !621

dec_label_pc_414771:                              ; preds = %dec_label_pc_4142d1, %dec_label_pc_41476d
  %ecx.204.reload = load i32, i32* %ecx.204.reg2mem
  %esi.255.reload = load i32, i32* %esi.255.reg2mem
  %edi.256.reload = load i32, i32* %edi.256.reg2mem
  %427 = udiv i32 %ecx.204.reload, 32, !insn.addr !622
  %428 = icmp ult i32 %ecx.204.reload, 32
  store i32 %427, i32* %edx.2.reg2mem, !insn.addr !623
  store i32 %esi.255.reload, i32* %esi.26.reg2mem, !insn.addr !623
  store i32 %edi.256.reload, i32* %edi.26.reg2mem, !insn.addr !623
  store i32 %ecx.204.reload, i32* %ecx.21.reg2mem, !insn.addr !623
  store i32 %esi.255.reload, i32* %esi.27.reg2mem, !insn.addr !623
  store i32 %edi.256.reload, i32* %edi.27.reg2mem, !insn.addr !623
  br i1 %428, label %dec_label_pc_41479b, label %dec_label_pc_414780, !insn.addr !623

dec_label_pc_414780:                              ; preds = %dec_label_pc_414771, %dec_label_pc_414780
  %edi.26.reload = load i32, i32* %edi.26.reg2mem
  %esi.26.reload = load i32, i32* %esi.26.reg2mem
  %edx.2.reload = load i32, i32* %edx.2.reg2mem
  %429 = inttoptr i32 %esi.26.reload to i128*, !insn.addr !624
  %430 = load i128, i128* %429, align 4, !insn.addr !624
  %431 = call i128 @__asm_movdqu.5(i128 %430), !insn.addr !624
  %432 = add i32 %esi.26.reload, 16, !insn.addr !625
  %433 = inttoptr i32 %432 to i128*, !insn.addr !625
  %434 = load i128, i128* %433, align 4, !insn.addr !625
  %435 = call i128 @__asm_movdqu.5(i128 %434), !insn.addr !625
  %436 = inttoptr i32 %edi.26.reload to i128*, !insn.addr !626
  %437 = load i128, i128* %436, align 4, !insn.addr !626
  call void @__asm_movdqu(i128 %437, i128 %431), !insn.addr !626
  %438 = add i32 %edi.26.reload, 16, !insn.addr !627
  %439 = inttoptr i32 %438 to i128*, !insn.addr !627
  %440 = load i128, i128* %439, align 4, !insn.addr !627
  call void @__asm_movdqu(i128 %440, i128 %435), !insn.addr !627
  %441 = add i32 %esi.26.reload, 32, !insn.addr !628
  %442 = add i32 %edi.26.reload, 32, !insn.addr !629
  %443 = add i32 %edx.2.reload, -1, !insn.addr !630
  %444 = icmp eq i32 %443, 0, !insn.addr !630
  %445 = icmp eq i1 %444, false, !insn.addr !631
  store i32 %443, i32* %edx.2.reg2mem, !insn.addr !631
  store i32 %441, i32* %esi.26.reg2mem, !insn.addr !631
  store i32 %442, i32* %edi.26.reg2mem, !insn.addr !631
  store i32 %ecx.204.reload, i32* %ecx.21.reg2mem, !insn.addr !631
  store i32 %441, i32* %esi.27.reg2mem, !insn.addr !631
  store i32 %442, i32* %edi.27.reg2mem, !insn.addr !631
  br i1 %445, label %dec_label_pc_414780, label %dec_label_pc_41479b, !insn.addr !631

dec_label_pc_41479b3:                             ; preds = %dec_label_pc_4144e2
  unreachable

dec_label_pc_41479b:                              ; preds = %dec_label_pc_414780, %dec_label_pc_414771, %dec_label_pc_4142c0
  %ecx.21.reload = load i32, i32* %ecx.21.reg2mem
  %446 = and i32 %ecx.21.reload, 31, !insn.addr !632
  %447 = icmp eq i32 %446, 0, !insn.addr !632
  br i1 %447, label %dec_label_pc_414514, label %dec_label_pc_4147a0, !insn.addr !633

dec_label_pc_4147a0:                              ; preds = %dec_label_pc_41479b
  %edi.27.reload = load i32, i32* %edi.27.reg2mem
  %esi.27.reload = load i32, i32* %esi.27.reg2mem
  %448 = udiv i32 %446, 4, !insn.addr !634
  %449 = icmp ult i32 %446, 4
  store i32 %448, i32* %ecx.22.reg2mem, !insn.addr !635
  store i32 %esi.27.reload, i32* %esi.28.reg2mem, !insn.addr !635
  store i32 %edi.27.reload, i32* %edi.28.reg2mem, !insn.addr !635
  store i32 %esi.27.reload, i32* %esi.29.reg2mem, !insn.addr !635
  store i32 %edi.27.reload, i32* %edi.29.reg2mem, !insn.addr !635
  br i1 %449, label %dec_label_pc_4147b6, label %dec_label_pc_4147a7, !insn.addr !635

dec_label_pc_4147a7:                              ; preds = %dec_label_pc_4147a0, %dec_label_pc_4147a7
  %edi.28.reload = load i32, i32* %edi.28.reg2mem
  %esi.28.reload = load i32, i32* %esi.28.reg2mem
  %ecx.22.reload = load i32, i32* %ecx.22.reg2mem
  %450 = inttoptr i32 %esi.28.reload to i32*, !insn.addr !636
  %451 = load i32, i32* %450, align 4, !insn.addr !636
  %452 = inttoptr i32 %edi.28.reload to i32*, !insn.addr !637
  store i32 %451, i32* %452, align 4, !insn.addr !637
  %453 = add i32 %edi.28.reload, 4, !insn.addr !638
  %454 = add i32 %esi.28.reload, 4, !insn.addr !639
  %455 = add i32 %ecx.22.reload, -1, !insn.addr !640
  %456 = icmp eq i32 %455, 0, !insn.addr !640
  %457 = icmp eq i1 %456, false, !insn.addr !641
  store i32 %455, i32* %ecx.22.reg2mem, !insn.addr !641
  store i32 %454, i32* %esi.28.reg2mem, !insn.addr !641
  store i32 %453, i32* %edi.28.reg2mem, !insn.addr !641
  store i32 %454, i32* %esi.29.reg2mem, !insn.addr !641
  store i32 %453, i32* %edi.29.reg2mem, !insn.addr !641
  br i1 %457, label %dec_label_pc_4147a7, label %dec_label_pc_4147b6, !insn.addr !641

dec_label_pc_4147b6:                              ; preds = %dec_label_pc_4147a7, %dec_label_pc_4147a0
  %edi.29.reload = load i32, i32* %edi.29.reg2mem
  %esi.29.reload = load i32, i32* %esi.29.reg2mem
  %458 = and i32 %ecx.21.reload, 3, !insn.addr !642
  %459 = icmp eq i32 %458, 0, !insn.addr !642
  store i32 %458, i32* %ecx.23.reg2mem, !insn.addr !643
  store i32 %esi.29.reload, i32* %esi.30.reg2mem, !insn.addr !643
  store i32 %edi.29.reload, i32* %edi.30.reg2mem, !insn.addr !643
  br i1 %459, label %dec_label_pc_414514, label %dec_label_pc_4147bd, !insn.addr !643

dec_label_pc_4147bd:                              ; preds = %dec_label_pc_4147b6, %dec_label_pc_4147bd
  %edi.30.reload = load i32, i32* %edi.30.reg2mem
  %esi.30.reload = load i32, i32* %esi.30.reg2mem
  %ecx.23.reload = load i32, i32* %ecx.23.reg2mem
  %460 = inttoptr i32 %esi.30.reload to i8*, !insn.addr !644
  %461 = load i8, i8* %460, align 1, !insn.addr !644
  %462 = inttoptr i32 %edi.30.reload to i8*, !insn.addr !645
  store i8 %461, i8* %462, align 1, !insn.addr !645
  %463 = add i32 %esi.30.reload, 1, !insn.addr !646
  %464 = add i32 %edi.30.reload, 1, !insn.addr !647
  %465 = add i32 %ecx.23.reload, -1, !insn.addr !648
  %466 = icmp eq i32 %465, 0, !insn.addr !648
  %467 = icmp eq i1 %466, false, !insn.addr !649
  store i32 %465, i32* %ecx.23.reg2mem, !insn.addr !649
  store i32 %463, i32* %esi.30.reg2mem, !insn.addr !649
  store i32 %464, i32* %edi.30.reg2mem, !insn.addr !649
  br i1 %467, label %dec_label_pc_4147bd, label %dec_label_pc_414514, !insn.addr !649

dec_label_pc_4147e0:                              ; preds = %dec_label_pc_4146f0
  %468 = sub nsw i32 16, %361, !insn.addr !650
  %469 = and i32 %468, 3, !insn.addr !651
  %470 = icmp eq i32 %469, 0, !insn.addr !651
  store i32 %469, i32* %ecx.24.reg2mem, !insn.addr !652
  store i32 %1, i32* %esi.31.reg2mem, !insn.addr !652
  store i32 %2, i32* %edi.31.reg2mem, !insn.addr !652
  store i32 %1, i32* %esi.32.reg2mem, !insn.addr !652
  store i32 %2, i32* %edi.32.reg2mem, !insn.addr !652
  br i1 %470, label %dec_label_pc_4147fc, label %dec_label_pc_4147f3, !insn.addr !652

dec_label_pc_4147f3:                              ; preds = %dec_label_pc_4147e0, %dec_label_pc_4147f3
  %edi.31.reload = load i32, i32* %edi.31.reg2mem
  %esi.31.reload = load i32, i32* %esi.31.reg2mem
  %ecx.24.reload = load i32, i32* %ecx.24.reg2mem
  %471 = inttoptr i32 %esi.31.reload to i8*, !insn.addr !653
  %472 = load i8, i8* %471, align 1, !insn.addr !653
  %473 = inttoptr i32 %edi.31.reload to i8*, !insn.addr !654
  store i8 %472, i8* %473, align 1, !insn.addr !654
  %474 = add i32 %esi.31.reload, 1, !insn.addr !655
  %475 = add i32 %edi.31.reload, 1, !insn.addr !656
  %476 = add i32 %ecx.24.reload, -1, !insn.addr !657
  %477 = icmp eq i32 %476, 0, !insn.addr !657
  %478 = icmp eq i1 %477, false, !insn.addr !658
  store i32 %476, i32* %ecx.24.reg2mem, !insn.addr !658
  store i32 %474, i32* %esi.31.reg2mem, !insn.addr !658
  store i32 %475, i32* %edi.31.reg2mem, !insn.addr !658
  store i32 %474, i32* %esi.32.reg2mem, !insn.addr !658
  store i32 %475, i32* %edi.32.reg2mem, !insn.addr !658
  br i1 %478, label %dec_label_pc_4147f3, label %dec_label_pc_4147fc, !insn.addr !658

dec_label_pc_4147fc:                              ; preds = %dec_label_pc_4147f3, %dec_label_pc_4147e0
  %479 = sub i32 %count, %468, !insn.addr !659
  %edi.32.reload = load i32, i32* %edi.32.reg2mem
  %esi.32.reload = load i32, i32* %esi.32.reg2mem
  %480 = udiv i32 %468, 4, !insn.addr !660
  %481 = icmp ult i32 %468, 4
  store i32 %479, i32* %ecx.19.reg2mem, !insn.addr !661
  store i32 %esi.32.reload, i32* %esi.23.reg2mem, !insn.addr !661
  store i32 %edi.32.reload, i32* %edi.23.reg2mem, !insn.addr !661
  store i32 %480, i32* %eax.9.reg2mem, !insn.addr !661
  store i32 %esi.32.reload, i32* %esi.33.reg2mem, !insn.addr !661
  store i32 %edi.32.reload, i32* %edi.33.reg2mem, !insn.addr !661
  br i1 %481, label %dec_label_pc_4146fd, label %dec_label_pc_414801, !insn.addr !661

dec_label_pc_414801:                              ; preds = %dec_label_pc_4147fc, %dec_label_pc_414801
  %edi.33.reload = load i32, i32* %edi.33.reg2mem
  %esi.33.reload = load i32, i32* %esi.33.reg2mem
  %eax.9.reload = load i32, i32* %eax.9.reg2mem
  %482 = inttoptr i32 %esi.33.reload to i32*, !insn.addr !662
  %483 = load i32, i32* %482, align 4, !insn.addr !662
  %484 = inttoptr i32 %edi.33.reload to i32*, !insn.addr !663
  store i32 %483, i32* %484, align 4, !insn.addr !663
  %485 = add i32 %esi.33.reload, 4, !insn.addr !664
  %486 = add i32 %edi.33.reload, 4, !insn.addr !665
  %487 = add i32 %eax.9.reload, -1, !insn.addr !666
  %488 = icmp eq i32 %487, 0, !insn.addr !666
  %489 = icmp eq i1 %488, false, !insn.addr !667
  store i32 %479, i32* %ecx.19.reg2mem, !insn.addr !667
  store i32 %485, i32* %esi.23.reg2mem, !insn.addr !667
  store i32 %486, i32* %edi.23.reg2mem, !insn.addr !667
  store i32 %487, i32* %eax.9.reg2mem, !insn.addr !667
  store i32 %485, i32* %esi.33.reg2mem, !insn.addr !667
  store i32 %486, i32* %edi.33.reg2mem, !insn.addr !667
  br i1 %489, label %dec_label_pc_414801, label %dec_label_pc_4146fd, !insn.addr !667
}

declare i8* @"std::bad_exception::`scalar deleting destructor'"(i32*) local_unnamed_addr

declare i8* @"std::exception::`scalar deleting destructor'"(i32*) local_unnamed_addr

define i8* @"std::exception::what"(i32* %this) local_unnamed_addr {
dec_label_pc_415cbb:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 4, !insn.addr !668
  %2 = inttoptr i32 %1 to i32*, !insn.addr !668
  %3 = load i32, i32* %2, align 4, !insn.addr !668
  %4 = icmp eq i32 %3, 0, !insn.addr !669
  %5 = icmp eq i1 %4, false, !insn.addr !670
  %6 = inttoptr i32 %3 to i8*
  %7 = select i1 %5, i8* %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_472244, i32 0, i32 0), !insn.addr !671
  ret i8* %7, !insn.addr !671
}

define void @memmove(i8* %dst, i8* %src, i32 %count) local_unnamed_addr {
dec_label_pc_415fa0:
  %edi.33.reg2mem = alloca i32, !insn.addr !672
  %esi.33.reg2mem = alloca i32, !insn.addr !672
  %eax.9.reg2mem = alloca i32, !insn.addr !672
  %edi.32.reg2mem = alloca i32, !insn.addr !672
  %esi.32.reg2mem = alloca i32, !insn.addr !672
  %edi.31.reg2mem = alloca i32, !insn.addr !672
  %esi.31.reg2mem = alloca i32, !insn.addr !672
  %ecx.24.reg2mem = alloca i32, !insn.addr !672
  %edi.30.reg2mem = alloca i32, !insn.addr !672
  %esi.30.reg2mem = alloca i32, !insn.addr !672
  %ecx.23.reg2mem = alloca i32, !insn.addr !672
  %edi.29.reg2mem = alloca i32, !insn.addr !672
  %esi.29.reg2mem = alloca i32, !insn.addr !672
  %edi.28.reg2mem = alloca i32, !insn.addr !672
  %esi.28.reg2mem = alloca i32, !insn.addr !672
  %ecx.22.reg2mem = alloca i32, !insn.addr !672
  %edi.27.reg2mem = alloca i32, !insn.addr !672
  %esi.27.reg2mem = alloca i32, !insn.addr !672
  %ecx.21.reg2mem = alloca i32, !insn.addr !672
  %edi.26.reg2mem = alloca i32, !insn.addr !672
  %esi.26.reg2mem = alloca i32, !insn.addr !672
  %edx.2.reg2mem = alloca i32, !insn.addr !672
  %ecx.204.reg2mem = alloca i32, !insn.addr !672
  %esi.255.reg2mem = alloca i32, !insn.addr !672
  %edi.256.reg2mem = alloca i32, !insn.addr !672
  %edi.25.reg2mem = alloca i32, !insn.addr !672
  %esi.25.reg2mem = alloca i32, !insn.addr !672
  %edi.24.reg2mem = alloca i32, !insn.addr !672
  %esi.24.reg2mem = alloca i32, !insn.addr !672
  %edx.1.reg2mem = alloca i32, !insn.addr !672
  %edi.23.reg2mem = alloca i32, !insn.addr !672
  %esi.23.reg2mem = alloca i32, !insn.addr !672
  %ecx.19.reg2mem = alloca i32, !insn.addr !672
  %edi.22.reg2mem = alloca i32, !insn.addr !672
  %esi.22.reg2mem = alloca i32, !insn.addr !672
  %ecx.18.reg2mem = alloca i32, !insn.addr !672
  %edi.21.reg2mem = alloca i32, !insn.addr !672
  %esi.21.reg2mem = alloca i32, !insn.addr !672
  %ecx.17.reg2mem = alloca i32, !insn.addr !672
  %edi.20.reg2mem = alloca i32, !insn.addr !672
  %esi.20.reg2mem = alloca i32, !insn.addr !672
  %ecx.16.reg2mem = alloca i32, !insn.addr !672
  %edi.19.reg2mem = alloca i32, !insn.addr !672
  %esi.19.reg2mem = alloca i32, !insn.addr !672
  %ecx.15.reg2mem = alloca i32, !insn.addr !672
  %edi.18.reg2mem = alloca i32, !insn.addr !672
  %esi.18.reg2mem = alloca i32, !insn.addr !672
  %ecx.14.reg2mem = alloca i32, !insn.addr !672
  %edi.17.reg2mem = alloca i32, !insn.addr !672
  %esi.17.reg2mem = alloca i32, !insn.addr !672
  %ecx.13.reg2mem = alloca i32, !insn.addr !672
  %edi.16.reg2mem = alloca i32, !insn.addr !672
  %esi.16.reg2mem = alloca i32, !insn.addr !672
  %ecx.12.reg2mem = alloca i32, !insn.addr !672
  %edi.16.ph.reg2mem = alloca i32, !insn.addr !672
  %esi.16.ph.reg2mem = alloca i32, !insn.addr !672
  %ecx.12.ph.reg2mem = alloca i32, !insn.addr !672
  %edi.15.reg2mem = alloca i32, !insn.addr !672
  %esi.15.reg2mem = alloca i32, !insn.addr !672
  %ecx.11.reg2mem = alloca i32, !insn.addr !672
  %edi.14.reg2mem = alloca i32, !insn.addr !672
  %esi.14.reg2mem = alloca i32, !insn.addr !672
  %ecx.10.reg2mem = alloca i32, !insn.addr !672
  %edi.13.reg2mem = alloca i32, !insn.addr !672
  %esi.13.reg2mem = alloca i32, !insn.addr !672
  %edx.0.reg2mem = alloca i32, !insn.addr !672
  %edi.12.reg2mem = alloca i32, !insn.addr !672
  %esi.12.reg2mem = alloca i32, !insn.addr !672
  %edi.11.reg2mem = alloca i32, !insn.addr !672
  %esi.11.reg2mem = alloca i32, !insn.addr !672
  %edi.10.reg2mem = alloca i32, !insn.addr !672
  %esi.10.reg2mem = alloca i32, !insn.addr !672
  %edi.9.reg2mem = alloca i32, !insn.addr !672
  %esi.9.reg2mem = alloca i32, !insn.addr !672
  %ecx.9.reg2mem = alloca i32, !insn.addr !672
  %edi.8.reg2mem = alloca i32, !insn.addr !672
  %esi.8.reg2mem = alloca i32, !insn.addr !672
  %ecx.8.reg2mem = alloca i32, !insn.addr !672
  %edi.7.reg2mem = alloca i32, !insn.addr !672
  %esi.7.reg2mem = alloca i32, !insn.addr !672
  %ecx.7.reg2mem = alloca i32, !insn.addr !672
  %edi.6.reg2mem = alloca i32, !insn.addr !672
  %esi.6.reg2mem = alloca i32, !insn.addr !672
  %ecx.6.reg2mem = alloca i32, !insn.addr !672
  %edi.5.lcssa.reg2mem = alloca i32, !insn.addr !672
  %esi.5.lcssa.reg2mem = alloca i32, !insn.addr !672
  %ecx.5.lcssa.reg2mem = alloca i32, !insn.addr !672
  %ecx.546.reg2mem = alloca i32, !insn.addr !672
  %esi.547.reg2mem = alloca i32, !insn.addr !672
  %edi.548.reg2mem = alloca i32, !insn.addr !672
  %edi.5.ph.reg2mem = alloca i32, !insn.addr !672
  %esi.5.ph.reg2mem = alloca i32, !insn.addr !672
  %ecx.5.ph.reg2mem = alloca i32, !insn.addr !672
  %edi.4.reg2mem = alloca i32, !insn.addr !672
  %esi.4.reg2mem = alloca i32, !insn.addr !672
  %ecx.4.reg2mem = alloca i32, !insn.addr !672
  %xmm1.2.reg2mem = alloca i128, !insn.addr !672
  %edi.3.reg2mem = alloca i32, !insn.addr !672
  %esi.3.reg2mem = alloca i32, !insn.addr !672
  %ecx.3.reg2mem = alloca i32, !insn.addr !672
  %xmm1.1.reg2mem = alloca i128, !insn.addr !672
  %edi.2.reg2mem = alloca i32, !insn.addr !672
  %esi.2.reg2mem = alloca i32, !insn.addr !672
  %ecx.2.reg2mem = alloca i32, !insn.addr !672
  %xmm1.0.reg2mem = alloca i128, !insn.addr !672
  %edi.1.reg2mem = alloca i32, !insn.addr !672
  %esi.1.reg2mem = alloca i32, !insn.addr !672
  %ecx.1.reg2mem = alloca i32, !insn.addr !672
  %edi.0.reg2mem = alloca i32, !insn.addr !672
  %esi.0.reg2mem = alloca i32, !insn.addr !672
  %ecx.0.reg2mem = alloca i32, !insn.addr !672
  %0 = call i1 @__decompiler_undefined_function_7()
  %1 = ptrtoint i8* %src to i32
  %2 = ptrtoint i8* %dst to i32
  %3 = add i32 %1, %count, !insn.addr !673
  %4 = icmp ugt i8* %dst, %src
  %5 = icmp ugt i32 %3, %2, !insn.addr !674
  %or.cond = icmp eq i1 %4, %5
  br i1 %or.cond, label %dec_label_pc_416254, label %dec_label_pc_415fc0, !insn.addr !675

dec_label_pc_415fc0:                              ; preds = %dec_label_pc_415fa0
  %6 = icmp ult i32 %count, 32, !insn.addr !676
  store i32 %count, i32* %ecx.21.reg2mem, !insn.addr !677
  store i32 %1, i32* %esi.27.reg2mem, !insn.addr !677
  store i32 %2, i32* %edi.27.reg2mem, !insn.addr !677
  br i1 %6, label %dec_label_pc_41649b, label %dec_label_pc_415fc9, !insn.addr !677

dec_label_pc_415fc9:                              ; preds = %dec_label_pc_415fc0
  %7 = icmp ult i32 %count, 128, !insn.addr !678
  %8 = icmp eq i1 %7, false, !insn.addr !679
  br i1 %8, label %dec_label_pc_415fe4, label %dec_label_pc_415fd1, !insn.addr !679

dec_label_pc_415fd1:                              ; preds = %dec_label_pc_415fc9
  %9 = load i32, i32* @__isa_enabled, align 4, !insn.addr !680
  %10 = and i32 %9, 2, !insn.addr !680
  %11 = icmp eq i32 %10, 0, !insn.addr !680
  store i32 %2, i32* %edi.256.reg2mem, !insn.addr !681
  store i32 %1, i32* %esi.255.reg2mem, !insn.addr !681
  store i32 %count, i32* %ecx.204.reg2mem, !insn.addr !681
  br i1 %11, label %dec_label_pc_4161c7, label %dec_label_pc_416471, !insn.addr !681

dec_label_pc_415fe4:                              ; preds = %dec_label_pc_415fc9
  %12 = load i32, i32* @__favor, align 4, !insn.addr !682
  %13 = and i32 %12, 2, !insn.addr !682
  %14 = icmp ne i32 %13, 0, !insn.addr !682
  %15 = icmp eq i1 %14, false, !insn.addr !683
  br i1 %15, label %dec_label_pc_415ff7, label %dec_label_pc_415fee, !insn.addr !683

dec_label_pc_415fee:                              ; preds = %dec_label_pc_415fe4
  call void @__asm_rep_movsb_memcpy(i8* %dst, i8* %src, i32 %count), !insn.addr !684
  ret void, !insn.addr !685

dec_label_pc_415ff7:                              ; preds = %dec_label_pc_415fe4
  %16 = xor i32 %1, %2, !insn.addr !686
  %17 = and i32 %16, 15, !insn.addr !687
  %18 = icmp eq i32 %17, 0, !insn.addr !687
  %19 = icmp eq i1 %18, false, !insn.addr !688
  br i1 %19, label %dec_label_pc_416010, label %dec_label_pc_416002, !insn.addr !688

dec_label_pc_416002:                              ; preds = %dec_label_pc_415ff7
  %20 = load i32, i32* @__isa_enabled, align 4, !insn.addr !689
  %21 = and i32 %20, 2, !insn.addr !689
  %22 = icmp eq i32 %21, 0, !insn.addr !689
  br i1 %22, label %dec_label_pc_416010, label %dec_label_pc_4163f0, !insn.addr !690

dec_label_pc_416010:                              ; preds = %dec_label_pc_416002, %dec_label_pc_415ff7
  %23 = and i32 %12, 1, !insn.addr !691
  %24 = icmp ne i32 %23, 0, !insn.addr !691
  %25 = icmp eq i1 %24, false, !insn.addr !692
  br i1 %25, label %dec_label_pc_4161c7, label %dec_label_pc_41601e, !insn.addr !692

dec_label_pc_41601e:                              ; preds = %dec_label_pc_416010
  %26 = and i32 %2, 3, !insn.addr !693
  %27 = icmp eq i32 %26, 0, !insn.addr !693
  %28 = icmp eq i1 %27, false, !insn.addr !694
  br i1 %28, label %dec_label_pc_4161c7, label %dec_label_pc_41602a, !insn.addr !694

dec_label_pc_41602a:                              ; preds = %dec_label_pc_41601e
  %29 = and i32 %1, 3, !insn.addr !695
  %30 = icmp eq i32 %29, 0, !insn.addr !695
  %31 = icmp eq i1 %30, false, !insn.addr !696
  store i32 %count, i32* %ecx.9.reg2mem, !insn.addr !696
  store i32 %1, i32* %esi.9.reg2mem, !insn.addr !696
  store i32 %2, i32* %edi.9.reg2mem, !insn.addr !696
  br i1 %31, label %dec_label_pc_4161e2, label %dec_label_pc_416036, !insn.addr !696

dec_label_pc_416036:                              ; preds = %dec_label_pc_41602a
  %32 = and i32 %2, 4, !insn.addr !697
  %33 = icmp ne i32 %32, 0, !insn.addr !697
  %34 = icmp eq i1 %33, false, !insn.addr !698
  store i32 %count, i32* %ecx.0.reg2mem, !insn.addr !698
  store i32 %1, i32* %esi.0.reg2mem, !insn.addr !698
  store i32 %2, i32* %edi.0.reg2mem, !insn.addr !698
  br i1 %34, label %dec_label_pc_416049, label %dec_label_pc_41603c, !insn.addr !698

dec_label_pc_41603c:                              ; preds = %dec_label_pc_416036
  %35 = bitcast i8* %src to i32*, !insn.addr !699
  %36 = load i32, i32* %35, align 4, !insn.addr !699
  %37 = add i32 %count, -4, !insn.addr !700
  %38 = add i32 %1, 4, !insn.addr !701
  %39 = bitcast i8* %dst to i32*, !insn.addr !702
  store i32 %36, i32* %39, align 4, !insn.addr !702
  %40 = add i32 %2, 4, !insn.addr !703
  store i32 %37, i32* %ecx.0.reg2mem, !insn.addr !703
  store i32 %38, i32* %esi.0.reg2mem, !insn.addr !703
  store i32 %40, i32* %edi.0.reg2mem, !insn.addr !703
  br label %dec_label_pc_416049, !insn.addr !703

dec_label_pc_416049:                              ; preds = %dec_label_pc_41603c, %dec_label_pc_416036
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %41 = and i32 %edi.0.reload, 8, !insn.addr !704
  %42 = icmp ne i32 %41, 0, !insn.addr !704
  %43 = icmp eq i1 %42, false, !insn.addr !705
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !705
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !705
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !705
  br i1 %43, label %dec_label_pc_416060, label %dec_label_pc_41604f, !insn.addr !705

dec_label_pc_41604f:                              ; preds = %dec_label_pc_416049
  %44 = inttoptr i32 %esi.0.reload to i64*, !insn.addr !706
  %45 = load i64, i64* %44, align 4, !insn.addr !706
  %46 = call i128 @__asm_movq(i64 %45), !insn.addr !706
  %47 = add i32 %ecx.0.reload, -8, !insn.addr !707
  %48 = add i32 %esi.0.reload, 8, !insn.addr !708
  %49 = inttoptr i32 %edi.0.reload to i64*, !insn.addr !709
  %50 = load i64, i64* %49, align 4, !insn.addr !709
  call void @__asm_movq.7(i64 %50, i128 %46), !insn.addr !709
  %51 = add i32 %edi.0.reload, 8, !insn.addr !710
  store i32 %47, i32* %ecx.1.reg2mem, !insn.addr !710
  store i32 %48, i32* %esi.1.reg2mem, !insn.addr !710
  store i32 %51, i32* %edi.1.reg2mem, !insn.addr !710
  br label %dec_label_pc_416060, !insn.addr !710

dec_label_pc_416060:                              ; preds = %dec_label_pc_41604f, %dec_label_pc_416049
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %52 = and i32 %esi.1.reload, 7, !insn.addr !711
  %53 = icmp eq i32 %52, 0, !insn.addr !711
  br i1 %53, label %dec_label_pc_4160cd, label %dec_label_pc_416068, !insn.addr !712

dec_label_pc_416068:                              ; preds = %dec_label_pc_416060
  %54 = and i32 %esi.1.reload, 8, !insn.addr !713
  %55 = icmp ne i32 %54, 0, !insn.addr !713
  %56 = icmp eq i1 %55, false, !insn.addr !714
  br i1 %56, label %dec_label_pc_416126, label %dec_label_pc_416072, !insn.addr !714

dec_label_pc_416072:                              ; preds = %dec_label_pc_416068
  %57 = add i32 %esi.1.reload, -12, !insn.addr !715
  %58 = inttoptr i32 %57 to i128*, !insn.addr !715
  %59 = load i128, i128* %58, align 4, !insn.addr !715
  %60 = call i128 @__asm_movdqa.8(i128 %59), !insn.addr !715
  store i128 %60, i128* %xmm1.0.reg2mem, !insn.addr !716
  store i32 %ecx.1.reload, i32* %ecx.2.reg2mem, !insn.addr !716
  store i32 %57, i32* %esi.2.reg2mem, !insn.addr !716
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !716
  br label %dec_label_pc_41607c, !insn.addr !716

dec_label_pc_41607c:                              ; preds = %dec_label_pc_41607c, %dec_label_pc_416072
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %xmm1.0.reload = load i128, i128* %xmm1.0.reg2mem
  %61 = add i32 %esi.2.reload, 16, !insn.addr !717
  %62 = inttoptr i32 %61 to i128*, !insn.addr !717
  %63 = load i128, i128* %62, align 4, !insn.addr !717
  %64 = call i128 @__asm_movdqa.8(i128 %63), !insn.addr !717
  %65 = add i32 %ecx.2.reload, -48, !insn.addr !718
  %66 = add i32 %esi.2.reload, 32, !insn.addr !719
  %67 = inttoptr i32 %66 to i128*, !insn.addr !719
  %68 = load i128, i128* %67, align 4, !insn.addr !719
  %69 = call i128 @__asm_movdqa.8(i128 %68), !insn.addr !719
  %70 = add i32 %esi.2.reload, 48, !insn.addr !720
  %71 = inttoptr i32 %70 to i128*, !insn.addr !720
  %72 = load i128, i128* %71, align 4, !insn.addr !720
  %73 = call i128 @__asm_movdqa.8(i128 %72), !insn.addr !720
  %74 = icmp ult i32 %65, 48, !insn.addr !721
  %75 = call i128 @__asm_movdqa.8(i128 %64), !insn.addr !722
  %76 = call i128 @__asm_palignr(i128 %64, i128 %xmm1.0.reload, i32 12), !insn.addr !723
  %77 = inttoptr i32 %edi.2.reload to i128*, !insn.addr !724
  %78 = load i128, i128* %77, align 4, !insn.addr !724
  call void @__asm_movdqa(i128 %78, i128 %76), !insn.addr !724
  %79 = call i128 @__asm_movdqa.8(i128 %69), !insn.addr !725
  %80 = call i128 @__asm_palignr(i128 %69, i128 %75, i32 12), !insn.addr !726
  %81 = add i32 %edi.2.reload, 16, !insn.addr !727
  %82 = inttoptr i32 %81 to i128*, !insn.addr !727
  %83 = load i128, i128* %82, align 4, !insn.addr !727
  call void @__asm_movdqa(i128 %83, i128 %80), !insn.addr !727
  %84 = call i128 @__asm_movdqa.8(i128 %73), !insn.addr !728
  %85 = call i128 @__asm_palignr(i128 %73, i128 %79, i32 12), !insn.addr !729
  %86 = add i32 %edi.2.reload, 32, !insn.addr !730
  %87 = inttoptr i32 %86 to i128*, !insn.addr !730
  %88 = load i128, i128* %87, align 4, !insn.addr !730
  call void @__asm_movdqa(i128 %88, i128 %85), !insn.addr !730
  %89 = add i32 %edi.2.reload, 48, !insn.addr !731
  %90 = icmp eq i1 %74, false, !insn.addr !732
  store i128 %84, i128* %xmm1.0.reg2mem, !insn.addr !732
  store i32 %65, i32* %ecx.2.reg2mem, !insn.addr !732
  store i32 %70, i32* %esi.2.reg2mem, !insn.addr !732
  store i32 %89, i32* %edi.2.reg2mem, !insn.addr !732
  br i1 %90, label %dec_label_pc_41607c, label %dec_label_pc_4160c5, !insn.addr !732

dec_label_pc_4160c5:                              ; preds = %dec_label_pc_41607c
  %91 = add i32 %esi.2.reload, 60, !insn.addr !733
  store i32 %65, i32* %ecx.5.ph.reg2mem, !insn.addr !734
  store i32 %91, i32* %esi.5.ph.reg2mem, !insn.addr !734
  store i32 %89, i32* %edi.5.ph.reg2mem, !insn.addr !734
  br label %dec_label_pc_41617c.preheader, !insn.addr !734

dec_label_pc_4160cd:                              ; preds = %dec_label_pc_416060
  %92 = add i32 %esi.1.reload, -8, !insn.addr !735
  %93 = inttoptr i32 %92 to i128*, !insn.addr !735
  %94 = load i128, i128* %93, align 4, !insn.addr !735
  %95 = call i128 @__asm_movdqa.8(i128 %94), !insn.addr !735
  store i128 %95, i128* %xmm1.1.reg2mem, !insn.addr !736
  store i32 %ecx.1.reload, i32* %ecx.3.reg2mem, !insn.addr !736
  store i32 %92, i32* %esi.3.reg2mem, !insn.addr !736
  store i32 %edi.1.reload, i32* %edi.3.reg2mem, !insn.addr !736
  br label %dec_label_pc_4160d8, !insn.addr !736

dec_label_pc_4160d8:                              ; preds = %dec_label_pc_4160d8, %dec_label_pc_4160cd
  %edi.3.reload = load i32, i32* %edi.3.reg2mem
  %esi.3.reload = load i32, i32* %esi.3.reg2mem
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %xmm1.1.reload = load i128, i128* %xmm1.1.reg2mem
  %96 = add i32 %esi.3.reload, 16, !insn.addr !737
  %97 = inttoptr i32 %96 to i128*, !insn.addr !737
  %98 = load i128, i128* %97, align 4, !insn.addr !737
  %99 = call i128 @__asm_movdqa.8(i128 %98), !insn.addr !737
  %100 = add i32 %ecx.3.reload, -48, !insn.addr !738
  %101 = add i32 %esi.3.reload, 32, !insn.addr !739
  %102 = inttoptr i32 %101 to i128*, !insn.addr !739
  %103 = load i128, i128* %102, align 4, !insn.addr !739
  %104 = call i128 @__asm_movdqa.8(i128 %103), !insn.addr !739
  %105 = add i32 %esi.3.reload, 48, !insn.addr !740
  %106 = inttoptr i32 %105 to i128*, !insn.addr !740
  %107 = load i128, i128* %106, align 4, !insn.addr !740
  %108 = call i128 @__asm_movdqa.8(i128 %107), !insn.addr !740
  %109 = icmp ult i32 %100, 48, !insn.addr !741
  %110 = call i128 @__asm_movdqa.8(i128 %99), !insn.addr !742
  %111 = call i128 @__asm_palignr(i128 %99, i128 %xmm1.1.reload, i32 8), !insn.addr !743
  %112 = inttoptr i32 %edi.3.reload to i128*, !insn.addr !744
  %113 = load i128, i128* %112, align 4, !insn.addr !744
  call void @__asm_movdqa(i128 %113, i128 %111), !insn.addr !744
  %114 = call i128 @__asm_movdqa.8(i128 %104), !insn.addr !745
  %115 = call i128 @__asm_palignr(i128 %104, i128 %110, i32 8), !insn.addr !746
  %116 = add i32 %edi.3.reload, 16, !insn.addr !747
  %117 = inttoptr i32 %116 to i128*, !insn.addr !747
  %118 = load i128, i128* %117, align 4, !insn.addr !747
  call void @__asm_movdqa(i128 %118, i128 %115), !insn.addr !747
  %119 = call i128 @__asm_movdqa.8(i128 %108), !insn.addr !748
  %120 = call i128 @__asm_palignr(i128 %108, i128 %114, i32 8), !insn.addr !749
  %121 = add i32 %edi.3.reload, 32, !insn.addr !750
  %122 = inttoptr i32 %121 to i128*, !insn.addr !750
  %123 = load i128, i128* %122, align 4, !insn.addr !750
  call void @__asm_movdqa(i128 %123, i128 %120), !insn.addr !750
  %124 = add i32 %edi.3.reload, 48, !insn.addr !751
  %125 = icmp eq i1 %109, false, !insn.addr !752
  store i128 %119, i128* %xmm1.1.reg2mem, !insn.addr !752
  store i32 %100, i32* %ecx.3.reg2mem, !insn.addr !752
  store i32 %105, i32* %esi.3.reg2mem, !insn.addr !752
  store i32 %124, i32* %edi.3.reg2mem, !insn.addr !752
  br i1 %125, label %dec_label_pc_4160d8, label %dec_label_pc_416121, !insn.addr !752

dec_label_pc_416121:                              ; preds = %dec_label_pc_4160d8
  %126 = add i32 %esi.3.reload, 56, !insn.addr !753
  store i32 %100, i32* %ecx.5.ph.reg2mem, !insn.addr !754
  store i32 %126, i32* %esi.5.ph.reg2mem, !insn.addr !754
  store i32 %124, i32* %edi.5.ph.reg2mem, !insn.addr !754
  br label %dec_label_pc_41617c.preheader, !insn.addr !754

dec_label_pc_416126:                              ; preds = %dec_label_pc_416068
  %127 = add i32 %esi.1.reload, -4, !insn.addr !755
  %128 = inttoptr i32 %127 to i128*, !insn.addr !755
  %129 = load i128, i128* %128, align 4, !insn.addr !755
  %130 = call i128 @__asm_movdqa.8(i128 %129), !insn.addr !755
  store i128 %130, i128* %xmm1.2.reg2mem, !insn.addr !756
  store i32 %ecx.1.reload, i32* %ecx.4.reg2mem, !insn.addr !756
  store i32 %127, i32* %esi.4.reg2mem, !insn.addr !756
  store i32 %edi.1.reload, i32* %edi.4.reg2mem, !insn.addr !756
  br label %dec_label_pc_416130, !insn.addr !756

dec_label_pc_416130:                              ; preds = %dec_label_pc_416130, %dec_label_pc_416126
  %edi.4.reload = load i32, i32* %edi.4.reg2mem
  %esi.4.reload = load i32, i32* %esi.4.reg2mem
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %xmm1.2.reload = load i128, i128* %xmm1.2.reg2mem
  %131 = add i32 %esi.4.reload, 16, !insn.addr !757
  %132 = inttoptr i32 %131 to i128*, !insn.addr !757
  %133 = load i128, i128* %132, align 4, !insn.addr !757
  %134 = call i128 @__asm_movdqa.8(i128 %133), !insn.addr !757
  %135 = add i32 %ecx.4.reload, -48, !insn.addr !758
  %136 = add i32 %esi.4.reload, 32, !insn.addr !759
  %137 = inttoptr i32 %136 to i128*, !insn.addr !759
  %138 = load i128, i128* %137, align 4, !insn.addr !759
  %139 = call i128 @__asm_movdqa.8(i128 %138), !insn.addr !759
  %140 = add i32 %esi.4.reload, 48, !insn.addr !760
  %141 = inttoptr i32 %140 to i128*, !insn.addr !760
  %142 = load i128, i128* %141, align 4, !insn.addr !760
  %143 = call i128 @__asm_movdqa.8(i128 %142), !insn.addr !760
  %144 = icmp ult i32 %135, 48, !insn.addr !761
  %145 = call i128 @__asm_movdqa.8(i128 %134), !insn.addr !762
  %146 = call i128 @__asm_palignr(i128 %134, i128 %xmm1.2.reload, i32 4), !insn.addr !763
  %147 = inttoptr i32 %edi.4.reload to i128*, !insn.addr !764
  %148 = load i128, i128* %147, align 4, !insn.addr !764
  call void @__asm_movdqa(i128 %148, i128 %146), !insn.addr !764
  %149 = call i128 @__asm_movdqa.8(i128 %139), !insn.addr !765
  %150 = call i128 @__asm_palignr(i128 %139, i128 %145, i32 4), !insn.addr !766
  %151 = add i32 %edi.4.reload, 16, !insn.addr !767
  %152 = inttoptr i32 %151 to i128*, !insn.addr !767
  %153 = load i128, i128* %152, align 4, !insn.addr !767
  call void @__asm_movdqa(i128 %153, i128 %150), !insn.addr !767
  %154 = call i128 @__asm_movdqa.8(i128 %143), !insn.addr !768
  %155 = call i128 @__asm_palignr(i128 %143, i128 %149, i32 4), !insn.addr !769
  %156 = add i32 %edi.4.reload, 32, !insn.addr !770
  %157 = inttoptr i32 %156 to i128*, !insn.addr !770
  %158 = load i128, i128* %157, align 4, !insn.addr !770
  call void @__asm_movdqa(i128 %158, i128 %155), !insn.addr !770
  %159 = add i32 %edi.4.reload, 48, !insn.addr !771
  %160 = icmp eq i1 %144, false, !insn.addr !772
  store i128 %154, i128* %xmm1.2.reg2mem, !insn.addr !772
  store i32 %135, i32* %ecx.4.reg2mem, !insn.addr !772
  store i32 %140, i32* %esi.4.reg2mem, !insn.addr !772
  store i32 %159, i32* %edi.4.reg2mem, !insn.addr !772
  br i1 %160, label %dec_label_pc_416130, label %dec_label_pc_416179, !insn.addr !772

dec_label_pc_416179:                              ; preds = %dec_label_pc_416130
  %161 = add i32 %esi.4.reload, 52, !insn.addr !773
  store i32 %135, i32* %ecx.5.ph.reg2mem, !insn.addr !773
  store i32 %161, i32* %esi.5.ph.reg2mem, !insn.addr !773
  store i32 %159, i32* %edi.5.ph.reg2mem, !insn.addr !773
  br label %dec_label_pc_41617c.preheader, !insn.addr !773

dec_label_pc_41617c.preheader:                    ; preds = %dec_label_pc_4160c5, %dec_label_pc_416121, %dec_label_pc_416179
  %edi.5.ph.reload = load i32, i32* %edi.5.ph.reg2mem
  %esi.5.ph.reload = load i32, i32* %esi.5.ph.reg2mem
  %ecx.5.ph.reload = load i32, i32* %ecx.5.ph.reg2mem
  %162 = icmp ult i32 %ecx.5.ph.reload, 16, !insn.addr !774
  store i32 %edi.5.ph.reload, i32* %edi.548.reg2mem, !insn.addr !775
  store i32 %esi.5.ph.reload, i32* %esi.547.reg2mem, !insn.addr !775
  store i32 %ecx.5.ph.reload, i32* %ecx.546.reg2mem, !insn.addr !775
  store i32 %ecx.5.ph.reload, i32* %ecx.5.lcssa.reg2mem, !insn.addr !775
  store i32 %esi.5.ph.reload, i32* %esi.5.lcssa.reg2mem, !insn.addr !775
  store i32 %edi.5.ph.reload, i32* %edi.5.lcssa.reg2mem, !insn.addr !775
  br i1 %162, label %dec_label_pc_416194, label %dec_label_pc_416181, !insn.addr !775

dec_label_pc_416181:                              ; preds = %dec_label_pc_41617c.preheader, %dec_label_pc_416181
  %ecx.546.reload = load i32, i32* %ecx.546.reg2mem
  %esi.547.reload = load i32, i32* %esi.547.reg2mem
  %edi.548.reload = load i32, i32* %edi.548.reg2mem
  %163 = inttoptr i32 %esi.547.reload to i128*, !insn.addr !776
  %164 = load i128, i128* %163, align 4, !insn.addr !776
  %165 = call i128 @__asm_movdqu.5(i128 %164), !insn.addr !776
  %166 = add i32 %ecx.546.reload, -16, !insn.addr !777
  %167 = add i32 %esi.547.reload, 16, !insn.addr !778
  %168 = inttoptr i32 %edi.548.reload to i128*, !insn.addr !779
  %169 = load i128, i128* %168, align 4, !insn.addr !779
  call void @__asm_movdqa(i128 %169, i128 %165), !insn.addr !779
  %170 = add i32 %edi.548.reload, 16, !insn.addr !780
  %171 = icmp ult i32 %166, 16, !insn.addr !774
  store i32 %170, i32* %edi.548.reg2mem, !insn.addr !775
  store i32 %167, i32* %esi.547.reg2mem, !insn.addr !775
  store i32 %166, i32* %ecx.546.reg2mem, !insn.addr !775
  br i1 %171, label %dec_label_pc_41617c.dec_label_pc_416194_crit_edge, label %dec_label_pc_416181, !insn.addr !775

dec_label_pc_41617c.dec_label_pc_416194_crit_edge: ; preds = %dec_label_pc_416181
  %172 = and i32 %ecx.5.ph.reload, 15
  store i32 %172, i32* %ecx.5.lcssa.reg2mem
  store i32 %167, i32* %esi.5.lcssa.reg2mem
  store i32 %170, i32* %edi.5.lcssa.reg2mem
  br label %dec_label_pc_416194

dec_label_pc_416194:                              ; preds = %dec_label_pc_41617c.dec_label_pc_416194_crit_edge, %dec_label_pc_41617c.preheader
  %edi.5.lcssa.reload = load i32, i32* %edi.5.lcssa.reg2mem
  %esi.5.lcssa.reload = load i32, i32* %esi.5.lcssa.reg2mem
  %ecx.5.lcssa.reload = load i32, i32* %ecx.5.lcssa.reg2mem
  %173 = and i32 %ecx.5.lcssa.reload, 4, !insn.addr !781
  %174 = icmp ne i32 %173, 0, !insn.addr !781
  %175 = icmp eq i1 %174, false, !insn.addr !782
  store i32 %ecx.5.lcssa.reload, i32* %ecx.6.reg2mem, !insn.addr !782
  store i32 %esi.5.lcssa.reload, i32* %esi.6.reg2mem, !insn.addr !782
  store i32 %edi.5.lcssa.reload, i32* %edi.6.reg2mem, !insn.addr !782
  br i1 %175, label %dec_label_pc_4161a7, label %dec_label_pc_41619a, !insn.addr !782

dec_label_pc_41619a:                              ; preds = %dec_label_pc_416194
  %176 = inttoptr i32 %esi.5.lcssa.reload to i32*, !insn.addr !783
  %177 = load i32, i32* %176, align 4, !insn.addr !783
  %178 = add i32 %ecx.5.lcssa.reload, -4, !insn.addr !784
  %179 = add i32 %esi.5.lcssa.reload, 4, !insn.addr !785
  %180 = inttoptr i32 %edi.5.lcssa.reload to i32*, !insn.addr !786
  store i32 %177, i32* %180, align 4, !insn.addr !786
  %181 = add i32 %edi.5.lcssa.reload, 4, !insn.addr !787
  store i32 %178, i32* %ecx.6.reg2mem, !insn.addr !787
  store i32 %179, i32* %esi.6.reg2mem, !insn.addr !787
  store i32 %181, i32* %edi.6.reg2mem, !insn.addr !787
  br label %dec_label_pc_4161a7, !insn.addr !787

dec_label_pc_4161a7:                              ; preds = %dec_label_pc_41619a, %dec_label_pc_416194
  %edi.6.reload = load i32, i32* %edi.6.reg2mem
  %esi.6.reload = load i32, i32* %esi.6.reg2mem
  %ecx.6.reload = load i32, i32* %ecx.6.reg2mem
  store i32 %ecx.6.reload, i32* %ecx.7.reg2mem
  store i32 %esi.6.reload, i32* %esi.7.reg2mem
  store i32 %edi.6.reload, i32* %edi.7.reg2mem
  br label %dec_label_pc_4161be

dec_label_pc_4161ad:                              ; preds = %dec_label_pc_4161be
  %182 = inttoptr i32 %esi.7.reload to i64*, !insn.addr !788
  %183 = load i64, i64* %182, align 4, !insn.addr !788
  %184 = call i128 @__asm_movq(i64 %183), !insn.addr !788
  %185 = add i32 %ecx.7.reload, -8, !insn.addr !789
  %186 = add i32 %esi.7.reload, 8, !insn.addr !790
  %187 = inttoptr i32 %edi.7.reload to i64*, !insn.addr !791
  %188 = load i64, i64* %187, align 4, !insn.addr !791
  call void @__asm_movq.7(i64 %188, i128 %184), !insn.addr !791
  %189 = add i32 %edi.7.reload, 8, !insn.addr !792
  store i32 %185, i32* %ecx.7.reg2mem, !insn.addr !792
  store i32 %186, i32* %esi.7.reg2mem, !insn.addr !792
  store i32 %189, i32* %edi.7.reg2mem, !insn.addr !792
  br label %dec_label_pc_4161be, !insn.addr !792

dec_label_pc_4161be:                              ; preds = %dec_label_pc_4161a7, %dec_label_pc_4161ad
  %edi.7.reload = load i32, i32* %edi.7.reg2mem
  %esi.7.reload = load i32, i32* %esi.7.reg2mem
  %ecx.7.reload = load i32, i32* %ecx.7.reg2mem
  store i32 %ecx.7.reload, i32* @5, align 4, !insn.addr !793
  store i32 %esi.7.reload, i32* %esi.10.reg2mem, !insn.addr !794
  store i32 %edi.7.reload, i32* %edi.10.reg2mem, !insn.addr !794
  store i32 %esi.7.reload, i32* %esi.11.reg2mem, !insn.addr !794
  store i32 %edi.7.reload, i32* %edi.11.reg2mem, !insn.addr !794
  store i32 %esi.7.reload, i32* %esi.12.reg2mem, !insn.addr !794
  store i32 %edi.7.reload, i32* %edi.12.reg2mem, !insn.addr !794
  switch i32 %ecx.7.reload, label %dec_label_pc_4161ad [
    i32 0, label %dec_label_pc_416214
    i32 1, label %dec_label_pc_41621c
    i32 2, label %dec_label_pc_416228
    i32 3, label %dec_label_pc_41623c
  ], !insn.addr !794

dec_label_pc_4161c7:                              ; preds = %dec_label_pc_415fd1, %dec_label_pc_41601e, %dec_label_pc_416010
  %190 = and i32 %2, 3, !insn.addr !795
  %191 = icmp eq i32 %190, 0, !insn.addr !795
  store i32 %count, i32* %ecx.8.reg2mem, !insn.addr !796
  store i32 %1, i32* %esi.8.reg2mem, !insn.addr !796
  store i32 %2, i32* %edi.8.reg2mem, !insn.addr !796
  store i32 %count, i32* %ecx.9.reg2mem, !insn.addr !796
  store i32 %1, i32* %esi.9.reg2mem, !insn.addr !796
  store i32 %2, i32* %edi.9.reg2mem, !insn.addr !796
  br i1 %191, label %dec_label_pc_4161e2, label %dec_label_pc_4161cf, !insn.addr !796

dec_label_pc_4161cf:                              ; preds = %dec_label_pc_4161c7, %dec_label_pc_4161cf
  %edi.8.reload = load i32, i32* %edi.8.reg2mem
  %esi.8.reload = load i32, i32* %esi.8.reg2mem
  %ecx.8.reload = load i32, i32* %ecx.8.reg2mem
  %192 = inttoptr i32 %esi.8.reload to i8*, !insn.addr !797
  %193 = load i8, i8* %192, align 1, !insn.addr !797
  %194 = inttoptr i32 %edi.8.reload to i8*, !insn.addr !798
  store i8 %193, i8* %194, align 1, !insn.addr !798
  %195 = add i32 %ecx.8.reload, -1, !insn.addr !799
  %196 = add i32 %esi.8.reload, 1, !insn.addr !800
  %197 = add i32 %edi.8.reload, 1, !insn.addr !801
  %198 = and i32 %197, 3, !insn.addr !802
  %199 = icmp eq i32 %198, 0, !insn.addr !802
  %200 = icmp eq i1 %199, false, !insn.addr !803
  store i32 %195, i32* %ecx.8.reg2mem, !insn.addr !803
  store i32 %196, i32* %esi.8.reg2mem, !insn.addr !803
  store i32 %197, i32* %edi.8.reg2mem, !insn.addr !803
  store i32 %195, i32* %ecx.9.reg2mem, !insn.addr !803
  store i32 %196, i32* %esi.9.reg2mem, !insn.addr !803
  store i32 %197, i32* %edi.9.reg2mem, !insn.addr !803
  br i1 %200, label %dec_label_pc_4161cf, label %dec_label_pc_4161e2, !insn.addr !803

dec_label_pc_4161e2:                              ; preds = %dec_label_pc_4161cf, %dec_label_pc_4161c7, %dec_label_pc_41602a
  %edi.9.reload = load i32, i32* %edi.9.reg2mem
  %esi.9.reload = load i32, i32* %esi.9.reg2mem
  %ecx.9.reload = load i32, i32* %ecx.9.reg2mem
  %201 = udiv i32 %ecx.9.reload, 4, !insn.addr !804
  %202 = inttoptr i32 %esi.9.reload to i8*, !insn.addr !805
  %203 = inttoptr i32 %edi.9.reload to i8*, !insn.addr !805
  call void @__asm_rep_movsd_memcpy(i8* %203, i8* %202, i32 %201), !insn.addr !805
  %204 = select i1 %0, i32 -4, i32 4, !insn.addr !805
  %205 = mul i32 %201, %204, !insn.addr !805
  %206 = add i32 %edi.9.reload, %205, !insn.addr !805
  %207 = and i32 %ecx.9.reload, 3, !insn.addr !806
  store i32 %207, i32* @6, align 4, !insn.addr !807
  store i32 %206, i32* %esi.10.reg2mem, !insn.addr !807
  store i32 %206, i32* %edi.10.reg2mem, !insn.addr !807
  store i32 %206, i32* %esi.11.reg2mem, !insn.addr !807
  store i32 %206, i32* %edi.11.reg2mem, !insn.addr !807
  store i32 %206, i32* %esi.12.reg2mem, !insn.addr !807
  store i32 %206, i32* %edi.12.reg2mem, !insn.addr !807
  switch i32 %207, label %dec_label_pc_41649b3 [
    i32 0, label %dec_label_pc_416214
    i32 1, label %dec_label_pc_41621c
    i32 2, label %dec_label_pc_416228
    i32 3, label %dec_label_pc_41623c
  ], !insn.addr !807

dec_label_pc_416214:                              ; preds = %dec_label_pc_4161be, %dec_label_pc_4164bd, %dec_label_pc_4163d5, %dec_label_pc_416296, %dec_label_pc_41646d, %dec_label_pc_41649b, %dec_label_pc_4164b6, %dec_label_pc_4163d1, %dec_label_pc_4161e2
  ret void, !insn.addr !808

dec_label_pc_41621c:                              ; preds = %dec_label_pc_4161be, %dec_label_pc_4161e2
  %edi.10.reload = load i32, i32* %edi.10.reg2mem
  %esi.10.reload = load i32, i32* %esi.10.reg2mem
  %208 = inttoptr i32 %esi.10.reload to i8*, !insn.addr !809
  %209 = load i8, i8* %208, align 1, !insn.addr !809
  %210 = inttoptr i32 %edi.10.reload to i8*, !insn.addr !810
  store i8 %209, i8* %210, align 1, !insn.addr !810
  ret void, !insn.addr !811

dec_label_pc_416228:                              ; preds = %dec_label_pc_4161be, %dec_label_pc_4161e2
  %edi.11.reload = load i32, i32* %edi.11.reg2mem
  %esi.11.reload = load i32, i32* %esi.11.reg2mem
  %211 = inttoptr i32 %esi.11.reload to i8*, !insn.addr !812
  %212 = load i8, i8* %211, align 1, !insn.addr !812
  %213 = inttoptr i32 %edi.11.reload to i8*, !insn.addr !813
  store i8 %212, i8* %213, align 1, !insn.addr !813
  %214 = add i32 %esi.11.reload, 1, !insn.addr !814
  %215 = inttoptr i32 %214 to i8*, !insn.addr !814
  %216 = load i8, i8* %215, align 1, !insn.addr !814
  %217 = add i32 %edi.11.reload, 1, !insn.addr !815
  %218 = inttoptr i32 %217 to i8*, !insn.addr !815
  store i8 %216, i8* %218, align 1, !insn.addr !815
  ret void, !insn.addr !816

dec_label_pc_41623c:                              ; preds = %dec_label_pc_4161be, %dec_label_pc_4161e2
  %edi.12.reload = load i32, i32* %edi.12.reg2mem
  %esi.12.reload = load i32, i32* %esi.12.reg2mem
  %219 = inttoptr i32 %esi.12.reload to i8*, !insn.addr !817
  %220 = load i8, i8* %219, align 1, !insn.addr !817
  %221 = inttoptr i32 %edi.12.reload to i8*, !insn.addr !818
  store i8 %220, i8* %221, align 1, !insn.addr !818
  %222 = add i32 %esi.12.reload, 1, !insn.addr !819
  %223 = inttoptr i32 %222 to i8*, !insn.addr !819
  %224 = load i8, i8* %223, align 1, !insn.addr !819
  %225 = add i32 %edi.12.reload, 1, !insn.addr !820
  %226 = inttoptr i32 %225 to i8*, !insn.addr !820
  store i8 %224, i8* %226, align 1, !insn.addr !820
  %227 = add i32 %esi.12.reload, 2, !insn.addr !821
  %228 = inttoptr i32 %227 to i8*, !insn.addr !821
  %229 = load i8, i8* %228, align 1, !insn.addr !821
  %230 = add i32 %edi.12.reload, 2, !insn.addr !822
  %231 = inttoptr i32 %230 to i8*, !insn.addr !822
  store i8 %229, i8* %231, align 1, !insn.addr !822
  ret void, !insn.addr !823

dec_label_pc_416254:                              ; preds = %dec_label_pc_415fa0
  %232 = add i32 %2, %count, !insn.addr !824
  %233 = icmp ult i32 %count, 32, !insn.addr !825
  store i32 %count, i32* %ecx.15.reg2mem, !insn.addr !826
  store i32 %3, i32* %esi.19.reg2mem, !insn.addr !826
  store i32 %232, i32* %edi.19.reg2mem, !insn.addr !826
  br i1 %233, label %dec_label_pc_4163b4, label %dec_label_pc_416263, !insn.addr !826

dec_label_pc_416263:                              ; preds = %dec_label_pc_416254
  %234 = load i32, i32* @__isa_enabled, align 4, !insn.addr !827
  %235 = and i32 %234, 2, !insn.addr !827
  %236 = icmp eq i32 %235, 0, !insn.addr !827
  br i1 %236, label %dec_label_pc_416271, label %dec_label_pc_416305, !insn.addr !828

dec_label_pc_416271:                              ; preds = %dec_label_pc_416263
  %237 = and i32 %232, 3, !insn.addr !829
  %238 = icmp eq i32 %237, 0, !insn.addr !829
  store i32 %237, i32* %edx.0.reg2mem, !insn.addr !830
  store i32 %3, i32* %esi.13.reg2mem, !insn.addr !830
  store i32 %232, i32* %edi.13.reg2mem, !insn.addr !830
  store i32 %count, i32* %ecx.10.reg2mem, !insn.addr !830
  store i32 %3, i32* %esi.14.reg2mem, !insn.addr !830
  store i32 %232, i32* %edi.14.reg2mem, !insn.addr !830
  br i1 %238, label %dec_label_pc_416296, label %dec_label_pc_416280, !insn.addr !830

dec_label_pc_416280:                              ; preds = %dec_label_pc_416271, %dec_label_pc_416280
  %edi.13.reload = load i32, i32* %edi.13.reg2mem
  %esi.13.reload = load i32, i32* %esi.13.reg2mem
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %239 = add i32 %esi.13.reload, -1, !insn.addr !831
  %240 = inttoptr i32 %239 to i8*, !insn.addr !831
  %241 = load i8, i8* %240, align 1, !insn.addr !831
  %242 = add i32 %edi.13.reload, -1, !insn.addr !832
  %243 = inttoptr i32 %242 to i8*, !insn.addr !832
  store i8 %241, i8* %243, align 1, !insn.addr !832
  %244 = add i32 %edx.0.reload, -1, !insn.addr !833
  %245 = icmp eq i32 %244, 0, !insn.addr !833
  %246 = icmp eq i1 %245, false, !insn.addr !834
  store i32 %244, i32* %edx.0.reg2mem, !insn.addr !834
  store i32 %239, i32* %esi.13.reg2mem, !insn.addr !834
  store i32 %242, i32* %edi.13.reg2mem, !insn.addr !834
  br i1 %246, label %dec_label_pc_416280, label %dec_label_pc_416296.loopexit, !insn.addr !834

dec_label_pc_416296.loopexit:                     ; preds = %dec_label_pc_416280
  %247 = sub i32 %count, %237, !insn.addr !835
  store i32 %247, i32* %ecx.10.reg2mem
  store i32 %239, i32* %esi.14.reg2mem
  store i32 %242, i32* %edi.14.reg2mem
  br label %dec_label_pc_416296

dec_label_pc_416296:                              ; preds = %dec_label_pc_416296.loopexit, %dec_label_pc_416271
  %edi.14.reload = load i32, i32* %edi.14.reg2mem
  %esi.14.reload = load i32, i32* %esi.14.reg2mem
  %ecx.10.reload = load i32, i32* %ecx.10.reg2mem
  %248 = udiv i32 %ecx.10.reload, 4, !insn.addr !836
  %249 = and i32 %ecx.10.reload, 3, !insn.addr !837
  %250 = add i32 %esi.14.reload, -4, !insn.addr !838
  %251 = add i32 %edi.14.reload, -4, !insn.addr !839
  %252 = inttoptr i32 %250 to i8*, !insn.addr !840
  %253 = inttoptr i32 %251 to i8*, !insn.addr !840
  call void @__asm_rep_movsd_memcpy(i8* %253, i8* %252, i32 %248), !insn.addr !840
  store i32 %249, i32* @7, align 4, !insn.addr !841
  br label %dec_label_pc_416214

dec_label_pc_416305:                              ; preds = %dec_label_pc_416263
  %254 = and i32 %232, 15, !insn.addr !842
  %255 = icmp eq i32 %254, 0, !insn.addr !842
  store i32 %count, i32* %ecx.11.reg2mem, !insn.addr !843
  store i32 %3, i32* %esi.15.reg2mem, !insn.addr !843
  store i32 %232, i32* %edi.15.reg2mem, !insn.addr !843
  store i32 %count, i32* %ecx.12.ph.reg2mem, !insn.addr !843
  store i32 %3, i32* %esi.16.ph.reg2mem, !insn.addr !843
  store i32 %232, i32* %edi.16.ph.reg2mem, !insn.addr !843
  br i1 %255, label %dec_label_pc_41631c.preheader, label %dec_label_pc_41630d, !insn.addr !843

dec_label_pc_41630d:                              ; preds = %dec_label_pc_416305, %dec_label_pc_41630d
  %edi.15.reload = load i32, i32* %edi.15.reg2mem
  %esi.15.reload = load i32, i32* %esi.15.reg2mem
  %ecx.11.reload = load i32, i32* %ecx.11.reg2mem
  %256 = add i32 %ecx.11.reload, -1, !insn.addr !844
  %257 = add i32 %esi.15.reload, -1, !insn.addr !845
  %258 = add i32 %edi.15.reload, -1, !insn.addr !846
  %259 = inttoptr i32 %257 to i8*, !insn.addr !847
  %260 = load i8, i8* %259, align 1, !insn.addr !847
  %261 = inttoptr i32 %258 to i8*, !insn.addr !848
  store i8 %260, i8* %261, align 1, !insn.addr !848
  %262 = and i32 %258, 15, !insn.addr !849
  %263 = icmp eq i32 %262, 0, !insn.addr !849
  %264 = icmp eq i1 %263, false, !insn.addr !850
  store i32 %256, i32* %ecx.11.reg2mem, !insn.addr !850
  store i32 %257, i32* %esi.15.reg2mem, !insn.addr !850
  store i32 %258, i32* %edi.15.reg2mem, !insn.addr !850
  store i32 %256, i32* %ecx.12.ph.reg2mem, !insn.addr !850
  store i32 %257, i32* %esi.16.ph.reg2mem, !insn.addr !850
  store i32 %258, i32* %edi.16.ph.reg2mem, !insn.addr !850
  br i1 %264, label %dec_label_pc_41630d, label %dec_label_pc_41631c.preheader, !insn.addr !850

dec_label_pc_41631c.preheader:                    ; preds = %dec_label_pc_41630d, %dec_label_pc_416305
  %edi.16.ph.reload = load i32, i32* %edi.16.ph.reg2mem
  %esi.16.ph.reload = load i32, i32* %esi.16.ph.reg2mem
  %ecx.12.ph.reload = load i32, i32* %ecx.12.ph.reg2mem
  store i32 %ecx.12.ph.reload, i32* %ecx.12.reg2mem
  store i32 %esi.16.ph.reload, i32* %esi.16.reg2mem
  store i32 %edi.16.ph.reload, i32* %edi.16.reg2mem
  br label %dec_label_pc_41631c

dec_label_pc_41631c:                              ; preds = %dec_label_pc_41631c.preheader, %dec_label_pc_416324
  %edi.16.reload = load i32, i32* %edi.16.reg2mem
  %esi.16.reload = load i32, i32* %esi.16.reg2mem
  %ecx.12.reload = load i32, i32* %ecx.12.reg2mem
  %265 = icmp ult i32 %ecx.12.reload, 128, !insn.addr !851
  store i32 %ecx.12.reload, i32* %ecx.13.reg2mem, !insn.addr !852
  store i32 %esi.16.reload, i32* %esi.17.reg2mem, !insn.addr !852
  store i32 %edi.16.reload, i32* %edi.17.reg2mem, !insn.addr !852
  br i1 %265, label %dec_label_pc_41638c, label %dec_label_pc_416324, !insn.addr !852

dec_label_pc_416324:                              ; preds = %dec_label_pc_41631c
  %266 = add i32 %esi.16.reload, -128, !insn.addr !853
  %267 = add i32 %edi.16.reload, -128, !insn.addr !854
  %268 = inttoptr i32 %266 to i128*, !insn.addr !855
  %269 = load i128, i128* %268, align 4, !insn.addr !855
  %270 = call i128 @__asm_movdqu.5(i128 %269), !insn.addr !855
  %271 = add i32 %esi.16.reload, -112, !insn.addr !856
  %272 = inttoptr i32 %271 to i128*, !insn.addr !856
  %273 = load i128, i128* %272, align 4, !insn.addr !856
  %274 = call i128 @__asm_movdqu.5(i128 %273), !insn.addr !856
  %275 = add i32 %esi.16.reload, -96, !insn.addr !857
  %276 = inttoptr i32 %275 to i128*, !insn.addr !857
  %277 = load i128, i128* %276, align 4, !insn.addr !857
  %278 = call i128 @__asm_movdqu.5(i128 %277), !insn.addr !857
  %279 = add i32 %esi.16.reload, -80, !insn.addr !858
  %280 = inttoptr i32 %279 to i128*, !insn.addr !858
  %281 = load i128, i128* %280, align 4, !insn.addr !858
  %282 = call i128 @__asm_movdqu.5(i128 %281), !insn.addr !858
  %283 = add i32 %esi.16.reload, -64, !insn.addr !859
  %284 = inttoptr i32 %283 to i128*, !insn.addr !859
  %285 = load i128, i128* %284, align 4, !insn.addr !859
  %286 = call i128 @__asm_movdqu.5(i128 %285), !insn.addr !859
  %287 = add i32 %esi.16.reload, -48, !insn.addr !860
  %288 = inttoptr i32 %287 to i128*, !insn.addr !860
  %289 = load i128, i128* %288, align 4, !insn.addr !860
  %290 = call i128 @__asm_movdqu.5(i128 %289), !insn.addr !860
  %291 = add i32 %esi.16.reload, -32, !insn.addr !861
  %292 = inttoptr i32 %291 to i128*, !insn.addr !861
  %293 = load i128, i128* %292, align 4, !insn.addr !861
  %294 = call i128 @__asm_movdqu.5(i128 %293), !insn.addr !861
  %295 = add i32 %esi.16.reload, -16, !insn.addr !862
  %296 = inttoptr i32 %295 to i128*, !insn.addr !862
  %297 = load i128, i128* %296, align 4, !insn.addr !862
  %298 = call i128 @__asm_movdqu.5(i128 %297), !insn.addr !862
  %299 = inttoptr i32 %267 to i128*, !insn.addr !863
  %300 = load i128, i128* %299, align 4, !insn.addr !863
  call void @__asm_movdqu(i128 %300, i128 %270), !insn.addr !863
  %301 = add i32 %edi.16.reload, -112, !insn.addr !864
  %302 = inttoptr i32 %301 to i128*, !insn.addr !864
  %303 = load i128, i128* %302, align 4, !insn.addr !864
  call void @__asm_movdqu(i128 %303, i128 %274), !insn.addr !864
  %304 = add i32 %edi.16.reload, -96, !insn.addr !865
  %305 = inttoptr i32 %304 to i128*, !insn.addr !865
  %306 = load i128, i128* %305, align 4, !insn.addr !865
  call void @__asm_movdqu(i128 %306, i128 %278), !insn.addr !865
  %307 = add i32 %edi.16.reload, -80, !insn.addr !866
  %308 = inttoptr i32 %307 to i128*, !insn.addr !866
  %309 = load i128, i128* %308, align 4, !insn.addr !866
  call void @__asm_movdqu(i128 %309, i128 %282), !insn.addr !866
  %310 = add i32 %edi.16.reload, -64, !insn.addr !867
  %311 = inttoptr i32 %310 to i128*, !insn.addr !867
  %312 = load i128, i128* %311, align 4, !insn.addr !867
  call void @__asm_movdqu(i128 %312, i128 %286), !insn.addr !867
  %313 = add i32 %edi.16.reload, -48, !insn.addr !868
  %314 = inttoptr i32 %313 to i128*, !insn.addr !868
  %315 = load i128, i128* %314, align 4, !insn.addr !868
  call void @__asm_movdqu(i128 %315, i128 %290), !insn.addr !868
  %316 = add i32 %edi.16.reload, -32, !insn.addr !869
  %317 = inttoptr i32 %316 to i128*, !insn.addr !869
  %318 = load i128, i128* %317, align 4, !insn.addr !869
  call void @__asm_movdqu(i128 %318, i128 %294), !insn.addr !869
  %319 = add i32 %edi.16.reload, -16, !insn.addr !870
  %320 = inttoptr i32 %319 to i128*, !insn.addr !870
  %321 = load i128, i128* %320, align 4, !insn.addr !870
  call void @__asm_movdqu(i128 %321, i128 %298), !insn.addr !870
  %322 = add i32 %ecx.12.reload, -128, !insn.addr !871
  %323 = icmp ult i32 %322, 128, !insn.addr !872
  %324 = icmp eq i1 %323, false, !insn.addr !873
  store i32 %322, i32* %ecx.12.reg2mem, !insn.addr !873
  store i32 %266, i32* %esi.16.reg2mem, !insn.addr !873
  store i32 %267, i32* %edi.16.reg2mem, !insn.addr !873
  store i32 %322, i32* %ecx.13.reg2mem, !insn.addr !873
  store i32 %266, i32* %esi.17.reg2mem, !insn.addr !873
  store i32 %267, i32* %edi.17.reg2mem, !insn.addr !873
  br i1 %324, label %dec_label_pc_41631c, label %dec_label_pc_41638c, !insn.addr !873

dec_label_pc_41638c:                              ; preds = %dec_label_pc_416324, %dec_label_pc_41631c
  %edi.17.reload = load i32, i32* %edi.17.reg2mem
  %esi.17.reload = load i32, i32* %esi.17.reg2mem
  %ecx.13.reload = load i32, i32* %ecx.13.reg2mem
  %325 = icmp ult i32 %ecx.13.reload, 32, !insn.addr !874
  store i32 %ecx.13.reload, i32* %ecx.14.reg2mem, !insn.addr !875
  store i32 %esi.17.reload, i32* %esi.18.reg2mem, !insn.addr !875
  store i32 %edi.17.reload, i32* %edi.18.reg2mem, !insn.addr !875
  store i32 %ecx.13.reload, i32* %ecx.15.reg2mem, !insn.addr !875
  store i32 %esi.17.reload, i32* %esi.19.reg2mem, !insn.addr !875
  store i32 %edi.17.reload, i32* %edi.19.reg2mem, !insn.addr !875
  br i1 %325, label %dec_label_pc_4163b4, label %dec_label_pc_416391, !insn.addr !875

dec_label_pc_416391:                              ; preds = %dec_label_pc_41638c, %dec_label_pc_416391
  %edi.18.reload = load i32, i32* %edi.18.reg2mem
  %esi.18.reload = load i32, i32* %esi.18.reg2mem
  %ecx.14.reload = load i32, i32* %ecx.14.reg2mem
  %326 = add i32 %esi.18.reload, -32, !insn.addr !876
  %327 = add i32 %edi.18.reload, -32, !insn.addr !877
  %328 = inttoptr i32 %326 to i128*, !insn.addr !878
  %329 = load i128, i128* %328, align 4, !insn.addr !878
  %330 = call i128 @__asm_movdqu.5(i128 %329), !insn.addr !878
  %331 = add i32 %esi.18.reload, -16, !insn.addr !879
  %332 = inttoptr i32 %331 to i128*, !insn.addr !879
  %333 = load i128, i128* %332, align 4, !insn.addr !879
  %334 = call i128 @__asm_movdqu.5(i128 %333), !insn.addr !879
  %335 = inttoptr i32 %327 to i128*, !insn.addr !880
  %336 = load i128, i128* %335, align 4, !insn.addr !880
  call void @__asm_movdqu(i128 %336, i128 %330), !insn.addr !880
  %337 = add i32 %edi.18.reload, -16, !insn.addr !881
  %338 = inttoptr i32 %337 to i128*, !insn.addr !881
  %339 = load i128, i128* %338, align 4, !insn.addr !881
  call void @__asm_movdqu(i128 %339, i128 %334), !insn.addr !881
  %340 = add i32 %ecx.14.reload, -32, !insn.addr !882
  %341 = icmp ult i32 %340, 32, !insn.addr !883
  %342 = icmp eq i1 %341, false, !insn.addr !884
  store i32 %340, i32* %ecx.14.reg2mem, !insn.addr !884
  store i32 %326, i32* %esi.18.reg2mem, !insn.addr !884
  store i32 %327, i32* %edi.18.reg2mem, !insn.addr !884
  store i32 %340, i32* %ecx.15.reg2mem, !insn.addr !884
  store i32 %326, i32* %esi.19.reg2mem, !insn.addr !884
  store i32 %327, i32* %edi.19.reg2mem, !insn.addr !884
  br i1 %342, label %dec_label_pc_416391, label %dec_label_pc_4163b4, !insn.addr !884

dec_label_pc_4163b4:                              ; preds = %dec_label_pc_416391, %dec_label_pc_41638c, %dec_label_pc_416254
  %edi.19.reload = load i32, i32* %edi.19.reg2mem
  %esi.19.reload = load i32, i32* %esi.19.reg2mem
  %ecx.15.reload = load i32, i32* %ecx.15.reg2mem
  %343 = icmp ult i32 %ecx.15.reload, 4, !insn.addr !885
  store i32 %ecx.15.reload, i32* %ecx.16.reg2mem, !insn.addr !886
  store i32 %esi.19.reload, i32* %esi.20.reg2mem, !insn.addr !886
  store i32 %edi.19.reload, i32* %edi.20.reg2mem, !insn.addr !886
  store i32 %ecx.15.reload, i32* %ecx.17.reg2mem, !insn.addr !886
  store i32 %esi.19.reload, i32* %esi.21.reg2mem, !insn.addr !886
  store i32 %edi.19.reload, i32* %edi.21.reg2mem, !insn.addr !886
  br i1 %343, label %dec_label_pc_4163d1, label %dec_label_pc_4163bc, !insn.addr !886

dec_label_pc_4163bc:                              ; preds = %dec_label_pc_4163b4, %dec_label_pc_4163bc
  %edi.20.reload = load i32, i32* %edi.20.reg2mem
  %esi.20.reload = load i32, i32* %esi.20.reg2mem
  %ecx.16.reload = load i32, i32* %ecx.16.reg2mem
  %344 = add i32 %edi.20.reload, -4, !insn.addr !887
  %345 = add i32 %esi.20.reload, -4, !insn.addr !888
  %346 = inttoptr i32 %345 to i32*, !insn.addr !889
  %347 = load i32, i32* %346, align 4, !insn.addr !889
  %348 = inttoptr i32 %344 to i32*, !insn.addr !890
  store i32 %347, i32* %348, align 4, !insn.addr !890
  %349 = add i32 %ecx.16.reload, -4, !insn.addr !891
  %350 = icmp ult i32 %349, 4, !insn.addr !892
  %351 = icmp eq i1 %350, false, !insn.addr !893
  store i32 %349, i32* %ecx.16.reg2mem, !insn.addr !893
  store i32 %345, i32* %esi.20.reg2mem, !insn.addr !893
  store i32 %344, i32* %edi.20.reg2mem, !insn.addr !893
  store i32 %349, i32* %ecx.17.reg2mem, !insn.addr !893
  store i32 %345, i32* %esi.21.reg2mem, !insn.addr !893
  store i32 %344, i32* %edi.21.reg2mem, !insn.addr !893
  br i1 %351, label %dec_label_pc_4163bc, label %dec_label_pc_4163d1, !insn.addr !893

dec_label_pc_4163d1:                              ; preds = %dec_label_pc_4163bc, %dec_label_pc_4163b4
  %edi.21.reload = load i32, i32* %edi.21.reg2mem
  %esi.21.reload = load i32, i32* %esi.21.reg2mem
  %ecx.17.reload = load i32, i32* %ecx.17.reg2mem
  %352 = icmp eq i32 %ecx.17.reload, 0, !insn.addr !894
  store i32 %ecx.17.reload, i32* %ecx.18.reg2mem, !insn.addr !895
  store i32 %esi.21.reload, i32* %esi.22.reg2mem, !insn.addr !895
  store i32 %edi.21.reload, i32* %edi.22.reg2mem, !insn.addr !895
  br i1 %352, label %dec_label_pc_416214, label %dec_label_pc_4163d5, !insn.addr !895

dec_label_pc_4163d5:                              ; preds = %dec_label_pc_4163d1, %dec_label_pc_4163d5
  %edi.22.reload = load i32, i32* %edi.22.reg2mem
  %esi.22.reload = load i32, i32* %esi.22.reg2mem
  %ecx.18.reload = load i32, i32* %ecx.18.reg2mem
  %353 = add i32 %edi.22.reload, -1, !insn.addr !896
  %354 = add i32 %esi.22.reload, -1, !insn.addr !897
  %355 = inttoptr i32 %354 to i8*, !insn.addr !898
  %356 = load i8, i8* %355, align 1, !insn.addr !898
  %357 = inttoptr i32 %353 to i8*, !insn.addr !899
  store i8 %356, i8* %357, align 1, !insn.addr !899
  %358 = add i32 %ecx.18.reload, -1, !insn.addr !900
  %359 = icmp eq i32 %358, 0, !insn.addr !900
  %360 = icmp eq i1 %359, false, !insn.addr !901
  store i32 %358, i32* %ecx.18.reg2mem, !insn.addr !901
  store i32 %354, i32* %esi.22.reg2mem, !insn.addr !901
  store i32 %353, i32* %edi.22.reg2mem, !insn.addr !901
  br i1 %360, label %dec_label_pc_4163d5, label %dec_label_pc_416214, !insn.addr !901

dec_label_pc_4163f0:                              ; preds = %dec_label_pc_416002
  %361 = and i32 %1, 15, !insn.addr !902
  %362 = icmp eq i32 %361, 0, !insn.addr !903
  %363 = icmp eq i1 %362, false, !insn.addr !904
  store i32 %count, i32* %ecx.19.reg2mem, !insn.addr !904
  store i32 %1, i32* %esi.23.reg2mem, !insn.addr !904
  store i32 %2, i32* %edi.23.reg2mem, !insn.addr !904
  br i1 %363, label %dec_label_pc_4164e0, label %dec_label_pc_4163fd, !insn.addr !904

dec_label_pc_4163fd:                              ; preds = %dec_label_pc_416501, %dec_label_pc_4164fc, %dec_label_pc_4163f0
  %edi.23.reload = load i32, i32* %edi.23.reg2mem
  %esi.23.reload = load i32, i32* %esi.23.reg2mem
  %ecx.19.reload = load i32, i32* %ecx.19.reg2mem
  %364 = udiv i32 %ecx.19.reload, 128, !insn.addr !905
  %365 = icmp ult i32 %ecx.19.reload, 128
  store i32 %364, i32* %edx.1.reg2mem, !insn.addr !906
  store i32 %esi.23.reload, i32* %esi.24.reg2mem, !insn.addr !906
  store i32 %edi.23.reload, i32* %edi.24.reg2mem, !insn.addr !906
  store i32 %esi.23.reload, i32* %esi.25.reg2mem, !insn.addr !906
  store i32 %edi.23.reload, i32* %edi.25.reg2mem, !insn.addr !906
  br i1 %365, label %dec_label_pc_41646d, label %dec_label_pc_416410, !insn.addr !906

dec_label_pc_416410:                              ; preds = %dec_label_pc_4163fd, %dec_label_pc_416410
  %edi.24.reload = load i32, i32* %edi.24.reg2mem
  %esi.24.reload = load i32, i32* %esi.24.reg2mem
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %366 = inttoptr i32 %esi.24.reload to i128*, !insn.addr !907
  %367 = load i128, i128* %366, align 4, !insn.addr !907
  %368 = call i128 @__asm_movdqa.8(i128 %367), !insn.addr !907
  %369 = add i32 %esi.24.reload, 16, !insn.addr !908
  %370 = inttoptr i32 %369 to i128*, !insn.addr !908
  %371 = load i128, i128* %370, align 4, !insn.addr !908
  %372 = call i128 @__asm_movdqa.8(i128 %371), !insn.addr !908
  %373 = add i32 %esi.24.reload, 32, !insn.addr !909
  %374 = inttoptr i32 %373 to i128*, !insn.addr !909
  %375 = load i128, i128* %374, align 4, !insn.addr !909
  %376 = call i128 @__asm_movdqa.8(i128 %375), !insn.addr !909
  %377 = add i32 %esi.24.reload, 48, !insn.addr !910
  %378 = inttoptr i32 %377 to i128*, !insn.addr !910
  %379 = load i128, i128* %378, align 4, !insn.addr !910
  %380 = call i128 @__asm_movdqa.8(i128 %379), !insn.addr !910
  %381 = inttoptr i32 %edi.24.reload to i128*, !insn.addr !911
  %382 = load i128, i128* %381, align 4, !insn.addr !911
  call void @__asm_movdqa(i128 %382, i128 %368), !insn.addr !911
  %383 = add i32 %edi.24.reload, 16, !insn.addr !912
  %384 = inttoptr i32 %383 to i128*, !insn.addr !912
  %385 = load i128, i128* %384, align 4, !insn.addr !912
  call void @__asm_movdqa(i128 %385, i128 %372), !insn.addr !912
  %386 = add i32 %edi.24.reload, 32, !insn.addr !913
  %387 = inttoptr i32 %386 to i128*, !insn.addr !913
  %388 = load i128, i128* %387, align 4, !insn.addr !913
  call void @__asm_movdqa(i128 %388, i128 %376), !insn.addr !913
  %389 = add i32 %edi.24.reload, 48, !insn.addr !914
  %390 = inttoptr i32 %389 to i128*, !insn.addr !914
  %391 = load i128, i128* %390, align 4, !insn.addr !914
  call void @__asm_movdqa(i128 %391, i128 %380), !insn.addr !914
  %392 = add i32 %esi.24.reload, 64, !insn.addr !915
  %393 = inttoptr i32 %392 to i128*, !insn.addr !915
  %394 = load i128, i128* %393, align 4, !insn.addr !915
  %395 = call i128 @__asm_movdqa.8(i128 %394), !insn.addr !915
  %396 = add i32 %esi.24.reload, 80, !insn.addr !916
  %397 = inttoptr i32 %396 to i128*, !insn.addr !916
  %398 = load i128, i128* %397, align 4, !insn.addr !916
  %399 = call i128 @__asm_movdqa.8(i128 %398), !insn.addr !916
  %400 = add i32 %esi.24.reload, 96, !insn.addr !917
  %401 = inttoptr i32 %400 to i128*, !insn.addr !917
  %402 = load i128, i128* %401, align 4, !insn.addr !917
  %403 = call i128 @__asm_movdqa.8(i128 %402), !insn.addr !917
  %404 = add i32 %esi.24.reload, 112, !insn.addr !918
  %405 = inttoptr i32 %404 to i128*, !insn.addr !918
  %406 = load i128, i128* %405, align 4, !insn.addr !918
  %407 = call i128 @__asm_movdqa.8(i128 %406), !insn.addr !918
  %408 = add i32 %edi.24.reload, 64, !insn.addr !919
  %409 = inttoptr i32 %408 to i128*, !insn.addr !919
  %410 = load i128, i128* %409, align 4, !insn.addr !919
  call void @__asm_movdqa(i128 %410, i128 %395), !insn.addr !919
  %411 = add i32 %edi.24.reload, 80, !insn.addr !920
  %412 = inttoptr i32 %411 to i128*, !insn.addr !920
  %413 = load i128, i128* %412, align 4, !insn.addr !920
  call void @__asm_movdqa(i128 %413, i128 %399), !insn.addr !920
  %414 = add i32 %edi.24.reload, 96, !insn.addr !921
  %415 = inttoptr i32 %414 to i128*, !insn.addr !921
  %416 = load i128, i128* %415, align 4, !insn.addr !921
  call void @__asm_movdqa(i128 %416, i128 %403), !insn.addr !921
  %417 = add i32 %edi.24.reload, 112, !insn.addr !922
  %418 = inttoptr i32 %417 to i128*, !insn.addr !922
  %419 = load i128, i128* %418, align 4, !insn.addr !922
  call void @__asm_movdqa(i128 %419, i128 %407), !insn.addr !922
  %420 = add i32 %esi.24.reload, 128, !insn.addr !923
  %421 = add i32 %edi.24.reload, 128, !insn.addr !924
  %422 = add i32 %edx.1.reload, -1, !insn.addr !925
  %423 = icmp eq i32 %422, 0, !insn.addr !925
  %424 = icmp eq i1 %423, false, !insn.addr !926
  store i32 %422, i32* %edx.1.reg2mem, !insn.addr !926
  store i32 %420, i32* %esi.24.reg2mem, !insn.addr !926
  store i32 %421, i32* %edi.24.reg2mem, !insn.addr !926
  store i32 %420, i32* %esi.25.reg2mem, !insn.addr !926
  store i32 %421, i32* %edi.25.reg2mem, !insn.addr !926
  br i1 %424, label %dec_label_pc_416410, label %dec_label_pc_41646d, !insn.addr !926

dec_label_pc_41646d:                              ; preds = %dec_label_pc_416410, %dec_label_pc_4163fd
  %425 = and i32 %ecx.19.reload, 127, !insn.addr !927
  %edi.25.reload = load i32, i32* %edi.25.reg2mem
  %esi.25.reload = load i32, i32* %esi.25.reg2mem
  %426 = icmp eq i32 %425, 0, !insn.addr !928
  store i32 %edi.25.reload, i32* %edi.256.reg2mem, !insn.addr !929
  store i32 %esi.25.reload, i32* %esi.255.reg2mem, !insn.addr !929
  store i32 %425, i32* %ecx.204.reg2mem, !insn.addr !929
  br i1 %426, label %dec_label_pc_416214, label %dec_label_pc_416471, !insn.addr !929

dec_label_pc_416471:                              ; preds = %dec_label_pc_415fd1, %dec_label_pc_41646d
  %ecx.204.reload = load i32, i32* %ecx.204.reg2mem
  %esi.255.reload = load i32, i32* %esi.255.reg2mem
  %edi.256.reload = load i32, i32* %edi.256.reg2mem
  %427 = udiv i32 %ecx.204.reload, 32, !insn.addr !930
  %428 = icmp ult i32 %ecx.204.reload, 32
  store i32 %427, i32* %edx.2.reg2mem, !insn.addr !931
  store i32 %esi.255.reload, i32* %esi.26.reg2mem, !insn.addr !931
  store i32 %edi.256.reload, i32* %edi.26.reg2mem, !insn.addr !931
  store i32 %ecx.204.reload, i32* %ecx.21.reg2mem, !insn.addr !931
  store i32 %esi.255.reload, i32* %esi.27.reg2mem, !insn.addr !931
  store i32 %edi.256.reload, i32* %edi.27.reg2mem, !insn.addr !931
  br i1 %428, label %dec_label_pc_41649b, label %dec_label_pc_416480, !insn.addr !931

dec_label_pc_416480:                              ; preds = %dec_label_pc_416471, %dec_label_pc_416480
  %edi.26.reload = load i32, i32* %edi.26.reg2mem
  %esi.26.reload = load i32, i32* %esi.26.reg2mem
  %edx.2.reload = load i32, i32* %edx.2.reg2mem
  %429 = inttoptr i32 %esi.26.reload to i128*, !insn.addr !932
  %430 = load i128, i128* %429, align 4, !insn.addr !932
  %431 = call i128 @__asm_movdqu.5(i128 %430), !insn.addr !932
  %432 = add i32 %esi.26.reload, 16, !insn.addr !933
  %433 = inttoptr i32 %432 to i128*, !insn.addr !933
  %434 = load i128, i128* %433, align 4, !insn.addr !933
  %435 = call i128 @__asm_movdqu.5(i128 %434), !insn.addr !933
  %436 = inttoptr i32 %edi.26.reload to i128*, !insn.addr !934
  %437 = load i128, i128* %436, align 4, !insn.addr !934
  call void @__asm_movdqu(i128 %437, i128 %431), !insn.addr !934
  %438 = add i32 %edi.26.reload, 16, !insn.addr !935
  %439 = inttoptr i32 %438 to i128*, !insn.addr !935
  %440 = load i128, i128* %439, align 4, !insn.addr !935
  call void @__asm_movdqu(i128 %440, i128 %435), !insn.addr !935
  %441 = add i32 %esi.26.reload, 32, !insn.addr !936
  %442 = add i32 %edi.26.reload, 32, !insn.addr !937
  %443 = add i32 %edx.2.reload, -1, !insn.addr !938
  %444 = icmp eq i32 %443, 0, !insn.addr !938
  %445 = icmp eq i1 %444, false, !insn.addr !939
  store i32 %443, i32* %edx.2.reg2mem, !insn.addr !939
  store i32 %441, i32* %esi.26.reg2mem, !insn.addr !939
  store i32 %442, i32* %edi.26.reg2mem, !insn.addr !939
  store i32 %ecx.204.reload, i32* %ecx.21.reg2mem, !insn.addr !939
  store i32 %441, i32* %esi.27.reg2mem, !insn.addr !939
  store i32 %442, i32* %edi.27.reg2mem, !insn.addr !939
  br i1 %445, label %dec_label_pc_416480, label %dec_label_pc_41649b, !insn.addr !939

dec_label_pc_41649b3:                             ; preds = %dec_label_pc_4161e2
  unreachable

dec_label_pc_41649b:                              ; preds = %dec_label_pc_416480, %dec_label_pc_416471, %dec_label_pc_415fc0
  %ecx.21.reload = load i32, i32* %ecx.21.reg2mem
  %446 = and i32 %ecx.21.reload, 31, !insn.addr !940
  %447 = icmp eq i32 %446, 0, !insn.addr !940
  br i1 %447, label %dec_label_pc_416214, label %dec_label_pc_4164a0, !insn.addr !941

dec_label_pc_4164a0:                              ; preds = %dec_label_pc_41649b
  %edi.27.reload = load i32, i32* %edi.27.reg2mem
  %esi.27.reload = load i32, i32* %esi.27.reg2mem
  %448 = udiv i32 %446, 4, !insn.addr !942
  %449 = icmp ult i32 %446, 4
  store i32 %448, i32* %ecx.22.reg2mem, !insn.addr !943
  store i32 %esi.27.reload, i32* %esi.28.reg2mem, !insn.addr !943
  store i32 %edi.27.reload, i32* %edi.28.reg2mem, !insn.addr !943
  store i32 %esi.27.reload, i32* %esi.29.reg2mem, !insn.addr !943
  store i32 %edi.27.reload, i32* %edi.29.reg2mem, !insn.addr !943
  br i1 %449, label %dec_label_pc_4164b6, label %dec_label_pc_4164a7, !insn.addr !943

dec_label_pc_4164a7:                              ; preds = %dec_label_pc_4164a0, %dec_label_pc_4164a7
  %edi.28.reload = load i32, i32* %edi.28.reg2mem
  %esi.28.reload = load i32, i32* %esi.28.reg2mem
  %ecx.22.reload = load i32, i32* %ecx.22.reg2mem
  %450 = inttoptr i32 %esi.28.reload to i32*, !insn.addr !944
  %451 = load i32, i32* %450, align 4, !insn.addr !944
  %452 = inttoptr i32 %edi.28.reload to i32*, !insn.addr !945
  store i32 %451, i32* %452, align 4, !insn.addr !945
  %453 = add i32 %edi.28.reload, 4, !insn.addr !946
  %454 = add i32 %esi.28.reload, 4, !insn.addr !947
  %455 = add i32 %ecx.22.reload, -1, !insn.addr !948
  %456 = icmp eq i32 %455, 0, !insn.addr !948
  %457 = icmp eq i1 %456, false, !insn.addr !949
  store i32 %455, i32* %ecx.22.reg2mem, !insn.addr !949
  store i32 %454, i32* %esi.28.reg2mem, !insn.addr !949
  store i32 %453, i32* %edi.28.reg2mem, !insn.addr !949
  store i32 %454, i32* %esi.29.reg2mem, !insn.addr !949
  store i32 %453, i32* %edi.29.reg2mem, !insn.addr !949
  br i1 %457, label %dec_label_pc_4164a7, label %dec_label_pc_4164b6, !insn.addr !949

dec_label_pc_4164b6:                              ; preds = %dec_label_pc_4164a7, %dec_label_pc_4164a0
  %edi.29.reload = load i32, i32* %edi.29.reg2mem
  %esi.29.reload = load i32, i32* %esi.29.reg2mem
  %458 = and i32 %ecx.21.reload, 3, !insn.addr !950
  %459 = icmp eq i32 %458, 0, !insn.addr !950
  store i32 %458, i32* %ecx.23.reg2mem, !insn.addr !951
  store i32 %esi.29.reload, i32* %esi.30.reg2mem, !insn.addr !951
  store i32 %edi.29.reload, i32* %edi.30.reg2mem, !insn.addr !951
  br i1 %459, label %dec_label_pc_416214, label %dec_label_pc_4164bd, !insn.addr !951

dec_label_pc_4164bd:                              ; preds = %dec_label_pc_4164b6, %dec_label_pc_4164bd
  %edi.30.reload = load i32, i32* %edi.30.reg2mem
  %esi.30.reload = load i32, i32* %esi.30.reg2mem
  %ecx.23.reload = load i32, i32* %ecx.23.reg2mem
  %460 = inttoptr i32 %esi.30.reload to i8*, !insn.addr !952
  %461 = load i8, i8* %460, align 1, !insn.addr !952
  %462 = inttoptr i32 %edi.30.reload to i8*, !insn.addr !953
  store i8 %461, i8* %462, align 1, !insn.addr !953
  %463 = add i32 %esi.30.reload, 1, !insn.addr !954
  %464 = add i32 %edi.30.reload, 1, !insn.addr !955
  %465 = add i32 %ecx.23.reload, -1, !insn.addr !956
  %466 = icmp eq i32 %465, 0, !insn.addr !956
  %467 = icmp eq i1 %466, false, !insn.addr !957
  store i32 %465, i32* %ecx.23.reg2mem, !insn.addr !957
  store i32 %463, i32* %esi.30.reg2mem, !insn.addr !957
  store i32 %464, i32* %edi.30.reg2mem, !insn.addr !957
  br i1 %467, label %dec_label_pc_4164bd, label %dec_label_pc_416214, !insn.addr !957

dec_label_pc_4164e0:                              ; preds = %dec_label_pc_4163f0
  %468 = sub nsw i32 16, %361, !insn.addr !958
  %469 = and i32 %468, 3, !insn.addr !959
  %470 = icmp eq i32 %469, 0, !insn.addr !959
  store i32 %469, i32* %ecx.24.reg2mem, !insn.addr !960
  store i32 %1, i32* %esi.31.reg2mem, !insn.addr !960
  store i32 %2, i32* %edi.31.reg2mem, !insn.addr !960
  store i32 %1, i32* %esi.32.reg2mem, !insn.addr !960
  store i32 %2, i32* %edi.32.reg2mem, !insn.addr !960
  br i1 %470, label %dec_label_pc_4164fc, label %dec_label_pc_4164f3, !insn.addr !960

dec_label_pc_4164f3:                              ; preds = %dec_label_pc_4164e0, %dec_label_pc_4164f3
  %edi.31.reload = load i32, i32* %edi.31.reg2mem
  %esi.31.reload = load i32, i32* %esi.31.reg2mem
  %ecx.24.reload = load i32, i32* %ecx.24.reg2mem
  %471 = inttoptr i32 %esi.31.reload to i8*, !insn.addr !961
  %472 = load i8, i8* %471, align 1, !insn.addr !961
  %473 = inttoptr i32 %edi.31.reload to i8*, !insn.addr !962
  store i8 %472, i8* %473, align 1, !insn.addr !962
  %474 = add i32 %esi.31.reload, 1, !insn.addr !963
  %475 = add i32 %edi.31.reload, 1, !insn.addr !964
  %476 = add i32 %ecx.24.reload, -1, !insn.addr !965
  %477 = icmp eq i32 %476, 0, !insn.addr !965
  %478 = icmp eq i1 %477, false, !insn.addr !966
  store i32 %476, i32* %ecx.24.reg2mem, !insn.addr !966
  store i32 %474, i32* %esi.31.reg2mem, !insn.addr !966
  store i32 %475, i32* %edi.31.reg2mem, !insn.addr !966
  store i32 %474, i32* %esi.32.reg2mem, !insn.addr !966
  store i32 %475, i32* %edi.32.reg2mem, !insn.addr !966
  br i1 %478, label %dec_label_pc_4164f3, label %dec_label_pc_4164fc, !insn.addr !966

dec_label_pc_4164fc:                              ; preds = %dec_label_pc_4164f3, %dec_label_pc_4164e0
  %479 = sub i32 %count, %468, !insn.addr !967
  %edi.32.reload = load i32, i32* %edi.32.reg2mem
  %esi.32.reload = load i32, i32* %esi.32.reg2mem
  %480 = udiv i32 %468, 4, !insn.addr !968
  %481 = icmp ult i32 %468, 4
  store i32 %479, i32* %ecx.19.reg2mem, !insn.addr !969
  store i32 %esi.32.reload, i32* %esi.23.reg2mem, !insn.addr !969
  store i32 %edi.32.reload, i32* %edi.23.reg2mem, !insn.addr !969
  store i32 %480, i32* %eax.9.reg2mem, !insn.addr !969
  store i32 %esi.32.reload, i32* %esi.33.reg2mem, !insn.addr !969
  store i32 %edi.32.reload, i32* %edi.33.reg2mem, !insn.addr !969
  br i1 %481, label %dec_label_pc_4163fd, label %dec_label_pc_416501, !insn.addr !969

dec_label_pc_416501:                              ; preds = %dec_label_pc_4164fc, %dec_label_pc_416501
  %edi.33.reload = load i32, i32* %edi.33.reg2mem
  %esi.33.reload = load i32, i32* %esi.33.reg2mem
  %eax.9.reload = load i32, i32* %eax.9.reg2mem
  %482 = inttoptr i32 %esi.33.reload to i32*, !insn.addr !970
  %483 = load i32, i32* %482, align 4, !insn.addr !970
  %484 = inttoptr i32 %edi.33.reload to i32*, !insn.addr !971
  store i32 %483, i32* %484, align 4, !insn.addr !971
  %485 = add i32 %esi.33.reload, 4, !insn.addr !972
  %486 = add i32 %edi.33.reload, 4, !insn.addr !973
  %487 = add i32 %eax.9.reload, -1, !insn.addr !974
  %488 = icmp eq i32 %487, 0, !insn.addr !974
  %489 = icmp eq i1 %488, false, !insn.addr !975
  store i32 %479, i32* %ecx.19.reg2mem, !insn.addr !975
  store i32 %485, i32* %esi.23.reg2mem, !insn.addr !975
  store i32 %486, i32* %edi.23.reg2mem, !insn.addr !975
  store i32 %487, i32* %eax.9.reg2mem, !insn.addr !975
  store i32 %485, i32* %esi.33.reg2mem, !insn.addr !975
  store i32 %486, i32* %edi.33.reg2mem, !insn.addr !975
  br i1 %489, label %dec_label_pc_416501, label %dec_label_pc_4163fd, !insn.addr !975
}

declare i32* @__acrt_iob_func(i32) local_unnamed_addr

declare void @_lock_file(%_IO_FILE*) local_unnamed_addr

declare void @_unlock_file(%_IO_FILE*) local_unnamed_addr

define i32 @"__crt_seh_guarded_call<int>::operator()<<lambda_c29ee0499b841886b80d843682cc403a>,<lambda_0be4ab1c2a6918fda4e39227d83ea893> &,<lambda_5a3ed3da325c8ea037a470278c0f2d16> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_416dba:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b54(i32* nonnull @global_var_47b0c8, i32 12), !insn.addr !976
  %2 = add i32 %0, -28, !insn.addr !977
  %3 = inttoptr i32 %2 to i32*, !insn.addr !977
  store i32 0, i32* %3, align 4, !insn.addr !977
  %4 = add i32 %0, 8, !insn.addr !978
  %5 = inttoptr i32 %4 to i32*, !insn.addr !978
  %6 = load i32, i32* %5, align 4, !insn.addr !978
  %7 = inttoptr i32 %6 to i32*, !insn.addr !979
  %8 = load i32, i32* %7, align 4, !insn.addr !979
  %9 = inttoptr i32 %8 to %_IO_FILE*, !insn.addr !979
  call void @_lock_file(%_IO_FILE* %9), !insn.addr !980
  %10 = add i32 %0, -4, !insn.addr !981
  %11 = inttoptr i32 %10 to i32*, !insn.addr !981
  store i32 0, i32* %11, align 4, !insn.addr !981
  %12 = call i32 @"<lambda_0be4ab1c2a6918fda4e39227d83ea893>::operator()"(i32* nonnull @80), !insn.addr !982
  store i32 %12, i32* %3, align 4, !insn.addr !983
  store i32 -2, i32* %11, align 4, !insn.addr !984
  %13 = call i32 @function_416e09(), !insn.addr !985
  %14 = add i32 %0, -16, !insn.addr !986
  %15 = inttoptr i32 %14 to i32*, !insn.addr !986
  %16 = load i32, i32* %15, align 4, !insn.addr !986
  call void @__writefsdword(i32 0, i32 %16), !insn.addr !987
  ret i32 %12, !insn.addr !988
}

define i32 @function_416e09() local_unnamed_addr {
dec_label_pc_416e09:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !989
  %2 = inttoptr i32 %1 to i32*, !insn.addr !989
  %3 = load i32, i32* %2, align 4, !insn.addr !989
  %4 = inttoptr i32 %3 to i32*, !insn.addr !990
  %5 = load i32, i32* %4, align 4, !insn.addr !990
  %6 = inttoptr i32 %5 to %_IO_FILE*, !insn.addr !990
  call void @_unlock_file(%_IO_FILE* %6), !insn.addr !991
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !992
}

define i32 @"__crt_stdio_output::formatting_buffer::count<char>"(i32* %this) local_unnamed_addr {
dec_label_pc_4181f8:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 1028, !insn.addr !993
  %2 = inttoptr i32 %1 to i32*, !insn.addr !993
  %3 = load i32, i32* %2, align 4, !insn.addr !993
  %4 = icmp eq i32 %3, 0, !insn.addr !993
  %5 = icmp eq i1 %4, false, !insn.addr !994
  br i1 %5, label %dec_label_pc_418207, label %dec_label_pc_418201, !insn.addr !994

dec_label_pc_418201:                              ; preds = %dec_label_pc_4181f8
  ret i32 512, !insn.addr !995

dec_label_pc_418207:                              ; preds = %dec_label_pc_4181f8
  %6 = add i32 %0, 1024, !insn.addr !996
  %7 = inttoptr i32 %6 to i32*, !insn.addr !996
  %8 = load i32, i32* %7, align 4, !insn.addr !996
  %9 = udiv i32 %8, 2, !insn.addr !997
  ret i32 %9, !insn.addr !998
}

define i1 @"__crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>"(i32* %this, i32 %count) local_unnamed_addr {
dec_label_pc_418255:
  %eax.1.reg2mem = alloca i32, !insn.addr !999
  %esp.0.in.reg2mem = alloca i32*, !insn.addr !999
  %ebx.0.reg2mem = alloca i32, !insn.addr !999
  %eax.0.reg2mem = alloca i32, !insn.addr !999
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %1 = icmp ugt i32* %this, inttoptr (i32 2147483647 to i32*)
  br i1 %1, label %dec_label_pc_41826a, label %dec_label_pc_418279, !insn.addr !1000

dec_label_pc_41826a:                              ; preds = %dec_label_pc_418255
  %2 = call i32* @_errno(), !insn.addr !1001
  store i32 12, i32* %2, align 4, !insn.addr !1002
  store i32 0, i32* %eax.1.reg2mem, !insn.addr !1003
  br label %dec_label_pc_4182cc, !insn.addr !1003

dec_label_pc_418279:                              ; preds = %dec_label_pc_418255
  %3 = ptrtoint i32* %this to i32
  %4 = mul i32 %3, 2, !insn.addr !1004
  %5 = add i32 %0, 1028, !insn.addr !1005
  %6 = inttoptr i32 %5 to i32*, !insn.addr !1005
  %7 = load i32, i32* %6, align 4, !insn.addr !1005
  %8 = icmp eq i32 %7, 0, !insn.addr !1005
  %9 = icmp ult i32 %4, 1025
  %or.cond = icmp eq i1 %9, %8
  store i32 1, i32* %eax.1.reg2mem, !insn.addr !1006
  br i1 %or.cond, label %dec_label_pc_4182cc, label %dec_label_pc_41828e, !insn.addr !1006

dec_label_pc_41828e:                              ; preds = %dec_label_pc_418279
  %10 = add i32 %0, 1024, !insn.addr !1007
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1007
  %12 = load i32, i32* %11, align 4, !insn.addr !1007
  %13 = icmp ugt i32 %4, %12
  store i32 1, i32* %eax.1.reg2mem, !insn.addr !1008
  br i1 %13, label %dec_label_pc_41829a, label %dec_label_pc_4182cc, !insn.addr !1008

dec_label_pc_41829a:                              ; preds = %dec_label_pc_41828e
  store i32 %4, i32* %stack_var_-24, align 4, !insn.addr !1009
  %14 = call i32* @_malloc_base(i32 %4), !insn.addr !1010
  %15 = ptrtoint i32* %14 to i32, !insn.addr !1010
  store i32 %15, i32* %stack_var_-8, align 4, !insn.addr !1011
  %16 = icmp eq i32* %14, null, !insn.addr !1012
  store i32 %15, i32* %eax.0.reg2mem, !insn.addr !1013
  store i32 and (i32 ptrtoint (i32* @80 to i32), i32 -256), i32* %ebx.0.reg2mem, !insn.addr !1013
  store i32* %stack_var_-20, i32** %esp.0.in.reg2mem, !insn.addr !1013
  br i1 %16, label %dec_label_pc_4182c2, label %dec_label_pc_4182a8, !insn.addr !1013

dec_label_pc_4182a8:                              ; preds = %dec_label_pc_41829a
  %17 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !1014
  store i32 %17, i32* %stack_var_-24, align 4, !insn.addr !1014
  %18 = call i32 @function_402d5b(i32* nonnull %stack_var_-8), !insn.addr !1015
  %19 = load i32, i32* %stack_var_-8, align 4, !insn.addr !1016
  store i32 %4, i32* %11, align 4, !insn.addr !1017
  store i32 %19, i32* %eax.0.reg2mem, !insn.addr !1017
  store i32 or (i32 and (i32 ptrtoint (i32* @80 to i32), i32 -256), i32 1), i32* %ebx.0.reg2mem, !insn.addr !1017
  store i32* %stack_var_-24, i32** %esp.0.in.reg2mem, !insn.addr !1017
  br label %dec_label_pc_4182c2, !insn.addr !1017

dec_label_pc_4182c2:                              ; preds = %dec_label_pc_4182a8, %dec_label_pc_41829a
  %esp.0.in.reload = load i32*, i32** %esp.0.in.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %esp.0 = ptrtoint i32* %esp.0.in.reload to i32
  %20 = add i32 %esp.0, -4, !insn.addr !1018
  %21 = inttoptr i32 %20 to i32*, !insn.addr !1018
  store i32 %eax.0.reload, i32* %21, align 4, !insn.addr !1018
  call void @_free_base(i32* nonnull @80), !insn.addr !1019
  store i32 %ebx.0.reload, i32* %eax.1.reg2mem, !insn.addr !1020
  br label %dec_label_pc_4182cc, !insn.addr !1020

dec_label_pc_4182cc:                              ; preds = %dec_label_pc_41828e, %dec_label_pc_418279, %dec_label_pc_4182c2, %dec_label_pc_41826a
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %22 = and i32 %eax.1.reload, 1
  %23 = icmp ne i32 %22, 0, !insn.addr !1021
  ret i1 %23, !insn.addr !1021
}

define i1 @"__crt_stdio_output::is_wide_character_specifier<char>"(i64 %options, i8 %format_type, i32 %length) local_unnamed_addr {
dec_label_pc_41af68:
  %merge.reg2mem = alloca i1, !insn.addr !1022
  store i1 true, i1* %merge.reg2mem
  store i1 true, i1* %merge.reg2mem
  switch i8 %format_type, label %dec_label_pc_41af86 [
    i8 2, label %dec_label_pc_41af95
    i8 3, label %dec_label_pc_41af91
    i8 12, label %dec_label_pc_41af91
    i8 13, label %dec_label_pc_41af95
  ]

dec_label_pc_41af86:                              ; preds = %dec_label_pc_41af68
  %0 = trunc i64 %options to i8, !insn.addr !1023
  store i1 true, i1* %merge.reg2mem
  switch i8 %0, label %dec_label_pc_41af91 [
    i8 115, label %dec_label_pc_41af95
    i8 99, label %dec_label_pc_41af95
  ]

dec_label_pc_41af91:                              ; preds = %dec_label_pc_41af86, %dec_label_pc_41af68, %dec_label_pc_41af68, %dec_label_pc_41af95
  %merge.reload = load i1, i1* %merge.reg2mem
  ret i1 %merge.reload, !insn.addr !1024

dec_label_pc_41af95:                              ; preds = %dec_label_pc_41af86, %dec_label_pc_41af86, %dec_label_pc_41af68, %dec_label_pc_41af68
  store i1 false, i1* %merge.reg2mem
  br label %dec_label_pc_41af91
}

define i8* @"__crt_stdio_output::formatting_buffer::scratch_data<char>"(i32* %this) local_unnamed_addr {
dec_label_pc_41b367:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 1028, !insn.addr !1025
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1025
  %3 = load i32, i32* %2, align 4, !insn.addr !1025
  %4 = call i32 @function_403e63(), !insn.addr !1026
  %5 = icmp eq i32 %3, 0, !insn.addr !1027
  %6 = icmp eq i1 %5, false, !insn.addr !1028
  %storemerge.v = select i1 %6, i32 %3, i32 %0
  %storemerge = add i32 %storemerge.v, %4
  %7 = inttoptr i32 %storemerge to i8*, !insn.addr !1029
  ret i8* %7, !insn.addr !1029
}

define void @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_integer_parse_into_buffer<unsigned int>"(i32* %this, i32 %number, i32 %radix, i1 %capital_hexits) local_unnamed_addr {
dec_label_pc_41b53e:
  %storemerge3.lcssa.reg2mem = alloca i32, !insn.addr !1030
  %ebx.05.reg2mem = alloca i32, !insn.addr !1030
  %.reg2mem = alloca i32, !insn.addr !1030
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 1092, !insn.addr !1031
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1031
  %3 = load i32, i32* %2, align 4, !insn.addr !1031
  %4 = icmp eq i32 %3, 0, !insn.addr !1032
  %5 = icmp eq i1 %4, false, !insn.addr !1033
  %6 = add i32 %0, 64
  %spec.select = select i1 %5, i32 %3, i32 %6
  %7 = call i32 @function_403e63(), !insn.addr !1034
  %8 = add i32 %7, -1, !insn.addr !1035
  %9 = add i32 %8, %spec.select, !insn.addr !1036
  %10 = add i32 %0, 52, !insn.addr !1037
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1037
  store i32 %9, i32* %11, align 4
  %12 = add i32 %0, 40, !insn.addr !1038
  %13 = inttoptr i32 %12 to i32*, !insn.addr !1038
  %14 = load i32, i32* %13, align 4, !insn.addr !1038
  %15 = icmp eq i32 %14, 0, !insn.addr !1039
  %16 = icmp slt i32 %14, 0, !insn.addr !1039
  %17 = icmp eq i1 %16, false, !insn.addr !1040
  %18 = icmp eq i1 %15, false, !insn.addr !1040
  %19 = icmp ne i1 %17, %18, !insn.addr !1040
  %20 = icmp eq i32* %this, null, !insn.addr !1041
  %or.cond4 = icmp eq i1 %20, %19
  store i32 %9, i32* %storemerge3.lcssa.reg2mem, !insn.addr !1040
  br i1 %or.cond4, label %dec_label_pc_41b5a2, label %dec_label_pc_41b572.lr.ph, !insn.addr !1040

dec_label_pc_41b572.lr.ph:                        ; preds = %dec_label_pc_41b53e
  %21 = ptrtoint i32* %this to i32
  %22 = mul i32 %radix, 32
  %23 = xor i32 %22, 39
  store i32 %14, i32* %.reg2mem
  store i32 %21, i32* %ebx.05.reg2mem
  br label %dec_label_pc_41b572

dec_label_pc_41b572:                              ; preds = %dec_label_pc_41b572.lr.ph, %dec_label_pc_41b572
  %ebx.05.reload = load i32, i32* %ebx.05.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %24 = add i32 %.reload, -1, !insn.addr !1042
  store i32 %24, i32* %13, align 4, !insn.addr !1043
  %25 = udiv i32 %ebx.05.reload, %number, !insn.addr !1044
  %26 = urem i32 %ebx.05.reload, %number
  %27 = add i32 %26, 48, !insn.addr !1045
  %28 = trunc i32 %27 to i8
  %29 = icmp slt i8 %28, 58, !insn.addr !1046
  %30 = add i32 %27, %23
  %.pre = trunc i32 %30 to i8
  %.pre-phi = select i1 %29, i8 %28, i8 %.pre
  %31 = load i32, i32* %11, align 4, !insn.addr !1047
  %32 = inttoptr i32 %31 to i8*, !insn.addr !1048
  store i8 %.pre-phi, i8* %32, align 1, !insn.addr !1048
  %33 = load i32, i32* %11, align 4, !insn.addr !1049
  %34 = add i32 %33, -1, !insn.addr !1049
  store i32 %34, i32* %11, align 4
  %35 = load i32, i32* %13, align 4, !insn.addr !1038
  %36 = icmp eq i32 %35, 0, !insn.addr !1039
  %37 = icmp slt i32 %35, 0, !insn.addr !1039
  %38 = icmp eq i1 %37, false, !insn.addr !1040
  %39 = icmp eq i1 %36, false, !insn.addr !1040
  %40 = icmp ne i1 %38, %39, !insn.addr !1040
  %41 = icmp ult i32 %ebx.05.reload, %number, !insn.addr !1041
  %or.cond = icmp eq i1 %41, %40
  store i32 %35, i32* %.reg2mem, !insn.addr !1040
  store i32 %25, i32* %ebx.05.reg2mem, !insn.addr !1040
  store i32 %34, i32* %storemerge3.lcssa.reg2mem, !insn.addr !1040
  br i1 %or.cond, label %dec_label_pc_41b5a2, label %dec_label_pc_41b572, !insn.addr !1040

dec_label_pc_41b5a2:                              ; preds = %dec_label_pc_41b572, %dec_label_pc_41b53e
  %storemerge3.lcssa.reload = load i32, i32* %storemerge3.lcssa.reg2mem
  %42 = sub i32 %9, %storemerge3.lcssa.reload, !insn.addr !1050
  %43 = add i32 %0, 56, !insn.addr !1051
  %44 = inttoptr i32 %43 to i32*, !insn.addr !1051
  store i32 %42, i32* %44, align 4, !insn.addr !1051
  %45 = load i32, i32* %11, align 4, !insn.addr !1052
  %46 = add i32 %45, 1, !insn.addr !1052
  store i32 %46, i32* %11, align 4, !insn.addr !1052
  ret void, !insn.addr !1053
}

define void @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_integer_parse_into_buffer<unsigned __int64>"(i32* %this, i64 %number, i32 %radix, i1 %capital_hexits) local_unnamed_addr {
dec_label_pc_41bccc:
  %storemerge.lcssa.reg2mem = alloca i32, !insn.addr !1054
  %storemerge5.reg2mem = alloca i32, !insn.addr !1054
  %ebx.06.reg2mem = alloca i32, !insn.addr !1054
  %esp.07.reg2mem = alloca i32, !insn.addr !1054
  %edi.18.reg2mem = alloca i32, !insn.addr !1054
  %.reg2mem = alloca i32, !insn.addr !1054
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = ptrtoint i32* %this to i32
  %stack_var_-28 = alloca i32, align 4
  %2 = add i32 %0, 1092, !insn.addr !1055
  %3 = inttoptr i32 %2 to i32*, !insn.addr !1055
  %4 = load i32, i32* %3, align 4, !insn.addr !1055
  %5 = icmp eq i32 %4, 0, !insn.addr !1056
  %6 = icmp eq i1 %5, false, !insn.addr !1057
  %7 = add i32 %0, 64
  %spec.select = select i1 %6, i32 %4, i32 %7
  %8 = call i32 @function_403e63(), !insn.addr !1058
  %9 = trunc i64 %number to i32, !insn.addr !1059
  %10 = add i32 %8, -1, !insn.addr !1060
  %11 = add i32 %10, %spec.select, !insn.addr !1061
  %12 = add i32 %0, 52, !insn.addr !1062
  %13 = inttoptr i32 %12 to i32*, !insn.addr !1062
  store i32 %11, i32* %13, align 4
  %14 = add i32 %0, 40, !insn.addr !1063
  %15 = inttoptr i32 %14 to i32*, !insn.addr !1063
  %16 = load i32, i32* %15, align 4, !insn.addr !1063
  %17 = icmp eq i32 %16, 0, !insn.addr !1064
  %18 = icmp slt i32 %16, 0, !insn.addr !1064
  %19 = icmp eq i1 %18, false, !insn.addr !1065
  %20 = icmp eq i1 %17, false, !insn.addr !1065
  %21 = icmp ne i1 %19, %20, !insn.addr !1065
  %22 = or i32 %9, %1, !insn.addr !1066
  %23 = icmp eq i32 %22, 0, !insn.addr !1066
  %or.cond4 = icmp eq i1 %23, %21
  store i32 %11, i32* %storemerge.lcssa.reg2mem, !insn.addr !1065
  br i1 %or.cond4, label %dec_label_pc_41bd48, label %dec_label_pc_41bd0b.lr.ph, !insn.addr !1065

dec_label_pc_41bd0b.lr.ph:                        ; preds = %dec_label_pc_41bccc
  %24 = ptrtoint i32* %stack_var_-28 to i32, !insn.addr !1067
  %25 = select i1 %capital_hexits, i32 199, i32 39
  store i32 %16, i32* %.reg2mem
  store i32 %1, i32* %edi.18.reg2mem
  store i32 %24, i32* %esp.07.reg2mem
  store i32 %9, i32* %ebx.06.reg2mem
  store i32 %11, i32* %storemerge5.reg2mem
  br label %dec_label_pc_41bd0b

dec_label_pc_41bd0b:                              ; preds = %dec_label_pc_41bd0b.lr.ph, %dec_label_pc_41bd0b
  %storemerge5.reload = load i32, i32* %storemerge5.reg2mem
  %ebx.06.reload = load i32, i32* %ebx.06.reg2mem
  %esp.07.reload = load i32, i32* %esp.07.reg2mem
  %edi.18.reload = load i32, i32* %edi.18.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %26 = add i32 %esp.07.reload, -4, !insn.addr !1068
  %27 = inttoptr i32 %26 to i32*, !insn.addr !1068
  store i32 %ebx.06.reload, i32* %27, align 4, !insn.addr !1068
  %28 = add i32 %esp.07.reload, -8, !insn.addr !1069
  %29 = inttoptr i32 %28 to i32*, !insn.addr !1069
  store i32 0, i32* %29, align 4, !insn.addr !1069
  %30 = add i32 %esp.07.reload, -12, !insn.addr !1070
  %31 = inttoptr i32 %30 to i32*, !insn.addr !1070
  store i32 %radix, i32* %31, align 4, !insn.addr !1070
  %32 = add i32 %.reload, -1, !insn.addr !1071
  %33 = add i32 %esp.07.reload, -16, !insn.addr !1072
  %34 = inttoptr i32 %33 to i32*, !insn.addr !1072
  store i32 %ebx.06.reload, i32* %34, align 4, !insn.addr !1072
  %35 = add i32 %esp.07.reload, -20, !insn.addr !1073
  %36 = inttoptr i32 %35 to i32*, !insn.addr !1073
  store i32 %edi.18.reload, i32* %36, align 4, !insn.addr !1073
  store i32 %32, i32* %15, align 4, !insn.addr !1074
  %37 = call i32 @function_401500(), !insn.addr !1075
  %38 = add i32 %storemerge5.reload, 48, !insn.addr !1076
  %39 = trunc i32 %38 to i8, !insn.addr !1077
  %40 = icmp slt i8 %39, 58, !insn.addr !1077
  %41 = select i1 %40, i32 0, i32 %25
  %.pn.in = add i32 %41, %38
  %42 = load i32, i32* %13, align 4, !insn.addr !1078
  %43 = trunc i32 %.pn.in to i8, !insn.addr !1079
  %44 = inttoptr i32 %42 to i8*, !insn.addr !1079
  store i8 %43, i8* %44, align 1, !insn.addr !1079
  %45 = load i32, i32* %13, align 4, !insn.addr !1080
  %46 = add i32 %45, -1, !insn.addr !1080
  store i32 %46, i32* %13, align 4
  %47 = load i32, i32* %15, align 4, !insn.addr !1063
  %48 = icmp eq i32 %47, 0, !insn.addr !1064
  %49 = icmp slt i32 %47, 0, !insn.addr !1064
  %50 = icmp eq i1 %49, false, !insn.addr !1065
  %51 = icmp eq i1 %48, false, !insn.addr !1065
  %52 = icmp ne i1 %50, %51, !insn.addr !1065
  %53 = or i32 %37, %.reload, !insn.addr !1066
  %54 = icmp eq i32 %53, 0, !insn.addr !1066
  %or.cond = icmp eq i1 %54, %52
  store i32 %47, i32* %.reg2mem, !insn.addr !1065
  store i32 %37, i32* %edi.18.reg2mem, !insn.addr !1065
  store i32 %33, i32* %esp.07.reg2mem, !insn.addr !1065
  store i32 %.reload, i32* %ebx.06.reg2mem, !insn.addr !1065
  store i32 %46, i32* %storemerge5.reg2mem, !insn.addr !1065
  store i32 %46, i32* %storemerge.lcssa.reg2mem, !insn.addr !1065
  br i1 %or.cond, label %dec_label_pc_41bd48, label %dec_label_pc_41bd0b, !insn.addr !1065

dec_label_pc_41bd48:                              ; preds = %dec_label_pc_41bd0b, %dec_label_pc_41bccc
  %storemerge.lcssa.reload = load i32, i32* %storemerge.lcssa.reg2mem
  %55 = sub i32 %11, %storemerge.lcssa.reload, !insn.addr !1081
  %56 = add i32 %0, 56, !insn.addr !1082
  %57 = inttoptr i32 %56 to i32*, !insn.addr !1082
  store i32 %55, i32* %57, align 4, !insn.addr !1082
  %58 = load i32, i32* %13, align 4, !insn.addr !1083
  %59 = add i32 %58, 1, !insn.addr !1083
  store i32 %59, i32* %13, align 4, !insn.addr !1083
  ret void, !insn.addr !1084
}

define void @"__crt_stdio_output::write_multiple_characters<__crt_stdio_output::stream_output_adapter<char>,char>"(i32* %adapter, i8 %c, i32 %count, i32* %count_written) local_unnamed_addr {
dec_label_pc_41c44c:
  %esi.0.reg2mem = alloca i32, !insn.addr !1085
  %esp.0.reg2mem = alloca i32, !insn.addr !1085
  %stack_var_-12 = alloca i32, align 4
  %0 = icmp slt i32 %count, 1, !insn.addr !1086
  br i1 %0, label %dec_label_pc_41c484, label %dec_label_pc_41c459, !insn.addr !1086

dec_label_pc_41c459:                              ; preds = %dec_label_pc_41c44c
  %1 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !1087
  %2 = sext i8 %c to i32, !insn.addr !1088
  store i32 %1, i32* %esp.0.reg2mem, !insn.addr !1089
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !1089
  br label %dec_label_pc_41c45d, !insn.addr !1089

dec_label_pc_41c45d:                              ; preds = %dec_label_pc_41c47d, %dec_label_pc_41c459
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %3 = add i32 %esp.0.reload, -4, !insn.addr !1088
  %4 = inttoptr i32 %3 to i32*, !insn.addr !1088
  store i32 %2, i32* %4, align 4, !insn.addr !1088
  %5 = call i32 @function_4040cf(), !insn.addr !1090
  %6 = trunc i32 %5 to i8, !insn.addr !1091
  %7 = icmp eq i8 %6, 0, !insn.addr !1091
  br i1 %7, label %dec_label_pc_41c478.thread, label %dec_label_pc_41c478, !insn.addr !1092

dec_label_pc_41c478.thread:                       ; preds = %dec_label_pc_41c45d
  store i32 -1, i32* %count_written, align 4
  br label %dec_label_pc_41c484

dec_label_pc_41c478:                              ; preds = %dec_label_pc_41c45d
  %8 = load i32, i32* %count_written, align 4, !insn.addr !1093
  %9 = add i32 %8, 1, !insn.addr !1093
  store i32 %9, i32* %count_written, align 4
  %10 = icmp eq i32 %9, -1, !insn.addr !1094
  br i1 %10, label %dec_label_pc_41c484, label %dec_label_pc_41c47d, !insn.addr !1095

dec_label_pc_41c47d:                              ; preds = %dec_label_pc_41c478
  %11 = add nuw nsw i32 %esi.0.reload, 1, !insn.addr !1096
  %12 = icmp slt i32 %11, %count, !insn.addr !1097
  store i32 %3, i32* %esp.0.reg2mem, !insn.addr !1097
  store i32 %11, i32* %esi.0.reg2mem, !insn.addr !1097
  br i1 %12, label %dec_label_pc_41c45d, label %dec_label_pc_41c484, !insn.addr !1097

dec_label_pc_41c484:                              ; preds = %dec_label_pc_41c478, %dec_label_pc_41c47d, %dec_label_pc_41c478.thread, %dec_label_pc_41c44c
  ret void, !insn.addr !1098
}

define void @"__crt_stdio_output::common_data<char>::common_data<char>"(i32* %this) local_unnamed_addr {
dec_label_pc_41c78d:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = inttoptr i32 %0 to i32*, !insn.addr !1099
  store i32 0, i32* %1, align 4, !insn.addr !1099
  %2 = add i32 %0, 4, !insn.addr !1100
  %3 = inttoptr i32 %2 to i32*, !insn.addr !1100
  store i32 0, i32* %3, align 4, !insn.addr !1100
  %4 = add i32 %0, 8, !insn.addr !1101
  %5 = inttoptr i32 %4 to i32*, !insn.addr !1101
  store i32 0, i32* %5, align 4, !insn.addr !1101
  %6 = add i32 %0, 12, !insn.addr !1102
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1102
  store i32 0, i32* %7, align 4, !insn.addr !1102
  %8 = add i32 %0, 16, !insn.addr !1103
  %9 = inttoptr i32 %8 to i32*, !insn.addr !1103
  store i32 0, i32* %9, align 4, !insn.addr !1103
  %10 = add i32 %0, 20, !insn.addr !1104
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1104
  store i32 0, i32* %11, align 4, !insn.addr !1104
  %12 = add i32 %0, 24, !insn.addr !1105
  %13 = inttoptr i32 %12 to i32*, !insn.addr !1105
  store i32 0, i32* %13, align 4, !insn.addr !1105
  %14 = add i32 %0, 28, !insn.addr !1106
  %15 = inttoptr i32 %14 to i32*, !insn.addr !1106
  store i32 0, i32* %15, align 4, !insn.addr !1106
  %16 = add i32 %0, 32, !insn.addr !1107
  %17 = inttoptr i32 %16 to i32*, !insn.addr !1107
  store i32 0, i32* %17, align 4, !insn.addr !1107
  %18 = add i32 %0, 36, !insn.addr !1108
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1108
  store i32 0, i32* %19, align 4, !insn.addr !1108
  %20 = add i32 %0, 40, !insn.addr !1109
  %21 = inttoptr i32 %20 to i32*, !insn.addr !1109
  store i32 0, i32* %21, align 4, !insn.addr !1109
  %22 = add i32 %0, 48, !insn.addr !1110
  %23 = inttoptr i32 %22 to i16*, !insn.addr !1110
  store i16 0, i16* %23, align 2, !insn.addr !1110
  %24 = add i32 %0, 56, !insn.addr !1111
  %25 = inttoptr i32 %24 to i32*, !insn.addr !1111
  store i32 0, i32* %25, align 4, !insn.addr !1111
  %26 = add i32 %0, 60, !insn.addr !1112
  %27 = inttoptr i32 %26 to i8*, !insn.addr !1112
  store i8 0, i8* %27, align 1, !insn.addr !1112
  %28 = add i32 %0, 1088, !insn.addr !1113
  %29 = inttoptr i32 %28 to i32*, !insn.addr !1113
  store i32 0, i32* %29, align 4, !insn.addr !1113
  %30 = add i32 %0, 1092, !insn.addr !1114
  %31 = inttoptr i32 %30 to i32*, !insn.addr !1114
  store i32 0, i32* %31, align 4, !insn.addr !1114
  ret void, !insn.addr !1115
}

define void @"__crt_stdio_output::output_adapter_data<char,__crt_stdio_output::stream_output_adapter<char> >::output_adapter_data<char,__crt_stdio_output::stream_output_adapter<char> >"(i32* %this, i32* %output_adapter, i64 %options, i8* %format, i32 %locale, i8* %arglist) local_unnamed_addr {
dec_label_pc_41c83f:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = ptrtoint i8* %arglist to i32
  %4 = ptrtoint i8* %format to i32
  %5 = trunc i64 %options to i32
  %6 = ptrtoint i32* %output_adapter to i32
  %7 = call i32 @function_404016(i32 %0, i32 %1), !insn.addr !1116
  %8 = load i32, i32* %this, align 4, !insn.addr !1117
  %9 = add i32 %2, 1096, !insn.addr !1118
  %10 = inttoptr i32 %9 to i32*, !insn.addr !1118
  store i32 %8, i32* %10, align 4, !insn.addr !1118
  %11 = inttoptr i32 %2 to i32*, !insn.addr !1119
  store i32 %6, i32* %11, align 4, !insn.addr !1119
  %12 = add i32 %2, 4, !insn.addr !1120
  %13 = inttoptr i32 %12 to i32*, !insn.addr !1120
  store i32 %5, i32* %13, align 4, !insn.addr !1120
  %14 = add i32 %2, 8, !insn.addr !1121
  %15 = inttoptr i32 %14 to i32*, !insn.addr !1121
  store i32 %locale, i32* %15, align 4, !insn.addr !1121
  %16 = add i32 %2, 16, !insn.addr !1122
  %17 = inttoptr i32 %16 to i32*, !insn.addr !1122
  store i32 %4, i32* %17, align 4, !insn.addr !1122
  %18 = add i32 %2, 20, !insn.addr !1123
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1123
  store i32 %3, i32* %19, align 4, !insn.addr !1123
  ret void, !insn.addr !1124
}

define void @"_LocaleUpdate::_LocaleUpdate"(i32* %this, i32 %locale) local_unnamed_addr {
dec_label_pc_41cc3b:
  %storemerge.reg2mem = alloca i32, !insn.addr !1125
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 12, !insn.addr !1126
  %2 = inttoptr i32 %1 to i8*, !insn.addr !1126
  store i8 0, i8* %2, align 1, !insn.addr !1126
  %3 = add i32 %0, 4, !insn.addr !1127
  %4 = icmp eq i32* %this, null, !insn.addr !1128
  br i1 %4, label %dec_label_pc_41cc5b, label %dec_label_pc_41cc52, !insn.addr !1129

dec_label_pc_41cc52:                              ; preds = %dec_label_pc_41cc3b
  %5 = ptrtoint i32* %this to i32
  %6 = load i32, i32* %this, align 4, !insn.addr !1130
  %7 = inttoptr i32 %3 to i32*, !insn.addr !1131
  store i32 %6, i32* %7, align 4, !insn.addr !1131
  %8 = add i32 %5, 4, !insn.addr !1132
  %9 = inttoptr i32 %8 to i32*, !insn.addr !1132
  %10 = load i32, i32* %9, align 4, !insn.addr !1132
  store i32 %10, i32* %storemerge.reg2mem, !insn.addr !1133
  br label %dec_label_pc_41cc70, !insn.addr !1133

dec_label_pc_41cc5b:                              ; preds = %dec_label_pc_41cc3b
  %11 = load i32, i32* @__acrt_locale_changed_data, align 4, !insn.addr !1134
  %12 = icmp eq i32 %11, 0, !insn.addr !1134
  %13 = icmp eq i1 %12, false, !insn.addr !1135
  br i1 %13, label %dec_label_pc_41cc75, label %dec_label_pc_41cc64, !insn.addr !1135

dec_label_pc_41cc64:                              ; preds = %dec_label_pc_41cc5b
  %14 = inttoptr i32 %3 to i32*, !insn.addr !1136
  store i32 ptrtoint (i32* @__acrt_initial_locale_data to i32), i32* %14, align 4, !insn.addr !1136
  %15 = load %__crt_multibyte_data*, %__crt_multibyte_data** @global_var_47c310, align 4, !insn.addr !1137
  %16 = ptrtoint %__crt_multibyte_data* %15 to i32, !insn.addr !1137
  store i32 %16, i32* %storemerge.reg2mem, !insn.addr !1137
  br label %dec_label_pc_41cc70, !insn.addr !1137

dec_label_pc_41cc70:                              ; preds = %dec_label_pc_41cc64, %dec_label_pc_41cc52
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %17 = add i32 %0, 8, !insn.addr !1138
  %18 = inttoptr i32 %17 to i32*, !insn.addr !1138
  store i32 %storemerge.reload, i32* %18, align 4, !insn.addr !1138
  br label %dec_label_pc_41ccb6, !insn.addr !1139

dec_label_pc_41cc75:                              ; preds = %dec_label_pc_41cc5b
  %19 = call i32 @___acrt_getptd(), !insn.addr !1140
  %20 = inttoptr i32 %0 to i32*, !insn.addr !1141
  store i32 %19, i32* %20, align 4, !insn.addr !1141
  %21 = add i32 %0, 8, !insn.addr !1142
  %22 = add i32 %19, 76, !insn.addr !1143
  %23 = inttoptr i32 %22 to i32*, !insn.addr !1143
  %24 = load i32, i32* %23, align 4, !insn.addr !1143
  %25 = inttoptr i32 %3 to i32*, !insn.addr !1144
  store i32 %24, i32* %25, align 4, !insn.addr !1144
  %26 = add i32 %19, 72, !insn.addr !1145
  %27 = inttoptr i32 %26 to i32*, !insn.addr !1145
  %28 = load i32, i32* %27, align 4, !insn.addr !1145
  %29 = inttoptr i32 %21 to i32*, !insn.addr !1146
  store i32 %28, i32* %29, align 4, !insn.addr !1146
  %30 = call i32 @function_403099(i32 %19, i32 %3), !insn.addr !1147
  %31 = call i32 @function_404395(i32 %28, i32 %21), !insn.addr !1148
  %32 = add i32 %28, 848, !insn.addr !1149
  %33 = inttoptr i32 %32 to i32*, !insn.addr !1149
  %34 = load i32, i32* %33, align 4, !insn.addr !1149
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0, !insn.addr !1150
  %37 = icmp eq i1 %36, false, !insn.addr !1151
  br i1 %37, label %dec_label_pc_41ccb6, label %dec_label_pc_41cca9, !insn.addr !1151

dec_label_pc_41cca9:                              ; preds = %dec_label_pc_41cc75
  %38 = or i32 %34, 2, !insn.addr !1152
  store i32 %38, i32* %33, align 4, !insn.addr !1153
  store i8 1, i8* %2, align 1, !insn.addr !1154
  br label %dec_label_pc_41ccb6, !insn.addr !1154

dec_label_pc_41ccb6:                              ; preds = %dec_label_pc_41cca9, %dec_label_pc_41cc75, %dec_label_pc_41cc70
  ret void, !insn.addr !1155
}

declare void @"__crt_stdio_output::formatting_buffer::~formatting_buffer"(i32*) local_unnamed_addr

declare i32* @"__crt_unique_heap_ptr<char,__crt_internal_free_policy>::operator="(i32*, i32*) local_unnamed_addr

define i32 @"<lambda_0be4ab1c2a6918fda4e39227d83ea893>::operator()"(i32* %this) local_unnamed_addr {
dec_label_pc_41cef0:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i8 @__decompiler_undefined_function_8()
  %locale_update_-1140 = alloca i32, align 4
  %stack_var_-1124 = alloca i32, align 4
  %processor_-1120 = alloca i32, align 4
  %4 = call i32 @__decompiler_undefined_function_0()
  %5 = call i32 @function_402f8b(i32 %2, i32 %0, i32 %1), !insn.addr !1156
  %6 = add i32 %2, 4, !insn.addr !1157
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1157
  %8 = load i32, i32* %7, align 4, !insn.addr !1157
  %9 = inttoptr i32 %8 to i32*, !insn.addr !1158
  %10 = load i32, i32* %9, align 4, !insn.addr !1158
  %11 = call i32 @function_403d91(i32 %10), !insn.addr !1159
  %12 = ptrtoint i32* %processor_-1120 to i32, !insn.addr !1160
  store i32 %12, i32* %stack_var_-1124, align 4, !insn.addr !1161
  %13 = add i32 %2, 16, !insn.addr !1162
  %14 = inttoptr i32 %13 to i32*, !insn.addr !1162
  %15 = load i32, i32* %14, align 4, !insn.addr !1162
  %16 = inttoptr i32 %15 to i32*, !insn.addr !1163
  %17 = load i32, i32* %16, align 4, !insn.addr !1163
  %18 = ptrtoint i32* %locale_update_-1140 to i32, !insn.addr !1164
  %19 = add i32 %2, 12, !insn.addr !1165
  %20 = inttoptr i32 %19 to i32*, !insn.addr !1165
  %21 = load i32, i32* %20, align 4, !insn.addr !1165
  %22 = inttoptr i32 %21 to i32*, !insn.addr !1166
  %23 = load i32, i32* %22, align 4, !insn.addr !1166
  %24 = add i32 %2, 8, !insn.addr !1167
  %25 = inttoptr i32 %24 to i32*, !insn.addr !1167
  %26 = load i32, i32* %25, align 4, !insn.addr !1167
  %27 = add i32 %26, 4, !insn.addr !1168
  %28 = inttoptr i32 %27 to i32*, !insn.addr !1168
  %29 = load i32, i32* %28, align 4, !insn.addr !1168
  %30 = inttoptr i32 %26 to i32*, !insn.addr !1169
  %31 = load i32, i32* %30, align 4, !insn.addr !1169
  %32 = ptrtoint i32* %stack_var_-1124 to i32, !insn.addr !1170
  %33 = call i32 @function_402d88(i32 %32, i32 %31, i32 %29, i32 %23, i32 %18, i32 %17, i32 ptrtoint (i32* @80 to i32)), !insn.addr !1171
  %34 = call i32 @function_4023ce(i32 0), !insn.addr !1172
  %35 = call i32 @function_40321f(), !insn.addr !1173
  %36 = icmp eq i8 %3, 0, !insn.addr !1174
  br i1 %36, label %dec_label_pc_41cf91, label %dec_label_pc_41cf84, !insn.addr !1175

dec_label_pc_41cf84:                              ; preds = %dec_label_pc_41cef0
  %37 = add i32 %4, 848, !insn.addr !1176
  %38 = inttoptr i32 %37 to i32*, !insn.addr !1176
  %39 = load i32, i32* %38, align 4, !insn.addr !1176
  %40 = and i32 %39, -3, !insn.addr !1176
  store i32 %40, i32* %38, align 4, !insn.addr !1176
  br label %dec_label_pc_41cf91, !insn.addr !1176

dec_label_pc_41cf91:                              ; preds = %dec_label_pc_41cf84, %dec_label_pc_41cef0
  %sext = mul i32 %5, 16777216
  %41 = sdiv i32 %sext, 16777216, !insn.addr !1177
  %42 = call i32 @function_403e86(i32 %41, i32 %2), !insn.addr !1178
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !1179
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !1180
}

define void @"__crt_stdio_output::crop_zeroes"(i8* %buffer, i32 %locale) local_unnamed_addr {
dec_label_pc_41d88e:
  %.reg2mem24 = alloca i32, !insn.addr !1181
  %.reg2mem = alloca i32, !insn.addr !1181
  %ecx.3.reg2mem = alloca i32, !insn.addr !1181
  %ecx.2.in.reg2mem = alloca i32, !insn.addr !1181
  %ecx.1.reg2mem = alloca i32, !insn.addr !1181
  %.pre-phi.reg2mem = alloca i8, !insn.addr !1181
  %edx.0.reg2mem = alloca i8, !insn.addr !1181
  %ecx.0.reg2mem = alloca i32, !insn.addr !1181
  %0 = load i8, i8* %buffer, align 1, !insn.addr !1182
  %1 = icmp eq i8 %0, 0, !insn.addr !1183
  br i1 %1, label %dec_label_pc_41d8eb, label %dec_label_pc_41d8ae.preheader, !insn.addr !1184

dec_label_pc_41d8ae.preheader:                    ; preds = %dec_label_pc_41d88e
  %2 = inttoptr i32 %locale to i32*, !insn.addr !1185
  %3 = load i32, i32* %2, align 4, !insn.addr !1185
  %4 = add i32 %3, 136, !insn.addr !1186
  %5 = inttoptr i32 %4 to i32*, !insn.addr !1186
  %6 = load i32, i32* %5, align 4, !insn.addr !1186
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1187
  %8 = load i32, i32* %7, align 4, !insn.addr !1187
  %9 = inttoptr i32 %8 to i8*, !insn.addr !1188
  %10 = load i8, i8* %9, align 1, !insn.addr !1188
  %11 = ptrtoint i8* %buffer to i32
  store i32 %11, i32* %ecx.0.reg2mem
  store i8 %0, i8* %edx.0.reg2mem
  br label %dec_label_pc_41d8ae

dec_label_pc_41d8ae:                              ; preds = %dec_label_pc_41d8ae.preheader, %dec_label_pc_41d8b4
  %edx.0.reload = load i8, i8* %edx.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %12 = icmp eq i8 %10, %edx.0.reload, !insn.addr !1189
  store i8 %edx.0.reload, i8* %.pre-phi.reg2mem, !insn.addr !1190
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !1190
  br i1 %12, label %dec_label_pc_41d8bd, label %dec_label_pc_41d8b4, !insn.addr !1190

dec_label_pc_41d8b4:                              ; preds = %dec_label_pc_41d8ae
  %13 = add i32 %ecx.0.reload, 1, !insn.addr !1191
  %14 = inttoptr i32 %13 to i8*, !insn.addr !1192
  %15 = load i8, i8* %14, align 1, !insn.addr !1192
  %16 = icmp eq i8 %15, 0, !insn.addr !1193
  %17 = icmp eq i1 %16, false, !insn.addr !1194
  store i32 %13, i32* %ecx.0.reg2mem, !insn.addr !1194
  store i8 %15, i8* %edx.0.reg2mem, !insn.addr !1194
  store i8 %15, i8* %.pre-phi.reg2mem, !insn.addr !1194
  store i32 %13, i32* %ecx.1.reg2mem, !insn.addr !1194
  br i1 %17, label %dec_label_pc_41d8ae, label %dec_label_pc_41d8bd, !insn.addr !1194

dec_label_pc_41d8bd:                              ; preds = %dec_label_pc_41d8b4, %dec_label_pc_41d8ae
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %.pre-phi.reload = load i8, i8* %.pre-phi.reg2mem
  %18 = icmp eq i8 %.pre-phi.reload, 0, !insn.addr !1195
  store i32 %ecx.1.reload, i32* %ecx.2.in.reg2mem, !insn.addr !1196
  br i1 %18, label %dec_label_pc_41d8eb, label %dec_label_pc_41d8cd, !insn.addr !1196

dec_label_pc_41d8cd:                              ; preds = %dec_label_pc_41d8bd, %dec_label_pc_41d8cd
  %ecx.2.in.reload = load i32, i32* %ecx.2.in.reg2mem
  %ecx.2 = add i32 %ecx.2.in.reload, 1
  %19 = inttoptr i32 %ecx.2 to i8*, !insn.addr !1197
  %20 = load i8, i8* %19, align 1, !insn.addr !1197
  store i32 %ecx.2, i32* %ecx.2.in.reg2mem
  switch i8 %20, label %dec_label_pc_41d8cd [
    i8 101, label %dec_label_pc_41d8d5.preheader
    i8 69, label %dec_label_pc_41d8d5.preheader
    i8 0, label %dec_label_pc_41d8d5.preheader
  ]

dec_label_pc_41d8d5.preheader:                    ; preds = %dec_label_pc_41d8cd, %dec_label_pc_41d8cd, %dec_label_pc_41d8cd
  store i32 %ecx.2, i32* %ecx.3.reg2mem
  br label %dec_label_pc_41d8d5

dec_label_pc_41d8d5:                              ; preds = %dec_label_pc_41d8d5.preheader, %dec_label_pc_41d8d5
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %21 = add i32 %ecx.3.reload, -1, !insn.addr !1198
  %22 = inttoptr i32 %21 to i8*, !insn.addr !1199
  %23 = load i8, i8* %22, align 1, !insn.addr !1199
  %24 = icmp eq i8 %23, 48, !insn.addr !1200
  store i32 %21, i32* %ecx.3.reg2mem, !insn.addr !1201
  br i1 %24, label %dec_label_pc_41d8d5, label %dec_label_pc_41d8dc, !insn.addr !1201

dec_label_pc_41d8dc:                              ; preds = %dec_label_pc_41d8d5
  %25 = icmp eq i8 %23, %10, !insn.addr !1202
  %26 = icmp eq i1 %25, false, !insn.addr !1203
  %27 = add i32 %ecx.3.reload, -2
  %spec.select = select i1 %26, i32 %21, i32 %27
  %28 = add i32 %spec.select, 1, !insn.addr !1204
  %29 = inttoptr i32 %28 to i8*, !insn.addr !1205
  store i8 %20, i8* %29, align 1, !insn.addr !1205
  %30 = icmp eq i8 %20, 0, !insn.addr !1206
  %31 = icmp eq i1 %30, false, !insn.addr !1207
  br i1 %31, label %dec_label_pc_41d8e1.dec_label_pc_41d8e1_crit_edge.lr.ph, label %dec_label_pc_41d8eb, !insn.addr !1207

dec_label_pc_41d8e1.dec_label_pc_41d8e1_crit_edge.lr.ph: ; preds = %dec_label_pc_41d8dc
  %32 = add i32 %ecx.2.in.reload, 2, !insn.addr !1208
  store i32 %32, i32* %.reg2mem
  store i32 %28, i32* %.reg2mem24
  br label %dec_label_pc_41d8e1.dec_label_pc_41d8e1_crit_edge

dec_label_pc_41d8e1.dec_label_pc_41d8e1_crit_edge: ; preds = %dec_label_pc_41d8e1.dec_label_pc_41d8e1_crit_edge.lr.ph, %dec_label_pc_41d8e1.dec_label_pc_41d8e1_crit_edge
  %.reload25 = load i32, i32* %.reg2mem24
  %.reload = load i32, i32* %.reg2mem
  %.phi.trans.insert = inttoptr i32 %.reload to i8*
  %.pre = load i8, i8* %.phi.trans.insert, align 1
  %33 = add i32 %.reload25, 1, !insn.addr !1204
  %34 = add i32 %.reload, 1, !insn.addr !1208
  %35 = inttoptr i32 %33 to i8*, !insn.addr !1205
  store i8 %.pre, i8* %35, align 1, !insn.addr !1205
  %36 = icmp eq i8 %.pre, 0, !insn.addr !1206
  %37 = icmp eq i1 %36, false, !insn.addr !1207
  store i32 %34, i32* %.reg2mem, !insn.addr !1207
  store i32 %33, i32* %.reg2mem24, !insn.addr !1207
  br i1 %37, label %dec_label_pc_41d8e1.dec_label_pc_41d8e1_crit_edge, label %dec_label_pc_41d8eb, !insn.addr !1207

dec_label_pc_41d8eb:                              ; preds = %dec_label_pc_41d8dc, %dec_label_pc_41d8e1.dec_label_pc_41d8e1_crit_edge, %dec_label_pc_41d88e, %dec_label_pc_41d8bd
  ret void, !insn.addr !1209
}

define i32 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::find_next_state"(i32* %this, i8 %c, i32 %previous_state) local_unnamed_addr {
dec_label_pc_41d9a6:
  %storemerge.reg2mem = alloca i32, !insn.addr !1210
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = ptrtoint i32* %this to i32
  %2 = trunc i32 %1 to i8
  %3 = add i8 %2, -32, !insn.addr !1211
  %4 = icmp ult i8 %3, 91
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !1212
  br i1 %4, label %dec_label_pc_41d9bd, label %dec_label_pc_41d9d1, !insn.addr !1212

dec_label_pc_41d9bd:                              ; preds = %dec_label_pc_41d9a6
  %5 = call i32 @__asm_lfence(i8* getelementptr inbounds ([91 x i8], [91 x i8]* @standard_lookup_table, i32 0, i32 0), i32 %0), !insn.addr !1213
  %6 = add i32 %5, ptrtoint (%vtable_472260_type* @"std::bad_exception::`vftable'" to i32), !insn.addr !1214
  %7 = inttoptr i32 %6 to i8*, !insn.addr !1214
  %8 = load i8, i8* %7, align 1, !insn.addr !1214
  %9 = mul i8 %8, 8
  %10 = and i8 %9, 120
  %phitmp = zext i8 %10 to i32
  store i32 %phitmp, i32* %storemerge.reg2mem, !insn.addr !1215
  br label %dec_label_pc_41d9d1, !insn.addr !1215

dec_label_pc_41d9d1:                              ; preds = %dec_label_pc_41d9a6, %dec_label_pc_41d9bd
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %11 = sext i8 %c to i32, !insn.addr !1216
  %12 = add i32 %11, ptrtoint ([91 x i8]* @standard_lookup_table to i32), !insn.addr !1217
  %13 = add i32 %12, %storemerge.reload, !insn.addr !1217
  %14 = inttoptr i32 %13 to i8*, !insn.addr !1217
  %15 = load i8, i8* %14, align 1, !insn.addr !1217
  %16 = udiv i8 %15, 16
  %17 = zext i8 %16 to i32, !insn.addr !1218
  ret i32 %17, !insn.addr !1219
}

define void @"__crt_stdio_output::force_decimal_point"(i8* %buffer, i32 %locale) local_unnamed_addr {
dec_label_pc_41dcc2:
  %ebx.3.reg2mem = alloca i8, !insn.addr !1220
  %edx.3.in.reg2mem = alloca i32, !insn.addr !1220
  %ebx.2.reg2mem = alloca i8, !insn.addr !1220
  %edx.2.reg2mem = alloca i32, !insn.addr !1220
  %.pre-phi.reg2mem = alloca i8*, !insn.addr !1220
  %ebx.1.reg2mem = alloca i8, !insn.addr !1220
  %edx.1.reg2mem = alloca i32, !insn.addr !1220
  %.pre-phi8.reg2mem = alloca i8*, !insn.addr !1220
  %edx.0.reg2mem = alloca i32, !insn.addr !1220
  %0 = ptrtoint i8* %buffer to i32
  %1 = inttoptr i32 %locale to i32*, !insn.addr !1221
  %2 = load i32, i32* %1, align 4, !insn.addr !1221
  %3 = load i8, i8* %buffer, align 1, !insn.addr !1222
  %4 = zext i8 %3 to i32, !insn.addr !1222
  %5 = add i32 %2, 148, !insn.addr !1223
  %6 = inttoptr i32 %5 to i32*, !insn.addr !1223
  %7 = load i32, i32* %6, align 4, !insn.addr !1223
  %8 = add i32 %7, %4
  %9 = inttoptr i32 %8 to i8*
  %10 = load i8, i8* %9, align 1, !insn.addr !1224
  %11 = icmp eq i8 %10, 101, !insn.addr !1224
  store i8* %9, i8** %.pre-phi8.reg2mem, !insn.addr !1225
  store i32 %0, i32* %edx.1.reg2mem, !insn.addr !1225
  store i8 %3, i8* %ebx.1.reg2mem, !insn.addr !1225
  br i1 %11, label %dec_label_pc_41dcf2, label %dec_label_pc_41dce2, !insn.addr !1225

dec_label_pc_41dce2:                              ; preds = %dec_label_pc_41dcc2
  %12 = inttoptr i32 %2 to i32*, !insn.addr !1226
  %13 = load i32, i32* %12, align 4, !insn.addr !1226
  store i32 %0, i32* %edx.0.reg2mem, !insn.addr !1226
  br label %dec_label_pc_41dce5, !insn.addr !1226

dec_label_pc_41dce5:                              ; preds = %dec_label_pc_41dce5, %dec_label_pc_41dce2
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %14 = add i32 %edx.0.reload, 1, !insn.addr !1227
  %15 = inttoptr i32 %14 to i8*, !insn.addr !1228
  %16 = load i8, i8* %15, align 1, !insn.addr !1228
  %17 = zext i8 %16 to i32, !insn.addr !1228
  %18 = mul i32 %17, 2, !insn.addr !1229
  %19 = add i32 %18, %13, !insn.addr !1229
  %20 = inttoptr i32 %19 to i8*, !insn.addr !1229
  %21 = load i8, i8* %20, align 1, !insn.addr !1229
  %22 = and i8 %21, 4, !insn.addr !1229
  %23 = icmp eq i8 %22, 0, !insn.addr !1229
  %24 = icmp eq i1 %23, false, !insn.addr !1230
  store i32 %14, i32* %edx.0.reg2mem, !insn.addr !1230
  br i1 %24, label %dec_label_pc_41dce5, label %dec_label_pc_41dcf2.loopexit, !insn.addr !1230

dec_label_pc_41dcf2.loopexit:                     ; preds = %dec_label_pc_41dce5
  %.pre5 = add i32 %7, %17, !insn.addr !1231
  %.pre7 = inttoptr i32 %.pre5 to i8*, !insn.addr !1231
  store i8* %.pre7, i8** %.pre-phi8.reg2mem
  store i32 %14, i32* %edx.1.reg2mem
  store i8 %16, i8* %ebx.1.reg2mem
  br label %dec_label_pc_41dcf2

dec_label_pc_41dcf2:                              ; preds = %dec_label_pc_41dcf2.loopexit, %dec_label_pc_41dcc2
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %.pre-phi8.reload = load i8*, i8** %.pre-phi8.reg2mem
  %25 = load i8, i8* %.pre-phi8.reload, align 1, !insn.addr !1231
  %26 = icmp eq i8 %25, 120, !insn.addr !1231
  %27 = icmp eq i1 %26, false, !insn.addr !1232
  br i1 %27, label %dec_label_pc_41dcf2.dec_label_pc_41dd00_crit_edge, label %dec_label_pc_41dcfb, !insn.addr !1232

dec_label_pc_41dcf2.dec_label_pc_41dd00_crit_edge: ; preds = %dec_label_pc_41dcf2
  %ebx.1.reload = load i8, i8* %ebx.1.reg2mem
  %.pre = inttoptr i32 %edx.1.reload to i8*, !insn.addr !1233
  store i8* %.pre, i8** %.pre-phi.reg2mem
  store i32 %edx.1.reload, i32* %edx.2.reg2mem
  store i8 %ebx.1.reload, i8* %ebx.2.reg2mem
  br label %dec_label_pc_41dd00

dec_label_pc_41dcfb:                              ; preds = %dec_label_pc_41dcf2
  %28 = add i32 %edx.1.reload, 2, !insn.addr !1234
  %29 = inttoptr i32 %28 to i8*
  %30 = load i8, i8* %29, align 1, !insn.addr !1235
  store i8* %29, i8** %.pre-phi.reg2mem, !insn.addr !1235
  store i32 %28, i32* %edx.2.reg2mem, !insn.addr !1235
  store i8 %30, i8* %ebx.2.reg2mem, !insn.addr !1235
  br label %dec_label_pc_41dd00, !insn.addr !1235

dec_label_pc_41dd00:                              ; preds = %dec_label_pc_41dcf2.dec_label_pc_41dd00_crit_edge, %dec_label_pc_41dcfb
  %ebx.2.reload = load i8, i8* %ebx.2.reg2mem
  %edx.2.reload = load i32, i32* %edx.2.reg2mem
  %.pre-phi.reload = load i8*, i8** %.pre-phi.reg2mem
  %31 = add i32 %2, 136, !insn.addr !1236
  %32 = inttoptr i32 %31 to i32*, !insn.addr !1236
  %33 = load i32, i32* %32, align 4, !insn.addr !1236
  %34 = inttoptr i32 %33 to i32*, !insn.addr !1237
  %35 = load i32, i32* %34, align 4, !insn.addr !1237
  %36 = inttoptr i32 %35 to i8*, !insn.addr !1238
  %37 = load i8, i8* %36, align 1, !insn.addr !1238
  store i8 %37, i8* %.pre-phi.reload, align 1, !insn.addr !1233
  store i32 %edx.2.reload, i32* %edx.3.in.reg2mem, !insn.addr !1239
  store i8 %ebx.2.reload, i8* %ebx.3.reg2mem, !insn.addr !1239
  br label %dec_label_pc_41dd0d, !insn.addr !1239

dec_label_pc_41dd0d:                              ; preds = %dec_label_pc_41dd0d, %dec_label_pc_41dd00
  %ebx.3.reload = load i8, i8* %ebx.3.reg2mem
  %edx.3.in.reload = load i32, i32* %edx.3.in.reg2mem
  %edx.3 = add i32 %edx.3.in.reload, 1
  %38 = inttoptr i32 %edx.3 to i8*, !insn.addr !1240
  %39 = load i8, i8* %38, align 1, !insn.addr !1240
  store i8 %ebx.3.reload, i8* %38, align 1, !insn.addr !1241
  %40 = icmp eq i8 %ebx.3.reload, 0, !insn.addr !1242
  %41 = icmp eq i1 %40, false, !insn.addr !1243
  store i32 %edx.3, i32* %edx.3.in.reg2mem, !insn.addr !1243
  store i8 %39, i8* %ebx.3.reg2mem, !insn.addr !1243
  br i1 %41, label %dec_label_pc_41dd0d, label %dec_label_pc_41dd1a, !insn.addr !1243

dec_label_pc_41dd1a:                              ; preds = %dec_label_pc_41dd0d
  ret void, !insn.addr !1244
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::parse_int_from_format_string"(i32* %this, i32* %result) local_unnamed_addr {
dec_label_pc_41e5ce:
  %storemerge.reg2mem = alloca i32, !insn.addr !1245
  %eax.0.reg2mem = alloca i32, !insn.addr !1245
  %esi.0.reg2mem = alloca i32, !insn.addr !1245
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i8, align 1
  %1 = trunc i32 %0 to i8, !insn.addr !1246
  store i8 %1, i8* %stack_var_-8, align 1, !insn.addr !1246
  %2 = add i32 %0, 12, !insn.addr !1247
  %3 = inttoptr i32 %2 to i32*, !insn.addr !1247
  %4 = load i32, i32* %3, align 4, !insn.addr !1247
  %5 = icmp eq i32 %4, 0, !insn.addr !1248
  %6 = icmp eq i1 %5, false, !insn.addr !1249
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !1249
  br i1 %6, label %dec_label_pc_41e5ea, label %dec_label_pc_41e5e0, !insn.addr !1249

dec_label_pc_41e5e0:                              ; preds = %dec_label_pc_41e5ce
  %7 = call i32* @_errno(), !insn.addr !1250
  %8 = ptrtoint i32* %7 to i32, !insn.addr !1250
  store i32 %8, i32* %3, align 4, !insn.addr !1251
  store i32 %8, i32* %esi.0.reg2mem, !insn.addr !1251
  br label %dec_label_pc_41e5ea, !insn.addr !1251

dec_label_pc_41e5ea:                              ; preds = %dec_label_pc_41e5e0, %dec_label_pc_41e5ce
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %9 = inttoptr i32 %esi.0.reload to i32*, !insn.addr !1252
  %10 = load i32, i32* %9, align 4, !insn.addr !1252
  store i32 0, i32* %9, align 4, !insn.addr !1253
  %11 = add i32 %0, 16, !insn.addr !1254
  %12 = inttoptr i32 %11 to i32*, !insn.addr !1254
  %13 = load i32, i32* %12, align 4, !insn.addr !1254
  store i8 0, i8* %stack_var_-8, align 1, !insn.addr !1255
  %14 = add i32 %13, -1, !insn.addr !1256
  %15 = bitcast i8* %stack_var_-8 to i8**
  %16 = inttoptr i32 %14 to i8*, !insn.addr !1257
  %17 = call i32 @strtol(i8* %16, i8** nonnull %15, i32 10), !insn.addr !1258
  store i32 %17, i32* %this, align 4, !insn.addr !1259
  %18 = load i32, i32* %3, align 4, !insn.addr !1260
  %19 = icmp eq i32 %18, 0, !insn.addr !1261
  %20 = icmp eq i1 %19, false, !insn.addr !1262
  store i32 %18, i32* %eax.0.reg2mem, !insn.addr !1262
  br i1 %20, label %dec_label_pc_41e61a, label %dec_label_pc_41e612, !insn.addr !1262

dec_label_pc_41e612:                              ; preds = %dec_label_pc_41e5ea
  %21 = call i32* @_errno(), !insn.addr !1263
  %22 = ptrtoint i32* %21 to i32, !insn.addr !1263
  store i32 %22, i32* %3, align 4, !insn.addr !1264
  store i32 %22, i32* %eax.0.reg2mem, !insn.addr !1264
  br label %dec_label_pc_41e61a, !insn.addr !1264

dec_label_pc_41e61a:                              ; preds = %dec_label_pc_41e612, %dec_label_pc_41e5ea
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %23 = inttoptr i32 %eax.0.reload to i32*, !insn.addr !1265
  %24 = load i32, i32* %23, align 4, !insn.addr !1265
  %25 = icmp eq i32 %24, 34, !insn.addr !1265
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !1266
  br i1 %25, label %dec_label_pc_41e630, label %dec_label_pc_41e61f, !insn.addr !1266

dec_label_pc_41e61f:                              ; preds = %dec_label_pc_41e61a
  %26 = load i8, i8* %stack_var_-8, align 1, !insn.addr !1267
  %27 = sext i8 %26 to i32, !insn.addr !1267
  %28 = load i32, i32* %12, align 4, !insn.addr !1268
  %29 = icmp ugt i32 %28, %27, !insn.addr !1268
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !1269
  br i1 %29, label %dec_label_pc_41e630, label %dec_label_pc_41e627, !insn.addr !1269

dec_label_pc_41e627:                              ; preds = %dec_label_pc_41e61f
  store i32 %27, i32* %12, align 4, !insn.addr !1270
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !1271
  br label %dec_label_pc_41e630, !insn.addr !1271

dec_label_pc_41e630:                              ; preds = %dec_label_pc_41e61a, %dec_label_pc_41e61f, %dec_label_pc_41e627
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %30 = load i32, i32* %9, align 4, !insn.addr !1272
  %31 = icmp eq i32 %30, 0, !insn.addr !1272
  %32 = icmp eq i1 %31, false, !insn.addr !1273
  %33 = icmp eq i32 %10, 0, !insn.addr !1274
  %or.cond = or i1 %33, %32
  br i1 %or.cond, label %dec_label_pc_41e63b, label %dec_label_pc_41e639, !insn.addr !1273

dec_label_pc_41e639:                              ; preds = %dec_label_pc_41e630
  store i32 %10, i32* %9, align 4, !insn.addr !1275
  br label %dec_label_pc_41e63b, !insn.addr !1275

dec_label_pc_41e63b:                              ; preds = %dec_label_pc_41e639, %dec_label_pc_41e630
  %34 = icmp ne i32 %storemerge.reload, 0, !insn.addr !1276
  ret i1 %34, !insn.addr !1276
}

define i32 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::process"(i32* %this) local_unnamed_addr {
dec_label_pc_41ee6d:
  %.pre-phi12.reg2mem = alloca i32*, !insn.addr !1277
  %esp.0.lcssa.reg2mem = alloca i32, !insn.addr !1277
  %eax.0.reg2mem = alloca i32, !insn.addr !1277
  %esp.03.reg2mem = alloca i32, !insn.addr !1277
  %esp.15.reg2mem = alloca i32, !insn.addr !1277
  %storemerge.reg2mem = alloca i32, !insn.addr !1277
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %3 = call i32 @function_402bee(i32 %0, i32 %1), !insn.addr !1278
  %4 = trunc i32 %3 to i8, !insn.addr !1279
  %5 = icmp eq i8 %4, 0, !insn.addr !1279
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !1280
  br i1 %5, label %dec_label_pc_41eea0, label %dec_label_pc_41ee82, !insn.addr !1280

dec_label_pc_41ee82:                              ; preds = %dec_label_pc_41ee6d
  %6 = add i32 %2, 16, !insn.addr !1281
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1281
  %8 = load i32, i32* %7, align 4, !insn.addr !1281
  %9 = icmp eq i32 %8, 0, !insn.addr !1281
  %10 = icmp eq i1 %9, false, !insn.addr !1282
  br i1 %10, label %dec_label_pc_41ef46.preheader, label %dec_label_pc_41ee8d, !insn.addr !1282

dec_label_pc_41ef46.preheader:                    ; preds = %dec_label_pc_41ee82
  %11 = add i32 %2, 1104, !insn.addr !1283
  %12 = inttoptr i32 %11 to i32*, !insn.addr !1283
  %13 = load i32, i32* %12, align 4, !insn.addr !1283
  %14 = add i32 %13, 1, !insn.addr !1283
  store i32 %14, i32* %12, align 4, !insn.addr !1283
  %15 = icmp eq i32 %14, 2, !insn.addr !1284
  %16 = icmp eq i1 %15, false, !insn.addr !1285
  br i1 %16, label %dec_label_pc_41eea3.lr.ph, label %dec_label_pc_41ef46.preheader.dec_label_pc_41ef59_crit_edge, !insn.addr !1285

dec_label_pc_41ef46.preheader.dec_label_pc_41ef59_crit_edge: ; preds = %dec_label_pc_41ef46.preheader
  %.pre = add i32 %2, 24, !insn.addr !1286
  %.pre11 = inttoptr i32 %.pre to i32*, !insn.addr !1286
  store i32* %.pre11, i32** %.pre-phi12.reg2mem
  br label %dec_label_pc_41ef59

dec_label_pc_41eea3.lr.ph:                        ; preds = %dec_label_pc_41ef46.preheader
  %17 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !1287
  %18 = add i32 %2, 56, !insn.addr !1288
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1288
  %20 = add i32 %2, 28, !insn.addr !1289
  %21 = inttoptr i32 %20 to i32*, !insn.addr !1289
  %22 = add i32 %2, 49, !insn.addr !1290
  %23 = inttoptr i32 %22 to i8*, !insn.addr !1290
  %24 = add i32 %2, 24
  %25 = inttoptr i32 %24 to i32*
  %26 = add i32 %2, 40
  %27 = inttoptr i32 %26 to i32*
  %28 = add i32 %2, 36
  %29 = inttoptr i32 %28 to i32*
  %30 = add i32 %2, 48
  %31 = inttoptr i32 %30 to i8*
  %32 = add i32 %2, 32
  %33 = inttoptr i32 %32 to i32*
  %34 = add i32 %2, 44
  %35 = inttoptr i32 %34 to i32*
  %36 = add i32 %2, 60
  %37 = inttoptr i32 %36 to i8*
  store i32 %17, i32* %esp.15.reg2mem
  br label %dec_label_pc_41eea3

dec_label_pc_41ee8d:                              ; preds = %dec_label_pc_41eeba, %dec_label_pc_41ee82
  %38 = call i32* @_errno(), !insn.addr !1291
  store i32 22, i32* %38, align 4, !insn.addr !1292
  call void @_invalid_parameter_noinfo(), !insn.addr !1293
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !1293
  br label %dec_label_pc_41eea0, !insn.addr !1293

dec_label_pc_41eea0:                              ; preds = %dec_label_pc_41eed6, %dec_label_pc_41ef2b, %dec_label_pc_41ee6d, %dec_label_pc_41ee8d, %dec_label_pc_41ef59
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !1294

dec_label_pc_41eea3:                              ; preds = %dec_label_pc_41eea3.lr.ph, %dec_label_pc_41ef46.loopexit
  %esp.15.reload = load i32, i32* %esp.15.reg2mem
  store i32 0, i32* %19, align 4, !insn.addr !1288
  store i32 0, i32* %21, align 4, !insn.addr !1289
  %39 = load i32, i32* %7, align 4, !insn.addr !1295
  %40 = inttoptr i32 %39 to i8*, !insn.addr !1296
  %41 = load i8, i8* %40, align 1, !insn.addr !1296
  store i8 %41, i8* %23, align 1, !insn.addr !1290
  %42 = icmp eq i8 %41, 0, !insn.addr !1297
  %43 = icmp eq i1 %42, false, !insn.addr !1298
  %44 = load i32, i32* %7, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %7, align 4
  store i32 %esp.15.reload, i32* %esp.03.reg2mem, !insn.addr !1298
  store i32 %esp.15.reload, i32* %esp.0.lcssa.reg2mem, !insn.addr !1298
  br i1 %43, label %dec_label_pc_41eeae, label %dec_label_pc_41ef46.loopexit, !insn.addr !1298

dec_label_pc_41eeae:                              ; preds = %dec_label_pc_41eea3, %dec_label_pc_41ef33.backedge
  %esp.03.reload = load i32, i32* %esp.03.reg2mem
  %46 = load i32, i32* %25, align 4, !insn.addr !1299
  %47 = icmp slt i32 %46, 0, !insn.addr !1300
  store i32 %esp.03.reload, i32* %esp.0.lcssa.reg2mem, !insn.addr !1300
  br i1 %47, label %dec_label_pc_41ef46.loopexit, label %dec_label_pc_41eeba, !insn.addr !1300

dec_label_pc_41eeba:                              ; preds = %dec_label_pc_41eeae
  %48 = load i32, i32* %21, align 4, !insn.addr !1301
  %49 = add i32 %esp.03.reload, -4, !insn.addr !1301
  %50 = inttoptr i32 %49 to i32*, !insn.addr !1301
  store i32 %48, i32* %50, align 4, !insn.addr !1301
  %51 = load i8, i8* %23, align 1, !insn.addr !1302
  %52 = zext i8 %51 to i32, !insn.addr !1302
  %53 = add i32 %esp.03.reload, -8, !insn.addr !1303
  %54 = inttoptr i32 %53 to i32*, !insn.addr !1303
  store i32 %52, i32* %54, align 4, !insn.addr !1303
  %55 = call i32 @function_401942(), !insn.addr !1304
  store i32 %55, i32* %21, align 4, !insn.addr !1305
  %56 = icmp eq i32 %55, 8, !insn.addr !1306
  br i1 %56, label %dec_label_pc_41ee8d, label %dec_label_pc_41eed6, !insn.addr !1307

dec_label_pc_41eed6:                              ; preds = %dec_label_pc_41eeba
  store i32 %55, i32* @0, align 4, !insn.addr !1308
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !1308
  switch i32 %55, label %dec_label_pc_41eea0 [
    i32 0, label %dec_label_pc_41eedd
    i32 1, label %dec_label_pc_41eee6
    i32 2, label %dec_label_pc_41eefb
    i32 3, label %dec_label_pc_41ef04
    i32 4, label %dec_label_pc_41ef0d
    i32 5, label %dec_label_pc_41ef12
    i32 6, label %dec_label_pc_41ef1b
    i32 7, label %dec_label_pc_41ef24
  ], !insn.addr !1308

dec_label_pc_41eedd:                              ; preds = %dec_label_pc_41eed6
  %57 = call i32 @function_403bfc(), !insn.addr !1309
  store i32 %57, i32* %eax.0.reg2mem, !insn.addr !1310
  br label %dec_label_pc_41ef2b, !insn.addr !1310

dec_label_pc_41eee6:                              ; preds = %dec_label_pc_41eed6
  store i32 -1, i32* %27, align 4, !insn.addr !1311
  store i32 0, i32* %29, align 4, !insn.addr !1312
  store i8 0, i8* %31, align 1, !insn.addr !1313
  store i32 0, i32* %33, align 4, !insn.addr !1314
  store i32 0, i32* %35, align 4, !insn.addr !1315
  store i8 0, i8* %37, align 1, !insn.addr !1316
  br label %dec_label_pc_41ef33.backedge, !insn.addr !1317

dec_label_pc_41eefb:                              ; preds = %dec_label_pc_41eed6
  %58 = call i32 @function_4039c7(), !insn.addr !1318
  store i32 %58, i32* %eax.0.reg2mem, !insn.addr !1319
  br label %dec_label_pc_41ef2b, !insn.addr !1319

dec_label_pc_41ef04:                              ; preds = %dec_label_pc_41eed6
  %59 = call i32 @function_402130(), !insn.addr !1320
  store i32 %59, i32* %eax.0.reg2mem, !insn.addr !1321
  br label %dec_label_pc_41ef2b, !insn.addr !1321

dec_label_pc_41ef0d:                              ; preds = %dec_label_pc_41eed6
  store i32 0, i32* %27, align 4, !insn.addr !1322
  br label %dec_label_pc_41ef33.backedge, !insn.addr !1323

dec_label_pc_41ef12:                              ; preds = %dec_label_pc_41eed6
  %60 = call i32 @function_40169f(), !insn.addr !1324
  store i32 %60, i32* %eax.0.reg2mem, !insn.addr !1325
  br label %dec_label_pc_41ef2b, !insn.addr !1325

dec_label_pc_41ef1b:                              ; preds = %dec_label_pc_41eed6
  %61 = call i32 @function_402031(), !insn.addr !1326
  store i32 %61, i32* %eax.0.reg2mem, !insn.addr !1327
  br label %dec_label_pc_41ef2b, !insn.addr !1327

dec_label_pc_41ef24:                              ; preds = %dec_label_pc_41eed6
  %62 = call i32 @function_401f64(), !insn.addr !1328
  store i32 %62, i32* %eax.0.reg2mem, !insn.addr !1328
  br label %dec_label_pc_41ef2b, !insn.addr !1328

dec_label_pc_41ef2b:                              ; preds = %dec_label_pc_41ef24, %dec_label_pc_41ef1b, %dec_label_pc_41ef12, %dec_label_pc_41ef04, %dec_label_pc_41eefb, %dec_label_pc_41eedd
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %63 = trunc i32 %eax.0.reload to i8, !insn.addr !1329
  %64 = icmp eq i8 %63, 0, !insn.addr !1329
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !1330
  br i1 %64, label %dec_label_pc_41eea0, label %dec_label_pc_41ef33.backedge, !insn.addr !1330

dec_label_pc_41ef33.backedge:                     ; preds = %dec_label_pc_41ef2b, %dec_label_pc_41eee6, %dec_label_pc_41ef0d
  %65 = load i32, i32* %7, align 4, !insn.addr !1295
  %66 = inttoptr i32 %65 to i8*, !insn.addr !1296
  %67 = load i8, i8* %66, align 1, !insn.addr !1296
  store i8 %67, i8* %23, align 1, !insn.addr !1290
  %68 = icmp eq i8 %67, 0, !insn.addr !1297
  %69 = icmp eq i1 %68, false, !insn.addr !1298
  %70 = load i32, i32* %7, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %7, align 4
  store i32 %53, i32* %esp.03.reg2mem, !insn.addr !1298
  store i32 %53, i32* %esp.0.lcssa.reg2mem, !insn.addr !1298
  br i1 %69, label %dec_label_pc_41eeae, label %dec_label_pc_41ef46.loopexit, !insn.addr !1298

dec_label_pc_41ef46.loopexit:                     ; preds = %dec_label_pc_41ef33.backedge, %dec_label_pc_41eeae, %dec_label_pc_41eea3
  %esp.0.lcssa.reload = load i32, i32* %esp.0.lcssa.reg2mem
  %72 = load i32, i32* %12, align 4, !insn.addr !1283
  %73 = add i32 %72, 1, !insn.addr !1283
  store i32 %73, i32* %12, align 4, !insn.addr !1283
  %74 = icmp eq i32 %73, 2, !insn.addr !1284
  %75 = icmp eq i1 %74, false, !insn.addr !1285
  store i32 %esp.0.lcssa.reload, i32* %esp.15.reg2mem, !insn.addr !1285
  store i32* %25, i32** %.pre-phi12.reg2mem, !insn.addr !1285
  br i1 %75, label %dec_label_pc_41eea3, label %dec_label_pc_41ef59, !insn.addr !1285

dec_label_pc_41ef59:                              ; preds = %dec_label_pc_41ef46.loopexit, %dec_label_pc_41ef46.preheader.dec_label_pc_41ef59_crit_edge
  %.pre-phi12.reload = load i32*, i32** %.pre-phi12.reg2mem
  %76 = load i32, i32* %.pre-phi12.reload, align 4, !insn.addr !1286
  store i32 %76, i32* %storemerge.reg2mem, !insn.addr !1331
  br label %dec_label_pc_41eea0, !insn.addr !1331
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_flag"(i32* %this) local_unnamed_addr {
dec_label_pc_420043:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 49, !insn.addr !1332
  %2 = inttoptr i32 %1 to i8*, !insn.addr !1332
  %3 = load i8, i8* %2, align 1, !insn.addr !1332
  switch i8 %3, label %dec_label_pc_42005c [
    i8 32, label %dec_label_pc_420079
    i8 35, label %dec_label_pc_420073
    i8 43, label %dec_label_pc_42006d
    i8 45, label %dec_label_pc_420067
  ]

dec_label_pc_42005c:                              ; preds = %dec_label_pc_420043
  %4 = icmp eq i8 %3, 48, !insn.addr !1333
  %5 = icmp eq i1 %4, false, !insn.addr !1334
  br i1 %5, label %dec_label_pc_42007d, label %dec_label_pc_420061, !insn.addr !1334

dec_label_pc_420061:                              ; preds = %dec_label_pc_42005c
  %6 = add i32 %0, 32, !insn.addr !1335
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1335
  %8 = load i32, i32* %7, align 4, !insn.addr !1335
  %9 = or i32 %8, 8, !insn.addr !1335
  store i32 %9, i32* %7, align 4, !insn.addr !1335
  br label %dec_label_pc_42007d, !insn.addr !1336

dec_label_pc_420067:                              ; preds = %dec_label_pc_420043
  %10 = add i32 %0, 32, !insn.addr !1337
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1337
  %12 = load i32, i32* %11, align 4, !insn.addr !1337
  %13 = or i32 %12, 4, !insn.addr !1337
  store i32 %13, i32* %11, align 4, !insn.addr !1337
  br label %dec_label_pc_42007d, !insn.addr !1338

dec_label_pc_42006d:                              ; preds = %dec_label_pc_420043
  %14 = add i32 %0, 32, !insn.addr !1339
  %15 = inttoptr i32 %14 to i32*, !insn.addr !1339
  %16 = load i32, i32* %15, align 4, !insn.addr !1339
  %17 = or i32 %16, 1, !insn.addr !1339
  store i32 %17, i32* %15, align 4, !insn.addr !1339
  br label %dec_label_pc_42007d, !insn.addr !1340

dec_label_pc_420073:                              ; preds = %dec_label_pc_420043
  %18 = add i32 %0, 32, !insn.addr !1341
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1341
  %20 = load i32, i32* %19, align 4, !insn.addr !1341
  %21 = or i32 %20, 32, !insn.addr !1341
  store i32 %21, i32* %19, align 4, !insn.addr !1341
  br label %dec_label_pc_42007d, !insn.addr !1342

dec_label_pc_420079:                              ; preds = %dec_label_pc_420043
  %22 = add i32 %0, 32, !insn.addr !1343
  %23 = inttoptr i32 %22 to i32*, !insn.addr !1343
  %24 = load i32, i32* %23, align 4, !insn.addr !1343
  %25 = or i32 %24, 2, !insn.addr !1343
  store i32 %25, i32* %23, align 4, !insn.addr !1343
  br label %dec_label_pc_42007d, !insn.addr !1343

dec_label_pc_42007d:                              ; preds = %dec_label_pc_420079, %dec_label_pc_420073, %dec_label_pc_42006d, %dec_label_pc_420067, %dec_label_pc_420061, %dec_label_pc_42005c
  ret i1 true, !insn.addr !1344
}

declare i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_normal"(i32*) local_unnamed_addr

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_precision"(i32* %this) local_unnamed_addr {
dec_label_pc_420d02:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 49, !insn.addr !1345
  %2 = inttoptr i32 %1 to i8*, !insn.addr !1345
  %3 = load i8, i8* %2, align 1, !insn.addr !1345
  %4 = icmp eq i8 %3, 42, !insn.addr !1345
  %5 = add i32 %0, 40, !insn.addr !1346
  br i1 %4, label %dec_label_pc_420d12, label %dec_label_pc_420d0b, !insn.addr !1347

dec_label_pc_420d0b:                              ; preds = %dec_label_pc_420d02
  %6 = call i32 @function_404250(i32 %5), !insn.addr !1348
  %7 = and i32 %6, 1
  %8 = icmp ne i32 %7, 0, !insn.addr !1349
  ret i1 %8, !insn.addr !1349

dec_label_pc_420d12:                              ; preds = %dec_label_pc_420d02
  %9 = add i32 %0, 20, !insn.addr !1350
  %10 = inttoptr i32 %9 to i32*, !insn.addr !1350
  %11 = load i32, i32* %10, align 4, !insn.addr !1350
  %12 = add i32 %11, 4, !insn.addr !1350
  store i32 %12, i32* %10, align 4, !insn.addr !1350
  %13 = inttoptr i32 %11 to i32*, !insn.addr !1351
  %14 = load i32, i32* %13, align 4, !insn.addr !1351
  %15 = inttoptr i32 %5 to i32*, !insn.addr !1352
  %16 = icmp slt i32 %14, 0, !insn.addr !1353
  %17 = icmp eq i1 %16, false, !insn.addr !1354
  %spec.store.select = select i1 %17, i32 %14, i32 -1
  store i32 %spec.store.select, i32* %15, align 4
  ret i1 true, !insn.addr !1355
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_size"(i32* %this) local_unnamed_addr {
dec_label_pc_42126b:
  %storemerge.reg2mem = alloca i32, !insn.addr !1356
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 49, !insn.addr !1356
  %2 = inttoptr i32 %1 to i8*, !insn.addr !1356
  %3 = load i8, i8* %2, align 1, !insn.addr !1356
  %4 = icmp eq i8 %3, 70, !insn.addr !1357
  %5 = icmp eq i1 %4, false, !insn.addr !1358
  br i1 %5, label %dec_label_pc_42128c, label %dec_label_pc_421272, !insn.addr !1358

dec_label_pc_421272:                              ; preds = %dec_label_pc_42126b
  %6 = and i32 %0, 8, !insn.addr !1359
  %7 = icmp eq i32 %6, 0, !insn.addr !1360
  %8 = icmp eq i1 %7, false, !insn.addr !1361
  br i1 %8, label %dec_label_pc_4213b6, label %dec_label_pc_421280, !insn.addr !1361

dec_label_pc_421280:                              ; preds = %dec_label_pc_421272
  %9 = add i32 %0, 28, !insn.addr !1362
  %10 = inttoptr i32 %9 to i32*, !insn.addr !1362
  store i32 7, i32* %10, align 4, !insn.addr !1362
  %11 = call i32 @function_401f64(), !insn.addr !1363
  %12 = and i32 %11, 1
  %13 = icmp ne i32 %12, 0, !insn.addr !1363
  ret i1 %13, !insn.addr !1363

dec_label_pc_42128c:                              ; preds = %dec_label_pc_42126b
  %14 = icmp eq i8 %3, 78, !insn.addr !1364
  %15 = icmp eq i1 %14, false, !insn.addr !1365
  br i1 %15, label %dec_label_pc_4212b6, label %dec_label_pc_421290, !insn.addr !1365

dec_label_pc_421290:                              ; preds = %dec_label_pc_42128c
  %16 = and i32 %0, 8, !insn.addr !1366
  %17 = icmp eq i32 %16, 0, !insn.addr !1367
  %18 = icmp eq i1 %17, false, !insn.addr !1368
  br i1 %18, label %dec_label_pc_4213b6, label %dec_label_pc_4212a0, !insn.addr !1368

dec_label_pc_4212a0:                              ; preds = %dec_label_pc_421290
  %19 = add i32 %0, 28, !insn.addr !1369
  %20 = inttoptr i32 %19 to i32*, !insn.addr !1369
  store i32 8, i32* %20, align 4, !insn.addr !1369
  br label %dec_label_pc_4212a3, !insn.addr !1369

dec_label_pc_4212a3:                              ; preds = %dec_label_pc_4212b6, %dec_label_pc_4212a0
  %21 = call i32* @_errno(), !insn.addr !1370
  store i32 22, i32* %21, align 4, !insn.addr !1371
  call void @_invalid_parameter_noinfo(), !insn.addr !1372
  ret i1 false, !insn.addr !1373

dec_label_pc_4212b6:                              ; preds = %dec_label_pc_42128c
  %22 = add i32 %0, 44, !insn.addr !1374
  %23 = inttoptr i32 %22 to i32*, !insn.addr !1374
  %24 = load i32, i32* %23, align 4, !insn.addr !1374
  %25 = icmp eq i32 %24, 0, !insn.addr !1374
  %26 = icmp eq i1 %25, false, !insn.addr !1375
  br i1 %26, label %dec_label_pc_4212a3, label %dec_label_pc_4212bc, !insn.addr !1375

dec_label_pc_4212bc:                              ; preds = %dec_label_pc_4212b6
  %27 = icmp sgt i8 %3, 106, !insn.addr !1376
  br i1 %27, label %dec_label_pc_421375, label %dec_label_pc_4212c4, !insn.addr !1376

dec_label_pc_4212c4:                              ; preds = %dec_label_pc_4212bc
  switch i8 %3, label %dec_label_pc_4212d6 [
    i8 106, label %dec_label_pc_42136c
    i8 73, label %dec_label_pc_421311
    i8 76, label %dec_label_pc_421305
    i8 84, label %dec_label_pc_4212f9
  ]

dec_label_pc_4212d6:                              ; preds = %dec_label_pc_4212c4
  %28 = icmp eq i8 %3, 104, !insn.addr !1377
  %29 = icmp eq i1 %28, false, !insn.addr !1378
  br i1 %29, label %dec_label_pc_4213b6, label %dec_label_pc_4212de, !insn.addr !1378

dec_label_pc_4212de:                              ; preds = %dec_label_pc_4212d6
  %30 = add i32 %0, 16, !insn.addr !1379
  %31 = inttoptr i32 %30 to i32*, !insn.addr !1379
  %32 = load i32, i32* %31, align 4, !insn.addr !1379
  %33 = inttoptr i32 %32 to i8*, !insn.addr !1380
  %34 = load i8, i8* %33, align 1, !insn.addr !1380
  %35 = icmp eq i8 %34, 104, !insn.addr !1380
  %36 = icmp eq i1 %35, false, !insn.addr !1381
  store i32 2, i32* %storemerge.reg2mem, !insn.addr !1381
  br i1 %36, label %dec_label_pc_4213b3, label %dec_label_pc_4212e6, !insn.addr !1381

dec_label_pc_4212e6:                              ; preds = %dec_label_pc_4212de
  %37 = add i32 %32, 1, !insn.addr !1382
  store i32 %37, i32* %31, align 4, !insn.addr !1383
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !1384
  br label %dec_label_pc_4213b3, !insn.addr !1384

dec_label_pc_4212f9:                              ; preds = %dec_label_pc_4212c4
  store i32 13, i32* %23, align 4, !insn.addr !1385
  br label %dec_label_pc_4213b6, !insn.addr !1386

dec_label_pc_421305:                              ; preds = %dec_label_pc_4212c4
  store i32 8, i32* %23, align 4, !insn.addr !1387
  br label %dec_label_pc_4213b6, !insn.addr !1388

dec_label_pc_421311:                              ; preds = %dec_label_pc_4212c4
  %38 = add i32 %0, 16, !insn.addr !1389
  %39 = inttoptr i32 %38 to i32*, !insn.addr !1389
  %40 = load i32, i32* %39, align 4, !insn.addr !1389
  %41 = inttoptr i32 %40 to i8*, !insn.addr !1390
  %42 = load i8, i8* %41, align 1, !insn.addr !1390
  %43 = icmp eq i8 %42, 51, !insn.addr !1391
  %44 = icmp eq i1 %43, false, !insn.addr !1392
  br i1 %44, label %dec_label_pc_421332, label %dec_label_pc_42131a, !insn.addr !1392

dec_label_pc_42131a:                              ; preds = %dec_label_pc_421311
  %45 = add i32 %40, 1, !insn.addr !1393
  %46 = inttoptr i32 %45 to i8*, !insn.addr !1393
  %47 = load i8, i8* %46, align 1, !insn.addr !1393
  %48 = icmp eq i8 %47, 50, !insn.addr !1393
  %49 = icmp eq i1 %48, false, !insn.addr !1394
  br i1 %49, label %dec_label_pc_421332, label %dec_label_pc_421320, !insn.addr !1394

dec_label_pc_421320:                              ; preds = %dec_label_pc_42131a
  %50 = add i32 %40, 2, !insn.addr !1395
  store i32 10, i32* %23, align 4, !insn.addr !1396
  store i32 %50, i32* %39, align 4, !insn.addr !1397
  br label %dec_label_pc_4213b6, !insn.addr !1398

dec_label_pc_421332:                              ; preds = %dec_label_pc_42131a, %dec_label_pc_421311
  %51 = icmp eq i8 %42, 54, !insn.addr !1399
  %52 = icmp eq i1 %51, false, !insn.addr !1400
  br i1 %52, label %dec_label_pc_42134b, label %dec_label_pc_421336, !insn.addr !1400

dec_label_pc_421336:                              ; preds = %dec_label_pc_421332
  %53 = add i32 %40, 1, !insn.addr !1401
  %54 = inttoptr i32 %53 to i8*, !insn.addr !1401
  %55 = load i8, i8* %54, align 1, !insn.addr !1401
  %56 = icmp eq i8 %55, 52, !insn.addr !1401
  %57 = icmp eq i1 %56, false, !insn.addr !1402
  br i1 %57, label %dec_label_pc_42134b, label %dec_label_pc_42133c, !insn.addr !1402

dec_label_pc_42133c:                              ; preds = %dec_label_pc_421336
  %58 = add i32 %40, 2, !insn.addr !1403
  store i32 11, i32* %23, align 4, !insn.addr !1404
  store i32 %58, i32* %39, align 4, !insn.addr !1405
  br label %dec_label_pc_4213b6, !insn.addr !1406

dec_label_pc_42134b:                              ; preds = %dec_label_pc_421336, %dec_label_pc_421332
  switch i8 %42, label %dec_label_pc_42135f [
    i8 100, label %dec_label_pc_421363
    i8 105, label %dec_label_pc_421363
    i8 111, label %dec_label_pc_421363
    i8 117, label %dec_label_pc_421363
    i8 120, label %dec_label_pc_421363
  ]

dec_label_pc_42135f:                              ; preds = %dec_label_pc_42134b
  %59 = icmp eq i8 %42, 88, !insn.addr !1407
  %60 = icmp eq i1 %59, false, !insn.addr !1408
  br i1 %60, label %dec_label_pc_4213b6, label %dec_label_pc_421363, !insn.addr !1408

dec_label_pc_421363:                              ; preds = %dec_label_pc_42134b, %dec_label_pc_42134b, %dec_label_pc_42134b, %dec_label_pc_42134b, %dec_label_pc_42134b, %dec_label_pc_42135f
  store i32 9, i32* %23, align 4, !insn.addr !1409
  br label %dec_label_pc_4213b6, !insn.addr !1410

dec_label_pc_42136c:                              ; preds = %dec_label_pc_4212c4
  store i32 5, i32* %23, align 4, !insn.addr !1411
  br label %dec_label_pc_4213b6, !insn.addr !1412

dec_label_pc_421375:                              ; preds = %dec_label_pc_4212bc
  switch i8 %3, label %dec_label_pc_421381 [
    i8 108, label %dec_label_pc_4213a0
    i8 116, label %dec_label_pc_421397
    i8 119, label %dec_label_pc_42138e
  ]

dec_label_pc_421381:                              ; preds = %dec_label_pc_421375
  %61 = icmp eq i8 %3, 122, !insn.addr !1413
  %62 = icmp eq i1 %61, false, !insn.addr !1414
  br i1 %62, label %dec_label_pc_4213b6, label %dec_label_pc_421385, !insn.addr !1414

dec_label_pc_421385:                              ; preds = %dec_label_pc_421381
  store i32 6, i32* %23, align 4, !insn.addr !1415
  br label %dec_label_pc_4213b6, !insn.addr !1416

dec_label_pc_42138e:                              ; preds = %dec_label_pc_421375
  store i32 12, i32* %23, align 4, !insn.addr !1417
  br label %dec_label_pc_4213b6, !insn.addr !1418

dec_label_pc_421397:                              ; preds = %dec_label_pc_421375
  store i32 7, i32* %23, align 4, !insn.addr !1419
  br label %dec_label_pc_4213b6, !insn.addr !1420

dec_label_pc_4213a0:                              ; preds = %dec_label_pc_421375
  %63 = add i32 %0, 16, !insn.addr !1421
  %64 = inttoptr i32 %63 to i32*, !insn.addr !1421
  %65 = load i32, i32* %64, align 4, !insn.addr !1421
  %66 = inttoptr i32 %65 to i8*, !insn.addr !1422
  %67 = load i8, i8* %66, align 1, !insn.addr !1422
  %68 = icmp eq i8 %67, 108, !insn.addr !1422
  %69 = icmp eq i1 %68, false, !insn.addr !1423
  store i32 3, i32* %storemerge.reg2mem, !insn.addr !1423
  br i1 %69, label %dec_label_pc_4213b3, label %dec_label_pc_4213a8, !insn.addr !1423

dec_label_pc_4213a8:                              ; preds = %dec_label_pc_4213a0
  %70 = add i32 %65, 1, !insn.addr !1424
  store i32 %70, i32* %64, align 4, !insn.addr !1425
  store i32 4, i32* %storemerge.reg2mem, !insn.addr !1426
  br label %dec_label_pc_4213b3, !insn.addr !1426

dec_label_pc_4213b3:                              ; preds = %dec_label_pc_4213a8, %dec_label_pc_4212de, %dec_label_pc_4213a0, %dec_label_pc_4212e6
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  store i32 %storemerge.reload, i32* %23, align 4, !insn.addr !1427
  br label %dec_label_pc_4213b6, !insn.addr !1427

dec_label_pc_4213b6:                              ; preds = %dec_label_pc_4213b3, %dec_label_pc_421397, %dec_label_pc_42138e, %dec_label_pc_421385, %dec_label_pc_421381, %dec_label_pc_42136c, %dec_label_pc_421363, %dec_label_pc_42135f, %dec_label_pc_42133c, %dec_label_pc_421320, %dec_label_pc_421305, %dec_label_pc_4212f9, %dec_label_pc_4212d6, %dec_label_pc_421290, %dec_label_pc_421272
  ret i1 true, !insn.addr !1428
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_type"(i32* %this) local_unnamed_addr {
dec_label_pc_422982:
  %storemerge.reg2mem = alloca i1, !insn.addr !1429
  %.pre-phi12.reg2mem = alloca i32*, !insn.addr !1429
  %.pre-phi16.reg2mem = alloca i32*, !insn.addr !1429
  %.pre-phi20.reg2mem = alloca i32*, !insn.addr !1429
  %.pre-phi24.reg2mem = alloca i32*, !insn.addr !1429
  %stack_var_-12.1.reg2mem = alloca i32, !insn.addr !1429
  %eax.5.reg2mem = alloca i8, !insn.addr !1429
  %storemerge1.reg2mem = alloca i8, !insn.addr !1429
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !1429
  %storemerge3.reg2mem = alloca i32, !insn.addr !1429
  %storemerge6.reg2mem = alloca i32, !insn.addr !1429
  %storemerge7.reg2mem = alloca i32, !insn.addr !1429
  %esp.0.reg2mem = alloca i32, !insn.addr !1429
  %eax.0.reg2mem = alloca i32, !insn.addr !1429
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %prefix_-4 = alloca [3 x i8], align 1
  %4 = trunc i32 %1 to i8, !insn.addr !1430
  %5 = insertvalue [3 x i8] undef, i8 %4, 0, !insn.addr !1430
  store [3 x i8] %5, [3 x i8]* %prefix_-4, align 1, !insn.addr !1430
  store i32 88, i32* %stack_var_-24, align 4, !insn.addr !1431
  %6 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !1432
  %7 = add i32 %3, 49, !insn.addr !1433
  %8 = inttoptr i32 %7 to i8*, !insn.addr !1433
  %9 = load i8, i8* %8, align 1, !insn.addr !1433
  %10 = icmp sgt i8 %9, 100, !insn.addr !1434
  br i1 %10, label %dec_label_pc_422a07, label %dec_label_pc_42299b, !insn.addr !1434

dec_label_pc_42299b:                              ; preds = %dec_label_pc_422982
  %11 = icmp eq i8 %9, 100, !insn.addr !1435
  br i1 %11, label %dec_label_pc_422a34, label %dec_label_pc_4229a1, !insn.addr !1436

dec_label_pc_4229a1:                              ; preds = %dec_label_pc_42299b
  %12 = icmp sgt i8 %9, 88, !insn.addr !1437
  br i1 %12, label %dec_label_pc_4229e4, label %dec_label_pc_4229a5, !insn.addr !1437

dec_label_pc_4229a5:                              ; preds = %dec_label_pc_4229a1
  store i32 1, i32* %storemerge7.reg2mem
  store i32 16, i32* %storemerge6.reg2mem
  switch i8 %9, label %dec_label_pc_4229b5 [
    i8 88, label %dec_label_pc_422a3b
    i8 65, label %dec_label_pc_422a44
    i8 67, label %dec_label_pc_4229f4
  ]

dec_label_pc_4229b5:                              ; preds = %dec_label_pc_4229a5
  %13 = icmp slt i8 %9, 69, !insn.addr !1438
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1438
  br i1 %13, label %dec_label_pc_422bb0, label %dec_label_pc_4229ba, !insn.addr !1438

dec_label_pc_4229ba:                              ; preds = %dec_label_pc_4229b5
  %14 = icmp slt i8 %9, 72, !insn.addr !1439
  br i1 %14, label %dec_label_pc_422a44, label %dec_label_pc_4229c3, !insn.addr !1439

dec_label_pc_4229c3:                              ; preds = %dec_label_pc_4229ba
  %15 = icmp eq i8 %9, 83, !insn.addr !1440
  %16 = icmp eq i1 %15, false, !insn.addr !1441
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1441
  br i1 %16, label %dec_label_pc_422bb0, label %dec_label_pc_4229c8, !insn.addr !1441

dec_label_pc_4229c8:                              ; preds = %dec_label_pc_422a59, %dec_label_pc_4229c3
  %17 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix_-4, i32 0, i32 0, !insn.addr !1442
  %18 = load i8, i8* %17, align 1, !insn.addr !1442
  %19 = call i32 @function_401a64(i32 %0, i32 %2, i32 %3, i32 %3, i8 %18), !insn.addr !1442
  store i32 %19, i32* %eax.0.reg2mem, !insn.addr !1442
  store i32 %6, i32* %esp.0.reg2mem, !insn.addr !1442
  br label %dec_label_pc_4229cf, !insn.addr !1442

dec_label_pc_4229cf:                              ; preds = %dec_label_pc_422a4d, %dec_label_pc_422a44, %dec_label_pc_422a3b, %dec_label_pc_422a2b, %dec_label_pc_422a22, %dec_label_pc_4229fe, %dec_label_pc_4229f4, %dec_label_pc_4229c8
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %20 = trunc i32 %eax.0.reload to i8, !insn.addr !1443
  %21 = icmp eq i8 %20, 0, !insn.addr !1443
  %22 = icmp eq i1 %21, false, !insn.addr !1444
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1444
  br i1 %22, label %dec_label_pc_422a77, label %dec_label_pc_422bb0, !insn.addr !1444

dec_label_pc_4229e4:                              ; preds = %dec_label_pc_4229a1
  switch i8 %9, label %dec_label_pc_4229ee [
    i8 90, label %dec_label_pc_4229fe
    i8 97, label %dec_label_pc_422a44
  ]

dec_label_pc_4229ee:                              ; preds = %dec_label_pc_4229e4
  %23 = icmp eq i8 %9, 99, !insn.addr !1445
  %24 = icmp eq i1 %23, false, !insn.addr !1446
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1446
  br i1 %24, label %dec_label_pc_422bb0, label %dec_label_pc_4229f4, !insn.addr !1446

dec_label_pc_4229f4:                              ; preds = %dec_label_pc_4229a5, %dec_label_pc_4229ee
  store i32 0, i32* %stack_var_-24, align 4, !insn.addr !1447
  %25 = ptrtoint i32* %stack_var_-24 to i32, !insn.addr !1447
  %26 = call i32 @function_401974(i32 0), !insn.addr !1448
  store i32 %26, i32* %eax.0.reg2mem, !insn.addr !1449
  store i32 %25, i32* %esp.0.reg2mem, !insn.addr !1449
  br label %dec_label_pc_4229cf, !insn.addr !1449

dec_label_pc_4229fe:                              ; preds = %dec_label_pc_4229e4
  %27 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix_-4, i32 0, i32 0, !insn.addr !1450
  %28 = load i8, i8* %27, align 1, !insn.addr !1450
  %29 = call i32 @function_40180c(i32 %0, i32 %2, i32 %3, i32 %3, i8 %28), !insn.addr !1450
  store i32 %29, i32* %eax.0.reg2mem, !insn.addr !1451
  store i32 %6, i32* %esp.0.reg2mem, !insn.addr !1451
  br label %dec_label_pc_4229cf, !insn.addr !1451

dec_label_pc_422a07:                              ; preds = %dec_label_pc_422982
  %30 = icmp sgt i8 %9, 112, !insn.addr !1452
  br i1 %30, label %dec_label_pc_422a59, label %dec_label_pc_422a0c, !insn.addr !1452

dec_label_pc_422a0c:                              ; preds = %dec_label_pc_422a07
  %31 = icmp eq i8 %9, 112, !insn.addr !1453
  br i1 %31, label %dec_label_pc_422a4d, label %dec_label_pc_422a0e, !insn.addr !1454

dec_label_pc_422a0e:                              ; preds = %dec_label_pc_422a0c
  %32 = icmp slt i8 %9, 104, !insn.addr !1455
  br i1 %32, label %dec_label_pc_422a44, label %dec_label_pc_422a13, !insn.addr !1455

dec_label_pc_422a13:                              ; preds = %dec_label_pc_422a0e
  switch i8 %9, label %dec_label_pc_422a1d [
    i8 105, label %dec_label_pc_422a34
    i8 110, label %dec_label_pc_422a2b
  ]

dec_label_pc_422a1d:                              ; preds = %dec_label_pc_422a13
  %33 = icmp eq i8 %9, 111, !insn.addr !1456
  %34 = icmp eq i1 %33, false, !insn.addr !1457
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1457
  br i1 %34, label %dec_label_pc_422bb0, label %dec_label_pc_422a22, !insn.addr !1457

dec_label_pc_422a22:                              ; preds = %dec_label_pc_422a1d
  %35 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix_-4, i32 0, i32 0, !insn.addr !1458
  %36 = load i8, i8* %35, align 1, !insn.addr !1458
  %37 = call i32 @function_401d7a(i32 %0, i32 %2, i32 %3, i32 %3, i8 %36), !insn.addr !1458
  store i32 %37, i32* %eax.0.reg2mem, !insn.addr !1459
  store i32 %6, i32* %esp.0.reg2mem, !insn.addr !1459
  br label %dec_label_pc_4229cf, !insn.addr !1459

dec_label_pc_422a2b:                              ; preds = %dec_label_pc_422a13
  %38 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix_-4, i32 0, i32 0, !insn.addr !1460
  %39 = load i8, i8* %38, align 1, !insn.addr !1460
  %40 = call i32 @function_4030df(i32 %0, i32 %2, i32 %3, i32 %3, i8 %39), !insn.addr !1460
  store i32 %40, i32* %eax.0.reg2mem, !insn.addr !1461
  store i32 %6, i32* %esp.0.reg2mem, !insn.addr !1461
  br label %dec_label_pc_4229cf, !insn.addr !1461

dec_label_pc_422a34:                              ; preds = %dec_label_pc_422a13, %dec_label_pc_42299b
  %41 = add i32 %3, 32, !insn.addr !1462
  %42 = inttoptr i32 %41 to i32*, !insn.addr !1462
  %43 = load i32, i32* %42, align 4, !insn.addr !1462
  %44 = or i32 %43, 16, !insn.addr !1462
  store i32 %44, i32* %42, align 4, !insn.addr !1462
  store i32 0, i32* %storemerge7.reg2mem, !insn.addr !1462
  store i32 10, i32* %storemerge6.reg2mem, !insn.addr !1462
  br label %dec_label_pc_422a3b, !insn.addr !1462

dec_label_pc_422a3b:                              ; preds = %dec_label_pc_422a68, %dec_label_pc_422a59, %dec_label_pc_422a34, %dec_label_pc_4229a5
  %storemerge6.reload = load i32, i32* %storemerge6.reg2mem
  %storemerge7.reload = load i32, i32* %storemerge7.reg2mem
  store i32 %storemerge7.reload, i32* %stack_var_-24, align 4
  store i32 %storemerge6.reload, i32* %stack_var_-28, align 4
  %storemerge4 = ptrtoint i32* %stack_var_-28 to i32
  %45 = call i32 @function_40350d(i32 %storemerge6.reload, i32 %storemerge7.reload), !insn.addr !1463
  store i32 %45, i32* %eax.0.reg2mem, !insn.addr !1464
  store i32 %storemerge4, i32* %esp.0.reg2mem, !insn.addr !1464
  br label %dec_label_pc_4229cf, !insn.addr !1464

dec_label_pc_422a44:                              ; preds = %dec_label_pc_4229e4, %dec_label_pc_4229a5, %dec_label_pc_422a0e, %dec_label_pc_4229ba
  %46 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix_-4, i32 0, i32 0, !insn.addr !1465
  %47 = load i8, i8* %46, align 1, !insn.addr !1465
  %48 = call i32 @function_402991(i32 %0, i32 %2, i32 %3, i32 %3, i8 %47), !insn.addr !1465
  store i32 %48, i32* %eax.0.reg2mem, !insn.addr !1466
  store i32 %6, i32* %esp.0.reg2mem, !insn.addr !1466
  br label %dec_label_pc_4229cf, !insn.addr !1466

dec_label_pc_422a4d:                              ; preds = %dec_label_pc_422a0c
  %49 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix_-4, i32 0, i32 0, !insn.addr !1467
  %50 = load i8, i8* %49, align 1, !insn.addr !1467
  %51 = call i32 @function_4010c3(i32 %0, i32 %2, i32 %3, i32 %3, i8 %50), !insn.addr !1467
  store i32 %51, i32* %eax.0.reg2mem, !insn.addr !1468
  store i32 %6, i32* %esp.0.reg2mem, !insn.addr !1468
  br label %dec_label_pc_4229cf, !insn.addr !1468

dec_label_pc_422a59:                              ; preds = %dec_label_pc_422a07
  store i32 0, i32* %storemerge7.reg2mem
  store i32 10, i32* %storemerge6.reg2mem
  switch i8 %9, label %dec_label_pc_422a68 [
    i8 115, label %dec_label_pc_4229c8
    i8 117, label %dec_label_pc_422a3b
  ]

dec_label_pc_422a68:                              ; preds = %dec_label_pc_422a59
  %52 = icmp eq i8 %9, 120, !insn.addr !1469
  %53 = icmp eq i1 %52, false, !insn.addr !1470
  store i32 0, i32* %storemerge7.reg2mem, !insn.addr !1470
  store i32 16, i32* %storemerge6.reg2mem, !insn.addr !1470
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1470
  br i1 %53, label %dec_label_pc_422bb0, label %dec_label_pc_422a3b, !insn.addr !1470

dec_label_pc_422a77:                              ; preds = %dec_label_pc_4229cf
  %54 = add i32 %3, 48, !insn.addr !1471
  %55 = inttoptr i32 %54 to i8*, !insn.addr !1471
  %56 = load i8, i8* %55, align 1, !insn.addr !1471
  %57 = icmp eq i8 %56, 0, !insn.addr !1471
  %58 = icmp eq i1 %57, false, !insn.addr !1472
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1472
  br i1 %58, label %dec_label_pc_422bb0, label %dec_label_pc_422a80, !insn.addr !1472

dec_label_pc_422a80:                              ; preds = %dec_label_pc_422a77
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  store i32 0, i32* %stack_var_-8, align 4, !insn.addr !1473
  %59 = add i32 %3, 32, !insn.addr !1474
  %60 = inttoptr i32 %59 to i32*, !insn.addr !1474
  %61 = load i32, i32* %60, align 4, !insn.addr !1474
  %62 = and i32 %61, 16
  %63 = icmp eq i32 %62, 0, !insn.addr !1475
  store i32 0, i32* %stack_var_-12.0.reg2mem, !insn.addr !1476
  br i1 %63, label %dec_label_pc_422aca, label %dec_label_pc_422a9b, !insn.addr !1476

dec_label_pc_422a9b:                              ; preds = %dec_label_pc_422a80
  %64 = and i32 %61, 64
  %65 = icmp eq i32 %64, 0, !insn.addr !1477
  store i32 45, i32* %storemerge3.reg2mem, !insn.addr !1478
  br i1 %65, label %dec_label_pc_422aaa, label %dec_label_pc_422ab2, !insn.addr !1478

dec_label_pc_422aaa:                              ; preds = %dec_label_pc_422a9b
  %66 = and i32 %61, 1
  %67 = icmp eq i32 %66, 0, !insn.addr !1479
  store i32 43, i32* %storemerge3.reg2mem, !insn.addr !1480
  br i1 %67, label %dec_label_pc_422ab9, label %dec_label_pc_422ab2, !insn.addr !1480

dec_label_pc_422ab2:                              ; preds = %dec_label_pc_422aaa, %dec_label_pc_422a9b
  %storemerge3.reload = load i32, i32* %storemerge3.reg2mem
  store i32 %storemerge3.reload, i32* %stack_var_-8, align 4
  store i32 1, i32* %stack_var_-12.0.reg2mem, !insn.addr !1481
  br label %dec_label_pc_422aca, !insn.addr !1481

dec_label_pc_422ab9:                              ; preds = %dec_label_pc_422aaa
  %68 = and i32 %61, 2
  %69 = icmp eq i32 %68, 0, !insn.addr !1482
  store i32 0, i32* %stack_var_-12.0.reg2mem, !insn.addr !1483
  br i1 %69, label %dec_label_pc_422aca, label %dec_label_pc_422ac1, !insn.addr !1483

dec_label_pc_422ac1:                              ; preds = %dec_label_pc_422ab9
  store i32 32, i32* %stack_var_-8, align 4, !insn.addr !1484
  store i32 1, i32* %stack_var_-12.0.reg2mem, !insn.addr !1485
  br label %dec_label_pc_422aca, !insn.addr !1485

dec_label_pc_422aca:                              ; preds = %dec_label_pc_422ac1, %dec_label_pc_422ab9, %dec_label_pc_422ab2, %dec_label_pc_422a80
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  %70 = load i8, i8* %8, align 1, !insn.addr !1486
  store i8 0, i8* %storemerge1.reg2mem
  switch i8 %70, label %dec_label_pc_422af6 [
    i8 97, label %dec_label_pc_422af4
    i8 65, label %dec_label_pc_422af4
  ]

dec_label_pc_422af4:                              ; preds = %dec_label_pc_422aca, %dec_label_pc_422aca
  store i8 1, i8* %storemerge1.reg2mem, !insn.addr !1487
  br label %dec_label_pc_422af6, !insn.addr !1487

dec_label_pc_422af6:                              ; preds = %dec_label_pc_422aca, %dec_label_pc_422af4
  %71 = icmp ne i8 %70, 120, !insn.addr !1488
  %72 = icmp eq i8 %70, 88, !insn.addr !1489
  %73 = icmp eq i1 %72, false, !insn.addr !1490
  %or.cond = icmp eq i1 %71, %73
  %74 = and i32 %61, 32
  %75 = icmp eq i32 %74, 0, !insn.addr !1491
  %or.cond26 = or i1 %75, %or.cond
  %not.or.cond26 = icmp ne i1 %or.cond26, true
  %storemerge2 = zext i1 %not.or.cond26 to i8
  %storemerge1.reload = load i8, i8* %storemerge1.reg2mem
  %76 = or i8 %storemerge1.reload, %storemerge2
  %77 = icmp eq i8 %76, 0
  store i32 %stack_var_-12.0.reload, i32* %stack_var_-12.1.reg2mem, !insn.addr !1492
  br i1 %77, label %dec_label_pc_422b1e, label %dec_label_pc_422afe, !insn.addr !1492

dec_label_pc_422afe:                              ; preds = %dec_label_pc_422af6
  %78 = ptrtoint [3 x i8]* %prefix_-4 to i32, !insn.addr !1493
  %79 = add i32 %stack_var_-12.0.reload, %78
  %80 = add i32 %79, -4, !insn.addr !1494
  %81 = inttoptr i32 %80 to i8*, !insn.addr !1494
  store i8 48, i8* %81, align 1, !insn.addr !1494
  store i8 120, i8* %eax.5.reg2mem
  switch i8 %70, label %dec_label_pc_422b14 [
    i8 88, label %dec_label_pc_422b11
    i8 65, label %dec_label_pc_422b11
  ]

dec_label_pc_422b11:                              ; preds = %dec_label_pc_422afe, %dec_label_pc_422afe
  %82 = add i32 %esp.0.reload, -4, !insn.addr !1495
  %83 = inttoptr i32 %82 to i32*, !insn.addr !1495
  store i32 88, i32* %83, align 4, !insn.addr !1495
  store i8 88, i8* %eax.5.reg2mem, !insn.addr !1496
  br label %dec_label_pc_422b14, !insn.addr !1496

dec_label_pc_422b14:                              ; preds = %dec_label_pc_422afe, %dec_label_pc_422b11
  %eax.5.reload = load i8, i8* %eax.5.reg2mem
  %84 = add i32 %79, -3, !insn.addr !1497
  %85 = inttoptr i32 %84 to i8*, !insn.addr !1497
  store i8 %eax.5.reload, i8* %85, align 1, !insn.addr !1497
  %86 = or i32 %stack_var_-12.0.reload, 2, !insn.addr !1498
  store i32 %86, i32* %stack_var_-12.1.reg2mem, !insn.addr !1499
  br label %dec_label_pc_422b1e, !insn.addr !1499

dec_label_pc_422b1e:                              ; preds = %dec_label_pc_422af6, %dec_label_pc_422b14
  %stack_var_-12.1.reload = load i32, i32* %stack_var_-12.1.reg2mem
  %87 = add i32 %3, 36, !insn.addr !1500
  %88 = inttoptr i32 %87 to i32*, !insn.addr !1500
  %89 = load i32, i32* %88, align 4, !insn.addr !1500
  %90 = add i32 %3, 24, !insn.addr !1501
  %91 = add i32 %3, 56, !insn.addr !1502
  %92 = inttoptr i32 %91 to i32*, !insn.addr !1502
  %93 = load i32, i32* %92, align 4, !insn.addr !1502
  %94 = sub i32 %89, %93, !insn.addr !1502
  %95 = sub i32 %94, %stack_var_-12.1.reload, !insn.addr !1503
  %96 = inttoptr i32 %59 to i8*, !insn.addr !1504
  %97 = load i8, i8* %96, align 1, !insn.addr !1504
  %98 = and i8 %97, 12, !insn.addr !1504
  %99 = icmp eq i8 %98, 0, !insn.addr !1504
  %100 = icmp eq i1 %99, false, !insn.addr !1505
  br i1 %100, label %dec_label_pc_422b1e.dec_label_pc_422b46_crit_edge, label %dec_label_pc_422b36, !insn.addr !1505

dec_label_pc_422b1e.dec_label_pc_422b46_crit_edge: ; preds = %dec_label_pc_422b1e
  %101 = add i32 %esp.0.reload, -4, !insn.addr !1506
  %102 = inttoptr i32 %101 to i32*, !insn.addr !1506
  %.pre = add i32 %esp.0.reload, -8, !insn.addr !1507
  %.pre11 = inttoptr i32 %.pre to i32*, !insn.addr !1507
  %.pre13 = add i32 %esp.0.reload, -12, !insn.addr !1508
  %.pre15 = inttoptr i32 %.pre13 to i32*, !insn.addr !1508
  %.pre17 = add i32 %esp.0.reload, -16, !insn.addr !1509
  %.pre19 = inttoptr i32 %.pre17 to i32*, !insn.addr !1509
  %.pre21 = add i32 %esp.0.reload, -20, !insn.addr !1510
  %.pre23 = inttoptr i32 %.pre21 to i32*, !insn.addr !1510
  store i32* %.pre23, i32** %.pre-phi24.reg2mem
  store i32* %.pre19, i32** %.pre-phi20.reg2mem
  store i32* %.pre15, i32** %.pre-phi16.reg2mem
  store i32* %.pre11, i32** %.pre-phi12.reg2mem
  br label %dec_label_pc_422b46

dec_label_pc_422b36:                              ; preds = %dec_label_pc_422b1e
  %103 = add i32 %3, 1096, !insn.addr !1511
  %104 = add i32 %esp.0.reload, -8
  %105 = inttoptr i32 %104 to i32*
  store i32 %90, i32* %105, align 4, !insn.addr !1512
  %106 = add i32 %esp.0.reload, -12
  %107 = inttoptr i32 %106 to i32*
  store i32 %95, i32* %107, align 4, !insn.addr !1513
  %108 = add i32 %esp.0.reload, -16
  %109 = inttoptr i32 %108 to i32*
  store i32 32, i32* %109, align 4, !insn.addr !1514
  %110 = add i32 %esp.0.reload, -20
  %111 = inttoptr i32 %110 to i32*
  store i32 %103, i32* %111, align 4, !insn.addr !1515
  %112 = call i32 @function_402c20(), !insn.addr !1516
  store i32* %111, i32** %.pre-phi24.reg2mem, !insn.addr !1517
  store i32* %109, i32** %.pre-phi20.reg2mem, !insn.addr !1517
  store i32* %107, i32** %.pre-phi16.reg2mem, !insn.addr !1517
  store i32* %105, i32** %.pre-phi12.reg2mem, !insn.addr !1517
  br label %dec_label_pc_422b46, !insn.addr !1517

dec_label_pc_422b46:                              ; preds = %dec_label_pc_422b1e.dec_label_pc_422b46_crit_edge, %dec_label_pc_422b36
  %.pre-phi12.reload = load i32*, i32** %.pre-phi12.reg2mem
  %.pre-phi16.reload = load i32*, i32** %.pre-phi16.reg2mem
  %.pre-phi20.reload = load i32*, i32** %.pre-phi20.reg2mem
  %.pre-phi24.reload = load i32*, i32** %.pre-phi24.reg2mem
  %113 = add i32 %3, 12, !insn.addr !1518
  store i32 %113, i32* %.pre-phi12.reload, align 4, !insn.addr !1507
  store i32 %90, i32* %.pre-phi16.reload, align 4, !insn.addr !1508
  store i32 %stack_var_-12.1.reload, i32* %.pre-phi20.reload, align 4, !insn.addr !1509
  %114 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !1510
  store i32 %114, i32* %.pre-phi24.reload, align 4, !insn.addr !1510
  %115 = call i32 @function_404160(), !insn.addr !1519
  %116 = load i32, i32* %60, align 4, !insn.addr !1520
  %117 = and i32 %116, 8
  %118 = icmp eq i32 %117, 0, !insn.addr !1521
  br i1 %118, label %dec_label_pc_422b82, label %dec_label_pc_422b67, !insn.addr !1522

dec_label_pc_422b67:                              ; preds = %dec_label_pc_422b46
  %119 = and i32 %116, 4
  %120 = icmp eq i32 %119, 0, !insn.addr !1523
  %121 = icmp eq i1 %120, false, !insn.addr !1524
  br i1 %121, label %dec_label_pc_422b82, label %dec_label_pc_422b6f, !insn.addr !1524

dec_label_pc_422b6f:                              ; preds = %dec_label_pc_422b67
  %122 = add i32 %esp.0.reload, -24, !insn.addr !1525
  %123 = inttoptr i32 %122 to i32*, !insn.addr !1525
  store i32 %90, i32* %123, align 4, !insn.addr !1525
  %124 = add i32 %esp.0.reload, -28, !insn.addr !1526
  %125 = inttoptr i32 %124 to i32*, !insn.addr !1526
  store i32 %95, i32* %125, align 4, !insn.addr !1526
  %126 = add i32 %3, 1096, !insn.addr !1527
  %127 = add i32 %esp.0.reload, -32, !insn.addr !1528
  %128 = inttoptr i32 %127 to i32*, !insn.addr !1528
  store i32 48, i32* %128, align 4, !insn.addr !1528
  %129 = add i32 %esp.0.reload, -36, !insn.addr !1529
  %130 = inttoptr i32 %129 to i32*, !insn.addr !1529
  store i32 %126, i32* %130, align 4, !insn.addr !1529
  %131 = call i32 @function_402c20(), !insn.addr !1530
  br label %dec_label_pc_422b82, !insn.addr !1531

dec_label_pc_422b82:                              ; preds = %dec_label_pc_422b6f, %dec_label_pc_422b67, %dec_label_pc_422b46
  %132 = add i32 %esp.0.reload, -24, !insn.addr !1532
  %133 = inttoptr i32 %132 to i32*, !insn.addr !1532
  store i32 0, i32* %133, align 4, !insn.addr !1532
  %134 = call i32 @function_4034d6(), !insn.addr !1533
  %135 = inttoptr i32 %90 to i32*, !insn.addr !1534
  %136 = load i32, i32* %135, align 4, !insn.addr !1534
  %137 = icmp slt i32 %136, 0, !insn.addr !1534
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1535
  br i1 %137, label %dec_label_pc_422bb0, label %dec_label_pc_422b90, !insn.addr !1535

dec_label_pc_422b90:                              ; preds = %dec_label_pc_422b82
  %138 = load i32, i32* %60, align 4, !insn.addr !1536
  %139 = and i32 %138, 4
  %140 = icmp eq i32 %139, 0, !insn.addr !1537
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1538
  br i1 %140, label %dec_label_pc_422bb0, label %dec_label_pc_422b9a, !insn.addr !1538

dec_label_pc_422b9a:                              ; preds = %dec_label_pc_422b90
  %141 = add i32 %esp.0.reload, -28, !insn.addr !1539
  %142 = inttoptr i32 %141 to i32*, !insn.addr !1539
  store i32 %90, i32* %142, align 4, !insn.addr !1539
  %143 = add i32 %esp.0.reload, -32, !insn.addr !1540
  %144 = inttoptr i32 %143 to i32*, !insn.addr !1540
  store i32 %95, i32* %144, align 4, !insn.addr !1540
  %145 = add i32 %3, 1096, !insn.addr !1541
  %146 = add i32 %esp.0.reload, -36, !insn.addr !1542
  %147 = inttoptr i32 %146 to i32*, !insn.addr !1542
  store i32 32, i32* %147, align 4, !insn.addr !1542
  %148 = add i32 %esp.0.reload, -40, !insn.addr !1543
  %149 = inttoptr i32 %148 to i32*, !insn.addr !1543
  store i32 %145, i32* %149, align 4, !insn.addr !1543
  %150 = call i32 @function_402c20(), !insn.addr !1544
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1545
  br label %dec_label_pc_422bb0, !insn.addr !1545

dec_label_pc_422bb0:                              ; preds = %dec_label_pc_422a77, %dec_label_pc_422b9a, %dec_label_pc_422b90, %dec_label_pc_422b82, %dec_label_pc_4229b5, %dec_label_pc_4229c3, %dec_label_pc_4229cf, %dec_label_pc_4229ee, %dec_label_pc_422a1d, %dec_label_pc_422a68
  %storemerge.reload = load i1, i1* %storemerge.reg2mem
  ret i1 %storemerge.reload, !insn.addr !1546
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_width"(i32* %this) local_unnamed_addr {
dec_label_pc_42472c:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 49, !insn.addr !1547
  %2 = inttoptr i32 %1 to i8*, !insn.addr !1547
  %3 = load i8, i8* %2, align 1, !insn.addr !1547
  %4 = icmp eq i8 %3, 42, !insn.addr !1547
  %5 = add i32 %0, 36, !insn.addr !1548
  br i1 %4, label %dec_label_pc_42473c, label %dec_label_pc_424735, !insn.addr !1549

dec_label_pc_424735:                              ; preds = %dec_label_pc_42472c
  %6 = call i32 @function_404250(i32 %5), !insn.addr !1550
  %7 = and i32 %6, 1
  %8 = icmp ne i32 %7, 0, !insn.addr !1551
  ret i1 %8, !insn.addr !1551

dec_label_pc_42473c:                              ; preds = %dec_label_pc_42472c
  %9 = add i32 %0, 20, !insn.addr !1552
  %10 = inttoptr i32 %9 to i32*, !insn.addr !1552
  %11 = load i32, i32* %10, align 4, !insn.addr !1552
  %12 = add i32 %11, 4, !insn.addr !1552
  store i32 %12, i32* %10, align 4, !insn.addr !1552
  %13 = inttoptr i32 %11 to i32*, !insn.addr !1553
  %14 = load i32, i32* %13, align 4, !insn.addr !1553
  %15 = inttoptr i32 %5 to i32*, !insn.addr !1554
  store i32 %14, i32* %15, align 4, !insn.addr !1554
  %16 = icmp slt i32 %14, 0, !insn.addr !1555
  %17 = icmp eq i1 %16, false, !insn.addr !1556
  br i1 %17, label %dec_label_pc_424754, label %dec_label_pc_42474c, !insn.addr !1556

dec_label_pc_42474c:                              ; preds = %dec_label_pc_42473c
  %18 = add i32 %0, 32, !insn.addr !1557
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1557
  %20 = load i32, i32* %19, align 4, !insn.addr !1557
  %21 = or i32 %20, 4, !insn.addr !1557
  store i32 %21, i32* %19, align 4, !insn.addr !1557
  %22 = sub i32 0, %14, !insn.addr !1558
  store i32 %22, i32* %15, align 4, !insn.addr !1559
  br label %dec_label_pc_424754, !insn.addr !1559

dec_label_pc_424754:                              ; preds = %dec_label_pc_42474c, %dec_label_pc_42473c
  ret i1 true, !insn.addr !1560
}

define i32 @"__crt_stdio_output::to_integer_size"(i32 %length) local_unnamed_addr {
dec_label_pc_4249fd:
  %stack_var_-8.0.reg2mem = alloca i32, !insn.addr !1561
  %merge.reg2mem = alloca i32, !insn.addr !1561
  store i32 %length, i32* @1, align 4, !insn.addr !1562
  store i32 1, i32* %merge.reg2mem, !insn.addr !1563
  store i32 2, i32* %stack_var_-8.0.reg2mem, !insn.addr !1563
  switch i32 %length, label %dec_label_pc_424a2a [
    i32 0, label %dec_label_pc_424a22
    i32 1, label %dec_label_pc_424a18
    i32 2, label %dec_label_pc_424a1f
    i32 3, label %dec_label_pc_424a22
    i32 4, label %dec_label_pc_424a26
    i32 5, label %dec_label_pc_424a26
    i32 6, label %dec_label_pc_424a22
    i32 7, label %dec_label_pc_424a22
    i32 9, label %dec_label_pc_424a22
    i32 10, label %dec_label_pc_424a22
    i32 11, label %dec_label_pc_424a26
  ], !insn.addr !1563

dec_label_pc_424a18:                              ; preds = %dec_label_pc_424a1f, %dec_label_pc_424a2a, %dec_label_pc_4249fd
  %merge.reload = load i32, i32* %merge.reg2mem
  ret i32 %merge.reload, !insn.addr !1564

dec_label_pc_424a1f:                              ; preds = %dec_label_pc_4249fd, %dec_label_pc_424a26, %dec_label_pc_424a22
  %stack_var_-8.0.reload = load i32, i32* %stack_var_-8.0.reg2mem
  store i32 %stack_var_-8.0.reload, i32* %merge.reg2mem
  br label %dec_label_pc_424a18

dec_label_pc_424a22:                              ; preds = %dec_label_pc_4249fd, %dec_label_pc_4249fd, %dec_label_pc_4249fd, %dec_label_pc_4249fd, %dec_label_pc_4249fd, %dec_label_pc_4249fd
  store i32 4, i32* %stack_var_-8.0.reg2mem, !insn.addr !1565
  br label %dec_label_pc_424a1f, !insn.addr !1565

dec_label_pc_424a26:                              ; preds = %dec_label_pc_4249fd, %dec_label_pc_4249fd, %dec_label_pc_4249fd
  store i32 8, i32* %stack_var_-8.0.reg2mem, !insn.addr !1566
  br label %dec_label_pc_424a1f, !insn.addr !1566

dec_label_pc_424a2a:                              ; preds = %dec_label_pc_4249fd
  store i32 0, i32* %merge.reg2mem
  br label %dec_label_pc_424a18
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_Z"(i32* %this) local_unnamed_addr {
dec_label_pc_424c74:
  %ecx.1.reg2mem = alloca i32, !insn.addr !1567
  %ecx.0.reg2mem = alloca i32, !insn.addr !1567
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 20, !insn.addr !1568
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1568
  %3 = load i32, i32* %2, align 4, !insn.addr !1568
  %4 = add i32 %3, 4, !insn.addr !1568
  store i32 %4, i32* %2, align 4, !insn.addr !1568
  %5 = inttoptr i32 %3 to i32*, !insn.addr !1569
  %6 = load i32, i32* %5, align 4, !insn.addr !1569
  %7 = icmp eq i32 %6, 0, !insn.addr !1570
  br i1 %7, label %dec_label_pc_424cb7, label %dec_label_pc_424c89, !insn.addr !1571

dec_label_pc_424c89:                              ; preds = %dec_label_pc_424c74
  %8 = add i32 %6, 4, !insn.addr !1572
  %9 = inttoptr i32 %8 to i32*, !insn.addr !1572
  %10 = load i32, i32* %9, align 4, !insn.addr !1572
  %11 = icmp eq i32 %10, 0, !insn.addr !1573
  br i1 %11, label %dec_label_pc_424cb7, label %dec_label_pc_424c90, !insn.addr !1574

dec_label_pc_424c90:                              ; preds = %dec_label_pc_424c89
  %12 = call i32 @function_4032b5(), !insn.addr !1575
  %13 = add i32 %0, 52, !insn.addr !1576
  %14 = inttoptr i32 %13 to i32*, !insn.addr !1576
  store i32 %10, i32* %14, align 4, !insn.addr !1576
  %15 = inttoptr i32 %6 to i16*, !insn.addr !1577
  %16 = load i16, i16* %15, align 2, !insn.addr !1577
  %17 = zext i16 %16 to i32, !insn.addr !1577
  %18 = trunc i32 %12 to i8, !insn.addr !1578
  %19 = icmp eq i8 %18, 0, !insn.addr !1578
  store i32 %17, i32* %ecx.0.reg2mem, !insn.addr !1579
  br i1 %19, label %dec_label_pc_424cc1, label %dec_label_pc_424caf, !insn.addr !1579

dec_label_pc_424caf:                              ; preds = %dec_label_pc_424c90
  %20 = add i32 %0, 60, !insn.addr !1580
  %21 = inttoptr i32 %20 to i8*, !insn.addr !1580
  store i8 1, i8* %21, align 1, !insn.addr !1580
  %22 = udiv i32 %17, 2, !insn.addr !1581
  store i32 %22, i32* %ecx.1.reg2mem, !insn.addr !1582
  br label %dec_label_pc_424cc5, !insn.addr !1582

dec_label_pc_424cb7:                              ; preds = %dec_label_pc_424c89, %dec_label_pc_424c74
  %23 = add i32 %0, 52, !insn.addr !1583
  %24 = inttoptr i32 %23 to i32*, !insn.addr !1583
  store i32 ptrtoint ([7 x i8]* @global_var_472370 to i32), i32* %24, align 4, !insn.addr !1583
  store i32 6, i32* %ecx.0.reg2mem, !insn.addr !1584
  br label %dec_label_pc_424cc1, !insn.addr !1584

dec_label_pc_424cc1:                              ; preds = %dec_label_pc_424cb7, %dec_label_pc_424c90
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %25 = add i32 %0, 60, !insn.addr !1585
  %26 = inttoptr i32 %25 to i8*, !insn.addr !1585
  store i8 0, i8* %26, align 1, !insn.addr !1585
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !1585
  br label %dec_label_pc_424cc5, !insn.addr !1585

dec_label_pc_424cc5:                              ; preds = %dec_label_pc_424cc1, %dec_label_pc_424caf
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %27 = add i32 %0, 56, !insn.addr !1586
  %28 = inttoptr i32 %27 to i32*, !insn.addr !1586
  store i32 %ecx.1.reload, i32* %28, align 4, !insn.addr !1586
  ret i1 true, !insn.addr !1587
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_a"(i32* %this) local_unnamed_addr {
dec_label_pc_425629:
  %edx.1.reg2mem = alloca i32, !insn.addr !1588
  %edx.0.reg2mem = alloca i32, !insn.addr !1588
  %.pn.in.reg2mem = alloca i8, !insn.addr !1588
  %storemerge.reg2mem = alloca i32, !insn.addr !1588
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %1 = add i32 %0, 32, !insn.addr !1589
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1589
  %3 = load i32, i32* %2, align 4, !insn.addr !1589
  %4 = or i32 %3, 16, !insn.addr !1589
  store i32 %4, i32* %2, align 4, !insn.addr !1589
  %5 = add i32 %0, 40, !insn.addr !1590
  %6 = inttoptr i32 %5 to i32*, !insn.addr !1590
  %7 = load i32, i32* %6, align 4, !insn.addr !1590
  %8 = icmp slt i32 %7, 0, !insn.addr !1591
  %9 = icmp eq i1 %8, false, !insn.addr !1592
  br i1 %9, label %dec_label_pc_425659, label %dec_label_pc_425642, !insn.addr !1592

dec_label_pc_425642:                              ; preds = %dec_label_pc_425629
  %10 = add i32 %0, 49, !insn.addr !1593
  %11 = inttoptr i32 %10 to i8*, !insn.addr !1593
  %12 = load i8, i8* %11, align 1, !insn.addr !1593
  store i32 6, i32* %storemerge.reg2mem
  switch i8 %12, label %dec_label_pc_425653 [
    i8 97, label %dec_label_pc_425651
    i8 65, label %dec_label_pc_425651
  ]

dec_label_pc_425651:                              ; preds = %dec_label_pc_425642, %dec_label_pc_425642
  store i32 13, i32* %storemerge.reg2mem, !insn.addr !1594
  br label %dec_label_pc_425653, !insn.addr !1594

dec_label_pc_425653:                              ; preds = %dec_label_pc_425642, %dec_label_pc_425651
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  store i32 %storemerge.reload, i32* %6, align 4, !insn.addr !1595
  br label %dec_label_pc_42566f, !insn.addr !1596

dec_label_pc_425659:                              ; preds = %dec_label_pc_425629
  %13 = icmp eq i32 %7, 0, !insn.addr !1591
  %14 = icmp eq i1 %13, false, !insn.addr !1597
  br i1 %14, label %dec_label_pc_42566f, label %dec_label_pc_42565b, !insn.addr !1597

dec_label_pc_42565b:                              ; preds = %dec_label_pc_425659
  %15 = add i32 %0, 49, !insn.addr !1598
  %16 = inttoptr i32 %15 to i8*, !insn.addr !1598
  %17 = load i8, i8* %16, align 1, !insn.addr !1598
  %18 = icmp ne i8 %17, 103, !insn.addr !1599
  %19 = icmp eq i8 %17, 71, !insn.addr !1600
  %20 = icmp eq i1 %19, false, !insn.addr !1601
  %or.cond = icmp eq i1 %18, %20
  br i1 %or.cond, label %dec_label_pc_42566f, label %dec_label_pc_42566a, !insn.addr !1602

dec_label_pc_42566a:                              ; preds = %dec_label_pc_42565b
  store i32 1, i32* %6, align 4, !insn.addr !1603
  br label %dec_label_pc_42566f, !insn.addr !1604

dec_label_pc_42566f:                              ; preds = %dec_label_pc_42565b, %dec_label_pc_42566a, %dec_label_pc_425659, %dec_label_pc_425653
  %21 = call i32 @function_403594(), !insn.addr !1605
  %22 = trunc i32 %21 to i8, !insn.addr !1606
  %23 = icmp eq i8 %22, 0, !insn.addr !1606
  %24 = icmp eq i1 %23, false, !insn.addr !1607
  br i1 %24, label %dec_label_pc_425692, label %dec_label_pc_425683, !insn.addr !1607

dec_label_pc_425683:                              ; preds = %dec_label_pc_42566f
  %25 = call i32 @function_403e63(), !insn.addr !1608
  %26 = add i32 %25, -349, !insn.addr !1609
  store i32 %26, i32* %6, align 4, !insn.addr !1610
  br label %dec_label_pc_425692, !insn.addr !1610

dec_label_pc_425692:                              ; preds = %dec_label_pc_425683, %dec_label_pc_42566f
  %27 = add i32 %0, 64, !insn.addr !1611
  %28 = add i32 %0, 1092, !insn.addr !1612
  %29 = inttoptr i32 %28 to i32*, !insn.addr !1612
  %30 = load i32, i32* %29, align 4, !insn.addr !1612
  %31 = icmp eq i32 %30, 0, !insn.addr !1613
  %32 = icmp eq i1 %31, false, !insn.addr !1614
  %spec.select = select i1 %32, i32 %30, i32 %27
  %33 = add i32 %0, 52, !insn.addr !1615
  %34 = inttoptr i32 %33 to i32*, !insn.addr !1615
  store i32 %spec.select, i32* %34, align 4, !insn.addr !1615
  %35 = add i32 %0, 20, !insn.addr !1616
  %36 = inttoptr i32 %35 to i32*, !insn.addr !1616
  %37 = load i32, i32* %36, align 4, !insn.addr !1616
  %38 = add i32 %37, 8, !insn.addr !1616
  store i32 %38, i32* %36, align 4, !insn.addr !1616
  %39 = inttoptr i32 %37 to i32*, !insn.addr !1617
  %40 = load i32, i32* %39, align 4, !insn.addr !1617
  store i32 %40, i32* %stack_var_-12, align 4, !insn.addr !1618
  %41 = call i32 @function_403e63(), !insn.addr !1619
  %42 = load i32, i32* %29, align 4, !insn.addr !1620
  %43 = icmp eq i32 %42, 0, !insn.addr !1621
  %44 = icmp eq i1 %43, false, !insn.addr !1622
  %ebx.0 = select i1 %44, i32 %42, i32 %27
  %45 = add i32 %0, 8, !insn.addr !1623
  %46 = inttoptr i32 %45 to i32*, !insn.addr !1623
  %47 = load i32, i32* %46, align 4, !insn.addr !1623
  %48 = add i32 %0, 49, !insn.addr !1624
  %49 = inttoptr i32 %48 to i8*, !insn.addr !1624
  %50 = load i8, i8* %49, align 1, !insn.addr !1624
  %51 = sext i8 %50 to i32, !insn.addr !1624
  %52 = add i32 %0, 4, !insn.addr !1625
  %53 = inttoptr i32 %52 to i32*, !insn.addr !1625
  %54 = load i32, i32* %53, align 4, !insn.addr !1625
  %55 = load i32, i32* %6, align 4, !insn.addr !1626
  %56 = call i32 @function_402446(i32 %41, i32 %51, i32 %55, i32 %41, i32 %54, i32 %47), !insn.addr !1627
  %57 = call i32 @function_403e63(), !insn.addr !1628
  %58 = call i32 @function_402ee1(i32* nonnull %stack_var_-12, i32 %ebx.0, i32 %57), !insn.addr !1629
  %59 = load i32, i32* %2, align 4, !insn.addr !1630
  %60 = and i32 %59, 32
  %61 = icmp eq i32 %60, 0, !insn.addr !1631
  br i1 %61, label %dec_label_pc_425716, label %dec_label_pc_425703, !insn.addr !1632

dec_label_pc_425703:                              ; preds = %dec_label_pc_425692
  %62 = load i32, i32* %6, align 4, !insn.addr !1633
  %63 = icmp eq i32 %62, 0, !insn.addr !1633
  %64 = icmp eq i1 %63, false, !insn.addr !1634
  br i1 %64, label %dec_label_pc_425716, label %dec_label_pc_425709, !insn.addr !1634

dec_label_pc_425709:                              ; preds = %dec_label_pc_425703
  %65 = load i32, i32* %46, align 4, !insn.addr !1635
  %66 = load i32, i32* %34, align 4, !insn.addr !1636
  %67 = call i32 @function_401b63(i32 %66, i32 %65), !insn.addr !1637
  br label %dec_label_pc_425716, !insn.addr !1638

dec_label_pc_425716:                              ; preds = %dec_label_pc_425709, %dec_label_pc_425703, %dec_label_pc_425692
  %68 = load i8, i8* %49, align 1, !insn.addr !1639
  %69 = icmp ne i8 %68, 103, !insn.addr !1640
  %70 = icmp eq i8 %68, 71, !insn.addr !1641
  %71 = icmp eq i1 %70, false, !insn.addr !1642
  %or.cond3 = icmp eq i1 %69, %71
  br i1 %or.cond3, label %dec_label_pc_425738, label %dec_label_pc_425721, !insn.addr !1643

dec_label_pc_425721:                              ; preds = %dec_label_pc_425716
  %72 = load i32, i32* %2, align 4, !insn.addr !1644
  %73 = and i32 %72, 32
  %74 = icmp eq i32 %73, 0, !insn.addr !1645
  %75 = icmp eq i1 %74, false, !insn.addr !1646
  br i1 %75, label %dec_label_pc_425738, label %dec_label_pc_42572b, !insn.addr !1646

dec_label_pc_42572b:                              ; preds = %dec_label_pc_425721
  %76 = load i32, i32* %46, align 4, !insn.addr !1647
  %77 = load i32, i32* %34, align 4, !insn.addr !1648
  %78 = call i32 @function_403fa8(i32 %77, i32 %76), !insn.addr !1649
  br label %dec_label_pc_425738, !insn.addr !1650

dec_label_pc_425738:                              ; preds = %dec_label_pc_425716, %dec_label_pc_42572b, %dec_label_pc_425721
  %79 = load i32, i32* %34, align 4, !insn.addr !1651
  %80 = inttoptr i32 %79 to i8*, !insn.addr !1652
  %81 = load i8, i8* %80, align 1, !insn.addr !1652
  %82 = icmp eq i8 %81, 45, !insn.addr !1653
  %83 = icmp eq i1 %82, false, !insn.addr !1654
  store i8 %81, i8* %.pn.in.reg2mem, !insn.addr !1654
  store i32 %79, i32* %edx.0.reg2mem, !insn.addr !1654
  br i1 %83, label %dec_label_pc_42574b, label %dec_label_pc_425741, !insn.addr !1654

dec_label_pc_425741:                              ; preds = %dec_label_pc_425738
  %84 = load i32, i32* %2, align 4, !insn.addr !1655
  %85 = or i32 %84, 64, !insn.addr !1655
  store i32 %85, i32* %2, align 4, !insn.addr !1655
  %86 = add i32 %79, 1, !insn.addr !1656
  store i32 %86, i32* %34, align 4, !insn.addr !1657
  %87 = inttoptr i32 %86 to i8*, !insn.addr !1658
  %88 = load i8, i8* %87, align 1, !insn.addr !1658
  store i8 %88, i8* %.pn.in.reg2mem, !insn.addr !1658
  store i32 %86, i32* %edx.0.reg2mem, !insn.addr !1658
  br label %dec_label_pc_42574b, !insn.addr !1658

dec_label_pc_42574b:                              ; preds = %dec_label_pc_425741, %dec_label_pc_425738
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %.pn.in.reload = load i8, i8* %.pn.in.reg2mem
  switch i8 %.pn.in.reload, label %dec_label_pc_425757 [
    i8 105, label %dec_label_pc_42575b
    i8 73, label %dec_label_pc_42575b
    i8 110, label %dec_label_pc_42575b
  ]

dec_label_pc_425757:                              ; preds = %dec_label_pc_42574b
  %89 = icmp eq i8 %.pn.in.reload, 78, !insn.addr !1659
  %90 = icmp eq i1 %89, false, !insn.addr !1660
  br i1 %90, label %dec_label_pc_425763, label %dec_label_pc_42575b, !insn.addr !1660

dec_label_pc_42575b:                              ; preds = %dec_label_pc_42574b, %dec_label_pc_42574b, %dec_label_pc_42574b, %dec_label_pc_425757
  %91 = load i32, i32* %2, align 4, !insn.addr !1661
  %92 = and i32 %91, -9, !insn.addr !1661
  store i32 %92, i32* %2, align 4, !insn.addr !1661
  store i8 115, i8* %49, align 1, !insn.addr !1662
  br label %dec_label_pc_425763, !insn.addr !1662

dec_label_pc_425763:                              ; preds = %dec_label_pc_42575b, %dec_label_pc_425757
  store i32 %edx.0.reload, i32* %edx.1.reg2mem, !insn.addr !1663
  br label %dec_label_pc_425766, !insn.addr !1663

dec_label_pc_425766:                              ; preds = %dec_label_pc_425766, %dec_label_pc_425763
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %93 = inttoptr i32 %edx.1.reload to i8*, !insn.addr !1664
  %94 = load i8, i8* %93, align 1, !insn.addr !1664
  %95 = add i32 %edx.1.reload, 1, !insn.addr !1665
  %96 = icmp eq i8 %94, 0, !insn.addr !1666
  %97 = icmp eq i1 %96, false, !insn.addr !1667
  store i32 %95, i32* %edx.1.reg2mem, !insn.addr !1667
  br i1 %97, label %dec_label_pc_425766, label %dec_label_pc_42576d, !insn.addr !1667

dec_label_pc_42576d:                              ; preds = %dec_label_pc_425766
  %98 = sub i32 %edx.1.reload, %edx.0.reload, !insn.addr !1668
  %99 = add i32 %0, 56, !insn.addr !1669
  %100 = inttoptr i32 %99 to i32*, !insn.addr !1669
  store i32 %98, i32* %100, align 4, !insn.addr !1669
  ret i1 true, !insn.addr !1670
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_c_tchar"(i32* %this, i8 %__formal) local_unnamed_addr {
dec_label_pc_4269e3:
  %.pre-phi4.reg2mem = alloca i32*, !insn.addr !1671
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 64, !insn.addr !1672
  %2 = call i32 @function_4032b5(), !insn.addr !1673
  %3 = trunc i32 %2 to i8, !insn.addr !1674
  %4 = icmp eq i8 %3, 0, !insn.addr !1674
  br i1 %4, label %dec_label_pc_426a3e, label %dec_label_pc_426a05, !insn.addr !1675

dec_label_pc_426a05:                              ; preds = %dec_label_pc_4269e3
  %5 = add i32 %0, 20, !insn.addr !1676
  %6 = inttoptr i32 %5 to i32*, !insn.addr !1676
  %7 = load i32, i32* %6, align 4, !insn.addr !1676
  %8 = add i32 %7, 4, !insn.addr !1676
  store i32 %8, i32* %6, align 4, !insn.addr !1676
  %9 = add i32 %0, 1092
  %10 = inttoptr i32 %9 to i32*
  %11 = load i32, i32* %10, align 4, !insn.addr !1677
  %12 = icmp eq i32 %11, 0, !insn.addr !1678
  %13 = icmp eq i1 %12, false, !insn.addr !1679
  %spec.select = select i1 %13, i32 %11, i32 %1
  %14 = call i32 @function_403e63(), !insn.addr !1680
  %15 = add i32 %0, 56, !insn.addr !1681
  %16 = inttoptr i32 %spec.select to i8*, !insn.addr !1682
  %17 = inttoptr i32 %15 to i32*, !insn.addr !1683
  %18 = call i32 @wctomb_s(i32* %17, i8* %16, i32 %14, i16 ptrtoint (i32* @80 to i16)), !insn.addr !1683
  %19 = icmp eq i32 %18, 0, !insn.addr !1684
  store i32* %10, i32** %.pre-phi4.reg2mem, !insn.addr !1685
  br i1 %19, label %dec_label_pc_426a5d, label %dec_label_pc_426a38, !insn.addr !1685

dec_label_pc_426a38:                              ; preds = %dec_label_pc_426a05
  %20 = add i32 %0, 48, !insn.addr !1686
  %21 = inttoptr i32 %20 to i8*, !insn.addr !1686
  store i8 1, i8* %21, align 1, !insn.addr !1686
  store i32* %10, i32** %.pre-phi4.reg2mem, !insn.addr !1687
  br label %dec_label_pc_426a5d, !insn.addr !1687

dec_label_pc_426a3e:                              ; preds = %dec_label_pc_4269e3
  %22 = add i32 %0, 1092
  %23 = inttoptr i32 %22 to i32*
  %24 = load i32, i32* %23, align 4, !insn.addr !1688
  %25 = icmp eq i32 %24, 0, !insn.addr !1689
  %26 = icmp eq i1 %25, false, !insn.addr !1690
  %spec.select2 = select i1 %26, i32 %24, i32 %1
  %27 = add i32 %0, 20, !insn.addr !1691
  %28 = inttoptr i32 %27 to i32*, !insn.addr !1691
  %29 = load i32, i32* %28, align 4, !insn.addr !1691
  %30 = add i32 %29, 4, !insn.addr !1691
  store i32 %30, i32* %28, align 4, !insn.addr !1691
  %31 = inttoptr i32 %29 to i8*, !insn.addr !1692
  %32 = load i8, i8* %31, align 1, !insn.addr !1692
  %33 = inttoptr i32 %spec.select2 to i8*, !insn.addr !1693
  store i8 %32, i8* %33, align 1, !insn.addr !1693
  %34 = add i32 %0, 56, !insn.addr !1694
  %35 = inttoptr i32 %34 to i32*, !insn.addr !1694
  store i32 1, i32* %35, align 4, !insn.addr !1694
  store i32* %23, i32** %.pre-phi4.reg2mem, !insn.addr !1694
  br label %dec_label_pc_426a5d, !insn.addr !1694

dec_label_pc_426a5d:                              ; preds = %dec_label_pc_426a3e, %dec_label_pc_426a38, %dec_label_pc_426a05
  %.pre-phi4.reload = load i32*, i32** %.pre-phi4.reg2mem
  %36 = load i32, i32* %.pre-phi4.reload, align 4, !insn.addr !1695
  %37 = icmp eq i32 %36, 0, !insn.addr !1696
  %spec.select3 = select i1 %37, i32 %1, i32 %36
  %38 = add i32 %0, 52, !insn.addr !1697
  %39 = inttoptr i32 %38 to i32*, !insn.addr !1697
  store i32 %spec.select3, i32* %39, align 4, !insn.addr !1697
  ret i1 true, !insn.addr !1698
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_integer"(i32* %this, i32 %radix, i1 %capital_hexits) local_unnamed_addr {
dec_label_pc_4275da:
  %storemerge.reg2mem = alloca i1, !insn.addr !1699
  %esp.0.in.reg2mem = alloca i32*, !insn.addr !1699
  %edi.1.reg2mem = alloca i32, !insn.addr !1699
  %ebx.1.reg2mem = alloca i32, !insn.addr !1699
  %ecx.0.reg2mem = alloca i32, !insn.addr !1699
  %edi.0.reg2mem = alloca i32, !insn.addr !1699
  %ebx.0.reg2mem = alloca i32, !insn.addr !1699
  %eax.0.reg2mem = alloca i32, !insn.addr !1699
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %1 = add i32 %0, 44, !insn.addr !1700
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1700
  %3 = load i32, i32* %2, align 4, !insn.addr !1700
  store i32 %3, i32* %stack_var_-24, align 4, !insn.addr !1700
  %4 = call i32 @"?to_integer_size@__crt_stdio_output@@YAIW4length_modifier@1@@Z"(i32 %3), !insn.addr !1701
  switch i32 %4, label %dec_label_pc_427608 [
    i32 1, label %dec_label_pc_427670
    i32 2, label %dec_label_pc_427653
    i32 4, label %dec_label_pc_427636
    i32 8, label %dec_label_pc_42761f
  ]

dec_label_pc_427608:                              ; preds = %dec_label_pc_4275da
  %5 = call i32* @_errno(), !insn.addr !1702
  store i32 22, i32* %5, align 4, !insn.addr !1703
  call void @_invalid_parameter_noinfo(), !insn.addr !1704
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1705
  br label %dec_label_pc_427724, !insn.addr !1705

dec_label_pc_42761f:                              ; preds = %dec_label_pc_4275da
  %6 = add i32 %0, 20, !insn.addr !1706
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1706
  %8 = load i32, i32* %7, align 4, !insn.addr !1706
  %9 = add i32 %8, 8, !insn.addr !1706
  store i32 %9, i32* %7, align 4, !insn.addr !1706
  %10 = inttoptr i32 %8 to i32*, !insn.addr !1707
  %11 = load i32, i32* %10, align 4, !insn.addr !1707
  %12 = add i32 %8, 4, !insn.addr !1708
  %13 = inttoptr i32 %12 to i32*, !insn.addr !1708
  %14 = load i32, i32* %13, align 4, !insn.addr !1708
  store i32 %14, i32* %ebx.0.reg2mem, !insn.addr !1709
  store i32 %11, i32* %edi.0.reg2mem, !insn.addr !1709
  br label %dec_label_pc_427690, !insn.addr !1709

dec_label_pc_427636:                              ; preds = %dec_label_pc_4275da
  %15 = add i32 %0, 32, !insn.addr !1710
  %16 = inttoptr i32 %15 to i32*, !insn.addr !1710
  %17 = load i32, i32* %16, align 4, !insn.addr !1710
  %18 = add i32 %0, 20, !insn.addr !1711
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1711
  %20 = load i32, i32* %19, align 4, !insn.addr !1711
  %21 = add i32 %20, 4, !insn.addr !1711
  store i32 %21, i32* %19, align 4, !insn.addr !1711
  %22 = and i32 %17, 16
  %23 = icmp eq i32 %22, 0, !insn.addr !1712
  %24 = inttoptr i32 %20 to i32*
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %eax.0.reg2mem, !insn.addr !1713
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !1713
  store i32 %25, i32* %edi.0.reg2mem, !insn.addr !1713
  br i1 %23, label %dec_label_pc_427690, label %dec_label_pc_42768b, !insn.addr !1713

dec_label_pc_427653:                              ; preds = %dec_label_pc_4275da
  %26 = add i32 %0, 32, !insn.addr !1714
  %27 = inttoptr i32 %26 to i32*, !insn.addr !1714
  %28 = load i32, i32* %27, align 4, !insn.addr !1714
  %29 = add i32 %0, 20, !insn.addr !1715
  %30 = inttoptr i32 %29 to i32*, !insn.addr !1715
  %31 = load i32, i32* %30, align 4, !insn.addr !1715
  %32 = add i32 %31, 4, !insn.addr !1715
  store i32 %32, i32* %30, align 4, !insn.addr !1715
  %33 = and i32 %28, 16
  %34 = icmp eq i32 %33, 0, !insn.addr !1716
  %35 = inttoptr i32 %31 to i16*
  %36 = load i16, i16* %35, align 2
  br i1 %34, label %dec_label_pc_42766a, label %dec_label_pc_427664, !insn.addr !1717

dec_label_pc_427664:                              ; preds = %dec_label_pc_427653
  %37 = sext i16 %36 to i32, !insn.addr !1718
  store i32 %37, i32* %eax.0.reg2mem, !insn.addr !1719
  br label %dec_label_pc_42768b, !insn.addr !1719

dec_label_pc_42766a:                              ; preds = %dec_label_pc_427653
  %38 = zext i16 %36 to i32, !insn.addr !1720
  store i32 %38, i32* %eax.0.reg2mem, !insn.addr !1721
  br label %dec_label_pc_42768b, !insn.addr !1721

dec_label_pc_427670:                              ; preds = %dec_label_pc_4275da
  %39 = add i32 %0, 32, !insn.addr !1722
  %40 = inttoptr i32 %39 to i32*, !insn.addr !1722
  %41 = load i32, i32* %40, align 4, !insn.addr !1722
  %42 = add i32 %0, 20, !insn.addr !1723
  %43 = inttoptr i32 %42 to i32*, !insn.addr !1723
  %44 = load i32, i32* %43, align 4, !insn.addr !1723
  %45 = add i32 %44, 4, !insn.addr !1723
  store i32 %45, i32* %43, align 4, !insn.addr !1723
  %46 = and i32 %41, 16
  %47 = icmp eq i32 %46, 0, !insn.addr !1724
  %48 = inttoptr i32 %44 to i8*
  %49 = load i8, i8* %48, align 1
  br i1 %47, label %dec_label_pc_427687, label %dec_label_pc_427681, !insn.addr !1725

dec_label_pc_427681:                              ; preds = %dec_label_pc_427670
  %50 = sext i8 %49 to i32, !insn.addr !1726
  store i32 %50, i32* %eax.0.reg2mem, !insn.addr !1727
  br label %dec_label_pc_42768b, !insn.addr !1727

dec_label_pc_427687:                              ; preds = %dec_label_pc_427670
  %51 = zext i8 %49 to i32, !insn.addr !1728
  store i32 %51, i32* %eax.0.reg2mem, !insn.addr !1728
  br label %dec_label_pc_42768b, !insn.addr !1728

dec_label_pc_42768b:                              ; preds = %dec_label_pc_427636, %dec_label_pc_427687, %dec_label_pc_427681, %dec_label_pc_42766a, %dec_label_pc_427664
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %52 = ashr i32 %eax.0.reload, 31, !insn.addr !1729
  store i32 %52, i32* %ebx.0.reg2mem, !insn.addr !1730
  store i32 %eax.0.reload, i32* %edi.0.reg2mem, !insn.addr !1730
  br label %dec_label_pc_427690, !insn.addr !1730

dec_label_pc_427690:                              ; preds = %dec_label_pc_427636, %dec_label_pc_42768b, %dec_label_pc_42761f
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %53 = add i32 %0, 32, !insn.addr !1731
  %54 = inttoptr i32 %53 to i32*, !insn.addr !1731
  %55 = load i32, i32* %54, align 4, !insn.addr !1731
  %56 = and i32 %55, 16
  %57 = icmp eq i32 %56, 0, !insn.addr !1732
  store i32 %55, i32* %ecx.0.reg2mem, !insn.addr !1733
  store i32 %ebx.0.reload, i32* %ebx.1.reg2mem, !insn.addr !1733
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !1733
  br i1 %57, label %dec_label_pc_4276b3, label %dec_label_pc_42769c, !insn.addr !1733

dec_label_pc_42769c:                              ; preds = %dec_label_pc_427690
  %58 = icmp eq i32 %ebx.0.reload, 0, !insn.addr !1734
  %59 = icmp slt i32 %ebx.0.reload, 0, !insn.addr !1734
  %60 = icmp eq i1 %59, false, !insn.addr !1735
  %61 = icmp eq i1 %58, false, !insn.addr !1735
  %62 = icmp eq i1 %60, %61, !insn.addr !1735
  %or.cond = or i1 %60, %62
  store i32 %55, i32* %ecx.0.reg2mem, !insn.addr !1735
  store i32 %ebx.0.reload, i32* %ebx.1.reg2mem, !insn.addr !1735
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !1735
  br i1 %or.cond, label %dec_label_pc_4276b3, label %dec_label_pc_4276a6, !insn.addr !1735

dec_label_pc_4276a6:                              ; preds = %dec_label_pc_42769c
  %63 = sub i32 0, %edi.0.reload, !insn.addr !1736
  %64 = icmp ne i32 %edi.0.reload, 0, !insn.addr !1736
  %65 = zext i1 %64 to i32, !insn.addr !1737
  %66 = add i32 %ebx.0.reload, %65, !insn.addr !1737
  %67 = sub i32 0, %66, !insn.addr !1738
  %68 = or i32 %55, 64, !insn.addr !1739
  store i32 %68, i32* %54, align 4, !insn.addr !1740
  store i32 %68, i32* %ecx.0.reg2mem, !insn.addr !1740
  store i32 %67, i32* %ebx.1.reg2mem, !insn.addr !1740
  store i32 %63, i32* %edi.1.reg2mem, !insn.addr !1740
  br label %dec_label_pc_4276b3, !insn.addr !1740

dec_label_pc_4276b3:                              ; preds = %dec_label_pc_4276a6, %dec_label_pc_42769c, %dec_label_pc_427690
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %ebx.1.reload = load i32, i32* %ebx.1.reg2mem
  %69 = add i32 %0, 40, !insn.addr !1741
  %70 = inttoptr i32 %69 to i32*, !insn.addr !1741
  %71 = load i32, i32* %70, align 4, !insn.addr !1741
  %72 = icmp slt i32 %71, 0, !insn.addr !1741
  %73 = icmp eq i1 %72, false, !insn.addr !1742
  br i1 %73, label %dec_label_pc_4276c2, label %dec_label_pc_4276b9, !insn.addr !1742

dec_label_pc_4276b9:                              ; preds = %dec_label_pc_4276b3
  store i32 1, i32* %70, align 4, !insn.addr !1743
  store i32* %stack_var_-20, i32** %esp.0.in.reg2mem, !insn.addr !1744
  br label %dec_label_pc_4276d3, !insn.addr !1744

dec_label_pc_4276c2:                              ; preds = %dec_label_pc_4276b3
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  store i32 %71, i32* %stack_var_-24, align 4, !insn.addr !1745
  %74 = and i32 %ecx.0.reload, -9, !insn.addr !1746
  store i32 %74, i32* %54, align 4, !insn.addr !1747
  %75 = call i32 @function_403594(), !insn.addr !1748
  store i32* %stack_var_-24, i32** %esp.0.in.reg2mem, !insn.addr !1748
  br label %dec_label_pc_4276d3, !insn.addr !1748

dec_label_pc_4276d3:                              ; preds = %dec_label_pc_4276c2, %dec_label_pc_4276b9
  %esp.0.in.reload = load i32*, i32** %esp.0.in.reg2mem
  %76 = or i32 %edi.1.reload, %ebx.1.reload, !insn.addr !1749
  %77 = icmp eq i32 %76, 0, !insn.addr !1749
  %78 = icmp eq i1 %77, false, !insn.addr !1750
  br i1 %78, label %dec_label_pc_4276dd, label %dec_label_pc_4276d9, !insn.addr !1750

dec_label_pc_4276d9:                              ; preds = %dec_label_pc_4276d3
  %79 = load i32, i32* %54, align 4, !insn.addr !1751
  %80 = and i32 %79, -33, !insn.addr !1751
  store i32 %80, i32* %54, align 4, !insn.addr !1751
  br label %dec_label_pc_4276dd, !insn.addr !1751

dec_label_pc_4276dd:                              ; preds = %dec_label_pc_4276d9, %dec_label_pc_4276d3
  %81 = ptrtoint i32* %this to i32
  %esp.0 = ptrtoint i32* %esp.0.in.reload to i32
  %82 = icmp eq i32 %4, 8, !insn.addr !1752
  %83 = add i32 %esp.0, -4, !insn.addr !1753
  %84 = inttoptr i32 %83 to i32*, !insn.addr !1753
  store i32 %radix, i32* %84, align 4, !insn.addr !1753
  %85 = add i32 %0, 60, !insn.addr !1754
  %86 = inttoptr i32 %85 to i8*, !insn.addr !1754
  store i8 0, i8* %86, align 1, !insn.addr !1754
  %87 = add i32 %esp.0, -8, !insn.addr !1755
  %88 = inttoptr i32 %87 to i32*, !insn.addr !1755
  store i32 %81, i32* %88, align 4, !insn.addr !1755
  %89 = icmp eq i1 %82, false, !insn.addr !1756
  %90 = add i32 %esp.0, -12
  %91 = inttoptr i32 %90 to i32*
  br i1 %89, label %dec_label_pc_4276f8, label %dec_label_pc_4276ef, !insn.addr !1756

dec_label_pc_4276ef:                              ; preds = %dec_label_pc_4276dd
  store i32 %ebx.1.reload, i32* %91, align 4, !insn.addr !1757
  %92 = add i32 %esp.0, -16, !insn.addr !1758
  %93 = inttoptr i32 %92 to i32*, !insn.addr !1758
  store i32 %edi.1.reload, i32* %93, align 4, !insn.addr !1758
  %94 = call i32 @function_402ff9(), !insn.addr !1759
  br label %dec_label_pc_4276fe, !insn.addr !1760

dec_label_pc_4276f8:                              ; preds = %dec_label_pc_4276dd
  store i32 %edi.1.reload, i32* %91, align 4, !insn.addr !1761
  %95 = call i32 @function_402cb1(), !insn.addr !1762
  br label %dec_label_pc_4276fe, !insn.addr !1762

dec_label_pc_4276fe:                              ; preds = %dec_label_pc_4276f8, %dec_label_pc_4276ef
  %96 = load i32, i32* %54, align 4, !insn.addr !1763
  %97 = trunc i32 %96 to i8
  %98 = icmp sgt i8 %97, -1, !insn.addr !1764
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1765
  br i1 %98, label %dec_label_pc_427724, label %dec_label_pc_427708, !insn.addr !1765

dec_label_pc_427708:                              ; preds = %dec_label_pc_4276fe
  %99 = add i32 %0, 56, !insn.addr !1766
  %100 = inttoptr i32 %99 to i32*, !insn.addr !1766
  %101 = load i32, i32* %100, align 4, !insn.addr !1766
  %102 = icmp eq i32 %101, 0, !insn.addr !1766
  %.pre = add i32 %0, 52
  %.pre1 = inttoptr i32 %.pre to i32*
  %.pre3 = load i32, i32* %.pre1, align 4
  br i1 %102, label %dec_label_pc_427716, label %dec_label_pc_42770e, !insn.addr !1767

dec_label_pc_42770e:                              ; preds = %dec_label_pc_427708
  %103 = inttoptr i32 %.pre3 to i8*, !insn.addr !1768
  %104 = load i8, i8* %103, align 1, !insn.addr !1768
  %105 = icmp eq i8 %104, 48, !insn.addr !1768
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1769
  br i1 %105, label %dec_label_pc_427724, label %dec_label_pc_427716, !insn.addr !1769

dec_label_pc_427716:                              ; preds = %dec_label_pc_427708, %dec_label_pc_42770e
  %106 = add i32 %.pre3, -1, !insn.addr !1770
  store i32 %106, i32* %.pre1, align 4, !insn.addr !1770
  %107 = inttoptr i32 %106 to i8*, !insn.addr !1771
  store i8 48, i8* %107, align 1, !insn.addr !1771
  %108 = load i32, i32* %100, align 4, !insn.addr !1772
  %109 = add i32 %108, 1, !insn.addr !1772
  store i32 %109, i32* %100, align 4, !insn.addr !1772
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1772
  br label %dec_label_pc_427724, !insn.addr !1772

dec_label_pc_427724:                              ; preds = %dec_label_pc_4276fe, %dec_label_pc_42770e, %dec_label_pc_427716, %dec_label_pc_427608
  %storemerge.reload = load i1, i1* %storemerge.reg2mem
  ret i1 %storemerge.reload, !insn.addr !1773
}

declare i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_n"(i32*) local_unnamed_addr

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_o"(i32* %this) local_unnamed_addr {
dec_label_pc_428ee2:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 32, !insn.addr !1774
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1774
  %3 = load i32, i32* %2, align 4, !insn.addr !1774
  %4 = and i32 %3, 32
  %5 = icmp eq i32 %4, 0, !insn.addr !1775
  br i1 %5, label %dec_label_pc_428ef7, label %dec_label_pc_428eee, !insn.addr !1776

dec_label_pc_428eee:                              ; preds = %dec_label_pc_428ee2
  %6 = or i32 %3, 128, !insn.addr !1777
  store i32 %6, i32* %2, align 4, !insn.addr !1778
  br label %dec_label_pc_428ef7, !insn.addr !1778

dec_label_pc_428ef7:                              ; preds = %dec_label_pc_428eee, %dec_label_pc_428ee2
  %7 = call i32 @function_40350d(i32 8, i32 0), !insn.addr !1779
  %8 = and i32 %7, 1
  %9 = icmp ne i32 %8, 0, !insn.addr !1780
  ret i1 %9, !insn.addr !1780
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_p"(i32* %this) local_unnamed_addr {
dec_label_pc_42909a:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 40, !insn.addr !1781
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1781
  store i32 8, i32* %2, align 4, !insn.addr !1781
  %3 = add i32 %0, 44, !insn.addr !1782
  %4 = inttoptr i32 %3 to i32*, !insn.addr !1782
  store i32 10, i32* %4, align 4, !insn.addr !1782
  %5 = call i32 @function_40350d(i32 16, i32 1), !insn.addr !1783
  %6 = and i32 %5, 1
  %7 = icmp ne i32 %6, 0, !insn.addr !1784
  ret i1 %7, !insn.addr !1784
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_s"(i32* %this) local_unnamed_addr {
dec_label_pc_4292f0:
  %storemerge.reg2mem = alloca i32, !insn.addr !1785
  %edi.1.reg2mem = alloca i32, !insn.addr !1785
  %edi.0.reg2mem = alloca i32, !insn.addr !1785
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 20, !insn.addr !1786
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1786
  %3 = load i32, i32* %2, align 4, !insn.addr !1786
  %4 = add i32 %3, 4, !insn.addr !1786
  store i32 %4, i32* %2, align 4, !insn.addr !1786
  %5 = add i32 %0, 40, !insn.addr !1787
  %6 = inttoptr i32 %5 to i32*, !insn.addr !1787
  %7 = load i32, i32* %6, align 4, !insn.addr !1787
  %8 = inttoptr i32 %3 to i32*, !insn.addr !1788
  %9 = load i32, i32* %8, align 4, !insn.addr !1788
  %10 = add i32 %0, 52, !insn.addr !1789
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1789
  store i32 %9, i32* %11, align 4, !insn.addr !1789
  %12 = icmp eq i32 %7, -1, !insn.addr !1790
  %13 = icmp eq i1 %12, false, !insn.addr !1791
  %spec.select = select i1 %13, i32 %7, i32 2147483647
  %14 = call i32 @function_4032b5(), !insn.addr !1792
  %15 = trunc i32 %14 to i8, !insn.addr !1793
  %16 = icmp eq i8 %15, 0, !insn.addr !1793
  %17 = icmp eq i32 %9, 0
  %18 = icmp eq i1 %17, false
  br i1 %16, label %dec_label_pc_429343, label %dec_label_pc_42932a, !insn.addr !1794

dec_label_pc_42932a:                              ; preds = %dec_label_pc_4292f0
  store i32 %9, i32* %edi.0.reg2mem, !insn.addr !1795
  br i1 %18, label %dec_label_pc_429336, label %dec_label_pc_42932e, !insn.addr !1795

dec_label_pc_42932e:                              ; preds = %dec_label_pc_42932a
  store i32 ptrtoint ([7 x i16]* @global_var_472360 to i32), i32* %11, align 4, !insn.addr !1796
  store i32 ptrtoint ([7 x i16]* @global_var_472360 to i32), i32* %edi.0.reg2mem, !insn.addr !1796
  br label %dec_label_pc_429336, !insn.addr !1796

dec_label_pc_429336:                              ; preds = %dec_label_pc_42932e, %dec_label_pc_42932a
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %19 = add i32 %0, 60, !insn.addr !1797
  %20 = inttoptr i32 %19 to i8*, !insn.addr !1797
  store i8 1, i8* %20, align 1, !insn.addr !1797
  %21 = inttoptr i32 %edi.0.reload to i16*
  %22 = call i32 @wcsnlen(i16* %21, i32 %spec.select), !insn.addr !1798
  store i32 %22, i32* %storemerge.reg2mem, !insn.addr !1799
  br label %dec_label_pc_429356, !insn.addr !1799

dec_label_pc_429343:                              ; preds = %dec_label_pc_4292f0
  store i32 %9, i32* %edi.1.reg2mem, !insn.addr !1800
  br i1 %18, label %dec_label_pc_42934f, label %dec_label_pc_429347, !insn.addr !1800

dec_label_pc_429347:                              ; preds = %dec_label_pc_429343
  store i32 ptrtoint ([7 x i8]* @global_var_472370 to i32), i32* %11, align 4, !insn.addr !1801
  store i32 ptrtoint ([7 x i8]* @global_var_472370 to i32), i32* %edi.1.reg2mem, !insn.addr !1801
  br label %dec_label_pc_42934f, !insn.addr !1801

dec_label_pc_42934f:                              ; preds = %dec_label_pc_429347, %dec_label_pc_429343
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %23 = inttoptr i32 %edi.1.reload to i8*, !insn.addr !1802
  %24 = call i32 @strnlen(i8* %23, i32 %spec.select), !insn.addr !1803
  store i32 %24, i32* %storemerge.reg2mem, !insn.addr !1803
  br label %dec_label_pc_429356, !insn.addr !1803

dec_label_pc_429356:                              ; preds = %dec_label_pc_42934f, %dec_label_pc_429336
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %25 = add i32 %0, 56, !insn.addr !1804
  %26 = inttoptr i32 %25 to i32*, !insn.addr !1804
  store i32 %storemerge.reload, i32* %26, align 4, !insn.addr !1804
  ret i1 true, !insn.addr !1805
}

declare i1 @"__crt_stdio_output::stream_output_adapter<char>::validate"(i32*) local_unnamed_addr

define i1 @"__crt_stdio_output::stream_output_adapter<char>::write_character_without_count_update"(i32* %this, i8 %c) local_unnamed_addr {
dec_label_pc_42b330:
  %storemerge.reg2mem = alloca i1, !insn.addr !1806
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 12, !insn.addr !1807
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1807
  %3 = load i32, i32* %2, align 4, !insn.addr !1807
  %4 = and i32 %3, 4096
  %5 = icmp eq i32 %4, 0, !insn.addr !1808
  br i1 %5, label %dec_label_pc_42b34e, label %dec_label_pc_42b342, !insn.addr !1809

dec_label_pc_42b342:                              ; preds = %dec_label_pc_42b330
  %6 = add i32 %0, 4, !insn.addr !1810
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1810
  %8 = load i32, i32* %7, align 4, !insn.addr !1810
  %9 = icmp eq i32 %8, 0, !insn.addr !1810
  %10 = icmp eq i1 %9, false, !insn.addr !1811
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1811
  br i1 %10, label %dec_label_pc_42b34e, label %dec_label_pc_42b362, !insn.addr !1811

dec_label_pc_42b34e:                              ; preds = %dec_label_pc_42b342, %dec_label_pc_42b330
  %11 = ptrtoint i32* %this to i32
  %sext = mul i32 %11, 16777216
  %12 = sdiv i32 %sext, 16777216, !insn.addr !1812
  %13 = call i32 @_fputc_nolock(i32 %12, i32 %0), !insn.addr !1813
  %14 = icmp eq i32 %13, -1, !insn.addr !1814
  %15 = icmp eq i1 %14, false, !insn.addr !1815
  store i1 %15, i1* %storemerge.reg2mem, !insn.addr !1815
  br label %dec_label_pc_42b362, !insn.addr !1815

dec_label_pc_42b362:                              ; preds = %dec_label_pc_42b342, %dec_label_pc_42b34e
  %storemerge.reload = load i1, i1* %storemerge.reg2mem
  ret i1 %storemerge.reload, !insn.addr !1816
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::write_stored_string_tchar"(i32* %this, i8 %__formal) local_unnamed_addr {
dec_label_pc_42b55a:
  %edi.0.reg2mem = alloca i32, !insn.addr !1817
  %esp.0.reg2mem = alloca i32, !insn.addr !1817
  %ebx.0.reg2mem = alloca i32, !insn.addr !1817
  %0 = call i32 @__decompiler_undefined_function_0()
  %local_buffer_-16 = alloca [6 x i8], align 1
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %1 = add i32 %0, 60, !insn.addr !1818
  %2 = inttoptr i32 %1 to i8*, !insn.addr !1818
  %3 = load i8, i8* %2, align 1, !insn.addr !1818
  %4 = icmp eq i8 %3, 0, !insn.addr !1818
  br i1 %4, label %dec_label_pc_42b5d5, label %dec_label_pc_42b577, !insn.addr !1819

dec_label_pc_42b577:                              ; preds = %dec_label_pc_42b55a
  %5 = add i32 %0, 56, !insn.addr !1820
  %6 = inttoptr i32 %5 to i32*, !insn.addr !1820
  %7 = load i32, i32* %6, align 4, !insn.addr !1820
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %dec_label_pc_42b5d5, label %dec_label_pc_42b57e, !insn.addr !1821

dec_label_pc_42b57e:                              ; preds = %dec_label_pc_42b577
  %9 = ptrtoint i32* %stack_var_-32 to i32, !insn.addr !1822
  %10 = add i32 %0, 52, !insn.addr !1823
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1823
  %12 = load i32, i32* %11, align 4, !insn.addr !1823
  %13 = ptrtoint [6 x i8]* %local_buffer_-16 to i32, !insn.addr !1824
  %14 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !1825
  %15 = add i32 %0, 12
  %16 = add i32 %0, 24
  store i32 0, i32* %ebx.0.reg2mem
  store i32 %9, i32* %esp.0.reg2mem
  store i32 %12, i32* %edi.0.reg2mem
  br label %dec_label_pc_42b587

dec_label_pc_42b587:                              ; preds = %dec_label_pc_42b57e, %dec_label_pc_42b5ad
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %17 = inttoptr i32 %edi.0.reload to i16*, !insn.addr !1826
  %18 = load i16, i16* %17, align 2, !insn.addr !1826
  %19 = zext i16 %18 to i32, !insn.addr !1826
  store i32 0, i32* %stack_var_-20, align 4, !insn.addr !1827
  %20 = add i32 %esp.0.reload, -4, !insn.addr !1828
  %21 = inttoptr i32 %20 to i32*, !insn.addr !1828
  store i32 %19, i32* %21, align 4, !insn.addr !1828
  %22 = add i32 %esp.0.reload, -8, !insn.addr !1829
  %23 = inttoptr i32 %22 to i32*, !insn.addr !1829
  store i32 6, i32* %23, align 4, !insn.addr !1829
  %24 = add i32 %esp.0.reload, -12, !insn.addr !1824
  %25 = inttoptr i32 %24 to i32*, !insn.addr !1824
  store i32 %13, i32* %25, align 4, !insn.addr !1824
  %26 = add i32 %esp.0.reload, -16, !insn.addr !1825
  %27 = inttoptr i32 %26 to i32*, !insn.addr !1825
  store i32 %14, i32* %27, align 4, !insn.addr !1825
  %28 = load i32, i32* %stack_var_-20, align 4, !insn.addr !1830
  %29 = inttoptr i32 %28 to i32*, !insn.addr !1830
  %30 = call i32 @wctomb_s(i32* %29, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i16 ptrtoint (i32* @80 to i16)), !insn.addr !1830
  %31 = icmp eq i32 %30, 0, !insn.addr !1831
  %32 = icmp eq i1 %31, false, !insn.addr !1832
  %33 = load i32, i32* %stack_var_-20, align 4, !insn.addr !1833
  %34 = icmp eq i32 %33, %30, !insn.addr !1833
  %or.cond = or i1 %32, %34
  br i1 %or.cond, label %dec_label_pc_42b5cf, label %dec_label_pc_42b5ad, !insn.addr !1832

dec_label_pc_42b5ad:                              ; preds = %dec_label_pc_42b587
  %35 = add i32 %edi.0.reload, 2, !insn.addr !1834
  store i32 %15, i32* %21, align 4, !insn.addr !1835
  store i32 %16, i32* %23, align 4, !insn.addr !1836
  %36 = load i32, i32* %stack_var_-20, align 4, !insn.addr !1837
  store i32 %36, i32* %25, align 4, !insn.addr !1837
  store i32 %13, i32* %27, align 4, !insn.addr !1838
  %37 = call i32 @function_404160(), !insn.addr !1839
  %38 = add i32 %ebx.0.reload, 1, !insn.addr !1840
  %39 = load i32, i32* %6, align 4, !insn.addr !1841
  %40 = icmp eq i32 %38, %39, !insn.addr !1841
  %41 = icmp eq i1 %40, false, !insn.addr !1842
  store i32 %38, i32* %ebx.0.reg2mem, !insn.addr !1842
  store i32 %26, i32* %esp.0.reg2mem, !insn.addr !1842
  store i32 %35, i32* %edi.0.reg2mem, !insn.addr !1842
  br i1 %41, label %dec_label_pc_42b587, label %dec_label_pc_42b5ee, !insn.addr !1842

dec_label_pc_42b5cf:                              ; preds = %dec_label_pc_42b587
  %42 = inttoptr i32 %16 to i32*, !insn.addr !1843
  store i32 -1, i32* %42, align 4, !insn.addr !1843
  br label %dec_label_pc_42b5ee, !insn.addr !1844

dec_label_pc_42b5d5:                              ; preds = %dec_label_pc_42b577, %dec_label_pc_42b55a
  %43 = call i32 @function_404160(), !insn.addr !1845
  br label %dec_label_pc_42b5ee, !insn.addr !1845

dec_label_pc_42b5ee:                              ; preds = %dec_label_pc_42b5ad, %dec_label_pc_42b5d5, %dec_label_pc_42b5cf
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !1846
  ret i1 false, !insn.addr !1847
}

define void @"__crt_stdio_output::stream_output_adapter<char>::write_string"(i32* %this, i8* %string, i32 %length, i32* %count_written, i32* %status) local_unnamed_addr {
dec_label_pc_42bce4:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = add i32 %1, 12, !insn.addr !1848
  %3 = inttoptr i32 %2 to i32*, !insn.addr !1848
  %4 = load i32, i32* %3, align 4, !insn.addr !1848
  %5 = and i32 %4, 4096
  %6 = icmp eq i32 %5, 0, !insn.addr !1849
  br i1 %6, label %dec_label_pc_42bd0a, label %dec_label_pc_42bcf6, !insn.addr !1850

dec_label_pc_42bcf6:                              ; preds = %dec_label_pc_42bce4
  %7 = add i32 %1, 4, !insn.addr !1851
  %8 = inttoptr i32 %7 to i32*, !insn.addr !1851
  %9 = load i32, i32* %8, align 4, !insn.addr !1851
  %10 = icmp eq i32 %9, 0, !insn.addr !1851
  %11 = icmp eq i1 %10, false, !insn.addr !1852
  br i1 %11, label %dec_label_pc_42bd0a, label %dec_label_pc_42bcfe, !insn.addr !1852

dec_label_pc_42bcfe:                              ; preds = %dec_label_pc_42bcf6
  %12 = ptrtoint i32* %this to i32
  %13 = bitcast i8* %string to i32*
  %14 = load i32, i32* %13, align 4, !insn.addr !1853
  %15 = add i32 %14, %12, !insn.addr !1853
  store i32 %15, i32* %13, align 4, !insn.addr !1853
  ret void, !insn.addr !1854

dec_label_pc_42bd0a:                              ; preds = %dec_label_pc_42bcf6, %dec_label_pc_42bce4
  %16 = call i32 @function_401852(i32 %0), !insn.addr !1855
  ret void, !insn.addr !1855
}

define void @"__crt_stdio_output::output_adapter_common<char,__crt_stdio_output::stream_output_adapter<char> >::write_string_impl"(i32* %this, i8* %string, i32 %length, i32* %count_written, i32* %status) local_unnamed_addr {
dec_label_pc_42be5f:
  %esp.2.reg2mem = alloca i32, !insn.addr !1856
  %storemerge.reg2mem = alloca i32, !insn.addr !1856
  %esp.1.reg2mem = alloca i32, !insn.addr !1856
  %eax.0.reg2mem = alloca i32, !insn.addr !1856
  %esp.0.reg2mem = alloca i32, !insn.addr !1856
  %ebx.0.reg2mem = alloca i32, !insn.addr !1856
  %esi.0.reg2mem = alloca i32, !insn.addr !1856
  %stack_var_-28 = alloca i32, align 4
  %0 = load i32, i32* %count_written, align 4, !insn.addr !1857
  %1 = icmp eq i32 %0, 0, !insn.addr !1858
  %2 = icmp eq i1 %1, false, !insn.addr !1859
  store i32 %0, i32* %esi.0.reg2mem, !insn.addr !1859
  br i1 %2, label %dec_label_pc_42be83, label %dec_label_pc_42be77, !insn.addr !1859

dec_label_pc_42be77:                              ; preds = %dec_label_pc_42be5f
  %3 = call i32* @_errno(), !insn.addr !1860
  %4 = ptrtoint i32* %3 to i32, !insn.addr !1860
  store i32 %4, i32* %count_written, align 4, !insn.addr !1861
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !1861
  br label %dec_label_pc_42be83, !insn.addr !1861

dec_label_pc_42be83:                              ; preds = %dec_label_pc_42be77, %dec_label_pc_42be5f
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %5 = inttoptr i32 %esi.0.reload to i32*, !insn.addr !1862
  %6 = load i32, i32* %5, align 4, !insn.addr !1862
  store i32 0, i32* %5, align 4, !insn.addr !1863
  %7 = icmp eq i8* %string, null, !insn.addr !1864
  br i1 %7, label %dec_label_pc_42beec, label %dec_label_pc_42be9a, !insn.addr !1865

dec_label_pc_42be9a:                              ; preds = %dec_label_pc_42be83
  %8 = ptrtoint i32* %this to i32
  %9 = ptrtoint i8* %string to i32, !insn.addr !1866
  %10 = add i32 %9, %8, !insn.addr !1867
  %11 = ptrtoint i32* %stack_var_-28 to i32, !insn.addr !1868
  %12 = inttoptr i32 %length to i32*
  store i32 %8, i32* %ebx.0.reg2mem, !insn.addr !1869
  store i32 %11, i32* %esp.0.reg2mem, !insn.addr !1869
  br label %dec_label_pc_42be9e, !insn.addr !1869

dec_label_pc_42be9e:                              ; preds = %dec_label_pc_42beda, %dec_label_pc_42be9a
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %13 = inttoptr i32 %ebx.0.reload to i8*, !insn.addr !1870
  %14 = load i8, i8* %13, align 1, !insn.addr !1870
  %15 = zext i8 %14 to i32, !insn.addr !1870
  %16 = add i32 %esp.0.reload, -4, !insn.addr !1871
  %17 = inttoptr i32 %16 to i32*, !insn.addr !1871
  store i32 %15, i32* %17, align 4, !insn.addr !1871
  %18 = call i32 @function_4040cf(), !insn.addr !1872
  %19 = trunc i32 %18 to i8, !insn.addr !1873
  %20 = icmp eq i8 %19, 0, !insn.addr !1873
  %21 = icmp eq i1 %20, false, !insn.addr !1874
  store i32 %16, i32* %esp.1.reg2mem, !insn.addr !1874
  br i1 %21, label %dec_label_pc_42bed3, label %dec_label_pc_42bead, !insn.addr !1874

dec_label_pc_42bead:                              ; preds = %dec_label_pc_42be9e
  %22 = load i32, i32* %count_written, align 4, !insn.addr !1875
  %23 = icmp eq i32 %22, 0, !insn.addr !1876
  %24 = icmp eq i1 %23, false, !insn.addr !1877
  store i32 %22, i32* %eax.0.reg2mem, !insn.addr !1877
  br i1 %24, label %dec_label_pc_42bec0, label %dec_label_pc_42beb6, !insn.addr !1877

dec_label_pc_42beb6:                              ; preds = %dec_label_pc_42bead
  %25 = call i32* @_errno(), !insn.addr !1878
  %26 = ptrtoint i32* %25 to i32, !insn.addr !1878
  store i32 %26, i32* %count_written, align 4, !insn.addr !1879
  store i32 %26, i32* %eax.0.reg2mem, !insn.addr !1879
  br label %dec_label_pc_42bec0, !insn.addr !1879

dec_label_pc_42bec0:                              ; preds = %dec_label_pc_42beb6, %dec_label_pc_42bead
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %27 = inttoptr i32 %eax.0.reload to i32*, !insn.addr !1880
  %28 = load i32, i32* %27, align 4, !insn.addr !1880
  %29 = icmp eq i32 %28, 42, !insn.addr !1880
  %30 = icmp eq i1 %29, false, !insn.addr !1881
  br i1 %30, label %dec_label_pc_42bee5, label %dec_label_pc_42bec5, !insn.addr !1881

dec_label_pc_42bec5:                              ; preds = %dec_label_pc_42bec0
  %31 = add i32 %esp.0.reload, -8, !insn.addr !1882
  %32 = inttoptr i32 %31 to i32*, !insn.addr !1882
  store i32 63, i32* %32, align 4, !insn.addr !1882
  %33 = call i32 @function_4040cf(), !insn.addr !1883
  %34 = trunc i32 %33 to i8, !insn.addr !1884
  %35 = icmp eq i8 %34, 0, !insn.addr !1884
  store i32 %31, i32* %esp.1.reg2mem, !insn.addr !1885
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !1885
  store i32 %31, i32* %esp.2.reg2mem, !insn.addr !1885
  br i1 %35, label %dec_label_pc_42beda, label %dec_label_pc_42bed3, !insn.addr !1885

dec_label_pc_42bed3:                              ; preds = %dec_label_pc_42bec5, %dec_label_pc_42be9e
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %36 = load i32, i32* %12, align 4, !insn.addr !1886
  %37 = add i32 %36, 1, !insn.addr !1886
  store i32 %37, i32* %storemerge.reg2mem, !insn.addr !1887
  store i32 %esp.1.reload, i32* %esp.2.reg2mem, !insn.addr !1887
  br label %dec_label_pc_42beda, !insn.addr !1887

dec_label_pc_42beda:                              ; preds = %dec_label_pc_42bec5, %dec_label_pc_42bed3
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  store i32 %storemerge.reload, i32* %12, align 4
  %38 = add i32 %ebx.0.reload, 1, !insn.addr !1888
  %39 = icmp eq i32 %38, %10, !insn.addr !1889
  %40 = icmp eq i1 %39, false, !insn.addr !1890
  store i32 %38, i32* %ebx.0.reg2mem, !insn.addr !1890
  store i32 %esp.2.reload, i32* %esp.0.reg2mem, !insn.addr !1890
  br i1 %40, label %dec_label_pc_42be9e, label %dec_label_pc_42beec, !insn.addr !1890

dec_label_pc_42bee5:                              ; preds = %dec_label_pc_42bec0
  store i32 -1, i32* %12, align 4, !insn.addr !1891
  br label %dec_label_pc_42beec, !insn.addr !1891

dec_label_pc_42beec:                              ; preds = %dec_label_pc_42beda, %dec_label_pc_42bee5, %dec_label_pc_42be83
  %41 = load i32, i32* %5, align 4, !insn.addr !1892
  %42 = icmp eq i32 %41, 0, !insn.addr !1892
  %43 = icmp eq i1 %42, false, !insn.addr !1893
  %44 = icmp eq i32 %6, 0, !insn.addr !1894
  %or.cond = or i1 %44, %43
  br i1 %or.cond, label %dec_label_pc_42bef7, label %dec_label_pc_42bef5, !insn.addr !1893

dec_label_pc_42bef5:                              ; preds = %dec_label_pc_42beec
  store i32 %6, i32* %5, align 4, !insn.addr !1895
  br label %dec_label_pc_42bef7, !insn.addr !1895

dec_label_pc_42bef7:                              ; preds = %dec_label_pc_42bef5, %dec_label_pc_42beec
  ret void, !insn.addr !1896
}

define i32 @__acrt_locale_get_ctype_array_value(i16* %_Locale_pctype_array, i32 %_Char_value, i32 %_Mask) local_unnamed_addr {
dec_label_pc_42c01f:
  %0 = add i32 %_Char_value, 1, !insn.addr !1897
  %1 = icmp ult i32 %0, 257
  br i1 %1, label %dec_label_pc_42c031, label %dec_label_pc_42c03d, !insn.addr !1898

dec_label_pc_42c031:                              ; preds = %dec_label_pc_42c01f
  %2 = ptrtoint i16* %_Locale_pctype_array to i32, !insn.addr !1899
  %3 = mul i32 %_Char_value, 2, !insn.addr !1900
  %4 = add i32 %3, %2, !insn.addr !1900
  %5 = inttoptr i32 %4 to i16*, !insn.addr !1900
  %6 = load i16, i16* %5, align 2, !insn.addr !1900
  %7 = zext i16 %6 to i32, !insn.addr !1900
  %8 = and i32 %7, %_Mask, !insn.addr !1901
  ret i32 %8, !insn.addr !1902

dec_label_pc_42c03d:                              ; preds = %dec_label_pc_42c01f
  ret i32 0, !insn.addr !1903
}

define i32 @__stdio_common_vfprintf(i64 %options, i32 %stream, i8* %format, i32 %locale, i8* %arglist) local_unnamed_addr {
dec_label_pc_42c049:
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_-28 = alloca i8*, align 4
  %stack_var_-12 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  store i8* %format, i8** %stack_var_-12, align 4, !insn.addr !1904
  %0 = icmp eq i8* %format, null, !insn.addr !1905
  %1 = icmp eq i32 %locale, 0, !insn.addr !1906
  %or.cond = or i1 %0, %1
  br i1 %or.cond, label %dec_label_pc_42c079, label %dec_label_pc_42c092, !insn.addr !1907

dec_label_pc_42c079:                              ; preds = %dec_label_pc_42c049
  %2 = call i32* @_errno(), !insn.addr !1908
  store i32 22, i32* %2, align 4, !insn.addr !1909
  call void @_invalid_parameter_noinfo(), !insn.addr !1910
  ret i32 -1, !insn.addr !1911

dec_label_pc_42c092:                              ; preds = %dec_label_pc_42c049
  store i8* %format, i8** %stack_var_-28, align 4, !insn.addr !1912
  %3 = ptrtoint i8** %stack_var_-12 to i32, !insn.addr !1913
  store i32 %3, i32* %stack_var_-60, align 4, !insn.addr !1913
  store i8* %format, i8** %stack_var_-32, align 4, !insn.addr !1914
  %4 = ptrtoint i8** %stack_var_-32 to i32, !insn.addr !1915
  %5 = bitcast i8** %stack_var_-28 to i32*, !insn.addr !1916
  %6 = bitcast i8** %stack_var_-12 to i32*, !insn.addr !1916
  %7 = call i32 @"__crt_seh_guarded_call<int>::operator()<<lambda_c29ee0499b841886b80d843682cc403a>,<lambda_0be4ab1c2a6918fda4e39227d83ea893> &,<lambda_5a3ed3da325c8ea037a470278c0f2d16> >"(i32 %4, i32* nonnull %stack_var_-60, i32* nonnull %5, i32* nonnull %6), !insn.addr !1916
  ret i32 %7, !insn.addr !1917
}

define i64 @"__crt_strtox::divide"(%"__crt_strtox::big_integer"* %numerator, %"__crt_strtox::big_integer"* %denominator) local_unnamed_addr {
dec_label_pc_437db0:
  %merge.reg2mem = alloca i64, !insn.addr !1918
  %ecx.5.reg2mem = alloca i32, !insn.addr !1918
  %edx.4.reg2mem = alloca i32, !insn.addr !1918
  %eax.9.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-32.2.reg2mem = alloca i64, !insn.addr !1918
  %stack_var_-12.2.off0.reg2mem = alloca i32, !insn.addr !1918
  %.reg2mem127 = alloca i32, !insn.addr !1918
  %ebx.12.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-12.1.off0.reg2mem = alloca i32, !insn.addr !1918
  %.pre-phi.reg2mem = alloca i32, !insn.addr !1918
  %ebx.11.reg2mem = alloca i32, !insn.addr !1918
  %edi.9.reg2mem = alloca i32, !insn.addr !1918
  %esi.8.in.reg2mem = alloca i32, !insn.addr !1918
  %ebx.9.reg2mem = alloca i32, !insn.addr !1918
  %edx.3.reg2mem = alloca i32, !insn.addr !1918
  %edi.6.reg2mem = alloca i32, !insn.addr !1918
  %esi.5.reg2mem = alloca i32, !insn.addr !1918
  %ebx.7.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-24.1.reg2mem = alloca i32, !insn.addr !1918
  %uu_num_-40.2.in.in.reg2mem = alloca i32, !insn.addr !1918
  %esp.5.reg2mem = alloca i32, !insn.addr !1918
  %uu_quo_-72.3.reg2mem = alloca i64, !insn.addr !1918
  %stack_var_-8.1.off0.reg2mem = alloca i32, !insn.addr !1918
  %uu_quo_-68.3.off0.reg2mem = alloca i32, !insn.addr !1918
  %.reg2mem = alloca i32, !insn.addr !1918
  %edi.54792.reg2mem = alloca i32, !insn.addr !1918
  %ebx.44693.reg2mem = alloca i32, !insn.addr !1918
  %uu_quo_-68.1.off04494.reg2mem = alloca i32, !insn.addr !1918
  %uu_num_-40.1.off04395.reg2mem = alloca i32, !insn.addr !1918
  %uu_quo_-68.0.off081.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-8.0.off082.reg2mem = alloca i32, !insn.addr !1918
  %uu_quo_-72.083.reg2mem = alloca i64, !insn.addr !1918
  %esp.384.reg2mem = alloca i32, !insn.addr !1918
  %edi.485.reg2mem = alloca i32, !insn.addr !1918
  %edx.2.reg2mem = alloca i32, !insn.addr !1918
  %ecx.3.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-24.0.reg2mem = alloca i32, !insn.addr !1918
  %storemerge12.reg2mem = alloca i32, !insn.addr !1918
  %esp.2.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-80.0.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-64.0.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-60.0.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-28.1.in.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-12.0.off0.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-36.1.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-52.0.reg2mem = alloca i32, !insn.addr !1918
  %edx.1.reg2mem = alloca i32, !insn.addr !1918
  %esi.1.reg2mem = alloca i32, !insn.addr !1918
  %ecx.1.reg2mem = alloca i32, !insn.addr !1918
  %eax.0.reg2mem = alloca i32, !insn.addr !1918
  %edi.0.reg2mem = alloca i32, !insn.addr !1918
  %esi.0.reg2mem = alloca i32, !insn.addr !1918
  %esp.0.reg2mem = alloca i32, !insn.addr !1918
  %ebx.0.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-32.0.in.reg2mem = alloca i32, !insn.addr !1918
  %stack_var_-540 = alloca i32, align 4
  %stack_var_-556 = alloca i32, align 4
  %0 = getelementptr inbounds %"__crt_strtox::big_integer", %"__crt_strtox::big_integer"* %numerator, i32 0, i32 0
  %1 = load i32, i32* %0, align 4, !insn.addr !1919
  %2 = icmp eq i32 %1, 0, !insn.addr !1920
  store i64 0, i64* %merge.reg2mem, !insn.addr !1921
  br i1 %2, label %dec_label_pc_438231, label %dec_label_pc_437dcb, !insn.addr !1921

dec_label_pc_437dcb:                              ; preds = %dec_label_pc_437db0
  %3 = getelementptr inbounds %"__crt_strtox::big_integer", %"__crt_strtox::big_integer"* %denominator, i32 0, i32 0
  %4 = load i32, i32* %3, align 4, !insn.addr !1922
  %5 = icmp eq i32 %4, 0, !insn.addr !1923
  store i64 0, i64* %merge.reg2mem, !insn.addr !1924
  br i1 %5, label %dec_label_pc_438231, label %dec_label_pc_437ddb, !insn.addr !1924

dec_label_pc_437ddb:                              ; preds = %dec_label_pc_437dcb
  %6 = ptrtoint %"__crt_strtox::big_integer"* %numerator to i32
  %7 = ptrtoint i32* %stack_var_-556 to i32, !insn.addr !1925
  %8 = ptrtoint %"__crt_strtox::big_integer"* %denominator to i32, !insn.addr !1926
  %9 = add i32 %4, -1, !insn.addr !1927
  %10 = add i32 %1, -1, !insn.addr !1928
  %11 = icmp eq i32 %9, 0, !insn.addr !1929
  %12 = icmp eq i1 %11, false, !insn.addr !1930
  br i1 %12, label %dec_label_pc_437f17, label %dec_label_pc_437dec, !insn.addr !1930

dec_label_pc_437dec:                              ; preds = %dec_label_pc_437ddb
  %13 = add i32 %8, 4, !insn.addr !1931
  %14 = inttoptr i32 %13 to i32*, !insn.addr !1931
  %15 = load i32, i32* %14, align 4, !insn.addr !1931
  %16 = icmp eq i32 %15, 1, !insn.addr !1932
  %17 = icmp eq i1 %16, false, !insn.addr !1933
  br i1 %17, label %dec_label_pc_437e26, label %dec_label_pc_437df7, !insn.addr !1933

dec_label_pc_437df7:                              ; preds = %dec_label_pc_437dec
  %18 = add i32 %6, 4, !insn.addr !1934
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1934
  %20 = load i32, i32* %19, align 4, !insn.addr !1934
  %21 = bitcast i32* %stack_var_-540 to i8*
  %22 = inttoptr i32 %18 to i8*, !insn.addr !1935
  store i32 %9, i32* %0, align 4, !insn.addr !1936
  %23 = call i32 @memcpy_s_1(i8* %22, i32 460, i8* nonnull %21, i32 %9), !insn.addr !1937
  %24 = sext i32 %20 to i64, !insn.addr !1938
  ret i64 %24, !insn.addr !1938

dec_label_pc_437e26:                              ; preds = %dec_label_pc_437dec
  %25 = icmp eq i32 %10, 0, !insn.addr !1939
  %26 = icmp eq i1 %25, false, !insn.addr !1940
  br i1 %26, label %dec_label_pc_437e82, label %dec_label_pc_437e2a, !insn.addr !1940

dec_label_pc_437e2a:                              ; preds = %dec_label_pc_437e26
  %27 = add i32 %6, 4, !insn.addr !1941
  %28 = inttoptr i32 %27 to i32*, !insn.addr !1941
  %29 = load i32, i32* %28, align 4, !insn.addr !1941
  %30 = bitcast i32* %stack_var_-540 to i8*
  %31 = inttoptr i32 %27 to i8*, !insn.addr !1942
  store i32 %10, i32* %0, align 4, !insn.addr !1943
  %32 = call i32 @memcpy_s_1(i8* %31, i32 460, i8* nonnull %30, i32 %10), !insn.addr !1944
  %33 = udiv i32 %29, %15
  %34 = urem i32 %29, %15, !insn.addr !1945
  %35 = icmp ne i32 %34, 0, !insn.addr !1946
  store i32 %34, i32* %28, align 4, !insn.addr !1947
  %36 = zext i1 %35 to i32, !insn.addr !1948
  store i32 %36, i32* %0, align 4, !insn.addr !1949
  %37 = sext i32 %33 to i64, !insn.addr !1950
  ret i64 %37, !insn.addr !1950

dec_label_pc_437e82:                              ; preds = %dec_label_pc_437e26
  %38 = mul i32 %10, 4, !insn.addr !1951
  %39 = add i32 %6, 4
  %40 = add i32 %38, %39, !insn.addr !1952
  store i32 %40, i32* %stack_var_-32.0.in.reg2mem, !insn.addr !1953
  store i32 %6, i32* %ebx.0.reg2mem, !insn.addr !1953
  store i32 %7, i32* %esp.0.reg2mem, !insn.addr !1953
  store i32 %1, i32* %esi.0.reg2mem, !insn.addr !1953
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !1953
  br label %dec_label_pc_437e90, !insn.addr !1953

dec_label_pc_437e90:                              ; preds = %dec_label_pc_437e90, %dec_label_pc_437e82
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %stack_var_-32.0.in.reload = load i32, i32* %stack_var_-32.0.in.reg2mem
  %41 = add i32 %esp.0.reload, -4, !insn.addr !1954
  %42 = inttoptr i32 %41 to i32*, !insn.addr !1954
  store i32 %ebx.0.reload, i32* %42, align 4, !insn.addr !1954
  %43 = add i32 %esp.0.reload, -8, !insn.addr !1955
  %44 = inttoptr i32 %43 to i32*, !insn.addr !1955
  store i32 0, i32* %44, align 4, !insn.addr !1955
  %45 = add i32 %esp.0.reload, -12, !insn.addr !1956
  %46 = inttoptr i32 %45 to i32*, !insn.addr !1956
  store i32 %15, i32* %46, align 4, !insn.addr !1956
  %47 = inttoptr i32 %stack_var_-32.0.in.reload to i32*, !insn.addr !1957
  %48 = load i32, i32* %47, align 4, !insn.addr !1957
  %49 = add i32 %esp.0.reload, -16, !insn.addr !1958
  %50 = inttoptr i32 %49 to i32*, !insn.addr !1958
  store i32 %edi.0.reload, i32* %50, align 4, !insn.addr !1958
  %51 = add i32 %esp.0.reload, -20
  %52 = inttoptr i32 %51 to i32*
  store i32 %48, i32* %52, align 4, !insn.addr !1959
  %53 = call i32 @function_401500(), !insn.addr !1960
  %54 = load i32, i32* %52, align 4, !insn.addr !1961
  %55 = add i32 %stack_var_-32.0.in.reload, -4, !insn.addr !1962
  %56 = add i32 %esi.0.reload, -1, !insn.addr !1963
  %57 = icmp eq i32 %56, 0, !insn.addr !1963
  %58 = icmp eq i1 %57, false, !insn.addr !1964
  store i32 %55, i32* %stack_var_-32.0.in.reg2mem, !insn.addr !1964
  store i32 %54, i32* %ebx.0.reg2mem, !insn.addr !1964
  store i32 %49, i32* %esp.0.reg2mem, !insn.addr !1964
  store i32 %56, i32* %esi.0.reg2mem, !insn.addr !1964
  store i32 %stack_var_-32.0.in.reload, i32* %edi.0.reg2mem, !insn.addr !1964
  br i1 %58, label %dec_label_pc_437e90, label %dec_label_pc_437ecd, !insn.addr !1964

dec_label_pc_437ecd:                              ; preds = %dec_label_pc_437e90
  %phitmp16 = sext i32 %53 to i64
  store i32 0, i32* %52, align 4, !insn.addr !1965
  %59 = add i32 %esp.0.reload, -24, !insn.addr !1966
  %60 = inttoptr i32 %59 to i32*, !insn.addr !1966
  %61 = ptrtoint i32* %stack_var_-540 to i32, !insn.addr !1966
  store i32 %61, i32* %60, align 4, !insn.addr !1966
  store i32 0, i32* %0, align 4, !insn.addr !1967
  %62 = add i32 %esp.0.reload, -28, !insn.addr !1968
  %63 = inttoptr i32 %62 to i32*, !insn.addr !1968
  store i32 460, i32* %63, align 4, !insn.addr !1968
  %64 = add i32 %esp.0.reload, -32, !insn.addr !1969
  %65 = inttoptr i32 %64 to i32*, !insn.addr !1969
  store i32 %39, i32* %65, align 4, !insn.addr !1969
  %66 = call i32 @memcpy_s_1(i8* null, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !1970
  %67 = icmp eq i32 %ebx.0.reload, 0, !insn.addr !1971
  %68 = inttoptr i32 %39 to i32*, !insn.addr !1972
  store i32 %stack_var_-32.0.in.reload, i32* %68, align 4, !insn.addr !1972
  %69 = add i32 %6, 8, !insn.addr !1973
  %70 = inttoptr i32 %69 to i32*, !insn.addr !1973
  store i32 %ebx.0.reload, i32* %70, align 4, !insn.addr !1973
  %71 = select i1 %67, i32 1, i32 2, !insn.addr !1974
  store i32 %71, i32* %0, align 4, !insn.addr !1975
  ret i64 %phitmp16, !insn.addr !1976

dec_label_pc_437f17:                              ; preds = %dec_label_pc_437ddb
  %72 = icmp ult i32 %10, %9
  store i64 0, i64* %merge.reg2mem, !insn.addr !1977
  br i1 %72, label %dec_label_pc_438231, label %dec_label_pc_437f1f, !insn.addr !1977

dec_label_pc_437f1f:                              ; preds = %dec_label_pc_437f17
  %73 = sub i32 %10, %9, !insn.addr !1978
  %74 = icmp slt i32 %10, %73, !insn.addr !1979
  br i1 %74, label %dec_label_pc_437f4b, label %dec_label_pc_437f29, !insn.addr !1979

dec_label_pc_437f29:                              ; preds = %dec_label_pc_437f1f
  %75 = mul i32 %9, 4, !insn.addr !1980
  %76 = mul i32 %10, 4, !insn.addr !1981
  %77 = add i32 %6, 4, !insn.addr !1982
  %78 = add i32 %77, %76, !insn.addr !1982
  %79 = add i32 %8, 4, !insn.addr !1980
  %80 = add i32 %79, %75, !insn.addr !1983
  store i32 %10, i32* %eax.0.reg2mem, !insn.addr !1983
  store i32 %78, i32* %ecx.1.reg2mem, !insn.addr !1983
  store i32 %80, i32* %esi.1.reg2mem, !insn.addr !1983
  br label %dec_label_pc_437f36, !insn.addr !1983

dec_label_pc_437f36:                              ; preds = %dec_label_pc_437f3c, %dec_label_pc_437f29
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %81 = inttoptr i32 %esi.1.reload to i32*, !insn.addr !1984
  %82 = load i32, i32* %81, align 4, !insn.addr !1984
  %83 = inttoptr i32 %ecx.1.reload to i32*, !insn.addr !1985
  %84 = load i32, i32* %83, align 4, !insn.addr !1985
  %85 = icmp eq i32 %82, %84, !insn.addr !1985
  %86 = icmp eq i1 %85, false, !insn.addr !1986
  br i1 %86, label %dec_label_pc_437f49, label %dec_label_pc_437f3c, !insn.addr !1986

dec_label_pc_437f3c:                              ; preds = %dec_label_pc_437f36
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %87 = add i32 %eax.0.reload, -1, !insn.addr !1987
  %88 = add i32 %esi.1.reload, -4, !insn.addr !1988
  %89 = add i32 %ecx.1.reload, -4, !insn.addr !1989
  %90 = icmp slt i32 %87, %73, !insn.addr !1990
  store i32 %87, i32* %eax.0.reg2mem, !insn.addr !1990
  store i32 %89, i32* %ecx.1.reg2mem, !insn.addr !1990
  store i32 %88, i32* %esi.1.reg2mem, !insn.addr !1990
  br i1 %90, label %dec_label_pc_437f4b, label %dec_label_pc_437f36, !insn.addr !1990

dec_label_pc_437f49:                              ; preds = %dec_label_pc_437f36
  %91 = icmp ult i32 %82, %84, !insn.addr !1985
  %92 = icmp eq i1 %91, false, !insn.addr !1991
  store i32 %73, i32* %edx.1.reg2mem, !insn.addr !1991
  br i1 %92, label %dec_label_pc_437f4c, label %dec_label_pc_437f4b, !insn.addr !1991

dec_label_pc_437f4b:                              ; preds = %dec_label_pc_437f3c, %dec_label_pc_437f49, %dec_label_pc_437f1f
  %93 = add i32 %73, 1, !insn.addr !1992
  store i32 %93, i32* %edx.1.reg2mem, !insn.addr !1992
  br label %dec_label_pc_437f4c, !insn.addr !1992

dec_label_pc_437f4c:                              ; preds = %dec_label_pc_437f4b, %dec_label_pc_437f49
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %94 = icmp eq i32 %edx.1.reload, 0, !insn.addr !1993
  store i64 0, i64* %merge.reg2mem, !insn.addr !1994
  br i1 %94, label %dec_label_pc_438231, label %dec_label_pc_437f54, !insn.addr !1994

dec_label_pc_437f54:                              ; preds = %dec_label_pc_437f4c
  %95 = mul i32 %4, 4, !insn.addr !1995
  %96 = add i32 %95, %8
  %97 = inttoptr i32 %96 to i32*, !insn.addr !1995
  %98 = load i32, i32* %97, align 4, !insn.addr !1995
  %99 = add i32 %96, -4, !insn.addr !1996
  %100 = inttoptr i32 %99 to i32*, !insn.addr !1996
  %101 = load i32, i32* %100, align 4, !insn.addr !1996
  %102 = call i32 @llvm.ctlz.i32(i32 %98, i1 false), !range !1997, !insn.addr !1998
  %103 = sub nsw i32 32, %102, !insn.addr !1999
  %104 = icmp eq i32 %102, 0, !insn.addr !2000
  store i32 %98, i32* %stack_var_-52.0.reg2mem, !insn.addr !2001
  store i32 %101, i32* %stack_var_-36.1.reg2mem, !insn.addr !2001
  br i1 %104, label %dec_label_pc_437fb2, label %dec_label_pc_437f8b, !insn.addr !2001

dec_label_pc_437f8b:                              ; preds = %dec_label_pc_437f54
  %105 = and i32 %103, 31, !insn.addr !2002
  %106 = lshr i32 %101, %105
  %107 = and i32 %102, 31, !insn.addr !2003
  %108 = shl i32 %101, %107
  %109 = shl i32 %98, %107
  %110 = or i32 %106, %109, !insn.addr !2004
  %111 = icmp ult i32 %4, 3
  store i32 %110, i32* %stack_var_-52.0.reg2mem, !insn.addr !2005
  store i32 %108, i32* %stack_var_-36.1.reg2mem, !insn.addr !2005
  br i1 %111, label %dec_label_pc_437fb2, label %dec_label_pc_437fa3, !insn.addr !2005

dec_label_pc_437fa3:                              ; preds = %dec_label_pc_437f8b
  %112 = add i32 %96, -8, !insn.addr !2006
  %113 = inttoptr i32 %112 to i32*, !insn.addr !2006
  %114 = load i32, i32* %113, align 4, !insn.addr !2006
  %115 = lshr i32 %114, %105
  %116 = or i32 %115, %108, !insn.addr !2007
  store i32 %110, i32* %stack_var_-52.0.reg2mem, !insn.addr !2007
  store i32 %116, i32* %stack_var_-36.1.reg2mem, !insn.addr !2007
  br label %dec_label_pc_437fb2, !insn.addr !2007

dec_label_pc_437fb2:                              ; preds = %dec_label_pc_437fa3, %dec_label_pc_437f8b, %dec_label_pc_437f54
  %117 = add i32 %edx.1.reload, -1, !insn.addr !2008
  %118 = icmp slt i32 %117, 0, !insn.addr !2008
  store i32 %1, i32* %.reg2mem127, !insn.addr !2009
  store i32 %10, i32* %stack_var_-12.2.off0.reg2mem, !insn.addr !2009
  store i64 0, i64* %stack_var_-32.2.reg2mem, !insn.addr !2009
  br i1 %118, label %dec_label_pc_4381f5, label %dec_label_pc_437fc7, !insn.addr !2009

dec_label_pc_437fc7:                              ; preds = %dec_label_pc_437fb2
  %stack_var_-36.1.reload = load i32, i32* %stack_var_-36.1.reg2mem
  %stack_var_-52.0.reload = load i32, i32* %stack_var_-52.0.reg2mem
  %119 = add i32 %117, %4, !insn.addr !2010
  %120 = add i32 %6, 4, !insn.addr !2011
  %121 = mul i32 %117, 4, !insn.addr !2012
  %122 = add i32 %120, %121, !insn.addr !2012
  %123 = add i32 %6, -4, !insn.addr !2013
  %124 = mul i32 %119, 4, !insn.addr !2014
  %125 = add i32 %123, %124, !insn.addr !2014
  %126 = and i32 %103, 31
  %127 = and i32 %102, 31
  %128 = add i32 %6, -8
  store i32 %10, i32* %stack_var_-12.0.off0.reg2mem, !insn.addr !2015
  store i32 %117, i32* %stack_var_-28.1.in.reg2mem, !insn.addr !2015
  store i32 %119, i32* %stack_var_-60.0.reg2mem, !insn.addr !2015
  store i32 %122, i32* %stack_var_-64.0.reg2mem, !insn.addr !2015
  store i32 %125, i32* %stack_var_-80.0.reg2mem, !insn.addr !2015
  store i32 %7, i32* %esp.2.reg2mem, !insn.addr !2015
  br label %dec_label_pc_437fe2, !insn.addr !2015

dec_label_pc_437fe2:                              ; preds = %dec_label_pc_4381bf, %dec_label_pc_437fc7
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %stack_var_-80.0.reload = load i32, i32* %stack_var_-80.0.reg2mem
  %stack_var_-64.0.reload = load i32, i32* %stack_var_-64.0.reg2mem
  %stack_var_-60.0.reload = load i32, i32* %stack_var_-60.0.reg2mem
  %stack_var_-28.1.in.reload = load i32, i32* %stack_var_-28.1.in.reg2mem
  %stack_var_-12.0.off0.reload = load i32, i32* %stack_var_-12.0.off0.reg2mem
  %129 = icmp ugt i32 %stack_var_-60.0.reload, %stack_var_-12.0.off0.reload
  store i32 0, i32* %storemerge12.reg2mem, !insn.addr !2016
  br i1 %129, label %dec_label_pc_437fee, label %dec_label_pc_437fe7, !insn.addr !2016

dec_label_pc_437fe7:                              ; preds = %dec_label_pc_437fe2
  %130 = add i32 %stack_var_-80.0.reload, 8, !insn.addr !2017
  %131 = inttoptr i32 %130 to i32*, !insn.addr !2017
  %132 = load i32, i32* %131, align 4, !insn.addr !2017
  store i32 %132, i32* %storemerge12.reg2mem, !insn.addr !2018
  br label %dec_label_pc_437fee, !insn.addr !2018

dec_label_pc_437fee:                              ; preds = %dec_label_pc_437fe2, %dec_label_pc_437fe7
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %133 = add i32 %stack_var_-80.0.reload, 4, !insn.addr !2019
  %134 = inttoptr i32 %133 to i32*, !insn.addr !2019
  %135 = load i32, i32* %134, align 4, !insn.addr !2019
  %136 = inttoptr i32 %stack_var_-80.0.reload to i32*, !insn.addr !2020
  %137 = load i32, i32* %136, align 4, !insn.addr !2020
  store i32 %137, i32* %stack_var_-24.0.reg2mem, !insn.addr !2021
  store i32 %137, i32* %ecx.3.reg2mem, !insn.addr !2021
  store i32 %135, i32* %edx.2.reg2mem, !insn.addr !2021
  br i1 %104, label %dec_label_pc_438050, label %dec_label_pc_438007, !insn.addr !2021

dec_label_pc_438007:                              ; preds = %dec_label_pc_437fee
  %138 = lshr i32 %137, %126
  %139 = call i32 @function_402e78(), !insn.addr !2022
  %140 = or i32 %139, %138, !insn.addr !2023
  %141 = shl i32 %137, %127
  %142 = icmp ult i32 %stack_var_-60.0.reload, 3, !insn.addr !2024
  store i32 %141, i32* %stack_var_-24.0.reg2mem, !insn.addr !2025
  store i32 %102, i32* %ecx.3.reg2mem, !insn.addr !2025
  store i32 %140, i32* %edx.2.reg2mem, !insn.addr !2025
  br i1 %142, label %dec_label_pc_438050, label %dec_label_pc_438039, !insn.addr !2025

dec_label_pc_438039:                              ; preds = %dec_label_pc_438007
  %143 = add i32 %stack_var_-28.1.in.reload, %4, !insn.addr !2026
  %144 = mul i32 %143, 4, !insn.addr !2027
  %145 = add i32 %128, %144, !insn.addr !2027
  %146 = inttoptr i32 %145 to i32*, !insn.addr !2027
  %147 = load i32, i32* %146, align 4, !insn.addr !2027
  %148 = lshr i32 %147, %126
  %149 = or i32 %148, %141, !insn.addr !2028
  store i32 %149, i32* %stack_var_-24.0.reg2mem, !insn.addr !2029
  store i32 %103, i32* %ecx.3.reg2mem, !insn.addr !2029
  store i32 %140, i32* %edx.2.reg2mem, !insn.addr !2029
  br label %dec_label_pc_438050, !insn.addr !2029

dec_label_pc_438050:                              ; preds = %dec_label_pc_438039, %dec_label_pc_438007, %dec_label_pc_437fee
  %edx.2.reload = load i32, i32* %edx.2.reg2mem
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %stack_var_-24.0.reload = load i32, i32* %stack_var_-24.0.reg2mem
  %150 = add i32 %esp.2.reload, -4, !insn.addr !2030
  %151 = inttoptr i32 %150 to i32*, !insn.addr !2030
  store i32 %6, i32* %151, align 4, !insn.addr !2030
  %152 = add i32 %esp.2.reload, -8, !insn.addr !2031
  %153 = inttoptr i32 %152 to i32*, !insn.addr !2031
  store i32 0, i32* %153, align 4, !insn.addr !2031
  %154 = add i32 %esp.2.reload, -12, !insn.addr !2032
  %155 = inttoptr i32 %154 to i32*, !insn.addr !2032
  store i32 %stack_var_-52.0.reload, i32* %155, align 4, !insn.addr !2032
  %156 = add i32 %esp.2.reload, -16, !insn.addr !2033
  %157 = inttoptr i32 %156 to i32*, !insn.addr !2033
  store i32 %storemerge12.reload, i32* %157, align 4, !insn.addr !2033
  %158 = add i32 %esp.2.reload, -20, !insn.addr !2034
  %159 = inttoptr i32 %158 to i32*, !insn.addr !2034
  store i32 %edx.2.reload, i32* %159, align 4, !insn.addr !2034
  %160 = call i32 @function_401500(), !insn.addr !2035
  %161 = sext i32 %160 to i64, !insn.addr !2036
  %162 = icmp eq i32 %edx.2.reload, 0, !insn.addr !2037
  %163 = icmp eq i1 %162, false, !insn.addr !2038
  store i32 %ecx.3.reload, i32* %edi.485.reg2mem, !insn.addr !2038
  store i32 %156, i32* %esp.384.reg2mem, !insn.addr !2038
  store i64 %161, i64* %uu_quo_-72.083.reg2mem, !insn.addr !2038
  store i32 %160, i32* %stack_var_-8.0.off082.reg2mem, !insn.addr !2038
  store i32 %edx.2.reload, i32* %uu_quo_-68.0.off081.reg2mem, !insn.addr !2038
  br i1 %163, label %dec_label_pc_4380ac, label %dec_label_pc_4380b7.preheader, !insn.addr !2038

dec_label_pc_4380ac:                              ; preds = %dec_label_pc_438050
  store i32 0, i32* %159, align 4, !insn.addr !2039
  %164 = add i32 %esp.2.reload, -24, !insn.addr !2040
  %165 = inttoptr i32 %164 to i32*, !insn.addr !2040
  store i32 %stack_var_-52.0.reload, i32* %165, align 4, !insn.addr !2040
  %166 = add i32 %160, 1, !insn.addr !2041
  %167 = icmp eq i32 %160, -1, !insn.addr !2041
  %168 = zext i1 %167 to i32, !insn.addr !2042
  %169 = add i32 %edx.2.reload, -1, !insn.addr !2042
  %170 = add i32 %169, %168, !insn.addr !2042
  %171 = add i32 %esp.2.reload, -28, !insn.addr !2043
  %172 = inttoptr i32 %171 to i32*, !insn.addr !2043
  store i32 %170, i32* %172, align 4, !insn.addr !2043
  %173 = add i32 %esp.2.reload, -32, !insn.addr !2044
  %174 = inttoptr i32 %173 to i32*, !insn.addr !2044
  store i32 %166, i32* %174, align 4, !insn.addr !2044
  %175 = call i32 @function_401d8e(), !insn.addr !2045
  %176 = add i32 %175, %ecx.3.reload, !insn.addr !2046
  %177 = icmp ult i32 %176, %ecx.3.reload, !insn.addr !2046
  %178 = sext i1 %177 to i32, !insn.addr !2047
  %179 = icmp eq i32 %edx.2.reload, %178, !insn.addr !2048
  store i32 %176, i32* %edi.485.reg2mem, !insn.addr !2049
  store i32 %173, i32* %esp.384.reg2mem, !insn.addr !2049
  store i64 -1, i64* %uu_quo_-72.083.reg2mem, !insn.addr !2049
  store i32 -1, i32* %stack_var_-8.0.off082.reg2mem, !insn.addr !2049
  store i32 0, i32* %uu_quo_-68.0.off081.reg2mem, !insn.addr !2049
  store i32 0, i32* %uu_quo_-68.3.off0.reg2mem, !insn.addr !2049
  store i32 -1, i32* %stack_var_-8.1.off0.reg2mem, !insn.addr !2049
  store i64 -1, i64* %uu_quo_-72.3.reg2mem, !insn.addr !2049
  store i32 %173, i32* %esp.5.reg2mem, !insn.addr !2049
  br i1 %179, label %dec_label_pc_4380b7.preheader, label %dec_label_pc_438100, !insn.addr !2049

dec_label_pc_4380b7.preheader:                    ; preds = %dec_label_pc_438050, %dec_label_pc_4380ac
  %uu_quo_-68.0.off081.reload = load i32, i32* %uu_quo_-68.0.off081.reg2mem
  %stack_var_-8.0.off082.reload = load i32, i32* %stack_var_-8.0.off082.reg2mem
  %uu_quo_-72.083.reload = load i64, i64* %uu_quo_-72.083.reg2mem
  %esp.384.reload = load i32, i32* %esp.384.reg2mem
  %edi.485.reload = load i32, i32* %edi.485.reg2mem
  %180 = add i32 %esp.384.reload, -4, !insn.addr !2050
  %181 = inttoptr i32 %180 to i32*, !insn.addr !2050
  store i32 %uu_quo_-68.0.off081.reload, i32* %181, align 4, !insn.addr !2050
  %182 = add i32 %esp.384.reload, -8, !insn.addr !2051
  %183 = inttoptr i32 %182 to i32*, !insn.addr !2051
  store i32 %stack_var_-8.0.off082.reload, i32* %183, align 4, !insn.addr !2051
  %184 = add i32 %esp.384.reload, -12, !insn.addr !2052
  %185 = inttoptr i32 %184 to i32*, !insn.addr !2052
  store i32 0, i32* %185, align 4, !insn.addr !2052
  %186 = add i32 %esp.384.reload, -16, !insn.addr !2053
  %187 = inttoptr i32 %186 to i32*, !insn.addr !2053
  store i32 %stack_var_-36.1.reload, i32* %187, align 4, !insn.addr !2053
  %188 = call i32 @function_401d8e(), !insn.addr !2054
  %189 = icmp ult i32 %edx.2.reload, %edi.485.reload, !insn.addr !2055
  store i32 %uu_quo_-68.0.off081.reload, i32* %uu_quo_-68.3.off0.reg2mem, !insn.addr !2056
  store i32 %stack_var_-8.0.off082.reload, i32* %stack_var_-8.1.off0.reg2mem, !insn.addr !2056
  store i64 %uu_quo_-72.083.reload, i64* %uu_quo_-72.3.reg2mem, !insn.addr !2056
  store i32 %186, i32* %esp.5.reg2mem, !insn.addr !2056
  br i1 %189, label %dec_label_pc_438100, label %dec_label_pc_4380d1.preheader, !insn.addr !2056

dec_label_pc_4380d1.preheader:                    ; preds = %dec_label_pc_4380b7.preheader
  %190 = icmp ugt i32 %edx.2.reload, %edi.485.reload
  %191 = icmp ugt i32 %188, %stack_var_-24.0.reload
  %or.cond91 = or i1 %191, %190
  store i32 0, i32* %uu_num_-40.1.off04395.reg2mem, !insn.addr !2057
  store i32 %uu_quo_-68.0.off081.reload, i32* %uu_quo_-68.1.off04494.reg2mem, !insn.addr !2057
  store i32 %stack_var_-8.0.off082.reload, i32* %ebx.44693.reg2mem, !insn.addr !2057
  store i32 %edi.485.reload, i32* %edi.54792.reg2mem, !insn.addr !2057
  store i32 %186, i32* %.reg2mem, !insn.addr !2057
  store i32 %uu_quo_-68.0.off081.reload, i32* %uu_quo_-68.3.off0.reg2mem, !insn.addr !2057
  store i32 %stack_var_-8.0.off082.reload, i32* %stack_var_-8.1.off0.reg2mem, !insn.addr !2057
  store i64 %uu_quo_-72.083.reload, i64* %uu_quo_-72.3.reg2mem, !insn.addr !2057
  store i32 %186, i32* %esp.5.reg2mem, !insn.addr !2057
  br i1 %or.cond91, label %dec_label_pc_4380d8, label %dec_label_pc_438100, !insn.addr !2057

dec_label_pc_4380b7:                              ; preds = %dec_label_pc_4380d8
  %192 = add i32 %.reload, -4, !insn.addr !2050
  %193 = inttoptr i32 %192 to i32*, !insn.addr !2050
  store i32 %209, i32* %193, align 4, !insn.addr !2050
  %194 = add i32 %.reload, -8, !insn.addr !2051
  %195 = inttoptr i32 %194 to i32*, !insn.addr !2051
  store i32 %204, i32* %195, align 4, !insn.addr !2051
  %196 = add i32 %.reload, -12, !insn.addr !2052
  %197 = inttoptr i32 %196 to i32*, !insn.addr !2052
  store i32 0, i32* %197, align 4, !insn.addr !2052
  %198 = add i32 %.reload, -16, !insn.addr !2053
  %199 = inttoptr i32 %198 to i32*, !insn.addr !2053
  store i32 %stack_var_-36.1.reload, i32* %199, align 4, !insn.addr !2053
  %200 = call i32 @function_401d8e(), !insn.addr !2054
  %201 = icmp ult i32 %edx.2.reload, %210, !insn.addr !2055
  store i32 %209, i32* %uu_quo_-68.3.off0.reg2mem, !insn.addr !2056
  store i32 %204, i32* %stack_var_-8.1.off0.reg2mem, !insn.addr !2056
  store i64 %206, i64* %uu_quo_-72.3.reg2mem, !insn.addr !2056
  store i32 %198, i32* %esp.5.reg2mem, !insn.addr !2056
  br i1 %201, label %dec_label_pc_438100, label %dec_label_pc_4380d1, !insn.addr !2056

dec_label_pc_4380d1:                              ; preds = %dec_label_pc_4380b7
  %202 = icmp ugt i32 %edx.2.reload, %210
  %203 = icmp ugt i32 %200, %stack_var_-24.0.reload
  %or.cond = or i1 %203, %202
  store i32 %213, i32* %uu_num_-40.1.off04395.reg2mem, !insn.addr !2057
  store i32 %209, i32* %uu_quo_-68.1.off04494.reg2mem, !insn.addr !2057
  store i32 %204, i32* %ebx.44693.reg2mem, !insn.addr !2057
  store i32 %210, i32* %edi.54792.reg2mem, !insn.addr !2057
  store i32 %198, i32* %.reg2mem, !insn.addr !2057
  store i32 %209, i32* %uu_quo_-68.3.off0.reg2mem, !insn.addr !2057
  store i32 %204, i32* %stack_var_-8.1.off0.reg2mem, !insn.addr !2057
  store i64 %206, i64* %uu_quo_-72.3.reg2mem, !insn.addr !2057
  store i32 %198, i32* %esp.5.reg2mem, !insn.addr !2057
  br i1 %or.cond, label %dec_label_pc_4380d8, label %dec_label_pc_438100, !insn.addr !2057

dec_label_pc_4380d8:                              ; preds = %dec_label_pc_4380d1.preheader, %dec_label_pc_4380d1
  %.reload = load i32, i32* %.reg2mem
  %edi.54792.reload = load i32, i32* %edi.54792.reg2mem
  %ebx.44693.reload = load i32, i32* %ebx.44693.reg2mem
  %uu_quo_-68.1.off04494.reload = load i32, i32* %uu_quo_-68.1.off04494.reg2mem
  %uu_num_-40.1.off04395.reload = load i32, i32* %uu_num_-40.1.off04395.reg2mem
  %204 = add i32 %ebx.44693.reload, -1, !insn.addr !2058
  %205 = icmp ne i32 %ebx.44693.reload, 0, !insn.addr !2058
  %206 = sext i32 %204 to i64, !insn.addr !2059
  %207 = zext i1 %205 to i32, !insn.addr !2060
  %208 = add i32 %uu_quo_-68.1.off04494.reload, -1, !insn.addr !2060
  %209 = add i32 %208, %207, !insn.addr !2060
  %210 = add i32 %edi.54792.reload, %stack_var_-52.0.reload, !insn.addr !2061
  %211 = icmp ult i32 %210, %edi.54792.reload, !insn.addr !2061
  %212 = zext i1 %211 to i32, !insn.addr !2062
  %213 = add i32 %uu_num_-40.1.off04395.reload, %212, !insn.addr !2062
  %214 = icmp eq i32 %213, 0, !insn.addr !2062
  %215 = icmp eq i1 %214, false, !insn.addr !2063
  store i32 %209, i32* %uu_quo_-68.3.off0.reg2mem, !insn.addr !2063
  store i32 %204, i32* %stack_var_-8.1.off0.reg2mem, !insn.addr !2063
  store i64 %206, i64* %uu_quo_-72.3.reg2mem, !insn.addr !2063
  store i32 %.reload, i32* %esp.5.reg2mem, !insn.addr !2063
  br i1 %215, label %dec_label_pc_438100, label %dec_label_pc_4380b7, !insn.addr !2063

dec_label_pc_438100:                              ; preds = %dec_label_pc_4380d1.preheader, %dec_label_pc_4380d8, %dec_label_pc_4380d1, %dec_label_pc_4380b7, %dec_label_pc_4380b7.preheader, %dec_label_pc_4380ac
  %esp.5.reload = load i32, i32* %esp.5.reg2mem
  %stack_var_-8.1.off0.reload = load i32, i32* %stack_var_-8.1.off0.reg2mem
  %uu_quo_-68.3.off0.reload = load i32, i32* %uu_quo_-68.3.off0.reg2mem
  %216 = or i32 %stack_var_-8.1.off0.reload, %uu_quo_-68.3.off0.reload
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %dec_label_pc_438100.dec_label_pc_4381bf_crit_edge, label %dec_label_pc_438126.preheader, !insn.addr !2064

dec_label_pc_438100.dec_label_pc_4381bf_crit_edge: ; preds = %dec_label_pc_438100
  %.pre80 = add i32 %stack_var_-60.0.reload, -1, !insn.addr !2065
  store i32 %.pre80, i32* %.pre-phi.reg2mem
  store i32 %stack_var_-12.0.off0.reload, i32* %stack_var_-12.1.off0.reg2mem
  store i32 %stack_var_-8.1.off0.reload, i32* %ebx.12.reg2mem
  br label %dec_label_pc_4381bf

dec_label_pc_438126.preheader:                    ; preds = %dec_label_pc_438100
  %uu_quo_-72.3.reload = load i64, i64* %uu_quo_-72.3.reg2mem
  %218 = and i64 %uu_quo_-72.3.reload, 4294967295, !insn.addr !2066
  store i32 %8, i32* %uu_num_-40.2.in.in.reg2mem
  store i32 %4, i32* %stack_var_-24.1.reg2mem
  store i32 %stack_var_-64.0.reload, i32* %ebx.7.reg2mem
  store i32 0, i32* %esi.5.reg2mem
  store i32 0, i32* %edi.6.reg2mem
  br label %dec_label_pc_438126

dec_label_pc_438126:                              ; preds = %dec_label_pc_438126.preheader, %dec_label_pc_438126
  %edi.6.reload = load i32, i32* %edi.6.reg2mem
  %esi.5.reload = load i32, i32* %esi.5.reg2mem
  %ebx.7.reload = load i32, i32* %ebx.7.reg2mem
  %stack_var_-24.1.reload = load i32, i32* %stack_var_-24.1.reg2mem
  %uu_num_-40.2.in.in.reload = load i32, i32* %uu_num_-40.2.in.in.reg2mem
  %uu_num_-40.2.in = add i32 %uu_num_-40.2.in.in.reload, 4
  %219 = inttoptr i32 %uu_num_-40.2.in to i32*, !insn.addr !2067
  %220 = load i32, i32* %219, align 4, !insn.addr !2067
  %221 = mul i32 %220, %uu_quo_-68.3.off0.reload, !insn.addr !2068
  %222 = zext i32 %220 to i64, !insn.addr !2066
  %223 = mul nuw i64 %218, %222, !insn.addr !2066
  %224 = trunc i64 %223 to i32, !insn.addr !2066
  %225 = udiv i64 %223, 4294967296, !insn.addr !2066
  %226 = trunc i64 %225 to i32, !insn.addr !2066
  %227 = add i32 %edi.6.reload, %224, !insn.addr !2069
  %228 = icmp ult i32 %227, %edi.6.reload, !insn.addr !2069
  %229 = inttoptr i32 %ebx.7.reload to i32*, !insn.addr !2070
  %230 = load i32, i32* %229, align 4, !insn.addr !2070
  %231 = zext i1 %228 to i32, !insn.addr !2071
  %232 = add i32 %221, %esi.5.reload, !insn.addr !2072
  %233 = add i32 %232, %226, !insn.addr !2071
  %234 = add i32 %233, %231, !insn.addr !2071
  %235 = icmp ult i32 %230, %227, !insn.addr !2073
  %236 = icmp eq i32 %234, -1
  %narrow = icmp eq i1 %235, %236
  %esi.6 = zext i1 %narrow to i32
  %237 = zext i1 %235 to i32
  %edi.7 = add i32 %234, %237
  %238 = sub i32 %230, %227, !insn.addr !2074
  store i32 %238, i32* %229, align 4, !insn.addr !2075
  %239 = add i32 %ebx.7.reload, 4, !insn.addr !2076
  %240 = add i32 %stack_var_-24.1.reload, -1, !insn.addr !2077
  %241 = icmp eq i32 %240, 0, !insn.addr !2077
  %242 = icmp eq i1 %241, false, !insn.addr !2078
  store i32 %uu_num_-40.2.in, i32* %uu_num_-40.2.in.in.reg2mem, !insn.addr !2078
  store i32 %240, i32* %stack_var_-24.1.reg2mem, !insn.addr !2078
  store i32 %239, i32* %ebx.7.reg2mem, !insn.addr !2078
  store i32 %esi.6, i32* %esi.5.reg2mem, !insn.addr !2078
  store i32 %edi.7, i32* %edi.6.reg2mem, !insn.addr !2078
  br i1 %242, label %dec_label_pc_438126, label %dec_label_pc_43816c, !insn.addr !2078

dec_label_pc_43816c:                              ; preds = %dec_label_pc_438126
  %243 = icmp ult i32 %storemerge12.reload, %edi.7, !insn.addr !2079
  %244 = or i1 %narrow, %243
  %245 = icmp eq i1 %244, false
  store i32 %stack_var_-64.0.reload, i32* %edx.3.reg2mem, !insn.addr !2080
  store i32 0, i32* %ebx.9.reg2mem, !insn.addr !2080
  store i32 %8, i32* %esi.8.in.reg2mem, !insn.addr !2080
  store i32 %4, i32* %edi.9.reg2mem, !insn.addr !2080
  store i32 %stack_var_-8.1.off0.reload, i32* %ebx.11.reg2mem, !insn.addr !2080
  br i1 %245, label %dec_label_pc_4381b8, label %dec_label_pc_438190, !insn.addr !2080

dec_label_pc_438190:                              ; preds = %dec_label_pc_43816c, %dec_label_pc_438190
  %edi.9.reload = load i32, i32* %edi.9.reg2mem
  %esi.8.in.reload = load i32, i32* %esi.8.in.reg2mem
  %ebx.9.reload = load i32, i32* %ebx.9.reg2mem
  %edx.3.reload = load i32, i32* %edx.3.reg2mem
  %esi.8 = add i32 %esi.8.in.reload, 4
  %246 = inttoptr i32 %edx.3.reload to i32*, !insn.addr !2081
  %247 = load i32, i32* %246, align 4, !insn.addr !2081
  %248 = add i32 %edx.3.reload, 4, !insn.addr !2082
  %249 = inttoptr i32 %esi.8 to i32*, !insn.addr !2083
  %250 = load i32, i32* %249, align 4, !insn.addr !2083
  %251 = add i32 %250, %247, !insn.addr !2083
  %252 = icmp ult i32 %251, %247, !insn.addr !2083
  %253 = zext i1 %252 to i32, !insn.addr !2084
  %254 = add i32 %251, %ebx.9.reload, !insn.addr !2085
  %255 = icmp ult i32 %254, %251, !insn.addr !2085
  store i32 %254, i32* %246, align 4, !insn.addr !2086
  %256 = zext i1 %255 to i32, !insn.addr !2087
  %257 = add nuw nsw i32 %256, %253, !insn.addr !2087
  %258 = add i32 %edi.9.reload, -1, !insn.addr !2088
  %259 = icmp eq i32 %258, 0, !insn.addr !2088
  %260 = icmp eq i1 %259, false, !insn.addr !2089
  store i32 %248, i32* %edx.3.reg2mem, !insn.addr !2089
  store i32 %257, i32* %ebx.9.reg2mem, !insn.addr !2089
  store i32 %esi.8, i32* %esi.8.in.reg2mem, !insn.addr !2089
  store i32 %258, i32* %edi.9.reg2mem, !insn.addr !2089
  br i1 %260, label %dec_label_pc_438190, label %dec_label_pc_4381b1, !insn.addr !2089

dec_label_pc_4381b1:                              ; preds = %dec_label_pc_438190
  %261 = add i32 %stack_var_-8.1.off0.reload, -1, !insn.addr !2090
  store i32 %261, i32* %ebx.11.reg2mem, !insn.addr !2091
  br label %dec_label_pc_4381b8, !insn.addr !2091

dec_label_pc_4381b8:                              ; preds = %dec_label_pc_43816c, %dec_label_pc_4381b1
  %ebx.11.reload = load i32, i32* %ebx.11.reg2mem
  %262 = add i32 %stack_var_-60.0.reload, -1
  store i32 %262, i32* %.pre-phi.reg2mem, !insn.addr !2092
  store i32 %262, i32* %stack_var_-12.1.off0.reg2mem, !insn.addr !2092
  store i32 %ebx.11.reload, i32* %ebx.12.reg2mem, !insn.addr !2092
  br label %dec_label_pc_4381bf, !insn.addr !2092

dec_label_pc_4381bf:                              ; preds = %dec_label_pc_438100.dec_label_pc_4381bf_crit_edge, %dec_label_pc_4381b8
  %stack_var_-12.1.off0.reload = load i32, i32* %stack_var_-12.1.off0.reg2mem
  %.pre-phi.reload = load i32, i32* %.pre-phi.reg2mem
  %263 = add i32 %stack_var_-64.0.reload, -4, !insn.addr !2093
  %264 = add i32 %stack_var_-28.1.in.reload, -1, !insn.addr !2094
  %265 = add i32 %stack_var_-80.0.reload, -4, !insn.addr !2095
  %266 = icmp slt i32 %264, 0, !insn.addr !2096
  %267 = icmp eq i1 %266, false, !insn.addr !2097
  store i32 %stack_var_-12.1.off0.reload, i32* %stack_var_-12.0.off0.reg2mem, !insn.addr !2097
  store i32 %264, i32* %stack_var_-28.1.in.reg2mem, !insn.addr !2097
  store i32 %.pre-phi.reload, i32* %stack_var_-60.0.reg2mem, !insn.addr !2097
  store i32 %263, i32* %stack_var_-64.0.reg2mem, !insn.addr !2097
  store i32 %265, i32* %stack_var_-80.0.reg2mem, !insn.addr !2097
  store i32 %esp.5.reload, i32* %esp.2.reg2mem, !insn.addr !2097
  br i1 %267, label %dec_label_pc_437fe2, label %dec_label_pc_4381f5.loopexit, !insn.addr !2097

dec_label_pc_4381f5.loopexit:                     ; preds = %dec_label_pc_4381bf
  %ebx.12.reload = load i32, i32* %ebx.12.reg2mem
  %268 = sext i32 %ebx.12.reload to i64, !insn.addr !2098
  %.pre = load i32, i32* %0, align 4
  store i32 %.pre, i32* %.reg2mem127
  store i32 %stack_var_-12.1.off0.reload, i32* %stack_var_-12.2.off0.reg2mem
  store i64 %268, i64* %stack_var_-32.2.reg2mem
  br label %dec_label_pc_4381f5

dec_label_pc_4381f5:                              ; preds = %dec_label_pc_4381f5.loopexit, %dec_label_pc_437fb2
  %stack_var_-32.2.reload = load i64, i64* %stack_var_-32.2.reg2mem
  %stack_var_-12.2.off0.reload = load i32, i32* %stack_var_-12.2.off0.reg2mem
  %.reload128 = load i32, i32* %.reg2mem127, !insn.addr !2099
  %269 = add i32 %stack_var_-12.2.off0.reload, 1, !insn.addr !2100
  %270 = icmp ult i32 %269, %.reload128, !insn.addr !2099
  %271 = icmp eq i1 %270, false, !insn.addr !2101
  br i1 %271, label %dec_label_pc_43821e, label %dec_label_pc_438202, !insn.addr !2101

dec_label_pc_438202:                              ; preds = %dec_label_pc_4381f5
  %272 = add i32 %6, 4, !insn.addr !2102
  %273 = mul i32 %269, 4, !insn.addr !2103
  %274 = add i32 %272, %273, !insn.addr !2103
  store i32 %269, i32* %eax.9.reg2mem, !insn.addr !2104
  store i32 %274, i32* %edx.4.reg2mem, !insn.addr !2104
  br label %dec_label_pc_438210, !insn.addr !2104

dec_label_pc_438210:                              ; preds = %dec_label_pc_438210, %dec_label_pc_438202
  %edx.4.reload = load i32, i32* %edx.4.reg2mem
  %eax.9.reload = load i32, i32* %eax.9.reg2mem
  %275 = inttoptr i32 %edx.4.reload to i32*, !insn.addr !2105
  store i32 0, i32* %275, align 4, !insn.addr !2105
  %276 = add i32 %edx.4.reload, 4, !insn.addr !2106
  %277 = add i32 %eax.9.reload, 1, !insn.addr !2107
  %278 = load i32, i32* %0, align 4, !insn.addr !2108
  %279 = icmp ult i32 %277, %278, !insn.addr !2108
  store i32 %277, i32* %eax.9.reg2mem, !insn.addr !2109
  store i32 %276, i32* %edx.4.reg2mem, !insn.addr !2109
  br i1 %279, label %dec_label_pc_438210, label %dec_label_pc_43821e, !insn.addr !2109

dec_label_pc_43821e:                              ; preds = %dec_label_pc_438210, %dec_label_pc_4381f5
  store i32 %269, i32* %0, align 4, !insn.addr !2110
  %280 = icmp eq i32 %269, 0, !insn.addr !2111
  store i32 %269, i32* %ecx.5.reg2mem, !insn.addr !2112
  store i64 %stack_var_-32.2.reload, i64* %merge.reg2mem, !insn.addr !2112
  br i1 %280, label %dec_label_pc_438231, label %dec_label_pc_438224, !insn.addr !2112

dec_label_pc_438224:                              ; preds = %dec_label_pc_43821e, %dec_label_pc_43822a
  %ecx.5.reload = load i32, i32* %ecx.5.reg2mem
  %281 = mul i32 %ecx.5.reload, 4, !insn.addr !2113
  %282 = add i32 %281, %6, !insn.addr !2113
  %283 = inttoptr i32 %282 to i32*, !insn.addr !2113
  %284 = load i32, i32* %283, align 4, !insn.addr !2113
  %285 = icmp eq i32 %284, 0, !insn.addr !2113
  %286 = icmp eq i1 %285, false, !insn.addr !2114
  store i64 %stack_var_-32.2.reload, i64* %merge.reg2mem, !insn.addr !2114
  br i1 %286, label %dec_label_pc_438231, label %dec_label_pc_43822a, !insn.addr !2114

dec_label_pc_43822a:                              ; preds = %dec_label_pc_438224
  %287 = add i32 %ecx.5.reload, -1, !insn.addr !2115
  %288 = icmp eq i32 %287, 0, !insn.addr !2115
  store i32 %287, i32* %0, align 4, !insn.addr !2116
  %289 = icmp eq i1 %288, false, !insn.addr !2117
  store i32 %287, i32* %ecx.5.reg2mem, !insn.addr !2117
  store i64 %stack_var_-32.2.reload, i64* %merge.reg2mem, !insn.addr !2117
  br i1 %289, label %dec_label_pc_438224, label %dec_label_pc_438231, !insn.addr !2117

dec_label_pc_438231:                              ; preds = %dec_label_pc_43822a, %dec_label_pc_438224, %dec_label_pc_437db0, %dec_label_pc_437dcb, %dec_label_pc_437f4c, %dec_label_pc_437f17, %dec_label_pc_43821e
  %merge.reload = load i64, i64* %merge.reg2mem
  ret i64 %merge.reload, !insn.addr !2118
}

define i32 @_ischartype_l(i32 %_C, i32 %_Mask, i32 %_Locale) local_unnamed_addr {
dec_label_pc_43c7db:
  %eax.0.reg2mem = alloca i32, !insn.addr !2119
  %0 = icmp eq i32 %_Locale, 0, !insn.addr !2120
  br i1 %0, label %dec_label_pc_43c818, label %dec_label_pc_43c7e8, !insn.addr !2121

dec_label_pc_43c7e8:                              ; preds = %dec_label_pc_43c7db
  %1 = inttoptr i32 %_Locale to i32*, !insn.addr !2122
  %2 = load i32, i32* %1, align 4, !insn.addr !2122
  %3 = add i32 %_C, 1, !insn.addr !2123
  %4 = icmp ult i32 %3, 257
  br i1 %4, label %dec_label_pc_43c7f7, label %dec_label_pc_43c802, !insn.addr !2124

dec_label_pc_43c7f7:                              ; preds = %dec_label_pc_43c7e8
  %5 = inttoptr i32 %2 to i32*, !insn.addr !2125
  %6 = load i32, i32* %5, align 4, !insn.addr !2125
  %7 = mul i32 %_C, 2, !insn.addr !2126
  %8 = add i32 %6, %7, !insn.addr !2126
  %9 = inttoptr i32 %8 to i16*, !insn.addr !2126
  %10 = load i16, i16* %9, align 2, !insn.addr !2126
  %11 = zext i16 %10 to i32, !insn.addr !2126
  %12 = and i32 %11, %_Mask, !insn.addr !2127
  store i32 %12, i32* %eax.0.reg2mem, !insn.addr !2128
  br label %dec_label_pc_43c82c, !insn.addr !2128

dec_label_pc_43c802:                              ; preds = %dec_label_pc_43c7e8
  %13 = add i32 %2, 4, !insn.addr !2129
  %14 = inttoptr i32 %13 to i32*, !insn.addr !2129
  %15 = load i32, i32* %14, align 4, !insn.addr !2129
  %16 = icmp slt i32 %15, 2, !insn.addr !2130
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2130
  br i1 %16, label %dec_label_pc_43c82c, label %dec_label_pc_43c808, !insn.addr !2130

dec_label_pc_43c808:                              ; preds = %dec_label_pc_43c802
  %17 = call i32 @_isctype_l(i32 %_C, i32 %_Mask, i32 %_Locale), !insn.addr !2131
  store i32 %17, i32* %eax.0.reg2mem, !insn.addr !2132
  br label %dec_label_pc_43c82c, !insn.addr !2132

dec_label_pc_43c818:                              ; preds = %dec_label_pc_43c7db
  %18 = call i16* @__pctype_func(), !insn.addr !2133
  %19 = call i32 @function_404340(), !insn.addr !2134
  store i32 %19, i32* %eax.0.reg2mem, !insn.addr !2134
  br label %dec_label_pc_43c82c, !insn.addr !2134

dec_label_pc_43c82c:                              ; preds = %dec_label_pc_43c808, %dec_label_pc_43c818, %dec_label_pc_43c802, %dec_label_pc_43c7f7
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !2135
}

declare i32 @memcpy_s_1(i8*, i32, i8*, i32) local_unnamed_addr

declare void @srand(i32) local_unnamed_addr

define i8* @"common_getenv<char>"(i8* %name) local_unnamed_addr {
dec_label_pc_43e04f:
  %storemerge.reg2mem = alloca i8*, !insn.addr !2136
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b54(i32* nonnull @global_var_47b288, i32 12), !insn.addr !2137
  %2 = add i32 %0, 8, !insn.addr !2138
  %3 = inttoptr i32 %2 to i32*, !insn.addr !2138
  %4 = load i32, i32* %3, align 4, !insn.addr !2138
  %5 = icmp eq i32 %4, 0, !insn.addr !2139
  %6 = icmp eq i1 %5, false, !insn.addr !2140
  br i1 %6, label %dec_label_pc_43e076, label %dec_label_pc_43e062, !insn.addr !2140

dec_label_pc_43e062:                              ; preds = %dec_label_pc_43e076, %dec_label_pc_43e04f
  %7 = call i32* @_errno(), !insn.addr !2141
  store i32 22, i32* %7, align 4, !insn.addr !2142
  call void @_invalid_parameter_noinfo(), !insn.addr !2143
  store i8* null, i8** %storemerge.reg2mem, !insn.addr !2144
  br label %dec_label_pc_43e0b2, !insn.addr !2144

dec_label_pc_43e076:                              ; preds = %dec_label_pc_43e04f
  %8 = inttoptr i32 %4 to i8*, !insn.addr !2145
  %9 = call i32 @strnlen(i8* %8, i32 32767), !insn.addr !2146
  %10 = icmp ult i32 %9, 32767, !insn.addr !2147
  %11 = icmp eq i1 %10, false, !insn.addr !2148
  br i1 %11, label %dec_label_pc_43e062, label %dec_label_pc_43e088, !insn.addr !2148

dec_label_pc_43e088:                              ; preds = %dec_label_pc_43e076
  %12 = add i32 %0, -28, !insn.addr !2149
  %13 = inttoptr i32 %12 to i32*, !insn.addr !2149
  store i32 0, i32* %13, align 4, !insn.addr !2149
  %14 = call i32 @function_404548(i32 11), !insn.addr !2150
  %15 = add i32 %0, -4, !insn.addr !2151
  %16 = inttoptr i32 %15 to i32*, !insn.addr !2151
  store i32 0, i32* %16, align 4, !insn.addr !2151
  %17 = call i8* @"common_getenv_nolock<char>"(i8* %8), !insn.addr !2152
  %18 = ptrtoint i8* %17 to i32, !insn.addr !2152
  store i32 %18, i32* %13, align 4, !insn.addr !2153
  store i32 -2, i32* %16, align 4, !insn.addr !2154
  %19 = call i32 @function_43e0c5(), !insn.addr !2155
  store i8* %17, i8** %storemerge.reg2mem, !insn.addr !2156
  br label %dec_label_pc_43e0b2, !insn.addr !2156

dec_label_pc_43e0b2:                              ; preds = %dec_label_pc_43e088, %dec_label_pc_43e062
  %storemerge.reload = load i8*, i8** %storemerge.reg2mem
  %20 = add i32 %0, -16, !insn.addr !2157
  %21 = inttoptr i32 %20 to i32*, !insn.addr !2157
  %22 = load i32, i32* %21, align 4, !insn.addr !2157
  call void @__writefsdword(i32 0, i32 %22), !insn.addr !2158
  ret i8* %storemerge.reload, !insn.addr !2159
}

define i32 @function_43e0c5() local_unnamed_addr {
dec_label_pc_43e0c5:
  %0 = call i32 @function_4017d5(i32 11), !insn.addr !2160
  ret i32 %0, !insn.addr !2161
}

define i8* @"common_getenv_nolock<char>"(i8* %name) local_unnamed_addr {
dec_label_pc_43e18b:
  %storemerge.reg2mem = alloca i8*, !insn.addr !2162
  %edx.0.reg2mem = alloca i32, !insn.addr !2162
  %edi.05.reg2mem = alloca i32, !insn.addr !2162
  %.reg2mem10 = alloca i32*, !insn.addr !2162
  %.reg2mem = alloca i32, !insn.addr !2162
  %esi.0.reg2mem = alloca i32, !insn.addr !2162
  %stack_var_-16 = alloca i32, align 4
  %0 = call i32 @function_4010e1(), !insn.addr !2163
  %1 = icmp eq i32 %0, 0, !insn.addr !2164
  %2 = icmp eq i8* %name, null, !insn.addr !2165
  %or.cond = or i1 %2, %1
  store i8* null, i8** %storemerge.reg2mem, !insn.addr !2166
  br i1 %or.cond, label %dec_label_pc_43e1ed, label %dec_label_pc_43e1a4, !insn.addr !2166

dec_label_pc_43e1a4:                              ; preds = %dec_label_pc_43e18b
  %3 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !2167
  %4 = ptrtoint i8* %name to i32, !insn.addr !2168
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !2169
  br label %dec_label_pc_43e1aa, !insn.addr !2169

dec_label_pc_43e1aa:                              ; preds = %dec_label_pc_43e1aa, %dec_label_pc_43e1a4
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %5 = inttoptr i32 %esi.0.reload to i8*, !insn.addr !2170
  %6 = load i8, i8* %5, align 1, !insn.addr !2170
  %7 = add i32 %esi.0.reload, 1, !insn.addr !2171
  %8 = icmp eq i8 %6, 0, !insn.addr !2172
  %9 = icmp eq i1 %8, false, !insn.addr !2173
  store i32 %7, i32* %esi.0.reg2mem, !insn.addr !2173
  br i1 %9, label %dec_label_pc_43e1aa, label %dec_label_pc_43e1b1, !insn.addr !2173

dec_label_pc_43e1b1:                              ; preds = %dec_label_pc_43e1aa
  %10 = inttoptr i32 %0 to i32*, !insn.addr !2174
  %11 = load i32, i32* %10, align 4, !insn.addr !2174
  %12 = icmp eq i32 %11, 0, !insn.addr !2175
  %13 = icmp eq i1 %12, false, !insn.addr !2176
  store i8* null, i8** %storemerge.reg2mem, !insn.addr !2176
  br i1 %13, label %dec_label_pc_43e1b5.lr.ph, label %dec_label_pc_43e1ed, !insn.addr !2176

dec_label_pc_43e1b5.lr.ph:                        ; preds = %dec_label_pc_43e1b1
  %14 = sub i32 %esi.0.reload, %4, !insn.addr !2177
  %15 = add i32 %3, -4
  %16 = inttoptr i32 %15 to i32*
  %17 = add i32 %3, -8
  %18 = inttoptr i32 %17 to i32*
  %19 = add i32 %3, -12
  %20 = inttoptr i32 %19 to i32*
  store i32 %11, i32* %.reg2mem
  store i32* %10, i32** %.reg2mem10
  store i32 %0, i32* %edi.05.reg2mem
  br label %dec_label_pc_43e1b5

dec_label_pc_43e1b5:                              ; preds = %dec_label_pc_43e1b5.lr.ph, %dec_label_pc_43e1e2
  %edi.05.reload = load i32, i32* %edi.05.reg2mem
  %.reload11 = load i32*, i32** %.reg2mem10
  %.reload = load i32, i32* %.reg2mem
  store i32 %.reload, i32* %edx.0.reg2mem, !insn.addr !2178
  br label %dec_label_pc_43e1bd, !insn.addr !2178

dec_label_pc_43e1bd:                              ; preds = %dec_label_pc_43e1bd, %dec_label_pc_43e1b5
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %21 = inttoptr i32 %edx.0.reload to i8*, !insn.addr !2179
  %22 = load i8, i8* %21, align 1, !insn.addr !2179
  %23 = add i32 %edx.0.reload, 1, !insn.addr !2180
  %24 = icmp eq i8 %22, 0, !insn.addr !2181
  %25 = icmp eq i1 %24, false, !insn.addr !2182
  store i32 %23, i32* %edx.0.reg2mem, !insn.addr !2182
  br i1 %25, label %dec_label_pc_43e1bd, label %dec_label_pc_43e1c4, !insn.addr !2182

dec_label_pc_43e1c4:                              ; preds = %dec_label_pc_43e1bd
  %26 = sub i32 %edx.0.reload, %.reload, !insn.addr !2183
  %27 = icmp ugt i32 %26, %14
  br i1 %27, label %dec_label_pc_43e1cb, label %dec_label_pc_43e1e2, !insn.addr !2184

dec_label_pc_43e1cb:                              ; preds = %dec_label_pc_43e1c4
  %28 = add i32 %.reload, %14, !insn.addr !2185
  %29 = inttoptr i32 %28 to i8*, !insn.addr !2185
  %30 = load i8, i8* %29, align 1, !insn.addr !2185
  %31 = icmp eq i8 %30, 61, !insn.addr !2185
  %32 = icmp eq i1 %31, false, !insn.addr !2186
  br i1 %32, label %dec_label_pc_43e1e2, label %dec_label_pc_43e1d1, !insn.addr !2186

dec_label_pc_43e1d1:                              ; preds = %dec_label_pc_43e1cb
  store i32 %14, i32* %16, align 4, !insn.addr !2187
  store i32 %4, i32* %18, align 4, !insn.addr !2188
  store i32 %.reload, i32* %20, align 4, !insn.addr !2189
  %33 = call i32 @_strnicoll(i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2190
  %34 = icmp eq i32 %33, 0, !insn.addr !2191
  br i1 %34, label %dec_label_pc_43e1f1, label %dec_label_pc_43e1e2, !insn.addr !2192

dec_label_pc_43e1e2:                              ; preds = %dec_label_pc_43e1c4, %dec_label_pc_43e1d1, %dec_label_pc_43e1cb
  %35 = add i32 %edi.05.reload, 4, !insn.addr !2193
  %36 = inttoptr i32 %35 to i32*, !insn.addr !2174
  %37 = load i32, i32* %36, align 4, !insn.addr !2174
  %38 = icmp eq i32 %37, 0, !insn.addr !2175
  %39 = icmp eq i1 %38, false, !insn.addr !2176
  store i32 %37, i32* %.reg2mem, !insn.addr !2176
  store i32* %36, i32** %.reg2mem10, !insn.addr !2176
  store i32 %35, i32* %edi.05.reg2mem, !insn.addr !2176
  store i8* null, i8** %storemerge.reg2mem, !insn.addr !2176
  br i1 %39, label %dec_label_pc_43e1b5, label %dec_label_pc_43e1ed, !insn.addr !2176

dec_label_pc_43e1ed:                              ; preds = %dec_label_pc_43e1e2, %dec_label_pc_43e1b1, %dec_label_pc_43e18b, %dec_label_pc_43e1f1
  %storemerge.reload = load i8*, i8** %storemerge.reg2mem
  ret i8* %storemerge.reload, !insn.addr !2194

dec_label_pc_43e1f1:                              ; preds = %dec_label_pc_43e1d1
  %40 = load i32, i32* %.reload11, align 4, !insn.addr !2195
  %41 = add i32 %14, 1, !insn.addr !2196
  %42 = add i32 %41, %40, !insn.addr !2197
  %phitmp = inttoptr i32 %42 to i8*
  store i8* %phitmp, i8** %storemerge.reg2mem, !insn.addr !2198
  br label %dec_label_pc_43e1ed, !insn.addr !2198
}

define i8* @getenv(i8* %name) local_unnamed_addr {
dec_label_pc_43e78f:
  %0 = call i8* @"common_getenv<char>"(i8* bitcast (i32* @80 to i8*)), !insn.addr !2199
  ret i8* %0, !insn.addr !2199
}

define i32 @"common_timespec_get<_timespec64>"(%_timespec64* %ts, i32 %base) local_unnamed_addr {
dec_label_pc_43e8f3:
  %eax.0.reg2mem = alloca i32, !insn.addr !2200
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %1 = icmp eq %_timespec64* %ts, null, !insn.addr !2201
  %2 = icmp eq i1 %1, false, !insn.addr !2202
  br i1 %2, label %dec_label_pc_43e917, label %dec_label_pc_43e902, !insn.addr !2202

dec_label_pc_43e902:                              ; preds = %dec_label_pc_43e8f3
  %3 = call i32* @_errno(), !insn.addr !2203
  store i32 22, i32* %3, align 4, !insn.addr !2204
  call void @_invalid_parameter_noinfo(), !insn.addr !2205
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2205
  br label %dec_label_pc_43e914, !insn.addr !2205

dec_label_pc_43e914:                              ; preds = %dec_label_pc_43e902, %dec_label_pc_43e917, %dec_label_pc_43e91d
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !2206

dec_label_pc_43e917:                              ; preds = %dec_label_pc_43e8f3
  %4 = icmp eq i32 %base, 1, !insn.addr !2207
  %5 = icmp eq i1 %4, false, !insn.addr !2208
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2208
  br i1 %5, label %dec_label_pc_43e914, label %dec_label_pc_43e91d, !insn.addr !2208

dec_label_pc_43e91d:                              ; preds = %dec_label_pc_43e917
  %6 = ptrtoint %_timespec64* %ts to i32
  store i32 0, i32* %stack_var_-12, align 4, !insn.addr !2209
  %7 = call i32 @function_4040b6(i32* nonnull %stack_var_-12, i32 %0, i32 0, i32 0), !insn.addr !2210
  %8 = load i32, i32* %stack_var_-12, align 4, !insn.addr !2211
  %9 = icmp ult i32 %8, -717324288, !insn.addr !2212
  %10 = call i32 @function_4040de(), !insn.addr !2213
  %11 = select i1 %9, i32 1583776996, i32 1583777096, !insn.addr !2214
  %12 = bitcast %_timespec64* %ts to i32*, !insn.addr !2215
  store i32 %10, i32* %12, align 4, !insn.addr !2215
  %13 = add i32 %6, 4, !insn.addr !2216
  %14 = inttoptr i32 %13 to i32*, !insn.addr !2216
  %15 = add i32 %6, 8, !insn.addr !2217
  %16 = inttoptr i32 %15 to i32*, !insn.addr !2217
  store i32 %11, i32* %16, align 4, !insn.addr !2217
  store i32 1, i32* %eax.0.reg2mem, !insn.addr !2218
  br label %dec_label_pc_43e914, !insn.addr !2218
}

define i64 @_time64(i64* %result) local_unnamed_addr {
dec_label_pc_43e9d2:
  %0 = call i1 @__decompiler_undefined_function_7()
  %1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i64, align 8
  %2 = ptrtoint i64* %stack_var_-20 to i32, !insn.addr !2219
  store i64 0, i64* %stack_var_-20, align 8, !insn.addr !2220
  %3 = select i1 %0, i32 -4, i32 4, !insn.addr !2220
  %4 = add i32 %3, %2, !insn.addr !2220
  %5 = inttoptr i32 %4 to i32*, !insn.addr !2221
  store i32 0, i32* %5, align 4, !insn.addr !2221
  %6 = add i32 %4, %3, !insn.addr !2221
  %7 = inttoptr i32 %6 to i32*, !insn.addr !2222
  store i32 0, i32* %7, align 8, !insn.addr !2222
  %8 = add i32 %6, %3, !insn.addr !2222
  %9 = inttoptr i32 %8 to i32*, !insn.addr !2223
  store i32 0, i32* %9, align 4, !insn.addr !2223
  %10 = bitcast i64* %stack_var_-20 to %_timespec64*
  %11 = call i32 @"common_timespec_get<_timespec64>"(%_timespec64* nonnull %10, i32 1), !insn.addr !2224
  %12 = icmp eq i32 %11, 1, !insn.addr !2225
  %13 = load i64, i64* %stack_var_-20, align 8
  %14 = trunc i64 %13 to i32
  %eax.0 = select i1 %12, i32 %14, i32 -1
  %15 = icmp eq i64* %result, null, !insn.addr !2226
  br i1 %15, label %dec_label_pc_43ea10, label %dec_label_pc_43ea0b, !insn.addr !2227

dec_label_pc_43ea0b:                              ; preds = %dec_label_pc_43e9d2
  %edx.0 = select i1 %12, i32 %1, i32 -1
  %16 = ptrtoint i64* %result to i32, !insn.addr !2228
  %17 = bitcast i64* %result to i32*, !insn.addr !2229
  store i32 %eax.0, i32* %17, align 4, !insn.addr !2229
  %18 = add i32 %16, 4, !insn.addr !2230
  %19 = inttoptr i32 %18 to i32*, !insn.addr !2230
  store i32 %edx.0, i32* %19, align 4, !insn.addr !2230
  br label %dec_label_pc_43ea10, !insn.addr !2230

dec_label_pc_43ea10:                              ; preds = %dec_label_pc_43ea0b, %dec_label_pc_43e9d2
  %20 = sext i32 %eax.0 to i64, !insn.addr !2231
  ret i64 %20, !insn.addr !2231
}

declare i8* @strcat(i8*, i8*) local_unnamed_addr

declare i32 @strlen(i8*) local_unnamed_addr

declare i8* @strncat(i8*, i8*, i32) local_unnamed_addr

define i8** @"common_get_or_create_environment_nolock<char>"() local_unnamed_addr {
dec_label_pc_43fc9c:
  %eax.0.reg2mem = alloca i32, !insn.addr !2232
  %0 = load i32, i32* @_environ_table, align 4, !insn.addr !2232
  %1 = icmp eq i32 %0, 0, !insn.addr !2233
  %2 = icmp eq i1 %1, false, !insn.addr !2234
  store i32 %0, i32* %eax.0.reg2mem, !insn.addr !2234
  br i1 %2, label %dec_label_pc_43fcc7, label %dec_label_pc_43fca5, !insn.addr !2234

dec_label_pc_43fca5:                              ; preds = %dec_label_pc_43fc9c
  %3 = load i32, i32* @_wenviron_table, align 4, !insn.addr !2235
  %4 = icmp eq i32 %3, %0, !insn.addr !2235
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2236
  br i1 %4, label %dec_label_pc_43fcc7, label %dec_label_pc_43fcad, !insn.addr !2236

dec_label_pc_43fcad:                              ; preds = %dec_label_pc_43fca5
  %5 = call i32 @"common_initialize_environment_nolock<char>"(), !insn.addr !2237
  %6 = icmp eq i32 %5, 0, !insn.addr !2238
  br i1 %6, label %dec_label_pc_43fcbf, label %dec_label_pc_43fcb6, !insn.addr !2239

dec_label_pc_43fcb6:                              ; preds = %dec_label_pc_43fcad
  %7 = call i32 @"initialize_environment_by_cloning_nolock<char>"(), !insn.addr !2240
  %8 = icmp eq i32 %7, 0, !insn.addr !2241
  %9 = icmp eq i1 %8, false, !insn.addr !2242
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2242
  br i1 %9, label %dec_label_pc_43fcc7, label %dec_label_pc_43fcbf, !insn.addr !2242

dec_label_pc_43fcbf:                              ; preds = %dec_label_pc_43fcb6, %dec_label_pc_43fcad
  %10 = load i32, i32* @_environ_table, align 4, !insn.addr !2243
  %11 = inttoptr i32 %10 to i8**, !insn.addr !2244
  ret i8** %11, !insn.addr !2244

dec_label_pc_43fcc7:                              ; preds = %dec_label_pc_43fca5, %dec_label_pc_43fcb6, %dec_label_pc_43fc9c
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %12 = inttoptr i32 %eax.0.reload to i8**, !insn.addr !2245
  ret i8** %12, !insn.addr !2245
}

define i32 @"common_initialize_environment_nolock<char>"() local_unnamed_addr {
dec_label_pc_43fd0a:
  %edi.1.reg2mem = alloca i32, !insn.addr !2246
  %edi.0.reg2mem = alloca i32, !insn.addr !2246
  %0 = load i32, i32* @_environ_table, align 4, !insn.addr !2246
  %1 = icmp eq i32 %0, 0, !insn.addr !2246
  br i1 %1, label %dec_label_pc_43fd16, label %dec_label_pc_43fd13, !insn.addr !2247

dec_label_pc_43fd13:                              ; preds = %dec_label_pc_43fd0a
  ret i32 0, !insn.addr !2248

dec_label_pc_43fd16:                              ; preds = %dec_label_pc_43fd0a
  %2 = call i32 @function_40334b(), !insn.addr !2249
  %3 = call i32 @function_403e13(), !insn.addr !2250
  %4 = icmp eq i32 %3, 0, !insn.addr !2251
  %5 = icmp eq i1 %4, false, !insn.addr !2252
  store i32 -1, i32* %edi.1.reg2mem, !insn.addr !2252
  br i1 %5, label %dec_label_pc_43fd2d, label %dec_label_pc_43fd51, !insn.addr !2252

dec_label_pc_43fd2d:                              ; preds = %dec_label_pc_43fd16
  %6 = inttoptr i32 %3 to i8*, !insn.addr !2253
  %7 = call i8** @"create_environment<char>"(i8* %6), !insn.addr !2254
  %8 = icmp eq i8** %7, null, !insn.addr !2255
  %9 = icmp eq i1 %8, false, !insn.addr !2256
  store i32 -1, i32* %edi.0.reg2mem, !insn.addr !2256
  br i1 %9, label %dec_label_pc_43fd3d, label %dec_label_pc_43fd49, !insn.addr !2256

dec_label_pc_43fd3d:                              ; preds = %dec_label_pc_43fd2d
  %10 = ptrtoint i8** %7 to i32, !insn.addr !2254
  store i32 %10, i32* bitcast (i8*** @__dcrt_initial_narrow_environment to i32*), align 4, !insn.addr !2257
  store i32 %10, i32* @_environ_table, align 4, !insn.addr !2258
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !2258
  br label %dec_label_pc_43fd49, !insn.addr !2258

dec_label_pc_43fd49:                              ; preds = %dec_label_pc_43fd2d, %dec_label_pc_43fd3d
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  call void @_free_base(i32* null), !insn.addr !2259
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !2260
  br label %dec_label_pc_43fd51, !insn.addr !2260

dec_label_pc_43fd51:                              ; preds = %dec_label_pc_43fd16, %dec_label_pc_43fd49
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %11 = inttoptr i32 %3 to i32*
  call void @_free_base(i32* %11), !insn.addr !2261
  ret i32 %edi.1.reload, !insn.addr !2262
}

define i8** @"create_environment<char>"(i8* %environment_block) local_unnamed_addr {
dec_label_pc_43fe6e:
  %edi.0.reg2mem = alloca i8**, !insn.addr !2263
  %stack_var_-8.18.reg2mem = alloca i32, !insn.addr !2263
  %ebx.010.reg2mem = alloca i32, !insn.addr !2263
  %.reg2mem23 = alloca i8, !insn.addr !2263
  %stack_var_-8.0.reg2mem = alloca i32, !insn.addr !2263
  %ecx.1.reg2mem = alloca i32, !insn.addr !2263
  %edx.1.lcssa.reg2mem = alloca i32, !insn.addr !2263
  %ecx.0.reg2mem = alloca i32, !insn.addr !2263
  %edx.111.reg2mem = alloca i32, !insn.addr !2263
  %esi.012.reg2mem = alloca i32, !insn.addr !2263
  %.reg2mem = alloca i8, !insn.addr !2263
  %0 = ptrtoint i8* %environment_block to i32
  %stack_var_-24 = alloca i32, align 4
  %1 = load i8, i8* %environment_block, align 1, !insn.addr !2264
  %2 = icmp eq i8 %1, 0, !insn.addr !2265
  %3 = icmp eq i1 %2, false, !insn.addr !2266
  store i8 %1, i8* %.reg2mem, !insn.addr !2266
  store i32 %0, i32* %esi.012.reg2mem, !insn.addr !2266
  store i32 0, i32* %edx.111.reg2mem, !insn.addr !2266
  store i32 1, i32* %edx.1.lcssa.reg2mem, !insn.addr !2266
  br i1 %3, label %dec_label_pc_43fe83, label %dec_label_pc_43fe9f, !insn.addr !2266

dec_label_pc_43fe83:                              ; preds = %dec_label_pc_43fe6e, %dec_label_pc_43fe94
  %edx.111.reload = load i32, i32* %edx.111.reg2mem
  %esi.012.reload = load i32, i32* %esi.012.reg2mem
  %.reload = load i8, i8* %.reg2mem
  %4 = icmp ne i8 %.reload, 61, !insn.addr !2267
  store i32 %esi.012.reload, i32* %ecx.0.reg2mem, !insn.addr !2268
  br label %dec_label_pc_43fe8d, !insn.addr !2268

dec_label_pc_43fe8d:                              ; preds = %dec_label_pc_43fe8d, %dec_label_pc_43fe83
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %5 = inttoptr i32 %ecx.0.reload to i8*, !insn.addr !2269
  %6 = load i8, i8* %5, align 1, !insn.addr !2269
  %7 = add i32 %ecx.0.reload, 1, !insn.addr !2270
  %8 = icmp eq i8 %6, 0, !insn.addr !2271
  %9 = icmp eq i1 %8, false, !insn.addr !2272
  store i32 %7, i32* %ecx.0.reg2mem, !insn.addr !2272
  br i1 %9, label %dec_label_pc_43fe8d, label %dec_label_pc_43fe94, !insn.addr !2272

dec_label_pc_43fe94:                              ; preds = %dec_label_pc_43fe8d
  %10 = zext i1 %4 to i32
  %spec.select = add i32 %edx.111.reload, %10
  %11 = inttoptr i32 %7 to i8*, !insn.addr !2273
  %12 = load i8, i8* %11, align 1, !insn.addr !2273
  %13 = icmp eq i8 %12, 0, !insn.addr !2265
  %14 = icmp eq i1 %13, false, !insn.addr !2266
  store i8 %12, i8* %.reg2mem, !insn.addr !2266
  store i32 %7, i32* %esi.012.reg2mem, !insn.addr !2266
  store i32 %spec.select, i32* %edx.111.reg2mem, !insn.addr !2266
  br i1 %14, label %dec_label_pc_43fe83, label %dec_label_pc_43fe9b.dec_label_pc_43fe9f_crit_edge, !insn.addr !2266

dec_label_pc_43fe9b.dec_label_pc_43fe9f_crit_edge: ; preds = %dec_label_pc_43fe94
  %phitmp20 = add i32 %spec.select, 1
  store i32 %phitmp20, i32* %edx.1.lcssa.reg2mem
  br label %dec_label_pc_43fe9f

dec_label_pc_43fe9f:                              ; preds = %dec_label_pc_43fe9b.dec_label_pc_43fe9f_crit_edge, %dec_label_pc_43fe6e
  %edx.1.lcssa.reload = load i32, i32* %edx.1.lcssa.reg2mem
  %15 = call i32* @_calloc_base(i32 %edx.1.lcssa.reload, i32 4), !insn.addr !2274
  %16 = ptrtoint i32* %stack_var_-24 to i32, !insn.addr !2275
  %17 = icmp eq i32* %15, null, !insn.addr !2276
  store i8** null, i8*** %edi.0.reg2mem, !insn.addr !2277
  br i1 %17, label %dec_label_pc_43ff22, label %dec_label_pc_43ff09.preheader, !insn.addr !2277

dec_label_pc_43ff09.preheader:                    ; preds = %dec_label_pc_43fe9f
  %18 = load i8, i8* %environment_block, align 1, !insn.addr !2278
  %19 = icmp eq i8 %18, 0, !insn.addr !2279
  %20 = icmp eq i1 %19, false, !insn.addr !2280
  br i1 %20, label %dec_label_pc_43febc.preheader.lr.ph, label %dec_label_pc_43ff22.loopexit, !insn.addr !2280

dec_label_pc_43febc.preheader.lr.ph:              ; preds = %dec_label_pc_43ff09.preheader
  %21 = ptrtoint i32* %15 to i32, !insn.addr !2274
  %22 = add i32 %16, -4
  %23 = inttoptr i32 %22 to i32*
  %24 = add i32 %16, -8
  %25 = inttoptr i32 %24 to i32*
  %26 = add i32 %16, -12
  %27 = inttoptr i32 %26 to i32*
  store i8 %18, i8* %.reg2mem23
  store i32 %0, i32* %ebx.010.reg2mem
  store i32 %21, i32* %stack_var_-8.18.reg2mem
  br label %dec_label_pc_43febc.preheader

dec_label_pc_43febc:                              ; preds = %dec_label_pc_43febc.preheader, %dec_label_pc_43febc
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %28 = inttoptr i32 %ecx.1.reload to i8*, !insn.addr !2281
  %29 = load i8, i8* %28, align 1, !insn.addr !2281
  %30 = add i32 %ecx.1.reload, 1, !insn.addr !2282
  %31 = icmp eq i8 %29, 0, !insn.addr !2283
  %32 = icmp eq i1 %31, false, !insn.addr !2284
  store i32 %30, i32* %ecx.1.reg2mem, !insn.addr !2284
  br i1 %32, label %dec_label_pc_43febc, label %dec_label_pc_43fec3, !insn.addr !2284

dec_label_pc_43fec3:                              ; preds = %dec_label_pc_43febc
  %33 = icmp eq i8 %.reload24, 61, !insn.addr !2285
  store i32 %stack_var_-8.18.reload, i32* %stack_var_-8.0.reg2mem, !insn.addr !2286
  br i1 %33, label %dec_label_pc_43ff07, label %dec_label_pc_43fed0, !insn.addr !2286

dec_label_pc_43fed0:                              ; preds = %dec_label_pc_43fec3
  %34 = sub i32 %ecx.1.reload, %ebx.010.reload, !insn.addr !2287
  %35 = add i32 %34, 1, !insn.addr !2288
  store i32 1, i32* %23, align 4, !insn.addr !2289
  store i32 %35, i32* %25, align 4, !insn.addr !2290
  %36 = call i32* @_calloc_base(i32 %35, i32 ptrtoint (i32* @80 to i32)), !insn.addr !2291
  %37 = icmp eq i32* %36, null, !insn.addr !2292
  br i1 %37, label %dec_label_pc_43ff11, label %dec_label_pc_43fee0, !insn.addr !2293

dec_label_pc_43fee0:                              ; preds = %dec_label_pc_43fed0
  %38 = ptrtoint i32* %36 to i32, !insn.addr !2291
  store i32 %ebx.010.reload, i32* %23, align 4, !insn.addr !2294
  store i32 %35, i32* %25, align 4, !insn.addr !2295
  store i32 %38, i32* %27, align 4, !insn.addr !2296
  %39 = call i32 @strcpy_s(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*)), !insn.addr !2297
  %40 = icmp eq i32 %39, 0, !insn.addr !2298
  %41 = icmp eq i1 %40, false, !insn.addr !2299
  store i32 0, i32* %23, align 4
  br i1 %41, label %dec_label_pc_43ff31, label %dec_label_pc_43fef1, !insn.addr !2299

dec_label_pc_43fef1:                              ; preds = %dec_label_pc_43fee0
  %42 = inttoptr i32 %stack_var_-8.18.reload to i32*, !insn.addr !2300
  store i32 %38, i32* %42, align 4, !insn.addr !2300
  %43 = add i32 %stack_var_-8.18.reload, 4, !insn.addr !2301
  %44 = inttoptr i32 %43 to i32*, !insn.addr !2302
  call void @_free_base(i32* %44), !insn.addr !2302
  store i32 %43, i32* %stack_var_-8.0.reg2mem, !insn.addr !2303
  br label %dec_label_pc_43ff07, !insn.addr !2303

dec_label_pc_43ff07:                              ; preds = %dec_label_pc_43fef1, %dec_label_pc_43fec3
  %stack_var_-8.0.reload = load i32, i32* %stack_var_-8.0.reg2mem
  %45 = inttoptr i32 %30 to i8*, !insn.addr !2278
  %46 = load i8, i8* %45, align 1, !insn.addr !2278
  %47 = icmp eq i8 %46, 0, !insn.addr !2279
  %48 = icmp eq i1 %47, false, !insn.addr !2280
  store i8 %46, i8* %.reg2mem23, !insn.addr !2280
  store i32 %30, i32* %ebx.010.reg2mem, !insn.addr !2280
  store i32 %stack_var_-8.0.reload, i32* %stack_var_-8.18.reg2mem, !insn.addr !2280
  br i1 %48, label %dec_label_pc_43febc.preheader, label %dec_label_pc_43ff22.loopexit, !insn.addr !2280

dec_label_pc_43febc.preheader:                    ; preds = %dec_label_pc_43febc.preheader.lr.ph, %dec_label_pc_43ff07
  %stack_var_-8.18.reload = load i32, i32* %stack_var_-8.18.reg2mem
  %ebx.010.reload = load i32, i32* %ebx.010.reg2mem
  %.reload24 = load i8, i8* %.reg2mem23
  store i32 %ebx.010.reload, i32* %ecx.1.reg2mem
  br label %dec_label_pc_43febc

dec_label_pc_43ff11:                              ; preds = %dec_label_pc_43fed0
  store i32 %21, i32* %23, align 4, !insn.addr !2304
  call void @"free_environment<char>"(i8** bitcast (i32* @80 to i8**)), !insn.addr !2305
  store i32 0, i32* %25, align 4, !insn.addr !2306
  call void @_free_base(i32* nonnull @80), !insn.addr !2307
  store i8** null, i8*** %edi.0.reg2mem, !insn.addr !2308
  br label %dec_label_pc_43ff22, !insn.addr !2308

dec_label_pc_43ff22.loopexit:                     ; preds = %dec_label_pc_43ff07, %dec_label_pc_43ff09.preheader
  %phitmp = bitcast i32* %15 to i8**
  store i8** %phitmp, i8*** %edi.0.reg2mem
  br label %dec_label_pc_43ff22

dec_label_pc_43ff22:                              ; preds = %dec_label_pc_43ff22.loopexit, %dec_label_pc_43fe9f, %dec_label_pc_43ff11
  %edi.0.reload = load i8**, i8*** %edi.0.reg2mem
  %49 = add i32 %16, -4, !insn.addr !2309
  %50 = inttoptr i32 %49 to i32*, !insn.addr !2309
  store i32 0, i32* %50, align 4, !insn.addr !2309
  call void @_free_base(i32* nonnull @80), !insn.addr !2310
  ret i8** %edi.0.reload, !insn.addr !2311

dec_label_pc_43ff31:                              ; preds = %dec_label_pc_43fee0
  store i32 0, i32* %25, align 4, !insn.addr !2312
  store i32 0, i32* %27, align 4, !insn.addr !2313
  %51 = add i32 %16, -16, !insn.addr !2314
  %52 = inttoptr i32 %51 to i32*, !insn.addr !2314
  store i32 0, i32* %52, align 4, !insn.addr !2314
  %53 = add i32 %16, -20, !insn.addr !2315
  %54 = inttoptr i32 %53 to i32*, !insn.addr !2315
  store i32 0, i32* %54, align 4, !insn.addr !2315
  %55 = call i32 @__invoke_watson(), !insn.addr !2316
  %56 = call i32 @__asm_int3(), !insn.addr !2317
  %57 = call i32 @__asm_int3(), !insn.addr !2318
  %58 = call i32 @__asm_int3(), !insn.addr !2319
  %59 = call i32 @__asm_int3(), !insn.addr !2320
  %60 = call i32 @__asm_int3(), !insn.addr !2321
  %61 = call i32 @__asm_int3(), !insn.addr !2322
  %62 = call i32 @__asm_int3(), !insn.addr !2323
  %63 = call i32 @__asm_int3(), !insn.addr !2324
  %64 = call i32 @__asm_int3(), !insn.addr !2325
  %65 = call i32 @__asm_int3(), !insn.addr !2326
  %66 = call i32 @__asm_int3(), !insn.addr !2327
  %67 = call i32 @__asm_int3(), !insn.addr !2328
  %68 = call i32 @__asm_int3(), !insn.addr !2329
  %69 = call i32 @__asm_int3(), !insn.addr !2330
  %70 = call i32 @__asm_int3(), !insn.addr !2331
  %71 = call i32 @__asm_int3(), !insn.addr !2332
  %72 = call i32 @__asm_int3(), !insn.addr !2333
  %73 = call i32 @__asm_int3(), !insn.addr !2334
  %74 = call i32 @__asm_int3(), !insn.addr !2335
  %75 = call i32 @__asm_int3(), !insn.addr !2336
  %76 = call i32 @__asm_int3(), !insn.addr !2337
  %77 = call i32 @__asm_int3(), !insn.addr !2338
  %78 = call i32 @__asm_int3(), !insn.addr !2339
  %79 = call i32 @__asm_int3(), !insn.addr !2340
  %80 = call i32 @__asm_int3(), !insn.addr !2341
  %81 = call i32 @__asm_int3(), !insn.addr !2342
  %82 = call i32 @__asm_int3(), !insn.addr !2343
  %83 = call i32 @__asm_int3(), !insn.addr !2344
  %84 = call i32 @__asm_int3(), !insn.addr !2345
  %85 = call i32 @__asm_int3(), !insn.addr !2346
  %86 = call i32 @__asm_int3(), !insn.addr !2347
  %87 = call i32 @__asm_int3(), !insn.addr !2348
  %88 = call i32 @__asm_int3(), !insn.addr !2349
  %89 = call i32 @__asm_int3(), !insn.addr !2350
  %90 = call i32 @__asm_int3(), !insn.addr !2351
  %91 = call i32 @__asm_int3(), !insn.addr !2352
  %92 = call i32 @__asm_int3(), !insn.addr !2353
  %93 = call i32 @__asm_int3(), !insn.addr !2354
  %94 = call i32 @__asm_int3(), !insn.addr !2355
  %95 = call i32 @__asm_int3(), !insn.addr !2356
  %96 = call i32 @__asm_int3(), !insn.addr !2357
  %97 = call i32 @__asm_int3(), !insn.addr !2358
  %98 = call i32 @__asm_int3(), !insn.addr !2359
  %99 = call i32 @__asm_int3(), !insn.addr !2360
  %100 = call i32 @__asm_int3(), !insn.addr !2361
  %101 = call i32 @__asm_int3(), !insn.addr !2362
  %102 = call i32 @__asm_int3(), !insn.addr !2363
  %103 = call i32 @__asm_int3(), !insn.addr !2364
  %104 = call i32 @__asm_int3(), !insn.addr !2365
  %105 = call i32 @__asm_int3(), !insn.addr !2366
  %106 = call i32 @__asm_int3(), !insn.addr !2367
  %107 = call i32 @__asm_int3(), !insn.addr !2368
  %108 = call i32 @__asm_int3(), !insn.addr !2369
  %109 = inttoptr i32 %108 to i8**, !insn.addr !2369
  ret i8** %109, !insn.addr !2369
}

declare void @"free_environment<char>"(i8**) local_unnamed_addr

define i32 @"initialize_environment_by_cloning_nolock<char>"() local_unnamed_addr {
dec_label_pc_440140:
  %storemerge.reg2mem = alloca i32, !insn.addr !2370
  %edi.0.reg2mem = alloca i32, !insn.addr !2370
  %eax.0.reg2mem = alloca i32, !insn.addr !2370
  %stack_var_-12 = alloca i32, align 4
  %0 = load i32, i32* @_wenviron_table, align 4, !insn.addr !2371
  %1 = icmp eq i32 %0, 0, !insn.addr !2372
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !2373
  br i1 %1, label %dec_label_pc_4401bf, label %dec_label_pc_44014f, !insn.addr !2373

dec_label_pc_44014f:                              ; preds = %dec_label_pc_440140
  %2 = inttoptr i32 %0 to i32*, !insn.addr !2374
  %3 = load i32, i32* %2, align 4, !insn.addr !2374
  %4 = icmp eq i32 %3, 0, !insn.addr !2375
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2376
  br i1 %4, label %dec_label_pc_4401bf, label %dec_label_pc_440157.preheader, !insn.addr !2376

dec_label_pc_440157.preheader:                    ; preds = %dec_label_pc_44014f
  %5 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !2377
  %6 = add i32 %5, -4, !insn.addr !2378
  %7 = inttoptr i32 %6 to i32*
  %8 = add i32 %5, -8, !insn.addr !2379
  %9 = inttoptr i32 %8 to i32*, !insn.addr !2379
  %10 = add i32 %5, -12, !insn.addr !2380
  %11 = inttoptr i32 %10 to i32*, !insn.addr !2380
  %12 = add i32 %5, -16, !insn.addr !2381
  %13 = inttoptr i32 %12 to i32*, !insn.addr !2381
  %14 = add i32 %5, -20, !insn.addr !2382
  %15 = inttoptr i32 %14 to i32*, !insn.addr !2382
  %16 = add i32 %5, -24, !insn.addr !2383
  %17 = inttoptr i32 %16 to i32*, !insn.addr !2383
  %18 = add i32 %5, -28, !insn.addr !2384
  %19 = inttoptr i32 %18 to i32*, !insn.addr !2384
  %20 = add i32 %5, -32, !insn.addr !2385
  %21 = inttoptr i32 %20 to i32*, !insn.addr !2385
  store i32 %3, i32* %eax.0.reg2mem
  store i32 %0, i32* %edi.0.reg2mem
  br label %dec_label_pc_440157

dec_label_pc_440157:                              ; preds = %dec_label_pc_440157.preheader, %dec_label_pc_440198
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  store i32 0, i32* %7, align 4, !insn.addr !2378
  store i32 0, i32* %9, align 4, !insn.addr !2379
  store i32 0, i32* %11, align 4, !insn.addr !2380
  store i32 0, i32* %13, align 4, !insn.addr !2381
  store i32 -1, i32* %15, align 4, !insn.addr !2382
  store i32 %eax.0.reload, i32* %17, align 4, !insn.addr !2383
  store i32 0, i32* %19, align 4, !insn.addr !2384
  store i32 0, i32* %21, align 4, !insn.addr !2385
  %22 = call i32 @function_40461f(), !insn.addr !2386
  %23 = icmp eq i32 %22, 0, !insn.addr !2387
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !2388
  br i1 %23, label %dec_label_pc_4401bf, label %dec_label_pc_44016e, !insn.addr !2388

dec_label_pc_44016e:                              ; preds = %dec_label_pc_440157
  store i32 1, i32* %7, align 4, !insn.addr !2389
  store i32 %22, i32* %9, align 4, !insn.addr !2390
  %24 = call i32* @_calloc_base(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2391
  %25 = icmp eq i32* %24, null, !insn.addr !2392
  br i1 %25, label %dec_label_pc_4401b5, label %dec_label_pc_44017e, !insn.addr !2393

dec_label_pc_44017e:                              ; preds = %dec_label_pc_44016e
  %26 = ptrtoint i32* %24 to i32, !insn.addr !2391
  store i32 0, i32* %7, align 4, !insn.addr !2394
  store i32 0, i32* %9, align 4, !insn.addr !2395
  store i32 %22, i32* %11, align 4, !insn.addr !2396
  store i32 %26, i32* %13, align 4, !insn.addr !2397
  store i32 -1, i32* %15, align 4, !insn.addr !2398
  %27 = inttoptr i32 %edi.0.reload to i32*, !insn.addr !2399
  %28 = load i32, i32* %27, align 4, !insn.addr !2399
  store i32 %28, i32* %17, align 4, !insn.addr !2399
  store i32 0, i32* %19, align 4, !insn.addr !2400
  store i32 0, i32* %21, align 4, !insn.addr !2401
  %29 = call i32 @function_40461f(), !insn.addr !2402
  %30 = icmp eq i32 %29, 0, !insn.addr !2403
  br i1 %30, label %dec_label_pc_4401b5, label %dec_label_pc_440198, !insn.addr !2404

dec_label_pc_440198:                              ; preds = %dec_label_pc_44017e
  store i32 0, i32* %7, align 4, !insn.addr !2405
  store i32 %26, i32* %9, align 4, !insn.addr !2406
  %31 = call i32 @function_403c60(), !insn.addr !2407
  store i32 0, i32* %11, align 4, !insn.addr !2408
  call void @_free_base(i32* nonnull @80), !insn.addr !2409
  %32 = add i32 %edi.0.reload, 4, !insn.addr !2410
  %33 = inttoptr i32 %32 to i32*, !insn.addr !2411
  %34 = load i32, i32* %33, align 4, !insn.addr !2411
  %35 = icmp eq i32 %34, 0, !insn.addr !2412
  %36 = icmp eq i1 %35, false, !insn.addr !2413
  store i32 %34, i32* %eax.0.reg2mem, !insn.addr !2413
  store i32 %32, i32* %edi.0.reg2mem, !insn.addr !2413
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2413
  br i1 %36, label %dec_label_pc_440157, label %dec_label_pc_4401bf, !insn.addr !2413

dec_label_pc_4401b5:                              ; preds = %dec_label_pc_44016e, %dec_label_pc_44017e
  %37 = ptrtoint i32* %24 to i32, !insn.addr !2391
  store i32 %37, i32* %7, align 4, !insn.addr !2414
  call void @_free_base(i32* nonnull @80), !insn.addr !2415
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !2416
  br label %dec_label_pc_4401bf, !insn.addr !2416

dec_label_pc_4401bf:                              ; preds = %dec_label_pc_440157, %dec_label_pc_440198, %dec_label_pc_440140, %dec_label_pc_4401b5, %dec_label_pc_44014f
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !2417
}

define i8** @__dcrt_get_or_create_narrow_environment_nolock() local_unnamed_addr {
dec_label_pc_44054e:
  %0 = call i8** @"common_get_or_create_environment_nolock<char>"(), !insn.addr !2418
  ret i8** %0, !insn.addr !2418
}

define void @_initterm(i32** %first, i32** %last) local_unnamed_addr {
dec_label_pc_4405e4:
  %edi.0.reg2mem = alloca i32, !insn.addr !2419
  %esi.0.reg2mem = alloca i32, !insn.addr !2419
  %0 = ptrtoint i32** %last to i32
  %1 = ptrtoint i32** %first to i32
  %2 = sub i32 3, %1, !insn.addr !2420
  %3 = add i32 %2, %0, !insn.addr !2421
  %4 = udiv i32 %3, 4, !insn.addr !2422
  %5 = icmp ult i32** %last, %first, !insn.addr !2423
  %6 = icmp ult i32 %3, 4
  %7 = or i1 %5, %6, !insn.addr !2424
  store i32 %1, i32* %esi.0.reg2mem, !insn.addr !2425
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !2425
  br i1 %7, label %dec_label_pc_440624, label %dec_label_pc_440608, !insn.addr !2425

dec_label_pc_440608:                              ; preds = %dec_label_pc_4405e4, %dec_label_pc_44061c
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %8 = inttoptr i32 %esi.0.reload to i32*, !insn.addr !2426
  %9 = load i32, i32* %8, align 4, !insn.addr !2426
  %10 = icmp eq i32 %9, 0, !insn.addr !2427
  br i1 %10, label %dec_label_pc_44061c, label %dec_label_pc_440611, !insn.addr !2428

dec_label_pc_440611:                              ; preds = %dec_label_pc_440608
  %11 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2429
  br label %dec_label_pc_44061c, !insn.addr !2430

dec_label_pc_44061c:                              ; preds = %dec_label_pc_440611, %dec_label_pc_440608
  %12 = add i32 %esi.0.reload, 4, !insn.addr !2431
  %13 = add i32 %edi.0.reload, 1, !insn.addr !2432
  %14 = icmp eq i32 %13, %4, !insn.addr !2433
  %15 = icmp eq i1 %14, false, !insn.addr !2434
  store i32 %12, i32* %esi.0.reg2mem, !insn.addr !2434
  store i32 %13, i32* %edi.0.reg2mem, !insn.addr !2434
  br i1 %15, label %dec_label_pc_440608, label %dec_label_pc_440624, !insn.addr !2434

dec_label_pc_440624:                              ; preds = %dec_label_pc_44061c, %dec_label_pc_4405e4
  ret void, !insn.addr !2435
}

define void @"__crt_seh_guarded_call<void>::operator()<<lambda_03b1d95aef87969028cfba75ccab2455>,<lambda_6e4b09c48022b2350581041d5f6b0c4c> &,<lambda_22bdf7517842c4b3e53723af5aa32b9e> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_440679:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b54(i32* nonnull @global_var_47b368, i32 8), !insn.addr !2436
  %2 = add i32 %0, 8, !insn.addr !2437
  %3 = inttoptr i32 %2 to i32*, !insn.addr !2437
  %4 = load i32, i32* %3, align 4, !insn.addr !2437
  %5 = inttoptr i32 %4 to i32*, !insn.addr !2438
  %6 = load i32, i32* %5, align 4, !insn.addr !2438
  %7 = call i32 @function_404548(i32 %6), !insn.addr !2439
  %8 = add i32 %0, -4, !insn.addr !2440
  %9 = inttoptr i32 %8 to i32*, !insn.addr !2440
  store i32 0, i32* %9, align 4, !insn.addr !2440
  call void @"<lambda_6e4b09c48022b2350581041d5f6b0c4c>::operator()"(i32* nonnull @80), !insn.addr !2441
  store i32 -2, i32* %9, align 4, !insn.addr !2442
  %10 = call i32 @function_4406ba(), !insn.addr !2443
  %11 = add i32 %0, -16, !insn.addr !2444
  %12 = inttoptr i32 %11 to i32*, !insn.addr !2444
  %13 = load i32, i32* %12, align 4, !insn.addr !2444
  call void @__writefsdword(i32 0, i32 %13), !insn.addr !2445
  ret void, !insn.addr !2446
}

define i32 @function_4406ba() local_unnamed_addr {
dec_label_pc_4406ba:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !2447
  %2 = inttoptr i32 %1 to i32*, !insn.addr !2447
  %3 = load i32, i32* %2, align 4, !insn.addr !2447
  %4 = inttoptr i32 %3 to i32*, !insn.addr !2448
  %5 = load i32, i32* %4, align 4, !insn.addr !2448
  %6 = call i32 @function_4017d5(i32 %5), !insn.addr !2449
  ret i32 %6, !insn.addr !2450
}

define void @"<lambda_6e4b09c48022b2350581041d5f6b0c4c>::operator()"(i32* %this) local_unnamed_addr {
dec_label_pc_4407f5:
  %esp.02.reg2mem = alloca i32, !insn.addr !2451
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca %_onexit_table_t.719, align 8
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_47b348 to i32), i32* %stack_var_-8, align 4, !insn.addr !2452
  %2 = call i32 @function_401b54(i32* nonnull @global_var_47b348, i32 8), !insn.addr !2453
  %3 = load i8, i8* bitcast (i1* @c_exit_complete to i8*), align 1, !insn.addr !2454
  %4 = icmp eq i8 %3, 0, !insn.addr !2454
  %5 = icmp eq i1 %4, false, !insn.addr !2455
  br i1 %5, label %dec_label_pc_4408a6, label %dec_label_pc_440810, !insn.addr !2455

dec_label_pc_440810:                              ; preds = %dec_label_pc_4407f5
  store i32 1, i32* @c_termination_complete, align 4, !insn.addr !2456
  %6 = add i32 %0, -4, !insn.addr !2457
  %7 = inttoptr i32 %6 to i32*, !insn.addr !2457
  store i32 0, i32* %7, align 4, !insn.addr !2457
  br i1 icmp ne (i32 ptrtoint (i32* @c_termination_complete to i32), i32 1), label %dec_label_pc_440863.thread, label %dec_label_pc_440863, !insn.addr !2458

dec_label_pc_440863.thread:                       ; preds = %dec_label_pc_440810
  %8 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !2452
  store i32 -2, i32* %7, align 4, !insn.addr !2459
  store i32 %8, i32* %esp.02.reg2mem
  br label %dec_label_pc_440881

dec_label_pc_440863:                              ; preds = %dec_label_pc_440810
  store %_onexit_table_t.719 { i32** bitcast (%_onexit_table_t.719* @__acrt_at_quick_exit_table to i32**), i32** undef, i32** undef }, %_onexit_table_t.719* %stack_var_-12, align 8, !insn.addr !2460
  %9 = ptrtoint %_onexit_table_t.719* %stack_var_-12 to i32, !insn.addr !2460
  %10 = call i32 @_execute_onexit_table(%_onexit_table_t* bitcast (i32* @80 to %_onexit_table_t*)), !insn.addr !2461
  %11 = bitcast %_onexit_table_t.719* %stack_var_-12 to i32*, !insn.addr !2462
  %12 = load i32, i32* %11, align 8, !insn.addr !2462
  %13 = or i32 %9, 4, !insn.addr !2462
  store i32 -2, i32* %7, align 4, !insn.addr !2459
  %14 = icmp eq i32 %12, 0, !insn.addr !2463
  %15 = icmp eq i1 %14, false, !insn.addr !2464
  store i32 %13, i32* %esp.02.reg2mem, !insn.addr !2464
  br i1 %15, label %dec_label_pc_440881, label %dec_label_pc_440870, !insn.addr !2464

dec_label_pc_440870:                              ; preds = %dec_label_pc_440863
  %16 = add nsw i32 %13, -4, !insn.addr !2465
  %17 = inttoptr i32 %16 to i32*, !insn.addr !2465
  store i32 ptrtoint ([1 x i32*]* @__xp_z to i32), i32* %17, align 8, !insn.addr !2465
  %18 = add i32 %13, -8, !insn.addr !2466
  %19 = inttoptr i32 %18 to i32*, !insn.addr !2466
  store i32 ptrtoint ([1 x i32*]* @__xp_a to i32), i32* %19, align 4, !insn.addr !2466
  call void @_initterm(i32** bitcast (i32* @80 to i32**), i32** bitcast (i32* @80 to i32**)), !insn.addr !2467
  store i32 %13, i32* %esp.02.reg2mem, !insn.addr !2468
  br label %dec_label_pc_440881, !insn.addr !2468

dec_label_pc_440881:                              ; preds = %dec_label_pc_440863.thread, %dec_label_pc_440870, %dec_label_pc_440863
  %esp.02.reload = load i32, i32* %esp.02.reg2mem
  %20 = add i32 %esp.02.reload, -4, !insn.addr !2469
  %21 = inttoptr i32 %20 to i32*, !insn.addr !2469
  store i32 ptrtoint ([1 x i32*]* @__xt_z to i32), i32* %21, align 4, !insn.addr !2469
  %22 = add i32 %esp.02.reload, -8, !insn.addr !2470
  %23 = inttoptr i32 %22 to i32*, !insn.addr !2470
  store i32 ptrtoint ([1 x i32*]* @__xt_a to i32), i32* %23, align 4, !insn.addr !2470
  call void @_initterm(i32** bitcast (i32* @80 to i32**), i32** bitcast (i32* @80 to i32**)), !insn.addr !2471
  %24 = add i32 %1, 4, !insn.addr !2472
  %25 = inttoptr i32 %24 to i32*, !insn.addr !2472
  %26 = load i32, i32* %25, align 4, !insn.addr !2472
  %27 = inttoptr i32 %26 to i32*, !insn.addr !2473
  %28 = load i32, i32* %27, align 4, !insn.addr !2473
  %29 = icmp eq i32 %28, 0, !insn.addr !2473
  %30 = icmp eq i1 %29, false, !insn.addr !2474
  br i1 %30, label %dec_label_pc_4408a6, label %dec_label_pc_440899, !insn.addr !2474

dec_label_pc_440899:                              ; preds = %dec_label_pc_440881
  store i8 1, i8* bitcast (i1* @c_exit_complete to i8*), align 1, !insn.addr !2475
  %31 = add i32 %1, 8, !insn.addr !2476
  %32 = inttoptr i32 %31 to i32*, !insn.addr !2476
  %33 = load i32, i32* %32, align 4, !insn.addr !2476
  %34 = inttoptr i32 %33 to i8*, !insn.addr !2477
  store i8 1, i8* %34, align 1, !insn.addr !2477
  br label %dec_label_pc_4408a6, !insn.addr !2477

dec_label_pc_4408a6:                              ; preds = %dec_label_pc_440899, %dec_label_pc_440881, %dec_label_pc_4407f5
  %35 = add i32 %0, -16, !insn.addr !2478
  %36 = inttoptr i32 %35 to i32*, !insn.addr !2478
  %37 = load i32, i32* %36, align 4, !insn.addr !2478
  call void @__writefsdword(i32 0, i32 %37), !insn.addr !2479
  ret void, !insn.addr !2480
}

define void @common_exit(i32 %return_code, i32 %cleanup_mode, i32 %return_mode) local_unnamed_addr {
dec_label_pc_440963:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %0 = icmp eq i32 %cleanup_mode, 0, !insn.addr !2481
  %1 = icmp eq i1 %0, false, !insn.addr !2482
  br i1 %1, label %dec_label_pc_440983, label %dec_label_pc_440971, !insn.addr !2482

dec_label_pc_440971:                              ; preds = %dec_label_pc_440963
  %2 = call i1 @is_managed_app(), !insn.addr !2483
  %3 = icmp eq i1 %2, false, !insn.addr !2484
  br i1 %3, label %dec_label_pc_440983, label %dec_label_pc_44097a, !insn.addr !2485

dec_label_pc_44097a:                              ; preds = %dec_label_pc_440971
  call void @try_cor_exit_process(i32 %return_code), !insn.addr !2486
  br label %dec_label_pc_440983, !insn.addr !2487

dec_label_pc_440983:                              ; preds = %dec_label_pc_44097a, %dec_label_pc_440971, %dec_label_pc_440963
  %4 = ptrtoint i32* %stack_var_8 to i32, !insn.addr !2488
  store i32 %4, i32* %stack_var_-28, align 4, !insn.addr !2488
  store i32 2, i32* %stack_var_-12, align 4, !insn.addr !2489
  store i32 2, i32* %stack_var_-16, align 4, !insn.addr !2490
  %5 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !2491
  call void @"__crt_seh_guarded_call<void>::operator()<<lambda_03b1d95aef87969028cfba75ccab2455>,<lambda_6e4b09c48022b2350581041d5f6b0c4c> &,<lambda_22bdf7517842c4b3e53723af5aa32b9e> >"(i32 %5, i32* nonnull %stack_var_-28, i32* nonnull %stack_var_-12, i32* nonnull %stack_var_8), !insn.addr !2492
  br i1 %0, label %dec_label_pc_4409be, label %dec_label_pc_4409bc, !insn.addr !2493

dec_label_pc_4409bc:                              ; preds = %dec_label_pc_440983
  ret void, !insn.addr !2494

dec_label_pc_4409be:                              ; preds = %dec_label_pc_440983
  call void @exit_or_terminate_process(i32 %return_code), !insn.addr !2495
  unreachable, !insn.addr !2495
}

declare void @exit_or_terminate_process(i32) local_unnamed_addr

define i1 @is_managed_app() local_unnamed_addr {
dec_label_pc_440a3b:
  %merge.reg2mem = alloca i1, !insn.addr !2496
  %0 = call i32* @GetModuleHandleW(i16* null), !insn.addr !2497
  %1 = icmp eq i32* %0, null, !insn.addr !2498
  br i1 %1, label %dec_label_pc_440a7b, label %dec_label_pc_440a47, !insn.addr !2499

dec_label_pc_440a47:                              ; preds = %dec_label_pc_440a3b
  %2 = bitcast i32* %0 to i16*, !insn.addr !2500
  %3 = load i16, i16* %2, align 2, !insn.addr !2500
  %4 = icmp eq i16 %3, 23117, !insn.addr !2500
  %5 = icmp eq i1 %4, false, !insn.addr !2501
  br i1 %5, label %dec_label_pc_440a7b, label %dec_label_pc_440a51, !insn.addr !2501

dec_label_pc_440a51:                              ; preds = %dec_label_pc_440a47
  %6 = ptrtoint i32* %0 to i32, !insn.addr !2497
  %7 = add i32 %6, 60, !insn.addr !2502
  %8 = inttoptr i32 %7 to i32*, !insn.addr !2502
  %9 = load i32, i32* %8, align 4, !insn.addr !2502
  %10 = add i32 %9, %6, !insn.addr !2503
  %11 = inttoptr i32 %10 to i32*, !insn.addr !2504
  %12 = load i32, i32* %11, align 4, !insn.addr !2504
  %13 = icmp eq i32 %12, 17744, !insn.addr !2504
  %14 = icmp eq i1 %13, false, !insn.addr !2505
  br i1 %14, label %dec_label_pc_440a7b, label %dec_label_pc_440a5e, !insn.addr !2505

dec_label_pc_440a5e:                              ; preds = %dec_label_pc_440a51
  %15 = add i32 %10, 24, !insn.addr !2506
  %16 = inttoptr i32 %15 to i16*, !insn.addr !2506
  %17 = load i16, i16* %16, align 2, !insn.addr !2506
  %18 = icmp eq i16 %17, 267, !insn.addr !2506
  %19 = icmp eq i1 %18, false, !insn.addr !2507
  br i1 %19, label %dec_label_pc_440a7b, label %dec_label_pc_440a69, !insn.addr !2507

dec_label_pc_440a69:                              ; preds = %dec_label_pc_440a5e
  %20 = add i32 %10, 116, !insn.addr !2508
  %21 = inttoptr i32 %20 to i32*, !insn.addr !2508
  %22 = load i32, i32* %21, align 4, !insn.addr !2508
  %23 = icmp ult i32 %22, 15
  br i1 %23, label %dec_label_pc_440a7b, label %dec_label_pc_440a6f, !insn.addr !2509

dec_label_pc_440a6f:                              ; preds = %dec_label_pc_440a69
  %24 = add i32 %10, 232, !insn.addr !2510
  %25 = inttoptr i32 %24 to i32*, !insn.addr !2510
  %26 = load i32, i32* %25, align 4, !insn.addr !2510
  %27 = icmp eq i32 %26, 0, !insn.addr !2510
  store i1 true, i1* %merge.reg2mem, !insn.addr !2511
  br i1 %27, label %dec_label_pc_440a7b, label %dec_label_pc_440a78, !insn.addr !2511

dec_label_pc_440a78:                              ; preds = %dec_label_pc_440a7b, %dec_label_pc_440a6f
  %merge.reload = load i1, i1* %merge.reg2mem
  ret i1 %merge.reload, !insn.addr !2512

dec_label_pc_440a7b:                              ; preds = %dec_label_pc_440a6f, %dec_label_pc_440a69, %dec_label_pc_440a5e, %dec_label_pc_440a51, %dec_label_pc_440a47, %dec_label_pc_440a3b
  store i1 false, i1* %merge.reg2mem
  br label %dec_label_pc_440a78
}

define void @try_cor_exit_process(i32 %return_code) local_unnamed_addr {
dec_label_pc_440ab8:
  %esp.1.reg2mem = alloca i32, !insn.addr !2513
  %esp.0.in.reg2mem = alloca i32*, !insn.addr !2513
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %stack_var_-8, align 4, !insn.addr !2514
  %0 = bitcast i32* %stack_var_-8 to i32**
  store i32 0, i32* %stack_var_-20, align 4, !insn.addr !2515
  %1 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !2515
  %2 = call i1 @GetModuleHandleExW(i32 0, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @global_var_473494, i32 0, i32 0), i32** nonnull %0), !insn.addr !2516
  %3 = icmp eq i1 %2, false, !insn.addr !2517
  store i32 %1, i32* %esp.1.reg2mem, !insn.addr !2518
  br i1 %3, label %dec_label_pc_440afa, label %dec_label_pc_440ad7, !insn.addr !2518

dec_label_pc_440ad7:                              ; preds = %dec_label_pc_440ab8
  %4 = load i32, i32* %stack_var_-8, align 4, !insn.addr !2519
  store i32 %4, i32* %stack_var_-32, align 4, !insn.addr !2519
  %5 = inttoptr i32 %4 to i32*, !insn.addr !2520
  %6 = call i32 ()* @GetProcAddress(i32* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_4734b0, i32 0, i32 0)), !insn.addr !2520
  %7 = icmp eq i32 ()* %6, null, !insn.addr !2521
  store i32* %stack_var_-32, i32** %esp.0.in.reg2mem, !insn.addr !2522
  br i1 %7, label %dec_label_pc_440af9, label %dec_label_pc_440aec, !insn.addr !2522

dec_label_pc_440aec:                              ; preds = %dec_label_pc_440ad7
  store i32 %return_code, i32* %stack_var_-36, align 4, !insn.addr !2523
  %8 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2524
  store i32* %stack_var_-36, i32** %esp.0.in.reg2mem, !insn.addr !2525
  br label %dec_label_pc_440af9, !insn.addr !2525

dec_label_pc_440af9:                              ; preds = %dec_label_pc_440aec, %dec_label_pc_440ad7
  %esp.0.in.reload = load i32*, i32** %esp.0.in.reg2mem
  %esp.0 = ptrtoint i32* %esp.0.in.reload to i32
  %9 = add i32 %esp.0, 4, !insn.addr !2526
  store i32 %9, i32* %esp.1.reg2mem, !insn.addr !2526
  br label %dec_label_pc_440afa, !insn.addr !2526

dec_label_pc_440afa:                              ; preds = %dec_label_pc_440af9, %dec_label_pc_440ab8
  %10 = load i32, i32* %stack_var_-8, align 4, !insn.addr !2527
  %11 = icmp eq i32 %10, 0, !insn.addr !2527
  br i1 %11, label %dec_label_pc_440b09, label %dec_label_pc_440b00, !insn.addr !2528

dec_label_pc_440b00:                              ; preds = %dec_label_pc_440afa
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %12 = add i32 %esp.1.reload, -4, !insn.addr !2529
  %13 = inttoptr i32 %12 to i32*, !insn.addr !2529
  store i32 %10, i32* %13, align 4, !insn.addr !2529
  %14 = call i1 @FreeLibrary(i32* nonnull @80), !insn.addr !2530
  br label %dec_label_pc_440b09, !insn.addr !2530

dec_label_pc_440b09:                              ; preds = %dec_label_pc_440b00, %dec_label_pc_440afa
  ret void, !insn.addr !2531
}

define void @_exit(i32 %return_code) local_unnamed_addr {
dec_label_pc_440b70:
  call void @common_exit(i32 %return_code, i32 2, i32 0), !insn.addr !2532
  ret void, !insn.addr !2533
}

define void @__acrt_set_locale_changed() local_unnamed_addr {
dec_label_pc_4419ad:
  store i32 1, i32* @__acrt_locale_changed_data, align 4, !insn.addr !2534
  ret void, !insn.addr !2535
}

define i32 @"__crt_seh_guarded_call<int>::operator()<<lambda_69a2805e680e0e292e8ba93315fe43a8>,<lambda_f03950bc5685219e0bcd2087efbe011e> &,<lambda_03fcd07e894ec930e3f35da366ca99d6> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_4436d4:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b54(i32* nonnull @global_var_47b498, i32 12), !insn.addr !2536
  %2 = add i32 %0, -28, !insn.addr !2537
  %3 = inttoptr i32 %2 to i32*, !insn.addr !2537
  store i32 0, i32* %3, align 4, !insn.addr !2537
  %4 = add i32 %0, 8, !insn.addr !2538
  %5 = inttoptr i32 %4 to i32*, !insn.addr !2538
  %6 = load i32, i32* %5, align 4, !insn.addr !2538
  %7 = inttoptr i32 %6 to i32*, !insn.addr !2539
  %8 = load i32, i32* %7, align 4, !insn.addr !2539
  %9 = call i32 @function_404548(i32 %8), !insn.addr !2540
  %10 = add i32 %0, -4, !insn.addr !2541
  %11 = inttoptr i32 %10 to i32*, !insn.addr !2541
  store i32 0, i32* %11, align 4, !insn.addr !2541
  %12 = call i32 @"<lambda_f03950bc5685219e0bcd2087efbe011e>::operator()"(i32* nonnull @80), !insn.addr !2542
  store i32 %12, i32* %3, align 4, !insn.addr !2543
  store i32 -2, i32* %11, align 4, !insn.addr !2544
  %13 = call i32 @function_443723(), !insn.addr !2545
  %14 = add i32 %0, -16, !insn.addr !2546
  %15 = inttoptr i32 %14 to i32*, !insn.addr !2546
  %16 = load i32, i32* %15, align 4, !insn.addr !2546
  call void @__writefsdword(i32 0, i32 %16), !insn.addr !2547
  ret i32 %12, !insn.addr !2548
}

define i32 @function_443723() local_unnamed_addr {
dec_label_pc_443723:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !2549
  %2 = inttoptr i32 %1 to i32*, !insn.addr !2549
  %3 = load i32, i32* %2, align 4, !insn.addr !2549
  %4 = inttoptr i32 %3 to i32*, !insn.addr !2550
  %5 = load i32, i32* %4, align 4, !insn.addr !2550
  %6 = call i32 @function_4017d5(i32 %5), !insn.addr !2551
  ret i32 %6, !insn.addr !2552
}

define i32 @"<lambda_f03950bc5685219e0bcd2087efbe011e>::operator()"(i32* %this) local_unnamed_addr {
dec_label_pc_443b0f:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = icmp eq i32 %0, 0, !insn.addr !2553
  %spec.select = sext i1 %1 to i32
  ret i32 %spec.select, !insn.addr !2554
}

define i32 @_execute_onexit_table(%_onexit_table_t* %table) local_unnamed_addr {
dec_label_pc_443c71:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %0 = ptrtoint i32* %stack_var_4 to i32, !insn.addr !2555
  store i32 %0, i32* %stack_var_-16, align 4, !insn.addr !2555
  store i32 2, i32* %stack_var_-12, align 4, !insn.addr !2556
  store i32 2, i32* %stack_var_-20, align 4, !insn.addr !2557
  %1 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !2558
  %2 = call i32 @"__crt_seh_guarded_call<int>::operator()<<lambda_69a2805e680e0e292e8ba93315fe43a8>,<lambda_f03950bc5685219e0bcd2087efbe011e> &,<lambda_03fcd07e894ec930e3f35da366ca99d6> >"(i32 %1, i32* nonnull %stack_var_-16, i32* nonnull %stack_var_-12, i32* inttoptr (i32 2 to i32*)), !insn.addr !2559
  ret i32 %2, !insn.addr !2560
}

declare i8* @"__crt_fast_encode_pointer<void *>"(i8*) local_unnamed_addr

declare i32 @strcpy_s(i8*, i32, i8*) local_unnamed_addr

define void @abort() local_unnamed_addr {
dec_label_pc_444198:
  %esp.1.reg2mem = alloca i32, !insn.addr !2561
  %esp.0.reg2mem = alloca i32, !insn.addr !2561
  %stack_var_0 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %0 = call i32 @function_403d55(), !insn.addr !2561
  %1 = icmp eq i32 %0, 0, !insn.addr !2562
  br i1 %1, label %dec_label_pc_4441a9, label %dec_label_pc_4441a1, !insn.addr !2563

dec_label_pc_4441a1:                              ; preds = %dec_label_pc_444198
  store i32 22, i32* %stack_var_-4, align 4, !insn.addr !2564
  %2 = call i32 @raise(i32 22), !insn.addr !2565
  %3 = ptrtoint i32* %stack_var_0 to i32, !insn.addr !2566
  store i32 %3, i32* %esp.0.reg2mem, !insn.addr !2566
  br label %dec_label_pc_4441a9, !insn.addr !2566

dec_label_pc_4441a9:                              ; preds = %dec_label_pc_4441a1, %dec_label_pc_444198
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %4 = load i8, i8* bitcast (i32* @__abort_behavior to i8*), align 4, !insn.addr !2567
  %5 = and i8 %4, 2, !insn.addr !2567
  %6 = icmp eq i8 %5, 0, !insn.addr !2567
  store i32 %esp.0.reload, i32* %esp.1.reg2mem, !insn.addr !2568
  br i1 %6, label %dec_label_pc_4441d4, label %dec_label_pc_4441b2, !insn.addr !2568

dec_label_pc_4441b2:                              ; preds = %dec_label_pc_4441a9
  store i32 23, i32* %stack_var_-4, align 4, !insn.addr !2569
  %7 = call i1 @IsProcessorFeaturePresent(i32 23), !insn.addr !2570
  %8 = icmp eq i1 %7, false, !insn.addr !2571
  br i1 %8, label %dec_label_pc_4441c3, label %dec_label_pc_4441be, !insn.addr !2572

dec_label_pc_4441be:                              ; preds = %dec_label_pc_4441b2
  call void @__asm_int(i32 41), !insn.addr !2573
  br label %dec_label_pc_4441c3, !insn.addr !2573

dec_label_pc_4441c3:                              ; preds = %dec_label_pc_4441be, %dec_label_pc_4441b2
  %9 = call i32 @function_403ebd(i32 3, i32 1073741845, i32 1), !insn.addr !2574
  %10 = ptrtoint i32* %stack_var_-4 to i32, !insn.addr !2575
  store i32 %10, i32* %esp.1.reg2mem, !insn.addr !2575
  br label %dec_label_pc_4441d4, !insn.addr !2575

dec_label_pc_4441d4:                              ; preds = %dec_label_pc_4441c3, %dec_label_pc_4441a9
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %11 = add i32 %esp.1.reload, -4, !insn.addr !2576
  %12 = inttoptr i32 %11 to i32*, !insn.addr !2576
  store i32 3, i32* %12, align 4, !insn.addr !2576
  call void @_exit(i32 ptrtoint (i32* @80 to i32)), !insn.addr !2577
  %13 = call i32 @__asm_int3(), !insn.addr !2578
  %14 = call i32 @__asm_int3(), !insn.addr !2579
  %15 = call i32 @__asm_int3(), !insn.addr !2580
  %16 = call i32 @__asm_int3(), !insn.addr !2581
  %17 = call i32 @__asm_int3(), !insn.addr !2582
  %18 = call i32 @__asm_int3(), !insn.addr !2583
  %19 = call i32 @__asm_int3(), !insn.addr !2584
  %20 = call i32 @__asm_int3(), !insn.addr !2585
  %21 = call i32 @__asm_int3(), !insn.addr !2586
  %22 = call i32 @__asm_int3(), !insn.addr !2587
  %23 = call i32 @__asm_int3(), !insn.addr !2588
  %24 = call i32 @__asm_int3(), !insn.addr !2589
  %25 = call i32 @__asm_int3(), !insn.addr !2590
  %26 = call i32 @__asm_int3(), !insn.addr !2591
  %27 = call i32 @__asm_int3(), !insn.addr !2592
  %28 = call i32 @__asm_int3(), !insn.addr !2593
  %29 = call i32 @__asm_int3(), !insn.addr !2594
  %30 = call i32 @__asm_int3(), !insn.addr !2595
  ret void, !insn.addr !2595
}

define i1 @"__crt_strtox::is_overflow_condition<unsigned long>"(i32 %flags, i32 %number) local_unnamed_addr {
dec_label_pc_4441fa:
  %merge.reg2mem = alloca i1, !insn.addr !2596
  %0 = and i32 %flags, 4
  %1 = icmp eq i32 %0, 0, !insn.addr !2597
  %2 = icmp eq i1 %1, false, !insn.addr !2598
  store i1 true, i1* %merge.reg2mem, !insn.addr !2598
  br i1 %2, label %dec_label_pc_44421a, label %dec_label_pc_444205, !insn.addr !2598

dec_label_pc_444205:                              ; preds = %dec_label_pc_4441fa
  %3 = and i32 %flags, 1
  %4 = icmp eq i32 %3, 0, !insn.addr !2599
  br i1 %4, label %dec_label_pc_444227, label %dec_label_pc_44420b, !insn.addr !2600

dec_label_pc_44420b:                              ; preds = %dec_label_pc_444205
  %5 = and i32 %flags, 2
  %6 = icmp eq i32 %5, 0, !insn.addr !2601
  %7 = icmp sgt i32 %number, -1
  br i1 %6, label %dec_label_pc_44421e, label %dec_label_pc_444211, !insn.addr !2602

dec_label_pc_444211:                              ; preds = %dec_label_pc_44420b
  %8 = icmp eq i32 %number, -2147483648, !insn.addr !2603
  %9 = or i1 %7, %8, !insn.addr !2604
  store i1 true, i1* %merge.reg2mem, !insn.addr !2604
  br i1 %9, label %dec_label_pc_444227, label %dec_label_pc_44421a, !insn.addr !2604

dec_label_pc_44421a:                              ; preds = %dec_label_pc_444227, %dec_label_pc_44421e, %dec_label_pc_444211, %dec_label_pc_4441fa
  %merge.reload = load i1, i1* %merge.reg2mem
  ret i1 %merge.reload, !insn.addr !2605

dec_label_pc_44421e:                              ; preds = %dec_label_pc_44420b
  store i1 true, i1* %merge.reg2mem, !insn.addr !2606
  br i1 %7, label %dec_label_pc_444227, label %dec_label_pc_44421a, !insn.addr !2606

dec_label_pc_444227:                              ; preds = %dec_label_pc_44421e, %dec_label_pc_444211, %dec_label_pc_444205
  store i1 false, i1* %merge.reg2mem
  br label %dec_label_pc_44421a
}

define i32 @"__crt_strtox::parse_integer<unsigned long,__crt_strtox::c_string_character_source<char> >"(i32 %locale, i32 %source, i32 %base, i1 %is_signed) local_unnamed_addr {
dec_label_pc_444279:
  %ebx.5.reg2mem = alloca i32, !insn.addr !2607
  %stack_var_8.4.reg2mem = alloca i32, !insn.addr !2607
  %esp.5.reg2mem = alloca i32, !insn.addr !2607
  %next_c_-16.1.reg2mem = alloca i8, !insn.addr !2607
  %.reg2mem = alloca i32, !insn.addr !2607
  %ecx.0.reg2mem = alloca i32, !insn.addr !2607
  %esp.4.reg2mem = alloca i32, !insn.addr !2607
  %ebx.4.reg2mem = alloca i32, !insn.addr !2607
  %edx.0.reg2mem = alloca i32, !insn.addr !2607
  %stack_var_8.3.reg2mem = alloca i32, !insn.addr !2607
  %c_-8.2.reg2mem = alloca i8, !insn.addr !2607
  %next_c_-16.0.reg2mem = alloca i8, !insn.addr !2607
  %esi.2.reg2mem = alloca i32, !insn.addr !2607
  %esp.3.reg2mem = alloca i32, !insn.addr !2607
  %ebx.3.reg2mem = alloca i32, !insn.addr !2607
  %stack_var_8.2.reg2mem = alloca i32, !insn.addr !2607
  %c_-8.1.reg2mem = alloca i8, !insn.addr !2607
  %eax.3.reg2mem = alloca i32, !insn.addr !2607
  %ebx.2.reg2mem = alloca i32, !insn.addr !2607
  %stack_var_8.1.reg2mem = alloca i32, !insn.addr !2607
  %stack_var_-12.1.reg2mem = alloca i8, !insn.addr !2607
  %c_-8.0.reg2mem = alloca i8, !insn.addr !2607
  %stack_var_-12.0.reg2mem = alloca i8, !insn.addr !2607
  %eax.0.reg2mem = alloca i32, !insn.addr !2607
  %ebx.0.reg2mem = alloca i32, !insn.addr !2607
  %stack_var_8.0.reg2mem = alloca i32, !insn.addr !2607
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i8 @__decompiler_undefined_function_8()
  %3 = call i8 @__decompiler_undefined_function_8()
  %locale_update_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %4 = call i32 @__decompiler_undefined_function_0()
  %5 = call i32 @function_402c2f(i32 %0, i32 %1), !insn.addr !2608
  %6 = trunc i32 %5 to i8, !insn.addr !2609
  %7 = icmp eq i8 %6, 0, !insn.addr !2609
  store i32 %source, i32* %stack_var_8.0.reg2mem, !insn.addr !2610
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !2610
  br i1 %7, label %dec_label_pc_4442b2, label %dec_label_pc_44428f, !insn.addr !2610

dec_label_pc_44428f:                              ; preds = %dec_label_pc_444279
  %8 = icmp eq i1 %is_signed, false, !insn.addr !2611
  br i1 %8, label %dec_label_pc_4442c4, label %dec_label_pc_4442a0, !insn.addr !2612

dec_label_pc_4442a0:                              ; preds = %dec_label_pc_44428f
  %9 = call i32* @_errno(), !insn.addr !2613
  store i32 22, i32* %9, align 4, !insn.addr !2614
  call void @_invalid_parameter_noinfo(), !insn.addr !2615
  store i32 %source, i32* %stack_var_8.0.reg2mem, !insn.addr !2615
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !2615
  br label %dec_label_pc_4442b2, !insn.addr !2615

dec_label_pc_4442b2:                              ; preds = %dec_label_pc_444279, %dec_label_pc_4442a0, %dec_label_pc_44448f, %dec_label_pc_444484
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %10 = icmp eq i32 %base, 0, !insn.addr !2616
  br i1 %10, label %dec_label_pc_4442be, label %dec_label_pc_4442b9, !insn.addr !2617

dec_label_pc_4442b9:                              ; preds = %dec_label_pc_4442b2
  %stack_var_8.0.reload = load i32, i32* %stack_var_8.0.reg2mem
  %11 = inttoptr i32 %base to i32*, !insn.addr !2618
  store i32 %stack_var_8.0.reload, i32* %11, align 4, !insn.addr !2618
  br label %dec_label_pc_4442be, !insn.addr !2618

dec_label_pc_4442be:                              ; preds = %dec_label_pc_4442b9, %dec_label_pc_4442b2
  ret i32 %ebx.0.reload, !insn.addr !2619

dec_label_pc_4442c4:                              ; preds = %dec_label_pc_44428f
  store i32 %locale, i32* %stack_var_-60, align 4, !insn.addr !2620
  %12 = ptrtoint i32* %stack_var_-60 to i32, !insn.addr !2620
  %13 = call i32 @function_403d91(i32 %locale), !insn.addr !2621
  %14 = add i32 %12, -4, !insn.addr !2622
  %15 = inttoptr i32 %14 to i32*
  %16 = ptrtoint i32* %locale_update_-40 to i32, !insn.addr !2622
  %17 = add i32 %12, -8, !insn.addr !2623
  %18 = inttoptr i32 %17 to i32*, !insn.addr !2623
  %19 = add i32 %12, -12, !insn.addr !2624
  %20 = inttoptr i32 %19 to i32*, !insn.addr !2624
  store i32 %source, i32* %eax.0.reg2mem, !insn.addr !2625
  br label %dec_label_pc_4442e0, !insn.addr !2625

dec_label_pc_4442e0:                              ; preds = %dec_label_pc_4442e0, %dec_label_pc_4442c4
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %21 = inttoptr i32 %eax.0.reload to i8*, !insn.addr !2626
  %22 = load i8, i8* %21, align 1, !insn.addr !2626
  %23 = zext i8 %22 to i32, !insn.addr !2626
  %24 = add i32 %eax.0.reload, 1, !insn.addr !2627
  store i32 %16, i32* %15, align 4, !insn.addr !2622
  store i32 8, i32* %18, align 4, !insn.addr !2623
  store i32 %23, i32* %20, align 4, !insn.addr !2624
  %25 = sext i8 %22 to i32, !insn.addr !2628
  %26 = call i32 @_ischartype_l(i32 %25, i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2628
  %27 = icmp eq i32 %26, 0, !insn.addr !2629
  %28 = icmp eq i1 %27, false, !insn.addr !2630
  store i32 %24, i32* %eax.0.reg2mem, !insn.addr !2630
  br i1 %28, label %dec_label_pc_4442e0, label %dec_label_pc_4442ff, !insn.addr !2630

dec_label_pc_4442ff:                              ; preds = %dec_label_pc_4442e0
  %29 = icmp eq i8 %22, 45, !insn.addr !2631
  %30 = icmp eq i1 %29, false, !insn.addr !2632
  br i1 %30, label %dec_label_pc_444313, label %dec_label_pc_44430b, !insn.addr !2632

dec_label_pc_44430b:                              ; preds = %dec_label_pc_4442ff
  %31 = or i8 %3, 2
  store i8 %31, i8* %stack_var_-12.0.reg2mem, !insn.addr !2633
  br label %dec_label_pc_444318, !insn.addr !2633

dec_label_pc_444313:                              ; preds = %dec_label_pc_4442ff
  %32 = icmp eq i8 %22, 43, !insn.addr !2634
  %33 = icmp eq i1 %32, false, !insn.addr !2635
  store i8 %22, i8* %c_-8.0.reg2mem, !insn.addr !2635
  store i32 %24, i32* %stack_var_8.1.reg2mem, !insn.addr !2635
  store i32 %23, i32* %ebx.2.reg2mem, !insn.addr !2635
  br i1 %33, label %dec_label_pc_444332, label %dec_label_pc_444318, !insn.addr !2635

dec_label_pc_444318:                              ; preds = %dec_label_pc_444313, %dec_label_pc_44430b
  %stack_var_-12.0.reload = load i8, i8* %stack_var_-12.0.reg2mem
  %34 = inttoptr i32 %24 to i8*, !insn.addr !2636
  %35 = load i8, i8* %34, align 1, !insn.addr !2636
  %36 = zext i8 %35 to i32, !insn.addr !2636
  %37 = add i32 %eax.0.reload, 2, !insn.addr !2637
  store i8 %35, i8* %c_-8.0.reg2mem, !insn.addr !2638
  store i8 %stack_var_-12.0.reload, i8* %stack_var_-12.1.reg2mem, !insn.addr !2638
  store i32 %37, i32* %stack_var_8.1.reg2mem, !insn.addr !2638
  store i32 %36, i32* %ebx.2.reg2mem, !insn.addr !2638
  br label %dec_label_pc_444332, !insn.addr !2638

dec_label_pc_444332:                              ; preds = %dec_label_pc_444318, %dec_label_pc_444313
  %ebx.2.reload = load i32, i32* %ebx.2.reg2mem
  %stack_var_8.1.reload = load i32, i32* %stack_var_8.1.reg2mem
  %stack_var_-12.1.reload = load i8, i8* %stack_var_-12.1.reg2mem
  %c_-8.0.reload = load i8, i8* %c_-8.0.reg2mem
  %38 = trunc i32 %ebx.2.reload to i8
  %39 = add i8 %38, -48, !insn.addr !2639
  %40 = icmp ult i8 %39, 10
  br i1 %40, label %dec_label_pc_44433a, label %dec_label_pc_444342, !insn.addr !2640

dec_label_pc_44433a:                              ; preds = %dec_label_pc_444332
  %sext = mul i32 %ebx.2.reload, 16777216
  %41 = sdiv i32 %sext, 16777216, !insn.addr !2641
  %42 = add nsw i32 %41, -48, !insn.addr !2642
  store i32 %42, i32* %eax.3.reg2mem, !insn.addr !2643
  br label %dec_label_pc_444365, !insn.addr !2643

dec_label_pc_444342:                              ; preds = %dec_label_pc_444332
  %43 = add i8 %38, -97, !insn.addr !2644
  %44 = icmp ult i8 %43, 26
  br i1 %44, label %dec_label_pc_44434a, label %dec_label_pc_444352, !insn.addr !2645

dec_label_pc_44434a:                              ; preds = %dec_label_pc_444342
  %sext6 = mul i32 %ebx.2.reload, 16777216
  %45 = sdiv i32 %sext6, 16777216, !insn.addr !2646
  %46 = add nsw i32 %45, -87, !insn.addr !2647
  store i32 %46, i32* %eax.3.reg2mem, !insn.addr !2648
  br label %dec_label_pc_444365, !insn.addr !2648

dec_label_pc_444352:                              ; preds = %dec_label_pc_444342
  %47 = add i8 %38, -65, !insn.addr !2649
  %48 = icmp ult i8 %47, 26
  br i1 %48, label %dec_label_pc_44435a, label %dec_label_pc_44436d, !insn.addr !2650

dec_label_pc_44435a:                              ; preds = %dec_label_pc_444352
  %sext7 = mul i32 %ebx.2.reload, 16777216
  %49 = sdiv i32 %sext7, 16777216, !insn.addr !2651
  %50 = add nsw i32 %49, -55, !insn.addr !2652
  store i32 %50, i32* %eax.3.reg2mem, !insn.addr !2653
  br label %dec_label_pc_444365, !insn.addr !2653

dec_label_pc_444365:                              ; preds = %dec_label_pc_44435a, %dec_label_pc_44434a, %dec_label_pc_44433a
  %eax.3.reload = load i32, i32* %eax.3.reg2mem
  %51 = icmp eq i32 %eax.3.reload, 0, !insn.addr !2654
  br i1 %51, label %dec_label_pc_444372, label %dec_label_pc_44436d, !insn.addr !2655

dec_label_pc_44436d:                              ; preds = %dec_label_pc_444352, %dec_label_pc_444365
  store i32 10, i32* %15, align 4, !insn.addr !2656
  store i8 %c_-8.0.reload, i8* %c_-8.1.reg2mem, !insn.addr !2657
  store i32 %stack_var_8.1.reload, i32* %stack_var_8.2.reg2mem, !insn.addr !2657
  store i32 %ebx.2.reload, i32* %ebx.3.reg2mem, !insn.addr !2657
  store i32 %12, i32* %esp.3.reg2mem, !insn.addr !2657
  store i32 10, i32* %esi.2.reg2mem, !insn.addr !2657
  br label %dec_label_pc_4443aa, !insn.addr !2657

dec_label_pc_444372:                              ; preds = %dec_label_pc_444365
  %52 = inttoptr i32 %stack_var_8.1.reload to i8*, !insn.addr !2658
  %53 = load i8, i8* %52, align 1, !insn.addr !2658
  %54 = add i32 %stack_var_8.1.reload, 1, !insn.addr !2659
  switch i8 %53, label %dec_label_pc_44438a [
    i8 120, label %dec_label_pc_4443a1
    i8 88, label %dec_label_pc_4443a1
  ]

dec_label_pc_44438a:                              ; preds = %dec_label_pc_444372
  %55 = sext i8 %53 to i32, !insn.addr !2660
  store i32 %55, i32* %15, align 4, !insn.addr !2660
  %56 = call i32 @function_402248(i32 %55), !insn.addr !2661
  store i8 %c_-8.0.reload, i8* %c_-8.1.reg2mem, !insn.addr !2662
  store i32 %54, i32* %stack_var_8.2.reg2mem, !insn.addr !2662
  store i32 %ebx.2.reload, i32* %ebx.3.reg2mem, !insn.addr !2662
  store i32 %14, i32* %esp.3.reg2mem, !insn.addr !2662
  store i32 8, i32* %esi.2.reg2mem, !insn.addr !2662
  br label %dec_label_pc_4443aa, !insn.addr !2662

dec_label_pc_4443a1:                              ; preds = %dec_label_pc_444372, %dec_label_pc_444372
  store i32 16, i32* %15, align 4, !insn.addr !2663
  %57 = inttoptr i32 %54 to i8*, !insn.addr !2664
  %58 = load i8, i8* %57, align 1, !insn.addr !2664
  %59 = zext i8 %58 to i32, !insn.addr !2664
  %60 = add i32 %stack_var_8.1.reload, 2, !insn.addr !2665
  store i8 %58, i8* %c_-8.1.reg2mem, !insn.addr !2666
  store i32 %60, i32* %stack_var_8.2.reg2mem, !insn.addr !2666
  store i32 %59, i32* %ebx.3.reg2mem, !insn.addr !2666
  store i32 %12, i32* %esp.3.reg2mem, !insn.addr !2666
  store i32 16, i32* %esi.2.reg2mem, !insn.addr !2666
  br label %dec_label_pc_4443aa, !insn.addr !2666

dec_label_pc_4443aa:                              ; preds = %dec_label_pc_4443a1, %dec_label_pc_44438a, %dec_label_pc_44436d
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %ebx.3.reload = load i32, i32* %ebx.3.reg2mem
  %stack_var_8.2.reload = load i32, i32* %stack_var_8.2.reg2mem
  %c_-8.1.reload = load i8, i8* %c_-8.1.reg2mem
  %61 = udiv i32 -1, %esi.2.reload, !insn.addr !2667
  %62 = urem i32 -1, %esi.2.reload
  %63 = sext i8 %stack_var_-12.1.reload to i32, !insn.addr !2668
  %64 = trunc i32 %61 to i8, !insn.addr !2669
  store i8 0, i8* %next_c_-16.0.reg2mem, !insn.addr !2669
  store i8 %c_-8.1.reload, i8* %c_-8.2.reg2mem, !insn.addr !2669
  store i32 %stack_var_8.2.reload, i32* %stack_var_8.3.reg2mem, !insn.addr !2669
  store i32 %63, i32* %edx.0.reg2mem, !insn.addr !2669
  store i32 %ebx.3.reload, i32* %ebx.4.reg2mem, !insn.addr !2669
  store i32 %esp.3.reload, i32* %esp.4.reg2mem, !insn.addr !2669
  br label %dec_label_pc_4443ba, !insn.addr !2669

dec_label_pc_4443ba:                              ; preds = %dec_label_pc_444415, %dec_label_pc_4443aa
  %esp.4.reload = load i32, i32* %esp.4.reg2mem
  %ebx.4.reload = load i32, i32* %ebx.4.reg2mem
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %stack_var_8.3.reload = load i32, i32* %stack_var_8.3.reg2mem
  %c_-8.2.reload = load i8, i8* %c_-8.2.reg2mem
  %next_c_-16.0.reload = load i8, i8* %next_c_-16.0.reg2mem
  %65 = trunc i32 %ebx.4.reload to i8
  %66 = add i8 %65, -48, !insn.addr !2670
  %67 = icmp ult i8 %66, 10
  br i1 %67, label %dec_label_pc_4443c2, label %dec_label_pc_4443ca, !insn.addr !2671

dec_label_pc_4443c2:                              ; preds = %dec_label_pc_4443ba
  %sext3 = mul i32 %ebx.4.reload, 16777216
  %68 = sdiv i32 %sext3, 16777216, !insn.addr !2672
  %69 = add nsw i32 %68, -48, !insn.addr !2673
  store i32 %69, i32* %ecx.0.reg2mem, !insn.addr !2674
  br label %dec_label_pc_4443ed, !insn.addr !2674

dec_label_pc_4443ca:                              ; preds = %dec_label_pc_4443ba
  %70 = add i8 %65, -97, !insn.addr !2675
  %71 = icmp ult i8 %70, 26
  br i1 %71, label %dec_label_pc_4443d2, label %dec_label_pc_4443da, !insn.addr !2676

dec_label_pc_4443d2:                              ; preds = %dec_label_pc_4443ca
  %sext4 = mul i32 %ebx.4.reload, 16777216
  %72 = sdiv i32 %sext4, 16777216, !insn.addr !2677
  %73 = add nsw i32 %72, -87, !insn.addr !2678
  store i32 %73, i32* %ecx.0.reg2mem, !insn.addr !2679
  br label %dec_label_pc_4443ed, !insn.addr !2679

dec_label_pc_4443da:                              ; preds = %dec_label_pc_4443ca
  %74 = add i8 %65, -65, !insn.addr !2680
  %75 = icmp ult i8 %74, 26
  br i1 %75, label %dec_label_pc_4443e2, label %dec_label_pc_444423, !insn.addr !2681

dec_label_pc_4443e2:                              ; preds = %dec_label_pc_4443da
  %sext5 = mul i32 %ebx.4.reload, 16777216
  %76 = sdiv i32 %sext5, 16777216, !insn.addr !2682
  %77 = add nsw i32 %76, -55, !insn.addr !2683
  store i32 %77, i32* %ecx.0.reg2mem, !insn.addr !2684
  br label %dec_label_pc_4443ed, !insn.addr !2684

dec_label_pc_4443ed:                              ; preds = %dec_label_pc_4443e2, %dec_label_pc_4443d2, %dec_label_pc_4443c2
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %78 = icmp eq i32 %ecx.0.reload, -1, !insn.addr !2685
  %79 = icmp ult i32 %ecx.0.reload, %esi.2.reload, !insn.addr !2686
  %80 = icmp eq i1 %79, false, !insn.addr !2687
  %or.cond = or i1 %78, %80
  br i1 %or.cond, label %dec_label_pc_444423, label %dec_label_pc_4443f6, !insn.addr !2688

dec_label_pc_4443f6:                              ; preds = %dec_label_pc_4443ed
  %81 = icmp ult i8 %next_c_-16.0.reload, %64, !insn.addr !2689
  br i1 %81, label %dec_label_pc_44440b, label %dec_label_pc_444400, !insn.addr !2690

dec_label_pc_444400:                              ; preds = %dec_label_pc_4443f6
  %82 = icmp eq i8 %next_c_-16.0.reload, %64, !insn.addr !2689
  %83 = icmp eq i1 %82, false, !insn.addr !2691
  %84 = icmp ugt i32 %ecx.0.reload, %62
  %or.cond11 = or i1 %83, %84
  br i1 %or.cond11, label %dec_label_pc_444407, label %dec_label_pc_44440b, !insn.addr !2691

dec_label_pc_444407:                              ; preds = %dec_label_pc_444400
  %85 = add i32 %esp.4.reload, -4, !insn.addr !2692
  %86 = inttoptr i32 %85 to i32*
  store i32 12, i32* %86, align 4, !insn.addr !2692
  store i32 12, i32* %.reg2mem, !insn.addr !2693
  store i8 %next_c_-16.0.reload, i8* %next_c_-16.1.reg2mem, !insn.addr !2693
  store i32 %85, i32* %esp.5.reg2mem, !insn.addr !2693
  br label %dec_label_pc_444415, !insn.addr !2693

dec_label_pc_44440b:                              ; preds = %dec_label_pc_444400, %dec_label_pc_4443f6
  %87 = sext i8 %next_c_-16.0.reload to i32, !insn.addr !2694
  %88 = mul nsw i32 %esi.2.reload, %87, !insn.addr !2695
  %89 = add i32 %esp.4.reload, -4, !insn.addr !2696
  %90 = inttoptr i32 %89 to i32*
  store i32 8, i32* %90, align 4, !insn.addr !2696
  %91 = add nsw i32 %ecx.0.reload, %88, !insn.addr !2697
  %92 = trunc i32 %91 to i8, !insn.addr !2698
  store i32 8, i32* %.reg2mem, !insn.addr !2698
  store i8 %92, i8* %next_c_-16.1.reg2mem, !insn.addr !2698
  store i32 %89, i32* %esp.5.reg2mem, !insn.addr !2698
  br label %dec_label_pc_444415, !insn.addr !2698

dec_label_pc_444415:                              ; preds = %dec_label_pc_44440b, %dec_label_pc_444407
  %esp.5.reload = load i32, i32* %esp.5.reg2mem
  %next_c_-16.1.reload = load i8, i8* %next_c_-16.1.reg2mem
  %.reload = load i32, i32* %.reg2mem, !insn.addr !2699
  %93 = inttoptr i32 %stack_var_8.3.reload to i8*, !insn.addr !2700
  %94 = load i8, i8* %93, align 1, !insn.addr !2700
  %95 = zext i8 %94 to i32, !insn.addr !2700
  %96 = add i32 %stack_var_8.3.reload, 1, !insn.addr !2701
  %97 = add i32 %esp.5.reload, 4, !insn.addr !2699
  %98 = or i32 %.reload, %edx.0.reload, !insn.addr !2702
  store i8 %next_c_-16.1.reload, i8* %next_c_-16.0.reg2mem, !insn.addr !2703
  store i8 %94, i8* %c_-8.2.reg2mem, !insn.addr !2703
  store i32 %96, i32* %stack_var_8.3.reg2mem, !insn.addr !2703
  store i32 %98, i32* %edx.0.reg2mem, !insn.addr !2703
  store i32 %95, i32* %ebx.4.reg2mem, !insn.addr !2703
  store i32 %97, i32* %esp.4.reg2mem, !insn.addr !2703
  br label %dec_label_pc_4443ba, !insn.addr !2703

dec_label_pc_444423:                              ; preds = %dec_label_pc_4443da, %dec_label_pc_4443ed
  %99 = sext i8 %c_-8.2.reload to i32, !insn.addr !2704
  %100 = add i32 %esp.4.reload, -4, !insn.addr !2704
  %101 = inttoptr i32 %100 to i32*, !insn.addr !2704
  store i32 %99, i32* %101, align 4, !insn.addr !2704
  %102 = call i32 @function_402248(i32 %edx.0.reload), !insn.addr !2705
  %103 = and i32 %edx.0.reload, 8
  %104 = icmp eq i32 %103, 0, !insn.addr !2706
  %105 = icmp eq i1 %104, false, !insn.addr !2707
  store i32 %source, i32* %stack_var_8.4.reg2mem, !insn.addr !2707
  store i32 0, i32* %ebx.5.reg2mem, !insn.addr !2707
  br i1 %105, label %dec_label_pc_444443, label %dec_label_pc_444484, !insn.addr !2707

dec_label_pc_444443:                              ; preds = %dec_label_pc_444423
  %106 = sext i8 %next_c_-16.0.reload to i32, !insn.addr !2708
  %107 = add i32 %esp.4.reload, -8, !insn.addr !2709
  %108 = inttoptr i32 %107 to i32*, !insn.addr !2709
  store i32 %106, i32* %108, align 4, !insn.addr !2709
  %109 = add i32 %esp.4.reload, -12, !insn.addr !2710
  %110 = inttoptr i32 %109 to i32*, !insn.addr !2710
  store i32 %edx.0.reload, i32* %110, align 4, !insn.addr !2710
  %111 = call i32 @function_4015c3(), !insn.addr !2711
  %112 = trunc i32 %111 to i8, !insn.addr !2712
  %113 = icmp eq i8 %112, 0, !insn.addr !2712
  br i1 %113, label %dec_label_pc_44447b, label %dec_label_pc_444453, !insn.addr !2713

dec_label_pc_444453:                              ; preds = %dec_label_pc_444443
  %114 = call i32* @_errno(), !insn.addr !2714
  store i32 34, i32* %114, align 4, !insn.addr !2715
  %115 = and i32 %edx.0.reload, 1
  %116 = icmp eq i32 %115, 0, !insn.addr !2716
  %117 = icmp eq i1 %116, false, !insn.addr !2717
  store i32 %stack_var_8.3.reload, i32* %stack_var_8.4.reg2mem, !insn.addr !2717
  store i32 -1, i32* %ebx.5.reg2mem, !insn.addr !2717
  br i1 %117, label %dec_label_pc_444468, label %dec_label_pc_444484, !insn.addr !2717

dec_label_pc_444468:                              ; preds = %dec_label_pc_444453
  %118 = and i32 %edx.0.reload, 2
  %119 = icmp eq i32 %118, 0, !insn.addr !2718
  %. = select i1 %119, i32 2147483647, i32 -2147483648
  store i32 %stack_var_8.3.reload, i32* %stack_var_8.4.reg2mem, !insn.addr !2719
  store i32 %., i32* %ebx.5.reg2mem, !insn.addr !2719
  br label %dec_label_pc_444484, !insn.addr !2719

dec_label_pc_44447b:                              ; preds = %dec_label_pc_444443
  %120 = and i32 %edx.0.reload, 2
  %121 = icmp eq i32 %120, 0, !insn.addr !2720
  %122 = sub nsw i32 0, %106
  %spec.select = select i1 %121, i32 %106, i32 %122
  store i32 %stack_var_8.3.reload, i32* %stack_var_8.4.reg2mem
  store i32 %spec.select, i32* %ebx.5.reg2mem
  br label %dec_label_pc_444484

dec_label_pc_444484:                              ; preds = %dec_label_pc_44447b, %dec_label_pc_444453, %dec_label_pc_444468, %dec_label_pc_444423
  %ebx.5.reload = load i32, i32* %ebx.5.reg2mem
  %stack_var_8.4.reload = load i32, i32* %stack_var_8.4.reg2mem
  %123 = icmp eq i8 %2, 0, !insn.addr !2721
  store i32 %stack_var_8.4.reload, i32* %stack_var_8.0.reg2mem, !insn.addr !2722
  store i32 %ebx.5.reload, i32* %ebx.0.reg2mem, !insn.addr !2722
  br i1 %123, label %dec_label_pc_4442b2, label %dec_label_pc_44448f, !insn.addr !2722

dec_label_pc_44448f:                              ; preds = %dec_label_pc_444484
  %124 = add i32 %4, 848, !insn.addr !2723
  %125 = inttoptr i32 %124 to i32*, !insn.addr !2723
  %126 = load i32, i32* %125, align 4, !insn.addr !2723
  %127 = and i32 %126, -3, !insn.addr !2723
  store i32 %127, i32* %125, align 4, !insn.addr !2723
  store i32 %stack_var_8.4.reload, i32* %stack_var_8.0.reg2mem, !insn.addr !2724
  store i32 %ebx.5.reload, i32* %ebx.0.reg2mem, !insn.addr !2724
  br label %dec_label_pc_4442b2, !insn.addr !2724
}

define void @"__crt_strtox::c_string_character_source<char>::unget"(i32* %this, i8 %c) local_unnamed_addr {
dec_label_pc_445a0e:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = ptrtoint i32* %this to i32
  %2 = add i32 %0, -1, !insn.addr !2725
  %3 = inttoptr i32 %0 to i32*, !insn.addr !2726
  store i32 %2, i32* %3, align 4, !insn.addr !2726
  %4 = trunc i32 %1 to i8, !insn.addr !2727
  %5 = icmp eq i8 %4, 0, !insn.addr !2727
  br i1 %5, label %dec_label_pc_445a33, label %dec_label_pc_445a1f, !insn.addr !2728

dec_label_pc_445a1f:                              ; preds = %dec_label_pc_445a0e
  %6 = inttoptr i32 %2 to i8*, !insn.addr !2729
  %7 = load i8, i8* %6, align 1, !insn.addr !2729
  %8 = icmp eq i8 %7, %4, !insn.addr !2729
  br i1 %8, label %dec_label_pc_445a33, label %dec_label_pc_445a23, !insn.addr !2730

dec_label_pc_445a23:                              ; preds = %dec_label_pc_445a1f
  %9 = call i32* @_errno(), !insn.addr !2731
  store i32 22, i32* %9, align 4, !insn.addr !2732
  call void @_invalid_parameter_noinfo(), !insn.addr !2733
  br label %dec_label_pc_445a33, !insn.addr !2733

dec_label_pc_445a33:                              ; preds = %dec_label_pc_445a23, %dec_label_pc_445a1f, %dec_label_pc_445a0e
  ret void, !insn.addr !2734
}

declare i1 @"__crt_strtox::c_string_character_source<char>::validate"(i32*) local_unnamed_addr

declare i32 @wcsncmp(i16*, i16*, i32) local_unnamed_addr

define void @__acrt_call_reportfault(i32 %debugger_hook_code, i32 %_exception_code, i32 %_exception_flags) local_unnamed_addr {
dec_label_pc_445eba:
  %ContextRecord_-724 = alloca i32, align 4
  %ExceptionRecord_-804 = alloca i32, align 4
  %stack_var_-812 = alloca i32, align 4
  %0 = icmp eq i32 %_exception_code, -1, !insn.addr !2735
  br i1 %0, label %dec_label_pc_445edf, label %dec_label_pc_445ed6, !insn.addr !2736

dec_label_pc_445ed6:                              ; preds = %dec_label_pc_445eba
  %1 = call i32 @function_403832(i32 %_exception_code), !insn.addr !2737
  br label %dec_label_pc_445edf, !insn.addr !2738

dec_label_pc_445edf:                              ; preds = %dec_label_pc_445ed6, %dec_label_pc_445eba
  %2 = bitcast i32* %ExceptionRecord_-804 to i8*, !insn.addr !2739
  call void @memset(i8* nonnull %2, i8 0, i32 80), !insn.addr !2739
  %3 = bitcast i32* %ContextRecord_-724 to i8*
  call void @memset(i8* nonnull %3, i8 0, i32 716), !insn.addr !2740
  %4 = ptrtoint i32* %ExceptionRecord_-804 to i32, !insn.addr !2741
  store i32 %4, i32* %stack_var_-812, align 4, !insn.addr !2741
  store i32 65537, i32* %ContextRecord_-724, align 4, !insn.addr !2742
  store i32 %_exception_flags, i32* %ExceptionRecord_-804, align 4, !insn.addr !2743
  %5 = call i1 @IsDebuggerPresent(), !insn.addr !2744
  %6 = call i32 (%_EXCEPTION_POINTERS*)* @SetUnhandledExceptionFilter(i32 (%_EXCEPTION_POINTERS*)* null), !insn.addr !2745
  %7 = bitcast i32* %stack_var_-812 to %_EXCEPTION_POINTERS*
  %8 = call i32 @UnhandledExceptionFilter(%_EXCEPTION_POINTERS* nonnull %7), !insn.addr !2746
  %9 = icmp eq i32 %8, 0, !insn.addr !2747
  %10 = icmp eq i1 %9, false, !insn.addr !2748
  br i1 %10, label %dec_label_pc_445fe6, label %dec_label_pc_445fd3, !insn.addr !2748

dec_label_pc_445fd3:                              ; preds = %dec_label_pc_445edf
  %11 = icmp eq i1 %5, false, !insn.addr !2749
  %12 = icmp eq i1 %11, false, !insn.addr !2750
  %or.cond = or i1 %0, %12
  br i1 %or.cond, label %dec_label_pc_445fe6, label %dec_label_pc_445fdd, !insn.addr !2750

dec_label_pc_445fdd:                              ; preds = %dec_label_pc_445fd3
  %13 = call i32 @function_403832(i32 %_exception_code), !insn.addr !2751
  br label %dec_label_pc_445fe6, !insn.addr !2752

dec_label_pc_445fe6:                              ; preds = %dec_label_pc_445fdd, %dec_label_pc_445fd3, %dec_label_pc_445edf
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !2753
  ret void, !insn.addr !2754
}

declare void @_invalid_parameter_noinfo() local_unnamed_addr

define void @_invoke_watson(i16* %expression, i16* %function_name, i16* %file_name, i32 %line_number, i32 %reserved) local_unnamed_addr {
dec_label_pc_446134:
  %0 = call i1 @IsProcessorFeaturePresent(i32 23), !insn.addr !2755
  %1 = icmp eq i1 %0, false, !insn.addr !2756
  br i1 %1, label %dec_label_pc_446145, label %dec_label_pc_446140, !insn.addr !2757

dec_label_pc_446140:                              ; preds = %dec_label_pc_446134
  call void @__asm_int(i32 41), !insn.addr !2758
  br label %dec_label_pc_446145, !insn.addr !2758

dec_label_pc_446145:                              ; preds = %dec_label_pc_446140, %dec_label_pc_446134
  %2 = call i32 @function_403ebd(i32 2, i32 -1073740777, i32 1), !insn.addr !2759
  %3 = call i32* @GetCurrentProcess(), !insn.addr !2760
  %4 = call i1 @TerminateProcess(i32* %3, i32 ptrtoint (i32* @80 to i32)), !insn.addr !2761
  ret void, !insn.addr !2762
}

declare void @__acrt_errno_map_os_error(i32) local_unnamed_addr

declare i32* @__doserrno() local_unnamed_addr

declare i32* @_errno() local_unnamed_addr

declare i32* @_calloc_base(i32, i32) local_unnamed_addr

declare void @_free_base(i32*) local_unnamed_addr

declare i32* @try_get_AreFileApisANSI() local_unnamed_addr

declare i32* @try_get_CompareStringEx() local_unnamed_addr

declare i32* @try_get_LCMapStringEx() local_unnamed_addr

declare i32* @try_get_LocaleNameToLCID() local_unnamed_addr

define i32 @try_get_first_available_module_2(i32* %first, i32* %last) local_unnamed_addr {
dec_label_pc_446a73:
  %storemerge1.reg2mem = alloca i32, !insn.addr !2763
  %esp.3.reg2mem = alloca i32, !insn.addr !2763
  %esp.2.reg2mem = alloca i32, !insn.addr !2763
  %esi.0.reg2mem = alloca i32, !insn.addr !2763
  %esp.1.reg2mem = alloca i32, !insn.addr !2763
  %esp.03.reg2mem = alloca i32, !insn.addr !2763
  %esp.44.reg2mem = alloca i32, !insn.addr !2763
  %storemerge5.reg2mem = alloca i32, !insn.addr !2763
  %stack_var_-20 = alloca i32, align 4
  %0 = icmp eq i32* %first, %last, !insn.addr !2764
  %1 = icmp eq i1 %0, false, !insn.addr !2765
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !2765
  br i1 %1, label %dec_label_pc_446a84.lr.ph, label %dec_label_pc_446b31, !insn.addr !2765

dec_label_pc_446a84.lr.ph:                        ; preds = %dec_label_pc_446a73
  %2 = ptrtoint i32* %last to i32
  %3 = ptrtoint i32* %first to i32
  %4 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !2766
  store i32 %3, i32* %storemerge5.reg2mem
  store i32 %4, i32* %esp.44.reg2mem
  br label %dec_label_pc_446a84

dec_label_pc_446a84:                              ; preds = %dec_label_pc_446a84.lr.ph, %dec_label_pc_446b23
  %esp.44.reload = load i32, i32* %esp.44.reg2mem
  %storemerge5.reload = load i32, i32* %storemerge5.reg2mem
  %5 = inttoptr i32 %storemerge5.reload to i32*, !insn.addr !2767
  %6 = load i32, i32* %5, align 4, !insn.addr !2767
  %7 = mul i32 %6, 4, !insn.addr !2768
  %8 = add i32 %7, ptrtoint (i32* @module_handles to i32), !insn.addr !2768
  %9 = inttoptr i32 %8 to i32*, !insn.addr !2769
  %10 = load i32, i32* %9, align 4, !insn.addr !2769
  store i32 %esp.44.reload, i32* %esp.3.reg2mem
  store i32 %10, i32* %storemerge1.reg2mem
  switch i32 %10, label %dec_label_pc_446b31 [
    i32 0, label %dec_label_pc_446aa2
    i32 -1, label %dec_label_pc_446b23
  ]

dec_label_pc_446aa2:                              ; preds = %dec_label_pc_446a84
  %11 = add i32 %7, ptrtoint ([20 x i16*]* @module_names to i32), !insn.addr !2770
  %12 = inttoptr i32 %11 to i32*, !insn.addr !2770
  %13 = load i32, i32* %12, align 4, !insn.addr !2770
  %14 = add i32 %esp.44.reload, -4, !insn.addr !2771
  %15 = inttoptr i32 %14 to i32*, !insn.addr !2771
  store i32 2048, i32* %15, align 4, !insn.addr !2771
  %16 = add i32 %esp.44.reload, -8, !insn.addr !2772
  %17 = inttoptr i32 %16 to i32*, !insn.addr !2772
  store i32 0, i32* %17, align 4, !insn.addr !2772
  %18 = add i32 %esp.44.reload, -12, !insn.addr !2773
  %19 = inttoptr i32 %18 to i32*, !insn.addr !2773
  store i32 %13, i32* %19, align 4, !insn.addr !2773
  %20 = inttoptr i32 %8 to i16*, !insn.addr !2774
  %21 = call i32* @LoadLibraryExW(i16* %20, i32* nonnull @80, i32 ptrtoint (i32* @80 to i32)), !insn.addr !2774
  %22 = ptrtoint i32* %21 to i32, !insn.addr !2774
  %23 = icmp eq i32* %21, null, !insn.addr !2775
  %24 = icmp eq i1 %23, false, !insn.addr !2776
  store i32 %18, i32* %esp.1.reg2mem, !insn.addr !2776
  store i32 %22, i32* %esi.0.reg2mem, !insn.addr !2776
  br i1 %24, label %dec_label_pc_446b0d, label %dec_label_pc_446abd, !insn.addr !2776

dec_label_pc_446abd:                              ; preds = %dec_label_pc_446aa2
  %25 = call i32 @GetLastError(), !insn.addr !2777
  %26 = icmp eq i32 %25, 87, !insn.addr !2778
  %27 = icmp eq i1 %26, false, !insn.addr !2779
  store i32 %18, i32* %esp.03.reg2mem, !insn.addr !2779
  br i1 %27, label %dec_label_pc_446b03, label %dec_label_pc_446ac8, !insn.addr !2779

dec_label_pc_446ac8:                              ; preds = %dec_label_pc_446abd
  %28 = add i32 %esp.44.reload, -16, !insn.addr !2780
  %29 = inttoptr i32 %28 to i32*, !insn.addr !2780
  store i32 7, i32* %29, align 4, !insn.addr !2780
  %30 = add i32 %esp.44.reload, -20, !insn.addr !2781
  %31 = inttoptr i32 %30 to i32*, !insn.addr !2781
  store i32 ptrtoint ([8 x i16]* @global_var_472188 to i32), i32* %31, align 4, !insn.addr !2781
  %32 = add i32 %esp.44.reload, -24, !insn.addr !2782
  %33 = inttoptr i32 %32 to i32*, !insn.addr !2782
  store i32 %13, i32* %33, align 4, !insn.addr !2782
  %34 = call i32 @wcsncmp(i16* bitcast (i32* @80 to i16*), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2783
  %35 = icmp eq i32 %34, 0, !insn.addr !2784
  store i32 %18, i32* %esp.03.reg2mem, !insn.addr !2785
  br i1 %35, label %dec_label_pc_446b03, label %dec_label_pc_446adc, !insn.addr !2785

dec_label_pc_446adc:                              ; preds = %dec_label_pc_446ac8
  store i32 7, i32* %29, align 4, !insn.addr !2786
  store i32 ptrtoint ([8 x i16]* @global_var_473e14 to i32), i32* %31, align 4, !insn.addr !2787
  store i32 %13, i32* %33, align 4, !insn.addr !2788
  %36 = call i32 @wcsncmp(i16* bitcast (i32* @80 to i16*), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2789
  %37 = icmp eq i32 %36, 0, !insn.addr !2790
  store i32 %18, i32* %esp.03.reg2mem, !insn.addr !2791
  br i1 %37, label %dec_label_pc_446b03, label %dec_label_pc_446aff, !insn.addr !2791

dec_label_pc_446aff:                              ; preds = %dec_label_pc_446adc
  store i32 %22, i32* %29, align 4, !insn.addr !2792
  store i32 %22, i32* %31, align 4, !insn.addr !2793
  store i32 %13, i32* %33, align 4, !insn.addr !2794
  %38 = call i32* @LoadLibraryExW(i16* bitcast (i32* @80 to i16*), i32* nonnull @80, i32 ptrtoint (i32* @80 to i32)), !insn.addr !2795
  %39 = ptrtoint i32* %38 to i32, !insn.addr !2795
  %40 = icmp eq i32* %38, null, !insn.addr !2796
  %41 = icmp eq i1 %40, false, !insn.addr !2797
  store i32 %32, i32* %esp.03.reg2mem, !insn.addr !2797
  store i32 %32, i32* %esp.1.reg2mem, !insn.addr !2797
  store i32 %39, i32* %esi.0.reg2mem, !insn.addr !2797
  br i1 %41, label %dec_label_pc_446b0d, label %dec_label_pc_446b03, !insn.addr !2797

dec_label_pc_446b03:                              ; preds = %dec_label_pc_446adc, %dec_label_pc_446ac8, %dec_label_pc_446abd, %dec_label_pc_446aff
  %esp.03.reload = load i32, i32* %esp.03.reg2mem
  store i32 -1, i32* %9, align 4, !insn.addr !2798
  store i32 %esp.03.reload, i32* %esp.3.reg2mem, !insn.addr !2799
  br label %dec_label_pc_446b23, !insn.addr !2799

dec_label_pc_446b0d:                              ; preds = %dec_label_pc_446aff, %dec_label_pc_446aa2
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %42 = load i32, i32* %9, align 4, !insn.addr !2800
  store i32 %esi.0.reload, i32* %9, align 4, !insn.addr !2800
  %43 = icmp eq i32 %42, 0, !insn.addr !2801
  store i32 %esp.1.reload, i32* %esp.2.reg2mem, !insn.addr !2802
  br i1 %43, label %dec_label_pc_446b1f, label %dec_label_pc_446b18, !insn.addr !2802

dec_label_pc_446b18:                              ; preds = %dec_label_pc_446b0d
  %44 = add i32 %esp.1.reload, -4, !insn.addr !2803
  %45 = inttoptr i32 %44 to i32*, !insn.addr !2803
  store i32 %esi.0.reload, i32* %45, align 4, !insn.addr !2803
  %46 = call i1 @FreeLibrary(i32* nonnull @80), !insn.addr !2804
  store i32 %44, i32* %esp.2.reg2mem, !insn.addr !2804
  br label %dec_label_pc_446b1f, !insn.addr !2804

dec_label_pc_446b1f:                              ; preds = %dec_label_pc_446b18, %dec_label_pc_446b0d
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %47 = icmp eq i32 %esi.0.reload, 0, !insn.addr !2805
  %48 = icmp eq i1 %47, false, !insn.addr !2806
  store i32 %esp.2.reload, i32* %esp.3.reg2mem, !insn.addr !2806
  store i32 %esi.0.reload, i32* %storemerge1.reg2mem, !insn.addr !2806
  br i1 %48, label %dec_label_pc_446b31, label %dec_label_pc_446b23, !insn.addr !2806

dec_label_pc_446b23:                              ; preds = %dec_label_pc_446a84, %dec_label_pc_446b1f, %dec_label_pc_446b03
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %49 = add i32 %storemerge5.reload, 4, !insn.addr !2807
  %50 = icmp eq i32 %49, %2, !insn.addr !2764
  %51 = icmp eq i1 %50, false, !insn.addr !2765
  store i32 %49, i32* %storemerge5.reg2mem, !insn.addr !2765
  store i32 %esp.3.reload, i32* %esp.44.reg2mem, !insn.addr !2765
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !2765
  br i1 %51, label %dec_label_pc_446a84, label %dec_label_pc_446b31, !insn.addr !2765

dec_label_pc_446b31:                              ; preds = %dec_label_pc_446b23, %dec_label_pc_446b1f, %dec_label_pc_446a84, %dec_label_pc_446a73
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  ret i32 %storemerge1.reload, !insn.addr !2808
}

define i8* @try_get_function_2(i32 %id, i8* %name, i32* %first_module_id, i32* %last_module_id) local_unnamed_addr {
dec_label_pc_446b6b:
  %eax.0.reg2mem = alloca i32, !insn.addr !2809
  %edi.0.reg2mem = alloca i32, !insn.addr !2809
  %esp.0.in.reg2mem = alloca i32*, !insn.addr !2809
  %storemerge3.reg2mem = alloca i32, !insn.addr !2809
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %0 = mul i32 %id, 4, !insn.addr !2810
  %1 = add i32 %0, ptrtoint (i32* @encoded_function_pointers to i32), !insn.addr !2810
  %2 = inttoptr i32 %1 to i32*, !insn.addr !2811
  %3 = load i32, i32* %2, align 4, !insn.addr !2811
  %4 = load i32, i32* @__security_cookie, align 4, !insn.addr !2812
  %5 = xor i32 %4, %3, !insn.addr !2813
  %6 = and i32 %4, 31, !insn.addr !2814
  %7 = icmp eq i32 %6, 0, !insn.addr !2815
  store i32 %5, i32* %storemerge3.reg2mem, !insn.addr !2815
  br i1 %7, label %13, label %8, !insn.addr !2815

; <label>:8:                                      ; preds = %dec_label_pc_446b6b
  %9 = lshr i32 %5, %6, !insn.addr !2815
  %10 = sub nsw i32 32, %6, !insn.addr !2815
  %11 = shl i32 %5, %10, !insn.addr !2815
  %12 = or i32 %11, %9, !insn.addr !2815
  store i32 %12, i32* %storemerge3.reg2mem, !insn.addr !2815
  br label %13, !insn.addr !2815

; <label>:13:                                     ; preds = %dec_label_pc_446b6b, %8
  %storemerge3.reload = load i32, i32* %storemerge3.reg2mem
  %14 = icmp eq i32 %storemerge3.reload, -1, !insn.addr !2816
  %15 = icmp eq i1 %14, false, !insn.addr !2817
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2817
  br i1 %15, label %dec_label_pc_446b99, label %dec_label_pc_446bea, !insn.addr !2817

dec_label_pc_446b99:                              ; preds = %13
  %16 = icmp eq i32 %storemerge3.reload, 0, !insn.addr !2818
  store i32 %storemerge3.reload, i32* %eax.0.reg2mem, !insn.addr !2819
  br i1 %16, label %dec_label_pc_446ba1, label %dec_label_pc_446bea, !insn.addr !2819

dec_label_pc_446ba1:                              ; preds = %dec_label_pc_446b99
  %17 = ptrtoint i32* %first_module_id to i32
  store i32 %17, i32* %stack_var_-24, align 4, !insn.addr !2820
  %18 = call i32 @try_get_first_available_module_2(i32* %first_module_id, i32* %last_module_id), !insn.addr !2821
  %19 = icmp eq i32 %18, 0, !insn.addr !2822
  store i32* %stack_var_-16, i32** %esp.0.in.reg2mem, !insn.addr !2823
  br i1 %19, label %dec_label_pc_446bd0, label %dec_label_pc_446bb3, !insn.addr !2823

dec_label_pc_446bb3:                              ; preds = %dec_label_pc_446ba1
  store i32 %18, i32* %stack_var_-24, align 4, !insn.addr !2824
  %20 = inttoptr i32 %18 to i32*, !insn.addr !2825
  %21 = call i32 ()* @GetProcAddress(i32* %20, i8* %name), !insn.addr !2825
  %22 = icmp eq i32 ()* %21, null, !insn.addr !2826
  store i32* %stack_var_-24, i32** %esp.0.in.reg2mem, !insn.addr !2827
  br i1 %22, label %dec_label_pc_446bd0, label %dec_label_pc_446bc3, !insn.addr !2827

dec_label_pc_446bc3:                              ; preds = %dec_label_pc_446bb3
  %23 = ptrtoint i32 ()* %21 to i32, !insn.addr !2825
  %24 = call i32 @function_40315c(i32 %23), !insn.addr !2828
  store i32 %24, i32* %2, align 4, !insn.addr !2829
  store i32 %23, i32* %eax.0.reg2mem, !insn.addr !2830
  br label %dec_label_pc_446bea, !insn.addr !2830

dec_label_pc_446bd0:                              ; preds = %dec_label_pc_446bb3, %dec_label_pc_446ba1
  %esp.0.in.reload = load i32*, i32** %esp.0.in.reg2mem
  %esp.0 = ptrtoint i32* %esp.0.in.reload to i32
  %25 = load i32, i32* @__security_cookie, align 4, !insn.addr !2831
  %26 = add i32 %esp.0, -4, !insn.addr !2832
  %27 = inttoptr i32 %26 to i32*, !insn.addr !2832
  store i32 32, i32* %27, align 4, !insn.addr !2832
  %28 = sub i32 0, %25, !insn.addr !2833
  %29 = and i32 %28, 31, !insn.addr !2834
  %30 = icmp eq i32 %29, 0, !insn.addr !2834
  store i32 -1, i32* %edi.0.reg2mem, !insn.addr !2834
  br i1 %30, label %36, label %31, !insn.addr !2834

; <label>:31:                                     ; preds = %dec_label_pc_446bd0
  %32 = lshr i32 -1, %29, !insn.addr !2834
  %33 = sub nsw i32 32, %29, !insn.addr !2834
  %34 = shl i32 -1, %33, !insn.addr !2834
  %35 = or i32 %34, %32, !insn.addr !2834
  store i32 %35, i32* %edi.0.reg2mem, !insn.addr !2834
  br label %36, !insn.addr !2834

; <label>:36:                                     ; preds = %dec_label_pc_446bd0, %31
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %37 = load i32, i32* @__security_cookie, align 4, !insn.addr !2835
  %38 = xor i32 %37, %edi.0.reload, !insn.addr !2835
  store i32 %38, i32* %2, align 4, !insn.addr !2836
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2837
  br label %dec_label_pc_446bea, !insn.addr !2837

dec_label_pc_446bea:                              ; preds = %dec_label_pc_446bc3, %36, %dec_label_pc_446b99, %13
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %39 = inttoptr i32 %eax.0.reload to i8*, !insn.addr !2838
  ret i8* %39, !insn.addr !2838
}

define i32 @__acrt_AreFileApisANSI() local_unnamed_addr {
dec_label_pc_446e60:
  %0 = call i32* @try_get_AreFileApisANSI(), !insn.addr !2839
  %1 = icmp eq i32* %0, null, !insn.addr !2840
  br i1 %1, label %dec_label_pc_446e7a, label %dec_label_pc_446e6e, !insn.addr !2841

dec_label_pc_446e6e:                              ; preds = %dec_label_pc_446e60
  %2 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2842
  ret i32 %2, !insn.addr !2843

dec_label_pc_446e7a:                              ; preds = %dec_label_pc_446e60
  ret i32 1, !insn.addr !2844
}

define i32 @__acrt_CompareStringEx(i16* %locale_name, i32 %flags, i16* %string1, i32 %string1_count, i16* %string2, i32 %string2_count, i32 %version, i8* %reserved, i32 %param) local_unnamed_addr {
dec_label_pc_446e86:
  %storemerge.reg2mem = alloca i32, !insn.addr !2845
  %0 = call i32* @try_get_CompareStringEx(), !insn.addr !2846
  %1 = icmp eq i32* %0, null, !insn.addr !2847
  br i1 %1, label %dec_label_pc_446ebe, label %dec_label_pc_446e97, !insn.addr !2848

dec_label_pc_446e97:                              ; preds = %dec_label_pc_446e86
  %2 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2849
  store i32 %2, i32* %storemerge.reg2mem, !insn.addr !2850
  br label %dec_label_pc_446ede, !insn.addr !2850

dec_label_pc_446ebe:                              ; preds = %dec_label_pc_446e86
  %3 = ptrtoint i16* %locale_name to i32
  %4 = call i32 @function_402b53(i32 %3, i32 0, i32 %flags), !insn.addr !2851
  %5 = call i32 @CompareStringW(i32 %4, i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2852
  store i32 %5, i32* %storemerge.reg2mem, !insn.addr !2852
  br label %dec_label_pc_446ede, !insn.addr !2852

dec_label_pc_446ede:                              ; preds = %dec_label_pc_446ebe, %dec_label_pc_446e97
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !2853
}

define i8* @__acrt_FlsGetValue(i32 %fls_index) local_unnamed_addr {
dec_label_pc_446fff:
  %0 = call i8* @try_get_function_2(i32 5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_4721d8, i32 0, i32 0), i32* nonnull @global_var_473e9c, i32* nonnull @global_var_473ea4), !insn.addr !2854
  %1 = icmp eq i8* %0, null, !insn.addr !2855
  br i1 %1, label %dec_label_pc_447036, label %dec_label_pc_447024, !insn.addr !2856

dec_label_pc_447024:                              ; preds = %dec_label_pc_446fff
  %2 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2857
  %3 = inttoptr i32 %2 to i8*, !insn.addr !2858
  ret i8* %3, !insn.addr !2858

dec_label_pc_447036:                              ; preds = %dec_label_pc_446fff
  %4 = call i32* @TlsGetValue(i32 ptrtoint (i32* @80 to i32)), !insn.addr !2859
  %5 = bitcast i32* %4 to i8*, !insn.addr !2859
  ret i8* %5, !insn.addr !2859
}

define i32 @__acrt_FlsSetValue(i32 %fls_index, i8* %fls_data) local_unnamed_addr {
dec_label_pc_44704d:
  %0 = call i8* @try_get_function_2(i32 6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_4721f4, i32 0, i32 0), i32* nonnull @global_var_473ea8, i32* nonnull @global_var_473eb0), !insn.addr !2860
  %1 = icmp eq i8* %0, null, !insn.addr !2861
  br i1 %1, label %dec_label_pc_447087, label %dec_label_pc_447072, !insn.addr !2862

dec_label_pc_447072:                              ; preds = %dec_label_pc_44704d
  %2 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2863
  ret i32 %2, !insn.addr !2864

dec_label_pc_447087:                              ; preds = %dec_label_pc_44704d
  %3 = call i1 @TlsSetValue(i32 ptrtoint (i32* @80 to i32), i32* nonnull @80), !insn.addr !2865
  %4 = sext i1 %3 to i32, !insn.addr !2865
  ret i32 %4, !insn.addr !2865
}

define void @__acrt_GetSystemTimePreciseAsFileTime(%_FILETIME* %system_time) local_unnamed_addr {
dec_label_pc_44719a:
  %0 = call i8* @try_get_function_2(i32 13, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_473f90, i32 0, i32 0), i32* nonnull @global_var_473f8c, i32* bitcast ([31 x i8]* @global_var_473f90 to i32*)), !insn.addr !2866
  %1 = icmp eq i8* %0, null, !insn.addr !2867
  br i1 %1, label %dec_label_pc_4471d1, label %dec_label_pc_4471bf, !insn.addr !2868

dec_label_pc_4471bf:                              ; preds = %dec_label_pc_44719a
  %2 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2869
  ret void, !insn.addr !2870

dec_label_pc_4471d1:                              ; preds = %dec_label_pc_44719a
  call void @GetSystemTimeAsFileTime(%_FILETIME* bitcast (i32* @80 to %_FILETIME*)), !insn.addr !2871
  ret void, !insn.addr !2871
}

define i32 @__acrt_LCMapStringEx(i16* %locale_name, i32 %flags, i16* %source, i32 %source_count, i16* %destination, i32 %destination_count, i32 %version, i8* %reserved, i32 %sort_handle) local_unnamed_addr {
dec_label_pc_4473ca:
  %storemerge.reg2mem = alloca i32, !insn.addr !2872
  %0 = call i32* @try_get_LCMapStringEx(), !insn.addr !2873
  %1 = icmp eq i32* %0, null, !insn.addr !2874
  br i1 %1, label %dec_label_pc_447402, label %dec_label_pc_4473db, !insn.addr !2875

dec_label_pc_4473db:                              ; preds = %dec_label_pc_4473ca
  %2 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2876
  store i32 %2, i32* %storemerge.reg2mem, !insn.addr !2877
  br label %dec_label_pc_447422, !insn.addr !2877

dec_label_pc_447402:                              ; preds = %dec_label_pc_4473ca
  %3 = ptrtoint i16* %locale_name to i32
  %4 = call i32 @function_402b53(i32 %3, i32 0, i32 %flags), !insn.addr !2878
  %5 = call i32 @LCMapStringW(i32 %4, i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2879
  store i32 %5, i32* %storemerge.reg2mem, !insn.addr !2879
  br label %dec_label_pc_447422, !insn.addr !2879

dec_label_pc_447422:                              ; preds = %dec_label_pc_447402, %dec_label_pc_4473db
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !2880
}

define i32 @__acrt_LocaleNameToLCID(i16* %name, i32 %flags) local_unnamed_addr {
dec_label_pc_44743e:
  %storemerge.reg2mem = alloca i32, !insn.addr !2881
  %0 = call i32* @try_get_LocaleNameToLCID(), !insn.addr !2882
  %1 = icmp eq i32* %0, null, !insn.addr !2883
  br i1 %1, label %dec_label_pc_447461, label %dec_label_pc_44744f, !insn.addr !2884

dec_label_pc_44744f:                              ; preds = %dec_label_pc_44743e
  %2 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2885
  store i32 %2, i32* %storemerge.reg2mem, !insn.addr !2886
  br label %dec_label_pc_44746a, !insn.addr !2886

dec_label_pc_447461:                              ; preds = %dec_label_pc_44743e
  %3 = ptrtoint i16* %name to i32
  %4 = call i32 @function_401091(i32 %3), !insn.addr !2887
  store i32 %4, i32* %storemerge.reg2mem, !insn.addr !2888
  br label %dec_label_pc_44746a, !insn.addr !2888

dec_label_pc_44746a:                              ; preds = %dec_label_pc_447461, %dec_label_pc_44744f
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !2889
}

define i32 @__acrt_stdio_flush_nolock(i32 %public_stream) local_unnamed_addr {
dec_label_pc_447fe4:
  %storemerge.reg2mem = alloca i32, !insn.addr !2890
  %0 = add i32 %public_stream, 12, !insn.addr !2891
  %1 = inttoptr i32 %0 to i32*, !insn.addr !2892
  %2 = load i32, i32* %1, align 4, !insn.addr !2892
  %3 = and i32 %2, 3
  %4 = icmp eq i32 %3, 2, !insn.addr !2893
  %5 = icmp eq i1 %4, false, !insn.addr !2894
  %6 = and i32 %2, 192
  %7 = icmp eq i32 %6, 0, !insn.addr !2895
  %or.cond = or i1 %7, %5
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2894
  br i1 %or.cond, label %dec_label_pc_448045, label %dec_label_pc_448001, !insn.addr !2894

dec_label_pc_448001:                              ; preds = %dec_label_pc_447fe4
  %8 = inttoptr i32 %public_stream to i32*, !insn.addr !2896
  %9 = load i32, i32* %8, align 4, !insn.addr !2896
  %10 = add i32 %public_stream, 4, !insn.addr !2897
  %11 = inttoptr i32 %10 to i32*, !insn.addr !2897
  %12 = load i32, i32* %11, align 4, !insn.addr !2897
  %13 = sub i32 %9, %12, !insn.addr !2898
  store i32 %12, i32* %8, align 4, !insn.addr !2899
  %14 = add i32 %public_stream, 8, !insn.addr !2900
  %15 = inttoptr i32 %14 to i32*, !insn.addr !2900
  store i32 0, i32* %15, align 4, !insn.addr !2900
  %16 = icmp slt i32 %13, 1
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2901
  br i1 %16, label %dec_label_pc_448045, label %dec_label_pc_448012, !insn.addr !2901

dec_label_pc_448012:                              ; preds = %dec_label_pc_448001
  %17 = call i32 @_fileno(i32 %public_stream), !insn.addr !2902
  %18 = call i32 @_write(i32 %17, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2903
  %19 = icmp eq i32 %13, %18, !insn.addr !2904
  %20 = load i32, i32* %1, align 4
  br i1 %19, label %dec_label_pc_448033, label %dec_label_pc_448028, !insn.addr !2905

dec_label_pc_448028:                              ; preds = %dec_label_pc_448012
  %21 = or i32 %20, 16, !insn.addr !2906
  store i32 %21, i32* %1, align 4, !insn.addr !2906
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !2907
  br label %dec_label_pc_448045, !insn.addr !2907

dec_label_pc_448033:                              ; preds = %dec_label_pc_448012
  %22 = and i32 %20, 4
  %23 = icmp eq i32 %22, 0, !insn.addr !2908
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2909
  br i1 %23, label %dec_label_pc_448045, label %dec_label_pc_44803d, !insn.addr !2909

dec_label_pc_44803d:                              ; preds = %dec_label_pc_448033
  %24 = and i32 %20, -3, !insn.addr !2910
  store i32 %24, i32* %1, align 4, !insn.addr !2910
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2910
  br label %dec_label_pc_448045, !insn.addr !2910

dec_label_pc_448045:                              ; preds = %dec_label_pc_447fe4, %dec_label_pc_448001, %dec_label_pc_448033, %dec_label_pc_44803d, %dec_label_pc_448028
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !2911
}

declare i32* @_malloc_base(i32) local_unnamed_addr

define i32 @"__crt_strtox::make_c_string_character_source<char,char * *>"(i8* %string, i8** %end) local_unnamed_addr {
dec_label_pc_4484a8:
  %0 = ptrtoint i8** %end to i32
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = bitcast i8* %string to i32*, !insn.addr !2912
  store i32 %0, i32* %2, align 4, !insn.addr !2912
  %3 = icmp eq i32 %1, 0, !insn.addr !2913
  br i1 %3, label %dec_label_pc_4484c1, label %dec_label_pc_4484bf, !insn.addr !2914

dec_label_pc_4484bf:                              ; preds = %dec_label_pc_4484a8
  %4 = inttoptr i32 %1 to i32*, !insn.addr !2915
  store i32 %0, i32* %4, align 4, !insn.addr !2915
  br label %dec_label_pc_4484c1, !insn.addr !2915

dec_label_pc_4484c1:                              ; preds = %dec_label_pc_4484bf, %dec_label_pc_4484a8
  %5 = ptrtoint i8* %string to i32
  %6 = add i32 %5, 4, !insn.addr !2916
  %7 = inttoptr i32 %6 to i32*, !insn.addr !2916
  ret i32 %5, !insn.addr !2917
}

define i32 @strtol(i8* %string, i8** %end_ptr, i32 %base) local_unnamed_addr {
dec_label_pc_448ae6:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %2 = ptrtoint i8* %string to i32, !insn.addr !2918
  %3 = ptrtoint i8** %end_ptr to i32, !insn.addr !2918
  %4 = call i32 @function_40391d(i32* nonnull %stack_var_-24, i32 %2, i32 %3, i32 %1, i32 %1, i32 %base, i32 1, i32 %1, i32 %0), !insn.addr !2918
  %5 = call i32 @function_4043c7(i32 0), !insn.addr !2919
  ret i32 %5, !insn.addr !2920
}

define i32 @_mbtowc_l(i16* %pwc, i8* %s, i32 %n, i32 %plocinfo) local_unnamed_addr {
dec_label_pc_448d22:
  %eax.0.reg2mem = alloca i32, !insn.addr !2921
  %esi.3.reg2mem = alloca i32, !insn.addr !2921
  %esi.2.reg2mem = alloca i32, !insn.addr !2921
  %esi.1.reg2mem = alloca i32, !insn.addr !2921
  %.pn.reg2mem = alloca i32, !insn.addr !2921
  %0 = call i8 @__decompiler_undefined_function_8()
  %stack_var_-40 = alloca %_Mbstatet.720, align 8
  %_loc_update_-16 = alloca i32, align 4
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = icmp eq i8* %s, null, !insn.addr !2922
  %4 = icmp eq i32 %n, 0, !insn.addr !2923
  %or.cond = or i1 %3, %4
  br i1 %or.cond, label %dec_label_pc_448e50, label %dec_label_pc_448d42, !insn.addr !2924

dec_label_pc_448d42:                              ; preds = %dec_label_pc_448d22
  %5 = load i8, i8* %s, align 1, !insn.addr !2925
  %6 = icmp eq i8 %5, 0, !insn.addr !2925
  %7 = icmp eq i1 %6, false, !insn.addr !2926
  br i1 %7, label %dec_label_pc_448d5c, label %dec_label_pc_448d47, !insn.addr !2926

dec_label_pc_448d47:                              ; preds = %dec_label_pc_448d42
  %8 = icmp eq i16* %pwc, null, !insn.addr !2927
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2928
  br i1 %8, label %dec_label_pc_448e60, label %dec_label_pc_448d52, !insn.addr !2928

dec_label_pc_448d52:                              ; preds = %dec_label_pc_448d47
  store i16 0, i16* %pwc, align 2, !insn.addr !2929
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2930
  br label %dec_label_pc_448e60, !insn.addr !2930

dec_label_pc_448d5c:                              ; preds = %dec_label_pc_448d42
  %9 = ptrtoint i8* %s to i32
  %10 = call i32 @function_403d91(i32 %plocinfo), !insn.addr !2931
  %11 = add i32 %1, 8, !insn.addr !2932
  %12 = inttoptr i32 %11 to i32*, !insn.addr !2932
  %13 = load i32, i32* %12, align 4, !insn.addr !2932
  %14 = icmp eq i32 %13, 65001, !insn.addr !2932
  %15 = icmp eq i1 %14, false, !insn.addr !2933
  br i1 %15, label %dec_label_pc_448d95, label %dec_label_pc_448d74, !insn.addr !2933

dec_label_pc_448d74:                              ; preds = %dec_label_pc_448d5c
  %16 = ptrtoint i16* %pwc to i32
  store %_Mbstatet.720 { i32 ptrtoint (%_Mbstatet.720* @internal_state to i32), i16 undef, i16 undef }, %_Mbstatet.720* %stack_var_-40, align 8, !insn.addr !2934
  %17 = getelementptr inbounds %_Mbstatet.720, %_Mbstatet.720* %stack_var_-40, i32 0, i32 0, !insn.addr !2935
  %18 = load i32, i32* %17, align 8, !insn.addr !2935
  %19 = inttoptr i32 %18 to %_Mbstatet.720*, !insn.addr !2935
  %20 = call i32 @function_402c9d(i32 %16, i32 %9, i32 %n, %_Mbstatet.720* %19), !insn.addr !2935
  %21 = icmp slt i32 %20, 0, !insn.addr !2936
  %22 = icmp eq i1 %21, false, !insn.addr !2937
  store i32 %20, i32* %esi.3.reg2mem, !insn.addr !2937
  br i1 %22, label %dec_label_pc_448e3b, label %dec_label_pc_448e38, !insn.addr !2937

dec_label_pc_448d95:                              ; preds = %dec_label_pc_448d5c
  %23 = add i32 %1, 168, !insn.addr !2938
  %24 = inttoptr i32 %23 to i32*, !insn.addr !2938
  %25 = load i32, i32* %24, align 4, !insn.addr !2938
  %26 = icmp eq i32 %25, 0, !insn.addr !2938
  %27 = icmp eq i1 %26, false, !insn.addr !2939
  br i1 %27, label %dec_label_pc_448db3, label %dec_label_pc_448d9e, !insn.addr !2939

dec_label_pc_448d9e:                              ; preds = %dec_label_pc_448d95
  %28 = icmp eq i16* %pwc, null, !insn.addr !2940
  store i32 1, i32* %esi.3.reg2mem, !insn.addr !2941
  br i1 %28, label %dec_label_pc_448e3b, label %dec_label_pc_448da5, !insn.addr !2941

dec_label_pc_448da5:                              ; preds = %dec_label_pc_448d9e
  %29 = load i8, i8* %s, align 1, !insn.addr !2942
  %30 = zext i8 %29 to i16, !insn.addr !2943
  store i16 %30, i16* %pwc, align 2, !insn.addr !2943
  store i32 1, i32* %esi.3.reg2mem, !insn.addr !2943
  br label %dec_label_pc_448e3b, !insn.addr !2943

dec_label_pc_448db3:                              ; preds = %dec_label_pc_448d95
  %31 = ptrtoint i32* %_loc_update_-16 to i32, !insn.addr !2944
  %32 = insertvalue %_Mbstatet.720 undef, i32 %31, 0, !insn.addr !2944
  store %_Mbstatet.720 %32, %_Mbstatet.720* %stack_var_-40, align 8, !insn.addr !2944
  %33 = load i8, i8* %s, align 1, !insn.addr !2945
  %34 = zext i8 %33 to i32, !insn.addr !2945
  %35 = getelementptr inbounds %_Mbstatet.720, %_Mbstatet.720* %stack_var_-40, i32 0, i32 0, !insn.addr !2946
  %36 = load i32, i32* %35, align 8, !insn.addr !2946
  %37 = call i32 @_isleadbyte_l(i32 %34, i32 %36), !insn.addr !2946
  %38 = icmp eq i32 %37, 0, !insn.addr !2947
  br i1 %38, label %dec_label_pc_448e08, label %dec_label_pc_448dc6, !insn.addr !2948

dec_label_pc_448dc6:                              ; preds = %dec_label_pc_448db3
  %39 = load i32, i32* %_loc_update_-16, align 4, !insn.addr !2949
  %40 = add i32 %39, 4
  %41 = inttoptr i32 %40 to i32*
  %42 = load i32, i32* %41, align 4, !insn.addr !2950
  %43 = icmp slt i32 %42, 2, !insn.addr !2951
  %44 = icmp sgt i32 %42, %n, !insn.addr !2952
  %or.cond9 = or i1 %43, %44
  store i32 %42, i32* %.pn.reg2mem, !insn.addr !2951
  store i32 %39, i32* %esi.1.reg2mem, !insn.addr !2951
  br i1 %or.cond9, label %dec_label_pc_448dfb, label %dec_label_pc_448dd4, !insn.addr !2951

dec_label_pc_448dd4:                              ; preds = %dec_label_pc_448dc6
  %45 = icmp eq i16* %pwc, null, !insn.addr !2953
  %46 = icmp eq i1 %45, false, !insn.addr !2954
  %47 = zext i1 %46 to i32, !insn.addr !2954
  %48 = insertvalue %_Mbstatet.720 undef, i32 %47, 0, !insn.addr !2955
  store %_Mbstatet.720 %48, %_Mbstatet.720* %stack_var_-40, align 8, !insn.addr !2955
  %49 = call i32 @function_401712(), !insn.addr !2956
  %50 = load i32, i32* %_loc_update_-16, align 4, !insn.addr !2957
  %51 = icmp eq i32 %49, 0, !insn.addr !2958
  %52 = icmp eq i1 %51, false, !insn.addr !2959
  store i32 %50, i32* %esi.2.reg2mem, !insn.addr !2959
  br i1 %52, label %dec_label_pc_448e03, label %dec_label_pc_448dd4.dec_label_pc_448df8_crit_edge, !insn.addr !2959

dec_label_pc_448dd4.dec_label_pc_448df8_crit_edge: ; preds = %dec_label_pc_448dd4
  %.pre = add i32 %50, 4, !insn.addr !2960
  %.pre6 = inttoptr i32 %.pre to i32*, !insn.addr !2960
  %.pre8 = load i32, i32* %.pre6, align 4
  store i32 %.pre8, i32* %.pn.reg2mem
  store i32 %50, i32* %esi.1.reg2mem
  br label %dec_label_pc_448dfb

dec_label_pc_448dfb:                              ; preds = %dec_label_pc_448dc6, %dec_label_pc_448dd4.dec_label_pc_448df8_crit_edge
  %.pn.reload = load i32, i32* %.pn.reg2mem
  %cf.0 = icmp ugt i32 %.pn.reload, %n
  br i1 %cf.0, label %dec_label_pc_448e2d, label %dec_label_pc_448dfd, !insn.addr !2961

dec_label_pc_448dfd:                              ; preds = %dec_label_pc_448dfb
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %53 = add i32 %9, 1, !insn.addr !2962
  %54 = inttoptr i32 %53 to i8*, !insn.addr !2962
  %55 = load i8, i8* %54, align 1, !insn.addr !2962
  %56 = icmp eq i8 %55, 0, !insn.addr !2962
  store i32 %esi.1.reload, i32* %esi.2.reg2mem, !insn.addr !2963
  br i1 %56, label %dec_label_pc_448e2d, label %dec_label_pc_448e03, !insn.addr !2963

dec_label_pc_448e03:                              ; preds = %dec_label_pc_448dfd, %dec_label_pc_448dd4
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %57 = add i32 %esi.2.reload, 4, !insn.addr !2964
  %58 = inttoptr i32 %57 to i32*, !insn.addr !2964
  %59 = load i32, i32* %58, align 4, !insn.addr !2964
  store i32 %59, i32* %esi.3.reg2mem, !insn.addr !2965
  br label %dec_label_pc_448e3b, !insn.addr !2965

dec_label_pc_448e08:                              ; preds = %dec_label_pc_448db3
  %60 = icmp eq i16* %pwc, null, !insn.addr !2966
  %61 = icmp eq i1 %60, false, !insn.addr !2967
  %62 = zext i1 %61 to i32, !insn.addr !2967
  %63 = insertvalue %_Mbstatet.720 undef, i32 %62, 0, !insn.addr !2968
  store %_Mbstatet.720 %63, %_Mbstatet.720* %stack_var_-40, align 8, !insn.addr !2968
  %64 = call i32 @function_401712(), !insn.addr !2969
  %65 = icmp eq i32 %64, 0, !insn.addr !2970
  %66 = icmp eq i1 %65, false, !insn.addr !2971
  store i32 1, i32* %esi.3.reg2mem, !insn.addr !2971
  br i1 %66, label %dec_label_pc_448e3b, label %dec_label_pc_448e2d, !insn.addr !2971

dec_label_pc_448e2d:                              ; preds = %dec_label_pc_448e08, %dec_label_pc_448dfd, %dec_label_pc_448dfb
  %67 = call i32* @_errno(), !insn.addr !2972
  store i32 42, i32* %67, align 4, !insn.addr !2973
  br label %dec_label_pc_448e38, !insn.addr !2973

dec_label_pc_448e38:                              ; preds = %dec_label_pc_448d74, %dec_label_pc_448e2d
  store i32 -1, i32* %esi.3.reg2mem, !insn.addr !2974
  br label %dec_label_pc_448e3b, !insn.addr !2974

dec_label_pc_448e3b:                              ; preds = %dec_label_pc_448d9e, %dec_label_pc_448da5, %dec_label_pc_448e38, %dec_label_pc_448e08, %dec_label_pc_448e03, %dec_label_pc_448d74
  %esi.3.reload = load i32, i32* %esi.3.reg2mem
  %68 = icmp eq i8 %0, 0, !insn.addr !2975
  store i32 %esi.3.reload, i32* %eax.0.reg2mem, !insn.addr !2976
  br i1 %68, label %dec_label_pc_448e60, label %dec_label_pc_448e41, !insn.addr !2976

dec_label_pc_448e41:                              ; preds = %dec_label_pc_448e3b
  %69 = add i32 %2, 848, !insn.addr !2977
  %70 = inttoptr i32 %69 to i32*, !insn.addr !2977
  %71 = load i32, i32* %70, align 4, !insn.addr !2977
  %72 = and i32 %71, -3, !insn.addr !2977
  store i32 %72, i32* %70, align 4, !insn.addr !2977
  store i32 %esi.3.reload, i32* %eax.0.reg2mem, !insn.addr !2977
  br label %dec_label_pc_448e60, !insn.addr !2977

dec_label_pc_448e50:                              ; preds = %dec_label_pc_448d22
  store i32 0, i32* getelementptr inbounds (%_Mbstatet.720, %_Mbstatet.720* @internal_state, i32 0, i32 0), align 8, !insn.addr !2978
  store i32 0, i32* @global_var_47e2a0, align 4, !insn.addr !2979
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2979
  br label %dec_label_pc_448e60, !insn.addr !2979

dec_label_pc_448e60:                              ; preds = %dec_label_pc_448d47, %dec_label_pc_448d52, %dec_label_pc_448e50, %dec_label_pc_448e3b, %dec_label_pc_448e41
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !2980
}

define i32 @mbtowc(i16* %pwc, i8* %s, i32 %n) local_unnamed_addr {
dec_label_pc_448eb4:
  %0 = call i32 @_mbtowc_l(i16* %pwc, i8* %s, i32 %n, i32 0), !insn.addr !2981
  ret i32 %0, !insn.addr !2982
}

define i32 @_wctomb_s_l(i32* %return_value, i8* %destination, i32 %destination_count, i16 %wchar, i32 %locale) local_unnamed_addr {
dec_label_pc_448f39:
  %eax.0.reg2mem = alloca i32, !insn.addr !2983
  %esi.0.reg2mem = alloca i32, !insn.addr !2983
  %0 = ptrtoint i8* %destination to i32
  %1 = call i8 @__decompiler_undefined_function_8()
  %2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %3 = call i32 @__decompiler_undefined_function_0()
  %4 = icmp eq i8* %destination, null, !insn.addr !2984
  %5 = icmp ult i32 %0, %destination_count
  %or.cond = icmp eq i1 %4, %5
  %6 = icmp eq i32* %return_value, null
  br i1 %or.cond, label %dec_label_pc_448f4e, label %dec_label_pc_448f5e, !insn.addr !2985

dec_label_pc_448f4e:                              ; preds = %dec_label_pc_448f39
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2986
  br i1 %6, label %dec_label_pc_449018, label %dec_label_pc_448f55, !insn.addr !2986

dec_label_pc_448f55:                              ; preds = %dec_label_pc_448f4e
  %7 = load i32, i32* %return_value, align 4, !insn.addr !2987
  %8 = and i32 %7, %0, !insn.addr !2987
  store i32 %8, i32* %return_value, align 4, !insn.addr !2987
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2987
  br label %dec_label_pc_449018, !insn.addr !2987

dec_label_pc_448f5e:                              ; preds = %dec_label_pc_448f39
  br i1 %6, label %dec_label_pc_448f69, label %dec_label_pc_448f66, !insn.addr !2988

dec_label_pc_448f66:                              ; preds = %dec_label_pc_448f5e
  store i32 -1, i32* %return_value, align 4, !insn.addr !2989
  br label %dec_label_pc_448f69, !insn.addr !2989

dec_label_pc_448f69:                              ; preds = %dec_label_pc_448f66, %dec_label_pc_448f5e
  %9 = icmp sgt i32 %destination_count, -1
  br i1 %9, label %dec_label_pc_448f87, label %dec_label_pc_448f73, !insn.addr !2990

dec_label_pc_448f73:                              ; preds = %dec_label_pc_448f69
  %10 = call i32* @_errno(), !insn.addr !2991
  store i32 22, i32* %stack_var_-44, align 4, !insn.addr !2992
  store i32 22, i32* %10, align 4, !insn.addr !2993
  call void @_invalid_parameter_noinfo(), !insn.addr !2994
  store i32 22, i32* %eax.0.reg2mem, !insn.addr !2995
  br label %dec_label_pc_449018, !insn.addr !2995

dec_label_pc_448f87:                              ; preds = %dec_label_pc_448f69
  store i32 %locale, i32* %stack_var_-44, align 4, !insn.addr !2996
  %11 = call i32 @function_403d91(i32 %locale), !insn.addr !2997
  %12 = add i32 %2, 8, !insn.addr !2998
  %13 = inttoptr i32 %12 to i32*, !insn.addr !2998
  %14 = load i32, i32* %13, align 4, !insn.addr !2998
  %15 = icmp eq i32 %14, 65001, !insn.addr !2999
  %16 = icmp eq i1 %15, false, !insn.addr !3000
  br i1 %16, label %dec_label_pc_448fce, label %dec_label_pc_448fa2, !insn.addr !3000

dec_label_pc_448fa2:                              ; preds = %dec_label_pc_448f87
  %17 = call i32 @function_401221(), !insn.addr !3001
  br i1 %6, label %dec_label_pc_448fc0, label %dec_label_pc_448fbe, !insn.addr !3002

dec_label_pc_448fbe:                              ; preds = %dec_label_pc_448fa2
  store i32 %17, i32* %return_value, align 4, !insn.addr !3003
  br label %dec_label_pc_448fc0, !insn.addr !3003

dec_label_pc_448fc0:                              ; preds = %dec_label_pc_448fbe, %dec_label_pc_448fa2
  %18 = icmp slt i32 %17, 5, !insn.addr !3004
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !3004
  br i1 %18, label %dec_label_pc_449004, label %dec_label_pc_448fc5, !insn.addr !3004

dec_label_pc_448fc5:                              ; preds = %dec_label_pc_448fc0
  %19 = call i32* @_errno(), !insn.addr !3005
  %20 = load i32, i32* %19, align 4, !insn.addr !3006
  store i32 %20, i32* %esi.0.reg2mem, !insn.addr !3007
  br label %dec_label_pc_449004, !insn.addr !3007

dec_label_pc_448fce:                              ; preds = %dec_label_pc_448f87
  %21 = add i32 %2, 168, !insn.addr !3008
  %22 = inttoptr i32 %21 to i32*, !insn.addr !3008
  %23 = load i32, i32* %22, align 4, !insn.addr !3008
  %24 = icmp eq i32 %23, 0, !insn.addr !3008
  %25 = icmp eq i1 %24, false, !insn.addr !3009
  br i1 %25, label %dec_label_pc_449032, label %dec_label_pc_448fd6, !insn.addr !3009

dec_label_pc_448fd6:                              ; preds = %dec_label_pc_448fce
  %26 = icmp ult i16 %wchar, 256
  br i1 %26, label %dec_label_pc_44901b, label %dec_label_pc_448fe4, !insn.addr !3010

dec_label_pc_448fe4:                              ; preds = %dec_label_pc_448fd6
  %27 = icmp eq i32 %destination_count, 0
  %or.cond4 = or i1 %4, %27
  br i1 %or.cond4, label %dec_label_pc_448ffa, label %dec_label_pc_448fed, !insn.addr !3011

dec_label_pc_448fed:                              ; preds = %dec_label_pc_448fe4
  call void @memset(i8* nonnull %destination, i8 0, i32 %destination_count), !insn.addr !3012
  br label %dec_label_pc_448ffa, !insn.addr !3013

dec_label_pc_448ffa:                              ; preds = %dec_label_pc_44905f, %dec_label_pc_448fed, %dec_label_pc_448fe4
  %28 = ptrtoint i32* %stack_var_-44 to i32, !insn.addr !2996
  %29 = call i32* @_errno(), !insn.addr !3014
  %30 = add i32 %28, -4, !insn.addr !3015
  %31 = inttoptr i32 %30 to i32*, !insn.addr !3015
  store i32 42, i32* %31, align 4, !insn.addr !3015
  store i32 42, i32* %29, align 4, !insn.addr !3016
  store i32 42, i32* %esi.0.reg2mem, !insn.addr !3016
  br label %dec_label_pc_449004, !insn.addr !3016

dec_label_pc_449004:                              ; preds = %dec_label_pc_449080, %dec_label_pc_44905b, %dec_label_pc_449057, %dec_label_pc_44902a, %dec_label_pc_449026, %dec_label_pc_448ffa, %dec_label_pc_448fc5, %dec_label_pc_448fc0
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %32 = icmp eq i8 %1, 0, !insn.addr !3017
  store i32 %esi.0.reload, i32* %eax.0.reg2mem, !insn.addr !3018
  br i1 %32, label %dec_label_pc_449018, label %dec_label_pc_44900a, !insn.addr !3018

dec_label_pc_44900a:                              ; preds = %dec_label_pc_449004
  %33 = add i32 %3, 848, !insn.addr !3019
  %34 = inttoptr i32 %33 to i32*, !insn.addr !3019
  %35 = load i32, i32* %34, align 4, !insn.addr !3019
  %36 = and i32 %35, -3, !insn.addr !3019
  store i32 %36, i32* %34, align 4, !insn.addr !3019
  store i32 %esi.0.reload, i32* %eax.0.reg2mem, !insn.addr !3019
  br label %dec_label_pc_449018, !insn.addr !3019

dec_label_pc_449018:                              ; preds = %dec_label_pc_448f73, %dec_label_pc_449004, %dec_label_pc_44900a, %dec_label_pc_448f4e, %dec_label_pc_448f55
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !3020

dec_label_pc_44901b:                              ; preds = %dec_label_pc_448fd6
  br i1 %4, label %dec_label_pc_449026, label %dec_label_pc_44901f, !insn.addr !3021

dec_label_pc_44901f:                              ; preds = %dec_label_pc_44901b
  %37 = icmp eq i32 %destination_count, 0
  br i1 %37, label %dec_label_pc_449080, label %dec_label_pc_449024, !insn.addr !3022

dec_label_pc_449024:                              ; preds = %dec_label_pc_44901f
  %38 = trunc i16 %wchar to i8, !insn.addr !3023
  store i8 %38, i8* %destination, align 1, !insn.addr !3024
  br label %dec_label_pc_449026, !insn.addr !3024

dec_label_pc_449026:                              ; preds = %dec_label_pc_449024, %dec_label_pc_44901b
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !3025
  br i1 %6, label %dec_label_pc_449004, label %dec_label_pc_44902a, !insn.addr !3025

dec_label_pc_44902a:                              ; preds = %dec_label_pc_449026
  store i32 1, i32* %return_value, align 4, !insn.addr !3026
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !3027
  br label %dec_label_pc_449004, !insn.addr !3027

dec_label_pc_449032:                              ; preds = %dec_label_pc_448fce
  %39 = call i32 @function_40461f(), !insn.addr !3028
  %40 = icmp eq i32 %39, 0, !insn.addr !3029
  br i1 %40, label %dec_label_pc_44905f, label %dec_label_pc_449057, !insn.addr !3030

dec_label_pc_449057:                              ; preds = %dec_label_pc_449032
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !3031
  br i1 %6, label %dec_label_pc_449004, label %dec_label_pc_44905b, !insn.addr !3031

dec_label_pc_44905b:                              ; preds = %dec_label_pc_449057
  store i32 %39, i32* %return_value, align 4, !insn.addr !3032
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !3033
  br label %dec_label_pc_449004, !insn.addr !3033

dec_label_pc_44905f:                              ; preds = %dec_label_pc_449032
  %41 = call i32 @GetLastError(), !insn.addr !3034
  %42 = icmp eq i32 %41, 122, !insn.addr !3035
  %43 = icmp eq i1 %42, false, !insn.addr !3036
  br i1 %43, label %dec_label_pc_448ffa, label %dec_label_pc_44906a, !insn.addr !3036

dec_label_pc_44906a:                              ; preds = %dec_label_pc_44905f
  %44 = icmp eq i32 %destination_count, 0
  %or.cond5 = or i1 %4, %44
  br i1 %or.cond5, label %dec_label_pc_449080, label %dec_label_pc_449073, !insn.addr !3037

dec_label_pc_449073:                              ; preds = %dec_label_pc_44906a
  call void @memset(i8* nonnull %destination, i8 0, i32 %destination_count), !insn.addr !3038
  br label %dec_label_pc_449080, !insn.addr !3039

dec_label_pc_449080:                              ; preds = %dec_label_pc_44901f, %dec_label_pc_449073, %dec_label_pc_44906a
  %45 = call i32* @_errno(), !insn.addr !3040
  store i32 34, i32* %45, align 4, !insn.addr !3041
  call void @_invalid_parameter_noinfo(), !insn.addr !3042
  store i32 34, i32* %esi.0.reg2mem, !insn.addr !3043
  br label %dec_label_pc_449004, !insn.addr !3043
}

define i32 @wctomb_s(i32* %return_value, i8* %destination, i32 %destination_count, i16 %wchar) local_unnamed_addr {
dec_label_pc_449128:
  %0 = call i32 @_wctomb_s_l(i32* %return_value, i8* %destination, i32 %destination_count, i16 %wchar, i32 0), !insn.addr !3044
  ret i32 %0, !insn.addr !3045
}

define i32 @strnlen(i8* %string, i32 %maximum_count) local_unnamed_addr {
dec_label_pc_449b6e:
  %ecx.8.reg2mem = alloca i32, !insn.addr !3046
  %ecx.7.reg2mem = alloca i32, !insn.addr !3046
  %ecx.6.reg2mem = alloca i32, !insn.addr !3046
  %ecx.5.lcssa.reg2mem = alloca i32, !insn.addr !3046
  %ecx.53.reg2mem = alloca i32, !insn.addr !3046
  %ecx.4.reg2mem = alloca i32, !insn.addr !3046
  %ecx.3.reg2mem = alloca i32, !insn.addr !3046
  %eax.3.reg2mem = alloca i32, !insn.addr !3046
  %eax.2.reg2mem = alloca i32, !insn.addr !3046
  %ecx.2.lcssa.reg2mem = alloca i32, !insn.addr !3046
  %ecx.25.reg2mem = alloca i32, !insn.addr !3046
  %ecx.1.reg2mem = alloca i32, !insn.addr !3046
  %ecx.0.reg2mem = alloca i32, !insn.addr !3046
  %eax.1.reg2mem = alloca i32, !insn.addr !3046
  %eax.0.reg2mem = alloca i32, !insn.addr !3046
  %0 = call i256 @__decompiler_undefined_function_24()
  %1 = call i128 @__decompiler_undefined_function_6()
  %2 = load i32, i32* @__isa_available, align 4, !insn.addr !3047
  %3 = icmp slt i32 %2, 5, !insn.addr !3048
  br i1 %3, label %dec_label_pc_449bf9, label %dec_label_pc_449b7f, !insn.addr !3048

dec_label_pc_449b7f:                              ; preds = %dec_label_pc_449b6e
  %4 = ptrtoint i8* %string to i32, !insn.addr !3049
  %5 = and i32 %4, 31, !insn.addr !3050
  %6 = sub nsw i32 32, %5, !insn.addr !3051
  %7 = icmp eq i32 %5, 0, !insn.addr !3052
  %8 = select i1 %7, i32 0, i32 %6, !insn.addr !3053
  %9 = icmp ugt i32 %8, %maximum_count, !insn.addr !3054
  %10 = icmp eq i1 %9, false, !insn.addr !3055
  %spec.select = select i1 %10, i32 %8, i32 %maximum_count
  %11 = add i32 %spec.select, %4, !insn.addr !3056
  %12 = icmp eq i32 %spec.select, 0, !insn.addr !3057
  store i32 %4, i32* %eax.0.reg2mem, !insn.addr !3058
  store i32 %4, i32* %eax.1.reg2mem, !insn.addr !3058
  br i1 %12, label %dec_label_pc_449bae, label %dec_label_pc_449ba4, !insn.addr !3058

dec_label_pc_449ba4:                              ; preds = %dec_label_pc_449b7f, %dec_label_pc_449ba9
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %13 = inttoptr i32 %eax.0.reload to i8*, !insn.addr !3059
  %14 = load i8, i8* %13, align 1, !insn.addr !3059
  %15 = icmp eq i8 %14, 0, !insn.addr !3059
  store i32 %eax.0.reload, i32* %eax.1.reg2mem, !insn.addr !3060
  br i1 %15, label %dec_label_pc_449bae, label %dec_label_pc_449ba9, !insn.addr !3060

dec_label_pc_449ba9:                              ; preds = %dec_label_pc_449ba4
  %16 = add i32 %eax.0.reload, 1, !insn.addr !3061
  %17 = icmp eq i32 %16, %11, !insn.addr !3062
  %18 = icmp eq i1 %17, false, !insn.addr !3063
  store i32 %16, i32* %eax.0.reg2mem, !insn.addr !3063
  store i32 %16, i32* %eax.1.reg2mem, !insn.addr !3063
  br i1 %18, label %dec_label_pc_449ba4, label %dec_label_pc_449bae, !insn.addr !3063

dec_label_pc_449bae:                              ; preds = %dec_label_pc_449ba9, %dec_label_pc_449ba4, %dec_label_pc_449b7f
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %19 = sub i32 %eax.1.reload, %4, !insn.addr !3064
  %20 = icmp eq i32 %19, %spec.select, !insn.addr !3065
  %21 = icmp eq i1 %20, false, !insn.addr !3066
  store i32 %19, i32* %ecx.8.reg2mem, !insn.addr !3066
  br i1 %21, label %dec_label_pc_449c8a, label %dec_label_pc_449bba, !insn.addr !3066

dec_label_pc_449bba:                              ; preds = %dec_label_pc_449bae
  %22 = sub i32 %maximum_count, %spec.select, !insn.addr !3067
  %23 = and i32 %22, -32, !insn.addr !3068
  %24 = add i32 %eax.1.reload, %23, !insn.addr !3069
  %25 = call i128 @__asm_vpxor(i128 %1, i128 %1), !insn.addr !3070
  %26 = icmp eq i32 %23, 0, !insn.addr !3071
  store i32 %eax.1.reload, i32* %ecx.0.reg2mem, !insn.addr !3072
  store i32 %eax.1.reload, i32* %ecx.1.reg2mem, !insn.addr !3072
  br i1 %26, label %dec_label_pc_449bde, label %dec_label_pc_449bcb, !insn.addr !3072

dec_label_pc_449bcb:                              ; preds = %dec_label_pc_449bba, %dec_label_pc_449bd7
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %27 = inttoptr i32 %ecx.0.reload to i256*, !insn.addr !3073
  %28 = load i256, i256* %27, align 4, !insn.addr !3073
  %29 = call i256 @__asm_vpcmpeqb(i256 %0, i256 %28), !insn.addr !3073
  %30 = call i32 @__asm_vpmovmskb(i256 %29), !insn.addr !3074
  %31 = icmp eq i32 %30, 0, !insn.addr !3075
  %32 = icmp eq i1 %31, false, !insn.addr !3076
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !3076
  br i1 %32, label %dec_label_pc_449bde, label %dec_label_pc_449bd7, !insn.addr !3076

dec_label_pc_449bd7:                              ; preds = %dec_label_pc_449bcb
  %33 = add i32 %ecx.0.reload, 32, !insn.addr !3077
  %34 = icmp eq i32 %33, %24, !insn.addr !3078
  %35 = icmp eq i1 %34, false, !insn.addr !3079
  store i32 %33, i32* %ecx.0.reg2mem, !insn.addr !3079
  store i32 %33, i32* %ecx.1.reg2mem, !insn.addr !3079
  br i1 %35, label %dec_label_pc_449bcb, label %dec_label_pc_449bde, !insn.addr !3079

dec_label_pc_449bde:                              ; preds = %dec_label_pc_449bd7, %dec_label_pc_449bcb, %dec_label_pc_449bba
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %36 = add i32 %4, %maximum_count, !insn.addr !3080
  %37 = icmp eq i32 %ecx.1.reload, %36, !insn.addr !3081
  %38 = icmp eq i1 %37, false, !insn.addr !3082
  store i32 %ecx.1.reload, i32* %ecx.25.reg2mem, !insn.addr !3082
  store i32 %ecx.1.reload, i32* %ecx.2.lcssa.reg2mem, !insn.addr !3082
  br i1 %38, label %dec_label_pc_449be5, label %dec_label_pc_449bef, !insn.addr !3082

dec_label_pc_449be5:                              ; preds = %dec_label_pc_449bde, %dec_label_pc_449bea
  %ecx.25.reload = load i32, i32* %ecx.25.reg2mem
  %39 = inttoptr i32 %ecx.25.reload to i8*, !insn.addr !3083
  %40 = load i8, i8* %39, align 1, !insn.addr !3083
  %41 = icmp eq i8 %40, 0, !insn.addr !3083
  store i32 %ecx.25.reload, i32* %ecx.2.lcssa.reg2mem, !insn.addr !3084
  br i1 %41, label %dec_label_pc_449bef, label %dec_label_pc_449bea, !insn.addr !3084

dec_label_pc_449bea:                              ; preds = %dec_label_pc_449be5
  %42 = add i32 %ecx.25.reload, 1, !insn.addr !3085
  %43 = icmp eq i32 %42, %36, !insn.addr !3081
  %44 = icmp eq i1 %43, false, !insn.addr !3082
  store i32 %42, i32* %ecx.25.reg2mem, !insn.addr !3082
  store i32 %42, i32* %ecx.2.lcssa.reg2mem, !insn.addr !3082
  br i1 %44, label %dec_label_pc_449be5, label %dec_label_pc_449bef, !insn.addr !3082

dec_label_pc_449bef:                              ; preds = %dec_label_pc_449bea, %dec_label_pc_449be5, %dec_label_pc_449bde
  %ecx.2.lcssa.reload = load i32, i32* %ecx.2.lcssa.reg2mem
  %45 = sub i32 %ecx.2.lcssa.reload, %4, !insn.addr !3086
  %46 = call i32 @__asm_vzeroupper(), !insn.addr !3087
  store i32 %45, i32* %ecx.8.reg2mem, !insn.addr !3088
  br label %dec_label_pc_449c8a, !insn.addr !3088

dec_label_pc_449bf9:                              ; preds = %dec_label_pc_449b6e
  %47 = icmp slt i32 %2, 1, !insn.addr !3089
  %48 = ptrtoint i8* %string to i32
  br i1 %47, label %dec_label_pc_449c70, label %dec_label_pc_449bfe, !insn.addr !3089

dec_label_pc_449bfe:                              ; preds = %dec_label_pc_449bf9
  %49 = and i32 %48, 15, !insn.addr !3090
  %50 = sub nsw i32 16, %49, !insn.addr !3091
  %51 = icmp eq i32 %49, 0, !insn.addr !3092
  %52 = select i1 %51, i32 0, i32 %50, !insn.addr !3093
  %53 = icmp ugt i32 %52, %maximum_count, !insn.addr !3094
  %54 = icmp eq i1 %53, false, !insn.addr !3095
  %spec.select2 = select i1 %54, i32 %52, i32 %maximum_count
  %55 = add i32 %spec.select2, %48, !insn.addr !3096
  %56 = icmp eq i32 %spec.select2, 0, !insn.addr !3097
  store i32 %48, i32* %eax.2.reg2mem, !insn.addr !3098
  store i32 %48, i32* %eax.3.reg2mem, !insn.addr !3098
  br i1 %56, label %dec_label_pc_449c2d, label %dec_label_pc_449c23, !insn.addr !3098

dec_label_pc_449c23:                              ; preds = %dec_label_pc_449bfe, %dec_label_pc_449c28
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  %57 = inttoptr i32 %eax.2.reload to i8*, !insn.addr !3099
  %58 = load i8, i8* %57, align 1, !insn.addr !3099
  %59 = icmp eq i8 %58, 0, !insn.addr !3099
  store i32 %eax.2.reload, i32* %eax.3.reg2mem, !insn.addr !3100
  br i1 %59, label %dec_label_pc_449c2d, label %dec_label_pc_449c28, !insn.addr !3100

dec_label_pc_449c28:                              ; preds = %dec_label_pc_449c23
  %60 = add i32 %eax.2.reload, 1, !insn.addr !3101
  %61 = icmp eq i32 %60, %55, !insn.addr !3102
  %62 = icmp eq i1 %61, false, !insn.addr !3103
  store i32 %60, i32* %eax.2.reg2mem, !insn.addr !3103
  store i32 %60, i32* %eax.3.reg2mem, !insn.addr !3103
  br i1 %62, label %dec_label_pc_449c23, label %dec_label_pc_449c2d, !insn.addr !3103

dec_label_pc_449c2d:                              ; preds = %dec_label_pc_449c28, %dec_label_pc_449c23, %dec_label_pc_449bfe
  %eax.3.reload = load i32, i32* %eax.3.reg2mem
  %63 = sub i32 %eax.3.reload, %48, !insn.addr !3104
  %64 = icmp eq i32 %63, %spec.select2, !insn.addr !3105
  %65 = icmp eq i1 %64, false, !insn.addr !3106
  store i32 %63, i32* %ecx.8.reg2mem, !insn.addr !3106
  br i1 %65, label %dec_label_pc_449c8a, label %dec_label_pc_449c35, !insn.addr !3106

dec_label_pc_449c35:                              ; preds = %dec_label_pc_449c2d
  %66 = sub i32 %maximum_count, %spec.select2, !insn.addr !3107
  %67 = and i32 %66, -16, !insn.addr !3108
  %68 = call i128 @__asm_xorps(i128 %1, i128 %1), !insn.addr !3109
  %69 = add i32 %eax.3.reload, %67, !insn.addr !3110
  %70 = icmp eq i32 %67, 0, !insn.addr !3111
  store i32 %eax.3.reload, i32* %ecx.3.reg2mem, !insn.addr !3112
  store i32 %eax.3.reload, i32* %ecx.4.reg2mem, !insn.addr !3112
  br i1 %70, label %dec_label_pc_449c5b, label %dec_label_pc_449c45, !insn.addr !3112

dec_label_pc_449c45:                              ; preds = %dec_label_pc_449c35, %dec_label_pc_449c54
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %71 = inttoptr i32 %ecx.3.reload to i128*, !insn.addr !3113
  %72 = load i128, i128* %71, align 4, !insn.addr !3113
  %73 = call i128 @__asm_movups.3(i128 %72), !insn.addr !3113
  %74 = call i128 @__asm_pcmpeqb(i128 %73, i128 %68), !insn.addr !3114
  %75 = call i32 @__asm_pmovmskb(i128 %74), !insn.addr !3115
  %76 = icmp eq i32 %75, 0, !insn.addr !3116
  %77 = icmp eq i1 %76, false, !insn.addr !3117
  store i32 %ecx.3.reload, i32* %ecx.4.reg2mem, !insn.addr !3117
  br i1 %77, label %dec_label_pc_449c5b, label %dec_label_pc_449c54, !insn.addr !3117

dec_label_pc_449c54:                              ; preds = %dec_label_pc_449c45
  %78 = add i32 %ecx.3.reload, 16, !insn.addr !3118
  %79 = icmp eq i32 %78, %69, !insn.addr !3119
  %80 = icmp eq i1 %79, false, !insn.addr !3120
  store i32 %78, i32* %ecx.3.reg2mem, !insn.addr !3120
  store i32 %78, i32* %ecx.4.reg2mem, !insn.addr !3120
  br i1 %80, label %dec_label_pc_449c45, label %dec_label_pc_449c5b, !insn.addr !3120

dec_label_pc_449c5b:                              ; preds = %dec_label_pc_449c54, %dec_label_pc_449c45, %dec_label_pc_449c35
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %81 = add i32 %48, %maximum_count, !insn.addr !3121
  %82 = icmp eq i32 %ecx.4.reload, %81, !insn.addr !3122
  %83 = icmp eq i1 %82, false, !insn.addr !3123
  store i32 %ecx.4.reload, i32* %ecx.53.reg2mem, !insn.addr !3123
  store i32 %ecx.4.reload, i32* %ecx.5.lcssa.reg2mem, !insn.addr !3123
  br i1 %83, label %dec_label_pc_449c62, label %dec_label_pc_449c6c, !insn.addr !3123

dec_label_pc_449c62:                              ; preds = %dec_label_pc_449c5b, %dec_label_pc_449c67
  %ecx.53.reload = load i32, i32* %ecx.53.reg2mem
  %84 = inttoptr i32 %ecx.53.reload to i8*, !insn.addr !3124
  %85 = load i8, i8* %84, align 1, !insn.addr !3124
  %86 = icmp eq i8 %85, 0, !insn.addr !3124
  store i32 %ecx.53.reload, i32* %ecx.5.lcssa.reg2mem, !insn.addr !3125
  br i1 %86, label %dec_label_pc_449c6c, label %dec_label_pc_449c67, !insn.addr !3125

dec_label_pc_449c67:                              ; preds = %dec_label_pc_449c62
  %87 = add i32 %ecx.53.reload, 1, !insn.addr !3126
  %88 = icmp eq i32 %87, %81, !insn.addr !3122
  %89 = icmp eq i1 %88, false, !insn.addr !3123
  store i32 %87, i32* %ecx.53.reg2mem, !insn.addr !3123
  store i32 %87, i32* %ecx.5.lcssa.reg2mem, !insn.addr !3123
  br i1 %89, label %dec_label_pc_449c62, label %dec_label_pc_449c6c, !insn.addr !3123

dec_label_pc_449c6c:                              ; preds = %dec_label_pc_449c67, %dec_label_pc_449c62, %dec_label_pc_449c5b
  %ecx.5.lcssa.reload = load i32, i32* %ecx.5.lcssa.reg2mem
  %90 = sub i32 %ecx.5.lcssa.reload, %48, !insn.addr !3127
  store i32 %90, i32* %ecx.8.reg2mem, !insn.addr !3128
  br label %dec_label_pc_449c8a, !insn.addr !3128

dec_label_pc_449c70:                              ; preds = %dec_label_pc_449bf9
  %91 = add i32 %48, %maximum_count, !insn.addr !3129
  %92 = icmp eq i32 %maximum_count, 0, !insn.addr !3130
  store i32 %48, i32* %ecx.6.reg2mem, !insn.addr !3131
  store i32 %48, i32* %ecx.7.reg2mem, !insn.addr !3131
  br i1 %92, label %dec_label_pc_449c88, label %dec_label_pc_449c7e, !insn.addr !3131

dec_label_pc_449c7e:                              ; preds = %dec_label_pc_449c70, %dec_label_pc_449c83
  %ecx.6.reload = load i32, i32* %ecx.6.reg2mem
  %93 = inttoptr i32 %ecx.6.reload to i8*, !insn.addr !3132
  %94 = load i8, i8* %93, align 1, !insn.addr !3132
  %95 = icmp eq i8 %94, 0, !insn.addr !3132
  store i32 %ecx.6.reload, i32* %ecx.7.reg2mem, !insn.addr !3133
  br i1 %95, label %dec_label_pc_449c88, label %dec_label_pc_449c83, !insn.addr !3133

dec_label_pc_449c83:                              ; preds = %dec_label_pc_449c7e
  %96 = add i32 %ecx.6.reload, 1, !insn.addr !3134
  %97 = icmp eq i32 %96, %91, !insn.addr !3135
  %98 = icmp eq i1 %97, false, !insn.addr !3136
  store i32 %96, i32* %ecx.6.reg2mem, !insn.addr !3136
  store i32 %96, i32* %ecx.7.reg2mem, !insn.addr !3136
  br i1 %98, label %dec_label_pc_449c7e, label %dec_label_pc_449c88, !insn.addr !3136

dec_label_pc_449c88:                              ; preds = %dec_label_pc_449c83, %dec_label_pc_449c7e, %dec_label_pc_449c70
  %ecx.7.reload = load i32, i32* %ecx.7.reg2mem
  %99 = sub i32 %ecx.7.reload, %48, !insn.addr !3137
  store i32 %99, i32* %ecx.8.reg2mem, !insn.addr !3137
  br label %dec_label_pc_449c8a, !insn.addr !3137

dec_label_pc_449c8a:                              ; preds = %dec_label_pc_449c88, %dec_label_pc_449c6c, %dec_label_pc_449c2d, %dec_label_pc_449bef, %dec_label_pc_449bae
  %ecx.8.reload = load i32, i32* %ecx.8.reg2mem
  ret i32 %ecx.8.reload, !insn.addr !3138
}

define i32 @wcsnlen(i16* %string, i32 %maximum_count) local_unnamed_addr {
dec_label_pc_449e4a:
  %ecx.9.reg2mem = alloca i32, !insn.addr !3139
  %storemerge.reg2mem = alloca i32, !insn.addr !3139
  %ecx.8.reg2mem = alloca i32, !insn.addr !3139
  %ecx.7.reg2mem = alloca i32, !insn.addr !3139
  %edi.4.reg2mem = alloca i32, !insn.addr !3139
  %edi.3.lcssa.reg2mem = alloca i32, !insn.addr !3139
  %edi.38.reg2mem = alloca i32, !insn.addr !3139
  %ecx.6.reg2mem = alloca i32, !insn.addr !3139
  %ecx.5.reg2mem = alloca i32, !insn.addr !3139
  %ecx.4.reg2mem = alloca i32, !insn.addr !3139
  %edi.2.reg2mem = alloca i32, !insn.addr !3139
  %edi.1.reg2mem = alloca i32, !insn.addr !3139
  %edi.0.lcssa.reg2mem = alloca i32, !insn.addr !3139
  %edi.010.reg2mem = alloca i32, !insn.addr !3139
  %ecx.3.reg2mem = alloca i32, !insn.addr !3139
  %ecx.2.reg2mem = alloca i32, !insn.addr !3139
  %esi.0.reg2mem = alloca i32, !insn.addr !3139
  %ecx.1.reg2mem = alloca i32, !insn.addr !3139
  %ecx.0.reg2mem = alloca i32, !insn.addr !3139
  %0 = call i256 @__decompiler_undefined_function_24()
  %1 = call i128 @__decompiler_undefined_function_6()
  %2 = load i32, i32* @__isa_available, align 4, !insn.addr !3140
  %3 = icmp slt i32 %2, 5, !insn.addr !3141
  br i1 %3, label %dec_label_pc_449f16, label %dec_label_pc_449e5f, !insn.addr !3141

dec_label_pc_449e5f:                              ; preds = %dec_label_pc_449e4a
  %4 = ptrtoint i16* %string to i32, !insn.addr !3142
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0, !insn.addr !3143
  br i1 %6, label %dec_label_pc_449e88, label %dec_label_pc_449e67, !insn.addr !3144

dec_label_pc_449e67:                              ; preds = %dec_label_pc_449e5f
  %7 = mul i32 %maximum_count, 2, !insn.addr !3145
  %8 = add i32 %7, %4, !insn.addr !3145
  %9 = icmp eq i32 %7, 0, !insn.addr !3146
  store i32 %4, i32* %ecx.0.reg2mem, !insn.addr !3147
  store i32 %4, i32* %ecx.1.reg2mem, !insn.addr !3147
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !3147
  br i1 %9, label %dec_label_pc_449e81, label %dec_label_pc_449e75, !insn.addr !3147

dec_label_pc_449e75:                              ; preds = %dec_label_pc_449e67, %dec_label_pc_449e7a
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %10 = inttoptr i32 %ecx.0.reload to i16*, !insn.addr !3148
  %11 = load i16, i16* %10, align 2, !insn.addr !3148
  %12 = icmp eq i16 %11, 0, !insn.addr !3148
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !3149
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !3149
  br i1 %12, label %dec_label_pc_449e81, label %dec_label_pc_449e7a, !insn.addr !3149

dec_label_pc_449e7a:                              ; preds = %dec_label_pc_449e75
  %13 = add i32 %ecx.0.reload, 2, !insn.addr !3150
  %14 = icmp eq i32 %13, %8, !insn.addr !3151
  %15 = icmp eq i1 %14, false, !insn.addr !3152
  store i32 %13, i32* %ecx.0.reg2mem, !insn.addr !3152
  store i32 %13, i32* %ecx.1.reg2mem, !insn.addr !3152
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !3152
  br i1 %15, label %dec_label_pc_449e75, label %dec_label_pc_449e81, !insn.addr !3152

dec_label_pc_449e81:                              ; preds = %dec_label_pc_449e7a, %dec_label_pc_449e75, %dec_label_pc_449f42, %dec_label_pc_449f39, %dec_label_pc_449fc0, %dec_label_pc_449fc5, %dec_label_pc_449fb4, %dec_label_pc_449f27, %dec_label_pc_449e67
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %16 = sub i32 %ecx.1.reload, %esi.0.reload, !insn.addr !3153
  store i32 %16, i32* %storemerge.reg2mem, !insn.addr !3154
  br label %dec_label_pc_449ff2, !insn.addr !3154

dec_label_pc_449e88:                              ; preds = %dec_label_pc_449e5f
  %17 = and i32 %4, 31, !insn.addr !3155
  %18 = sub nsw i32 32, %17, !insn.addr !3156
  %19 = icmp eq i32 %17, 0, !insn.addr !3157
  %.op = udiv i32 %18, 2
  %20 = select i1 %19, i32 0, i32 %.op, !insn.addr !3158
  %21 = icmp ugt i32 %20, %maximum_count, !insn.addr !3159
  %22 = icmp eq i1 %21, false, !insn.addr !3160
  %spec.select = select i1 %22, i32 %20, i32 %maximum_count
  %23 = mul i32 %spec.select, 2, !insn.addr !3161
  %24 = add i32 %23, %4, !insn.addr !3161
  %25 = icmp eq i32 %23, 0, !insn.addr !3162
  store i32 %4, i32* %ecx.2.reg2mem, !insn.addr !3163
  store i32 %4, i32* %ecx.3.reg2mem, !insn.addr !3163
  br i1 %25, label %dec_label_pc_449ebb, label %dec_label_pc_449eaf, !insn.addr !3163

dec_label_pc_449eaf:                              ; preds = %dec_label_pc_449e88, %dec_label_pc_449eb4
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %26 = inttoptr i32 %ecx.2.reload to i16*, !insn.addr !3164
  %27 = load i16, i16* %26, align 2, !insn.addr !3164
  %28 = icmp eq i16 %27, 0, !insn.addr !3164
  store i32 %ecx.2.reload, i32* %ecx.3.reg2mem, !insn.addr !3165
  br i1 %28, label %dec_label_pc_449ebb, label %dec_label_pc_449eb4, !insn.addr !3165

dec_label_pc_449eb4:                              ; preds = %dec_label_pc_449eaf
  %29 = add i32 %ecx.2.reload, 2, !insn.addr !3166
  %30 = icmp eq i32 %29, %24, !insn.addr !3167
  %31 = icmp eq i1 %30, false, !insn.addr !3168
  store i32 %29, i32* %ecx.2.reg2mem, !insn.addr !3168
  store i32 %29, i32* %ecx.3.reg2mem, !insn.addr !3168
  br i1 %31, label %dec_label_pc_449eaf, label %dec_label_pc_449ebb, !insn.addr !3168

dec_label_pc_449ebb:                              ; preds = %dec_label_pc_449eb4, %dec_label_pc_449eaf, %dec_label_pc_449e88
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %32 = sub i32 %ecx.3.reload, %4, !insn.addr !3169
  %33 = sdiv i32 %32, 2, !insn.addr !3170
  %34 = icmp eq i32 %33, %spec.select, !insn.addr !3171
  %35 = icmp eq i1 %34, false, !insn.addr !3172
  store i32 %33, i32* %ecx.9.reg2mem, !insn.addr !3172
  br i1 %35, label %dec_label_pc_449ff4, label %dec_label_pc_449ec7, !insn.addr !3172

dec_label_pc_449ec7:                              ; preds = %dec_label_pc_449ebb
  %36 = and i32 %32, -2, !insn.addr !3173
  %37 = add i32 %36, %4, !insn.addr !3173
  %38 = sub i32 %maximum_count, %spec.select, !insn.addr !3174
  %39 = and i32 %38, 2147483616, !insn.addr !3175
  %40 = add i32 %33, %39, !insn.addr !3176
  %41 = call i128 @__asm_vpxor(i128 %1, i128 %1), !insn.addr !3177
  %42 = mul i32 %40, 2, !insn.addr !3178
  %43 = add i32 %42, %4, !insn.addr !3178
  %44 = icmp eq i32 %37, %43, !insn.addr !3179
  %45 = icmp eq i1 %44, false, !insn.addr !3180
  store i32 %37, i32* %edi.010.reg2mem, !insn.addr !3180
  store i32 %37, i32* %edi.0.lcssa.reg2mem, !insn.addr !3180
  br i1 %45, label %dec_label_pc_449edd, label %dec_label_pc_449ef0, !insn.addr !3180

dec_label_pc_449edd:                              ; preds = %dec_label_pc_449ec7, %dec_label_pc_449ee9
  %edi.010.reload = load i32, i32* %edi.010.reg2mem
  %46 = inttoptr i32 %edi.010.reload to i256*, !insn.addr !3181
  %47 = load i256, i256* %46, align 4, !insn.addr !3181
  %48 = call i256 @__asm_vpcmpeqw(i256 %0, i256 %47), !insn.addr !3181
  %49 = call i32 @__asm_vpmovmskb(i256 %48), !insn.addr !3182
  %50 = icmp eq i32 %49, 0, !insn.addr !3183
  %51 = icmp eq i1 %50, false, !insn.addr !3184
  store i32 %edi.010.reload, i32* %edi.0.lcssa.reg2mem, !insn.addr !3184
  br i1 %51, label %dec_label_pc_449ef0, label %dec_label_pc_449ee9, !insn.addr !3184

dec_label_pc_449ee9:                              ; preds = %dec_label_pc_449edd
  %52 = add i32 %edi.010.reload, 32, !insn.addr !3185
  %53 = icmp eq i32 %52, %43, !insn.addr !3179
  %54 = icmp eq i1 %53, false, !insn.addr !3180
  store i32 %52, i32* %edi.010.reg2mem, !insn.addr !3180
  store i32 %52, i32* %edi.0.lcssa.reg2mem, !insn.addr !3180
  br i1 %54, label %dec_label_pc_449edd, label %dec_label_pc_449ef0, !insn.addr !3180

dec_label_pc_449ef0:                              ; preds = %dec_label_pc_449ee9, %dec_label_pc_449edd, %dec_label_pc_449ec7
  %edi.0.lcssa.reload = load i32, i32* %edi.0.lcssa.reg2mem
  %55 = mul i32 %maximum_count, 2, !insn.addr !3186
  %56 = add i32 %55, %4, !insn.addr !3186
  %57 = icmp eq i32 %edi.0.lcssa.reload, %56, !insn.addr !3187
  store i32 %edi.0.lcssa.reload, i32* %edi.1.reg2mem, !insn.addr !3188
  store i32 %56, i32* %edi.2.reg2mem, !insn.addr !3188
  br i1 %57, label %dec_label_pc_449f08, label %dec_label_pc_449efc, !insn.addr !3188

dec_label_pc_449efc:                              ; preds = %dec_label_pc_449ef0, %dec_label_pc_449f01
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %58 = inttoptr i32 %edi.1.reload to i16*, !insn.addr !3189
  %59 = load i16, i16* %58, align 2, !insn.addr !3189
  %60 = icmp eq i16 %59, 0, !insn.addr !3189
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !3190
  br i1 %60, label %dec_label_pc_449f08, label %dec_label_pc_449f01, !insn.addr !3190

dec_label_pc_449f01:                              ; preds = %dec_label_pc_449efc
  %61 = add i32 %edi.1.reload, 2, !insn.addr !3191
  %62 = icmp eq i32 %61, %56, !insn.addr !3192
  %63 = icmp eq i1 %62, false, !insn.addr !3193
  store i32 %61, i32* %edi.1.reg2mem, !insn.addr !3193
  store i32 %61, i32* %edi.2.reg2mem, !insn.addr !3193
  br i1 %63, label %dec_label_pc_449efc, label %dec_label_pc_449f08, !insn.addr !3193

dec_label_pc_449f08:                              ; preds = %dec_label_pc_449f01, %dec_label_pc_449efc, %dec_label_pc_449ef0
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %64 = sub i32 %edi.2.reload, %4, !insn.addr !3194
  %65 = sdiv i32 %64, 2, !insn.addr !3195
  %66 = call i32 @__asm_vzeroupper(), !insn.addr !3196
  store i32 %65, i32* %ecx.9.reg2mem, !insn.addr !3197
  br label %dec_label_pc_449ff4, !insn.addr !3197

dec_label_pc_449f16:                              ; preds = %dec_label_pc_449e4a
  %67 = icmp slt i32 %2, 1, !insn.addr !3198
  %68 = ptrtoint i16* %string to i32
  br i1 %67, label %dec_label_pc_449fd3, label %dec_label_pc_449f1f, !insn.addr !3198

dec_label_pc_449f1f:                              ; preds = %dec_label_pc_449f16
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0, !insn.addr !3199
  br i1 %70, label %dec_label_pc_449f4e, label %dec_label_pc_449f27, !insn.addr !3200

dec_label_pc_449f27:                              ; preds = %dec_label_pc_449f1f
  %71 = mul i32 %maximum_count, 2, !insn.addr !3201
  %72 = add i32 %71, %68, !insn.addr !3201
  %73 = icmp eq i32 %71, 0, !insn.addr !3202
  store i32 %68, i32* %ecx.1.reg2mem, !insn.addr !3203
  store i32 %68, i32* %esi.0.reg2mem, !insn.addr !3203
  store i32 %68, i32* %ecx.4.reg2mem, !insn.addr !3203
  br i1 %73, label %dec_label_pc_449e81, label %dec_label_pc_449f39, !insn.addr !3203

dec_label_pc_449f39:                              ; preds = %dec_label_pc_449f27, %dec_label_pc_449f42
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %74 = inttoptr i32 %ecx.4.reload to i16*, !insn.addr !3204
  %75 = load i16, i16* %74, align 2, !insn.addr !3204
  %76 = icmp eq i16 %75, 0, !insn.addr !3204
  store i32 %ecx.4.reload, i32* %ecx.1.reg2mem, !insn.addr !3205
  store i32 %68, i32* %esi.0.reg2mem, !insn.addr !3205
  br i1 %76, label %dec_label_pc_449e81, label %dec_label_pc_449f42, !insn.addr !3205

dec_label_pc_449f42:                              ; preds = %dec_label_pc_449f39
  %77 = add i32 %ecx.4.reload, 2, !insn.addr !3206
  %78 = icmp eq i32 %77, %72, !insn.addr !3207
  %79 = icmp eq i1 %78, false, !insn.addr !3208
  store i32 %77, i32* %ecx.1.reg2mem, !insn.addr !3208
  store i32 %68, i32* %esi.0.reg2mem, !insn.addr !3208
  store i32 %77, i32* %ecx.4.reg2mem, !insn.addr !3208
  br i1 %79, label %dec_label_pc_449f39, label %dec_label_pc_449e81, !insn.addr !3208

dec_label_pc_449f4e:                              ; preds = %dec_label_pc_449f1f
  %80 = and i32 %68, 15, !insn.addr !3209
  %81 = sub nsw i32 16, %80, !insn.addr !3210
  %82 = icmp eq i32 %80, 0, !insn.addr !3211
  %.op2 = udiv i32 %81, 2
  %83 = select i1 %82, i32 0, i32 %.op2, !insn.addr !3212
  %84 = icmp ugt i32 %83, %maximum_count, !insn.addr !3213
  %85 = icmp eq i1 %84, false, !insn.addr !3214
  %spec.select3 = select i1 %85, i32 %83, i32 %maximum_count
  %86 = mul i32 %spec.select3, 2, !insn.addr !3215
  %87 = add i32 %86, %68, !insn.addr !3215
  %88 = icmp eq i32 %86, 0, !insn.addr !3216
  store i32 %68, i32* %ecx.5.reg2mem, !insn.addr !3217
  store i32 %68, i32* %ecx.6.reg2mem, !insn.addr !3217
  br i1 %88, label %dec_label_pc_449f81, label %dec_label_pc_449f75, !insn.addr !3217

dec_label_pc_449f75:                              ; preds = %dec_label_pc_449f4e, %dec_label_pc_449f7a
  %ecx.5.reload = load i32, i32* %ecx.5.reg2mem
  %89 = inttoptr i32 %ecx.5.reload to i16*, !insn.addr !3218
  %90 = load i16, i16* %89, align 2, !insn.addr !3218
  %91 = icmp eq i16 %90, 0, !insn.addr !3218
  store i32 %ecx.5.reload, i32* %ecx.6.reg2mem, !insn.addr !3219
  br i1 %91, label %dec_label_pc_449f81, label %dec_label_pc_449f7a, !insn.addr !3219

dec_label_pc_449f7a:                              ; preds = %dec_label_pc_449f75
  %92 = add i32 %ecx.5.reload, 2, !insn.addr !3220
  %93 = icmp eq i32 %92, %87, !insn.addr !3221
  %94 = icmp eq i1 %93, false, !insn.addr !3222
  store i32 %92, i32* %ecx.5.reg2mem, !insn.addr !3222
  store i32 %92, i32* %ecx.6.reg2mem, !insn.addr !3222
  br i1 %94, label %dec_label_pc_449f75, label %dec_label_pc_449f81, !insn.addr !3222

dec_label_pc_449f81:                              ; preds = %dec_label_pc_449f7a, %dec_label_pc_449f75, %dec_label_pc_449f4e
  %ecx.6.reload = load i32, i32* %ecx.6.reg2mem
  %95 = sub i32 %ecx.6.reload, %68, !insn.addr !3223
  %96 = sdiv i32 %95, 2, !insn.addr !3224
  %97 = icmp eq i32 %96, %spec.select3, !insn.addr !3225
  %98 = icmp eq i1 %97, false, !insn.addr !3226
  store i32 %96, i32* %ecx.9.reg2mem, !insn.addr !3226
  br i1 %98, label %dec_label_pc_449ff4, label %dec_label_pc_449f89, !insn.addr !3226

dec_label_pc_449f89:                              ; preds = %dec_label_pc_449f81
  %99 = and i32 %95, -2, !insn.addr !3227
  %100 = add i32 %99, %68, !insn.addr !3227
  %101 = sub i32 %maximum_count, %spec.select3, !insn.addr !3228
  %102 = call i128 @__asm_xorps(i128 %1, i128 %1), !insn.addr !3229
  %103 = and i32 %101, 2147483632, !insn.addr !3230
  %104 = add i32 %96, %103, !insn.addr !3231
  %105 = mul i32 %104, 2, !insn.addr !3232
  %106 = add i32 %105, %68, !insn.addr !3232
  %107 = icmp eq i32 %100, %106, !insn.addr !3233
  %108 = icmp eq i1 %107, false, !insn.addr !3234
  store i32 %100, i32* %edi.38.reg2mem, !insn.addr !3234
  store i32 %100, i32* %edi.3.lcssa.reg2mem, !insn.addr !3234
  br i1 %108, label %dec_label_pc_449f9e, label %dec_label_pc_449fb4, !insn.addr !3234

dec_label_pc_449f9e:                              ; preds = %dec_label_pc_449f89, %dec_label_pc_449fad
  %edi.38.reload = load i32, i32* %edi.38.reg2mem
  %109 = inttoptr i32 %edi.38.reload to i128*, !insn.addr !3235
  %110 = load i128, i128* %109, align 4, !insn.addr !3235
  %111 = call i128 @__asm_movups.3(i128 %110), !insn.addr !3235
  %112 = call i128 @__asm_pcmpeqw(i128 %111, i128 %102), !insn.addr !3236
  %113 = call i32 @__asm_pmovmskb(i128 %112), !insn.addr !3237
  %114 = icmp eq i32 %113, 0, !insn.addr !3238
  %115 = icmp eq i1 %114, false, !insn.addr !3239
  store i32 %edi.38.reload, i32* %edi.3.lcssa.reg2mem, !insn.addr !3239
  br i1 %115, label %dec_label_pc_449fb4, label %dec_label_pc_449fad, !insn.addr !3239

dec_label_pc_449fad:                              ; preds = %dec_label_pc_449f9e
  %116 = add i32 %edi.38.reload, 16, !insn.addr !3240
  %117 = icmp eq i32 %116, %106, !insn.addr !3233
  %118 = icmp eq i1 %117, false, !insn.addr !3234
  store i32 %116, i32* %edi.38.reg2mem, !insn.addr !3234
  store i32 %116, i32* %edi.3.lcssa.reg2mem, !insn.addr !3234
  br i1 %118, label %dec_label_pc_449f9e, label %dec_label_pc_449fb4, !insn.addr !3234

dec_label_pc_449fb4:                              ; preds = %dec_label_pc_449fad, %dec_label_pc_449f9e, %dec_label_pc_449f89
  %edi.3.lcssa.reload = load i32, i32* %edi.3.lcssa.reg2mem
  %119 = mul i32 %maximum_count, 2, !insn.addr !3241
  %120 = add i32 %119, %68, !insn.addr !3241
  %121 = icmp eq i32 %edi.3.lcssa.reload, %120, !insn.addr !3242
  store i32 %120, i32* %ecx.1.reg2mem, !insn.addr !3243
  store i32 %68, i32* %esi.0.reg2mem, !insn.addr !3243
  store i32 %edi.3.lcssa.reload, i32* %edi.4.reg2mem, !insn.addr !3243
  br i1 %121, label %dec_label_pc_449e81, label %dec_label_pc_449fc0, !insn.addr !3243

dec_label_pc_449fc0:                              ; preds = %dec_label_pc_449fb4, %dec_label_pc_449fc5
  %edi.4.reload = load i32, i32* %edi.4.reg2mem
  %122 = inttoptr i32 %edi.4.reload to i16*, !insn.addr !3244
  %123 = load i16, i16* %122, align 2, !insn.addr !3244
  %124 = icmp eq i16 %123, 0, !insn.addr !3244
  store i32 %edi.4.reload, i32* %ecx.1.reg2mem, !insn.addr !3245
  store i32 %68, i32* %esi.0.reg2mem, !insn.addr !3245
  br i1 %124, label %dec_label_pc_449e81, label %dec_label_pc_449fc5, !insn.addr !3245

dec_label_pc_449fc5:                              ; preds = %dec_label_pc_449fc0
  %125 = add i32 %edi.4.reload, 2, !insn.addr !3246
  %126 = icmp eq i32 %125, %120, !insn.addr !3247
  %127 = icmp eq i1 %126, false, !insn.addr !3248
  store i32 %125, i32* %ecx.1.reg2mem, !insn.addr !3248
  store i32 %68, i32* %esi.0.reg2mem, !insn.addr !3248
  store i32 %125, i32* %edi.4.reg2mem, !insn.addr !3248
  br i1 %127, label %dec_label_pc_449fc0, label %dec_label_pc_449e81, !insn.addr !3248

dec_label_pc_449fd3:                              ; preds = %dec_label_pc_449f16
  %128 = mul i32 %maximum_count, 2, !insn.addr !3249
  %129 = add i32 %128, %68, !insn.addr !3249
  %130 = icmp eq i32 %128, 0, !insn.addr !3250
  store i32 %68, i32* %ecx.7.reg2mem, !insn.addr !3251
  store i32 %68, i32* %ecx.8.reg2mem, !insn.addr !3251
  br i1 %130, label %dec_label_pc_449ff0, label %dec_label_pc_449fe4, !insn.addr !3251

dec_label_pc_449fe4:                              ; preds = %dec_label_pc_449fd3, %dec_label_pc_449fe9
  %ecx.7.reload = load i32, i32* %ecx.7.reg2mem
  %131 = inttoptr i32 %ecx.7.reload to i16*, !insn.addr !3252
  %132 = load i16, i16* %131, align 2, !insn.addr !3252
  %133 = icmp eq i16 %132, 0, !insn.addr !3252
  store i32 %ecx.7.reload, i32* %ecx.8.reg2mem, !insn.addr !3253
  br i1 %133, label %dec_label_pc_449ff0, label %dec_label_pc_449fe9, !insn.addr !3253

dec_label_pc_449fe9:                              ; preds = %dec_label_pc_449fe4
  %134 = add i32 %ecx.7.reload, 2, !insn.addr !3254
  %135 = icmp eq i32 %134, %129, !insn.addr !3255
  %136 = icmp eq i1 %135, false, !insn.addr !3256
  store i32 %134, i32* %ecx.7.reg2mem, !insn.addr !3256
  store i32 %134, i32* %ecx.8.reg2mem, !insn.addr !3256
  br i1 %136, label %dec_label_pc_449fe4, label %dec_label_pc_449ff0, !insn.addr !3256

dec_label_pc_449ff0:                              ; preds = %dec_label_pc_449fe9, %dec_label_pc_449fe4, %dec_label_pc_449fd3
  %ecx.8.reload = load i32, i32* %ecx.8.reg2mem
  %137 = sub i32 %ecx.8.reload, %68, !insn.addr !3257
  store i32 %137, i32* %storemerge.reg2mem, !insn.addr !3257
  br label %dec_label_pc_449ff2, !insn.addr !3257

dec_label_pc_449ff2:                              ; preds = %dec_label_pc_449ff0, %dec_label_pc_449e81
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %138 = sdiv i32 %storemerge.reload, 2, !insn.addr !3258
  store i32 %138, i32* %ecx.9.reg2mem, !insn.addr !3258
  br label %dec_label_pc_449ff4, !insn.addr !3258

dec_label_pc_449ff4:                              ; preds = %dec_label_pc_449ff2, %dec_label_pc_449f81, %dec_label_pc_449f08, %dec_label_pc_449ebb
  %ecx.9.reload = load i32, i32* %ecx.9.reg2mem
  ret i32 %ecx.9.reload, !insn.addr !3259
}

define void @"__crt_seh_guarded_call<void>::operator()<<lambda_15ade71b0218206bbe3333a0c9b79046>,<lambda_da44e0f8b0f19ba52fefafb335991732> &,<lambda_207f2d024fc103971653565357d6cd41> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_44a07c:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b54(i32* nonnull @global_var_47b598, i32 8), !insn.addr !3260
  %2 = add i32 %0, 8, !insn.addr !3261
  %3 = inttoptr i32 %2 to i32*, !insn.addr !3261
  %4 = load i32, i32* %3, align 4, !insn.addr !3261
  %5 = inttoptr i32 %4 to i32*, !insn.addr !3262
  %6 = load i32, i32* %5, align 4, !insn.addr !3262
  %7 = call i32 @function_404548(i32 %6), !insn.addr !3263
  %8 = add i32 %0, -4, !insn.addr !3264
  %9 = inttoptr i32 %8 to i32*, !insn.addr !3264
  store i32 0, i32* %9, align 4, !insn.addr !3264
  %10 = add i32 %0, 12, !insn.addr !3265
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3265
  %12 = load i32, i32* %11, align 4, !insn.addr !3265
  %13 = inttoptr i32 %12 to i32*, !insn.addr !3266
  %14 = load i32, i32* %13, align 4, !insn.addr !3266
  %15 = inttoptr i32 %14 to i32*, !insn.addr !3267
  %16 = load i32, i32* %15, align 4, !insn.addr !3267
  %17 = add i32 %16, 72, !insn.addr !3268
  %18 = inttoptr i32 %17 to i32*, !insn.addr !3268
  %19 = load i32, i32* %18, align 4, !insn.addr !3268
  %20 = inttoptr i32 %19 to i32*, !insn.addr !3269
  %21 = load i32, i32* %20, align 4, !insn.addr !3269
  %22 = add i32 %21, 1, !insn.addr !3269
  store i32 %22, i32* %20, align 4, !insn.addr !3269
  store i32 -2, i32* %9, align 4, !insn.addr !3270
  %23 = call i32 @function_44a0c2(), !insn.addr !3271
  %24 = add i32 %0, -16, !insn.addr !3272
  %25 = inttoptr i32 %24 to i32*, !insn.addr !3272
  %26 = load i32, i32* %25, align 4, !insn.addr !3272
  call void @__writefsdword(i32 0, i32 %26), !insn.addr !3273
  ret void, !insn.addr !3274
}

define i32 @function_44a0c2() local_unnamed_addr {
dec_label_pc_44a0c2:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !3275
  %2 = inttoptr i32 %1 to i32*, !insn.addr !3275
  %3 = load i32, i32* %2, align 4, !insn.addr !3275
  %4 = inttoptr i32 %3 to i32*, !insn.addr !3276
  %5 = load i32, i32* %4, align 4, !insn.addr !3276
  %6 = call i32 @function_4017d5(i32 %5), !insn.addr !3277
  ret i32 %6, !insn.addr !3278
}

define void @"__crt_seh_guarded_call<void>::operator()<<lambda_a7e850c220f1c8d1e6efeecdedd162c6>,<lambda_46720907175c18b6c9d2717bc0d2d362> &,<lambda_9048902d66e8d99359bc9897bbb930a8> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_44a1d1:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b54(i32* nonnull @global_var_47b5b8, i32 8), !insn.addr !3279
  %2 = add i32 %0, 8, !insn.addr !3280
  %3 = inttoptr i32 %2 to i32*, !insn.addr !3280
  %4 = load i32, i32* %3, align 4, !insn.addr !3280
  %5 = inttoptr i32 %4 to i32*, !insn.addr !3281
  %6 = load i32, i32* %5, align 4, !insn.addr !3281
  %7 = call i32 @function_404548(i32 %6), !insn.addr !3282
  %8 = add i32 %0, -4, !insn.addr !3283
  %9 = inttoptr i32 %8 to i32*, !insn.addr !3283
  store i32 0, i32* %9, align 4, !insn.addr !3283
  %10 = add i32 %0, 12, !insn.addr !3284
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3284
  %12 = load i32, i32* %11, align 4, !insn.addr !3284
  %13 = add i32 %12, 4, !insn.addr !3285
  %14 = inttoptr i32 %13 to i32*, !insn.addr !3285
  %15 = load i32, i32* %14, align 4, !insn.addr !3285
  %16 = inttoptr i32 %15 to i32*, !insn.addr !3286
  %17 = load i32, i32* %16, align 4, !insn.addr !3286
  %18 = inttoptr i32 %17 to i32*, !insn.addr !3287
  %19 = load i32, i32* %18, align 4, !insn.addr !3287
  %20 = inttoptr i32 %12 to i32*, !insn.addr !3288
  %21 = load i32, i32* %20, align 4, !insn.addr !3288
  %22 = inttoptr i32 %21 to i32*, !insn.addr !3289
  %23 = load i32, i32* %22, align 4, !insn.addr !3289
  call void @replace_current_thread_locale_nolock(i32 %23, i32 %19), !insn.addr !3290
  store i32 -2, i32* %9, align 4, !insn.addr !3291
  %24 = call i32 @function_44a21f(), !insn.addr !3292
  %25 = add i32 %0, -16, !insn.addr !3293
  %26 = inttoptr i32 %25 to i32*, !insn.addr !3293
  %27 = load i32, i32* %26, align 4, !insn.addr !3293
  call void @__writefsdword(i32 0, i32 %27), !insn.addr !3294
  ret void, !insn.addr !3295
}

define i32 @function_44a21f() local_unnamed_addr {
dec_label_pc_44a21f:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !3296
  %2 = inttoptr i32 %1 to i32*, !insn.addr !3296
  %3 = load i32, i32* %2, align 4, !insn.addr !3296
  %4 = inttoptr i32 %3 to i32*, !insn.addr !3297
  %5 = load i32, i32* %4, align 4, !insn.addr !3297
  %6 = call i32 @function_4017d5(i32 %5), !insn.addr !3298
  ret i32 %6, !insn.addr !3299
}

define void @construct_ptd(i32 %ptd, i32 %locale_data) local_unnamed_addr {
dec_label_pc_44a50f:
  %stack_var_8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %ptd, i32* %stack_var_4, align 4
  %stack_var_-24 = alloca i32, align 4
  %0 = add i32 %ptd, 24, !insn.addr !3300
  %1 = inttoptr i32 %0 to i32*, !insn.addr !3300
  store i32 1, i32* %1, align 4, !insn.addr !3300
  %2 = load i32, i32* %stack_var_4, align 4, !insn.addr !3301
  %3 = inttoptr i32 %2 to i32*, !insn.addr !3302
  store i32 ptrtoint (i32* @__acrt_exception_action_table to i32), i32* %3, align 4, !insn.addr !3302
  %4 = load i32, i32* %stack_var_4, align 4, !insn.addr !3303
  %5 = add i32 %4, 848, !insn.addr !3304
  %6 = inttoptr i32 %5 to i32*, !insn.addr !3304
  store i32 1, i32* %6, align 4, !insn.addr !3304
  %7 = load i32, i32* %stack_var_4, align 4, !insn.addr !3305
  %8 = add i32 %7, 72, !insn.addr !3306
  %9 = inttoptr i32 %8 to i32*, !insn.addr !3306
  store i32 ptrtoint (%__crt_multibyte_data* @__acrt_initial_multibyte_data to i32), i32* %9, align 4, !insn.addr !3306
  %10 = load i32, i32* %stack_var_4, align 4, !insn.addr !3307
  %11 = add i32 %10, 108, !insn.addr !3308
  %12 = inttoptr i32 %11 to i16*, !insn.addr !3308
  store i16 67, i16* %12, align 2, !insn.addr !3308
  %13 = load i32, i32* %stack_var_4, align 4, !insn.addr !3309
  %14 = add i32 %13, 370, !insn.addr !3310
  %15 = inttoptr i32 %14 to i16*, !insn.addr !3310
  store i16 67, i16* %15, align 2, !insn.addr !3310
  %16 = load i32, i32* %stack_var_4, align 4, !insn.addr !3311
  %17 = add i32 %16, 844, !insn.addr !3312
  %18 = inttoptr i32 %17 to i32*, !insn.addr !3312
  store i32 0, i32* %18, align 4, !insn.addr !3312
  %19 = ptrtoint i32* %stack_var_4 to i32, !insn.addr !3313
  store i32 %19, i32* %stack_var_-20, align 4, !insn.addr !3313
  store i32 5, i32* %stack_var_-12, align 4, !insn.addr !3314
  store i32 5, i32* %stack_var_-24, align 4, !insn.addr !3315
  %20 = ptrtoint i32* %stack_var_-24 to i32, !insn.addr !3316
  call void @"__crt_seh_guarded_call<void>::operator()<<lambda_15ade71b0218206bbe3333a0c9b79046>,<lambda_da44e0f8b0f19ba52fefafb335991732> &,<lambda_207f2d024fc103971653565357d6cd41> >"(i32 %20, i32* nonnull %stack_var_-20, i32* nonnull %stack_var_-12, i32* inttoptr (i32 5 to i32*)), !insn.addr !3317
  store i32 %19, i32* %stack_var_-16, align 4, !insn.addr !3318
  %21 = ptrtoint i32* %stack_var_8 to i32, !insn.addr !3319
  store i32 %21, i32* %stack_var_-12, align 4, !insn.addr !3319
  store i32 4, i32* %stack_var_-24, align 4, !insn.addr !3320
  store i32 4, i32* %stack_var_-20, align 4, !insn.addr !3321
  %22 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !3322
  call void @"__crt_seh_guarded_call<void>::operator()<<lambda_a7e850c220f1c8d1e6efeecdedd162c6>,<lambda_46720907175c18b6c9d2717bc0d2d362> &,<lambda_9048902d66e8d99359bc9897bbb930a8> >"(i32 %22, i32* nonnull %stack_var_-16, i32* nonnull %stack_var_-24, i32* nonnull @80), !insn.addr !3323
  ret void, !insn.addr !3324
}

define void @replace_current_thread_locale_nolock(i32 %ptd, i32 %new_locale_info) local_unnamed_addr {
dec_label_pc_44a8c1:
  %0 = add i32 %ptd, 76, !insn.addr !3325
  %1 = inttoptr i32 %0 to i32*, !insn.addr !3325
  %2 = load i32, i32* %1, align 4, !insn.addr !3325
  %3 = icmp eq i32 %2, 0, !insn.addr !3325
  br i1 %3, label %dec_label_pc_44a8f8, label %dec_label_pc_44a8d0, !insn.addr !3326

dec_label_pc_44a8d0:                              ; preds = %dec_label_pc_44a8c1
  %4 = call i32 @function_403a58(i32 %2), !insn.addr !3327
  %5 = load i32, i32* %1, align 4, !insn.addr !3328
  %6 = load i32, i32* @__acrt_current_locale_data, align 4, !insn.addr !3329
  %7 = icmp eq i32 %5, %6, !insn.addr !3329
  %8 = icmp eq i32 %5, ptrtoint (i32* @__acrt_initial_locale_data to i32), !insn.addr !3330
  %or.cond = or i1 %8, %7
  br i1 %or.cond, label %dec_label_pc_44a8f8, label %dec_label_pc_44a8eb, !insn.addr !3331

dec_label_pc_44a8eb:                              ; preds = %dec_label_pc_44a8d0
  %9 = add i32 %5, 12, !insn.addr !3332
  %10 = inttoptr i32 %9 to i32*, !insn.addr !3332
  %11 = load i32, i32* %10, align 4, !insn.addr !3332
  %12 = icmp eq i32 %11, 0, !insn.addr !3332
  %13 = icmp eq i1 %12, false, !insn.addr !3333
  br i1 %13, label %dec_label_pc_44a8f8, label %dec_label_pc_44a8f1, !insn.addr !3333

dec_label_pc_44a8f1:                              ; preds = %dec_label_pc_44a8eb
  %14 = call i32 @function_40481d(i32 %5), !insn.addr !3334
  br label %dec_label_pc_44a8f8, !insn.addr !3335

dec_label_pc_44a8f8:                              ; preds = %dec_label_pc_44a8f1, %dec_label_pc_44a8eb, %dec_label_pc_44a8d0, %dec_label_pc_44a8c1
  store i32 %new_locale_info, i32* %1, align 4, !insn.addr !3336
  %15 = icmp eq i32 %new_locale_info, 0, !insn.addr !3337
  br i1 %15, label %dec_label_pc_44a90a, label %dec_label_pc_44a903, !insn.addr !3338

dec_label_pc_44a903:                              ; preds = %dec_label_pc_44a8f8
  %16 = call i32 @function_4022c5(i32 %new_locale_info), !insn.addr !3339
  br label %dec_label_pc_44a90a, !insn.addr !3340

dec_label_pc_44a90a:                              ; preds = %dec_label_pc_44a903, %dec_label_pc_44a8f8
  ret void, !insn.addr !3341
}

define i32 @__acrt_getptd() local_unnamed_addr {
dec_label_pc_44a971:
  %esp.4.reg2mem = alloca i32, !insn.addr !3342
  %ebx.2.reg2mem = alloca i32, !insn.addr !3342
  %edi.0.reg2mem = alloca i32, !insn.addr !3342
  %esp.3.reg2mem = alloca i32, !insn.addr !3342
  %storemerge.reg2mem = alloca i32, !insn.addr !3342
  %esp.2.reg2mem = alloca i32, !insn.addr !3342
  %eax.0.reg2mem = alloca i32, !insn.addr !3342
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %0 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !3343
  %1 = call i32 @GetLastError(), !insn.addr !3344
  %2 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3345
  %3 = icmp eq i32 %2, -1, !insn.addr !3346
  store i32 -1, i32* %eax.0.reg2mem, !insn.addr !3347
  store i32 %0, i32* %esp.2.reg2mem, !insn.addr !3347
  br i1 %3, label %dec_label_pc_44a9a4, label %dec_label_pc_44a988, !insn.addr !3347

dec_label_pc_44a988:                              ; preds = %dec_label_pc_44a971
  store i32 %2, i32* %stack_var_-16, align 4, !insn.addr !3348
  %4 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !3348
  %5 = call i32 @"___acrt_FlsGetValue@4"(i32 %2), !insn.addr !3349
  %6 = icmp eq i32 %5, 0, !insn.addr !3350
  br i1 %6, label %dec_label_pc_44a99f, label %dec_label_pc_44a994, !insn.addr !3351

dec_label_pc_44a994:                              ; preds = %dec_label_pc_44a988
  %7 = icmp eq i32 %5, -1, !insn.addr !3352
  %8 = icmp eq i1 %7, false, !insn.addr !3353
  store i32 %4, i32* %esp.3.reg2mem, !insn.addr !3353
  store i32 %5, i32* %edi.0.reg2mem, !insn.addr !3353
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !3353
  store i32 %4, i32* %esp.4.reg2mem, !insn.addr !3353
  br i1 %8, label %dec_label_pc_44aa11, label %dec_label_pc_44aa13, !insn.addr !3353

dec_label_pc_44a99f:                              ; preds = %dec_label_pc_44a988
  %9 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3354
  store i32 %9, i32* %eax.0.reg2mem, !insn.addr !3354
  store i32 %4, i32* %esp.2.reg2mem, !insn.addr !3354
  br label %dec_label_pc_44a9a4, !insn.addr !3354

dec_label_pc_44a9a4:                              ; preds = %dec_label_pc_44a99f, %dec_label_pc_44a971
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %10 = add i32 %esp.2.reload, -4, !insn.addr !3355
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3355
  store i32 -1, i32* %11, align 4, !insn.addr !3355
  %12 = add i32 %esp.2.reload, -8, !insn.addr !3356
  %13 = inttoptr i32 %12 to i32*, !insn.addr !3356
  store i32 %eax.0.reload, i32* %13, align 4, !insn.addr !3356
  %14 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3357
  %15 = icmp eq i32 %14, 0, !insn.addr !3358
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !3359
  store i32 %12, i32* %esp.4.reg2mem, !insn.addr !3359
  br i1 %15, label %dec_label_pc_44aa13, label %dec_label_pc_44a9b0, !insn.addr !3359

dec_label_pc_44a9b0:                              ; preds = %dec_label_pc_44a9a4
  %16 = add i32 %esp.2.reload, -12, !insn.addr !3360
  %17 = inttoptr i32 %16 to i32*, !insn.addr !3360
  store i32 868, i32* %17, align 4, !insn.addr !3360
  %18 = add i32 %esp.2.reload, -16, !insn.addr !3361
  %19 = inttoptr i32 %18 to i32*, !insn.addr !3361
  store i32 1, i32* %19, align 4, !insn.addr !3361
  %20 = call i32* @_calloc_base(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3362
  %21 = icmp eq i32* %20, null, !insn.addr !3363
  %22 = icmp eq i1 %21, false, !insn.addr !3364
  br i1 %22, label %dec_label_pc_44a9db, label %dec_label_pc_44a9c4, !insn.addr !3364

dec_label_pc_44a9c4:                              ; preds = %dec_label_pc_44a9b0
  store i32 0, i32* %17, align 4, !insn.addr !3365
  %23 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3366
  store i32 %23, i32* %19, align 4, !insn.addr !3366
  %24 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3367
  %25 = add i32 %esp.2.reload, -20, !insn.addr !3368
  %26 = inttoptr i32 %25 to i32*, !insn.addr !3368
  store i32 0, i32* %26, align 4, !insn.addr !3368
  store i32 %25, i32* %storemerge.reg2mem, !insn.addr !3368
  br label %dec_label_pc_44a9d3, !insn.addr !3368

dec_label_pc_44a9d3:                              ; preds = %dec_label_pc_44a9eb, %dec_label_pc_44a9c4
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  call void @_free_base(i32* nonnull @80), !insn.addr !3369
  %27 = add i32 %storemerge.reload, 4, !insn.addr !3370
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !3371
  store i32 %27, i32* %esp.4.reg2mem, !insn.addr !3371
  br label %dec_label_pc_44aa13, !insn.addr !3371

dec_label_pc_44a9db:                              ; preds = %dec_label_pc_44a9b0
  %28 = ptrtoint i32* %20 to i32, !insn.addr !3362
  store i32 %28, i32* %17, align 4, !insn.addr !3372
  %29 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3373
  store i32 %29, i32* %19, align 4, !insn.addr !3373
  %30 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3374
  %31 = icmp eq i32 %30, 0, !insn.addr !3375
  %32 = icmp eq i1 %31, false, !insn.addr !3376
  %33 = add i32 %esp.2.reload, -20
  %34 = inttoptr i32 %33 to i32*
  br i1 %32, label %dec_label_pc_44a9fc, label %dec_label_pc_44a9eb, !insn.addr !3376

dec_label_pc_44a9eb:                              ; preds = %dec_label_pc_44a9db
  store i32 0, i32* %34, align 4, !insn.addr !3377
  %35 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3378
  %36 = add i32 %esp.2.reload, -24, !insn.addr !3378
  %37 = inttoptr i32 %36 to i32*, !insn.addr !3378
  store i32 %35, i32* %37, align 4, !insn.addr !3378
  %38 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3379
  %39 = add i32 %esp.2.reload, -28, !insn.addr !3380
  %40 = inttoptr i32 %39 to i32*, !insn.addr !3380
  store i32 %28, i32* %40, align 4, !insn.addr !3380
  store i32 %39, i32* %storemerge.reg2mem, !insn.addr !3381
  br label %dec_label_pc_44a9d3, !insn.addr !3381

dec_label_pc_44a9fc:                              ; preds = %dec_label_pc_44a9db
  store i32 ptrtoint (i32* @__acrt_current_locale_data to i32), i32* %34, align 4, !insn.addr !3382
  %41 = add i32 %esp.2.reload, -24, !insn.addr !3383
  %42 = inttoptr i32 %41 to i32*, !insn.addr !3383
  store i32 %28, i32* %42, align 4, !insn.addr !3383
  call void @construct_ptd(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3384
  %43 = add i32 %esp.2.reload, -28, !insn.addr !3385
  %44 = inttoptr i32 %43 to i32*, !insn.addr !3385
  store i32 0, i32* %44, align 4, !insn.addr !3385
  call void @_free_base(i32* nonnull @80), !insn.addr !3386
  store i32 %18, i32* %esp.3.reg2mem, !insn.addr !3387
  store i32 %28, i32* %edi.0.reg2mem, !insn.addr !3387
  br label %dec_label_pc_44aa11, !insn.addr !3387

dec_label_pc_44aa11:                              ; preds = %dec_label_pc_44a9fc, %dec_label_pc_44a994
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  store i32 %edi.0.reload, i32* %ebx.2.reg2mem, !insn.addr !3388
  store i32 %esp.3.reload, i32* %esp.4.reg2mem, !insn.addr !3388
  br label %dec_label_pc_44aa13, !insn.addr !3388

dec_label_pc_44aa13:                              ; preds = %dec_label_pc_44a9d3, %dec_label_pc_44a9a4, %dec_label_pc_44a994, %dec_label_pc_44aa11
  %esp.4.reload = load i32, i32* %esp.4.reg2mem
  %ebx.2.reload = load i32, i32* %ebx.2.reg2mem
  %45 = add i32 %esp.4.reload, -4, !insn.addr !3389
  %46 = inttoptr i32 %45 to i32*, !insn.addr !3389
  store i32 %1, i32* %46, align 4, !insn.addr !3389
  call void @SetLastError(i32 ptrtoint (i32* @80 to i32)), !insn.addr !3390
  %cond = icmp eq i32 %ebx.2.reload, 0
  br i1 %cond, label %dec_label_pc_44aa28, label %dec_label_pc_44aa22

dec_label_pc_44aa22:                              ; preds = %dec_label_pc_44aa13
  ret i32 %ebx.2.reload, !insn.addr !3391

dec_label_pc_44aa28:                              ; preds = %dec_label_pc_44aa13
  call void @abort(), !insn.addr !3392
  %47 = call i32 @__asm_int3(), !insn.addr !3393
  %48 = call i32 @__asm_int3(), !insn.addr !3394
  %49 = call i32 @__asm_int3(), !insn.addr !3395
  %50 = call i32 @__asm_int3(), !insn.addr !3396
  %51 = call i32 @__asm_int3(), !insn.addr !3397
  %52 = call i32 @__asm_int3(), !insn.addr !3398
  %53 = call i32 @__asm_int3(), !insn.addr !3399
  %54 = call i32 @__asm_int3(), !insn.addr !3400
  %55 = call i32 @__asm_int3(), !insn.addr !3401
  %56 = call i32 @__asm_int3(), !insn.addr !3402
  %57 = call i32 @__asm_int3(), !insn.addr !3403
  %58 = call i32 @__asm_int3(), !insn.addr !3404
  %59 = call i32 @__asm_int3(), !insn.addr !3405
  %60 = call i32 @__asm_int3(), !insn.addr !3406
  %61 = call i32 @__asm_int3(), !insn.addr !3407
  %62 = call i32 @__asm_int3(), !insn.addr !3408
  %63 = call i32 @__asm_int3(), !insn.addr !3409
  %64 = call i32 @__asm_int3(), !insn.addr !3410
  %65 = call i32 @__asm_int3(), !insn.addr !3411
  %66 = call i32 @__asm_int3(), !insn.addr !3412
  %67 = call i32 @__asm_int3(), !insn.addr !3413
  %68 = call i32 @__asm_int3(), !insn.addr !3414
  %69 = call i32 @__asm_int3(), !insn.addr !3415
  %70 = call i32 @__asm_int3(), !insn.addr !3416
  %71 = call i32 @__asm_int3(), !insn.addr !3417
  %72 = call i32 @__asm_int3(), !insn.addr !3418
  %73 = call i32 @__asm_int3(), !insn.addr !3419
  %74 = call i32 @__asm_int3(), !insn.addr !3420
  %75 = call i32 @__asm_int3(), !insn.addr !3421
  %76 = call i32 @__asm_int3(), !insn.addr !3422
  %77 = call i32 @__asm_int3(), !insn.addr !3423
  %78 = call i32 @__asm_int3(), !insn.addr !3424
  %79 = call i32 @__asm_int3(), !insn.addr !3425
  %80 = call i32 @__asm_int3(), !insn.addr !3426
  %81 = call i32 @__asm_int3(), !insn.addr !3427
  %82 = call i32 @__asm_int3(), !insn.addr !3428
  %83 = call i32 @__asm_int3(), !insn.addr !3429
  %84 = call i32 @__asm_int3(), !insn.addr !3430
  %85 = call i32 @__asm_int3(), !insn.addr !3431
  %86 = call i32 @__asm_int3(), !insn.addr !3432
  %87 = call i32 @__asm_int3(), !insn.addr !3433
  %88 = call i32 @__asm_int3(), !insn.addr !3434
  %89 = call i32 @__asm_int3(), !insn.addr !3435
  %90 = call i32 @__asm_int3(), !insn.addr !3436
  %91 = call i32 @__asm_int3(), !insn.addr !3437
  %92 = call i32 @__asm_int3(), !insn.addr !3438
  %93 = call i32 @__asm_int3(), !insn.addr !3439
  %94 = call i32 @__asm_int3(), !insn.addr !3440
  ret i32 %94, !insn.addr !3440
}

define i32 @__acrt_getptd_head() local_unnamed_addr {
dec_label_pc_44aa5d:
  %esi.01.reg2mem = alloca i32, !insn.addr !3441
  %esp.0.in.reg2mem = alloca i32*, !insn.addr !3441
  %eax.0.reg2mem = alloca i32, !insn.addr !3441
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %0 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3441
  %1 = icmp eq i32 %0, -1, !insn.addr !3442
  store i32 -1, i32* %eax.0.reg2mem, !insn.addr !3443
  store i32* %stack_var_-4, i32** %esp.0.in.reg2mem, !insn.addr !3443
  br i1 %1, label %dec_label_pc_44aa80, label %dec_label_pc_44aa68, !insn.addr !3443

dec_label_pc_44aa68:                              ; preds = %dec_label_pc_44aa5d
  store i32 %0, i32* %stack_var_-8, align 4, !insn.addr !3444
  %2 = call i32 @"___acrt_FlsGetValue@4"(i32 %0), !insn.addr !3445
  store i32 %2, i32* %esi.01.reg2mem
  switch i32 %2, label %dec_label_pc_44aaed [
    i32 0, label %dec_label_pc_44aa7b
    i32 -1, label %dec_label_pc_44aaf1
  ]

dec_label_pc_44aa7b:                              ; preds = %dec_label_pc_44aa68
  %3 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3446
  store i32 %3, i32* %eax.0.reg2mem, !insn.addr !3446
  store i32* %stack_var_-8, i32** %esp.0.in.reg2mem, !insn.addr !3446
  br label %dec_label_pc_44aa80, !insn.addr !3446

dec_label_pc_44aa80:                              ; preds = %dec_label_pc_44aa7b, %dec_label_pc_44aa5d
  %esp.0.in.reload = load i32*, i32** %esp.0.in.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %esp.0 = ptrtoint i32* %esp.0.in.reload to i32
  %4 = add i32 %esp.0, -4, !insn.addr !3447
  %5 = inttoptr i32 %4 to i32*, !insn.addr !3447
  store i32 -1, i32* %5, align 4, !insn.addr !3447
  %6 = add i32 %esp.0, -8, !insn.addr !3448
  %7 = inttoptr i32 %6 to i32*, !insn.addr !3448
  store i32 %eax.0.reload, i32* %7, align 4, !insn.addr !3448
  %8 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3449
  %9 = icmp eq i32 %8, 0, !insn.addr !3450
  br i1 %9, label %dec_label_pc_44aaf1, label %dec_label_pc_44aa8c, !insn.addr !3451

dec_label_pc_44aa8c:                              ; preds = %dec_label_pc_44aa80
  %10 = add i32 %esp.0, -12, !insn.addr !3452
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3452
  store i32 868, i32* %11, align 4, !insn.addr !3452
  %12 = add i32 %esp.0, -16, !insn.addr !3453
  %13 = inttoptr i32 %12 to i32*, !insn.addr !3453
  store i32 1, i32* %13, align 4, !insn.addr !3453
  %14 = call i32* @_calloc_base(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3454
  %15 = ptrtoint i32* %14 to i32, !insn.addr !3454
  %16 = icmp eq i32* %14, null, !insn.addr !3455
  %17 = icmp eq i1 %16, false, !insn.addr !3456
  store i32 %15, i32* %11, align 4
  %18 = load i32, i32* @__acrt_flsindex, align 4
  store i32 %18, i32* %13, align 4
  %19 = call i32 @"___acrt_FlsSetValue@8"()
  br i1 %17, label %dec_label_pc_44aab5, label %dec_label_pc_44aaa0, !insn.addr !3456

dec_label_pc_44aaa0:                              ; preds = %dec_label_pc_44aa8c
  %20 = add i32 %esp.0, -20, !insn.addr !3457
  %21 = inttoptr i32 %20 to i32*, !insn.addr !3457
  store i32 %15, i32* %21, align 4, !insn.addr !3457
  br label %dec_label_pc_44aaad, !insn.addr !3457

dec_label_pc_44aaad:                              ; preds = %dec_label_pc_44aac5, %dec_label_pc_44aaa0
  call void @_free_base(i32* nonnull @80), !insn.addr !3458
  br label %dec_label_pc_44aaf1, !insn.addr !3459

dec_label_pc_44aab5:                              ; preds = %dec_label_pc_44aa8c
  %22 = icmp eq i32 %19, 0, !insn.addr !3460
  %23 = icmp eq i1 %22, false, !insn.addr !3461
  %24 = add i32 %esp.0, -20
  %25 = inttoptr i32 %24 to i32*
  br i1 %23, label %dec_label_pc_44aae9, label %dec_label_pc_44aac5, !insn.addr !3461

dec_label_pc_44aac5:                              ; preds = %dec_label_pc_44aab5
  store i32 %19, i32* %25, align 4, !insn.addr !3462
  %26 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3463
  %27 = add i32 %esp.0, -24, !insn.addr !3463
  %28 = inttoptr i32 %27 to i32*, !insn.addr !3463
  store i32 %26, i32* %28, align 4, !insn.addr !3463
  %29 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3464
  %30 = add i32 %esp.0, -28, !insn.addr !3465
  %31 = inttoptr i32 %30 to i32*, !insn.addr !3465
  store i32 %15, i32* %31, align 4, !insn.addr !3465
  br label %dec_label_pc_44aaad, !insn.addr !3466

dec_label_pc_44aae9:                              ; preds = %dec_label_pc_44aab5
  store i32 ptrtoint (i32* @__acrt_current_locale_data to i32), i32* %25, align 4, !insn.addr !3467
  %32 = add i32 %esp.0, -24, !insn.addr !3468
  %33 = inttoptr i32 %32 to i32*, !insn.addr !3468
  store i32 %15, i32* %33, align 4, !insn.addr !3468
  call void @construct_ptd(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3469
  %34 = add i32 %esp.0, -28, !insn.addr !3470
  %35 = inttoptr i32 %34 to i32*, !insn.addr !3470
  store i32 0, i32* %35, align 4, !insn.addr !3470
  call void @_free_base(i32* nonnull @80), !insn.addr !3471
  store i32 %15, i32* %esi.01.reg2mem
  br label %dec_label_pc_44aaed

dec_label_pc_44aaed:                              ; preds = %dec_label_pc_44aae9, %dec_label_pc_44aa68
  %esi.01.reload = load i32, i32* %esi.01.reg2mem
  ret i32 %esi.01.reload, !insn.addr !3472

dec_label_pc_44aaf1:                              ; preds = %dec_label_pc_44aa68, %dec_label_pc_44aaad, %dec_label_pc_44aa80
  call void @abort(), !insn.addr !3473
  %36 = call i32 @__asm_int3(), !insn.addr !3474
  %37 = call i32 @__asm_int3(), !insn.addr !3475
  %38 = call i32 @__asm_int3(), !insn.addr !3476
  %39 = call i32 @__asm_int3(), !insn.addr !3477
  %40 = call i32 @__asm_int3(), !insn.addr !3478
  %41 = call i32 @__asm_int3(), !insn.addr !3479
  %42 = call i32 @__asm_int3(), !insn.addr !3480
  %43 = call i32 @__asm_int3(), !insn.addr !3481
  %44 = call i32 @__asm_int3(), !insn.addr !3482
  %45 = call i32 @__asm_int3(), !insn.addr !3483
  %46 = call i32 @__asm_int3(), !insn.addr !3484
  %47 = call i32 @__asm_int3(), !insn.addr !3485
  %48 = call i32 @__asm_int3(), !insn.addr !3486
  %49 = call i32 @__asm_int3(), !insn.addr !3487
  %50 = call i32 @__asm_int3(), !insn.addr !3488
  %51 = call i32 @__asm_int3(), !insn.addr !3489
  %52 = call i32 @__asm_int3(), !insn.addr !3490
  %53 = call i32 @__asm_int3(), !insn.addr !3491
  %54 = call i32 @__asm_int3(), !insn.addr !3492
  %55 = call i32 @__asm_int3(), !insn.addr !3493
  %56 = call i32 @__asm_int3(), !insn.addr !3494
  %57 = call i32 @__asm_int3(), !insn.addr !3495
  %58 = call i32 @__asm_int3(), !insn.addr !3496
  %59 = call i32 @__asm_int3(), !insn.addr !3497
  %60 = call i32 @__asm_int3(), !insn.addr !3498
  %61 = call i32 @__asm_int3(), !insn.addr !3499
  %62 = call i32 @__asm_int3(), !insn.addr !3500
  %63 = call i32 @__asm_int3(), !insn.addr !3501
  %64 = call i32 @__asm_int3(), !insn.addr !3502
  %65 = call i32 @__asm_int3(), !insn.addr !3503
  %66 = call i32 @__asm_int3(), !insn.addr !3504
  %67 = call i32 @__asm_int3(), !insn.addr !3505
  %68 = call i32 @__asm_int3(), !insn.addr !3506
  %69 = call i32 @__asm_int3(), !insn.addr !3507
  %70 = call i32 @__asm_int3(), !insn.addr !3508
  %71 = call i32 @__asm_int3(), !insn.addr !3509
  %72 = call i32 @__asm_int3(), !insn.addr !3510
  %73 = call i32 @__asm_int3(), !insn.addr !3511
  %74 = call i32 @__asm_int3(), !insn.addr !3512
  ret i32 %74, !insn.addr !3512
}

define i32 @__acrt_getptd_noexit() local_unnamed_addr {
dec_label_pc_44ab1d:
  %esp.4.reg2mem = alloca i32, !insn.addr !3513
  %ebx.2.reg2mem = alloca i32, !insn.addr !3513
  %edi.0.reg2mem = alloca i32, !insn.addr !3513
  %esp.3.reg2mem = alloca i32, !insn.addr !3513
  %storemerge.reg2mem = alloca i32, !insn.addr !3513
  %esp.2.reg2mem = alloca i32, !insn.addr !3513
  %eax.0.reg2mem = alloca i32, !insn.addr !3513
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %0 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !3514
  %1 = call i32 @GetLastError(), !insn.addr !3515
  %2 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3516
  %3 = icmp eq i32 %2, -1, !insn.addr !3517
  store i32 -1, i32* %eax.0.reg2mem, !insn.addr !3518
  store i32 %0, i32* %esp.2.reg2mem, !insn.addr !3518
  br i1 %3, label %dec_label_pc_44ab50, label %dec_label_pc_44ab34, !insn.addr !3518

dec_label_pc_44ab34:                              ; preds = %dec_label_pc_44ab1d
  store i32 %2, i32* %stack_var_-16, align 4, !insn.addr !3519
  %4 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !3519
  %5 = call i32 @"___acrt_FlsGetValue@4"(i32 %2), !insn.addr !3520
  %6 = icmp eq i32 %5, 0, !insn.addr !3521
  br i1 %6, label %dec_label_pc_44ab4b, label %dec_label_pc_44ab40, !insn.addr !3522

dec_label_pc_44ab40:                              ; preds = %dec_label_pc_44ab34
  %7 = icmp eq i32 %5, -1, !insn.addr !3523
  %8 = icmp eq i1 %7, false, !insn.addr !3524
  store i32 %4, i32* %esp.3.reg2mem, !insn.addr !3524
  store i32 %5, i32* %edi.0.reg2mem, !insn.addr !3524
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !3524
  store i32 %4, i32* %esp.4.reg2mem, !insn.addr !3524
  br i1 %8, label %dec_label_pc_44abbd, label %dec_label_pc_44abbf, !insn.addr !3524

dec_label_pc_44ab4b:                              ; preds = %dec_label_pc_44ab34
  %9 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3525
  store i32 %9, i32* %eax.0.reg2mem, !insn.addr !3525
  store i32 %4, i32* %esp.2.reg2mem, !insn.addr !3525
  br label %dec_label_pc_44ab50, !insn.addr !3525

dec_label_pc_44ab50:                              ; preds = %dec_label_pc_44ab4b, %dec_label_pc_44ab1d
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %10 = add i32 %esp.2.reload, -4, !insn.addr !3526
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3526
  store i32 -1, i32* %11, align 4, !insn.addr !3526
  %12 = add i32 %esp.2.reload, -8, !insn.addr !3527
  %13 = inttoptr i32 %12 to i32*, !insn.addr !3527
  store i32 %eax.0.reload, i32* %13, align 4, !insn.addr !3527
  %14 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3528
  %15 = icmp eq i32 %14, 0, !insn.addr !3529
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !3530
  store i32 %12, i32* %esp.4.reg2mem, !insn.addr !3530
  br i1 %15, label %dec_label_pc_44abbf, label %dec_label_pc_44ab5c, !insn.addr !3530

dec_label_pc_44ab5c:                              ; preds = %dec_label_pc_44ab50
  %16 = add i32 %esp.2.reload, -12, !insn.addr !3531
  %17 = inttoptr i32 %16 to i32*, !insn.addr !3531
  store i32 868, i32* %17, align 4, !insn.addr !3531
  %18 = add i32 %esp.2.reload, -16, !insn.addr !3532
  %19 = inttoptr i32 %18 to i32*, !insn.addr !3532
  store i32 1, i32* %19, align 4, !insn.addr !3532
  %20 = call i32* @_calloc_base(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3533
  %21 = icmp eq i32* %20, null, !insn.addr !3534
  %22 = icmp eq i1 %21, false, !insn.addr !3535
  br i1 %22, label %dec_label_pc_44ab87, label %dec_label_pc_44ab70, !insn.addr !3535

dec_label_pc_44ab70:                              ; preds = %dec_label_pc_44ab5c
  store i32 0, i32* %17, align 4, !insn.addr !3536
  %23 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3537
  store i32 %23, i32* %19, align 4, !insn.addr !3537
  %24 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3538
  %25 = add i32 %esp.2.reload, -20, !insn.addr !3539
  %26 = inttoptr i32 %25 to i32*, !insn.addr !3539
  store i32 0, i32* %26, align 4, !insn.addr !3539
  store i32 %25, i32* %storemerge.reg2mem, !insn.addr !3539
  br label %dec_label_pc_44ab7f, !insn.addr !3539

dec_label_pc_44ab7f:                              ; preds = %dec_label_pc_44ab97, %dec_label_pc_44ab70
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  call void @_free_base(i32* nonnull @80), !insn.addr !3540
  %27 = add i32 %storemerge.reload, 4, !insn.addr !3541
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !3542
  store i32 %27, i32* %esp.4.reg2mem, !insn.addr !3542
  br label %dec_label_pc_44abbf, !insn.addr !3542

dec_label_pc_44ab87:                              ; preds = %dec_label_pc_44ab5c
  %28 = ptrtoint i32* %20 to i32, !insn.addr !3533
  store i32 %28, i32* %17, align 4, !insn.addr !3543
  %29 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3544
  store i32 %29, i32* %19, align 4, !insn.addr !3544
  %30 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3545
  %31 = icmp eq i32 %30, 0, !insn.addr !3546
  %32 = icmp eq i1 %31, false, !insn.addr !3547
  %33 = add i32 %esp.2.reload, -20
  %34 = inttoptr i32 %33 to i32*
  br i1 %32, label %dec_label_pc_44aba8, label %dec_label_pc_44ab97, !insn.addr !3547

dec_label_pc_44ab97:                              ; preds = %dec_label_pc_44ab87
  store i32 0, i32* %34, align 4, !insn.addr !3548
  %35 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3549
  %36 = add i32 %esp.2.reload, -24, !insn.addr !3549
  %37 = inttoptr i32 %36 to i32*, !insn.addr !3549
  store i32 %35, i32* %37, align 4, !insn.addr !3549
  %38 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3550
  %39 = add i32 %esp.2.reload, -28, !insn.addr !3551
  %40 = inttoptr i32 %39 to i32*, !insn.addr !3551
  store i32 %28, i32* %40, align 4, !insn.addr !3551
  store i32 %39, i32* %storemerge.reg2mem, !insn.addr !3552
  br label %dec_label_pc_44ab7f, !insn.addr !3552

dec_label_pc_44aba8:                              ; preds = %dec_label_pc_44ab87
  store i32 ptrtoint (i32* @__acrt_current_locale_data to i32), i32* %34, align 4, !insn.addr !3553
  %41 = add i32 %esp.2.reload, -24, !insn.addr !3554
  %42 = inttoptr i32 %41 to i32*, !insn.addr !3554
  store i32 %28, i32* %42, align 4, !insn.addr !3554
  call void @construct_ptd(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3555
  %43 = add i32 %esp.2.reload, -28, !insn.addr !3556
  %44 = inttoptr i32 %43 to i32*, !insn.addr !3556
  store i32 0, i32* %44, align 4, !insn.addr !3556
  call void @_free_base(i32* nonnull @80), !insn.addr !3557
  store i32 %18, i32* %esp.3.reg2mem, !insn.addr !3558
  store i32 %28, i32* %edi.0.reg2mem, !insn.addr !3558
  br label %dec_label_pc_44abbd, !insn.addr !3558

dec_label_pc_44abbd:                              ; preds = %dec_label_pc_44aba8, %dec_label_pc_44ab40
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  store i32 %edi.0.reload, i32* %ebx.2.reg2mem, !insn.addr !3559
  store i32 %esp.3.reload, i32* %esp.4.reg2mem, !insn.addr !3559
  br label %dec_label_pc_44abbf, !insn.addr !3559

dec_label_pc_44abbf:                              ; preds = %dec_label_pc_44ab7f, %dec_label_pc_44ab50, %dec_label_pc_44ab40, %dec_label_pc_44abbd
  %esp.4.reload = load i32, i32* %esp.4.reg2mem
  %ebx.2.reload = load i32, i32* %ebx.2.reg2mem
  %45 = add i32 %esp.4.reload, -4, !insn.addr !3560
  %46 = inttoptr i32 %45 to i32*, !insn.addr !3560
  store i32 %1, i32* %46, align 4, !insn.addr !3560
  call void @SetLastError(i32 ptrtoint (i32* @80 to i32)), !insn.addr !3561
  ret i32 %ebx.2.reload, !insn.addr !3562
}

declare void @__acrt_update_locale_info(i32, i32) local_unnamed_addr

declare void @__acrt_update_multibyte_info(i32, %__crt_multibyte_data**) local_unnamed_addr

define i32 @__acrt_fp_classify(double* %value) local_unnamed_addr {
dec_label_pc_44acd5:
  %eax.0.reg2mem = alloca i32, !insn.addr !3563
  %0 = ptrtoint double* %value to i32
  %1 = add i32 %0, 4, !insn.addr !3564
  %2 = inttoptr i32 %1 to i32*, !insn.addr !3564
  %3 = load i32, i32* %2, align 4, !insn.addr !3564
  %4 = and i32 %3, 2146435072, !insn.addr !3565
  %5 = icmp eq i32 %4, 2146435072, !insn.addr !3566
  %6 = icmp eq i1 %5, false, !insn.addr !3567
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !3567
  br i1 %6, label %dec_label_pc_44ad33, label %dec_label_pc_44acf6, !insn.addr !3567

dec_label_pc_44acf6:                              ; preds = %dec_label_pc_44acd5
  %7 = bitcast double* %value to i32*, !insn.addr !3568
  %8 = load i32, i32* %7, align 4, !insn.addr !3568
  %9 = and i32 %3, 1048575, !insn.addr !3569
  %10 = or i32 %9, %8, !insn.addr !3570
  %11 = icmp eq i32 %10, 0, !insn.addr !3570
  %12 = icmp eq i1 %11, false, !insn.addr !3571
  br i1 %12, label %dec_label_pc_44ad07, label %dec_label_pc_44ad04, !insn.addr !3571

dec_label_pc_44ad04:                              ; preds = %dec_label_pc_44acf6
  %13 = add i32 %10, 1, !insn.addr !3572
  store i32 %13, i32* %eax.0.reg2mem, !insn.addr !3573
  br label %dec_label_pc_44ad33, !insn.addr !3573

dec_label_pc_44ad07:                              ; preds = %dec_label_pc_44acf6
  %14 = icmp sgt i32 %3, 0, !insn.addr !3574
  br i1 %14, label %dec_label_pc_44ad23, label %dec_label_pc_44ad10, !insn.addr !3574

dec_label_pc_44ad10:                              ; preds = %dec_label_pc_44ad07
  %15 = icmp eq i32 %3, 0, !insn.addr !3575
  %16 = icmp eq i32 %8, 0, !insn.addr !3576
  %17 = icmp eq i32 %9, 524288, !insn.addr !3577
  %18 = icmp eq i1 %16, %17
  %19 = icmp ne i1 %18, true
  %20 = or i1 %15, %19
  store i32 4, i32* %eax.0.reg2mem, !insn.addr !3575
  br i1 %20, label %dec_label_pc_44ad23, label %dec_label_pc_44ad33, !insn.addr !3575

dec_label_pc_44ad23:                              ; preds = %dec_label_pc_44ad10, %dec_label_pc_44ad07
  %21 = and i32 %3, 524288, !insn.addr !3578
  %22 = icmp eq i32 %21, 0, !insn.addr !3579
  %. = select i1 %22, i32 3, i32 2
  store i32 %., i32* %eax.0.reg2mem, !insn.addr !3580
  br label %dec_label_pc_44ad33, !insn.addr !3580

dec_label_pc_44ad33:                              ; preds = %dec_label_pc_44acd5, %dec_label_pc_44ad23, %dec_label_pc_44ad10, %dec_label_pc_44ad04
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !3581
}

define i32 @fp_format_a(double* %argument, i8* %result_buffer, i32 %result_buffer_count, i8* %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i1 %capitals, i32 %min_exponent_digits, i32 %locale) local_unnamed_addr {
dec_label_pc_44ad6e:
  %edi.7.reg2mem = alloca i32, !insn.addr !3582
  %edi.6.reg2mem = alloca i32, !insn.addr !3582
  %ebx.370.reg2mem = alloca i32, !insn.addr !3582
  %esp.672.reg2mem = alloca i32, !insn.addr !3582
  %esi.874.reg2mem = alloca i32, !insn.addr !3582
  %edi.576.reg2mem = alloca i32, !insn.addr !3582
  %edi.57577.reg2mem = alloca i32, !insn.addr !3582
  %esi.87378.reg2mem = alloca i32, !insn.addr !3582
  %esp.67179.reg2mem = alloca i32, !insn.addr !3582
  %ebx.36980.reg2mem = alloca i32, !insn.addr !3582
  %ebx.222.reg2mem = alloca i32, !insn.addr !3582
  %esp.523.reg2mem = alloca i32, !insn.addr !3582
  %esi.724.reg2mem = alloca i32, !insn.addr !3582
  %edi.425.reg2mem = alloca i32, !insn.addr !3582
  %.pre-phi60.reg2mem = alloca i32*, !insn.addr !3582
  %.pre-phi62.reg2mem = alloca i8*, !insn.addr !3582
  %esi.6.reg2mem = alloca i32, !insn.addr !3582
  %ebx.1.reg2mem = alloca i8, !insn.addr !3582
  %ecx.3.reg2mem = alloca i32, !insn.addr !3582
  %.pre-phi66.reg2mem = alloca i32*, !insn.addr !3582
  %stack_var_-16.2.reg2mem = alloca i32, !insn.addr !3582
  %edi.3.reg2mem = alloca i32, !insn.addr !3582
  %stack_var_-16.1.reg2mem = alloca i32, !insn.addr !3582
  %.lcssa26.reg2mem = alloca i8, !insn.addr !3582
  %.lcssa27.reg2mem = alloca i8*, !insn.addr !3582
  %eax.5.lcssa.reg2mem = alloca i32, !insn.addr !3582
  %eax.5.in.lcssa.reg2mem = alloca i32, !insn.addr !3582
  %eax.530.reg2mem = alloca i32, !insn.addr !3582
  %.reg2mem = alloca i8*, !insn.addr !3582
  %esi.267.reg2mem = alloca i32, !insn.addr !3582
  %edi.268.reg2mem = alloca i32, !insn.addr !3582
  %stack_var_-12.037.reg2mem = alloca i32, !insn.addr !3582
  %esi.138.reg2mem = alloca i32, !insn.addr !3582
  %edi.139.reg2mem = alloca i32, !insn.addr !3582
  %storemerge12.reg2mem = alloca i32, !insn.addr !3582
  %ecx.1.reg2mem = alloca i32, !insn.addr !3582
  %stack_var_-20.1.reg2mem = alloca i32, !insn.addr !3582
  %stack_var_-20.0.reg2mem = alloca i32, !insn.addr !3582
  %esi.0.reg2mem = alloca i32, !insn.addr !3582
  %.pre-phi.reg2mem = alloca i32, !insn.addr !3582
  %0 = call i8 @__decompiler_undefined_function_8()
  %1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-76 = alloca i32, align 4
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = icmp slt i32 %precision, 0, !insn.addr !3583
  %4 = icmp eq i1 %3, false, !insn.addr !3584
  %spec.select = select i1 %4, i32 %precision, i32 0
  store i32 %locale, i32* %stack_var_-76, align 4, !insn.addr !3585
  store i8 0, i8* %result_buffer, align 1, !insn.addr !3586
  %5 = call i32 @function_403d91(i32 %locale), !insn.addr !3587
  %6 = add i32 %spec.select, 11, !insn.addr !3588
  %7 = icmp ult i32 %6, %result_buffer_count
  br i1 %7, label %dec_label_pc_44adb0, label %dec_label_pc_44ad9c, !insn.addr !3589

dec_label_pc_44ad9c:                              ; preds = %dec_label_pc_44ad6e
  %8 = call i32* @_errno(), !insn.addr !3590
  store i32 34, i32* %8, align 4, !insn.addr !3591
  call void @_invalid_parameter_noinfo(), !insn.addr !3592
  store i32 34, i32* %edi.7.reg2mem, !insn.addr !3593
  br label %dec_label_pc_44b070, !insn.addr !3593

dec_label_pc_44adb0:                              ; preds = %dec_label_pc_44ad6e
  %9 = ptrtoint double* %argument to i32, !insn.addr !3594
  %10 = add i32 %9, 4, !insn.addr !3595
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3595
  %12 = load i32, i32* %11, align 4, !insn.addr !3595
  %13 = and i32 %12, 2146435072
  %14 = icmp eq i32 %13, 2146435072, !insn.addr !3596
  %15 = icmp eq i1 %14, false, !insn.addr !3597
  br i1 %15, label %dec_label_pc_44ae19, label %dec_label_pc_44adc9, !insn.addr !3597

dec_label_pc_44adc9:                              ; preds = %dec_label_pc_44adb0
  %16 = call i32 @fp_format_e(double* %argument, i8* nonnull %result_buffer, i32 %result_buffer_count, i8* %scratch_buffer, i32 %scratch_buffer_count, i32 %spec.select, i1 false, i32 %min_exponent_digits, i32 0), !insn.addr !3598
  %17 = icmp eq i32 %16, 0, !insn.addr !3599
  br i1 %17, label %dec_label_pc_44adf2, label %dec_label_pc_44adea, !insn.addr !3600

dec_label_pc_44adea:                              ; preds = %dec_label_pc_44adc9
  store i8 0, i8* %result_buffer, align 1, !insn.addr !3601
  store i32 %16, i32* %edi.7.reg2mem, !insn.addr !3602
  br label %dec_label_pc_44b070, !insn.addr !3602

dec_label_pc_44adf2:                              ; preds = %dec_label_pc_44adc9
  %18 = call i32 @function_40174e(), !insn.addr !3603
  %19 = icmp eq i32 %18, 0, !insn.addr !3604
  store i32 0, i32* %edi.7.reg2mem, !insn.addr !3605
  br i1 %19, label %dec_label_pc_44b070, label %dec_label_pc_44ae00, !insn.addr !3605

dec_label_pc_44ae00:                              ; preds = %dec_label_pc_44adf2
  %20 = select i1 %capitals, i8 16, i8 112, !insn.addr !3606
  %21 = inttoptr i32 %18 to i8*, !insn.addr !3606
  store i8 %20, i8* %21, align 1, !insn.addr !3606
  %22 = add i32 %18, 3, !insn.addr !3607
  %23 = inttoptr i32 %22 to i8*, !insn.addr !3607
  store i8 0, i8* %23, align 1, !insn.addr !3607
  store i32 0, i32* %edi.7.reg2mem, !insn.addr !3607
  br label %dec_label_pc_44b070, !insn.addr !3607

dec_label_pc_44ae19:                              ; preds = %dec_label_pc_44adb0
  %24 = ptrtoint i8* %result_buffer to i32, !insn.addr !3608
  %25 = icmp slt i32 %12, 0, !insn.addr !3609
  store i32 %13, i32* %.pre-phi.reg2mem, !insn.addr !3610
  store i32 %24, i32* %esi.0.reg2mem, !insn.addr !3610
  br i1 %25, label %dec_label_pc_44ae25, label %dec_label_pc_44ae2c, !insn.addr !3610

dec_label_pc_44ae25:                              ; preds = %dec_label_pc_44ae19
  store i8 45, i8* %result_buffer, align 1, !insn.addr !3611
  %26 = add i32 %24, 1, !insn.addr !3612
  %27 = load i32, i32* %11, align 4, !insn.addr !3613
  %.pre = and i32 %27, 2146435072, !insn.addr !3614
  store i32 %.pre, i32* %.pre-phi.reg2mem, !insn.addr !3613
  store i32 %26, i32* %esi.0.reg2mem, !insn.addr !3613
  br label %dec_label_pc_44ae2c, !insn.addr !3613

dec_label_pc_44ae2c:                              ; preds = %dec_label_pc_44ae19, %dec_label_pc_44ae25
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %.pre-phi.reload = load i32, i32* %.pre-phi.reg2mem
  %28 = icmp eq i32 %.pre-phi.reload, 0, !insn.addr !3615
  %29 = icmp eq i1 %28, false, !insn.addr !3616
  %30 = inttoptr i32 %esi.0.reload to i8*
  br i1 %29, label %dec_label_pc_44ae7a, label %dec_label_pc_44ae5c, !insn.addr !3616

dec_label_pc_44ae5c:                              ; preds = %dec_label_pc_44ae2c
  store i8 48, i8* %30, align 1, !insn.addr !3617
  %31 = load i32, i32* %11, align 4, !insn.addr !3618
  %32 = bitcast double* %argument to i32*, !insn.addr !3619
  %33 = load i32, i32* %32, align 4, !insn.addr !3619
  %34 = and i32 %31, 1048575, !insn.addr !3620
  %35 = or i32 %33, %34, !insn.addr !3621
  %36 = icmp eq i32 %35, 0, !insn.addr !3621
  %37 = icmp eq i1 %36, false, !insn.addr !3622
  store i32 1022, i32* %stack_var_-20.0.reg2mem, !insn.addr !3622
  store i32 %35, i32* %stack_var_-20.1.reg2mem, !insn.addr !3622
  store i32 %35, i32* %ecx.1.reg2mem, !insn.addr !3622
  br i1 %37, label %dec_label_pc_44ae7d, label %dec_label_pc_44ae7f, !insn.addr !3622

dec_label_pc_44ae7a:                              ; preds = %dec_label_pc_44ae2c
  store i8 49, i8* %30, align 1, !insn.addr !3623
  store i32 1023, i32* %stack_var_-20.0.reg2mem, !insn.addr !3623
  br label %dec_label_pc_44ae7d, !insn.addr !3623

dec_label_pc_44ae7d:                              ; preds = %dec_label_pc_44ae5c, %dec_label_pc_44ae7a
  %stack_var_-20.0.reload = load i32, i32* %stack_var_-20.0.reg2mem
  store i32 %stack_var_-20.0.reload, i32* %stack_var_-20.1.reg2mem, !insn.addr !3624
  store i32 0, i32* %ecx.1.reg2mem, !insn.addr !3624
  br label %dec_label_pc_44ae7f, !insn.addr !3624

dec_label_pc_44ae7f:                              ; preds = %dec_label_pc_44ae5c, %dec_label_pc_44ae7d
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %stack_var_-20.1.reload = load i32, i32* %stack_var_-20.1.reg2mem
  %38 = icmp eq i32 %spec.select, 0, !insn.addr !3625
  %39 = icmp eq i1 %38, false, !insn.addr !3626
  br i1 %39, label %dec_label_pc_44ae8d, label %dec_label_pc_44ae89, !insn.addr !3626

dec_label_pc_44ae89:                              ; preds = %dec_label_pc_44ae7f
  %40 = and i32 %ecx.1.reload, 255, !insn.addr !3627
  store i32 %40, i32* %storemerge12.reg2mem, !insn.addr !3628
  br label %dec_label_pc_44ae9a, !insn.addr !3628

dec_label_pc_44ae8d:                              ; preds = %dec_label_pc_44ae7f
  %41 = add i32 %1, 136, !insn.addr !3629
  %42 = inttoptr i32 %41 to i32*, !insn.addr !3629
  %43 = load i32, i32* %42, align 4, !insn.addr !3629
  %44 = inttoptr i32 %43 to i32*, !insn.addr !3630
  %45 = load i32, i32* %44, align 4, !insn.addr !3630
  %46 = inttoptr i32 %45 to i8*, !insn.addr !3631
  %47 = load i8, i8* %46, align 1, !insn.addr !3631
  %48 = zext i8 %47 to i32, !insn.addr !3631
  store i32 %48, i32* %storemerge12.reg2mem, !insn.addr !3631
  br label %dec_label_pc_44ae9a, !insn.addr !3631

dec_label_pc_44ae9a:                              ; preds = %dec_label_pc_44ae8d, %dec_label_pc_44ae89
  %49 = add i32 %esi.0.reload, 1, !insn.addr !3632
  %50 = sext i1 %capitals to i8, !insn.addr !3633
  %51 = mul i8 %50, 32
  %52 = ptrtoint i32* %stack_var_-76 to i32, !insn.addr !3634
  %53 = add i32 %esi.0.reload, 2, !insn.addr !3635
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %54 = trunc i32 %storemerge12.reload to i8, !insn.addr !3636
  %55 = inttoptr i32 %49 to i8*, !insn.addr !3636
  store i8 %54, i8* %55, align 1, !insn.addr !3636
  %56 = load i32, i32* %11, align 4, !insn.addr !3637
  %57 = and i32 %56, 1048575, !insn.addr !3638
  %58 = icmp eq i32 %57, 0, !insn.addr !3638
  br i1 %58, label %dec_label_pc_44aea9, label %dec_label_pc_44aeb1, !insn.addr !3639

dec_label_pc_44aea9:                              ; preds = %dec_label_pc_44ae9a
  %59 = bitcast double* %argument to i32*, !insn.addr !3640
  %60 = load i32, i32* %59, align 4, !insn.addr !3640
  %61 = icmp ugt i32 %60, %ecx.1.reload
  store i32 %53, i32* %stack_var_-16.1.reg2mem, !insn.addr !3641
  store i32 %spec.select, i32* %edi.3.reg2mem, !insn.addr !3641
  br i1 %61, label %dec_label_pc_44aeb1, label %dec_label_pc_44af75, !insn.addr !3641

dec_label_pc_44aeb1:                              ; preds = %dec_label_pc_44aea9, %dec_label_pc_44ae9a
  %62 = xor i8 %51, 39, !insn.addr !3642
  %63 = icmp slt i32 %spec.select, 1
  store i32 %spec.select, i32* %edi.268.reg2mem, !insn.addr !3643
  store i32 %53, i32* %esi.267.reg2mem, !insn.addr !3643
  br i1 %63, label %dec_label_pc_44af20, label %dec_label_pc_44aec8.lr.ph, !insn.addr !3643

dec_label_pc_44aec8.lr.ph:                        ; preds = %dec_label_pc_44aeb1
  %64 = add i32 %52, -4
  %65 = inttoptr i32 %64 to i32*
  %66 = zext i8 %62 to i32
  store i32 %precision, i32* %edi.139.reg2mem
  store i32 %53, i32* %esi.138.reg2mem
  store i32 48, i32* %stack_var_-12.037.reg2mem
  br label %dec_label_pc_44aec8

dec_label_pc_44aec8:                              ; preds = %dec_label_pc_44aec8, %dec_label_pc_44aec8.lr.ph
  %stack_var_-12.037.reload = load i32, i32* %stack_var_-12.037.reg2mem
  %esi.138.reload = load i32, i32* %esi.138.reg2mem
  %edi.139.reload = load i32, i32* %edi.139.reg2mem
  %67 = call i32 @function_401730(), !insn.addr !3644
  store i32 48, i32* %65, align 4, !insn.addr !3645
  %68 = add i32 %67, 48, !insn.addr !3646
  %69 = and i32 %68, 65534, !insn.addr !3646
  %70 = icmp ult i32 %69, 58
  %71 = select i1 %70, i32 0, i32 %66
  %eax.3 = add i32 %71, %68
  %72 = trunc i32 %eax.3 to i8, !insn.addr !3647
  %73 = inttoptr i32 %esi.138.reload to i8*, !insn.addr !3647
  store i8 %72, i8* %73, align 1, !insn.addr !3647
  %74 = add i32 %esi.138.reload, 1, !insn.addr !3648
  %sext = mul i32 %stack_var_-12.037.reload, 65536
  %75 = sdiv i32 %sext, 65536, !insn.addr !3649
  %76 = add nsw i32 %75, -4, !insn.addr !3650
  %77 = add nsw i32 %edi.139.reload, -1, !insn.addr !3651
  %78 = trunc i32 %76 to i16, !insn.addr !3652
  %79 = icmp slt i16 %78, 0, !insn.addr !3653
  %80 = icmp slt i32 %edi.139.reload, 2
  %or.cond = or i1 %80, %79
  store i32 %77, i32* %edi.139.reg2mem, !insn.addr !3654
  store i32 %74, i32* %esi.138.reg2mem, !insn.addr !3654
  store i32 %76, i32* %stack_var_-12.037.reg2mem, !insn.addr !3654
  br i1 %or.cond, label %dec_label_pc_44af18, label %dec_label_pc_44aec8, !insn.addr !3654

dec_label_pc_44af18:                              ; preds = %dec_label_pc_44aec8
  store i32 %77, i32* %edi.268.reg2mem, !insn.addr !3655
  store i32 %74, i32* %esi.267.reg2mem, !insn.addr !3655
  store i32 %74, i32* %stack_var_-16.1.reg2mem, !insn.addr !3655
  store i32 %77, i32* %edi.3.reg2mem, !insn.addr !3655
  br i1 %79, label %dec_label_pc_44af75, label %dec_label_pc_44af20, !insn.addr !3655

dec_label_pc_44af20:                              ; preds = %dec_label_pc_44aeb1, %dec_label_pc_44af18
  %esi.267.reload = load i32, i32* %esi.267.reg2mem
  %edi.268.reload = load i32, i32* %edi.268.reg2mem
  %81 = call i32 @function_401730(), !insn.addr !3656
  %82 = trunc i32 %81 to i16, !insn.addr !3657
  %83 = icmp ult i16 %82, 9
  store i32 %esi.267.reload, i32* %stack_var_-16.1.reg2mem, !insn.addr !3658
  store i32 %edi.268.reload, i32* %edi.3.reg2mem, !insn.addr !3658
  br i1 %83, label %dec_label_pc_44af75, label %dec_label_pc_44af40, !insn.addr !3658

dec_label_pc_44af40:                              ; preds = %dec_label_pc_44af20
  %84 = add i32 %52, -4, !insn.addr !3659
  %85 = inttoptr i32 %84 to i32*, !insn.addr !3659
  store i32 48, i32* %85, align 4, !insn.addr !3659
  %eax.528 = add i32 %esi.267.reload, -1
  %86 = inttoptr i32 %eax.528 to i8*, !insn.addr !3660
  %87 = load i8, i8* %86, align 1, !insn.addr !3660
  %88 = icmp ne i8 %87, 102, !insn.addr !3661
  %89 = icmp eq i8 %87, 70, !insn.addr !3662
  %90 = icmp eq i1 %89, false, !insn.addr !3663
  %or.cond1729 = icmp eq i1 %88, %90
  store i8* %86, i8** %.reg2mem, !insn.addr !3664
  store i32 %eax.528, i32* %eax.530.reg2mem, !insn.addr !3664
  store i32 %esi.267.reload, i32* %eax.5.in.lcssa.reg2mem, !insn.addr !3664
  store i32 %eax.528, i32* %eax.5.lcssa.reg2mem, !insn.addr !3664
  store i8* %86, i8** %.lcssa27.reg2mem, !insn.addr !3664
  store i8 %87, i8* %.lcssa26.reg2mem, !insn.addr !3664
  br i1 %or.cond1729, label %dec_label_pc_44af57, label %dec_label_pc_44af52, !insn.addr !3664

dec_label_pc_44af52:                              ; preds = %dec_label_pc_44af40, %dec_label_pc_44af52
  %eax.530.reload = load i32, i32* %eax.530.reg2mem
  %.reload = load i8*, i8** %.reg2mem
  store i8 48, i8* %.reload, align 1, !insn.addr !3665
  %eax.5 = add i32 %eax.530.reload, -1
  %91 = inttoptr i32 %eax.5 to i8*
  %92 = load i8, i8* %91, align 1, !insn.addr !3660
  %93 = icmp ne i8 %92, 102, !insn.addr !3661
  %94 = icmp eq i8 %92, 70, !insn.addr !3662
  %95 = icmp eq i1 %94, false, !insn.addr !3663
  %or.cond17 = icmp eq i1 %93, %95
  store i8* %91, i8** %.reg2mem, !insn.addr !3664
  store i32 %eax.5, i32* %eax.530.reg2mem, !insn.addr !3664
  store i32 %eax.530.reload, i32* %eax.5.in.lcssa.reg2mem, !insn.addr !3664
  store i32 %eax.5, i32* %eax.5.lcssa.reg2mem, !insn.addr !3664
  store i8* %91, i8** %.lcssa27.reg2mem, !insn.addr !3664
  store i8 %92, i8* %.lcssa26.reg2mem, !insn.addr !3664
  br i1 %or.cond17, label %dec_label_pc_44af57, label %dec_label_pc_44af52, !insn.addr !3664

dec_label_pc_44af57:                              ; preds = %dec_label_pc_44af52, %dec_label_pc_44af40
  %eax.5.lcssa.reload = load i32, i32* %eax.5.lcssa.reg2mem
  %96 = icmp eq i32 %eax.5.lcssa.reload, %49, !insn.addr !3666
  br i1 %96, label %dec_label_pc_44af72, label %dec_label_pc_44af5f, !insn.addr !3667

dec_label_pc_44af5f:                              ; preds = %dec_label_pc_44af57
  %.lcssa26.reload = load i8, i8* %.lcssa26.reg2mem
  %.lcssa27.reload = load i8*, i8** %.lcssa27.reg2mem
  %97 = icmp eq i8 %.lcssa26.reload, 57, !insn.addr !3668
  %98 = icmp eq i1 %97, false, !insn.addr !3669
  %99 = add i8 %.lcssa26.reload, 1
  %100 = add nsw i8 %62, 58
  %storemerge = select i1 %98, i8 %99, i8 %100
  store i8 %storemerge, i8* %.lcssa27.reload, align 1, !insn.addr !3670
  store i32 %esi.267.reload, i32* %stack_var_-16.1.reg2mem, !insn.addr !3671
  store i32 %edi.268.reload, i32* %edi.3.reg2mem, !insn.addr !3671
  br label %dec_label_pc_44af75, !insn.addr !3671

dec_label_pc_44af72:                              ; preds = %dec_label_pc_44af57
  %eax.5.in.lcssa.reload = load i32, i32* %eax.5.in.lcssa.reg2mem
  %101 = add i32 %eax.5.in.lcssa.reload, -2, !insn.addr !3672
  %102 = inttoptr i32 %101 to i8*, !insn.addr !3672
  %103 = load i8, i8* %102, align 1, !insn.addr !3672
  %104 = add i8 %103, 1, !insn.addr !3672
  store i8 %104, i8* %102, align 1, !insn.addr !3672
  store i32 %esi.267.reload, i32* %stack_var_-16.1.reg2mem, !insn.addr !3672
  store i32 %edi.268.reload, i32* %edi.3.reg2mem, !insn.addr !3672
  br label %dec_label_pc_44af75, !insn.addr !3672

dec_label_pc_44af75:                              ; preds = %dec_label_pc_44aea9, %dec_label_pc_44af72, %dec_label_pc_44af5f, %dec_label_pc_44af20, %dec_label_pc_44af18
  %edi.3.reload = load i32, i32* %edi.3.reg2mem
  %stack_var_-16.1.reload = load i32, i32* %stack_var_-16.1.reg2mem
  %105 = icmp slt i32 %edi.3.reload, 1
  store i32 %stack_var_-16.1.reload, i32* %stack_var_-16.2.reg2mem, !insn.addr !3673
  br i1 %105, label %dec_label_pc_44af8c, label %dec_label_pc_44af79, !insn.addr !3673

dec_label_pc_44af79:                              ; preds = %dec_label_pc_44af75
  %106 = add i32 %52, -4, !insn.addr !3674
  %107 = inttoptr i32 %106 to i32*, !insn.addr !3674
  store i32 %edi.3.reload, i32* %107, align 4, !insn.addr !3674
  %108 = add i32 %52, -8, !insn.addr !3675
  %109 = inttoptr i32 %108 to i32*, !insn.addr !3675
  store i32 48, i32* %109, align 4, !insn.addr !3676
  %110 = add i32 %52, -12, !insn.addr !3677
  %111 = inttoptr i32 %110 to i32*, !insn.addr !3677
  store i32 %stack_var_-16.1.reload, i32* %111, align 4, !insn.addr !3677
  call void @memset(i8* bitcast (i32* @80 to i8*), i8 ptrtoint (i32* @80 to i8), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3678
  %112 = add i32 %edi.3.reload, %stack_var_-16.1.reload, !insn.addr !3679
  store i32 %112, i32* %stack_var_-16.2.reg2mem, !insn.addr !3680
  br label %dec_label_pc_44af8c, !insn.addr !3680

dec_label_pc_44af8c:                              ; preds = %dec_label_pc_44af79, %dec_label_pc_44af75
  %stack_var_-16.2.reload = load i32, i32* %stack_var_-16.2.reg2mem
  %113 = load i8, i8* %55, align 1, !insn.addr !3681
  %114 = icmp eq i8 %113, 0, !insn.addr !3681
  %115 = icmp eq i1 %114, false, !insn.addr !3682
  %spec.select18 = select i1 %115, i32 %stack_var_-16.2.reload, i32 %49
  %116 = xor i8 %51, 32, !insn.addr !3683
  %117 = add i8 %116, 80, !insn.addr !3684
  %118 = inttoptr i32 %spec.select18 to i8*, !insn.addr !3685
  store i8 %117, i8* %118, align 1, !insn.addr !3685
  %119 = call i32 @function_401730(), !insn.addr !3686
  %120 = and i32 %119, 2047, !insn.addr !3687
  %121 = sub i32 %120, %stack_var_-20.1.reload, !insn.addr !3688
  %122 = icmp ult i32 %120, %stack_var_-20.1.reload, !insn.addr !3688
  br i1 %122, label %dec_label_pc_44afd3, label %dec_label_pc_44af8c.dec_label_pc_44afed_crit_edge, !insn.addr !3689

dec_label_pc_44af8c.dec_label_pc_44afed_crit_edge: ; preds = %dec_label_pc_44af8c
  %.pre63 = add i32 %52, -4
  %.pre65 = inttoptr i32 %.pre63 to i32*
  store i32* %.pre65, i32** %.pre-phi66.reg2mem
  store i32 %121, i32* %ecx.3.reg2mem
  store i8 43, i8* %ebx.1.reg2mem
  store i32 0, i32* %esi.6.reg2mem
  br label %dec_label_pc_44afed

dec_label_pc_44afd3:                              ; preds = %dec_label_pc_44af8c
  %123 = sub i32 0, %121, !insn.addr !3690
  %124 = icmp eq i32 %121, 0, !insn.addr !3690
  %125 = add i32 %52, -4
  %126 = inttoptr i32 %125 to i32*
  store i32 45, i32* %126, align 4, !insn.addr !3691
  %127 = zext i1 %124 to i32, !insn.addr !3692
  store i32* %126, i32** %.pre-phi66.reg2mem, !insn.addr !3693
  store i32 %123, i32* %ecx.3.reg2mem, !insn.addr !3693
  store i8 45, i8* %ebx.1.reg2mem, !insn.addr !3693
  store i32 %127, i32* %esi.6.reg2mem, !insn.addr !3693
  br label %dec_label_pc_44afed, !insn.addr !3693

dec_label_pc_44afed:                              ; preds = %dec_label_pc_44af8c.dec_label_pc_44afed_crit_edge, %dec_label_pc_44afd3
  %128 = add i32 %spec.select18, 2, !insn.addr !3694
  %esi.6.reload = load i32, i32* %esi.6.reg2mem
  %ebx.1.reload = load i8, i8* %ebx.1.reg2mem
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %.pre-phi66.reload = load i32*, i32** %.pre-phi66.reg2mem
  %129 = add i32 %spec.select18, 1, !insn.addr !3695
  %130 = inttoptr i32 %129 to i8*, !insn.addr !3695
  store i8 %ebx.1.reload, i8* %130, align 1, !insn.addr !3695
  store i32 48, i32* %.pre-phi66.reload, align 4, !insn.addr !3696
  %131 = inttoptr i32 %128 to i8*
  store i8 48, i8* %131, align 1, !insn.addr !3697
  %132 = icmp eq i32 %esi.6.reload, 0, !insn.addr !3698
  %133 = icmp ult i32 %ecx.3.reload, 1000, !insn.addr !3699
  %or.cond20 = icmp eq i1 %133, %132
  br i1 %or.cond20, label %dec_label_pc_44b01d, label %dec_label_pc_44b015.thread, !insn.addr !3698

dec_label_pc_44b015.thread:                       ; preds = %dec_label_pc_44afed
  store i32 1000, i32* %.pre-phi66.reload, align 4, !insn.addr !3700
  %134 = add i32 %52, -8, !insn.addr !3701
  %135 = inttoptr i32 %134 to i32*, !insn.addr !3701
  store i32 0, i32* %135, align 4, !insn.addr !3701
  %136 = add i32 %52, -12, !insn.addr !3702
  %137 = inttoptr i32 %136 to i32*, !insn.addr !3702
  store i32 1000, i32* %137, align 4, !insn.addr !3702
  %138 = add i32 %52, -16, !insn.addr !3703
  %139 = inttoptr i32 %138 to i32*, !insn.addr !3703
  store i32 %esi.6.reload, i32* %139, align 4, !insn.addr !3703
  %140 = add i32 %52, -20, !insn.addr !3704
  %141 = inttoptr i32 %140 to i32*, !insn.addr !3704
  store i32 %ecx.3.reload, i32* %141, align 4, !insn.addr !3704
  %142 = call i32 @function_4040de(), !insn.addr !3705
  %143 = load i32, i32* %141, align 4, !insn.addr !3706
  %144 = trunc i32 %142 to i8
  %145 = add i8 %144, 48, !insn.addr !3707
  store i8 %145, i8* %131, align 1, !insn.addr !3707
  %146 = add i32 %spec.select18, 3, !insn.addr !3708
  %.pre61 = inttoptr i32 %146 to i8*, !insn.addr !3709
  store i8* %.pre61, i8** %.pre-phi62.reg2mem
  store i32* %141, i32** %.pre-phi60.reg2mem
  store i32 %146, i32* %edi.425.reg2mem
  store i32 1000, i32* %esi.724.reg2mem
  store i32 %138, i32* %esp.523.reg2mem
  store i32 %143, i32* %ebx.222.reg2mem
  br label %dec_label_pc_44b040

dec_label_pc_44b01d:                              ; preds = %dec_label_pc_44afed
  %147 = icmp ult i32 %ecx.3.reload, 100, !insn.addr !3710
  store i8* %131, i8** %.pre-phi62.reg2mem, !insn.addr !3711
  store i32* %.pre-phi66.reload, i32** %.pre-phi60.reg2mem, !insn.addr !3711
  store i32 %128, i32* %edi.425.reg2mem, !insn.addr !3711
  store i32 0, i32* %esi.724.reg2mem, !insn.addr !3711
  store i32 %52, i32* %esp.523.reg2mem, !insn.addr !3711
  store i32 1000, i32* %ebx.222.reg2mem, !insn.addr !3711
  store i32 1000, i32* %ebx.36980.reg2mem, !insn.addr !3711
  store i32 %52, i32* %esp.67179.reg2mem, !insn.addr !3711
  store i32 0, i32* %esi.87378.reg2mem, !insn.addr !3711
  store i32 %128, i32* %edi.57577.reg2mem, !insn.addr !3711
  br i1 %147, label %dec_label_pc_44b048, label %dec_label_pc_44b040, !insn.addr !3711

dec_label_pc_44b040:                              ; preds = %dec_label_pc_44b01d, %dec_label_pc_44b015.thread
  %ebx.222.reload = load i32, i32* %ebx.222.reg2mem
  %esp.523.reload = load i32, i32* %esp.523.reg2mem
  %esi.724.reload = load i32, i32* %esi.724.reg2mem
  %edi.425.reload = load i32, i32* %edi.425.reg2mem
  %.pre-phi60.reload = load i32*, i32** %.pre-phi60.reg2mem
  %.pre-phi62.reload = load i8*, i8** %.pre-phi62.reg2mem
  store i32 %ebx.222.reload, i32* %.pre-phi60.reload, align 4, !insn.addr !3712
  %148 = add i32 %esp.523.reload, -8, !insn.addr !3713
  %149 = inttoptr i32 %148 to i32*, !insn.addr !3713
  store i32 0, i32* %149, align 4, !insn.addr !3713
  %150 = add i32 %esp.523.reload, -12, !insn.addr !3714
  %151 = inttoptr i32 %150 to i32*, !insn.addr !3714
  store i32 100, i32* %151, align 4, !insn.addr !3714
  %152 = add i32 %esp.523.reload, -16, !insn.addr !3715
  %153 = inttoptr i32 %152 to i32*, !insn.addr !3715
  store i32 %esi.724.reload, i32* %153, align 4, !insn.addr !3715
  %154 = add i32 %esp.523.reload, -20, !insn.addr !3716
  %155 = inttoptr i32 %154 to i32*, !insn.addr !3716
  store i32 %ecx.3.reload, i32* %155, align 4, !insn.addr !3716
  %156 = call i32 @function_4040de(), !insn.addr !3717
  %157 = load i32, i32* %155, align 4, !insn.addr !3718
  %158 = trunc i32 %156 to i8
  %159 = add i8 %158, 48, !insn.addr !3709
  store i8 %159, i8* %.pre-phi62.reload, align 1, !insn.addr !3709
  %160 = add i32 %edi.425.reload, 1, !insn.addr !3719
  %161 = icmp eq i32 %160, %128, !insn.addr !3720
  %162 = icmp eq i1 %161, false, !insn.addr !3721
  store i32 %160, i32* %edi.576.reg2mem, !insn.addr !3721
  store i32 %ebx.222.reload, i32* %esi.874.reg2mem, !insn.addr !3721
  store i32 %152, i32* %esp.672.reg2mem, !insn.addr !3721
  store i32 %157, i32* %ebx.370.reg2mem, !insn.addr !3721
  br i1 %162, label %dec_label_pc_44b04f, label %dec_label_pc_44b044, !insn.addr !3721

dec_label_pc_44b044:                              ; preds = %dec_label_pc_44b040
  %163 = icmp slt i32 %ebx.222.reload, 0, !insn.addr !3722
  store i32 %157, i32* %ebx.36980.reg2mem, !insn.addr !3722
  store i32 %152, i32* %esp.67179.reg2mem, !insn.addr !3722
  store i32 %ebx.222.reload, i32* %esi.87378.reg2mem, !insn.addr !3722
  store i32 %160, i32* %edi.57577.reg2mem, !insn.addr !3722
  store i32 %160, i32* %edi.6.reg2mem, !insn.addr !3722
  br i1 %163, label %dec_label_pc_44b066, label %dec_label_pc_44b048, !insn.addr !3722

dec_label_pc_44b048:                              ; preds = %dec_label_pc_44b01d, %dec_label_pc_44b044
  %edi.57577.reload = load i32, i32* %edi.57577.reg2mem
  %esi.87378.reload = load i32, i32* %esi.87378.reg2mem
  %esp.67179.reload = load i32, i32* %esp.67179.reg2mem
  %ebx.36980.reload = load i32, i32* %ebx.36980.reg2mem
  %164 = icmp eq i32 %esi.87378.reload, 0, !insn.addr !3723
  %165 = icmp ult i32 %ecx.3.reload, 10, !insn.addr !3724
  %or.cond15 = icmp eq i1 %165, %164
  store i32 %edi.57577.reload, i32* %edi.576.reg2mem, !insn.addr !3723
  store i32 %esi.87378.reload, i32* %esi.874.reg2mem, !insn.addr !3723
  store i32 %esp.67179.reload, i32* %esp.672.reg2mem, !insn.addr !3723
  store i32 %ebx.36980.reload, i32* %ebx.370.reg2mem, !insn.addr !3723
  store i32 %edi.57577.reload, i32* %edi.6.reg2mem, !insn.addr !3723
  br i1 %or.cond15, label %dec_label_pc_44b066, label %dec_label_pc_44b04f, !insn.addr !3723

dec_label_pc_44b04f:                              ; preds = %dec_label_pc_44b048, %dec_label_pc_44b040
  %ebx.370.reload = load i32, i32* %ebx.370.reg2mem
  %esp.672.reload = load i32, i32* %esp.672.reg2mem
  %esi.874.reload = load i32, i32* %esi.874.reg2mem
  %edi.576.reload = load i32, i32* %edi.576.reg2mem
  %166 = add i32 %esp.672.reload, -4, !insn.addr !3725
  %167 = inttoptr i32 %166 to i32*, !insn.addr !3725
  store i32 %ebx.370.reload, i32* %167, align 4, !insn.addr !3725
  %168 = add i32 %esp.672.reload, -8, !insn.addr !3726
  %169 = inttoptr i32 %168 to i32*, !insn.addr !3726
  store i32 0, i32* %169, align 4, !insn.addr !3726
  %170 = add i32 %esp.672.reload, -12, !insn.addr !3727
  %171 = inttoptr i32 %170 to i32*, !insn.addr !3727
  store i32 10, i32* %171, align 4, !insn.addr !3727
  %172 = add i32 %esp.672.reload, -16, !insn.addr !3728
  %173 = inttoptr i32 %172 to i32*, !insn.addr !3728
  store i32 %esi.874.reload, i32* %173, align 4, !insn.addr !3728
  %174 = add i32 %esp.672.reload, -20, !insn.addr !3729
  %175 = inttoptr i32 %174 to i32*, !insn.addr !3729
  store i32 %ecx.3.reload, i32* %175, align 4, !insn.addr !3729
  %176 = call i32 @function_4040de(), !insn.addr !3730
  %177 = trunc i32 %176 to i8
  %178 = add i8 %177, 48, !insn.addr !3731
  %179 = inttoptr i32 %edi.576.reload to i8*, !insn.addr !3731
  store i8 %178, i8* %179, align 1, !insn.addr !3731
  %180 = add i32 %edi.576.reload, 1, !insn.addr !3732
  store i32 %180, i32* %edi.6.reg2mem, !insn.addr !3733
  br label %dec_label_pc_44b066, !insn.addr !3733

dec_label_pc_44b066:                              ; preds = %dec_label_pc_44b048, %dec_label_pc_44b04f, %dec_label_pc_44b044
  %edi.6.reload = load i32, i32* %edi.6.reg2mem
  %181 = trunc i32 %ecx.3.reload to i8
  %182 = add i8 %181, 48, !insn.addr !3734
  %183 = inttoptr i32 %edi.6.reload to i8*, !insn.addr !3734
  store i8 %182, i8* %183, align 1, !insn.addr !3734
  %184 = add i32 %edi.6.reload, 1, !insn.addr !3735
  %185 = inttoptr i32 %184 to i8*, !insn.addr !3735
  store i8 0, i8* %185, align 1, !insn.addr !3735
  store i32 0, i32* %edi.7.reg2mem, !insn.addr !3736
  br label %dec_label_pc_44b070, !insn.addr !3736

dec_label_pc_44b070:                              ; preds = %dec_label_pc_44adf2, %dec_label_pc_44ae00, %dec_label_pc_44b066, %dec_label_pc_44adea, %dec_label_pc_44ad9c
  %edi.7.reload = load i32, i32* %edi.7.reg2mem
  %186 = icmp eq i8 %0, 0, !insn.addr !3737
  br i1 %186, label %dec_label_pc_44b082, label %dec_label_pc_44b078, !insn.addr !3738

dec_label_pc_44b078:                              ; preds = %dec_label_pc_44b070
  %187 = add i32 %2, 848, !insn.addr !3739
  %188 = inttoptr i32 %187 to i32*, !insn.addr !3739
  %189 = load i32, i32* %188, align 4, !insn.addr !3739
  %190 = and i32 %189, -3, !insn.addr !3739
  store i32 %190, i32* %188, align 4, !insn.addr !3739
  br label %dec_label_pc_44b082, !insn.addr !3739

dec_label_pc_44b082:                              ; preds = %dec_label_pc_44b078, %dec_label_pc_44b070
  ret i32 %edi.7.reload, !insn.addr !3740
}

define i32 @fp_format_e(double* %argument, i8* %result_buffer, i32 %result_buffer_count, i8* %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i1 %capitals, i32 %min_exponent_digits, i32 %locale) local_unnamed_addr {
dec_label_pc_44b14d:
  %eax.1.reg2mem = alloca i32, !insn.addr !3741
  %ecx.0.reg2mem = alloca %_strflt*, !insn.addr !3741
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %2 = add i32 %precision, 1, !insn.addr !3742
  %3 = add i32 %precision, 3, !insn.addr !3743
  %4 = icmp ult i32 %3, %scratch_buffer_count, !insn.addr !3744
  %spec.select = select i1 %4, i32 %3, i32 %scratch_buffer_count
  %5 = ptrtoint i8* %scratch_buffer to i32
  %6 = ptrtoint double* %argument to i32, !insn.addr !3745
  %7 = add i32 %6, 4, !insn.addr !3746
  %8 = inttoptr i32 %7 to i32*, !insn.addr !3746
  %9 = load i32, i32* %8, align 4, !insn.addr !3746
  %10 = and i32 %9, 1
  %11 = icmp ne i32 %10, 0, !insn.addr !3746
  %12 = bitcast double* %argument to i32*
  %13 = load i32, i32* %12, align 4, !insn.addr !3747
  %14 = sext i1 %11 to i32, !insn.addr !3748
  %15 = call i32 @function_403b66(i32 %13, i32 %14, i32 %2, i32* nonnull %stack_var_-16, i32 %5, i32 %spec.select, i32 %0, i32 %1), !insn.addr !3748
  %16 = icmp eq i32 %result_buffer_count, -1, !insn.addr !3749
  %.pre = load i32, i32* %stack_var_-16, align 4
  store %_strflt* inttoptr (i32 -1 to %_strflt*), %_strflt** %ecx.0.reg2mem, !insn.addr !3750
  br i1 %16, label %dec_label_pc_44b1a0, label %dec_label_pc_44b189, !insn.addr !3750

dec_label_pc_44b189:                              ; preds = %dec_label_pc_44b14d
  %17 = icmp eq i32 %.pre, 45, !insn.addr !3751
  %.neg = sext i1 %17 to i32
  %18 = icmp eq i32 %precision, 0, !insn.addr !3752
  %19 = icmp slt i32 %precision, 0, !insn.addr !3752
  %20 = icmp eq i1 %19, false, !insn.addr !3753
  %21 = icmp eq i1 %18, false, !insn.addr !3753
  %22 = icmp eq i1 %20, %21, !insn.addr !3753
  %.neg9 = sext i1 %22 to i32
  %23 = add i32 %.neg9, %result_buffer_count, !insn.addr !3754
  %24 = add i32 %23, %.neg, !insn.addr !3755
  %phitmp = inttoptr i32 %24 to %_strflt*
  store %_strflt* %phitmp, %_strflt** %ecx.0.reg2mem, !insn.addr !3755
  br label %dec_label_pc_44b1a0, !insn.addr !3755

dec_label_pc_44b1a0:                              ; preds = %dec_label_pc_44b14d, %dec_label_pc_44b189
  %ecx.0.reload = load %_strflt*, %_strflt** %ecx.0.reg2mem
  %25 = ptrtoint i8* %result_buffer to i32, !insn.addr !3756
  %26 = icmp eq i32 %.pre, 45, !insn.addr !3757
  %27 = zext i1 %26 to i32, !insn.addr !3758
  %28 = icmp eq i32 %precision, 0, !insn.addr !3759
  %29 = icmp slt i32 %precision, 0, !insn.addr !3759
  %30 = icmp eq i1 %29, false, !insn.addr !3760
  %31 = icmp eq i1 %28, false, !insn.addr !3760
  %32 = icmp eq i1 %30, %31, !insn.addr !3760
  %33 = zext i1 %32 to i32, !insn.addr !3760
  %34 = add i32 %33, %25, !insn.addr !3761
  %35 = add i32 %34, %27, !insn.addr !3762
  %36 = ptrtoint %_strflt* %ecx.0.reload to i32, !insn.addr !3763
  %37 = call i32 @function_402b9e(i32 %35, i32 %36, i32 %2, i32* nonnull %stack_var_-16), !insn.addr !3763
  %38 = icmp eq i32 %37, 0, !insn.addr !3764
  br i1 %38, label %dec_label_pc_44b1cf, label %dec_label_pc_44b1ca, !insn.addr !3765

dec_label_pc_44b1ca:                              ; preds = %dec_label_pc_44b1a0
  store i8 0, i8* %result_buffer, align 1, !insn.addr !3766
  store i32 %37, i32* %eax.1.reg2mem, !insn.addr !3767
  br label %dec_label_pc_44b1eb, !insn.addr !3767

dec_label_pc_44b1cf:                              ; preds = %dec_label_pc_44b1a0
  %39 = bitcast i32* %stack_var_-16 to %_strflt*
  %40 = call i32 @fp_format_e_internal(i8* %result_buffer, i32 %result_buffer_count, i32 %precision, i1 %capitals, i32 %min_exponent_digits, %_strflt* nonnull %39, i1 false, i32 %locale), !insn.addr !3768
  store i32 %40, i32* %eax.1.reg2mem, !insn.addr !3769
  br label %dec_label_pc_44b1eb, !insn.addr !3769

dec_label_pc_44b1eb:                              ; preds = %dec_label_pc_44b1cf, %dec_label_pc_44b1ca
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  ret i32 %eax.1.reload, !insn.addr !3770
}

define i32 @fp_format_e_internal(i8* %result_buffer, i32 %result_buffer_count, i32 %precision, i1 %capitals, i32 %min_exponent_digits, %_strflt* %pflt, i1 %g_fmt, i32 %locale) local_unnamed_addr {
dec_label_pc_44b217:
  %edx.3.reg2mem = alloca i32, !insn.addr !3771
  %edx.2.reg2mem = alloca i32, !insn.addr !3771
  %edx.1.reg2mem = alloca i32, !insn.addr !3771
  %esi.1.reg2mem = alloca i32, !insn.addr !3771
  %esi.0.reg2mem = alloca i32, !insn.addr !3771
  %edx.0.reg2mem = alloca i32, !insn.addr !3771
  %storemerge.reg2mem = alloca i32, !insn.addr !3771
  %0 = call i8 @__decompiler_undefined_function_8()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = icmp sgt i32 %precision, 0
  %storemerge8 = select i1 %3, i32 %precision, i32 0
  %4 = add nuw i32 %storemerge8, 9, !insn.addr !3772
  %5 = icmp ult i32 %4, %result_buffer_count
  br i1 %5, label %dec_label_pc_44b24b, label %dec_label_pc_44b236, !insn.addr !3773

dec_label_pc_44b236:                              ; preds = %dec_label_pc_44b217
  %6 = call i32* @_errno(), !insn.addr !3774
  store i32 34, i32* %6, align 4, !insn.addr !3775
  call void @_invalid_parameter_noinfo(), !insn.addr !3776
  store i32 34, i32* %storemerge.reg2mem, !insn.addr !3777
  br label %dec_label_pc_44b247, !insn.addr !3777

dec_label_pc_44b247:                              ; preds = %dec_label_pc_44b33b, %dec_label_pc_44b341, %dec_label_pc_44b236
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !3778

dec_label_pc_44b24b:                              ; preds = %dec_label_pc_44b217
  %7 = call i32 @function_403d91(i32 %locale), !insn.addr !3779
  %8 = ptrtoint i8* %result_buffer to i32, !insn.addr !3780
  store i32 1, i32* %edx.0.reg2mem, !insn.addr !3781
  br i1 %g_fmt, label %dec_label_pc_44b261, label %dec_label_pc_44b286, !insn.addr !3781

dec_label_pc_44b261:                              ; preds = %dec_label_pc_44b24b
  %9 = icmp eq i32 %precision, 0, !insn.addr !3782
  %10 = icmp slt i32 %precision, 0, !insn.addr !3782
  %11 = icmp eq i1 %10, false, !insn.addr !3783
  %12 = icmp eq i1 %9, false, !insn.addr !3783
  %13 = icmp eq i1 %11, %12, !insn.addr !3783
  %14 = zext i1 %13 to i32, !insn.addr !3783
  %15 = getelementptr inbounds %_strflt, %_strflt* %pflt, i32 0, i32 0
  %16 = load i32, i32* %15, align 4, !insn.addr !3784
  %17 = icmp eq i32 %16, 45, !insn.addr !3784
  %18 = zext i1 %17 to i32, !insn.addr !3785
  %19 = add i32 %18, %8, !insn.addr !3786
  %20 = inttoptr i32 %19 to i8*, !insn.addr !3787
  call void @shift_bytes(i8* %result_buffer, i32 %result_buffer_count, i8* %20, i32 %14), !insn.addr !3788
  store i32 254, i32* %edx.0.reg2mem, !insn.addr !3789
  br label %dec_label_pc_44b286, !insn.addr !3789

dec_label_pc_44b286:                              ; preds = %dec_label_pc_44b24b, %dec_label_pc_44b261
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %21 = getelementptr inbounds %_strflt, %_strflt* %pflt, i32 0, i32 0
  %22 = load i32, i32* %21, align 4, !insn.addr !3790
  %23 = icmp eq i32 %22, 45, !insn.addr !3790
  %24 = icmp eq i1 %23, false, !insn.addr !3791
  store i32 %8, i32* %esi.0.reg2mem, !insn.addr !3791
  br i1 %24, label %dec_label_pc_44b296, label %dec_label_pc_44b290, !insn.addr !3791

dec_label_pc_44b290:                              ; preds = %dec_label_pc_44b286
  store i8 45, i8* %result_buffer, align 1, !insn.addr !3792
  %25 = add i32 %8, 1, !insn.addr !3793
  store i32 %25, i32* %esi.0.reg2mem, !insn.addr !3793
  br label %dec_label_pc_44b296, !insn.addr !3793

dec_label_pc_44b296:                              ; preds = %dec_label_pc_44b290, %dec_label_pc_44b286
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %26 = icmp slt i32 %precision, 1
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !3794
  br i1 %26, label %dec_label_pc_44b2af, label %dec_label_pc_44b29a, !insn.addr !3794

dec_label_pc_44b29a:                              ; preds = %dec_label_pc_44b296
  %27 = add i32 %esi.0.reload, 1, !insn.addr !3795
  %28 = inttoptr i32 %27 to i8*, !insn.addr !3795
  %29 = load i8, i8* %28, align 1, !insn.addr !3795
  %30 = inttoptr i32 %esi.0.reload to i8*, !insn.addr !3796
  store i8 %29, i8* %30, align 1, !insn.addr !3796
  %31 = add i32 %1, 136, !insn.addr !3797
  %32 = inttoptr i32 %31 to i32*, !insn.addr !3797
  %33 = load i32, i32* %32, align 4, !insn.addr !3797
  %34 = inttoptr i32 %33 to i32*, !insn.addr !3798
  %35 = load i32, i32* %34, align 4, !insn.addr !3798
  %36 = inttoptr i32 %35 to i8*, !insn.addr !3799
  %37 = load i8, i8* %36, align 1, !insn.addr !3799
  store i8 %37, i8* %28, align 1, !insn.addr !3800
  store i32 %27, i32* %esi.1.reg2mem, !insn.addr !3800
  br label %dec_label_pc_44b2af, !insn.addr !3800

dec_label_pc_44b2af:                              ; preds = %dec_label_pc_44b29a, %dec_label_pc_44b296
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %38 = add i32 %edx.0.reload, %precision, !insn.addr !3801
  %39 = add i32 %38, %esi.1.reload, !insn.addr !3802
  %40 = icmp eq i32 %result_buffer_count, -1, !insn.addr !3803
  %41 = add i32 %8, %result_buffer_count
  %42 = sub i32 %41, %39
  %eax.0 = select i1 %40, i32 -1, i32 %42
  %43 = inttoptr i32 %39 to i8*, !insn.addr !3804
  %44 = call i32 @strcpy_s(i8* %43, i32 %eax.0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_4742fc, i32 0, i32 0)), !insn.addr !3804
  %45 = icmp eq i32 %44, 0, !insn.addr !3805
  %46 = icmp eq i1 %45, false, !insn.addr !3806
  br i1 %46, label %dec_label_pc_44b352, label %dec_label_pc_44b2dc, !insn.addr !3806

dec_label_pc_44b2dc:                              ; preds = %dec_label_pc_44b2af
  %47 = sext i1 %capitals to i8, !insn.addr !3807
  %48 = trunc i32 %44 to i8, !insn.addr !3807
  %49 = icmp eq i8 %47, %48, !insn.addr !3807
  br i1 %49, label %dec_label_pc_44b2e7, label %dec_label_pc_44b2e4, !insn.addr !3808

dec_label_pc_44b2e4:                              ; preds = %dec_label_pc_44b2dc
  store i8 69, i8* %43, align 1, !insn.addr !3809
  br label %dec_label_pc_44b2e7, !insn.addr !3809

dec_label_pc_44b2e7:                              ; preds = %dec_label_pc_44b2e4, %dec_label_pc_44b2dc
  %50 = add i32 %39, 2, !insn.addr !3810
  %51 = ptrtoint %_strflt* %pflt to i32, !insn.addr !3811
  %52 = add i32 %51, 8, !insn.addr !3812
  %53 = inttoptr i32 %52 to i32*, !insn.addr !3812
  %54 = load i32, i32* %53, align 4, !insn.addr !3812
  %55 = inttoptr i32 %54 to i8*, !insn.addr !3813
  %56 = load i8, i8* %55, align 1, !insn.addr !3813
  %57 = icmp eq i8 %56, 48, !insn.addr !3813
  br i1 %57, label %dec_label_pc_44b321, label %dec_label_pc_44b2f2, !insn.addr !3814

dec_label_pc_44b2f2:                              ; preds = %dec_label_pc_44b2e7
  %58 = add i32 %51, 4, !insn.addr !3815
  %59 = inttoptr i32 %58 to i32*, !insn.addr !3815
  %60 = load i32, i32* %59, align 4, !insn.addr !3815
  %61 = add i32 %60, -1, !insn.addr !3816
  %62 = icmp slt i32 %61, 0, !insn.addr !3816
  %63 = icmp eq i1 %62, false, !insn.addr !3817
  store i32 %61, i32* %edx.1.reg2mem, !insn.addr !3817
  br i1 %63, label %dec_label_pc_44b300, label %dec_label_pc_44b2fa, !insn.addr !3817

dec_label_pc_44b2fa:                              ; preds = %dec_label_pc_44b2f2
  %64 = sub i32 1, %60, !insn.addr !3818
  %65 = add i32 %39, 1, !insn.addr !3819
  %66 = inttoptr i32 %65 to i8*, !insn.addr !3819
  store i8 45, i8* %66, align 1, !insn.addr !3819
  store i32 %64, i32* %edx.1.reg2mem, !insn.addr !3819
  br label %dec_label_pc_44b300, !insn.addr !3819

dec_label_pc_44b300:                              ; preds = %dec_label_pc_44b2fa, %dec_label_pc_44b2f2
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %67 = icmp slt i32 %edx.1.reload, 100, !insn.addr !3820
  store i32 %edx.1.reload, i32* %edx.2.reg2mem, !insn.addr !3820
  br i1 %67, label %dec_label_pc_44b30f, label %dec_label_pc_44b307, !insn.addr !3820

dec_label_pc_44b307:                              ; preds = %dec_label_pc_44b300
  %68 = lshr i32 %edx.1.reload, 31
  %69 = zext i32 %edx.1.reload to i64, !insn.addr !3821
  %70 = zext i32 %68 to i64, !insn.addr !3821
  %71 = mul i64 %70, 4294967296, !insn.addr !3821
  %72 = or i64 %71, %69, !insn.addr !3821
  %73 = udiv i64 %72, 100, !insn.addr !3821
  %74 = urem i64 %72, 100, !insn.addr !3821
  %75 = trunc i64 %74 to i32, !insn.addr !3821
  %76 = inttoptr i32 %50 to i8*, !insn.addr !3822
  %77 = load i8, i8* %76, align 1, !insn.addr !3822
  %78 = trunc i64 %73 to i8, !insn.addr !3822
  %79 = add i8 %77, %78, !insn.addr !3822
  store i8 %79, i8* %76, align 1, !insn.addr !3822
  store i32 %75, i32* %edx.2.reg2mem, !insn.addr !3822
  br label %dec_label_pc_44b30f, !insn.addr !3822

dec_label_pc_44b30f:                              ; preds = %dec_label_pc_44b307, %dec_label_pc_44b300
  %edx.2.reload = load i32, i32* %edx.2.reg2mem
  %80 = icmp slt i32 %edx.2.reload, 10, !insn.addr !3823
  store i32 %edx.2.reload, i32* %edx.3.reg2mem, !insn.addr !3823
  br i1 %80, label %dec_label_pc_44b31e, label %dec_label_pc_44b316, !insn.addr !3823

dec_label_pc_44b316:                              ; preds = %dec_label_pc_44b30f
  %81 = lshr i32 %edx.2.reload, 31
  %82 = zext i32 %edx.2.reload to i64, !insn.addr !3824
  %83 = zext i32 %81 to i64, !insn.addr !3824
  %84 = mul i64 %83, 4294967296, !insn.addr !3824
  %85 = or i64 %84, %82, !insn.addr !3824
  %86 = udiv i64 %85, 10, !insn.addr !3824
  %87 = urem i64 %85, 10, !insn.addr !3824
  %88 = trunc i64 %87 to i32, !insn.addr !3824
  %89 = add i32 %39, 3, !insn.addr !3825
  %90 = inttoptr i32 %89 to i8*, !insn.addr !3825
  %91 = load i8, i8* %90, align 1, !insn.addr !3825
  %92 = trunc i64 %86 to i8, !insn.addr !3825
  %93 = add i8 %91, %92, !insn.addr !3825
  store i8 %93, i8* %90, align 1, !insn.addr !3825
  store i32 %88, i32* %edx.3.reg2mem, !insn.addr !3825
  br label %dec_label_pc_44b31e, !insn.addr !3825

dec_label_pc_44b31e:                              ; preds = %dec_label_pc_44b316, %dec_label_pc_44b30f
  %edx.3.reload = load i32, i32* %edx.3.reg2mem
  %94 = add i32 %39, 4, !insn.addr !3826
  %95 = inttoptr i32 %94 to i8*, !insn.addr !3826
  %96 = load i8, i8* %95, align 1, !insn.addr !3826
  %97 = trunc i32 %edx.3.reload to i8, !insn.addr !3826
  %98 = add i8 %96, %97, !insn.addr !3826
  store i8 %98, i8* %95, align 1, !insn.addr !3826
  br label %dec_label_pc_44b321, !insn.addr !3826

dec_label_pc_44b321:                              ; preds = %dec_label_pc_44b31e, %dec_label_pc_44b2e7
  %99 = icmp eq i32 %min_exponent_digits, 2, !insn.addr !3827
  %100 = icmp eq i1 %99, false, !insn.addr !3828
  br i1 %100, label %dec_label_pc_44b33b, label %dec_label_pc_44b327, !insn.addr !3828

dec_label_pc_44b327:                              ; preds = %dec_label_pc_44b321
  %101 = inttoptr i32 %50 to i8*, !insn.addr !3829
  %102 = load i8, i8* %101, align 1, !insn.addr !3829
  %103 = icmp eq i8 %102, 48, !insn.addr !3829
  %104 = icmp eq i1 %103, false, !insn.addr !3830
  br i1 %104, label %dec_label_pc_44b33b, label %dec_label_pc_44b32c, !insn.addr !3830

dec_label_pc_44b32c:                              ; preds = %dec_label_pc_44b327
  %105 = add i32 %39, 3, !insn.addr !3831
  %106 = inttoptr i32 %105 to i8*, !insn.addr !3832
  call void @memmove(i8* %101, i8* %106, i32 3), !insn.addr !3833
  br label %dec_label_pc_44b33b, !insn.addr !3834

dec_label_pc_44b33b:                              ; preds = %dec_label_pc_44b32c, %dec_label_pc_44b327, %dec_label_pc_44b321
  %107 = icmp eq i8 %0, 0, !insn.addr !3835
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !3836
  br i1 %107, label %dec_label_pc_44b247, label %dec_label_pc_44b341, !insn.addr !3836

dec_label_pc_44b341:                              ; preds = %dec_label_pc_44b33b
  %108 = add i32 %2, 848, !insn.addr !3837
  %109 = inttoptr i32 %108 to i32*, !insn.addr !3837
  %110 = load i32, i32* %109, align 4, !insn.addr !3837
  %111 = and i32 %110, -3, !insn.addr !3837
  store i32 %111, i32* %109, align 4, !insn.addr !3837
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !3837
  br label %dec_label_pc_44b247, !insn.addr !3837

dec_label_pc_44b352:                              ; preds = %dec_label_pc_44b2af
  %112 = call i32 @__invoke_watson(), !insn.addr !3838
  %113 = call i32 @__asm_int3(), !insn.addr !3839
  %114 = call i32 @__asm_int3(), !insn.addr !3840
  %115 = call i32 @__asm_int3(), !insn.addr !3841
  %116 = call i32 @__asm_int3(), !insn.addr !3842
  %117 = call i32 @__asm_int3(), !insn.addr !3843
  %118 = call i32 @__asm_int3(), !insn.addr !3844
  %119 = call i32 @__asm_int3(), !insn.addr !3845
  %120 = call i32 @__asm_int3(), !insn.addr !3846
  %121 = call i32 @__asm_int3(), !insn.addr !3847
  %122 = call i32 @__asm_int3(), !insn.addr !3848
  %123 = call i32 @__asm_int3(), !insn.addr !3849
  %124 = call i32 @__asm_int3(), !insn.addr !3850
  %125 = call i32 @__asm_int3(), !insn.addr !3851
  %126 = call i32 @__asm_int3(), !insn.addr !3852
  %127 = call i32 @__asm_int3(), !insn.addr !3853
  %128 = call i32 @__asm_int3(), !insn.addr !3854
  %129 = call i32 @__asm_int3(), !insn.addr !3855
  %130 = call i32 @__asm_int3(), !insn.addr !3856
  %131 = call i32 @__asm_int3(), !insn.addr !3857
  %132 = call i32 @__asm_int3(), !insn.addr !3858
  %133 = call i32 @__asm_int3(), !insn.addr !3859
  %134 = call i32 @__asm_int3(), !insn.addr !3860
  %135 = call i32 @__asm_int3(), !insn.addr !3861
  %136 = call i32 @__asm_int3(), !insn.addr !3862
  %137 = call i32 @__asm_int3(), !insn.addr !3863
  %138 = call i32 @__asm_int3(), !insn.addr !3864
  %139 = call i32 @__asm_int3(), !insn.addr !3865
  %140 = call i32 @__asm_int3(), !insn.addr !3866
  %141 = call i32 @__asm_int3(), !insn.addr !3867
  %142 = call i32 @__asm_int3(), !insn.addr !3868
  %143 = call i32 @__asm_int3(), !insn.addr !3869
  %144 = call i32 @__asm_int3(), !insn.addr !3870
  %145 = call i32 @__asm_int3(), !insn.addr !3871
  %146 = call i32 @__asm_int3(), !insn.addr !3872
  %147 = call i32 @__asm_int3(), !insn.addr !3873
  %148 = call i32 @__asm_int3(), !insn.addr !3874
  %149 = call i32 @__asm_int3(), !insn.addr !3875
  %150 = call i32 @__asm_int3(), !insn.addr !3876
  %151 = call i32 @__asm_int3(), !insn.addr !3877
  %152 = call i32 @__asm_int3(), !insn.addr !3878
  %153 = call i32 @__asm_int3(), !insn.addr !3879
  %154 = call i32 @__asm_int3(), !insn.addr !3880
  %155 = call i32 @__asm_int3(), !insn.addr !3881
  %156 = call i32 @__asm_int3(), !insn.addr !3882
  %157 = call i32 @__asm_int3(), !insn.addr !3883
  %158 = call i32 @__asm_int3(), !insn.addr !3884
  %159 = call i32 @__asm_int3(), !insn.addr !3885
  %160 = call i32 @__asm_int3(), !insn.addr !3886
  %161 = call i32 @__asm_int3(), !insn.addr !3887
  %162 = call i32 @__asm_int3(), !insn.addr !3888
  %163 = call i32 @__asm_int3(), !insn.addr !3889
  %164 = call i32 @__asm_int3(), !insn.addr !3890
  %165 = call i32 @__asm_int3(), !insn.addr !3891
  %166 = call i32 @__asm_int3(), !insn.addr !3892
  %167 = call i32 @__asm_int3(), !insn.addr !3893
  %168 = call i32 @__asm_int3(), !insn.addr !3894
  %169 = call i32 @__asm_int3(), !insn.addr !3895
  %170 = call i32 @__asm_int3(), !insn.addr !3896
  %171 = call i32 @__asm_int3(), !insn.addr !3897
  %172 = call i32 @__asm_int3(), !insn.addr !3898
  %173 = call i32 @__asm_int3(), !insn.addr !3899
  %174 = call i32 @__asm_int3(), !insn.addr !3900
  %175 = call i32 @__asm_int3(), !insn.addr !3901
  %176 = call i32 @__asm_int3(), !insn.addr !3902
  %177 = call i32 @__asm_int3(), !insn.addr !3903
  %178 = call i32 @__asm_int3(), !insn.addr !3904
  %179 = call i32 @__asm_int3(), !insn.addr !3905
  %180 = call i32 @__asm_int3(), !insn.addr !3906
  %181 = call i32 @__asm_int3(), !insn.addr !3907
  %182 = call i32 @__asm_int3(), !insn.addr !3908
  %183 = call i32 @__asm_int3(), !insn.addr !3909
  %184 = call i32 @__asm_int3(), !insn.addr !3910
  %185 = call i32 @__asm_int3(), !insn.addr !3911
  %186 = call i32 @__asm_int3(), !insn.addr !3912
  %187 = call i32 @__asm_int3(), !insn.addr !3913
  %188 = call i32 @__asm_int3(), !insn.addr !3914
  %189 = call i32 @__asm_int3(), !insn.addr !3915
  %190 = call i32 @__asm_int3(), !insn.addr !3916
  %191 = call i32 @__asm_int3(), !insn.addr !3917
  %192 = call i32 @__asm_int3(), !insn.addr !3918
  %193 = call i32 @__asm_int3(), !insn.addr !3919
  %194 = call i32 @__asm_int3(), !insn.addr !3920
  %195 = call i32 @__asm_int3(), !insn.addr !3921
  ret i32 %195, !insn.addr !3921
}

define i32 @fp_format_f(double* %argument, i8* %result_buffer, i32 %result_buffer_count, i8* %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i32 %locale) local_unnamed_addr {
dec_label_pc_44b3b1:
  %eax.0.reg2mem = alloca i32, !insn.addr !3922
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i1 @__decompiler_undefined_function_7()
  %3 = ptrtoint double* %argument to i32
  %strflt_-12 = alloca %_strflt.441, align 8
  %stack_var_-16 = alloca i32, align 4
  %4 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !3923
  store i32 0, i32* %stack_var_-16, align 4, !insn.addr !3924
  %5 = select i1 %2, i32 -4, i32 4, !insn.addr !3924
  %6 = add i32 %5, %4, !insn.addr !3924
  %7 = inttoptr i32 %6 to i32*, !insn.addr !3925
  store i32 0, i32* %7, align 4, !insn.addr !3925
  %8 = add i32 %6, %5, !insn.addr !3925
  %9 = inttoptr i32 %8 to i32*, !insn.addr !3926
  store i32 0, i32* %9, align 4, !insn.addr !3926
  %10 = add i32 %3, 4, !insn.addr !3927
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3927
  %12 = load i32, i32* %11, align 4, !insn.addr !3927
  %13 = bitcast double* %argument to i32*, !insn.addr !3928
  %14 = load i32, i32* %13, align 4, !insn.addr !3928
  %15 = ptrtoint i8* %scratch_buffer to i32, !insn.addr !3929
  %16 = call i32 @function_403b66(i32 %14, i32 %12, i32 %precision, i32* nonnull %stack_var_-16, i32 %15, i32 %scratch_buffer_count, i32 %0, i32 %1), !insn.addr !3929
  %17 = icmp eq i32 %result_buffer_count, -1, !insn.addr !3930
  %.pre = load i32, i32* %stack_var_-16, align 4
  %18 = icmp eq i32 %.pre, 45
  %19 = zext i1 %18 to i32
  %20 = sub i32 %result_buffer_count, %19
  %ecx.0 = select i1 %17, i32 -1, i32 %20
  %21 = ptrtoint i8* %result_buffer to i32, !insn.addr !3931
  %22 = getelementptr inbounds %_strflt.441, %_strflt.441* %strflt_-12, i32 0, i32 0, !insn.addr !3932
  %23 = load i32, i32* %22, align 8, !insn.addr !3932
  %24 = add i32 %23, %precision, !insn.addr !3933
  %25 = add i32 %19, %21, !insn.addr !3934
  %26 = call i32 @function_402b9e(i32 %25, i32 %ecx.0, i32 %24, i32* nonnull %stack_var_-16), !insn.addr !3935
  %27 = icmp eq i32 %26, 0, !insn.addr !3936
  br i1 %27, label %dec_label_pc_44b422, label %dec_label_pc_44b41d, !insn.addr !3937

dec_label_pc_44b41d:                              ; preds = %dec_label_pc_44b3b1
  store i8 0, i8* %result_buffer, align 1, !insn.addr !3938
  store i32 %26, i32* %eax.0.reg2mem, !insn.addr !3939
  br label %dec_label_pc_44b438, !insn.addr !3939

dec_label_pc_44b422:                              ; preds = %dec_label_pc_44b3b1
  %28 = bitcast i32* %stack_var_-16 to %_strflt*
  %29 = call i32 @fp_format_f_internal(i8* %result_buffer, i32 %result_buffer_count, i32 %precision, %_strflt* nonnull %28, i1 false, i32 %locale), !insn.addr !3940
  store i32 %29, i32* %eax.0.reg2mem, !insn.addr !3941
  br label %dec_label_pc_44b438, !insn.addr !3941

dec_label_pc_44b438:                              ; preds = %dec_label_pc_44b422, %dec_label_pc_44b41d
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !3942
}

define i32 @fp_format_f_internal(i8* %buffer, i32 %buffer_count, i32 %precision, %_strflt* %pflt, i1 %g_fmt, i32 %locale) local_unnamed_addr {
dec_label_pc_44b45e:
  %eax.0.reg2mem = alloca i32, !insn.addr !3943
  %ebx.0.reg2mem = alloca i32, !insn.addr !3943
  %0 = ptrtoint %_strflt* %pflt to i32
  %1 = ptrtoint i8* %buffer to i32
  %2 = call i8 @__decompiler_undefined_function_8()
  %3 = call i32 @__decompiler_undefined_function_0()
  %4 = call i32 @__decompiler_undefined_function_0()
  %5 = call i32 @function_403d91(i32 %locale), !insn.addr !3944
  %6 = add i32 %0, 4, !insn.addr !3945
  %7 = inttoptr i32 %6 to i32*, !insn.addr !3945
  %8 = load i32, i32* %7, align 4, !insn.addr !3945
  %9 = add i32 %8, -1, !insn.addr !3946
  %10 = icmp eq i32 %9, %precision, !insn.addr !3947
  %11 = icmp eq i1 %10, %g_fmt
  br i1 %11, label %dec_label_pc_44b48b, label %dec_label_pc_44b49b, !insn.addr !3948

dec_label_pc_44b48b:                              ; preds = %dec_label_pc_44b45e
  %12 = getelementptr inbounds %_strflt, %_strflt* %pflt, i32 0, i32 0, !insn.addr !3949
  %13 = load i32, i32* %12, align 4, !insn.addr !3949
  %14 = icmp eq i32 %13, 45, !insn.addr !3949
  %15 = zext i1 %14 to i32, !insn.addr !3950
  %16 = add i32 %1, %precision, !insn.addr !3951
  %17 = add i32 %16, %15, !insn.addr !3952
  %18 = inttoptr i32 %17 to i16*, !insn.addr !3952
  store i16 48, i16* %18, align 2, !insn.addr !3952
  br label %dec_label_pc_44b49b, !insn.addr !3952

dec_label_pc_44b49b:                              ; preds = %dec_label_pc_44b45e, %dec_label_pc_44b48b
  %19 = getelementptr inbounds %_strflt, %_strflt* %pflt, i32 0, i32 0, !insn.addr !3953
  %20 = load i32, i32* %19, align 4, !insn.addr !3953
  %21 = icmp eq i32 %20, 45, !insn.addr !3953
  %22 = icmp eq i1 %21, false, !insn.addr !3954
  store i32 %1, i32* %ebx.0.reg2mem, !insn.addr !3954
  br i1 %22, label %dec_label_pc_44b4a8, label %dec_label_pc_44b4a2, !insn.addr !3954

dec_label_pc_44b4a2:                              ; preds = %dec_label_pc_44b49b
  store i8 45, i8* %buffer, align 1, !insn.addr !3955
  %23 = add i32 %1, 1, !insn.addr !3956
  store i32 %23, i32* %ebx.0.reg2mem, !insn.addr !3956
  br label %dec_label_pc_44b4a8, !insn.addr !3956

dec_label_pc_44b4a8:                              ; preds = %dec_label_pc_44b4a2, %dec_label_pc_44b49b
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %24 = load i32, i32* %7, align 4, !insn.addr !3957
  %25 = icmp eq i32 %24, 0, !insn.addr !3958
  %26 = icmp slt i32 %24, 0, !insn.addr !3958
  %27 = icmp eq i1 %26, false, !insn.addr !3959
  %28 = icmp eq i1 %25, false, !insn.addr !3959
  %29 = icmp eq i1 %27, %28, !insn.addr !3959
  store i32 %24, i32* %eax.0.reg2mem, !insn.addr !3959
  br i1 %29, label %dec_label_pc_44b4c4, label %dec_label_pc_44b4af, !insn.addr !3959

dec_label_pc_44b4af:                              ; preds = %dec_label_pc_44b4a8
  %30 = inttoptr i32 %ebx.0.reload to i8*, !insn.addr !3960
  call void @shift_bytes(i8* %buffer, i32 %buffer_count, i8* %30, i32 1), !insn.addr !3961
  store i8 48, i8* %30, align 1, !insn.addr !3962
  store i32 1, i32* %eax.0.reg2mem, !insn.addr !3963
  br label %dec_label_pc_44b4c4, !insn.addr !3963

dec_label_pc_44b4c4:                              ; preds = %dec_label_pc_44b4af, %dec_label_pc_44b4a8
  %31 = icmp slt i32 %precision, 1
  br i1 %31, label %dec_label_pc_44b518, label %dec_label_pc_44b4ca, !insn.addr !3964

dec_label_pc_44b4ca:                              ; preds = %dec_label_pc_44b4c4
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %32 = add i32 %eax.0.reload, %ebx.0.reload, !insn.addr !3965
  %33 = inttoptr i32 %32 to i8*, !insn.addr !3966
  call void @shift_bytes(i8* %buffer, i32 %buffer_count, i8* %33, i32 1), !insn.addr !3967
  %34 = add i32 %3, 136, !insn.addr !3968
  %35 = inttoptr i32 %34 to i32*, !insn.addr !3968
  %36 = load i32, i32* %35, align 4, !insn.addr !3968
  %37 = inttoptr i32 %36 to i32*, !insn.addr !3969
  %38 = load i32, i32* %37, align 4, !insn.addr !3969
  %39 = inttoptr i32 %38 to i8*, !insn.addr !3970
  %40 = load i8, i8* %39, align 1, !insn.addr !3970
  store i8 %40, i8* %33, align 1, !insn.addr !3971
  %41 = load i32, i32* %7, align 4, !insn.addr !3972
  %42 = icmp slt i32 %41, 0, !insn.addr !3973
  %43 = icmp eq i1 %42, false, !insn.addr !3974
  br i1 %43, label %dec_label_pc_44b518, label %dec_label_pc_44b4f3, !insn.addr !3974

dec_label_pc_44b4f3:                              ; preds = %dec_label_pc_44b4ca
  %44 = icmp eq i1 %g_fmt, false, !insn.addr !3975
  %45 = add i32 %32, 1, !insn.addr !3976
  %46 = sub i32 0, %41, !insn.addr !3977
  %47 = icmp eq i1 %44, false, !insn.addr !3978
  %48 = icmp slt i32 %46, %precision, !insn.addr !3979
  %or.cond8 = or i1 %47, %48
  %esi.0 = select i1 %or.cond8, i32 %46, i32 %precision
  %49 = inttoptr i32 %45 to i8*, !insn.addr !3980
  call void @shift_bytes(i8* %buffer, i32 %buffer_count, i8* %49, i32 %esi.0), !insn.addr !3981
  call void @memset(i8* %49, i8 48, i32 %esi.0), !insn.addr !3982
  br label %dec_label_pc_44b518, !insn.addr !3983

dec_label_pc_44b518:                              ; preds = %dec_label_pc_44b4f3, %dec_label_pc_44b4ca, %dec_label_pc_44b4c4
  %50 = icmp eq i8 %2, 0, !insn.addr !3984
  br i1 %50, label %dec_label_pc_44b52b, label %dec_label_pc_44b521, !insn.addr !3985

dec_label_pc_44b521:                              ; preds = %dec_label_pc_44b518
  %51 = add i32 %4, 848, !insn.addr !3986
  %52 = inttoptr i32 %51 to i32*, !insn.addr !3986
  %53 = load i32, i32* %52, align 4, !insn.addr !3986
  %54 = and i32 %53, -3, !insn.addr !3986
  store i32 %54, i32* %52, align 4, !insn.addr !3986
  br label %dec_label_pc_44b52b, !insn.addr !3986

dec_label_pc_44b52b:                              ; preds = %dec_label_pc_44b521, %dec_label_pc_44b518
  ret i32 0, !insn.addr !3987
}

define i32 @fp_format_g(double* %argument, i8* %result_buffer, i32 %result_buffer_count, i8* %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i1 %capitals, i32 %min_exponent_digits, i32 %locale) local_unnamed_addr {
dec_label_pc_44b563:
  %eax.2.reg2mem = alloca i32, !insn.addr !3988
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i1 @__decompiler_undefined_function_7()
  %3 = ptrtoint i8* %result_buffer to i32
  %4 = ptrtoint double* %argument to i32
  %strflt_-16 = alloca %_strflt.446, align 8
  %stack_var_-20 = alloca i32, align 4
  %5 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !3989
  store i32 0, i32* %stack_var_-20, align 4, !insn.addr !3990
  %6 = select i1 %2, i32 -4, i32 4, !insn.addr !3990
  %7 = add i32 %6, %5, !insn.addr !3990
  %8 = inttoptr i32 %7 to i32*, !insn.addr !3991
  store i32 0, i32* %8, align 4, !insn.addr !3991
  %9 = add i32 %7, %6, !insn.addr !3991
  %10 = inttoptr i32 %9 to i32*, !insn.addr !3992
  store i32 0, i32* %10, align 4, !insn.addr !3992
  %11 = add i32 %4, 4, !insn.addr !3993
  %12 = inttoptr i32 %11 to i32*, !insn.addr !3993
  %13 = load i32, i32* %12, align 4, !insn.addr !3993
  %14 = bitcast double* %argument to i32*, !insn.addr !3994
  %15 = load i32, i32* %14, align 4, !insn.addr !3994
  %16 = ptrtoint i8* %scratch_buffer to i32, !insn.addr !3995
  %17 = call i32 @function_403b66(i32 %15, i32 %13, i32 %precision, i32* nonnull %stack_var_-20, i32 %16, i32 %scratch_buffer_count, i32 %0, i32 %1), !insn.addr !3995
  %18 = load i32, i32* %stack_var_-20, align 4, !insn.addr !3996
  %19 = icmp eq i32 %18, 45, !insn.addr !3996
  %20 = zext i1 %19 to i32, !insn.addr !3997
  %21 = add i32 %20, %3, !insn.addr !3998
  %22 = icmp eq i32 %result_buffer_count, -1, !insn.addr !3999
  %23 = sub i32 %result_buffer_count, %20
  %spec.select = select i1 %22, i32 -1, i32 %23
  %24 = call i32 @function_402b9e(i32 %21, i32 %spec.select, i32 %precision, i32* nonnull %stack_var_-20), !insn.addr !4000
  %25 = icmp eq i32 %24, 0, !insn.addr !4001
  br i1 %25, label %dec_label_pc_44b5cf, label %dec_label_pc_44b5ca, !insn.addr !4002

dec_label_pc_44b5ca:                              ; preds = %dec_label_pc_44b563
  store i8 0, i8* %result_buffer, align 1, !insn.addr !4003
  store i32 %24, i32* %eax.2.reg2mem, !insn.addr !4004
  br label %dec_label_pc_44b61f, !insn.addr !4004

dec_label_pc_44b5cf:                              ; preds = %dec_label_pc_44b563
  %26 = bitcast i32* %stack_var_-20 to %_strflt*
  %27 = getelementptr inbounds %_strflt.446, %_strflt.446* %strflt_-16, i32 0, i32 0, !insn.addr !4005
  %28 = load i32, i32* %27, align 8, !insn.addr !4005
  %29 = add i32 %28, -1
  %30 = icmp sgt i32 %29, -5, !insn.addr !4006
  %31 = icmp slt i32 %29, %precision, !insn.addr !4007
  %or.cond = icmp eq i1 %30, %31
  br i1 %or.cond, label %dec_label_pc_44b5eb, label %dec_label_pc_44b603, !insn.addr !4006

dec_label_pc_44b5eb:                              ; preds = %dec_label_pc_44b5cf
  %32 = call i32 @fp_format_f_internal(i8* %result_buffer, i32 %result_buffer_count, i32 %precision, %_strflt* nonnull %26, i1 true, i32 %locale), !insn.addr !4008
  store i32 %32, i32* %eax.2.reg2mem, !insn.addr !4009
  br label %dec_label_pc_44b61f, !insn.addr !4009

dec_label_pc_44b603:                              ; preds = %dec_label_pc_44b5cf
  %33 = call i32 @fp_format_e_internal(i8* %result_buffer, i32 %result_buffer_count, i32 %precision, i1 %capitals, i32 %min_exponent_digits, %_strflt* nonnull %26, i1 true, i32 %locale), !insn.addr !4010
  store i32 %33, i32* %eax.2.reg2mem, !insn.addr !4011
  br label %dec_label_pc_44b61f, !insn.addr !4011

dec_label_pc_44b61f:                              ; preds = %dec_label_pc_44b603, %dec_label_pc_44b5eb, %dec_label_pc_44b5ca
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  ret i32 %eax.2.reload, !insn.addr !4012
}

define i32 @fp_format_nan_or_infinity(i32 %classification, i1 %is_negative, i8* %result_buffer, i32 %result_buffer_count, i1 %use_capitals) local_unnamed_addr {
dec_label_pc_44b654:
  %esi.0.reg2mem = alloca i32, !insn.addr !4013
  %edx.0.reg2mem = alloca i32, !insn.addr !4013
  %ecx.0.reg2mem = alloca i32, !insn.addr !4013
  %0 = select i1 %is_negative, i32 259, i32 4, !insn.addr !4014
  %1 = icmp ugt i32 %0, %result_buffer_count, !insn.addr !4015
  %2 = icmp eq i1 %1, false, !insn.addr !4016
  br i1 %2, label %dec_label_pc_44b675, label %dec_label_pc_44b66a, !insn.addr !4016

dec_label_pc_44b66a:                              ; preds = %dec_label_pc_44b654
  store i8 0, i8* %result_buffer, align 1, !insn.addr !4017
  ret i32 12, !insn.addr !4018

dec_label_pc_44b675:                              ; preds = %dec_label_pc_44b654
  %3 = ptrtoint i8* %result_buffer to i32, !insn.addr !4019
  store i32 %3, i32* %ecx.0.reg2mem, !insn.addr !4020
  store i32 %result_buffer_count, i32* %edx.0.reg2mem, !insn.addr !4020
  br i1 %is_negative, label %dec_label_pc_44b67c, label %dec_label_pc_44b689, !insn.addr !4020

dec_label_pc_44b67c:                              ; preds = %dec_label_pc_44b675
  store i8 45, i8* %result_buffer, align 1, !insn.addr !4021
  %4 = add i32 %3, 1, !insn.addr !4022
  %5 = inttoptr i32 %4 to i8*, !insn.addr !4023
  store i8 0, i8* %5, align 1, !insn.addr !4023
  %6 = icmp eq i32 %result_buffer_count, -1, !insn.addr !4024
  %7 = add i32 %result_buffer_count, -1
  %spec.select = select i1 %6, i32 -1, i32 %7
  store i32 %4, i32* %ecx.0.reg2mem
  store i32 %spec.select, i32* %edx.0.reg2mem
  br label %dec_label_pc_44b689

dec_label_pc_44b689:                              ; preds = %dec_label_pc_44b67c, %dec_label_pc_44b675
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %8 = mul i32 %classification, 4, !insn.addr !4025
  %9 = select i1 %use_capitals, i32 508, i32 2, !insn.addr !4026
  %10 = add i32 %9, %8
  %11 = mul i32 %10, 4, !insn.addr !4027
  %12 = add i32 %11, add (i32 ptrtoint ([4 x [4 x i8*]]* @strings to i32), i32 -16), !insn.addr !4028
  %13 = inttoptr i32 %12 to i32*, !insn.addr !4028
  %14 = load i32, i32* %13, align 8, !insn.addr !4028
  store i32 %14, i32* %esi.0.reg2mem, !insn.addr !4029
  br label %dec_label_pc_44b6af, !insn.addr !4029

dec_label_pc_44b6af:                              ; preds = %dec_label_pc_44b6af, %dec_label_pc_44b689
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %15 = inttoptr i32 %esi.0.reload to i8*, !insn.addr !4030
  %16 = load i8, i8* %15, align 1, !insn.addr !4030
  %17 = add i32 %esi.0.reload, 1, !insn.addr !4031
  %18 = icmp eq i8 %16, 0, !insn.addr !4032
  %19 = icmp eq i1 %18, false, !insn.addr !4033
  store i32 %17, i32* %esi.0.reg2mem, !insn.addr !4033
  br i1 %19, label %dec_label_pc_44b6af, label %dec_label_pc_44b6b6, !insn.addr !4033

dec_label_pc_44b6b6:                              ; preds = %dec_label_pc_44b6af
  %20 = sub i32 %esi.0.reload, %14, !insn.addr !4034
  %21 = icmp ult i32 %20, %edx.0.reload, !insn.addr !4035
  %22 = sext i1 %21 to i32, !insn.addr !4036
  %23 = add i32 %10, 1073741821, !insn.addr !4037
  %24 = add i32 %23, %22, !insn.addr !4038
  %25 = mul i32 %24, 4, !insn.addr !4039
  %26 = add i32 %25, ptrtoint ([4 x [4 x i8*]]* @strings to i32), !insn.addr !4039
  %27 = inttoptr i32 %26 to i32*, !insn.addr !4039
  %28 = load i32, i32* %27, align 4, !insn.addr !4039
  %29 = inttoptr i32 %28 to i8*, !insn.addr !4039
  %30 = inttoptr i32 %ecx.0.reload to i8*, !insn.addr !4040
  %31 = call i32 @strcpy_s(i8* %30, i32 %edx.0.reload, i8* %29), !insn.addr !4041
  %32 = icmp eq i32 %31, 0, !insn.addr !4042
  %33 = icmp eq i1 %32, false, !insn.addr !4043
  br i1 %33, label %dec_label_pc_44b6dc, label %dec_label_pc_44b6da, !insn.addr !4043

dec_label_pc_44b6da:                              ; preds = %dec_label_pc_44b6b6
  ret i32 %31, !insn.addr !4044

dec_label_pc_44b6dc:                              ; preds = %dec_label_pc_44b6b6
  %34 = call i32 @__invoke_watson(), !insn.addr !4045
  %35 = call i32 @__asm_int3(), !insn.addr !4046
  %36 = call i32 @__asm_int3(), !insn.addr !4047
  %37 = call i32 @__asm_int3(), !insn.addr !4048
  %38 = call i32 @__asm_int3(), !insn.addr !4049
  %39 = call i32 @__asm_int3(), !insn.addr !4050
  %40 = call i32 @__asm_int3(), !insn.addr !4051
  %41 = call i32 @__asm_int3(), !insn.addr !4052
  %42 = call i32 @__asm_int3(), !insn.addr !4053
  %43 = call i32 @__asm_int3(), !insn.addr !4054
  %44 = call i32 @__asm_int3(), !insn.addr !4055
  %45 = call i32 @__asm_int3(), !insn.addr !4056
  %46 = call i32 @__asm_int3(), !insn.addr !4057
  %47 = call i32 @__asm_int3(), !insn.addr !4058
  %48 = call i32 @__asm_int3(), !insn.addr !4059
  %49 = call i32 @__asm_int3(), !insn.addr !4060
  %50 = call i32 @__asm_int3(), !insn.addr !4061
  %51 = call i32 @__asm_int3(), !insn.addr !4062
  %52 = call i32 @__asm_int3(), !insn.addr !4063
  %53 = call i32 @__asm_int3(), !insn.addr !4064
  %54 = call i32 @__asm_int3(), !insn.addr !4065
  %55 = call i32 @__asm_int3(), !insn.addr !4066
  %56 = call i32 @__asm_int3(), !insn.addr !4067
  %57 = call i32 @__asm_int3(), !insn.addr !4068
  %58 = call i32 @__asm_int3(), !insn.addr !4069
  %59 = call i32 @__asm_int3(), !insn.addr !4070
  %60 = call i32 @__asm_int3(), !insn.addr !4071
  %61 = call i32 @__asm_int3(), !insn.addr !4072
  %62 = call i32 @__asm_int3(), !insn.addr !4073
  %63 = call i32 @__asm_int3(), !insn.addr !4074
  %64 = call i32 @__asm_int3(), !insn.addr !4075
  %65 = call i32 @__asm_int3(), !insn.addr !4076
  %66 = call i32 @__asm_int3(), !insn.addr !4077
  %67 = call i32 @__asm_int3(), !insn.addr !4078
  %68 = call i32 @__asm_int3(), !insn.addr !4079
  %69 = call i32 @__asm_int3(), !insn.addr !4080
  %70 = call i32 @__asm_int3(), !insn.addr !4081
  %71 = call i32 @__asm_int3(), !insn.addr !4082
  %72 = call i32 @__asm_int3(), !insn.addr !4083
  ret i32 %72, !insn.addr !4083
}

define void @shift_bytes(i8* %buffer_base, i32 %buffer_count, i8* %string, i32 %distance) local_unnamed_addr {
dec_label_pc_44b70e:
  %ecx.0.reg2mem = alloca i32, !insn.addr !4084
  %0 = icmp eq i32 %buffer_count, 0, !insn.addr !4085
  br i1 %0, label %dec_label_pc_44b740, label %dec_label_pc_44b71a, !insn.addr !4086

dec_label_pc_44b71a:                              ; preds = %dec_label_pc_44b70e
  %1 = ptrtoint i8* %buffer_base to i32, !insn.addr !4087
  store i32 %1, i32* %ecx.0.reg2mem, !insn.addr !4088
  br label %dec_label_pc_44b724, !insn.addr !4088

dec_label_pc_44b724:                              ; preds = %dec_label_pc_44b724, %dec_label_pc_44b71a
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %2 = inttoptr i32 %ecx.0.reload to i8*, !insn.addr !4089
  %3 = load i8, i8* %2, align 1, !insn.addr !4089
  %4 = add i32 %ecx.0.reload, 1, !insn.addr !4090
  %5 = icmp eq i8 %3, 0, !insn.addr !4091
  %6 = icmp eq i1 %5, false, !insn.addr !4092
  store i32 %4, i32* %ecx.0.reg2mem, !insn.addr !4092
  br i1 %6, label %dec_label_pc_44b724, label %dec_label_pc_44b72b, !insn.addr !4092

dec_label_pc_44b72b:                              ; preds = %dec_label_pc_44b724
  %7 = sub i32 1, %1, !insn.addr !4093
  %8 = add i32 %7, %ecx.0.reload, !insn.addr !4094
  %9 = add i32 %1, %buffer_count, !insn.addr !4095
  %10 = inttoptr i32 %9 to i8*, !insn.addr !4096
  call void @memmove(i8* %10, i8* %buffer_base, i32 %8), !insn.addr !4097
  br label %dec_label_pc_44b740, !insn.addr !4098

dec_label_pc_44b740:                              ; preds = %dec_label_pc_44b72b, %dec_label_pc_44b70e
  ret void, !insn.addr !4099
}

define i32 @__acrt_fp_format(double* %value, i8* %result_buffer, i32 %result_buffer_count, i8* %scratch_buffer, i32 %scratch_buffer_count, i32 %format, i32 %precision, i64 %options, i32 %locale) local_unnamed_addr {
dec_label_pc_44b75c:
  %eax.0.reg2mem = alloca i32, !insn.addr !4100
  %storemerge14.in.reg2mem = alloca i32, !insn.addr !4100
  %stack_var_-8.0.reg2mem = alloca i32, !insn.addr !4100
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @__decompiler_undefined_function_0()
  %4 = icmp eq i8* %result_buffer, null, !insn.addr !4101
  %5 = icmp eq i32 %result_buffer_count, 0, !insn.addr !4102
  %or.cond = or i1 %4, %5
  %6 = icmp eq i8* %scratch_buffer, null, !insn.addr !4103
  %or.cond19 = or i1 %or.cond, %6
  %7 = icmp eq i32 %scratch_buffer_count, 0, !insn.addr !4104
  %or.cond21 = or i1 %7, %or.cond19
  br i1 %or.cond21, label %dec_label_pc_44b76c, label %dec_label_pc_44b794, !insn.addr !4105

dec_label_pc_44b76c:                              ; preds = %dec_label_pc_44b75c
  %8 = call i32* @_errno(), !insn.addr !4106
  store i32 22, i32* %8, align 4, !insn.addr !4107
  call void @_invalid_parameter_noinfo(), !insn.addr !4108
  store i32 22, i32* %eax.0.reg2mem, !insn.addr !4109
  br label %dec_label_pc_44b893, !insn.addr !4109

dec_label_pc_44b794:                              ; preds = %dec_label_pc_44b75c
  switch i32 %format, label %dec_label_pc_44b7a6 [
    i32 70, label %dec_label_pc_44b7af
    i32 69, label %dec_label_pc_44b7af
    i32 65, label %dec_label_pc_44b7af
  ]

dec_label_pc_44b7a6:                              ; preds = %dec_label_pc_44b794
  %9 = icmp eq i32 %format, 71, !insn.addr !4110
  %10 = icmp eq i1 %9, false, !insn.addr !4111
  store i32 0, i32* %stack_var_-8.0.reg2mem, !insn.addr !4111
  br i1 %10, label %dec_label_pc_44b7b3, label %dec_label_pc_44b7af, !insn.addr !4111

dec_label_pc_44b7af:                              ; preds = %dec_label_pc_44b794, %dec_label_pc_44b794, %dec_label_pc_44b794, %dec_label_pc_44b7a6
  store i32 1, i32* %stack_var_-8.0.reg2mem, !insn.addr !4112
  br label %dec_label_pc_44b7b3, !insn.addr !4112

dec_label_pc_44b7b3:                              ; preds = %dec_label_pc_44b7af, %dec_label_pc_44b7a6
  %stack_var_-8.0.reload = load i32, i32* %stack_var_-8.0.reg2mem
  %11 = and i64 %options, 8
  %12 = icmp eq i64 %11, 0, !insn.addr !4113
  %13 = icmp eq i1 %12, false, !insn.addr !4114
  br i1 %13, label %dec_label_pc_44b7fb, label %dec_label_pc_44b7c2, !insn.addr !4114

dec_label_pc_44b7c2:                              ; preds = %dec_label_pc_44b7b3
  %14 = ptrtoint double* %value to i32, !insn.addr !4115
  %15 = call i32 @function_4030f8(i32 %14, i32 %2, i32 %0, i32 %1, i32 %3), !insn.addr !4116
  %16 = icmp eq i32 %15, 0, !insn.addr !4117
  br i1 %16, label %dec_label_pc_44b7fb, label %dec_label_pc_44b7cd, !insn.addr !4118

dec_label_pc_44b7cd:                              ; preds = %dec_label_pc_44b7c2
  %17 = add i32 %14, 4, !insn.addr !4119
  %18 = inttoptr i32 %17 to i32*, !insn.addr !4119
  %19 = load i32, i32* %18, align 4, !insn.addr !4119
  %20 = icmp slt i32 %19, 0, !insn.addr !4120
  %21 = icmp ne i32 %stack_var_-8.0.reload, 0, !insn.addr !4121
  %22 = call i32 @fp_format_nan_or_infinity(i32 %15, i1 %20, i8* nonnull %result_buffer, i32 %result_buffer_count, i1 %21), !insn.addr !4121
  store i32 %22, i32* %eax.0.reg2mem, !insn.addr !4122
  br label %dec_label_pc_44b893, !insn.addr !4122

dec_label_pc_44b7fb:                              ; preds = %dec_label_pc_44b7c2, %dec_label_pc_44b7b3
  %23 = and i64 %options, 16
  %24 = icmp eq i64 %23, 0, !insn.addr !4123
  %25 = select i1 %24, i32 2, i32 3, !insn.addr !4124
  %26 = icmp sgt i32 %format, 97, !insn.addr !4125
  br i1 %26, label %dec_label_pc_44b83a, label %dec_label_pc_44b812, !insn.addr !4125

dec_label_pc_44b812:                              ; preds = %dec_label_pc_44b7fb
  switch i32 %format, label %dec_label_pc_44b819 [
    i32 97, label %dec_label_pc_44b81e
    i32 65, label %dec_label_pc_44b81e
  ]

dec_label_pc_44b819:                              ; preds = %dec_label_pc_44b812
  %27 = add i32 %format, -69, !insn.addr !4126
  store i32 %27, i32* %storemerge14.in.reg2mem, !insn.addr !4127
  br label %dec_label_pc_44b83d, !insn.addr !4127

dec_label_pc_44b81e:                              ; preds = %dec_label_pc_44b812, %dec_label_pc_44b812
  %28 = icmp ne i32 %stack_var_-8.0.reload, 0, !insn.addr !4128
  %29 = call i32 @fp_format_a(double* %value, i8* nonnull %result_buffer, i32 %result_buffer_count, i8* nonnull %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i1 %28, i32 %25, i32 %locale), !insn.addr !4128
  store i32 %29, i32* %eax.0.reg2mem, !insn.addr !4129
  br label %dec_label_pc_44b893, !insn.addr !4129

dec_label_pc_44b83a:                              ; preds = %dec_label_pc_44b7fb
  %30 = add i32 %format, -101, !insn.addr !4130
  store i32 %30, i32* %storemerge14.in.reg2mem, !insn.addr !4130
  br label %dec_label_pc_44b83d, !insn.addr !4130

dec_label_pc_44b83d:                              ; preds = %dec_label_pc_44b83a, %dec_label_pc_44b819
  %storemerge14.in.reload = load i32, i32* %storemerge14.in.reg2mem
  switch i32 %storemerge14.in.reload, label %dec_label_pc_44b847 [
    i32 0, label %dec_label_pc_44b878
    i32 1, label %dec_label_pc_44b860
  ]

dec_label_pc_44b847:                              ; preds = %dec_label_pc_44b83d
  %31 = icmp ne i32 %stack_var_-8.0.reload, 0, !insn.addr !4131
  %32 = call i32 @fp_format_g(double* %value, i8* nonnull %result_buffer, i32 %result_buffer_count, i8* nonnull %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i1 %31, i32 %25, i32 %locale), !insn.addr !4131
  store i32 %32, i32* %eax.0.reg2mem, !insn.addr !4132
  br label %dec_label_pc_44b893, !insn.addr !4132

dec_label_pc_44b860:                              ; preds = %dec_label_pc_44b83d
  %33 = call i32 @fp_format_f(double* %value, i8* nonnull %result_buffer, i32 %result_buffer_count, i8* nonnull %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i32 %locale), !insn.addr !4133
  store i32 %33, i32* %eax.0.reg2mem, !insn.addr !4134
  br label %dec_label_pc_44b893, !insn.addr !4134

dec_label_pc_44b878:                              ; preds = %dec_label_pc_44b83d
  %34 = icmp ne i32 %stack_var_-8.0.reload, 0, !insn.addr !4135
  %35 = call i32 @fp_format_e(double* %value, i8* nonnull %result_buffer, i32 %result_buffer_count, i8* nonnull %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i1 %34, i32 %25, i32 %locale), !insn.addr !4135
  store i32 %35, i32* %eax.0.reg2mem, !insn.addr !4135
  br label %dec_label_pc_44b893, !insn.addr !4135

dec_label_pc_44b893:                              ; preds = %dec_label_pc_44b7cd, %dec_label_pc_44b860, %dec_label_pc_44b878, %dec_label_pc_44b847, %dec_label_pc_44b81e, %dec_label_pc_44b76c
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !4136
}

define i32 @_fileno(i32 %public_stream) local_unnamed_addr {
dec_label_pc_44bb7f:
  %0 = icmp eq i32 %public_stream, 0, !insn.addr !4137
  %1 = icmp eq i1 %0, false, !insn.addr !4138
  br i1 %1, label %dec_label_pc_44bba0, label %dec_label_pc_44bb8b, !insn.addr !4138

dec_label_pc_44bb8b:                              ; preds = %dec_label_pc_44bb7f
  %2 = call i32* @_errno(), !insn.addr !4139
  store i32 22, i32* %2, align 4, !insn.addr !4140
  call void @_invalid_parameter_noinfo(), !insn.addr !4141
  ret i32 -1, !insn.addr !4142

dec_label_pc_44bba0:                              ; preds = %dec_label_pc_44bb7f
  %3 = add i32 %public_stream, 16, !insn.addr !4143
  %4 = inttoptr i32 %3 to i32*, !insn.addr !4143
  %5 = load i32, i32* %4, align 4, !insn.addr !4143
  ret i32 %5, !insn.addr !4144
}

define i32 @_fputc_nolock(i32 %c, i32 %public_stream) local_unnamed_addr {
dec_label_pc_44bbaf:
  %0 = add i32 %public_stream, 8, !insn.addr !4145
  %1 = inttoptr i32 %0 to i32*, !insn.addr !4145
  %2 = load i32, i32* %1, align 4, !insn.addr !4145
  %3 = add i32 %2, -1, !insn.addr !4145
  %4 = icmp slt i32 %3, 0, !insn.addr !4145
  store i32 %3, i32* %1, align 4, !insn.addr !4145
  %5 = icmp eq i1 %4, false, !insn.addr !4146
  br i1 %5, label %dec_label_pc_44bbca, label %dec_label_pc_44bbbd, !insn.addr !4146

dec_label_pc_44bbbd:                              ; preds = %dec_label_pc_44bbaf
  %6 = call i32 @function_40124e(), !insn.addr !4147
  ret i32 %6, !insn.addr !4148

dec_label_pc_44bbca:                              ; preds = %dec_label_pc_44bbaf
  %7 = inttoptr i32 %public_stream to i32*, !insn.addr !4149
  %8 = load i32, i32* %7, align 4, !insn.addr !4149
  %9 = and i32 %c, 255, !insn.addr !4150
  %10 = trunc i32 %c to i8, !insn.addr !4151
  %11 = inttoptr i32 %8 to i8*, !insn.addr !4151
  store i8 %10, i8* %11, align 1, !insn.addr !4151
  %12 = load i32, i32* %7, align 4, !insn.addr !4152
  %13 = add i32 %12, 1, !insn.addr !4152
  store i32 %13, i32* %7, align 4, !insn.addr !4152
  ret i32 %9, !insn.addr !4153
}

define i1 @__acrt_stdio_begin_temporary_buffering_nolock(i32 %public_stream) local_unnamed_addr {
dec_label_pc_44bde4:
  %storemerge.reg2mem = alloca i1, !insn.addr !4154
  %eax.1.reg2mem = alloca i32, !insn.addr !4154
  %storemerge1.reg2mem = alloca i32, !insn.addr !4154
  %0 = call i32 @_fileno(i32 %public_stream), !insn.addr !4155
  %1 = call i32 @_isatty(i32 %0), !insn.addr !4156
  %2 = icmp eq i32 %1, 0, !insn.addr !4157
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !4158
  br i1 %2, label %dec_label_pc_44be92, label %dec_label_pc_44be05, !insn.addr !4158

dec_label_pc_44be05:                              ; preds = %dec_label_pc_44bde4
  %3 = call i32* @__acrt_iob_func(i32 1), !insn.addr !4159
  %4 = ptrtoint i32* %3 to i32, !insn.addr !4159
  %5 = icmp eq i32 %4, %public_stream, !insn.addr !4160
  %6 = icmp eq i1 %5, false, !insn.addr !4161
  store i32 ptrtoint (i32* @__acrt_stdout_buffer to i32), i32* %storemerge1.reg2mem, !insn.addr !4161
  br i1 %6, label %dec_label_pc_44be1b, label %dec_label_pc_44be2b, !insn.addr !4161

dec_label_pc_44be1b:                              ; preds = %dec_label_pc_44be05
  %7 = call i32* @__acrt_iob_func(i32 2), !insn.addr !4162
  %8 = ptrtoint i32* %7 to i32, !insn.addr !4162
  %9 = icmp eq i32 %8, %public_stream, !insn.addr !4163
  %10 = icmp eq i1 %9, false, !insn.addr !4164
  store i32 ptrtoint (i32* @__acrt_stderr_buffer to i32), i32* %storemerge1.reg2mem, !insn.addr !4164
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !4164
  br i1 %10, label %dec_label_pc_44be92, label %dec_label_pc_44be2b, !insn.addr !4164

dec_label_pc_44be2b:                              ; preds = %dec_label_pc_44be1b, %dec_label_pc_44be05
  %11 = load i32, i32* @_cflush, align 4, !insn.addr !4165
  %12 = add i32 %11, 1, !insn.addr !4165
  store i32 %12, i32* @_cflush, align 4, !insn.addr !4165
  %13 = add i32 %public_stream, 12, !insn.addr !4166
  %14 = inttoptr i32 %13 to i32*, !insn.addr !4167
  %15 = load i32, i32* %14, align 4, !insn.addr !4167
  %16 = and i32 %15, 1216, !insn.addr !4168
  %17 = icmp eq i32 %16, 0, !insn.addr !4168
  %18 = icmp eq i1 %17, false, !insn.addr !4169
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !4169
  br i1 %18, label %dec_label_pc_44be92, label %dec_label_pc_44be3e, !insn.addr !4169

dec_label_pc_44be3e:                              ; preds = %dec_label_pc_44be2b
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %19 = or i32 %15, 642, !insn.addr !4170
  store i32 %19, i32* %14, align 4, !insn.addr !4170
  %20 = inttoptr i32 %storemerge1.reload to i32*, !insn.addr !4171
  %21 = load i32, i32* %20, align 4, !insn.addr !4171
  %22 = icmp eq i32 %21, 0, !insn.addr !4172
  %23 = icmp eq i1 %22, false, !insn.addr !4173
  store i32 %21, i32* %eax.1.reg2mem, !insn.addr !4173
  br i1 %23, label %dec_label_pc_44be79, label %dec_label_pc_44be4c, !insn.addr !4173

dec_label_pc_44be4c:                              ; preds = %dec_label_pc_44be3e
  %24 = call i32* @_malloc_base(i32 4096), !insn.addr !4174
  %25 = ptrtoint i32* %24 to i32, !insn.addr !4174
  store i32 %25, i32* %20, align 4, !insn.addr !4175
  call void @_free_base(i32* null), !insn.addr !4176
  %26 = load i32, i32* %20, align 4, !insn.addr !4177
  %27 = icmp eq i32 %26, 0, !insn.addr !4178
  %28 = icmp eq i1 %27, false, !insn.addr !4179
  store i32 %26, i32* %eax.1.reg2mem, !insn.addr !4179
  br i1 %28, label %dec_label_pc_44be79, label %dec_label_pc_44be67, !insn.addr !4179

dec_label_pc_44be67:                              ; preds = %dec_label_pc_44be4c
  %29 = add i32 %public_stream, 20, !insn.addr !4180
  %30 = add i32 %public_stream, 8, !insn.addr !4181
  %31 = inttoptr i32 %30 to i32*, !insn.addr !4181
  store i32 2, i32* %31, align 4, !insn.addr !4181
  %32 = add i32 %public_stream, 4, !insn.addr !4182
  %33 = inttoptr i32 %32 to i32*, !insn.addr !4182
  store i32 %29, i32* %33, align 4, !insn.addr !4182
  %34 = inttoptr i32 %public_stream to i32*, !insn.addr !4183
  store i32 %29, i32* %34, align 4, !insn.addr !4183
  %35 = add i32 %public_stream, 24, !insn.addr !4184
  %36 = inttoptr i32 %35 to i32*, !insn.addr !4184
  store i32 2, i32* %36, align 4, !insn.addr !4184
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !4184
  br label %dec_label_pc_44be92, !insn.addr !4184

dec_label_pc_44be79:                              ; preds = %dec_label_pc_44be4c, %dec_label_pc_44be3e
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %37 = add i32 %public_stream, 4, !insn.addr !4185
  %38 = inttoptr i32 %37 to i32*, !insn.addr !4185
  store i32 %eax.1.reload, i32* %38, align 4, !insn.addr !4185
  %39 = load i32, i32* %20, align 4, !insn.addr !4186
  %40 = inttoptr i32 %public_stream to i32*, !insn.addr !4187
  store i32 %39, i32* %40, align 4, !insn.addr !4187
  %41 = add i32 %public_stream, 8, !insn.addr !4188
  %42 = inttoptr i32 %41 to i32*, !insn.addr !4188
  store i32 4096, i32* %42, align 4, !insn.addr !4188
  %43 = add i32 %public_stream, 24, !insn.addr !4189
  %44 = inttoptr i32 %43 to i32*, !insn.addr !4189
  store i32 4096, i32* %44, align 4, !insn.addr !4189
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !4190
  br label %dec_label_pc_44be92, !insn.addr !4190

dec_label_pc_44be92:                              ; preds = %dec_label_pc_44bde4, %dec_label_pc_44be1b, %dec_label_pc_44be2b, %dec_label_pc_44be67, %dec_label_pc_44be79
  %storemerge.reload = load i1, i1* %storemerge.reg2mem
  ret i1 %storemerge.reload, !insn.addr !4191
}

define void @__acrt_stdio_end_temporary_buffering_nolock(i1 %flag, i32 %public_stream) local_unnamed_addr {
dec_label_pc_44bec3:
  %0 = icmp eq i1 %flag, false, !insn.addr !4192
  br i1 %0, label %dec_label_pc_44befb, label %dec_label_pc_44bece, !insn.addr !4193

dec_label_pc_44bece:                              ; preds = %dec_label_pc_44bec3
  %1 = add i32 %public_stream, 12, !insn.addr !4194
  %2 = inttoptr i32 %1 to i32*, !insn.addr !4195
  %3 = load i32, i32* %2, align 4, !insn.addr !4195
  %4 = and i32 %3, 512
  %5 = icmp eq i32 %4, 0, !insn.addr !4196
  br i1 %5, label %dec_label_pc_44befb, label %dec_label_pc_44bee0, !insn.addr !4197

dec_label_pc_44bee0:                              ; preds = %dec_label_pc_44bece
  %6 = call i32 @function_402f68(), !insn.addr !4198
  %7 = load i32, i32* %2, align 4, !insn.addr !4199
  %8 = and i32 %7, -641, !insn.addr !4199
  store i32 %8, i32* %2, align 4, !insn.addr !4199
  %9 = add i32 %public_stream, 24, !insn.addr !4200
  %10 = inttoptr i32 %9 to i32*, !insn.addr !4200
  store i32 0, i32* %10, align 4, !insn.addr !4200
  %11 = add i32 %public_stream, 4, !insn.addr !4201
  %12 = inttoptr i32 %11 to i32*, !insn.addr !4201
  store i32 0, i32* %12, align 4, !insn.addr !4201
  %13 = inttoptr i32 %public_stream to i32*, !insn.addr !4202
  store i32 0, i32* %13, align 4, !insn.addr !4202
  br label %dec_label_pc_44befb, !insn.addr !4202

dec_label_pc_44befb:                              ; preds = %dec_label_pc_44bece, %dec_label_pc_44bee0, %dec_label_pc_44bec3
  ret void, !insn.addr !4203
}

define i16* @__pctype_func() local_unnamed_addr {
dec_label_pc_44bf39:
  %stack_var_-8 = alloca i32, align 4
  %0 = call i32 @___acrt_getptd(), !insn.addr !4204
  %1 = add i32 %0, 76, !insn.addr !4205
  %2 = inttoptr i32 %1 to i32*, !insn.addr !4205
  %3 = load i32, i32* %2, align 4, !insn.addr !4205
  store i32 %3, i32* %stack_var_-8, align 4, !insn.addr !4206
  %4 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !4207
  %5 = call i32 @function_403099(i32 %0, i32 %4), !insn.addr !4208
  %6 = load i32, i32* %stack_var_-8, align 4, !insn.addr !4209
  %7 = inttoptr i32 %6 to i32*, !insn.addr !4210
  %8 = load i32, i32* %7, align 4, !insn.addr !4210
  %9 = inttoptr i32 %8 to i16*, !insn.addr !4211
  ret i16* %9, !insn.addr !4211
}

define i32 @_isctype_l(i32 %c, i32 %mask, i32 %locale) local_unnamed_addr {
dec_label_pc_44bfab:
  %0 = call i8 @__decompiler_undefined_function_8()
  %character_type_-16 = alloca [3 x i16], align 2
  %buffer_-20 = alloca [3 x i8], align 1
  %locale_update_-32 = alloca i32, align 4
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @function_403d91(i32 %locale), !insn.addr !4212
  %c.off = add i32 %c, 1
  %4 = icmp ugt i32 %c.off, 256
  br i1 %4, label %dec_label_pc_44bfe3, label %dec_label_pc_44c057, !insn.addr !4213

dec_label_pc_44bfe3:                              ; preds = %dec_label_pc_44bfab
  %5 = sdiv i32 %c, 256, !insn.addr !4214
  %6 = inttoptr i32 %1 to i32*, !insn.addr !4215
  %7 = load i32, i32* %6, align 4, !insn.addr !4215
  %8 = mul i32 %5, 2, !insn.addr !4216
  %9 = and i32 %8, 510, !insn.addr !4217
  %10 = add i32 %7, %9, !insn.addr !4217
  %11 = inttoptr i32 %10 to i16*, !insn.addr !4217
  %12 = load i16, i16* %11, align 2, !insn.addr !4217
  %13 = icmp sgt i16 %12, -1, !insn.addr !4218
  %14 = trunc i32 %5 to i8
  %15 = insertvalue [3 x i8] undef, i8 %14, 0
  %16 = trunc i32 %c to i8
  %17 = insertvalue [3 x i8] undef, i8 %16, 0
  %storemerge = select i1 %13, [3 x i8] %17, [3 x i8] %15
  %storemerge3 = select i1 %13, i32 1, i32 2
  store [3 x i8] %storemerge, [3 x i8]* %buffer_-20, align 1
  store [3 x i16] [i16 0, i16 undef, i16 undef], [3 x i16]* %character_type_-16, align 2, !insn.addr !4219
  %18 = add i32 %1, 8, !insn.addr !4220
  %19 = inttoptr i32 %18 to i32*, !insn.addr !4220
  %20 = load i32, i32* %19, align 4, !insn.addr !4220
  %21 = getelementptr inbounds [3 x i16], [3 x i16]* %character_type_-16, i32 0, i32 0
  %22 = getelementptr inbounds [3 x i8], [3 x i8]* %buffer_-20, i32 0, i32 0
  %23 = ptrtoint i32* %locale_update_-32 to i32, !insn.addr !4221
  %24 = call i32 @function_4011c2(i32 %23, i32 1, i8* nonnull %22, i32 %storemerge3, i16* nonnull %21, i32 %20, i32 1), !insn.addr !4222
  %25 = icmp eq i32 %24, 0, !insn.addr !4223
  %26 = icmp eq i1 %25, false, !insn.addr !4224
  br i1 %26, label %dec_label_pc_44c057, label %dec_label_pc_44c040, !insn.addr !4224

dec_label_pc_44c040:                              ; preds = %dec_label_pc_44bfe3
  %27 = trunc i32 %24 to i8, !insn.addr !4225
  %28 = icmp eq i8 %0, %27, !insn.addr !4225
  br i1 %28, label %dec_label_pc_44c06a, label %dec_label_pc_44c045, !insn.addr !4226

dec_label_pc_44c045:                              ; preds = %dec_label_pc_44c040
  %29 = add i32 %2, 848, !insn.addr !4227
  %30 = inttoptr i32 %29 to i32*, !insn.addr !4227
  %31 = load i32, i32* %30, align 4, !insn.addr !4227
  %32 = and i32 %31, -3, !insn.addr !4227
  store i32 %32, i32* %30, align 4, !insn.addr !4227
  br label %dec_label_pc_44c06a, !insn.addr !4227

dec_label_pc_44c057:                              ; preds = %dec_label_pc_44bfe3, %dec_label_pc_44bfab
  %33 = icmp eq i8 %0, 0, !insn.addr !4228
  br i1 %33, label %dec_label_pc_44c06a, label %dec_label_pc_44c060, !insn.addr !4229

dec_label_pc_44c060:                              ; preds = %dec_label_pc_44c057
  %34 = add i32 %2, 848, !insn.addr !4230
  %35 = inttoptr i32 %34 to i32*, !insn.addr !4230
  %36 = load i32, i32* %35, align 4, !insn.addr !4230
  %37 = and i32 %36, -3, !insn.addr !4230
  store i32 %37, i32* %35, align 4, !insn.addr !4230
  br label %dec_label_pc_44c06a, !insn.addr !4230

dec_label_pc_44c06a:                              ; preds = %dec_label_pc_44c040, %dec_label_pc_44c045, %dec_label_pc_44c060, %dec_label_pc_44c057
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !4231
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !4232
}

define i32 @_strnicoll(i8* %_string1, i8* %_string2, i32 %count) local_unnamed_addr {
dec_label_pc_44e47c:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = load i32, i32* @__acrt_locale_changed_data, align 4, !insn.addr !4233
  %2 = icmp eq i32 %1, 0, !insn.addr !4233
  %3 = icmp eq i1 %2, false, !insn.addr !4234
  br i1 %3, label %dec_label_pc_44e490, label %dec_label_pc_44e48a, !insn.addr !4234

dec_label_pc_44e48a:                              ; preds = %dec_label_pc_44e47c
  %4 = inttoptr i32 %0 to i8*, !insn.addr !4235
  %5 = call i32 @_strnicmp(i8* %4, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !4236
  ret i32 %5, !insn.addr !4236

dec_label_pc_44e490:                              ; preds = %dec_label_pc_44e47c
  %6 = call i32 @_strnicoll_l(i8* %_string1, i8* %_string2, i32 %count, i32 0), !insn.addr !4237
  ret i32 %6, !insn.addr !4238
}

define i32 @_strnicoll_l(i8* %_string1, i8* %_string2, i32 %count, i32 %plocinfo) local_unnamed_addr {
dec_label_pc_44e4af:
  %esi.0.reg2mem = alloca i32, !insn.addr !4239
  %0 = call i8 @__decompiler_undefined_function_8()
  %_loc_update_-16 = alloca i32, align 4
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @function_403d91(i32 %plocinfo), !insn.addr !4240
  %4 = icmp eq i32 %count, 0, !insn.addr !4241
  %5 = icmp eq i1 %4, false, !insn.addr !4242
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !4242
  br i1 %5, label %dec_label_pc_44e4d3, label %dec_label_pc_44e560, !insn.addr !4242

dec_label_pc_44e4d3:                              ; preds = %dec_label_pc_44e4af
  %6 = icmp eq i8* %_string1, null, !insn.addr !4243
  br i1 %6, label %dec_label_pc_44e4e1, label %dec_label_pc_44e4da, !insn.addr !4244

dec_label_pc_44e4da:                              ; preds = %dec_label_pc_44e4d3
  %7 = icmp eq i8* %_string2, null, !insn.addr !4245
  %8 = icmp eq i1 %7, false, !insn.addr !4246
  br i1 %8, label %dec_label_pc_44e4f8, label %dec_label_pc_44e4e1, !insn.addr !4246

dec_label_pc_44e4e1:                              ; preds = %dec_label_pc_44e4da, %dec_label_pc_44e4d3
  %9 = call i32* @_errno(), !insn.addr !4247
  store i32 22, i32* %9, align 4, !insn.addr !4248
  call void @_invalid_parameter_noinfo(), !insn.addr !4249
  store i32 2147483647, i32* %esi.0.reg2mem, !insn.addr !4250
  br label %dec_label_pc_44e560, !insn.addr !4250

dec_label_pc_44e4f8:                              ; preds = %dec_label_pc_44e4da
  %10 = icmp sgt i32 %count, -1
  br i1 %10, label %dec_label_pc_44e513, label %dec_label_pc_44e501, !insn.addr !4251

dec_label_pc_44e501:                              ; preds = %dec_label_pc_44e4f8
  %11 = call i32* @_errno(), !insn.addr !4252
  store i32 22, i32* %11, align 4, !insn.addr !4253
  call void @_invalid_parameter_noinfo(), !insn.addr !4254
  store i32 2147483647, i32* %esi.0.reg2mem, !insn.addr !4255
  br label %dec_label_pc_44e560, !insn.addr !4255

dec_label_pc_44e513:                              ; preds = %dec_label_pc_44e4f8
  %12 = add i32 %1, 164, !insn.addr !4256
  %13 = inttoptr i32 %12 to i32*, !insn.addr !4256
  %14 = load i32, i32* %13, align 4, !insn.addr !4256
  %15 = icmp eq i32 %14, 0, !insn.addr !4257
  %16 = icmp eq i1 %15, false, !insn.addr !4258
  br i1 %16, label %dec_label_pc_44e533, label %dec_label_pc_44e520, !insn.addr !4258

dec_label_pc_44e520:                              ; preds = %dec_label_pc_44e513
  %17 = ptrtoint i32* %_loc_update_-16 to i32, !insn.addr !4259
  %18 = call i32 @_strnicmp_l(i8* nonnull %_string1, i8* %_string2, i32 %count, i32 %17), !insn.addr !4260
  store i32 %18, i32* %esi.0.reg2mem, !insn.addr !4261
  br label %dec_label_pc_44e560, !insn.addr !4261

dec_label_pc_44e533:                              ; preds = %dec_label_pc_44e513
  %19 = ptrtoint i8* %_string1 to i32, !insn.addr !4262
  %20 = ptrtoint i8* %_string2 to i32, !insn.addr !4263
  %21 = add i32 %1, 16, !insn.addr !4264
  %22 = inttoptr i32 %21 to i32*, !insn.addr !4264
  %23 = load i32, i32* %22, align 4, !insn.addr !4264
  %24 = call i32 @function_401fc3(i32* nonnull %_loc_update_-16, i32 %14, i32 4097, i32 %19, i32 %count, i32 %20, i32 %count, i32 %23), !insn.addr !4265
  %25 = icmp eq i32 %24, 0, !insn.addr !4266
  %26 = icmp eq i1 %25, false, !insn.addr !4267
  br i1 %26, label %dec_label_pc_44e55d, label %dec_label_pc_44e550, !insn.addr !4267

dec_label_pc_44e550:                              ; preds = %dec_label_pc_44e533
  %27 = call i32* @_errno(), !insn.addr !4268
  store i32 22, i32* %27, align 4, !insn.addr !4269
  store i32 2147483647, i32* %esi.0.reg2mem, !insn.addr !4270
  br label %dec_label_pc_44e560, !insn.addr !4270

dec_label_pc_44e55d:                              ; preds = %dec_label_pc_44e533
  %28 = add i32 %24, -2, !insn.addr !4271
  store i32 %28, i32* %esi.0.reg2mem, !insn.addr !4271
  br label %dec_label_pc_44e560, !insn.addr !4271

dec_label_pc_44e560:                              ; preds = %dec_label_pc_44e4af, %dec_label_pc_44e55d, %dec_label_pc_44e550, %dec_label_pc_44e520, %dec_label_pc_44e501, %dec_label_pc_44e4e1
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %29 = icmp eq i8 %0, 0, !insn.addr !4272
  br i1 %29, label %dec_label_pc_44e570, label %dec_label_pc_44e566, !insn.addr !4273

dec_label_pc_44e566:                              ; preds = %dec_label_pc_44e560
  %30 = add i32 %2, 848, !insn.addr !4274
  %31 = inttoptr i32 %30 to i32*, !insn.addr !4274
  %32 = load i32, i32* %31, align 4, !insn.addr !4274
  %33 = and i32 %32, -3, !insn.addr !4274
  store i32 %33, i32* %31, align 4, !insn.addr !4274
  br label %dec_label_pc_44e570, !insn.addr !4274

dec_label_pc_44e570:                              ; preds = %dec_label_pc_44e566, %dec_label_pc_44e560
  ret i32 %esi.0.reload, !insn.addr !4275
}

declare void @__acrt_lock(i32) local_unnamed_addr

declare void @__acrt_unlock(i32) local_unnamed_addr

define i32 @"__acrt_convert_wcs_mbs_cp<char,wchar_t,<lambda_62f6974d9771e494a5ea317cc32e971c>,__crt_win32_buffer_internal_dynamic_resizing>_2"(i8* %null_terminated_input_string, i32* %win32_buffer, i32* %cvt_func, i32 %code_page) local_unnamed_addr {
dec_label_pc_44eb5d:
  %eax.0.reg2mem = alloca i32, !insn.addr !4276
  %esp.1.reg2mem = alloca i32, !insn.addr !4276
  %.reg2mem = alloca i32, !insn.addr !4276
  %.pre-phi4.reg2mem = alloca i32*, !insn.addr !4276
  %0 = ptrtoint i32* %win32_buffer to i32
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %1 = icmp eq i8* %null_terminated_input_string, null, !insn.addr !4277
  %2 = icmp eq i1 %1, false, !insn.addr !4278
  br i1 %2, label %dec_label_pc_44eb85, label %dec_label_pc_44eb6b, !insn.addr !4278

dec_label_pc_44eb6b:                              ; preds = %dec_label_pc_44eb5d
  %3 = call i32 @function_40250e(), !insn.addr !4279
  %4 = add i32 %0, 8, !insn.addr !4280
  %5 = inttoptr i32 %4 to i32*, !insn.addr !4280
  store i32 0, i32* %5, align 4, !insn.addr !4280
  %6 = add i32 %0, 12, !insn.addr !4281
  %7 = inttoptr i32 %6 to i32*, !insn.addr !4281
  store i32 0, i32* %7, align 4, !insn.addr !4281
  br label %dec_label_pc_44eb7d, !insn.addr !4281

dec_label_pc_44eb7d:                              ; preds = %dec_label_pc_44eba1, %dec_label_pc_44eb6b
  %8 = add i32 %0, 16, !insn.addr !4282
  %9 = inttoptr i32 %8 to i32*, !insn.addr !4282
  store i32 0, i32* %9, align 4, !insn.addr !4282
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !4283
  br label %dec_label_pc_44ec0b, !insn.addr !4283

dec_label_pc_44eb85:                              ; preds = %dec_label_pc_44eb5d
  %10 = load i8, i8* %null_terminated_input_string, align 1, !insn.addr !4284
  %11 = icmp eq i8 %10, 0, !insn.addr !4284
  %12 = icmp eq i1 %11, false, !insn.addr !4285
  br i1 %12, label %dec_label_pc_44ebab, label %dec_label_pc_44eb8c, !insn.addr !4285

dec_label_pc_44eb8c:                              ; preds = %dec_label_pc_44eb85
  %13 = add i32 %0, 12, !insn.addr !4286
  %14 = inttoptr i32 %13 to i32*, !insn.addr !4286
  %15 = load i32, i32* %14, align 4, !insn.addr !4286
  %16 = icmp eq i32 %15, 0, !insn.addr !4286
  %17 = icmp eq i1 %16, false, !insn.addr !4287
  br i1 %17, label %dec_label_pc_44eba1, label %dec_label_pc_44eb94, !insn.addr !4287

dec_label_pc_44eb94:                              ; preds = %dec_label_pc_44eb8c
  store i32 1, i32* %stack_var_-16, align 4, !insn.addr !4288
  %18 = call i32 @function_402bf3(i32 1), !insn.addr !4289
  %19 = icmp eq i32 %18, 0, !insn.addr !4290
  %20 = icmp eq i1 %19, false, !insn.addr !4291
  store i32 %18, i32* %eax.0.reg2mem, !insn.addr !4291
  br i1 %20, label %dec_label_pc_44ec0b, label %dec_label_pc_44eba1, !insn.addr !4291

dec_label_pc_44eba1:                              ; preds = %dec_label_pc_44eb94, %dec_label_pc_44eb8c
  %21 = add i32 %0, 8, !insn.addr !4292
  %22 = inttoptr i32 %21 to i32*, !insn.addr !4292
  %23 = load i32, i32* %22, align 4, !insn.addr !4292
  %24 = inttoptr i32 %23 to i16*, !insn.addr !4293
  store i16 0, i16* %24, align 2, !insn.addr !4293
  br label %dec_label_pc_44eb7d, !insn.addr !4294

dec_label_pc_44ebab:                              ; preds = %dec_label_pc_44eb85
  %25 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !4295
  store i32 0, i32* %stack_var_-16, align 4, !insn.addr !4296
  %26 = call i32 @function_401712(), !insn.addr !4297
  %27 = icmp eq i32 %26, 0, !insn.addr !4298
  %28 = icmp eq i1 %27, false, !insn.addr !4299
  br i1 %28, label %dec_label_pc_44ebd7, label %dec_label_pc_44ebab.dec_label_pc_44ebc1_crit_edge, !insn.addr !4299

dec_label_pc_44ebab.dec_label_pc_44ebc1_crit_edge: ; preds = %dec_label_pc_44ebab
  %.pre2 = add i32 %25, -4, !insn.addr !4300
  %.pre3 = inttoptr i32 %.pre2 to i32*, !insn.addr !4300
  store i32* %.pre3, i32** %.pre-phi4.reg2mem
  br label %dec_label_pc_44ebc1

dec_label_pc_44ebc1:                              ; preds = %dec_label_pc_44ebab.dec_label_pc_44ebc1_crit_edge, %dec_label_pc_44ebeb
  %.pre-phi4.reload = load i32*, i32** %.pre-phi4.reg2mem
  %29 = call i32 @GetLastError(), !insn.addr !4301
  store i32 %29, i32* %.pre-phi4.reload, align 4, !insn.addr !4300
  %30 = call i32 @function_403512(), !insn.addr !4302
  %31 = call i32* @_errno(), !insn.addr !4303
  %32 = load i32, i32* %31, align 4, !insn.addr !4304
  store i32 %32, i32* %eax.0.reg2mem, !insn.addr !4305
  br label %dec_label_pc_44ec0b, !insn.addr !4305

dec_label_pc_44ebd7:                              ; preds = %dec_label_pc_44ebab
  %33 = add i32 %0, 12, !insn.addr !4306
  %34 = inttoptr i32 %33 to i32*, !insn.addr !4306
  %35 = load i32, i32* %34, align 4, !insn.addr !4306
  %36 = icmp ugt i32 %26, %35
  store i32 %35, i32* %.reg2mem, !insn.addr !4307
  store i32 %25, i32* %esp.1.reg2mem, !insn.addr !4307
  br i1 %36, label %dec_label_pc_44ebdf, label %dec_label_pc_44ebeb, !insn.addr !4307

dec_label_pc_44ebdf:                              ; preds = %dec_label_pc_44ebd7
  store i32 %26, i32* %stack_var_-16, align 4, !insn.addr !4308
  %37 = call i32 @function_402bf3(i32 %26), !insn.addr !4309
  %38 = icmp eq i32 %37, 0, !insn.addr !4310
  %39 = icmp eq i1 %38, false, !insn.addr !4311
  store i32 %37, i32* %eax.0.reg2mem, !insn.addr !4311
  br i1 %39, label %dec_label_pc_44ec0b, label %dec_label_pc_44ebdf.dec_label_pc_44ebeb_crit_edge, !insn.addr !4311

dec_label_pc_44ebdf.dec_label_pc_44ebeb_crit_edge: ; preds = %dec_label_pc_44ebdf
  %40 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !4308
  %.pre = load i32, i32* %34, align 4
  store i32 %.pre, i32* %.reg2mem
  store i32 %40, i32* %esp.1.reg2mem
  br label %dec_label_pc_44ebeb

dec_label_pc_44ebeb:                              ; preds = %dec_label_pc_44ebdf.dec_label_pc_44ebeb_crit_edge, %dec_label_pc_44ebd7
  %41 = ptrtoint i32* %cvt_func to i32
  %42 = ptrtoint i8* %null_terminated_input_string to i32
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %.reload = load i32, i32* %.reg2mem, !insn.addr !4312
  %43 = add i32 %esp.1.reload, -4
  %44 = inttoptr i32 %43 to i32*
  store i32 %.reload, i32* %44, align 4, !insn.addr !4312
  %45 = add i32 %0, 8, !insn.addr !4313
  %46 = inttoptr i32 %45 to i32*, !insn.addr !4313
  %47 = load i32, i32* %46, align 4, !insn.addr !4313
  %48 = add i32 %esp.1.reload, -8, !insn.addr !4313
  %49 = inttoptr i32 %48 to i32*, !insn.addr !4313
  store i32 %47, i32* %49, align 4, !insn.addr !4313
  %50 = add i32 %esp.1.reload, -12, !insn.addr !4314
  %51 = inttoptr i32 %50 to i32*, !insn.addr !4314
  store i32 -1, i32* %51, align 4, !insn.addr !4314
  %52 = add i32 %esp.1.reload, -16, !insn.addr !4315
  %53 = inttoptr i32 %52 to i32*, !insn.addr !4315
  store i32 %42, i32* %53, align 4, !insn.addr !4315
  %54 = add i32 %esp.1.reload, -20, !insn.addr !4316
  %55 = inttoptr i32 %54 to i32*, !insn.addr !4316
  store i32 9, i32* %55, align 4, !insn.addr !4316
  %56 = add i32 %esp.1.reload, -24, !insn.addr !4317
  %57 = inttoptr i32 %56 to i32*, !insn.addr !4317
  store i32 %41, i32* %57, align 4, !insn.addr !4317
  %58 = call i32 @function_401712(), !insn.addr !4318
  %59 = icmp eq i32 %58, 0, !insn.addr !4319
  store i32* %44, i32** %.pre-phi4.reg2mem, !insn.addr !4320
  br i1 %59, label %dec_label_pc_44ebc1, label %dec_label_pc_44ec05, !insn.addr !4320

dec_label_pc_44ec05:                              ; preds = %dec_label_pc_44ebeb
  %60 = add i32 %58, -1, !insn.addr !4321
  %61 = add i32 %0, 16, !insn.addr !4322
  %62 = inttoptr i32 %61 to i32*, !insn.addr !4322
  store i32 %60, i32* %62, align 4, !insn.addr !4322
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !4322
  br label %dec_label_pc_44ec0b, !insn.addr !4322

dec_label_pc_44ec0b:                              ; preds = %dec_label_pc_44eb7d, %dec_label_pc_44ec05, %dec_label_pc_44ebdf, %dec_label_pc_44ebc1, %dec_label_pc_44eb94
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !4323
}

define i32 @"__acrt_mbs_to_wcs_cp<__crt_win32_buffer_internal_dynamic_resizing>"(i8* %null_terminated_input_string, i32* %win32_buffer, i32 %code_page) local_unnamed_addr {
dec_label_pc_44ed3d:
  %mbs_to_wcs_-5 = alloca i32, align 4
  %0 = call i32 @"__acrt_convert_wcs_mbs_cp<char,wchar_t,<lambda_62f6974d9771e494a5ea317cc32e971c>,__crt_win32_buffer_internal_dynamic_resizing>_2"(i8* %null_terminated_input_string, i32* %win32_buffer, i32* nonnull %mbs_to_wcs_-5, i32 %code_page), !insn.addr !4324
  ret i32 %0, !insn.addr !4325
}

define i32 @__acrt_get_utf8_acp_compatibility_codepage() local_unnamed_addr {
dec_label_pc_44fc3b:
  %edx.0.reg2mem = alloca i32, !insn.addr !4326
  %0 = call i8 @__decompiler_undefined_function_8()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @function_403d91(i32 0), !insn.addr !4327
  %4 = add i32 %1, 8, !insn.addr !4328
  %5 = inttoptr i32 %4 to i32*, !insn.addr !4328
  %6 = load i32, i32* %5, align 4, !insn.addr !4328
  %7 = icmp eq i32 %6, 65001, !insn.addr !4328
  store i32 65001, i32* %edx.0.reg2mem, !insn.addr !4329
  br i1 %7, label %dec_label_pc_44fc66, label %dec_label_pc_44fc5a, !insn.addr !4329

dec_label_pc_44fc5a:                              ; preds = %dec_label_pc_44fc3b
  %8 = call i32 @function_40339b(), !insn.addr !4330
  %9 = icmp eq i32 %8, 0, !insn.addr !4331
  %spec.select = zext i1 %9 to i32
  store i32 %spec.select, i32* %edx.0.reg2mem
  br label %dec_label_pc_44fc66

dec_label_pc_44fc66:                              ; preds = %dec_label_pc_44fc5a, %dec_label_pc_44fc3b
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %10 = icmp eq i8 %0, 0, !insn.addr !4332
  br i1 %10, label %dec_label_pc_44fc76, label %dec_label_pc_44fc6c, !insn.addr !4333

dec_label_pc_44fc6c:                              ; preds = %dec_label_pc_44fc66
  %11 = add i32 %2, 848, !insn.addr !4334
  %12 = inttoptr i32 %11 to i32*, !insn.addr !4334
  %13 = load i32, i32* %12, align 4, !insn.addr !4334
  %14 = and i32 %13, -3, !insn.addr !4334
  store i32 %14, i32* %12, align 4, !insn.addr !4334
  br label %dec_label_pc_44fc76, !insn.addr !4334

dec_label_pc_44fc76:                              ; preds = %dec_label_pc_44fc6c, %dec_label_pc_44fc66
  ret i32 %edx.0.reload, !insn.addr !4335
}

define void @"__crt_win32_buffer<wchar_t,__crt_win32_buffer_internal_dynamic_resizing>::_deallocate"(i32* %this) local_unnamed_addr {
dec_label_pc_44fca9:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 20, !insn.addr !4336
  %2 = inttoptr i32 %1 to i8*, !insn.addr !4336
  %3 = load i8, i8* %2, align 1, !insn.addr !4336
  %4 = icmp eq i8 %3, 0, !insn.addr !4336
  br i1 %4, label %dec_label_pc_44fcc1, label %dec_label_pc_44fcb4, !insn.addr !4337

dec_label_pc_44fcb4:                              ; preds = %dec_label_pc_44fca9
  %5 = add i32 %0, 8, !insn.addr !4338
  %6 = inttoptr i32 %5 to i32*, !insn.addr !4338
  %7 = load i32, i32* %6, align 4, !insn.addr !4338
  %8 = inttoptr i32 %7 to i32*, !insn.addr !4339
  call void @_free_base(i32* %8), !insn.addr !4339
  store i8 0, i8* %2, align 1, !insn.addr !4340
  br label %dec_label_pc_44fcc1, !insn.addr !4340

dec_label_pc_44fcc1:                              ; preds = %dec_label_pc_44fcb4, %dec_label_pc_44fca9
  ret void, !insn.addr !4341
}

define i32 @"__crt_win32_buffer<wchar_t,__crt_win32_buffer_internal_dynamic_resizing>::allocate"(i32* %this, i32 %requested_size) local_unnamed_addr {
dec_label_pc_44fd14:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = ptrtoint i32* %this to i32
  %2 = call i32 @function_40250e(), !insn.addr !4342
  %3 = mul i32 %1, 2, !insn.addr !4343
  %4 = add i32 %0, 8, !insn.addr !4344
  %5 = call i32 @function_40439f(i32 %4, i32 %3, i32 %0), !insn.addr !4345
  %6 = icmp eq i32 %5, 0, !insn.addr !4346
  br i1 %6, label %dec_label_pc_44fd44, label %dec_label_pc_44fd3a, !insn.addr !4347

dec_label_pc_44fd3a:                              ; preds = %dec_label_pc_44fd14
  %7 = add i32 %0, 12, !insn.addr !4348
  %8 = inttoptr i32 %7 to i32*, !insn.addr !4348
  store i32 0, i32* %8, align 4, !insn.addr !4348
  %9 = add i32 %0, 20, !insn.addr !4349
  %10 = inttoptr i32 %9 to i8*, !insn.addr !4349
  store i8 0, i8* %10, align 1, !insn.addr !4349
  br label %dec_label_pc_44fd4d, !insn.addr !4350

dec_label_pc_44fd44:                              ; preds = %dec_label_pc_44fd14
  %11 = add i32 %0, 20, !insn.addr !4351
  %12 = inttoptr i32 %11 to i8*, !insn.addr !4351
  store i8 1, i8* %12, align 1, !insn.addr !4351
  %13 = add i32 %0, 12, !insn.addr !4352
  %14 = inttoptr i32 %13 to i32*, !insn.addr !4352
  store i32 %1, i32* %14, align 4, !insn.addr !4352
  br label %dec_label_pc_44fd4d, !insn.addr !4352

dec_label_pc_44fd4d:                              ; preds = %dec_label_pc_44fd44, %dec_label_pc_44fd3a
  ret i32 %5, !insn.addr !4353
}

define i32 @"__crt_win32_buffer_internal_dynamic_resizing::allocate"(i8** %address, i32 %size, i32* %__formal) local_unnamed_addr {
dec_label_pc_44fd62:
  %0 = call i32* @_malloc_base(i32 %size), !insn.addr !4354
  %1 = ptrtoint i32* %0 to i32, !insn.addr !4354
  %2 = bitcast i8** %address to i32*, !insn.addr !4355
  store i32 %1, i32* %2, align 4, !insn.addr !4355
  %3 = icmp eq i32* %0, null, !insn.addr !4356
  %4 = select i1 %3, i32 12, i32 0, !insn.addr !4357
  ret i32 %4, !insn.addr !4358
}

define void @"__crt_seh_guarded_call<void>::operator()<<lambda_ceb1ee4838e85a9d631eb091e2fbe199>,<lambda_ae742caa10f662c28703da3d2ea5e57e> &,<lambda_cd08b5d6af4937fe54fc07d0c9bf6b37> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_4503e8:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b54(i32* nonnull @global_var_47b758, i32 8), !insn.addr !4359
  %2 = add i32 %0, 8, !insn.addr !4360
  %3 = inttoptr i32 %2 to i32*, !insn.addr !4360
  %4 = load i32, i32* %3, align 4, !insn.addr !4360
  %5 = inttoptr i32 %4 to i32*, !insn.addr !4361
  %6 = load i32, i32* %5, align 4, !insn.addr !4361
  %7 = call i32 @function_404548(i32 %6), !insn.addr !4362
  %8 = add i32 %0, -4, !insn.addr !4363
  %9 = inttoptr i32 %8 to i32*, !insn.addr !4363
  store i32 0, i32* %9, align 4, !insn.addr !4363
  call void @"<lambda_ae742caa10f662c28703da3d2ea5e57e>::operator()"(i32* nonnull @80), !insn.addr !4364
  store i32 -2, i32* %9, align 4, !insn.addr !4365
  %10 = call i32 @function_450429(), !insn.addr !4366
  %11 = add i32 %0, -16, !insn.addr !4367
  %12 = inttoptr i32 %11 to i32*, !insn.addr !4367
  %13 = load i32, i32* %12, align 4, !insn.addr !4367
  call void @__writefsdword(i32 0, i32 %13), !insn.addr !4368
  ret void, !insn.addr !4369
}

define i32 @function_450429() local_unnamed_addr {
dec_label_pc_450429:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !4370
  %2 = inttoptr i32 %1 to i32*, !insn.addr !4370
  %3 = load i32, i32* %2, align 4, !insn.addr !4370
  %4 = inttoptr i32 %3 to i32*, !insn.addr !4371
  %5 = load i32, i32* %4, align 4, !insn.addr !4371
  %6 = call i32 @function_4017d5(i32 %5), !insn.addr !4372
  ret i32 %6, !insn.addr !4373
}

define void @"<lambda_ae742caa10f662c28703da3d2ea5e57e>::operator()"(i32* %this) local_unnamed_addr {
dec_label_pc_4504e2:
  %ecx.0.reg2mem = alloca i32, !insn.addr !4374
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = load i32, i32* inttoptr (i32 329 to i32*), align 4, !insn.addr !4375
  %2 = add i32 %1, 24, !insn.addr !4376
  %3 = inttoptr i32 %2 to i8*, !insn.addr !4377
  %4 = load i32, i32* @_mbctype, align 4, !insn.addr !4378
  %5 = inttoptr i32 %4 to i8*, !insn.addr !4378
  %6 = call i32 @memcpy_s_2(i8* %5, i32 257, i8* %3, i32 257), !insn.addr !4379
  %7 = load i32, i32* inttoptr (i32 328 to i32*), align 8, !insn.addr !4380
  %8 = add i32 %7, 281, !insn.addr !4381
  %9 = inttoptr i32 %8 to i8*, !insn.addr !4382
  %10 = load i32, i32* @_mbcasemap, align 4, !insn.addr !4383
  %11 = inttoptr i32 %10 to i8*, !insn.addr !4383
  %12 = call i32 @memcpy_s_2(i8* %11, i32 256, i8* %9, i32 256), !insn.addr !4384
  %13 = add i32 %0, 4, !insn.addr !4385
  %14 = inttoptr i32 %13 to i32*, !insn.addr !4385
  %15 = load i32, i32* %14, align 4, !insn.addr !4385
  %16 = inttoptr i32 %15 to i32*, !insn.addr !4386
  %17 = load i32, i32* %16, align 4, !insn.addr !4386
  %18 = inttoptr i32 %17 to i32*, !insn.addr !4387
  %19 = load i32, i32* %18, align 4, !insn.addr !4387
  %20 = inttoptr i32 %19 to i32*, !insn.addr !4388
  %21 = load i32, i32* %20, align 4, !insn.addr !4388
  %22 = add i32 %21, -1, !insn.addr !4388
  %23 = icmp eq i32 %22, 0, !insn.addr !4388
  store i32 %22, i32* %20, align 4, !insn.addr !4388
  %24 = icmp eq i1 %23, false, !insn.addr !4389
  store i32 %21, i32* %ecx.0.reg2mem, !insn.addr !4389
  br i1 %24, label %dec_label_pc_45054b, label %dec_label_pc_450536, !insn.addr !4389

dec_label_pc_450536:                              ; preds = %dec_label_pc_4504e2
  %25 = load i32, i32* %14, align 4, !insn.addr !4390
  %26 = inttoptr i32 %25 to i32*, !insn.addr !4391
  %27 = load i32, i32* %26, align 4, !insn.addr !4391
  %28 = inttoptr i32 %27 to i32*, !insn.addr !4392
  %29 = load i32, i32* %28, align 4, !insn.addr !4392
  %30 = icmp eq i32 %29, ptrtoint (%__crt_multibyte_data* @__acrt_initial_multibyte_data to i32), !insn.addr !4392
  store i32 %21, i32* %ecx.0.reg2mem, !insn.addr !4393
  br i1 %30, label %dec_label_pc_45054b, label %dec_label_pc_450543, !insn.addr !4393

dec_label_pc_450543:                              ; preds = %dec_label_pc_450536
  %31 = inttoptr i32 %29 to i32*, !insn.addr !4394
  call void @_free_base(i32* %31), !insn.addr !4394
  store i32 %29, i32* %ecx.0.reg2mem, !insn.addr !4395
  br label %dec_label_pc_45054b, !insn.addr !4395

dec_label_pc_45054b:                              ; preds = %dec_label_pc_450543, %dec_label_pc_450536, %dec_label_pc_4504e2
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %32 = load i32, i32* %14, align 4, !insn.addr !4396
  %33 = inttoptr i32 %32 to i32*, !insn.addr !4397
  %34 = load i32, i32* %33, align 4, !insn.addr !4397
  %35 = add i32 %ecx.0.reload, 72, !insn.addr !4398
  %36 = inttoptr i32 %35 to i32*, !insn.addr !4398
  %37 = load i32, i32* %36, align 4, !insn.addr !4398
  %38 = inttoptr i32 %34 to i32*, !insn.addr !4399
  store i32 %37, i32* %38, align 4, !insn.addr !4399
  %39 = add i32 %34, 72, !insn.addr !4400
  %40 = inttoptr i32 %39 to i32*, !insn.addr !4400
  %41 = load i32, i32* %40, align 4, !insn.addr !4400
  %42 = inttoptr i32 %41 to i32*, !insn.addr !4401
  %43 = load i32, i32* %42, align 4, !insn.addr !4401
  %44 = add i32 %43, 1, !insn.addr !4401
  store i32 %44, i32* %42, align 4, !insn.addr !4401
  ret void, !insn.addr !4402
}

declare i16* @CPtoLocaleName(i32) local_unnamed_addr

define i32 @getSystemCP(i32 %codepage) local_unnamed_addr {
dec_label_pc_4505ee:
  %eax.0.reg2mem = alloca i32, !insn.addr !4403
  %0 = call i8 @__decompiler_undefined_function_8()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @function_403d91(i32 0), !insn.addr !4404
  store i32 0, i32* @fSystemSet, align 4, !insn.addr !4405
  %4 = icmp eq i32 %codepage, -2, !insn.addr !4406
  %5 = icmp eq i1 %4, false, !insn.addr !4407
  br i1 %5, label %dec_label_pc_450621, label %dec_label_pc_45060f, !insn.addr !4407

dec_label_pc_45060f:                              ; preds = %dec_label_pc_4505ee
  store i32 1, i32* @fSystemSet, align 4, !insn.addr !4408
  %6 = call i32 @GetOEMCP(), !insn.addr !4409
  store i32 %6, i32* %eax.0.reg2mem, !insn.addr !4410
  br label %dec_label_pc_45064d, !insn.addr !4410

dec_label_pc_450621:                              ; preds = %dec_label_pc_4505ee
  %7 = icmp eq i32 %codepage, -3, !insn.addr !4411
  %8 = icmp eq i1 %7, false, !insn.addr !4412
  br i1 %8, label %dec_label_pc_450638, label %dec_label_pc_450626, !insn.addr !4412

dec_label_pc_450626:                              ; preds = %dec_label_pc_450621
  store i32 1, i32* @fSystemSet, align 4, !insn.addr !4413
  %9 = call i32 @GetACP(), !insn.addr !4414
  store i32 %9, i32* %eax.0.reg2mem, !insn.addr !4415
  br label %dec_label_pc_45064d, !insn.addr !4415

dec_label_pc_450638:                              ; preds = %dec_label_pc_450621
  %10 = icmp eq i32 %codepage, -4, !insn.addr !4416
  %11 = icmp eq i1 %10, false, !insn.addr !4417
  store i32 %codepage, i32* %eax.0.reg2mem, !insn.addr !4417
  br i1 %11, label %dec_label_pc_45064d, label %dec_label_pc_45063d, !insn.addr !4417

dec_label_pc_45063d:                              ; preds = %dec_label_pc_450638
  store i32 1, i32* @fSystemSet, align 4, !insn.addr !4418
  %12 = add i32 %1, 8, !insn.addr !4419
  %13 = inttoptr i32 %12 to i32*, !insn.addr !4419
  %14 = load i32, i32* %13, align 4, !insn.addr !4419
  store i32 %14, i32* %eax.0.reg2mem, !insn.addr !4419
  br label %dec_label_pc_45064d, !insn.addr !4419

dec_label_pc_45064d:                              ; preds = %dec_label_pc_45063d, %dec_label_pc_450638, %dec_label_pc_450626, %dec_label_pc_45060f
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %15 = icmp eq i8 %0, 0, !insn.addr !4420
  br i1 %15, label %dec_label_pc_45065d, label %dec_label_pc_450653, !insn.addr !4421

dec_label_pc_450653:                              ; preds = %dec_label_pc_45064d
  %16 = add i32 %2, 848, !insn.addr !4422
  %17 = inttoptr i32 %16 to i32*, !insn.addr !4422
  %18 = load i32, i32* %17, align 4, !insn.addr !4422
  %19 = and i32 %18, -3, !insn.addr !4422
  store i32 %19, i32* %17, align 4, !insn.addr !4422
  br label %dec_label_pc_45065d, !insn.addr !4422

dec_label_pc_45065d:                              ; preds = %dec_label_pc_450653, %dec_label_pc_45064d
  ret i32 %eax.0.reload, !insn.addr !4423
}

declare void @setSBCS(%__crt_multibyte_data*) local_unnamed_addr

define void @setSBUpLow(%__crt_multibyte_data* %ptmbci) local_unnamed_addr {
dec_label_pc_450728:
  %eax.3.reg2mem = alloca i32, !insn.addr !4424
  %ecx.2.reg2mem = alloca i32, !insn.addr !4424
  %ecx.1.reg2mem = alloca i8, !insn.addr !4424
  %eax.2.reg2mem = alloca i32, !insn.addr !4424
  %storemerge12.reg2mem = alloca i32, !insn.addr !4424
  %eax.113.reg2mem = alloca i32, !insn.addr !4424
  %ecx.014.reg2mem = alloca i32, !insn.addr !4424
  %eax.0.reg2mem = alloca i32, !insn.addr !4424
  %0 = ptrtoint %__crt_multibyte_data* %ptmbci to i32
  %upVector_-776 = alloca [256 x i8], align 1
  %lowVector_-520 = alloca [256 x i8], align 1
  %wVector_-1800 = alloca [512 x i16], align 2
  %sbVector_-264 = alloca [256 x i8], align 1
  %stack_var_-1814 = alloca i8, align 1
  %stack_var_-1820 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %1 = add i32 %0, 4, !insn.addr !4425
  %2 = inttoptr i32 %1 to i32*, !insn.addr !4425
  %3 = load i32, i32* %2, align 4, !insn.addr !4425
  %4 = icmp eq i32 %3, 65001, !insn.addr !4425
  br i1 %4, label %dec_label_pc_45085c, label %dec_label_pc_450750, !insn.addr !4426

dec_label_pc_450750:                              ; preds = %dec_label_pc_450728
  %5 = bitcast i32* %stack_var_-1820 to %_cpinfo*
  %6 = call i1 @GetCPInfo(i32 %3, %_cpinfo* nonnull %5), !insn.addr !4427
  %7 = icmp eq i1 %6, false, !insn.addr !4428
  br i1 %7, label %dec_label_pc_45085c, label %dec_label_pc_450771.preheader, !insn.addr !4429

dec_label_pc_450771.preheader:                    ; preds = %dec_label_pc_450750
  %8 = ptrtoint i32* %stack_var_-4 to i32, !insn.addr !4430
  %9 = add i32 %8, -260, !insn.addr !4431
  store i32 0, i32* %eax.0.reg2mem
  br label %dec_label_pc_450771

dec_label_pc_450771:                              ; preds = %dec_label_pc_450771, %dec_label_pc_450771.preheader
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %10 = trunc i32 %eax.0.reload to i8, !insn.addr !4431
  %11 = add i32 %eax.0.reload, %9, !insn.addr !4431
  %12 = inttoptr i32 %11 to i8*, !insn.addr !4431
  store i8 %10, i8* %12, align 1, !insn.addr !4431
  %13 = add nuw nsw i32 %eax.0.reload, 1, !insn.addr !4432
  %exitcond17 = icmp eq i32 %13, 256
  store i32 %13, i32* %eax.0.reg2mem, !insn.addr !4433
  br i1 %exitcond17, label %dec_label_pc_45077d, label %dec_label_pc_450771, !insn.addr !4433

dec_label_pc_45077d:                              ; preds = %dec_label_pc_450771
  %14 = load i8, i8* %stack_var_-1814, align 1, !insn.addr !4434
  store [256 x i8] [i8 32, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef], [256 x i8]* %sbVector_-264, align 1, !insn.addr !4435
  %15 = icmp eq i8 %14, 0, !insn.addr !4436
  %16 = icmp eq i1 %15, false, !insn.addr !4437
  br i1 %16, label %dec_label_pc_450792.lr.ph, label %dec_label_pc_4507b5, !insn.addr !4437

dec_label_pc_450792.lr.ph:                        ; preds = %dec_label_pc_45077d
  %17 = zext i8 %14 to i32, !insn.addr !4434
  %18 = or i32 %17, 256, !insn.addr !4434
  %19 = ptrtoint i8* %stack_var_-1814 to i32, !insn.addr !4438
  store i32 %19, i32* %ecx.014.reg2mem
  store i32 %18, i32* %eax.113.reg2mem
  br label %dec_label_pc_450792

dec_label_pc_450792:                              ; preds = %dec_label_pc_450792.lr.ph, %dec_label_pc_4507ac
  %eax.113.reload = load i32, i32* %eax.113.reg2mem
  %ecx.014.reload = load i32, i32* %ecx.014.reg2mem
  %20 = add i32 %ecx.014.reload, 1, !insn.addr !4439
  %21 = inttoptr i32 %20 to i8*, !insn.addr !4439
  %22 = load i8, i8* %21, align 1, !insn.addr !4439
  %23 = zext i8 %22 to i32, !insn.addr !4439
  %24 = and i32 %eax.113.reload, 255, !insn.addr !4440
  %25 = icmp ugt i32 %24, %23
  store i32 %24, i32* %storemerge12.reg2mem, !insn.addr !4441
  br i1 %25, label %dec_label_pc_4507ac, label %dec_label_pc_45079f, !insn.addr !4441

dec_label_pc_45079f:                              ; preds = %dec_label_pc_450792, %dec_label_pc_45079f
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %26 = add i32 %storemerge12.reload, %9, !insn.addr !4442
  %27 = inttoptr i32 %26 to i8*, !insn.addr !4442
  store i8 32, i8* %27, align 1, !insn.addr !4442
  %28 = add nuw nsw i32 %storemerge12.reload, 1, !insn.addr !4443
  %29 = icmp uge i32 %storemerge12.reload, %23
  %30 = icmp ult i32 %28, 256, !insn.addr !4444
  %31 = icmp eq i1 %30, false, !insn.addr !4445
  %or.cond = or i1 %29, %31
  store i32 %28, i32* %storemerge12.reg2mem, !insn.addr !4441
  br i1 %or.cond, label %dec_label_pc_4507ac, label %dec_label_pc_45079f, !insn.addr !4441

dec_label_pc_4507ac:                              ; preds = %dec_label_pc_45079f, %dec_label_pc_450792
  %32 = add i32 %ecx.014.reload, 2, !insn.addr !4446
  %33 = inttoptr i32 %32 to i8*, !insn.addr !4447
  %34 = load i8, i8* %33, align 1, !insn.addr !4447
  %35 = zext i8 %34 to i32, !insn.addr !4447
  %36 = icmp eq i8 %34, 0, !insn.addr !4436
  %37 = icmp eq i1 %36, false, !insn.addr !4437
  store i32 %32, i32* %ecx.014.reg2mem, !insn.addr !4437
  store i32 %35, i32* %eax.113.reg2mem, !insn.addr !4437
  br i1 %37, label %dec_label_pc_450792, label %dec_label_pc_4507b5, !insn.addr !4437

dec_label_pc_4507b5:                              ; preds = %dec_label_pc_4507ac, %dec_label_pc_45077d
  %38 = load i32, i32* %2, align 4, !insn.addr !4448
  %39 = getelementptr inbounds [512 x i16], [512 x i16]* %wVector_-1800, i32 0, i32 0
  %40 = getelementptr inbounds [256 x i8], [256 x i8]* %sbVector_-264, i32 0, i32 0
  %41 = call i32 @function_4011c2(i32 0, i32 1, i8* nonnull %40, i32 256, i16* nonnull %39, i32 %38, i32 0), !insn.addr !4449
  %42 = load i32, i32* %2, align 4, !insn.addr !4450
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* %lowVector_-520, i32 0, i32 0
  %44 = add i32 %0, 540, !insn.addr !4451
  %45 = inttoptr i32 %44 to i32*, !insn.addr !4451
  %46 = load i32, i32* %45, align 4, !insn.addr !4451
  %47 = call i32 @function_404110(i32 0, i32 %46, i32 256, i8* nonnull %40, i32 256, i8* nonnull %43, i32 256, i32 %42, i32 0), !insn.addr !4452
  %48 = load i32, i32* %2, align 4, !insn.addr !4453
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %upVector_-776, i32 0, i32 0
  %50 = load i32, i32* %45, align 4, !insn.addr !4454
  %51 = call i32 @function_404110(i32 0, i32 %50, i32 512, i8* nonnull %40, i32 256, i8* nonnull %49, i32 256, i32 %48, i32 0), !insn.addr !4455
  %52 = add i32 %8, -1796, !insn.addr !4456
  %53 = add i32 %0, 25
  %54 = add i32 %0, 281, !insn.addr !4457
  store i32 0, i32* %eax.2.reg2mem, !insn.addr !4458
  br label %dec_label_pc_45081e, !insn.addr !4458

dec_label_pc_45081e:                              ; preds = %dec_label_pc_45084e, %dec_label_pc_4507b5
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  %55 = mul i32 %eax.2.reload, 2, !insn.addr !4456
  %56 = add i32 %52, %55, !insn.addr !4456
  %57 = inttoptr i32 %56 to i16*, !insn.addr !4456
  %58 = load i16, i16* %57, align 2, !insn.addr !4456
  %59 = and i16 %58, 1
  %60 = icmp eq i16 %59, 0, !insn.addr !4459
  br i1 %60, label %dec_label_pc_450839, label %dec_label_pc_45082b, !insn.addr !4460

dec_label_pc_45082b:                              ; preds = %dec_label_pc_45081e
  %61 = add i32 %eax.2.reload, %53, !insn.addr !4461
  %62 = inttoptr i32 %61 to i8*, !insn.addr !4461
  %63 = load i8, i8* %62, align 1, !insn.addr !4461
  %64 = or i8 %63, 16, !insn.addr !4461
  store i8 %64, i8* %62, align 1, !insn.addr !4461
  %65 = add i32 %eax.2.reload, %8, !insn.addr !4462
  %66 = add i32 %65, -516, !insn.addr !4462
  %67 = inttoptr i32 %66 to i8*, !insn.addr !4462
  %68 = load i8, i8* %67, align 1, !insn.addr !4462
  store i8 %68, i8* %ecx.1.reg2mem, !insn.addr !4463
  br label %dec_label_pc_45084e, !insn.addr !4463

dec_label_pc_450839:                              ; preds = %dec_label_pc_45081e
  %69 = and i16 %58, 2
  %70 = icmp eq i16 %69, 0, !insn.addr !4464
  store i8 0, i8* %ecx.1.reg2mem, !insn.addr !4465
  br i1 %70, label %dec_label_pc_45084e, label %dec_label_pc_45083e, !insn.addr !4465

dec_label_pc_45083e:                              ; preds = %dec_label_pc_450839
  %71 = add i32 %eax.2.reload, %53, !insn.addr !4466
  %72 = inttoptr i32 %71 to i8*, !insn.addr !4466
  %73 = load i8, i8* %72, align 1, !insn.addr !4466
  %74 = or i8 %73, 32, !insn.addr !4466
  store i8 %74, i8* %72, align 1, !insn.addr !4466
  %75 = add i32 %eax.2.reload, %8, !insn.addr !4467
  %76 = add i32 %75, -772, !insn.addr !4467
  %77 = inttoptr i32 %76 to i8*, !insn.addr !4467
  %78 = load i8, i8* %77, align 1, !insn.addr !4467
  store i8 %78, i8* %ecx.1.reg2mem, !insn.addr !4468
  br label %dec_label_pc_45084e, !insn.addr !4468

dec_label_pc_45084e:                              ; preds = %dec_label_pc_450839, %dec_label_pc_45083e, %dec_label_pc_45082b
  %ecx.1.reload = load i8, i8* %ecx.1.reg2mem
  %79 = add i32 %54, %eax.2.reload, !insn.addr !4457
  %80 = inttoptr i32 %79 to i8*, !insn.addr !4457
  store i8 %ecx.1.reload, i8* %80, align 1, !insn.addr !4457
  %81 = add nuw nsw i32 %eax.2.reload, 1, !insn.addr !4469
  %exitcond16 = icmp eq i32 %81, 256
  store i32 %81, i32* %eax.2.reg2mem, !insn.addr !4470
  br i1 %exitcond16, label %dec_label_pc_45089a, label %dec_label_pc_45081e, !insn.addr !4470

dec_label_pc_45085c:                              ; preds = %dec_label_pc_450750, %dec_label_pc_450728
  %82 = add i32 %0, 25
  %83 = add i32 %0, 281, !insn.addr !4471
  store i32 0, i32* %ecx.2.reg2mem, !insn.addr !4472
  br label %dec_label_pc_450865, !insn.addr !4472

dec_label_pc_450865:                              ; preds = %dec_label_pc_45088e, %dec_label_pc_45085c
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %84 = add nsw i32 %ecx.2.reload, -65, !insn.addr !4473
  %85 = icmp ult i32 %84, 26
  br i1 %85, label %dec_label_pc_450870, label %dec_label_pc_45087a, !insn.addr !4474

dec_label_pc_450870:                              ; preds = %dec_label_pc_450865
  %86 = add i32 %ecx.2.reload, %82, !insn.addr !4475
  %87 = inttoptr i32 %86 to i8*, !insn.addr !4475
  %88 = load i8, i8* %87, align 1, !insn.addr !4475
  %89 = or i8 %88, 16, !insn.addr !4475
  store i8 %89, i8* %87, align 1, !insn.addr !4475
  %90 = add nuw nsw i32 %ecx.2.reload, 32, !insn.addr !4476
  store i32 %90, i32* %eax.3.reg2mem, !insn.addr !4477
  br label %dec_label_pc_45088e, !insn.addr !4477

dec_label_pc_45087a:                              ; preds = %dec_label_pc_450865
  %91 = add nsw i32 %ecx.2.reload, -97, !insn.addr !4478
  %92 = icmp ult i32 %91, 26
  store i32 0, i32* %eax.3.reg2mem, !insn.addr !4479
  br i1 %92, label %dec_label_pc_45087f, label %dec_label_pc_45088e, !insn.addr !4479

dec_label_pc_45087f:                              ; preds = %dec_label_pc_45087a
  %93 = add i32 %ecx.2.reload, %82, !insn.addr !4480
  %94 = inttoptr i32 %93 to i8*, !insn.addr !4481
  %95 = load i8, i8* %94, align 1, !insn.addr !4481
  %96 = or i8 %95, 32, !insn.addr !4481
  store i8 %96, i8* %94, align 1, !insn.addr !4481
  %97 = add nsw i32 %ecx.2.reload, -32, !insn.addr !4482
  store i32 %97, i32* %eax.3.reg2mem, !insn.addr !4483
  br label %dec_label_pc_45088e, !insn.addr !4483

dec_label_pc_45088e:                              ; preds = %dec_label_pc_45087a, %dec_label_pc_45087f, %dec_label_pc_450870
  %eax.3.reload = load i32, i32* %eax.3.reg2mem
  %98 = trunc i32 %eax.3.reload to i8, !insn.addr !4471
  %99 = add i32 %83, %ecx.2.reload, !insn.addr !4471
  %100 = inttoptr i32 %99 to i8*, !insn.addr !4471
  store i8 %98, i8* %100, align 1, !insn.addr !4471
  %101 = add nuw nsw i32 %ecx.2.reload, 1, !insn.addr !4484
  %exitcond = icmp eq i32 %101, 256
  store i32 %101, i32* %ecx.2.reg2mem, !insn.addr !4485
  br i1 %exitcond, label %dec_label_pc_45089a, label %dec_label_pc_450865, !insn.addr !4485

dec_label_pc_45089a:                              ; preds = %dec_label_pc_45084e, %dec_label_pc_45088e
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !4486
  ret void, !insn.addr !4487
}

define i32 @setmbcp_internal(i32 %requested_codepage, i1 %is_for_crt_initialization, i32 %ptd, %__crt_multibyte_data** %current_multibyte_data) local_unnamed_addr {
dec_label_pc_450909:
  %edi.1.reg2mem = alloca i32, !insn.addr !4488
  %esi.0.reg2mem = alloca i32, !insn.addr !4488
  %esp.1.reg2mem = alloca i32, !insn.addr !4488
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  store i32 %ptd, i32* %stack_var_12, align 4
  %stack_var_-24 = alloca i32, align 4
  %0 = call %__crt_multibyte_data* @update_thread_multibyte_data_internal(i32 %ptd, %__crt_multibyte_data** %current_multibyte_data), !insn.addr !4489
  store i32 %requested_codepage, i32* %stack_var_-36, align 4, !insn.addr !4490
  %1 = call i32 @getSystemCP(i32 %requested_codepage), !insn.addr !4491
  store i32 %1, i32* %stack_var_-16, align 4, !insn.addr !4492
  %2 = add i32 %ptd, 72
  %3 = inttoptr i32 %2 to i32*
  %4 = load i32, i32* %3, align 4, !insn.addr !4493
  %5 = add i32 %4, 4, !insn.addr !4494
  %6 = inttoptr i32 %5 to i32*, !insn.addr !4494
  %7 = load i32, i32* %6, align 4, !insn.addr !4494
  %8 = icmp eq i32 %1, %7, !insn.addr !4494
  %9 = icmp eq i1 %8, false, !insn.addr !4495
  br i1 %9, label %dec_label_pc_450939, label %dec_label_pc_450935, !insn.addr !4495

dec_label_pc_450935:                              ; preds = %dec_label_pc_450909
  ret i32 0, !insn.addr !4496

dec_label_pc_450939:                              ; preds = %dec_label_pc_450909
  %10 = call i32* @_malloc_base(i32 544), !insn.addr !4497
  %11 = ptrtoint i32* %10 to i32, !insn.addr !4497
  %12 = ptrtoint i32* %stack_var_-36 to i32, !insn.addr !4498
  %13 = icmp eq i32* %10, null, !insn.addr !4499
  store i32 %12, i32* %esp.1.reg2mem, !insn.addr !4500
  store i32 -1, i32* %esi.0.reg2mem, !insn.addr !4500
  store i32 %11, i32* %edi.1.reg2mem, !insn.addr !4500
  br i1 %13, label %dec_label_pc_450980, label %dec_label_pc_450950, !insn.addr !4500

dec_label_pc_450950:                              ; preds = %dec_label_pc_450939
  %14 = load i32, i32* %3, align 4, !insn.addr !4501
  %15 = inttoptr i32 %14 to i8*, !insn.addr !4502
  %16 = bitcast i32* %10 to i8*, !insn.addr !4502
  call void @__asm_rep_movsd_memcpy(i8* %16, i8* %15, i32 136), !insn.addr !4502
  store i32 0, i32* %10, align 4, !insn.addr !4503
  %17 = call i32 @function_404093(i32 %1, i32 %11), !insn.addr !4504
  %18 = icmp eq i32 %17, -1, !insn.addr !4505
  %19 = icmp eq i1 %18, false, !insn.addr !4506
  br i1 %19, label %dec_label_pc_45098e, label %dec_label_pc_450973, !insn.addr !4506

dec_label_pc_450973:                              ; preds = %dec_label_pc_450950
  %20 = call i32* @_errno(), !insn.addr !4507
  store i32 22, i32* %20, align 4, !insn.addr !4508
  store i32 %12, i32* %esp.1.reg2mem, !insn.addr !4508
  store i32 -1, i32* %esi.0.reg2mem, !insn.addr !4508
  store i32 %11, i32* %edi.1.reg2mem, !insn.addr !4508
  br label %dec_label_pc_450980, !insn.addr !4508

dec_label_pc_450980:                              ; preds = %dec_label_pc_450939, %dec_label_pc_450973, %dec_label_pc_450a13, %dec_label_pc_4509e0, %dec_label_pc_4509d7, %dec_label_pc_4509bb
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %21 = add i32 %esp.1.reload, -4, !insn.addr !4509
  %22 = inttoptr i32 %21 to i32*, !insn.addr !4509
  store i32 %edi.1.reload, i32* %22, align 4, !insn.addr !4509
  call void @_free_base(i32* nonnull @80), !insn.addr !4510
  ret i32 %esi.0.reload, !insn.addr !4511

dec_label_pc_45098e:                              ; preds = %dec_label_pc_450950
  %23 = icmp eq i1 %is_for_crt_initialization, false, !insn.addr !4512
  %24 = icmp eq i1 %23, false, !insn.addr !4513
  br i1 %24, label %dec_label_pc_450999, label %dec_label_pc_450994, !insn.addr !4513

dec_label_pc_450994:                              ; preds = %dec_label_pc_45098e
  %25 = call i32 @function_403896(), !insn.addr !4514
  br label %dec_label_pc_450999, !insn.addr !4514

dec_label_pc_450999:                              ; preds = %dec_label_pc_450994, %dec_label_pc_45098e
  %26 = load i32, i32* %stack_var_12, align 4, !insn.addr !4515
  %27 = add i32 %26, 72, !insn.addr !4516
  %28 = inttoptr i32 %27 to i32*, !insn.addr !4516
  %29 = load i32, i32* %28, align 4, !insn.addr !4516
  %30 = inttoptr i32 %29 to i32*, !insn.addr !4517
  %31 = load i32, i32* %30, align 4, !insn.addr !4517
  %32 = add i32 %31, -1, !insn.addr !4517
  store i32 %32, i32* %30, align 4, !insn.addr !4517
  %33 = icmp eq i32 %31, 1, !insn.addr !4518
  %34 = icmp eq i1 %33, false, !insn.addr !4519
  br i1 %34, label %dec_label_pc_4509bb, label %dec_label_pc_4509a6, !insn.addr !4519

dec_label_pc_4509a6:                              ; preds = %dec_label_pc_450999
  %35 = load i32, i32* %stack_var_12, align 4, !insn.addr !4520
  %36 = add i32 %35, 72, !insn.addr !4521
  %37 = inttoptr i32 %36 to i32*, !insn.addr !4521
  %38 = load i32, i32* %37, align 4, !insn.addr !4521
  %39 = icmp eq i32 %38, ptrtoint (%__crt_multibyte_data* @__acrt_initial_multibyte_data to i32), !insn.addr !4521
  br i1 %39, label %dec_label_pc_4509bb, label %dec_label_pc_4509b2, !insn.addr !4522

dec_label_pc_4509b2:                              ; preds = %dec_label_pc_4509a6
  %40 = inttoptr i32 %38 to i32*, !insn.addr !4523
  call void @_free_base(i32* %40), !insn.addr !4523
  br label %dec_label_pc_4509bb, !insn.addr !4524

dec_label_pc_4509bb:                              ; preds = %dec_label_pc_4509b2, %dec_label_pc_4509a6, %dec_label_pc_450999
  store i32 1, i32* %10, align 4, !insn.addr !4525
  %41 = load i32, i32* %stack_var_12, align 4, !insn.addr !4526
  %42 = add i32 %41, 72, !insn.addr !4527
  %43 = inttoptr i32 %42 to i32*, !insn.addr !4527
  store i32 %11, i32* %43, align 4, !insn.addr !4527
  %44 = load i32, i32* %stack_var_12, align 4, !insn.addr !4528
  %45 = add i32 %44, 848, !insn.addr !4529
  %46 = inttoptr i32 %45 to i8*, !insn.addr !4529
  %47 = load i8, i8* %46, align 1, !insn.addr !4529
  %48 = and i8 %47, 2, !insn.addr !4529
  %49 = icmp eq i8 %48, 0, !insn.addr !4529
  %50 = icmp eq i1 %49, false, !insn.addr !4530
  store i32 %12, i32* %esp.1.reg2mem, !insn.addr !4530
  store i32 %17, i32* %esi.0.reg2mem, !insn.addr !4530
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !4530
  br i1 %50, label %dec_label_pc_450980, label %dec_label_pc_4509d7, !insn.addr !4530

dec_label_pc_4509d7:                              ; preds = %dec_label_pc_4509bb
  %51 = load i8, i8* bitcast (i32* @__globallocalestatus to i8*), align 4, !insn.addr !4531
  %52 = and i8 %51, 1, !insn.addr !4531
  %53 = icmp eq i8 %52, 0, !insn.addr !4531
  %54 = icmp eq i1 %53, false, !insn.addr !4532
  store i32 %12, i32* %esp.1.reg2mem, !insn.addr !4532
  store i32 %17, i32* %esi.0.reg2mem, !insn.addr !4532
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !4532
  br i1 %54, label %dec_label_pc_450980, label %dec_label_pc_4509e0, !insn.addr !4532

dec_label_pc_4509e0:                              ; preds = %dec_label_pc_4509d7
  %55 = ptrtoint i32* %stack_var_12 to i32, !insn.addr !4533
  store i32 %55, i32* %stack_var_-24, align 4, !insn.addr !4533
  store i32 5, i32* %stack_var_-16, align 4, !insn.addr !4534
  store i32 5, i32* %stack_var_-12, align 4, !insn.addr !4535
  %56 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !4536
  store i32 %56, i32* %stack_var_-48, align 4, !insn.addr !4536
  %57 = ptrtoint i32* %stack_var_-48 to i32, !insn.addr !4536
  call void @"__crt_seh_guarded_call<void>::operator()<<lambda_ceb1ee4838e85a9d631eb091e2fbe199>,<lambda_ae742caa10f662c28703da3d2ea5e57e> &,<lambda_cd08b5d6af4937fe54fc07d0c9bf6b37> >"(i32 %56, i32* nonnull %stack_var_-24, i32* nonnull %stack_var_-16, i32* nonnull @80), !insn.addr !4537
  store i32 %57, i32* %esp.1.reg2mem, !insn.addr !4538
  store i32 %17, i32* %esi.0.reg2mem, !insn.addr !4538
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !4538
  br i1 %23, label %dec_label_pc_450980, label %dec_label_pc_450a13, !insn.addr !4538

dec_label_pc_450a13:                              ; preds = %dec_label_pc_4509e0
  %58 = load %__crt_multibyte_data*, %__crt_multibyte_data** %current_multibyte_data, align 4
  %59 = ptrtoint %__crt_multibyte_data* %58 to i32
  store i32 %59, i32* bitcast (%__crt_multibyte_data** @global_var_47c310 to i32*), align 4, !insn.addr !4539
  store i32 %57, i32* %esp.1.reg2mem, !insn.addr !4540
  store i32 %17, i32* %esi.0.reg2mem, !insn.addr !4540
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !4540
  br label %dec_label_pc_450980, !insn.addr !4540
}

define %__crt_multibyte_data* @update_thread_multibyte_data_internal(i32 %ptd, %__crt_multibyte_data** %current_multibyte_data) local_unnamed_addr {
dec_label_pc_450a68:
  %esi.1.reg2mem = alloca i32, !insn.addr !4541
  %esi.0.reg2mem = alloca i32, !insn.addr !4541
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b54(i32* nonnull @global_var_47b738, i32 12), !insn.addr !4542
  %2 = add i32 %0, -28, !insn.addr !4543
  %3 = inttoptr i32 %2 to i32*, !insn.addr !4543
  store i32 0, i32* %3, align 4, !insn.addr !4543
  %4 = add i32 %0, 8, !insn.addr !4544
  %5 = inttoptr i32 %4 to i32*, !insn.addr !4544
  %6 = load i32, i32* %5, align 4, !insn.addr !4544
  %7 = load i32, i32* @__globallocalestatus, align 4, !insn.addr !4545
  %8 = add i32 %6, 848, !insn.addr !4546
  %9 = inttoptr i32 %8 to i32*, !insn.addr !4546
  %10 = load i32, i32* %9, align 4, !insn.addr !4546
  %11 = and i32 %10, %7, !insn.addr !4546
  %12 = icmp eq i32 %11, 0, !insn.addr !4546
  br i1 %12, label %dec_label_pc_450a97, label %dec_label_pc_450a89, !insn.addr !4547

dec_label_pc_450a89:                              ; preds = %dec_label_pc_450a68
  %13 = add i32 %6, 76, !insn.addr !4548
  %14 = inttoptr i32 %13 to i32*, !insn.addr !4548
  %15 = load i32, i32* %14, align 4, !insn.addr !4548
  %16 = icmp eq i32 %15, 0, !insn.addr !4548
  br i1 %16, label %dec_label_pc_450a97, label %dec_label_pc_450a8e, !insn.addr !4549

dec_label_pc_450a8e:                              ; preds = %dec_label_pc_450a89
  %17 = add i32 %6, 72, !insn.addr !4550
  %18 = inttoptr i32 %17 to i32*, !insn.addr !4550
  %19 = load i32, i32* %18, align 4, !insn.addr !4550
  store i32 %19, i32* %esi.0.reg2mem, !insn.addr !4550
  br label %dec_label_pc_450a91, !insn.addr !4550

dec_label_pc_450a91:                              ; preds = %dec_label_pc_450ad6, %dec_label_pc_450a8e
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %20 = icmp eq i32 %esi.0.reload, 0, !insn.addr !4551
  br i1 %20, label %dec_label_pc_450b02, label %dec_label_pc_450af0, !insn.addr !4552

dec_label_pc_450a97:                              ; preds = %dec_label_pc_450a89, %dec_label_pc_450a68
  %21 = call i32 @function_404548(i32 5), !insn.addr !4553
  %22 = add i32 %0, -4, !insn.addr !4554
  %23 = inttoptr i32 %22 to i32*, !insn.addr !4554
  store i32 0, i32* %23, align 4, !insn.addr !4554
  %24 = add i32 %6, 72, !insn.addr !4555
  %25 = inttoptr i32 %24 to i32*, !insn.addr !4555
  %26 = load i32, i32* %25, align 4, !insn.addr !4555
  store i32 %26, i32* %3, align 4, !insn.addr !4556
  %27 = add i32 %0, 12, !insn.addr !4557
  %28 = inttoptr i32 %27 to i32*, !insn.addr !4557
  %29 = load i32, i32* %28, align 4, !insn.addr !4557
  %30 = inttoptr i32 %29 to i32*, !insn.addr !4558
  %31 = load i32, i32* %30, align 4, !insn.addr !4558
  %32 = icmp eq i32 %26, %31, !insn.addr !4558
  store i32 %26, i32* %esi.1.reg2mem, !insn.addr !4559
  br i1 %32, label %dec_label_pc_450ad6, label %dec_label_pc_450aaf, !insn.addr !4559

dec_label_pc_450aaf:                              ; preds = %dec_label_pc_450a97
  %33 = icmp eq i32 %26, 0, !insn.addr !4560
  br i1 %33, label %dec_label_pc_450acb, label %dec_label_pc_450ab3, !insn.addr !4561

dec_label_pc_450ab3:                              ; preds = %dec_label_pc_450aaf
  %34 = inttoptr i32 %26 to i32*, !insn.addr !4562
  %35 = load i32, i32* %34, align 4, !insn.addr !4562
  %36 = add i32 %35, -1, !insn.addr !4562
  %37 = icmp eq i32 %36, 0, !insn.addr !4562
  store i32 %36, i32* %34, align 4, !insn.addr !4562
  %38 = icmp eq i1 %37, false, !insn.addr !4563
  %39 = icmp eq i32 %26, ptrtoint (%__crt_multibyte_data* @__acrt_initial_multibyte_data to i32), !insn.addr !4564
  %or.cond = or i1 %39, %38
  br i1 %or.cond, label %dec_label_pc_450acb, label %dec_label_pc_450ac4, !insn.addr !4563

dec_label_pc_450ac4:                              ; preds = %dec_label_pc_450ab3
  call void @_free_base(i32* %34), !insn.addr !4565
  br label %dec_label_pc_450acb, !insn.addr !4566

dec_label_pc_450acb:                              ; preds = %dec_label_pc_450ac4, %dec_label_pc_450ab3, %dec_label_pc_450aaf
  %40 = load i32, i32* %30, align 4, !insn.addr !4567
  store i32 %40, i32* %25, align 4, !insn.addr !4568
  store i32 %40, i32* %3, align 4, !insn.addr !4569
  %41 = inttoptr i32 %40 to i32*, !insn.addr !4570
  %42 = load i32, i32* %41, align 4, !insn.addr !4570
  %43 = add i32 %42, 1, !insn.addr !4570
  store i32 %43, i32* %41, align 4, !insn.addr !4570
  store i32 %40, i32* %esi.1.reg2mem, !insn.addr !4570
  br label %dec_label_pc_450ad6, !insn.addr !4570

dec_label_pc_450ad6:                              ; preds = %dec_label_pc_450acb, %dec_label_pc_450a97
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  store i32 -2, i32* %23, align 4, !insn.addr !4571
  %44 = call i32 @function_450ae7(), !insn.addr !4572
  store i32 %esi.1.reload, i32* %esi.0.reg2mem, !insn.addr !4573
  br label %dec_label_pc_450a91, !insn.addr !4573

dec_label_pc_450af0:                              ; preds = %dec_label_pc_450a91
  %45 = add i32 %0, -16, !insn.addr !4574
  %46 = inttoptr i32 %45 to i32*, !insn.addr !4574
  %47 = load i32, i32* %46, align 4, !insn.addr !4574
  call void @__writefsdword(i32 0, i32 %47), !insn.addr !4575
  %48 = inttoptr i32 %esi.0.reload to %__crt_multibyte_data*, !insn.addr !4576
  ret %__crt_multibyte_data* %48, !insn.addr !4576

dec_label_pc_450b02:                              ; preds = %dec_label_pc_450a91
  call void @abort(), !insn.addr !4577
  %49 = call i32 @__asm_int3(), !insn.addr !4578
  %50 = call i32 @__asm_int3(), !insn.addr !4579
  %51 = call i32 @__asm_int3(), !insn.addr !4580
  %52 = call i32 @__asm_int3(), !insn.addr !4581
  %53 = call i32 @__asm_int3(), !insn.addr !4582
  %54 = call i32 @__asm_int3(), !insn.addr !4583
  %55 = call i32 @__asm_int3(), !insn.addr !4584
  %56 = call i32 @__asm_int3(), !insn.addr !4585
  %57 = call i32 @__asm_int3(), !insn.addr !4586
  %58 = call i32 @__asm_int3(), !insn.addr !4587
  %59 = call i32 @__asm_int3(), !insn.addr !4588
  %60 = call i32 @__asm_int3(), !insn.addr !4589
  %61 = call i32 @__asm_int3(), !insn.addr !4590
  %62 = call i32 @__asm_int3(), !insn.addr !4591
  %63 = call i32 @__asm_int3(), !insn.addr !4592
  %64 = call i32 @__asm_int3(), !insn.addr !4593
  %65 = call i32 @__asm_int3(), !insn.addr !4594
  %66 = call i32 @__asm_int3(), !insn.addr !4595
  %67 = call i32 @__asm_int3(), !insn.addr !4596
  %68 = call i32 @__asm_int3(), !insn.addr !4597
  %69 = call i32 @__asm_int3(), !insn.addr !4598
  %70 = call i32 @__asm_int3(), !insn.addr !4599
  %71 = call i32 @__asm_int3(), !insn.addr !4600
  %72 = call i32 @__asm_int3(), !insn.addr !4601
  %73 = call i32 @__asm_int3(), !insn.addr !4602
  %74 = call i32 @__asm_int3(), !insn.addr !4603
  %75 = call i32 @__asm_int3(), !insn.addr !4604
  %76 = call i32 @__asm_int3(), !insn.addr !4605
  %77 = call i32 @__asm_int3(), !insn.addr !4606
  %78 = call i32 @__asm_int3(), !insn.addr !4607
  %79 = call i32 @__asm_int3(), !insn.addr !4608
  %80 = call i32 @__asm_int3(), !insn.addr !4609
  %81 = call i32 @__asm_int3(), !insn.addr !4610
  %82 = call i32 @__asm_int3(), !insn.addr !4611
  %83 = call i32 @__asm_int3(), !insn.addr !4612
  %84 = call i32 @__asm_int3(), !insn.addr !4613
  %85 = call i32 @__asm_int3(), !insn.addr !4614
  %86 = call i32 @__asm_int3(), !insn.addr !4615
  %87 = call i32 @__asm_int3(), !insn.addr !4616
  %88 = call i32 @__asm_int3(), !insn.addr !4617
  %89 = call i32 @__asm_int3(), !insn.addr !4618
  %90 = inttoptr i32 %89 to %__crt_multibyte_data*, !insn.addr !4618
  ret %__crt_multibyte_data* %90, !insn.addr !4618
}

define i32 @function_450ae7() local_unnamed_addr {
dec_label_pc_450ae7:
  %0 = call i32 @function_4017d5(i32 5), !insn.addr !4619
  ret i32 %0, !insn.addr !4620
}

define i1 @__acrt_initialize_multibyte() local_unnamed_addr {
dec_label_pc_450b33:
  %stack_var_-4 = alloca %__crt_multibyte_data, align 8
  %0 = load i8, i8* bitcast (i1* @initialized to i8*), align 1, !insn.addr !4621
  %1 = icmp eq i8 %0, 0, !insn.addr !4621
  %2 = icmp eq i1 %1, false, !insn.addr !4622
  br i1 %2, label %dec_label_pc_450b78, label %dec_label_pc_450b3c, !insn.addr !4622

dec_label_pc_450b3c:                              ; preds = %dec_label_pc_450b33
  store i32 ptrtoint (%__crt_multibyte_data* @__acrt_initial_multibyte_data to i32), i32* @__acrt_current_multibyte_data, align 4, !insn.addr !4623
  store i32 ptrtoint ([1 x [256 x i8]]* @_mbcasemaps to i32), i32* @_mbcasemap, align 4, !insn.addr !4624
  store i32 ptrtoint ([1 x [257 x i8]]* @_mbctypes to i32), i32* @_mbctype, align 4, !insn.addr !4625
  %3 = call i32 @function_403bf7(), !insn.addr !4626
  store %__crt_multibyte_data { i32 ptrtoint (i32* @__acrt_current_multibyte_data to i32), i32 undef, i32 undef, [6 x i16] undef, [257 x i8] undef, [256 x i8] undef, i16* undef }, %__crt_multibyte_data* %stack_var_-4, align 8, !insn.addr !4627
  %4 = getelementptr inbounds %__crt_multibyte_data, %__crt_multibyte_data* %stack_var_-4, i32 0, i32 0, !insn.addr !4628
  %5 = load i32, i32* %4, align 8, !insn.addr !4628
  %6 = inttoptr i32 %5 to %__crt_multibyte_data**, !insn.addr !4628
  %7 = call i32 @setmbcp_internal(i32 -3, i1 true, i32 %3, %__crt_multibyte_data** %6), !insn.addr !4628
  store i8 1, i8* bitcast (i1* @initialized to i8*), align 1, !insn.addr !4629
  br label %dec_label_pc_450b78, !insn.addr !4629

dec_label_pc_450b78:                              ; preds = %dec_label_pc_450b3c, %dec_label_pc_450b33
  ret i1 true, !insn.addr !4630
}

define i32 @_setmbcp_nolock(i32 %codepage, %__crt_multibyte_data* %ptmbci) local_unnamed_addr {
dec_label_pc_450c17:
  %esp.2.reg2mem = alloca i32, !insn.addr !4631
  %edi.2.reg2mem = alloca i32, !insn.addr !4631
  %edx.1.reg2mem = alloca i32, !insn.addr !4631
  %ecx.4.reg2mem = alloca i32, !insn.addr !4631
  %edx.011.reg2mem = alloca i32, !insn.addr !4631
  %ecx.3.reg2mem = alloca i32, !insn.addr !4631
  %.reg2mem = alloca i8, !insn.addr !4631
  %edi.1.reg2mem = alloca i32, !insn.addr !4631
  %stack_var_-32.1.in.reg2mem = alloca i32, !insn.addr !4631
  %stack_var_-32.0.lcssa.reg2mem = alloca i32, !insn.addr !4631
  %ecx.2.reg2mem = alloca i32, !insn.addr !4631
  %eax.2.reg2mem = alloca i32, !insn.addr !4631
  %storemerge12.reg2mem = alloca i32, !insn.addr !4631
  %eax.1.reg2mem = alloca i32, !insn.addr !4631
  %esp.1.reg2mem = alloca i32, !insn.addr !4631
  %edi.0.reg2mem = alloca i32, !insn.addr !4631
  %esp.0.reg2mem = alloca i32, !insn.addr !4631
  %eax.013.reg2mem = alloca i32, !insn.addr !4631
  %ecx.014.reg2mem = alloca i32, !insn.addr !4631
  %0 = call i1 @__decompiler_undefined_function_7()
  %1 = ptrtoint %__crt_multibyte_data* %ptmbci to i32
  %stack_var_-22 = alloca i8, align 1
  %2 = call i8 @__decompiler_undefined_function_8()
  %stack_var_-60 = alloca i8*, align 4
  %cpInfo_-28 = alloca %_cpinfo.457, align 8
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 %codepage, i32* %stack_var_-52, align 4, !insn.addr !4632
  %3 = call i32 @getSystemCP(i32 %codepage), !insn.addr !4633
  %4 = ptrtoint i32* %stack_var_-48 to i32, !insn.addr !4634
  %5 = icmp eq i32 %3, 0, !insn.addr !4635
  store i32 %4, i32* %esp.2.reg2mem, !insn.addr !4636
  br i1 %5, label %dec_label_pc_450df2, label %dec_label_pc_450c4b.preheader, !insn.addr !4636

dec_label_pc_450c4b.preheader:                    ; preds = %dec_label_pc_450c17
  %6 = load i32, i32* @__rgcode_page_info, align 4, !insn.addr !4637
  %7 = icmp eq i32 %6, %3, !insn.addr !4637
  store i32 0, i32* %ecx.014.reg2mem, !insn.addr !4638
  store i32 0, i32* %eax.013.reg2mem, !insn.addr !4638
  store i32 0, i32* %stack_var_-32.0.lcssa.reg2mem, !insn.addr !4638
  br i1 %7, label %dec_label_pc_450d4a, label %dec_label_pc_450c57, !insn.addr !4638

dec_label_pc_450c4b:                              ; preds = %dec_label_pc_450c57
  %ecx.014.reload = load i32, i32* %ecx.014.reg2mem
  %8 = add nuw nsw i32 %ecx.014.reload, 1, !insn.addr !4639
  %9 = add i32 %eax.013.reload, add (i32 ptrtoint (i32* @__rgcode_page_info to i32), i32 48), !insn.addr !4637
  %10 = inttoptr i32 %9 to i32*, !insn.addr !4637
  %11 = load i32, i32* %10, align 4, !insn.addr !4637
  %12 = icmp eq i32 %11, %3, !insn.addr !4637
  store i32 %8, i32* %ecx.014.reg2mem, !insn.addr !4638
  store i32 %13, i32* %eax.013.reg2mem, !insn.addr !4638
  br i1 %12, label %dec_label_pc_450c4b.dec_label_pc_450d4a_crit_edge, label %dec_label_pc_450c57, !insn.addr !4638

dec_label_pc_450c57:                              ; preds = %dec_label_pc_450c4b.preheader, %dec_label_pc_450c4b
  %eax.013.reload = load i32, i32* %eax.013.reg2mem
  %13 = add nuw nsw i32 %eax.013.reload, 48, !insn.addr !4640
  %14 = icmp ult i32 %13, 240, !insn.addr !4641
  br i1 %14, label %dec_label_pc_450c4b, label %dec_label_pc_450c65, !insn.addr !4642

dec_label_pc_450c65:                              ; preds = %dec_label_pc_450c57
  %15 = icmp eq i32 %3, 65000, !insn.addr !4643
  br i1 %15, label %dec_label_pc_450dfb, label %dec_label_pc_450c71, !insn.addr !4644

dec_label_pc_450c71:                              ; preds = %dec_label_pc_450c65
  %16 = and i32 %3, 65535, !insn.addr !4645
  store i32 %16, i32* %stack_var_-52, align 4, !insn.addr !4646
  %17 = call i1 @IsValidCodePage(i32 %16), !insn.addr !4647
  %18 = icmp eq i1 %17, false, !insn.addr !4648
  br i1 %18, label %dec_label_pc_450dfb, label %dec_label_pc_450c83, !insn.addr !4649

dec_label_pc_450c83:                              ; preds = %dec_label_pc_450c71
  %19 = icmp eq i32 %3, 65001, !insn.addr !4650
  %20 = icmp eq i1 %19, false, !insn.addr !4651
  br i1 %20, label %dec_label_pc_450cb2, label %dec_label_pc_450c8c, !insn.addr !4651

dec_label_pc_450c8c:                              ; preds = %dec_label_pc_450c83
  %21 = ptrtoint i32* %stack_var_-52 to i32, !insn.addr !4646
  %22 = add i32 %1, 4, !insn.addr !4652
  %23 = inttoptr i32 %22 to i32*, !insn.addr !4652
  store i32 65001, i32* %23, align 4, !insn.addr !4652
  %24 = add i32 %1, 540, !insn.addr !4653
  %25 = inttoptr i32 %24 to i32*, !insn.addr !4653
  store i32 0, i32* %25, align 4, !insn.addr !4653
  %26 = add i32 %1, 24, !insn.addr !4654
  %27 = inttoptr i32 %26 to i32*, !insn.addr !4654
  store i32 0, i32* %27, align 4, !insn.addr !4654
  %28 = add i32 %1, 28, !insn.addr !4655
  %29 = inttoptr i32 %28 to i16*, !insn.addr !4655
  store i16 0, i16* %29, align 2, !insn.addr !4655
  store i32 %21, i32* %esp.0.reg2mem, !insn.addr !4655
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !4655
  br label %dec_label_pc_450c9c, !insn.addr !4655

dec_label_pc_450c9c:                              ; preds = %dec_label_pc_450d1d, %dec_label_pc_450cc1, %dec_label_pc_450c8c
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %30 = add i32 %1, 8, !insn.addr !4656
  %31 = inttoptr i32 %30 to i32*, !insn.addr !4656
  store i32 %edi.0.reload, i32* %31, align 4, !insn.addr !4656
  %32 = add i32 %1, 12, !insn.addr !4657
  %33 = inttoptr i32 %32 to i32*, !insn.addr !4658
  store i32 0, i32* %33, align 4, !insn.addr !4658
  %34 = select i1 %0, i32 -4, i32 4, !insn.addr !4658
  %35 = add i32 %34, %32, !insn.addr !4658
  %36 = inttoptr i32 %35 to i32*, !insn.addr !4659
  store i32 0, i32* %36, align 4, !insn.addr !4659
  %37 = add i32 %35, %34, !insn.addr !4659
  %38 = inttoptr i32 %37 to i32*, !insn.addr !4660
  store i32 0, i32* %38, align 4, !insn.addr !4660
  store i32 %esp.0.reload, i32* %esp.1.reg2mem, !insn.addr !4660
  br label %dec_label_pc_450ca7, !insn.addr !4660

dec_label_pc_450ca7:                              ; preds = %dec_label_pc_450ddc, %dec_label_pc_450c9c
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %39 = add i32 %esp.1.reload, -4, !insn.addr !4661
  %40 = inttoptr i32 %39 to i32*, !insn.addr !4661
  store i32 %1, i32* %40, align 4, !insn.addr !4661
  call void @setSBUpLow(%__crt_multibyte_data* bitcast (i32* @80 to %__crt_multibyte_data*)), !insn.addr !4662
  br label %dec_label_pc_450dfb, !insn.addr !4663

dec_label_pc_450cb2:                              ; preds = %dec_label_pc_450c83
  %41 = bitcast %_cpinfo.457* %cpInfo_-28 to %_cpinfo*
  %42 = inttoptr i32 %3 to i8*, !insn.addr !4664
  store i8* %42, i8** %stack_var_-60, align 4, !insn.addr !4664
  %43 = ptrtoint i8** %stack_var_-60 to i32, !insn.addr !4664
  %44 = call i1 @GetCPInfo(i32 %3, %_cpinfo* nonnull %41), !insn.addr !4665
  %45 = icmp eq i1 %44, false, !insn.addr !4666
  br i1 %45, label %dec_label_pc_450d36, label %dec_label_pc_450cc1, !insn.addr !4667

dec_label_pc_450cc1:                              ; preds = %dec_label_pc_450cb2
  %46 = add i32 %1, 24, !insn.addr !4668
  %47 = inttoptr i32 %46 to i8*, !insn.addr !4669
  call void @memset(i8* %47, i8 0, i32 257), !insn.addr !4670
  %48 = add i32 %1, 4, !insn.addr !4671
  %49 = inttoptr i32 %48 to i32*, !insn.addr !4671
  store i32 %3, i32* %49, align 4, !insn.addr !4671
  %50 = getelementptr inbounds %_cpinfo.457, %_cpinfo.457* %cpInfo_-28, i32 0, i32 0, !insn.addr !4672
  %51 = load i32, i32* %50, align 8, !insn.addr !4672
  %52 = icmp eq i32 %51, 2, !insn.addr !4672
  %53 = add i32 %1, 540, !insn.addr !4673
  %54 = inttoptr i32 %53 to i32*, !insn.addr !4673
  store i32 0, i32* %54, align 4, !insn.addr !4673
  %55 = icmp eq i1 %52, false, !insn.addr !4674
  store i32 %43, i32* %esp.0.reg2mem, !insn.addr !4674
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !4674
  br i1 %55, label %dec_label_pc_450c9c, label %dec_label_pc_450ce2, !insn.addr !4674

dec_label_pc_450ce2:                              ; preds = %dec_label_pc_450cc1
  %56 = icmp eq i8 %2, 0, !insn.addr !4675
  br i1 %56, label %dec_label_pc_450d0c, label %dec_label_pc_450ceb.preheader, !insn.addr !4676

dec_label_pc_450ceb.preheader:                    ; preds = %dec_label_pc_450ce2
  %57 = ptrtoint i8* %stack_var_-22 to i32, !insn.addr !4677
  %58 = add i32 %1, 25
  store i32 %57, i32* %eax.1.reg2mem
  br label %dec_label_pc_450ceb

dec_label_pc_450ceb:                              ; preds = %dec_label_pc_450ceb.preheader, %dec_label_pc_450d04
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %59 = add i32 %eax.1.reload, 1, !insn.addr !4678
  %60 = inttoptr i32 %59 to i8*, !insn.addr !4678
  %61 = load i8, i8* %60, align 1, !insn.addr !4678
  %62 = icmp eq i8 %61, 0, !insn.addr !4679
  br i1 %62, label %dec_label_pc_450d0c, label %dec_label_pc_450cf2, !insn.addr !4680

dec_label_pc_450cf2:                              ; preds = %dec_label_pc_450ceb
  %63 = inttoptr i32 %eax.1.reload to i8*, !insn.addr !4681
  %64 = load i8, i8* %63, align 1, !insn.addr !4681
  %65 = icmp ugt i8 %64, %61
  br i1 %65, label %dec_label_pc_450d04, label %dec_label_pc_450cfa.lr.ph, !insn.addr !4682

dec_label_pc_450cfa.lr.ph:                        ; preds = %dec_label_pc_450cf2
  %66 = zext i8 %61 to i32, !insn.addr !4678
  %67 = zext i8 %64 to i32, !insn.addr !4681
  store i32 %67, i32* %storemerge12.reg2mem
  br label %dec_label_pc_450cfa

dec_label_pc_450cfa:                              ; preds = %dec_label_pc_450cfa.lr.ph, %dec_label_pc_450cfa
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %68 = add i32 %58, %storemerge12.reload, !insn.addr !4683
  %69 = inttoptr i32 %68 to i8*, !insn.addr !4683
  %70 = load i8, i8* %69, align 1, !insn.addr !4683
  %71 = or i8 %70, 4, !insn.addr !4683
  store i8 %71, i8* %69, align 1, !insn.addr !4683
  %72 = add nuw nsw i32 %storemerge12.reload, 1, !insn.addr !4684
  %exitcond16 = icmp eq i32 %storemerge12.reload, %66
  store i32 %72, i32* %storemerge12.reg2mem, !insn.addr !4682
  br i1 %exitcond16, label %dec_label_pc_450d04, label %dec_label_pc_450cfa, !insn.addr !4682

dec_label_pc_450d04:                              ; preds = %dec_label_pc_450cfa, %dec_label_pc_450cf2
  %73 = add i32 %eax.1.reload, 2, !insn.addr !4685
  %74 = inttoptr i32 %73 to i8*, !insn.addr !4686
  %75 = load i8, i8* %74, align 1, !insn.addr !4686
  %76 = icmp eq i8 %75, 0, !insn.addr !4686
  %77 = icmp eq i1 %76, false, !insn.addr !4687
  store i32 %73, i32* %eax.1.reg2mem, !insn.addr !4687
  br i1 %77, label %dec_label_pc_450ceb, label %dec_label_pc_450d0c, !insn.addr !4687

dec_label_pc_450d0c:                              ; preds = %dec_label_pc_450d04, %dec_label_pc_450ceb, %dec_label_pc_450ce2
  %78 = add i32 %1, 26, !insn.addr !4688
  store i32 %78, i32* %eax.2.reg2mem, !insn.addr !4689
  store i32 254, i32* %ecx.2.reg2mem, !insn.addr !4689
  br label %dec_label_pc_450d14, !insn.addr !4689

dec_label_pc_450d14:                              ; preds = %dec_label_pc_450d14, %dec_label_pc_450d0c
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  %79 = inttoptr i32 %eax.2.reload to i8*, !insn.addr !4690
  %80 = load i8, i8* %79, align 1, !insn.addr !4690
  %81 = or i8 %80, 8, !insn.addr !4690
  store i8 %81, i8* %79, align 1, !insn.addr !4690
  %82 = add i32 %eax.2.reload, 1, !insn.addr !4691
  %83 = add i32 %ecx.2.reload, -1, !insn.addr !4692
  %84 = icmp eq i32 %83, 0, !insn.addr !4692
  %85 = icmp eq i1 %84, false, !insn.addr !4693
  store i32 %82, i32* %eax.2.reg2mem, !insn.addr !4693
  store i32 %83, i32* %ecx.2.reg2mem, !insn.addr !4693
  br i1 %85, label %dec_label_pc_450d14, label %dec_label_pc_450d1d, !insn.addr !4693

dec_label_pc_450d1d:                              ; preds = %dec_label_pc_450d14
  %86 = load i32, i32* %49, align 4, !insn.addr !4694
  %87 = call i16* @CPtoLocaleName(i32 %86), !insn.addr !4695
  %88 = ptrtoint i16* %87 to i32, !insn.addr !4695
  store i32 %88, i32* %54, align 4, !insn.addr !4696
  store i32 %43, i32* %esp.0.reg2mem, !insn.addr !4697
  store i32 1, i32* %edi.0.reg2mem, !insn.addr !4697
  br label %dec_label_pc_450c9c, !insn.addr !4697

dec_label_pc_450d36:                              ; preds = %dec_label_pc_450cb2
  %89 = load i32, i32* @fSystemSet, align 4, !insn.addr !4698
  %90 = icmp eq i32 %89, 0, !insn.addr !4698
  %91 = icmp eq i1 %90, false, !insn.addr !4699
  store i32 %43, i32* %esp.2.reg2mem, !insn.addr !4699
  br i1 %91, label %dec_label_pc_450df2, label %dec_label_pc_450dfb, !insn.addr !4699

dec_label_pc_450c4b.dec_label_pc_450d4a_crit_edge: ; preds = %dec_label_pc_450c4b
  %phitmp = mul i32 %8, 48
  store i32 %phitmp, i32* %stack_var_-32.0.lcssa.reg2mem
  br label %dec_label_pc_450d4a

dec_label_pc_450d4a:                              ; preds = %dec_label_pc_450c4b.dec_label_pc_450d4a_crit_edge, %dec_label_pc_450c4b.preheader
  %stack_var_-32.0.lcssa.reload = load i32, i32* %stack_var_-32.0.lcssa.reg2mem
  store i32 257, i32* %stack_var_-52, align 4, !insn.addr !4700
  %92 = add i32 %1, 24, !insn.addr !4701
  %93 = inttoptr i32 %92 to i8*, !insn.addr !4702
  store i8* %93, i8** %stack_var_-60, align 4, !insn.addr !4702
  call void @memset(i8* %93, i8 0, i32 257), !insn.addr !4703
  %94 = add i32 %stack_var_-32.0.lcssa.reload, ptrtoint (i8** @global_var_47c838 to i32), !insn.addr !4704
  %95 = add i32 %1, 25
  store i32 %94, i32* %stack_var_-32.1.in.reg2mem, !insn.addr !4705
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !4705
  br label %dec_label_pc_450d6c, !insn.addr !4705

dec_label_pc_450d6c:                              ; preds = %dec_label_pc_450da8, %dec_label_pc_450d4a
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %stack_var_-32.1.in.reload = load i32, i32* %stack_var_-32.1.in.reg2mem
  %96 = inttoptr i32 %stack_var_-32.1.in.reload to i8*, !insn.addr !4706
  %97 = load i8, i8* %96, align 1, !insn.addr !4706
  %98 = icmp eq i8 %97, 0, !insn.addr !4706
  br i1 %98, label %dec_label_pc_450da8, label %dec_label_pc_450d73.preheader, !insn.addr !4707

dec_label_pc_450d73.preheader:                    ; preds = %dec_label_pc_450d6c
  %99 = add i32 %edi.1.reload, ptrtoint ([4 x i8]* @__rgctypeflag to i32)
  %100 = inttoptr i32 %99 to i8*
  store i8 %97, i8* %.reg2mem
  store i32 %stack_var_-32.1.in.reload, i32* %ecx.3.reg2mem
  br label %dec_label_pc_450d73

dec_label_pc_450d73:                              ; preds = %dec_label_pc_450d73.preheader, %dec_label_pc_450d9d
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %101 = add i32 %ecx.3.reload, 1, !insn.addr !4708
  %102 = inttoptr i32 %101 to i8*, !insn.addr !4708
  %103 = load i8, i8* %102, align 1, !insn.addr !4708
  %104 = icmp eq i8 %103, 0, !insn.addr !4709
  br i1 %104, label %dec_label_pc_450da8, label %dec_label_pc_450d7a, !insn.addr !4710

dec_label_pc_450d7a:                              ; preds = %dec_label_pc_450d73
  %.reload = load i8, i8* %.reg2mem, !insn.addr !4711
  %105 = icmp ugt i8 %.reload, %103
  br i1 %105, label %dec_label_pc_450d9d, label %dec_label_pc_450d8a.lr.ph, !insn.addr !4712

dec_label_pc_450d8a.lr.ph:                        ; preds = %dec_label_pc_450d7a
  %106 = zext i8 %.reload to i32, !insn.addr !4711
  store i32 %106, i32* %edx.011.reg2mem
  br label %dec_label_pc_450d8a

dec_label_pc_450d8a:                              ; preds = %dec_label_pc_450d8a.lr.ph, %dec_label_pc_450d8a
  %edx.011.reload = load i32, i32* %edx.011.reg2mem
  %107 = load i8, i8* %100, align 1, !insn.addr !4713
  %108 = add i32 %95, %edx.011.reload, !insn.addr !4714
  %109 = inttoptr i32 %108 to i8*, !insn.addr !4714
  %110 = load i8, i8* %109, align 1, !insn.addr !4714
  %111 = or i8 %110, %107, !insn.addr !4714
  store i8 %111, i8* %109, align 1, !insn.addr !4714
  %112 = add nuw nsw i32 %edx.011.reload, 1, !insn.addr !4715
  %113 = load i8, i8* %102, align 1, !insn.addr !4716
  %storemerge6 = zext i8 %113 to i32
  %114 = icmp uge i32 %edx.011.reload, %storemerge6
  %115 = icmp ult i32 %112, 256, !insn.addr !4717
  %116 = icmp eq i1 %115, false, !insn.addr !4718
  %or.cond = or i1 %116, %114
  store i32 %112, i32* %edx.011.reg2mem, !insn.addr !4712
  br i1 %or.cond, label %dec_label_pc_450d9d, label %dec_label_pc_450d8a, !insn.addr !4712

dec_label_pc_450d9d:                              ; preds = %dec_label_pc_450d8a, %dec_label_pc_450d7a
  %117 = add i32 %ecx.3.reload, 2, !insn.addr !4719
  %118 = inttoptr i32 %117 to i8*, !insn.addr !4720
  %119 = load i8, i8* %118, align 1, !insn.addr !4720
  %120 = icmp eq i8 %119, 0, !insn.addr !4720
  %121 = icmp eq i1 %120, false, !insn.addr !4721
  store i8 %119, i8* %.reg2mem, !insn.addr !4721
  store i32 %117, i32* %ecx.3.reg2mem, !insn.addr !4721
  br i1 %121, label %dec_label_pc_450d73, label %dec_label_pc_450da8, !insn.addr !4721

dec_label_pc_450da8:                              ; preds = %dec_label_pc_450d73, %dec_label_pc_450d9d, %dec_label_pc_450d6c
  %122 = add nuw nsw i32 %edi.1.reload, 1, !insn.addr !4722
  %123 = add i32 %stack_var_-32.1.in.reload, 8, !insn.addr !4723
  %exitcond = icmp eq i32 %122, 4
  store i32 %123, i32* %stack_var_-32.1.in.reg2mem, !insn.addr !4724
  store i32 %122, i32* %edi.1.reg2mem, !insn.addr !4724
  br i1 %exitcond, label %dec_label_pc_450db4, label %dec_label_pc_450d6c, !insn.addr !4724

dec_label_pc_450db4:                              ; preds = %dec_label_pc_450da8
  store i32 %3, i32* %stack_var_-52, align 4, !insn.addr !4725
  %124 = add i32 %1, 4, !insn.addr !4726
  %125 = inttoptr i32 %124 to i32*, !insn.addr !4726
  store i32 %3, i32* %125, align 4, !insn.addr !4726
  %126 = add i32 %1, 8, !insn.addr !4727
  %127 = inttoptr i32 %126 to i32*, !insn.addr !4727
  store i32 1, i32* %127, align 4, !insn.addr !4727
  %128 = load i32, i32* %stack_var_-52, align 4, !insn.addr !4728
  %129 = call i16* @CPtoLocaleName(i32 %128), !insn.addr !4728
  %130 = ptrtoint i16* %129 to i32, !insn.addr !4728
  %131 = add i32 %1, 540, !insn.addr !4729
  %132 = inttoptr i32 %131 to i32*, !insn.addr !4729
  store i32 %130, i32* %132, align 4, !insn.addr !4729
  %133 = add i32 %1, 12, !insn.addr !4730
  store i32 6, i32* %stack_var_-52, align 4, !insn.addr !4731
  %134 = add i32 %stack_var_-32.0.lcssa.reload, ptrtoint (i16** @global_var_47c82c to i32), !insn.addr !4732
  store i32 %133, i32* %ecx.4.reg2mem, !insn.addr !4733
  store i32 %134, i32* %edx.1.reg2mem, !insn.addr !4733
  store i32 6, i32* %edi.2.reg2mem, !insn.addr !4733
  br label %dec_label_pc_450ddc, !insn.addr !4733

dec_label_pc_450ddc:                              ; preds = %dec_label_pc_450ddc, %dec_label_pc_450db4
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %135 = inttoptr i32 %edx.1.reload to i16*, !insn.addr !4734
  %136 = load i16, i16* %135, align 2, !insn.addr !4734
  %137 = add i32 %edx.1.reload, 2, !insn.addr !4735
  %138 = inttoptr i32 %ecx.4.reload to i16*, !insn.addr !4736
  store i16 %136, i16* %138, align 2, !insn.addr !4736
  %139 = add i32 %ecx.4.reload, 2, !insn.addr !4737
  %140 = add nsw i32 %edi.2.reload, -1, !insn.addr !4738
  %141 = icmp eq i32 %140, 0, !insn.addr !4738
  %142 = icmp eq i1 %141, false, !insn.addr !4739
  store i32 %4, i32* %esp.1.reg2mem, !insn.addr !4739
  store i32 %139, i32* %ecx.4.reg2mem, !insn.addr !4739
  store i32 %137, i32* %edx.1.reg2mem, !insn.addr !4739
  store i32 %140, i32* %edi.2.reg2mem, !insn.addr !4739
  br i1 %142, label %dec_label_pc_450ddc, label %dec_label_pc_450ca7, !insn.addr !4739

dec_label_pc_450df2:                              ; preds = %dec_label_pc_450d36, %dec_label_pc_450c17
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %143 = add i32 %esp.2.reload, -4, !insn.addr !4740
  %144 = inttoptr i32 %143 to i32*, !insn.addr !4740
  store i32 %1, i32* %144, align 4, !insn.addr !4740
  call void @setSBCS(%__crt_multibyte_data* bitcast (i32* @80 to %__crt_multibyte_data*)), !insn.addr !4741
  br label %dec_label_pc_450dfb, !insn.addr !4741

dec_label_pc_450dfb:                              ; preds = %dec_label_pc_450ca7, %dec_label_pc_450df2, %dec_label_pc_450c65, %dec_label_pc_450c71, %dec_label_pc_450d36
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !4742
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !4743
}

declare i32 @memcpy_s_2(i8*, i32, i8*, i32) local_unnamed_addr

define i32 @__acrt_MultiByteToWideChar(i32 %CodePage, i32 %dwFlags, i8* %lpMultiByteStr, i32 %cbMultiByte, i16* %lpWideCharStr, i32 %cchWideChar) local_unnamed_addr {
dec_label_pc_451364:
  %ecx.0.reg2mem = alloca i32, !insn.addr !4744
  %0 = icmp ult i32 %CodePage, 50230
  br i1 %0, label %dec_label_pc_451375, label %dec_label_pc_45139d, !insn.addr !4745

dec_label_pc_451375:                              ; preds = %dec_label_pc_451364
  switch i32 %CodePage, label %dec_label_pc_45137c [
    i32 50229, label %dec_label_pc_4513dc
    i32 42, label %dec_label_pc_4513dc
  ]

dec_label_pc_45137c:                              ; preds = %dec_label_pc_451375
  %1 = icmp ult i32 %CodePage, 50220
  store i32 %dwFlags, i32* %ecx.0.reg2mem, !insn.addr !4746
  br i1 %1, label %dec_label_pc_4513c6, label %dec_label_pc_451383, !insn.addr !4746

dec_label_pc_451383:                              ; preds = %dec_label_pc_45137c
  %2 = icmp ult i32 %CodePage, 50223
  %3 = or i32 %CodePage, 2
  %4 = icmp eq i32 %3, 50227
  %5 = or i1 %2, %4
  store i32 %dwFlags, i32* %ecx.0.reg2mem, !insn.addr !4747
  br i1 %5, label %dec_label_pc_4513dc, label %dec_label_pc_4513c6, !insn.addr !4747

dec_label_pc_45139d:                              ; preds = %dec_label_pc_451364
  %6 = icmp eq i32 %CodePage, 54936, !insn.addr !4748
  br i1 %6, label %dec_label_pc_4513c0, label %dec_label_pc_4513a4, !insn.addr !4749

dec_label_pc_4513a4:                              ; preds = %dec_label_pc_45139d
  %7 = icmp ult i32 %CodePage, 57002
  store i32 %dwFlags, i32* %ecx.0.reg2mem, !insn.addr !4750
  br i1 %7, label %dec_label_pc_4513c6, label %dec_label_pc_4513ab, !insn.addr !4750

dec_label_pc_4513ab:                              ; preds = %dec_label_pc_4513a4
  %8 = icmp ult i32 %CodePage, 57012
  %9 = icmp eq i32 %CodePage, 65000, !insn.addr !4751
  %or.cond11 = or i1 %8, %9
  br i1 %or.cond11, label %dec_label_pc_4513dc, label %dec_label_pc_4513b9, !insn.addr !4752

dec_label_pc_4513b9:                              ; preds = %dec_label_pc_4513ab
  %10 = icmp eq i32 %CodePage, 65001, !insn.addr !4753
  %11 = icmp eq i1 %10, false, !insn.addr !4754
  store i32 %dwFlags, i32* %ecx.0.reg2mem, !insn.addr !4754
  br i1 %11, label %dec_label_pc_4513c6, label %dec_label_pc_4513c0, !insn.addr !4754

dec_label_pc_4513c0:                              ; preds = %dec_label_pc_4513b9, %dec_label_pc_45139d
  %12 = and i32 %dwFlags, 8, !insn.addr !4755
  store i32 %12, i32* %ecx.0.reg2mem, !insn.addr !4755
  br label %dec_label_pc_4513c6, !insn.addr !4755

dec_label_pc_4513c6:                              ; preds = %dec_label_pc_45137c, %dec_label_pc_4513a4, %dec_label_pc_4513b9, %dec_label_pc_451383, %dec_label_pc_4513dc, %dec_label_pc_4513c0
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %13 = call i32 @MultiByteToWideChar(i32 %CodePage, i32 %ecx.0.reload, i8* %lpMultiByteStr, i32 %cbMultiByte, i16* %lpWideCharStr, i32 %cchWideChar), !insn.addr !4756
  ret i32 %13, !insn.addr !4757

dec_label_pc_4513dc:                              ; preds = %dec_label_pc_451375, %dec_label_pc_451375, %dec_label_pc_4513ab, %dec_label_pc_451383
  store i32 0, i32* %ecx.0.reg2mem, !insn.addr !4758
  br label %dec_label_pc_4513c6, !insn.addr !4758
}

define i32 @__acrt_WideCharToMultiByte(i32 %CodePage, i32 %dwFlags, i16* %lpWideCharStr, i32 %cchWideChar, i8* %lpMultiByteStr, i32 %cbMultiByte, i8* %lpDefaultChar, i32* %lpUsedDefaultChar) local_unnamed_addr {
dec_label_pc_45147d:
  %edx.0.reg2mem = alloca i32, !insn.addr !4759
  %0 = icmp ult i32 %CodePage, 50230
  br i1 %0, label %dec_label_pc_4514a7, label %dec_label_pc_4514ce, !insn.addr !4760

dec_label_pc_4514a7:                              ; preds = %dec_label_pc_45147d
  store i32 0, i32* %edx.0.reg2mem
  store i32 0, i32* %edx.0.reg2mem
  switch i32 %CodePage, label %dec_label_pc_4514ae [
    i32 50229, label %dec_label_pc_4514f7
    i32 42, label %dec_label_pc_4514f7
  ]

dec_label_pc_4514ae:                              ; preds = %dec_label_pc_4514a7
  %1 = icmp ult i32 %CodePage, 50220
  br i1 %1, label %dec_label_pc_4514ee, label %dec_label_pc_4514b6, !insn.addr !4761

dec_label_pc_4514b6:                              ; preds = %dec_label_pc_4514ae
  %2 = icmp ult i32 %CodePage, 50223
  store i32 0, i32* %edx.0.reg2mem
  br i1 %2, label %dec_label_pc_4514f7, label %switch.early.test

switch.early.test:                                ; preds = %dec_label_pc_4514b6
  store i32 0, i32* %edx.0.reg2mem
  store i32 0, i32* %edx.0.reg2mem
  switch i32 %CodePage, label %dec_label_pc_4514ee [
    i32 50227, label %dec_label_pc_4514f7
    i32 50225, label %dec_label_pc_4514f7
  ]

dec_label_pc_4514ce:                              ; preds = %dec_label_pc_45147d
  %3 = icmp eq i32 %CodePage, 54936, !insn.addr !4762
  store i32 0, i32* %edx.0.reg2mem, !insn.addr !4763
  br i1 %3, label %dec_label_pc_4514f7, label %dec_label_pc_4514d6, !insn.addr !4763

dec_label_pc_4514d6:                              ; preds = %dec_label_pc_4514ce
  %4 = icmp ult i32 %CodePage, 57002
  br i1 %4, label %dec_label_pc_4514ee, label %dec_label_pc_4514de, !insn.addr !4764

dec_label_pc_4514de:                              ; preds = %dec_label_pc_4514d6
  %5 = icmp ult i32 %CodePage, 57012
  %6 = and i32 %CodePage, -2
  %switch = icmp eq i32 %6, 65000
  %or.cond = or i1 %5, %switch
  store i32 0, i32* %edx.0.reg2mem
  br i1 %or.cond, label %dec_label_pc_4514f7, label %dec_label_pc_4514ee

dec_label_pc_4514ee:                              ; preds = %dec_label_pc_4514de, %switch.early.test, %dec_label_pc_4514d6, %dec_label_pc_4514ae
  %7 = and i32 %dwFlags, -129, !insn.addr !4765
  store i32 %7, i32* %edx.0.reg2mem, !insn.addr !4765
  br label %dec_label_pc_4514f7, !insn.addr !4765

dec_label_pc_4514f7:                              ; preds = %dec_label_pc_4514de, %switch.early.test, %switch.early.test, %dec_label_pc_4514b6, %dec_label_pc_4514a7, %dec_label_pc_4514a7, %dec_label_pc_4514ee, %dec_label_pc_4514ce
  %8 = icmp ne i32 %CodePage, 65000, !insn.addr !4766
  %9 = icmp eq i32 %CodePage, 65001, !insn.addr !4767
  %10 = icmp eq i1 %9, false, !insn.addr !4768
  %or.cond16 = icmp eq i1 %8, %10
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %11 = bitcast i32* %lpUsedDefaultChar to i1*
  %12 = select i1 %or.cond16, i1* %11, i1* null, !insn.addr !4769
  %13 = select i1 %or.cond16, i8* %lpDefaultChar, i8* null, !insn.addr !4770
  %14 = call i32 @WideCharToMultiByte(i32 %CodePage, i32 %edx.0.reload, i16* %lpWideCharStr, i32 %cchWideChar, i8* %lpMultiByteStr, i32 %cbMultiByte, i8* %13, i1* %12), !insn.addr !4771
  ret i32 %14, !insn.addr !4772
}

declare i16* @find_end_of_double_null_terminated_sequence(i16*) local_unnamed_addr

define i8* @__dcrt_get_narrow_environment_from_os() local_unnamed_addr {
dec_label_pc_45160f:
  %ebx.13.reg2mem = alloca i32, !insn.addr !4773
  %ebx.1.ph.reg2mem = alloca i32, !insn.addr !4773
  %edi.0.reg2mem = alloca i32*, !insn.addr !4773
  %ebx.0.reg2mem = alloca i32, !insn.addr !4773
  %0 = call i16* @GetEnvironmentStringsW(), !insn.addr !4774
  %1 = icmp eq i16* %0, null, !insn.addr !4775
  store i32 0, i32* %ebx.13.reg2mem, !insn.addr !4776
  br i1 %1, label %dec_label_pc_45168c, label %dec_label_pc_451626, !insn.addr !4776

dec_label_pc_451626:                              ; preds = %dec_label_pc_45160f
  %2 = call i16* @find_end_of_double_null_terminated_sequence(i16* nonnull %0), !insn.addr !4777
  %3 = call i32 @function_40461f(), !insn.addr !4778
  %4 = icmp eq i32 %3, 0, !insn.addr !4779
  store i32 0, i32* %ebx.1.ph.reg2mem, !insn.addr !4780
  br i1 %4, label %dec_label_pc_451685, label %dec_label_pc_451649, !insn.addr !4780

dec_label_pc_451649:                              ; preds = %dec_label_pc_451626
  %5 = call i32* @_malloc_base(i32 %3), !insn.addr !4781
  %6 = icmp eq i32* %5, null, !insn.addr !4782
  br i1 %6, label %dec_label_pc_451674, label %dec_label_pc_451656, !insn.addr !4783

dec_label_pc_451656:                              ; preds = %dec_label_pc_451649
  %7 = ptrtoint i32* %5 to i32, !insn.addr !4781
  %8 = call i32 @function_40461f(), !insn.addr !4784
  %9 = icmp eq i32 %8, 0, !insn.addr !4785
  store i32 %7, i32* %ebx.0.reg2mem, !insn.addr !4786
  store i32* null, i32** %edi.0.reg2mem, !insn.addr !4786
  br i1 %9, label %dec_label_pc_451674, label %dec_label_pc_451676, !insn.addr !4786

dec_label_pc_451674:                              ; preds = %dec_label_pc_451656, %dec_label_pc_451649
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !4787
  store i32* %5, i32** %edi.0.reg2mem, !insn.addr !4787
  br label %dec_label_pc_451676, !insn.addr !4787

dec_label_pc_451676:                              ; preds = %dec_label_pc_451656, %dec_label_pc_451674
  %edi.0.reload = load i32*, i32** %edi.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  call void @_free_base(i32* %edi.0.reload), !insn.addr !4788
  store i32 %ebx.0.reload, i32* %ebx.1.ph.reg2mem, !insn.addr !4789
  br label %dec_label_pc_451685, !insn.addr !4789

dec_label_pc_451685:                              ; preds = %dec_label_pc_451626, %dec_label_pc_451676
  %ebx.1.ph.reload = load i32, i32* %ebx.1.ph.reg2mem
  %10 = call i1 @FreeEnvironmentStringsW(i16* nonnull %0), !insn.addr !4790
  store i32 %ebx.1.ph.reload, i32* %ebx.13.reg2mem, !insn.addr !4790
  br label %dec_label_pc_45168c, !insn.addr !4790

dec_label_pc_45168c:                              ; preds = %dec_label_pc_45160f, %dec_label_pc_451685
  %ebx.13.reload = load i32, i32* %ebx.13.reg2mem
  %11 = inttoptr i32 %ebx.13.reload to i8*, !insn.addr !4791
  ret i8* %11, !insn.addr !4791
}

define i32 @"common_set_variable_in_environment_nolock<char>"(i8* %option, i32 %is_top_level_call) local_unnamed_addr {
dec_label_pc_451718:
  %eax.3.reg2mem = alloca i32, !insn.addr !4792
  %edi.2.reg2mem = alloca i32, !insn.addr !4792
  %ebx.1.reg2mem = alloca i32, !insn.addr !4792
  %ebx.0.reg2mem = alloca i32, !insn.addr !4792
  %esi.0.reg2mem = alloca i32, !insn.addr !4792
  %edi.1.reg2mem = alloca i32, !insn.addr !4792
  %edi.0.reg2mem = alloca i32, !insn.addr !4792
  %eax.0.reg2mem = alloca i32, !insn.addr !4792
  %ecx.010.reg2mem = alloca i32, !insn.addr !4792
  %.reg2mem13 = alloca i32, !insn.addr !4792
  %.reg2mem11 = alloca i32*, !insn.addr !4792
  %.reg2mem = alloca i32, !insn.addr !4792
  %stack_var_-32 = alloca i32, align 4
  %stack_var_4 = alloca i8*, align 4
  store i8* %option, i8** %stack_var_4, align 4
  %0 = icmp eq i8* %option, null, !insn.addr !4793
  %1 = icmp eq i1 %0, false, !insn.addr !4794
  br i1 %1, label %dec_label_pc_45173b, label %dec_label_pc_451728, !insn.addr !4794

dec_label_pc_451728:                              ; preds = %dec_label_pc_451718
  %2 = call i32* @_errno(), !insn.addr !4795
  store i32 22, i32* %2, align 4, !insn.addr !4796
  store i32 -1, i32* %eax.3.reg2mem, !insn.addr !4797
  br label %dec_label_pc_451948, !insn.addr !4797

dec_label_pc_45173b:                              ; preds = %dec_label_pc_451718
  %3 = ptrtoint i8* %option to i32
  %4 = call i32 @function_40196a(), !insn.addr !4798
  %5 = icmp eq i32 %4, 0, !insn.addr !4799
  %6 = icmp eq i32 %4, %3, !insn.addr !4800
  %or.cond = or i1 %5, %6
  br i1 %or.cond, label %dec_label_pc_45192f, label %dec_label_pc_45175c, !insn.addr !4801

dec_label_pc_45175c:                              ; preds = %dec_label_pc_45173b
  %7 = add i32 %4, 1, !insn.addr !4802
  %8 = inttoptr i32 %7 to i8*, !insn.addr !4802
  %9 = load i8, i8* %8, align 1, !insn.addr !4802
  call void @"ensure_current_environment_is_not_initial_environment_nolock<char>"(), !insn.addr !4803
  %10 = load i32, i32* @_environ_table, align 4
  %11 = icmp eq i32 %10, 0, !insn.addr !4804
  %12 = icmp eq i1 %11, false, !insn.addr !4805
  store i32 %10, i32* %.reg2mem, !insn.addr !4805
  br i1 %12, label %dec_label_pc_4517ec, label %dec_label_pc_451771, !insn.addr !4805

dec_label_pc_451771:                              ; preds = %dec_label_pc_45175c
  %13 = icmp eq i32 %is_top_level_call, 0, !insn.addr !4806
  %14 = load i32, i32* @_wenviron_table, align 4, !insn.addr !4807
  %15 = icmp eq i32 %14, 0, !insn.addr !4807
  %or.cond7 = or i1 %13, %15
  br i1 %or.cond7, label %dec_label_pc_451792, label %dec_label_pc_45177e, !insn.addr !4808

dec_label_pc_45177e:                              ; preds = %dec_label_pc_451771
  %16 = call i32 @function_4010e1(), !insn.addr !4809
  %17 = icmp eq i32 %16, 0, !insn.addr !4810
  br i1 %17, label %dec_label_pc_45192f, label %dec_label_pc_45178b, !insn.addr !4811

dec_label_pc_45178b:                              ; preds = %dec_label_pc_45177e
  call void @"ensure_current_environment_is_not_initial_environment_nolock<char>"(), !insn.addr !4812
  br label %dec_label_pc_4517ecthread-pre-split, !insn.addr !4813

dec_label_pc_451792:                              ; preds = %dec_label_pc_451771
  %18 = icmp eq i8 %9, 0, !insn.addr !4814
  %19 = icmp eq i1 %18, false, !insn.addr !4815
  store i32 0, i32* %ebx.1.reg2mem, !insn.addr !4815
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4815
  br i1 %19, label %dec_label_pc_45179e, label %dec_label_pc_45193d, !insn.addr !4815

dec_label_pc_45179e:                              ; preds = %dec_label_pc_451792
  %20 = call i32* @_calloc_base(i32 1, i32 4), !insn.addr !4816
  %21 = ptrtoint i32* %20 to i32, !insn.addr !4816
  store i32 %21, i32* @_environ_table, align 4, !insn.addr !4817
  call void @_free_base(i32* null), !insn.addr !4818
  %22 = load i32, i32* @_environ_table, align 4, !insn.addr !4819
  %23 = icmp eq i32 %22, 0, !insn.addr !4819
  store i32 -1, i32* %ebx.1.reg2mem, !insn.addr !4820
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4820
  br i1 %23, label %dec_label_pc_45193d, label %dec_label_pc_4517c1, !insn.addr !4820

dec_label_pc_4517c1:                              ; preds = %dec_label_pc_45179e
  %24 = load i32, i32* @_wenviron_table, align 4, !insn.addr !4821
  %25 = icmp eq i32 %24, 0, !insn.addr !4821
  %26 = icmp eq i1 %25, false, !insn.addr !4822
  br i1 %26, label %dec_label_pc_4517ecthread-pre-split, label %dec_label_pc_4517c9, !insn.addr !4822

dec_label_pc_4517c9:                              ; preds = %dec_label_pc_4517c1
  %27 = call i32* @_calloc_base(i32 1, i32 4), !insn.addr !4823
  %28 = ptrtoint i32* %27 to i32, !insn.addr !4823
  store i32 %28, i32* @_wenviron_table, align 4, !insn.addr !4824
  call void @_free_base(i32* null), !insn.addr !4825
  %29 = load i32, i32* @_wenviron_table, align 4, !insn.addr !4826
  %30 = icmp eq i32 %29, 0, !insn.addr !4826
  store i32 -1, i32* %ebx.1.reg2mem, !insn.addr !4827
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4827
  br i1 %30, label %dec_label_pc_45193d, label %dec_label_pc_4517ecthread-pre-split, !insn.addr !4827

dec_label_pc_4517ecthread-pre-split:              ; preds = %dec_label_pc_45178b, %dec_label_pc_4517c1, %dec_label_pc_4517c9
  %.pr = load i32, i32* @_environ_table, align 4
  store i32 %.pr, i32* %.reg2mem
  br label %dec_label_pc_4517ec

dec_label_pc_4517ec:                              ; preds = %dec_label_pc_4517ecthread-pre-split, %dec_label_pc_45175c
  %.reload = load i32, i32* %.reg2mem, !insn.addr !4828
  %31 = icmp eq i32 %.reload, 0, !insn.addr !4829
  store i32 -1, i32* %ebx.1.reg2mem, !insn.addr !4830
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4830
  br i1 %31, label %dec_label_pc_45193d, label %dec_label_pc_4517fc, !insn.addr !4830

dec_label_pc_4517fc:                              ; preds = %dec_label_pc_4517ec
  %32 = sub i32 %4, %3, !insn.addr !4831
  %33 = call i32 @"find_in_environment_nolock<char>"(i8* %option, i32 %32), !insn.addr !4832
  %34 = icmp slt i32 %33, 0, !insn.addr !4833
  br i1 %34, label %dec_label_pc_451863, label %dec_label_pc_451814, !insn.addr !4834

dec_label_pc_451814:                              ; preds = %dec_label_pc_4517fc
  %35 = inttoptr i32 %.reload to i32*, !insn.addr !4835
  %36 = load i32, i32* %35, align 4, !insn.addr !4835
  %37 = icmp eq i32 %36, 0, !insn.addr !4835
  br i1 %37, label %dec_label_pc_451863, label %dec_label_pc_451818, !insn.addr !4836

dec_label_pc_451818:                              ; preds = %dec_label_pc_451814
  %38 = mul i32 %33, 4
  %39 = add i32 %38, %.reload
  %40 = inttoptr i32 %39 to i32*
  %41 = load i32, i32* %40, align 4, !insn.addr !4837
  %42 = inttoptr i32 %41 to i32*
  call void @_free_base(i32* %42), !insn.addr !4838
  %43 = icmp eq i8 %9, 0, !insn.addr !4839
  %44 = icmp eq i1 %43, false, !insn.addr !4840
  br i1 %44, label %dec_label_pc_451859, label %dec_label_pc_451836.preheader, !insn.addr !4840

dec_label_pc_451836.preheader:                    ; preds = %dec_label_pc_451818
  %45 = load i32, i32* %40, align 4, !insn.addr !4841
  %46 = icmp eq i32 %45, 0, !insn.addr !4841
  %47 = icmp eq i1 %46, false, !insn.addr !4842
  br i1 %47, label %dec_label_pc_45182e.preheader, label %dec_label_pc_45183b, !insn.addr !4842

dec_label_pc_45182e.preheader:                    ; preds = %dec_label_pc_451836.preheader
  %48 = add i32 %.reload, 4, !insn.addr !4843
  store i32* %40, i32** %.reg2mem11
  store i32 %38, i32* %.reg2mem13
  store i32 %33, i32* %ecx.010.reg2mem
  br label %dec_label_pc_45182e

dec_label_pc_45182e:                              ; preds = %dec_label_pc_45182e.preheader, %dec_label_pc_45182e
  %ecx.010.reload = load i32, i32* %ecx.010.reg2mem
  %.reload14 = load i32, i32* %.reg2mem13
  %.reload12 = load i32*, i32** %.reg2mem11
  %49 = add i32 %48, %.reload14, !insn.addr !4843
  %50 = inttoptr i32 %49 to i32*, !insn.addr !4843
  %51 = load i32, i32* %50, align 4, !insn.addr !4843
  store i32 %51, i32* %.reload12, align 4, !insn.addr !4844
  %52 = add i32 %ecx.010.reload, 1, !insn.addr !4845
  %53 = mul i32 %52, 4, !insn.addr !4841
  %54 = add i32 %53, %.reload, !insn.addr !4841
  %55 = inttoptr i32 %54 to i32*, !insn.addr !4841
  %56 = load i32, i32* %55, align 4, !insn.addr !4841
  %57 = icmp eq i32 %56, 0, !insn.addr !4841
  %58 = icmp eq i1 %57, false, !insn.addr !4842
  store i32* %55, i32** %.reg2mem11, !insn.addr !4842
  store i32 %53, i32* %.reg2mem13, !insn.addr !4842
  store i32 %52, i32* %ecx.010.reg2mem, !insn.addr !4842
  br i1 %58, label %dec_label_pc_45182e, label %dec_label_pc_45183b, !insn.addr !4842

dec_label_pc_45183b:                              ; preds = %dec_label_pc_45182e, %dec_label_pc_451836.preheader
  %59 = call i32 @function_402194(), !insn.addr !4846
  call void @_free_base(i32* null), !insn.addr !4847
  %60 = icmp eq i32 %59, 0, !insn.addr !4848
  store i32 %59, i32* %eax.0.reg2mem, !insn.addr !4849
  store i32 %3, i32* %edi.0.reg2mem, !insn.addr !4849
  store i32 %3, i32* %edi.1.reg2mem, !insn.addr !4849
  br i1 %60, label %dec_label_pc_4518b9, label %dec_label_pc_4518b4, !insn.addr !4849

dec_label_pc_451859:                              ; preds = %dec_label_pc_451818
  store i32 %3, i32* %40, align 4, !insn.addr !4850
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !4851
  br label %dec_label_pc_4518b9, !insn.addr !4851

dec_label_pc_451863:                              ; preds = %dec_label_pc_451814, %dec_label_pc_4517fc
  %61 = icmp eq i8 %9, 0, !insn.addr !4852
  store i32 0, i32* %ebx.1.reg2mem, !insn.addr !4853
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4853
  br i1 %61, label %dec_label_pc_45193d, label %dec_label_pc_45186c, !insn.addr !4853

dec_label_pc_45186c:                              ; preds = %dec_label_pc_451863
  %62 = sub i32 0, %33, !insn.addr !4854
  %63 = sub i32 2, %33, !insn.addr !4855
  %64 = icmp ult i32 %63, %62, !insn.addr !4856
  %65 = icmp ult i32 %63, 1073741823, !insn.addr !4857
  %66 = icmp eq i1 %65, false, !insn.addr !4858
  %or.cond9 = or i1 %64, %66
  store i32 -1, i32* %ebx.1.reg2mem, !insn.addr !4859
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4859
  br i1 %or.cond9, label %dec_label_pc_45193d, label %dec_label_pc_451888, !insn.addr !4859

dec_label_pc_451888:                              ; preds = %dec_label_pc_45186c
  %67 = call i32 @function_402194(), !insn.addr !4860
  call void @_free_base(i32* null), !insn.addr !4861
  %68 = icmp eq i32 %67, 0, !insn.addr !4862
  store i32 -1, i32* %ebx.1.reg2mem, !insn.addr !4863
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4863
  br i1 %68, label %dec_label_pc_45193d, label %dec_label_pc_4518a8, !insn.addr !4863

dec_label_pc_4518a8:                              ; preds = %dec_label_pc_451888
  %69 = mul i32 %62, 4, !insn.addr !4864
  %70 = add i32 %67, %69
  %71 = inttoptr i32 %70 to i32*, !insn.addr !4864
  store i32 %3, i32* %71, align 4, !insn.addr !4864
  %72 = add i32 %70, 4, !insn.addr !4865
  %73 = inttoptr i32 %72 to i32*, !insn.addr !4865
  store i32 0, i32* %73, align 4, !insn.addr !4865
  store i32 %67, i32* %eax.0.reg2mem, !insn.addr !4865
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !4865
  br label %dec_label_pc_4518b4, !insn.addr !4865

dec_label_pc_4518b4:                              ; preds = %dec_label_pc_45183b, %dec_label_pc_4518a8
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  store i32 %eax.0.reload, i32* @_environ_table, align 4, !insn.addr !4866
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !4866
  br label %dec_label_pc_4518b9, !insn.addr !4866

dec_label_pc_4518b9:                              ; preds = %dec_label_pc_4518b4, %dec_label_pc_451859, %dec_label_pc_45183b
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %74 = icmp eq i32 %is_top_level_call, 0, !insn.addr !4867
  store i32 %3, i32* %esi.0.reg2mem, !insn.addr !4868
  store i32 0, i32* %ebx.1.reg2mem, !insn.addr !4868
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !4868
  br i1 %74, label %dec_label_pc_45193d, label %dec_label_pc_4518c1, !insn.addr !4868

dec_label_pc_4518c1:                              ; preds = %dec_label_pc_4518b9, %dec_label_pc_4518c1
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %75 = inttoptr i32 %esi.0.reload to i8*, !insn.addr !4869
  %76 = load i8, i8* %75, align 1, !insn.addr !4869
  %77 = add i32 %esi.0.reload, 1, !insn.addr !4870
  %78 = icmp eq i8 %76, 0, !insn.addr !4871
  %79 = icmp eq i1 %78, false, !insn.addr !4872
  store i32 %77, i32* %esi.0.reg2mem, !insn.addr !4872
  br i1 %79, label %dec_label_pc_4518c1, label %dec_label_pc_4518c8, !insn.addr !4872

dec_label_pc_4518c8:                              ; preds = %dec_label_pc_4518c1
  %80 = sub i32 %esi.0.reload, %3, !insn.addr !4873
  %81 = add i32 %80, 2, !insn.addr !4874
  %82 = call i32* @_calloc_base(i32 %81, i32 1), !insn.addr !4875
  %83 = icmp eq i32* %82, null, !insn.addr !4876
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !4877
  br i1 %83, label %dec_label_pc_451926, label %dec_label_pc_4518e0, !insn.addr !4877

dec_label_pc_4518e0:                              ; preds = %dec_label_pc_4518c8
  %84 = load i8*, i8** %stack_var_4, align 4
  %85 = bitcast i32* %82 to i8*
  %86 = call i32 @strcpy_s(i8* %85, i32 %81, i8* %84), !insn.addr !4878
  %87 = icmp eq i32 %86, 0, !insn.addr !4879
  %88 = icmp eq i1 %87, false, !insn.addr !4880
  br i1 %88, label %dec_label_pc_45194b, label %dec_label_pc_4518f3, !insn.addr !4880

dec_label_pc_4518f3:                              ; preds = %dec_label_pc_4518e0
  %89 = ptrtoint i32* %82 to i32, !insn.addr !4875
  %90 = ptrtoint i8* %84 to i32
  %91 = sub i32 %89, %90, !insn.addr !4881
  %92 = add i32 %91, %7, !insn.addr !4882
  %93 = icmp eq i8 %9, 0, !insn.addr !4883
  %94 = add i32 %91, %4, !insn.addr !4884
  %95 = inttoptr i32 %94 to i8*, !insn.addr !4884
  store i8 0, i8* %95, align 1, !insn.addr !4884
  %96 = select i1 %93, i32 0, i32 %92, !insn.addr !4885
  %97 = call i32 @function_403a8f(i32 %89, i32 %96), !insn.addr !4885
  %98 = icmp eq i32 %97, 0, !insn.addr !4886
  %99 = icmp eq i1 %98, false, !insn.addr !4887
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !4887
  br i1 %99, label %dec_label_pc_451926, label %dec_label_pc_451918, !insn.addr !4887

dec_label_pc_451918:                              ; preds = %dec_label_pc_4518f3
  %100 = call i32* @_errno(), !insn.addr !4888
  store i32 42, i32* %100, align 4, !insn.addr !4889
  store i32 -1, i32* %ebx.0.reg2mem, !insn.addr !4889
  br label %dec_label_pc_451926, !insn.addr !4889

dec_label_pc_451926:                              ; preds = %dec_label_pc_451918, %dec_label_pc_4518f3, %dec_label_pc_4518c8
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  call void @_free_base(i32* %82), !insn.addr !4890
  store i32 %ebx.0.reload, i32* %ebx.1.reg2mem, !insn.addr !4891
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !4891
  br label %dec_label_pc_45193d, !insn.addr !4891

dec_label_pc_45192f:                              ; preds = %dec_label_pc_45177e, %dec_label_pc_45173b
  %101 = call i32* @_errno(), !insn.addr !4892
  store i32 22, i32* %101, align 4, !insn.addr !4893
  store i32 -1, i32* %ebx.1.reg2mem, !insn.addr !4893
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4893
  br label %dec_label_pc_45193d, !insn.addr !4893

dec_label_pc_45193d:                              ; preds = %dec_label_pc_45179e, %dec_label_pc_4517c9, %dec_label_pc_4517ec, %dec_label_pc_45186c, %dec_label_pc_451888, %dec_label_pc_45192f, %dec_label_pc_451792, %dec_label_pc_451926, %dec_label_pc_4518b9, %dec_label_pc_451863
  %102 = ptrtoint i32* %stack_var_-32 to i32, !insn.addr !4894
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %ebx.1.reload = load i32, i32* %ebx.1.reg2mem
  %103 = add i32 %102, -4, !insn.addr !4895
  %104 = inttoptr i32 %103 to i32*, !insn.addr !4895
  store i32 %edi.2.reload, i32* %104, align 4, !insn.addr !4895
  call void @_free_base(i32* nonnull @80), !insn.addr !4896
  store i32 %ebx.1.reload, i32* %eax.3.reg2mem, !insn.addr !4897
  br label %dec_label_pc_451948, !insn.addr !4897

dec_label_pc_451948:                              ; preds = %dec_label_pc_45193d, %dec_label_pc_451728
  %eax.3.reload = load i32, i32* %eax.3.reg2mem
  ret i32 %eax.3.reload, !insn.addr !4898

dec_label_pc_45194b:                              ; preds = %dec_label_pc_4518e0
  %105 = call i32 @__invoke_watson(), !insn.addr !4899
  %106 = call i32 @__asm_int3(), !insn.addr !4900
  %107 = call i32 @__asm_int3(), !insn.addr !4901
  %108 = call i32 @__asm_int3(), !insn.addr !4902
  %109 = call i32 @__asm_int3(), !insn.addr !4903
  %110 = call i32 @__asm_int3(), !insn.addr !4904
  %111 = call i32 @__asm_int3(), !insn.addr !4905
  %112 = call i32 @__asm_int3(), !insn.addr !4906
  %113 = call i32 @__asm_int3(), !insn.addr !4907
  %114 = call i32 @__asm_int3(), !insn.addr !4908
  %115 = call i32 @__asm_int3(), !insn.addr !4909
  %116 = call i32 @__asm_int3(), !insn.addr !4910
  %117 = call i32 @__asm_int3(), !insn.addr !4911
  %118 = call i32 @__asm_int3(), !insn.addr !4912
  %119 = call i32 @__asm_int3(), !insn.addr !4913
  %120 = call i32 @__asm_int3(), !insn.addr !4914
  %121 = call i32 @__asm_int3(), !insn.addr !4915
  %122 = call i32 @__asm_int3(), !insn.addr !4916
  %123 = call i32 @__asm_int3(), !insn.addr !4917
  %124 = call i32 @__asm_int3(), !insn.addr !4918
  %125 = call i32 @__asm_int3(), !insn.addr !4919
  %126 = call i32 @__asm_int3(), !insn.addr !4920
  %127 = call i32 @__asm_int3(), !insn.addr !4921
  %128 = call i32 @__asm_int3(), !insn.addr !4922
  %129 = call i32 @__asm_int3(), !insn.addr !4923
  %130 = call i32 @__asm_int3(), !insn.addr !4924
  %131 = call i32 @__asm_int3(), !insn.addr !4925
  %132 = call i32 @__asm_int3(), !insn.addr !4926
  %133 = call i32 @__asm_int3(), !insn.addr !4927
  %134 = call i32 @__asm_int3(), !insn.addr !4928
  %135 = call i32 @__asm_int3(), !insn.addr !4929
  %136 = call i32 @__asm_int3(), !insn.addr !4930
  %137 = call i32 @__asm_int3(), !insn.addr !4931
  %138 = call i32 @__asm_int3(), !insn.addr !4932
  %139 = call i32 @__asm_int3(), !insn.addr !4933
  %140 = call i32 @__asm_int3(), !insn.addr !4934
  %141 = call i32 @__asm_int3(), !insn.addr !4935
  %142 = call i32 @__asm_int3(), !insn.addr !4936
  %143 = call i32 @__asm_int3(), !insn.addr !4937
  %144 = call i32 @__asm_int3(), !insn.addr !4938
  %145 = call i32 @__asm_int3(), !insn.addr !4939
  %146 = call i32 @__asm_int3(), !insn.addr !4940
  %147 = call i32 @__asm_int3(), !insn.addr !4941
  %148 = call i32 @__asm_int3(), !insn.addr !4942
  %149 = call i32 @__asm_int3(), !insn.addr !4943
  %150 = call i32 @__asm_int3(), !insn.addr !4944
  %151 = call i32 @__asm_int3(), !insn.addr !4945
  %152 = call i32 @__asm_int3(), !insn.addr !4946
  %153 = call i32 @__asm_int3(), !insn.addr !4947
  %154 = call i32 @__asm_int3(), !insn.addr !4948
  %155 = call i32 @__asm_int3(), !insn.addr !4949
  %156 = call i32 @__asm_int3(), !insn.addr !4950
  %157 = call i32 @__asm_int3(), !insn.addr !4951
  %158 = call i32 @__asm_int3(), !insn.addr !4952
  %159 = call i32 @__asm_int3(), !insn.addr !4953
  %160 = call i32 @__asm_int3(), !insn.addr !4954
  %161 = call i32 @__asm_int3(), !insn.addr !4955
  %162 = call i32 @__asm_int3(), !insn.addr !4956
  %163 = call i32 @__asm_int3(), !insn.addr !4957
  %164 = call i32 @__asm_int3(), !insn.addr !4958
  %165 = call i32 @__asm_int3(), !insn.addr !4959
  %166 = call i32 @__asm_int3(), !insn.addr !4960
  %167 = call i32 @__asm_int3(), !insn.addr !4961
  %168 = call i32 @__asm_int3(), !insn.addr !4962
  %169 = call i32 @__asm_int3(), !insn.addr !4963
  %170 = call i32 @__asm_int3(), !insn.addr !4964
  %171 = call i32 @__asm_int3(), !insn.addr !4965
  %172 = call i32 @__asm_int3(), !insn.addr !4966
  %173 = call i32 @__asm_int3(), !insn.addr !4967
  %174 = call i32 @__asm_int3(), !insn.addr !4968
  %175 = call i32 @__asm_int3(), !insn.addr !4969
  %176 = call i32 @__asm_int3(), !insn.addr !4970
  %177 = call i32 @__asm_int3(), !insn.addr !4971
  %178 = call i32 @__asm_int3(), !insn.addr !4972
  %179 = call i32 @__asm_int3(), !insn.addr !4973
  %180 = call i32 @__asm_int3(), !insn.addr !4974
  %181 = call i32 @__asm_int3(), !insn.addr !4975
  %182 = call i32 @__asm_int3(), !insn.addr !4976
  %183 = call i32 @__asm_int3(), !insn.addr !4977
  %184 = call i32 @__asm_int3(), !insn.addr !4978
  %185 = call i32 @__asm_int3(), !insn.addr !4979
  %186 = call i32 @__asm_int3(), !insn.addr !4980
  %187 = call i32 @__asm_int3(), !insn.addr !4981
  %188 = call i32 @__asm_int3(), !insn.addr !4982
  %189 = call i32 @__asm_int3(), !insn.addr !4983
  %190 = call i32 @__asm_int3(), !insn.addr !4984
  %191 = call i32 @__asm_int3(), !insn.addr !4985
  %192 = call i32 @__asm_int3(), !insn.addr !4986
  %193 = call i32 @__asm_int3(), !insn.addr !4987
  %194 = call i32 @__asm_int3(), !insn.addr !4988
  %195 = call i32 @__asm_int3(), !insn.addr !4989
  %196 = call i32 @__asm_int3(), !insn.addr !4990
  %197 = call i32 @__asm_int3(), !insn.addr !4991
  %198 = call i32 @__asm_int3(), !insn.addr !4992
  %199 = call i32 @__asm_int3(), !insn.addr !4993
  %200 = call i32 @__asm_int3(), !insn.addr !4994
  %201 = call i32 @__asm_int3(), !insn.addr !4995
  %202 = call i32 @__asm_int3(), !insn.addr !4996
  %203 = call i32 @__asm_int3(), !insn.addr !4997
  %204 = call i32 @__asm_int3(), !insn.addr !4998
  %205 = call i32 @__asm_int3(), !insn.addr !4999
  %206 = call i32 @__asm_int3(), !insn.addr !5000
  %207 = call i32 @__asm_int3(), !insn.addr !5001
  %208 = call i32 @__asm_int3(), !insn.addr !5002
  %209 = call i32 @__asm_int3(), !insn.addr !5003
  %210 = call i32 @__asm_int3(), !insn.addr !5004
  %211 = call i32 @__asm_int3(), !insn.addr !5005
  %212 = call i32 @__asm_int3(), !insn.addr !5006
  %213 = call i32 @__asm_int3(), !insn.addr !5007
  %214 = call i32 @__asm_int3(), !insn.addr !5008
  %215 = call i32 @__asm_int3(), !insn.addr !5009
  %216 = call i32 @__asm_int3(), !insn.addr !5010
  %217 = call i32 @__asm_int3(), !insn.addr !5011
  %218 = call i32 @__asm_int3(), !insn.addr !5012
  %219 = call i32 @__asm_int3(), !insn.addr !5013
  %220 = call i32 @__asm_int3(), !insn.addr !5014
  %221 = call i32 @__asm_int3(), !insn.addr !5015
  %222 = call i32 @__asm_int3(), !insn.addr !5016
  %223 = call i32 @__asm_int3(), !insn.addr !5017
  %224 = call i32 @__asm_int3(), !insn.addr !5018
  %225 = call i32 @__asm_int3(), !insn.addr !5019
  %226 = call i32 @__asm_int3(), !insn.addr !5020
  %227 = call i32 @__asm_int3(), !insn.addr !5021
  %228 = call i32 @__asm_int3(), !insn.addr !5022
  %229 = call i32 @__asm_int3(), !insn.addr !5023
  %230 = call i32 @__asm_int3(), !insn.addr !5024
  %231 = call i32 @__asm_int3(), !insn.addr !5025
  %232 = call i32 @__asm_int3(), !insn.addr !5026
  %233 = call i32 @__asm_int3(), !insn.addr !5027
  %234 = call i32 @__asm_int3(), !insn.addr !5028
  %235 = call i32 @__asm_int3(), !insn.addr !5029
  %236 = call i32 @__asm_int3(), !insn.addr !5030
  %237 = call i32 @__asm_int3(), !insn.addr !5031
  %238 = call i32 @__asm_int3(), !insn.addr !5032
  %239 = call i32 @__asm_int3(), !insn.addr !5033
  %240 = call i32 @__asm_int3(), !insn.addr !5034
  %241 = call i32 @__asm_int3(), !insn.addr !5035
  %242 = call i32 @__asm_int3(), !insn.addr !5036
  %243 = call i32 @__asm_int3(), !insn.addr !5037
  %244 = call i32 @__asm_int3(), !insn.addr !5038
  %245 = call i32 @__asm_int3(), !insn.addr !5039
  %246 = call i32 @__asm_int3(), !insn.addr !5040
  %247 = call i32 @__asm_int3(), !insn.addr !5041
  %248 = call i32 @__asm_int3(), !insn.addr !5042
  %249 = call i32 @__asm_int3(), !insn.addr !5043
  ret i32 %249, !insn.addr !5043
}

declare void @"ensure_current_environment_is_not_initial_environment_nolock<char>"() local_unnamed_addr

define i32 @"find_in_environment_nolock<char>"(i8* %name, i32 %length) local_unnamed_addr {
dec_label_pc_451ed5:
  %storemerge.reg2mem = alloca i32, !insn.addr !5044
  %esi.1.reg2mem = alloca i32, !insn.addr !5044
  %esi.0.reg2mem = alloca i32, !insn.addr !5044
  %eax.0.reg2mem = alloca i32, !insn.addr !5044
  %stack_var_-16 = alloca i32, align 4
  %0 = load i32, i32* @_environ_table, align 4, !insn.addr !5045
  %1 = inttoptr i32 %0 to i32*, !insn.addr !5046
  %2 = load i32, i32* %1, align 4, !insn.addr !5046
  %3 = icmp eq i32 %2, 0, !insn.addr !5047
  store i32 %0, i32* %esi.1.reg2mem, !insn.addr !5048
  br i1 %3, label %dec_label_pc_451f15, label %dec_label_pc_451eee.preheader, !insn.addr !5048

dec_label_pc_451eee.preheader:                    ; preds = %dec_label_pc_451ed5
  %4 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !5049
  %5 = add i32 %4, -4, !insn.addr !5050
  %6 = inttoptr i32 %5 to i32*, !insn.addr !5050
  %7 = add i32 %4, -8, !insn.addr !5051
  %8 = inttoptr i32 %7 to i32*, !insn.addr !5051
  %9 = ptrtoint i8* %name to i32, !insn.addr !5052
  %10 = add i32 %4, -12, !insn.addr !5052
  %11 = inttoptr i32 %10 to i32*, !insn.addr !5052
  store i32 %2, i32* %eax.0.reg2mem
  store i32 %0, i32* %esi.0.reg2mem
  br label %dec_label_pc_451eee

dec_label_pc_451eee:                              ; preds = %dec_label_pc_451eee.preheader, %dec_label_pc_451f0c
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  store i32 %length, i32* %6, align 4, !insn.addr !5050
  store i32 %eax.0.reload, i32* %8, align 4, !insn.addr !5051
  store i32 %9, i32* %11, align 4, !insn.addr !5052
  %12 = call i32 @_strnicoll(i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !5053
  %13 = icmp eq i32 %12, 0, !insn.addr !5054
  %14 = icmp eq i1 %13, false, !insn.addr !5055
  br i1 %14, label %dec_label_pc_451f0c, label %dec_label_pc_451eff, !insn.addr !5055

dec_label_pc_451eff:                              ; preds = %dec_label_pc_451eee
  %15 = inttoptr i32 %esi.0.reload to i32*, !insn.addr !5056
  %16 = load i32, i32* %15, align 4, !insn.addr !5056
  %17 = add i32 %16, %length, !insn.addr !5057
  %18 = inttoptr i32 %17 to i8*, !insn.addr !5057
  %19 = load i8, i8* %18, align 1, !insn.addr !5057
  switch i8 %19, label %dec_label_pc_451f0c [
    i8 61, label %dec_label_pc_451f23
    i8 0, label %dec_label_pc_451f23
  ]

dec_label_pc_451f0c:                              ; preds = %dec_label_pc_451eff, %dec_label_pc_451eee
  %20 = add i32 %esi.0.reload, 4, !insn.addr !5058
  %21 = inttoptr i32 %20 to i32*, !insn.addr !5059
  %22 = load i32, i32* %21, align 4, !insn.addr !5059
  %23 = icmp eq i32 %22, 0, !insn.addr !5060
  %24 = icmp eq i1 %23, false, !insn.addr !5061
  store i32 %22, i32* %eax.0.reg2mem, !insn.addr !5061
  store i32 %20, i32* %esi.0.reg2mem, !insn.addr !5061
  store i32 %20, i32* %esi.1.reg2mem, !insn.addr !5061
  br i1 %24, label %dec_label_pc_451eee, label %dec_label_pc_451f15, !insn.addr !5061

dec_label_pc_451f15:                              ; preds = %dec_label_pc_451f0c, %dec_label_pc_451ed5
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %25 = sub i32 %esi.1.reload, %0, !insn.addr !5062
  %26 = sdiv i32 %25, -4, !insn.addr !5063
  store i32 %26, i32* %storemerge.reg2mem, !insn.addr !5063
  br label %dec_label_pc_451f1c, !insn.addr !5063

dec_label_pc_451f1c:                              ; preds = %dec_label_pc_451f23, %dec_label_pc_451f15
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !5064

dec_label_pc_451f23:                              ; preds = %dec_label_pc_451eff, %dec_label_pc_451eff
  %27 = sub i32 %esi.0.reload, %0, !insn.addr !5065
  %28 = sdiv i32 %27, 4, !insn.addr !5066
  store i32 %28, i32* %storemerge.reg2mem, !insn.addr !5067
  br label %dec_label_pc_451f1c, !insn.addr !5067
}

define i32 @__dcrt_set_variable_in_narrow_environment_nolock(i8* %option, i32 %is_top_level_call) local_unnamed_addr {
dec_label_pc_45218b:
  %0 = call i32 @"common_set_variable_in_environment_nolock<char>"(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !5068
  ret i32 %0, !insn.addr !5068
}

define void @__acrt_lowio_lock_fh(i32 %fh) local_unnamed_addr {
dec_label_pc_4523b2:
  %0 = and i32 %fh, 63, !insn.addr !5069
  %1 = sdiv i32 %fh, 64, !insn.addr !5070
  %narrow = mul nuw nsw i32 %0, 56
  %2 = mul i32 %1, 4, !insn.addr !5071
  %3 = add i32 %2, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5071
  %4 = inttoptr i32 %3 to i32*, !insn.addr !5071
  %5 = load i32, i32* %4, align 4, !insn.addr !5071
  %6 = add i32 %5, %narrow, !insn.addr !5071
  %7 = inttoptr i32 %6 to %_RTL_CRITICAL_SECTION*, !insn.addr !5072
  call void @EnterCriticalSection(%_RTL_CRITICAL_SECTION* %7), !insn.addr !5073
  ret void, !insn.addr !5074
}

define void @__acrt_lowio_unlock_fh(i32 %fh) local_unnamed_addr {
dec_label_pc_452493:
  %0 = and i32 %fh, 63, !insn.addr !5075
  %1 = sdiv i32 %fh, 64, !insn.addr !5076
  %narrow = mul nuw nsw i32 %0, 56
  %2 = mul i32 %1, 4, !insn.addr !5077
  %3 = add i32 %2, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5077
  %4 = inttoptr i32 %3 to i32*, !insn.addr !5077
  %5 = load i32, i32* %4, align 4, !insn.addr !5077
  %6 = add i32 %5, %narrow, !insn.addr !5077
  %7 = inttoptr i32 %6 to %_RTL_CRITICAL_SECTION*, !insn.addr !5078
  call void @LeaveCriticalSection(%_RTL_CRITICAL_SECTION* %7), !insn.addr !5079
  ret void, !insn.addr !5080
}

define i32 @_get_osfhandle(i32 %fh) local_unnamed_addr {
dec_label_pc_4526ca:
  %0 = icmp eq i32 %fh, -2, !insn.addr !5081
  %1 = icmp eq i1 %0, false, !insn.addr !5082
  br i1 %1, label %dec_label_pc_4526ec, label %dec_label_pc_4526d7, !insn.addr !5082

dec_label_pc_4526d7:                              ; preds = %dec_label_pc_4526ca
  %2 = call i32* @__doserrno(), !insn.addr !5083
  store i32 0, i32* %2, align 4, !insn.addr !5084
  %3 = call i32* @_errno(), !insn.addr !5085
  store i32 9, i32* %3, align 4, !insn.addr !5086
  br label %dec_label_pc_45272f, !insn.addr !5087

dec_label_pc_4526ec:                              ; preds = %dec_label_pc_4526ca
  %4 = icmp slt i32 %fh, 0, !insn.addr !5088
  br i1 %4, label %dec_label_pc_452717, label %dec_label_pc_4526f0, !insn.addr !5089

dec_label_pc_4526f0:                              ; preds = %dec_label_pc_4526ec
  %5 = load i32, i32* @_nhandle, align 4, !insn.addr !5090
  %6 = icmp ugt i32 %5, %fh, !insn.addr !5090
  %7 = icmp eq i1 %6, false, !insn.addr !5091
  br i1 %7, label %dec_label_pc_452717, label %dec_label_pc_4526f8, !insn.addr !5091

dec_label_pc_4526f8:                              ; preds = %dec_label_pc_4526f0
  %8 = and i32 %fh, 63, !insn.addr !5092
  %9 = udiv i32 %fh, 64
  %narrow = mul nuw nsw i32 %8, 56
  %10 = mul i32 %9, 4, !insn.addr !5093
  %11 = add i32 %10, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5093
  %12 = inttoptr i32 %11 to i32*, !insn.addr !5093
  %13 = load i32, i32* %12, align 4, !insn.addr !5093
  %14 = add i32 %13, %narrow
  %15 = add i32 %14, 40, !insn.addr !5094
  %16 = inttoptr i32 %15 to i8*, !insn.addr !5094
  %17 = load i8, i8* %16, align 1, !insn.addr !5094
  %18 = and i8 %17, 1, !insn.addr !5094
  %19 = icmp eq i8 %18, 0, !insn.addr !5094
  br i1 %19, label %dec_label_pc_452717, label %dec_label_pc_452711, !insn.addr !5095

dec_label_pc_452711:                              ; preds = %dec_label_pc_4526f8
  %20 = add i32 %14, 24, !insn.addr !5096
  %21 = inttoptr i32 %20 to i32*, !insn.addr !5096
  %22 = load i32, i32* %21, align 4, !insn.addr !5096
  ret i32 %22, !insn.addr !5097

dec_label_pc_452717:                              ; preds = %dec_label_pc_4526f8, %dec_label_pc_4526f0, %dec_label_pc_4526ec
  %23 = call i32* @__doserrno(), !insn.addr !5098
  store i32 0, i32* %23, align 4, !insn.addr !5099
  %24 = call i32* @_errno(), !insn.addr !5100
  store i32 9, i32* %24, align 4, !insn.addr !5101
  call void @_invalid_parameter_noinfo(), !insn.addr !5102
  br label %dec_label_pc_45272f, !insn.addr !5102

dec_label_pc_45272f:                              ; preds = %dec_label_pc_452717, %dec_label_pc_4526d7
  ret i32 -1, !insn.addr !5103
}

declare void @__acrt_locale_free_monetary(%lconv*) local_unnamed_addr

declare void @__acrt_locale_free_numeric(%lconv*) local_unnamed_addr

declare void @__acrt_locale_free_time(%__crt_lc_time_data*) local_unnamed_addr

define i32 @__acrt_GetStringTypeA(i32 %locale, i32 %info_type, i8* %string, i32 %string_size_in_bytes, i16* %char_type, i32 %code_page, i32 %error) local_unnamed_addr {
dec_label_pc_45427f:
  %esp.3.reg2mem = alloca i32, !insn.addr !5104
  %esi.26.reg2mem = alloca i32, !insn.addr !5104
  %esi.2.reg2mem = alloca i32, !insn.addr !5104
  %esi.0.reg2mem = alloca i32, !insn.addr !5104
  %0 = call i8 @__decompiler_undefined_function_8()
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %1 = call i32 @__decompiler_undefined_function_0()
  store i32 %locale, i32* %stack_var_-48, align 4, !insn.addr !5105
  %2 = call i32 @function_403d91(i32 %locale), !insn.addr !5106
  %3 = ptrtoint i8* %string to i32, !insn.addr !5107
  store i32 %3, i32* %stack_var_-64, align 4, !insn.addr !5107
  %4 = call i32 @function_401712(), !insn.addr !5108
  %5 = icmp eq i32 %4, 0, !insn.addr !5109
  br i1 %5, label %dec_label_pc_45435e, label %dec_label_pc_4542da, !insn.addr !5110

dec_label_pc_4542da:                              ; preds = %dec_label_pc_45427f
  %6 = ptrtoint i32* %stack_var_-48 to i32, !insn.addr !5111
  %7 = mul i32 %4, 2, !insn.addr !5112
  %8 = add i32 %7, 8, !insn.addr !5113
  %9 = icmp ugt i32 %7, -9, !insn.addr !5114
  %10 = icmp eq i32 %8, 0
  %11 = or i1 %9, %10, !insn.addr !5115
  store i32 0, i32* %esi.26.reg2mem, !insn.addr !5116
  store i32 %6, i32* %esp.3.reg2mem, !insn.addr !5116
  br i1 %11, label %dec_label_pc_454357, label %dec_label_pc_4542eb, !insn.addr !5116

dec_label_pc_4542eb:                              ; preds = %dec_label_pc_4542da
  %12 = icmp ult i32 %8, 1025
  br i1 %12, label %dec_label_pc_4542f2, label %dec_label_pc_454305, !insn.addr !5117

dec_label_pc_4542f2:                              ; preds = %dec_label_pc_4542eb
  call void @_alloca_probe_16(), !insn.addr !5118
  store i32 52428, i32* %stack_var_-48, align 4, !insn.addr !5119
  store i32 %6, i32* %esi.0.reg2mem, !insn.addr !5120
  br label %dec_label_pc_454318, !insn.addr !5120

dec_label_pc_454305:                              ; preds = %dec_label_pc_4542eb
  %13 = call i32* @_malloc_base(i32 %8), !insn.addr !5121
  %14 = ptrtoint i32* %13 to i32, !insn.addr !5121
  %15 = icmp eq i32* %13, null, !insn.addr !5122
  store i32 %14, i32* %esi.2.reg2mem, !insn.addr !5123
  br i1 %15, label %dec_label_pc_454322, label %dec_label_pc_454312, !insn.addr !5123

dec_label_pc_454312:                              ; preds = %dec_label_pc_454305
  store i32 56797, i32* %13, align 4, !insn.addr !5124
  store i32 %14, i32* %esi.0.reg2mem, !insn.addr !5124
  br label %dec_label_pc_454318, !insn.addr !5124

dec_label_pc_454318:                              ; preds = %dec_label_pc_454312, %dec_label_pc_4542f2
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %16 = add i32 %esi.0.reload, 8, !insn.addr !5125
  store i32 %16, i32* %esi.2.reg2mem, !insn.addr !5125
  br label %dec_label_pc_454322, !insn.addr !5125

dec_label_pc_454322:                              ; preds = %dec_label_pc_454305, %dec_label_pc_454318
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %17 = icmp eq i32 %esi.2.reload, 0, !insn.addr !5126
  store i32 0, i32* %esi.26.reg2mem, !insn.addr !5127
  store i32 %6, i32* %esp.3.reg2mem, !insn.addr !5127
  br i1 %17, label %dec_label_pc_454357, label %dec_label_pc_454326, !insn.addr !5127

dec_label_pc_454326:                              ; preds = %dec_label_pc_454322
  %18 = inttoptr i32 %esi.2.reload to i8*, !insn.addr !5128
  call void @memset(i8* %18, i8 0, i32 %7), !insn.addr !5128
  store i32 %4, i32* %stack_var_-64, align 4, !insn.addr !5129
  %19 = call i32 @function_401712(), !insn.addr !5130
  %20 = icmp eq i32 %19, 0, !insn.addr !5131
  store i32 %esi.2.reload, i32* %esi.26.reg2mem, !insn.addr !5132
  store i32 %6, i32* %esp.3.reg2mem, !insn.addr !5132
  br i1 %20, label %dec_label_pc_454357, label %dec_label_pc_454347, !insn.addr !5132

dec_label_pc_454347:                              ; preds = %dec_label_pc_454326
  store i32 %info_type, i32* %stack_var_-64, align 4, !insn.addr !5133
  %21 = ptrtoint i32* %stack_var_-64 to i32, !insn.addr !5133
  %22 = inttoptr i32 %esi.2.reload to i16*, !insn.addr !5134
  %sext = mul i32 %19, 16777216
  %23 = sdiv i32 %sext, 16777216, !insn.addr !5134
  %24 = call i1 @GetStringTypeW(i32 %info_type, i16* %22, i32 %23, i16* %char_type), !insn.addr !5134
  store i32 %esi.2.reload, i32* %esi.26.reg2mem, !insn.addr !5135
  store i32 %21, i32* %esp.3.reg2mem, !insn.addr !5135
  br label %dec_label_pc_454357, !insn.addr !5135

dec_label_pc_454357:                              ; preds = %dec_label_pc_4542da, %dec_label_pc_454347, %dec_label_pc_454326, %dec_label_pc_454322
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %esi.26.reload = load i32, i32* %esi.26.reg2mem
  %25 = add i32 %esp.3.reload, -4, !insn.addr !5136
  %26 = inttoptr i32 %25 to i32*, !insn.addr !5136
  store i32 %esi.26.reload, i32* %26, align 4, !insn.addr !5136
  %27 = call i32 @function_40125d(), !insn.addr !5137
  br label %dec_label_pc_45435e, !insn.addr !5138

dec_label_pc_45435e:                              ; preds = %dec_label_pc_454357, %dec_label_pc_45427f
  %28 = icmp eq i8 %0, 0, !insn.addr !5139
  br i1 %28, label %dec_label_pc_45436e, label %dec_label_pc_454364, !insn.addr !5140

dec_label_pc_454364:                              ; preds = %dec_label_pc_45435e
  %29 = add i32 %1, 848, !insn.addr !5141
  %30 = inttoptr i32 %29 to i32*, !insn.addr !5141
  %31 = load i32, i32* %30, align 4, !insn.addr !5141
  %32 = and i32 %31, -3, !insn.addr !5141
  store i32 %32, i32* %30, align 4, !insn.addr !5141
  br label %dec_label_pc_45436e, !insn.addr !5141

dec_label_pc_45436e:                              ; preds = %dec_label_pc_454364, %dec_label_pc_45435e
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !5142
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !5143
}

declare void @_freea_crt(i8*) local_unnamed_addr

declare void @__acrt_add_locale_ref(i32) local_unnamed_addr

define void @__acrt_free_locale(i32 %ptloci) local_unnamed_addr {
dec_label_pc_454486:
  %edi.0.reg2mem = alloca i32, !insn.addr !5144
  %ebx.0.reg2mem = alloca i32, !insn.addr !5144
  %eax.0.reg2mem = alloca i32, !insn.addr !5144
  %stack_var_-20 = alloca i32, align 4
  %0 = add i32 %ptloci, 136, !insn.addr !5145
  %1 = inttoptr i32 %0 to i32*, !insn.addr !5145
  %2 = load i32, i32* %1, align 4, !insn.addr !5145
  %3 = icmp eq i32 %2, 0, !insn.addr !5146
  %4 = icmp eq i32 %2, ptrtoint (%lconv* @__acrt_lconv_c to i32), !insn.addr !5147
  %or.cond = or i1 %3, %4
  br i1 %or.cond, label %dec_label_pc_454508, label %dec_label_pc_4544a3, !insn.addr !5148

dec_label_pc_4544a3:                              ; preds = %dec_label_pc_454486
  %5 = add i32 %ptloci, 124, !insn.addr !5149
  %6 = inttoptr i32 %5 to i32*, !insn.addr !5149
  %7 = load i32, i32* %6, align 4, !insn.addr !5149
  %8 = icmp eq i32 %7, 0, !insn.addr !5150
  br i1 %8, label %dec_label_pc_454508, label %dec_label_pc_4544aa, !insn.addr !5151

dec_label_pc_4544aa:                              ; preds = %dec_label_pc_4544a3
  %9 = inttoptr i32 %7 to i32*, !insn.addr !5152
  %10 = load i32, i32* %9, align 4, !insn.addr !5152
  %11 = icmp eq i32 %10, 0, !insn.addr !5152
  %12 = icmp eq i1 %11, false, !insn.addr !5153
  br i1 %12, label %dec_label_pc_454508, label %dec_label_pc_4544af, !insn.addr !5153

dec_label_pc_4544af:                              ; preds = %dec_label_pc_4544aa
  %13 = add i32 %ptloci, 132, !insn.addr !5154
  %14 = inttoptr i32 %13 to i32*, !insn.addr !5154
  %15 = load i32, i32* %14, align 4, !insn.addr !5154
  %16 = icmp eq i32 %15, 0, !insn.addr !5155
  br i1 %16, label %dec_label_pc_4544d1, label %dec_label_pc_4544b9, !insn.addr !5156

dec_label_pc_4544b9:                              ; preds = %dec_label_pc_4544af
  %17 = inttoptr i32 %15 to i32*, !insn.addr !5157
  %18 = load i32, i32* %17, align 4, !insn.addr !5157
  %19 = icmp eq i32 %18, 0, !insn.addr !5157
  %20 = icmp eq i1 %19, false, !insn.addr !5158
  br i1 %20, label %dec_label_pc_4544d1, label %dec_label_pc_4544be, !insn.addr !5158

dec_label_pc_4544be:                              ; preds = %dec_label_pc_4544b9
  call void @_free_base(i32* %17), !insn.addr !5159
  %21 = load i32, i32* %1, align 4, !insn.addr !5160
  %22 = call i32 @function_40263a(i32 %21), !insn.addr !5161
  br label %dec_label_pc_4544d1, !insn.addr !5162

dec_label_pc_4544d1:                              ; preds = %dec_label_pc_4544be, %dec_label_pc_4544b9, %dec_label_pc_4544af
  %23 = add i32 %ptloci, 128, !insn.addr !5163
  %24 = inttoptr i32 %23 to i32*, !insn.addr !5163
  %25 = load i32, i32* %24, align 4, !insn.addr !5163
  %26 = icmp eq i32 %25, 0, !insn.addr !5164
  br i1 %26, label %dec_label_pc_4544f3, label %dec_label_pc_4544db, !insn.addr !5165

dec_label_pc_4544db:                              ; preds = %dec_label_pc_4544d1
  %27 = inttoptr i32 %25 to i32*, !insn.addr !5166
  %28 = load i32, i32* %27, align 4, !insn.addr !5166
  %29 = icmp eq i32 %28, 0, !insn.addr !5166
  %30 = icmp eq i1 %29, false, !insn.addr !5167
  br i1 %30, label %dec_label_pc_4544f3, label %dec_label_pc_4544e0, !insn.addr !5167

dec_label_pc_4544e0:                              ; preds = %dec_label_pc_4544db
  call void @_free_base(i32* %27), !insn.addr !5168
  %31 = load i32, i32* %1, align 4, !insn.addr !5169
  %32 = call i32 @function_401a00(i32 %31), !insn.addr !5170
  br label %dec_label_pc_4544f3, !insn.addr !5171

dec_label_pc_4544f3:                              ; preds = %dec_label_pc_4544e0, %dec_label_pc_4544db, %dec_label_pc_4544d1
  %33 = load i32, i32* %6, align 4, !insn.addr !5172
  %34 = inttoptr i32 %33 to i32*, !insn.addr !5173
  call void @_free_base(i32* %34), !insn.addr !5173
  %35 = load i32, i32* %1, align 4, !insn.addr !5174
  %36 = inttoptr i32 %35 to i32*, !insn.addr !5175
  call void @_free_base(i32* %36), !insn.addr !5175
  br label %dec_label_pc_454508, !insn.addr !5176

dec_label_pc_454508:                              ; preds = %dec_label_pc_4544f3, %dec_label_pc_4544aa, %dec_label_pc_4544a3, %dec_label_pc_454486
  %37 = add i32 %ptloci, 140, !insn.addr !5177
  %38 = inttoptr i32 %37 to i32*, !insn.addr !5177
  %39 = load i32, i32* %38, align 4, !insn.addr !5177
  %40 = icmp eq i32 %39, 0, !insn.addr !5178
  br i1 %40, label %dec_label_pc_454557, label %dec_label_pc_454512, !insn.addr !5179

dec_label_pc_454512:                              ; preds = %dec_label_pc_454508
  %41 = inttoptr i32 %39 to i32*, !insn.addr !5180
  %42 = load i32, i32* %41, align 4, !insn.addr !5180
  %43 = icmp eq i32 %42, 0, !insn.addr !5180
  %44 = icmp eq i1 %43, false, !insn.addr !5181
  br i1 %44, label %dec_label_pc_454557, label %dec_label_pc_454517, !insn.addr !5181

dec_label_pc_454517:                              ; preds = %dec_label_pc_454512
  %45 = add i32 %ptloci, 144, !insn.addr !5182
  %46 = inttoptr i32 %45 to i32*, !insn.addr !5182
  %47 = load i32, i32* %46, align 4, !insn.addr !5182
  %48 = add i32 %47, -254, !insn.addr !5183
  %49 = inttoptr i32 %48 to i32*, !insn.addr !5184
  call void @_free_base(i32* %49), !insn.addr !5184
  %50 = add i32 %ptloci, 148, !insn.addr !5185
  %51 = inttoptr i32 %50 to i32*, !insn.addr !5185
  %52 = load i32, i32* %51, align 4, !insn.addr !5185
  %53 = add i32 %52, -128, !insn.addr !5186
  %54 = inttoptr i32 %53 to i32*, !insn.addr !5187
  call void @_free_base(i32* %54), !insn.addr !5187
  %55 = add i32 %ptloci, 152, !insn.addr !5188
  %56 = inttoptr i32 %55 to i32*, !insn.addr !5188
  %57 = load i32, i32* %56, align 4, !insn.addr !5188
  %58 = add i32 %57, -128, !insn.addr !5189
  %59 = inttoptr i32 %58 to i32*, !insn.addr !5190
  call void @_free_base(i32* %59), !insn.addr !5190
  %60 = load i32, i32* %38, align 4, !insn.addr !5191
  %61 = inttoptr i32 %60 to i32*, !insn.addr !5192
  call void @_free_base(i32* %61), !insn.addr !5192
  br label %dec_label_pc_454557, !insn.addr !5193

dec_label_pc_454557:                              ; preds = %dec_label_pc_454517, %dec_label_pc_454512, %dec_label_pc_454508
  %62 = add i32 %ptloci, 156, !insn.addr !5194
  %63 = inttoptr i32 %62 to i32*, !insn.addr !5194
  %64 = load i32, i32* %63, align 4, !insn.addr !5194
  %65 = call i32 @function_403a2b(i32 %64), !insn.addr !5195
  %66 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !5196
  %67 = add i32 %ptloci, 160, !insn.addr !5197
  %68 = add i32 %ptloci, 40, !insn.addr !5198
  %69 = add i32 %66, -4
  %70 = inttoptr i32 %69 to i32*
  %71 = add i32 %66, -8
  %72 = inttoptr i32 %71 to i32*
  store i32 6, i32* %eax.0.reg2mem, !insn.addr !5198
  store i32 %67, i32* %ebx.0.reg2mem, !insn.addr !5198
  store i32 %68, i32* %edi.0.reg2mem, !insn.addr !5198
  br label %dec_label_pc_454572, !insn.addr !5198

dec_label_pc_454572:                              ; preds = %dec_label_pc_4545b4, %dec_label_pc_454557
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %73 = add i32 %edi.0.reload, -8, !insn.addr !5199
  %74 = inttoptr i32 %73 to i32*, !insn.addr !5199
  %75 = load i32, i32* %74, align 4, !insn.addr !5199
  %76 = icmp eq i32 %75, ptrtoint ([1 x i16]* @__acrt_wide_c_locale_string to i32), !insn.addr !5199
  br i1 %76, label %dec_label_pc_454598, label %dec_label_pc_45457b, !insn.addr !5200

dec_label_pc_45457b:                              ; preds = %dec_label_pc_454572
  %77 = inttoptr i32 %edi.0.reload to i32*, !insn.addr !5201
  %78 = load i32, i32* %77, align 4, !insn.addr !5201
  %79 = icmp eq i32 %78, 0, !insn.addr !5202
  br i1 %79, label %dec_label_pc_454598, label %dec_label_pc_454581, !insn.addr !5203

dec_label_pc_454581:                              ; preds = %dec_label_pc_45457b
  %80 = inttoptr i32 %78 to i32*, !insn.addr !5204
  %81 = load i32, i32* %80, align 4, !insn.addr !5204
  %82 = icmp eq i32 %81, 0, !insn.addr !5204
  %83 = icmp eq i1 %82, false, !insn.addr !5205
  br i1 %83, label %dec_label_pc_454598, label %dec_label_pc_454586, !insn.addr !5205

dec_label_pc_454586:                              ; preds = %dec_label_pc_454581
  store i32 %78, i32* %70, align 4, !insn.addr !5206
  %84 = inttoptr i32 %eax.0.reload to i32*, !insn.addr !5207
  call void @_free_base(i32* %84), !insn.addr !5207
  %85 = inttoptr i32 %ebx.0.reload to i32*, !insn.addr !5208
  %86 = load i32, i32* %85, align 4, !insn.addr !5208
  store i32 %86, i32* %72, align 4, !insn.addr !5208
  call void @_free_base(i32* nonnull @80), !insn.addr !5209
  br label %dec_label_pc_454598, !insn.addr !5210

dec_label_pc_454598:                              ; preds = %dec_label_pc_45457b, %dec_label_pc_454581, %dec_label_pc_454586, %dec_label_pc_454572
  %87 = add i32 %edi.0.reload, -12, !insn.addr !5211
  %88 = inttoptr i32 %87 to i32*, !insn.addr !5211
  %89 = load i32, i32* %88, align 4, !insn.addr !5211
  %90 = icmp eq i32 %89, 0, !insn.addr !5211
  br i1 %90, label %dec_label_pc_4545b4, label %dec_label_pc_45459e, !insn.addr !5212

dec_label_pc_45459e:                              ; preds = %dec_label_pc_454598
  %91 = add i32 %edi.0.reload, -4, !insn.addr !5213
  %92 = inttoptr i32 %91 to i32*, !insn.addr !5213
  %93 = load i32, i32* %92, align 4, !insn.addr !5213
  %94 = icmp eq i32 %93, 0, !insn.addr !5214
  br i1 %94, label %dec_label_pc_4545b4, label %dec_label_pc_4545a5, !insn.addr !5215

dec_label_pc_4545a5:                              ; preds = %dec_label_pc_45459e
  %95 = inttoptr i32 %93 to i32*, !insn.addr !5216
  %96 = load i32, i32* %95, align 4, !insn.addr !5216
  %97 = icmp eq i32 %96, 0, !insn.addr !5216
  %98 = icmp eq i1 %97, false, !insn.addr !5217
  br i1 %98, label %dec_label_pc_4545b4, label %dec_label_pc_4545aa, !insn.addr !5217

dec_label_pc_4545aa:                              ; preds = %dec_label_pc_4545a5
  store i32 %93, i32* %70, align 4, !insn.addr !5218
  call void @_free_base(i32* nonnull @80), !insn.addr !5219
  br label %dec_label_pc_4545b4, !insn.addr !5220

dec_label_pc_4545b4:                              ; preds = %dec_label_pc_45459e, %dec_label_pc_4545a5, %dec_label_pc_4545aa, %dec_label_pc_454598
  %99 = add i32 %ebx.0.reload, 4, !insn.addr !5221
  %100 = add i32 %edi.0.reload, 16, !insn.addr !5222
  %101 = add nsw i32 %eax.0.reload, -1, !insn.addr !5223
  %102 = icmp eq i32 %101, 0, !insn.addr !5223
  %103 = icmp eq i1 %102, false, !insn.addr !5224
  store i32 %101, i32* %eax.0.reg2mem, !insn.addr !5224
  store i32 %99, i32* %ebx.0.reg2mem, !insn.addr !5224
  store i32 %100, i32* %edi.0.reg2mem, !insn.addr !5224
  br i1 %103, label %dec_label_pc_454572, label %dec_label_pc_4545c2, !insn.addr !5224

dec_label_pc_4545c2:                              ; preds = %dec_label_pc_4545b4
  store i32 %ptloci, i32* %70, align 4, !insn.addr !5225
  call void @_free_base(i32* null), !insn.addr !5226
  ret void, !insn.addr !5227
}

define void @__acrt_locale_free_lc_time_if_unreferenced(%__crt_lc_time_data* %lc_time) local_unnamed_addr {
dec_label_pc_454653:
  %0 = icmp eq %__crt_lc_time_data* %lc_time, null, !insn.addr !5228
  %1 = icmp eq %__crt_lc_time_data* %lc_time, @__lc_time_c, !insn.addr !5229
  %or.cond = or i1 %0, %1
  br i1 %or.cond, label %dec_label_pc_454681, label %dec_label_pc_454668, !insn.addr !5230

dec_label_pc_454668:                              ; preds = %dec_label_pc_454653
  %2 = ptrtoint %__crt_lc_time_data* %lc_time to i32
  %3 = add i32 %2, 176, !insn.addr !5231
  %4 = inttoptr i32 %3 to i32*, !insn.addr !5231
  %5 = load i32, i32* %4, align 4, !insn.addr !5231
  %6 = icmp eq i32 %5, 0, !insn.addr !5232
  %7 = icmp eq i1 %6, false, !insn.addr !5233
  br i1 %7, label %dec_label_pc_454681, label %dec_label_pc_454673, !insn.addr !5233

dec_label_pc_454673:                              ; preds = %dec_label_pc_454668
  %8 = call i32 @function_40482c(i32 %2), !insn.addr !5234
  %9 = bitcast %__crt_lc_time_data* %lc_time to i32*
  call void @_free_base(i32* %9), !insn.addr !5235
  br label %dec_label_pc_454681, !insn.addr !5236

dec_label_pc_454681:                              ; preds = %dec_label_pc_454673, %dec_label_pc_454668, %dec_label_pc_454653
  ret void, !insn.addr !5237
}

declare void @__acrt_release_locale_ref(i32) local_unnamed_addr

declare i8* @_recalloc_base(i8*, i32, i32) local_unnamed_addr

define i32* @"__crt_seh_guarded_call<void (__cdecl*)(int)>::operator()<<lambda_cbab9ec6f41b0180b23cc171c22676b0>,<lambda_44731a7d0e6d81c3e6aa82d741081786> &,<lambda_4b292cb8dd18144e164572427af410ab> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_456345:
  %storemerge.reg2mem = alloca i32, !insn.addr !5238
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b54(i32* nonnull @global_var_47b898, i32 12), !insn.addr !5239
  %2 = add i32 %0, -28, !insn.addr !5240
  %3 = inttoptr i32 %2 to i32*, !insn.addr !5240
  store i32 0, i32* %3, align 4, !insn.addr !5240
  %4 = add i32 %0, 8, !insn.addr !5241
  %5 = inttoptr i32 %4 to i32*, !insn.addr !5241
  %6 = load i32, i32* %5, align 4, !insn.addr !5241
  %7 = inttoptr i32 %6 to i32*, !insn.addr !5242
  %8 = load i32, i32* %7, align 4, !insn.addr !5242
  %9 = call i32 @function_404548(i32 %8), !insn.addr !5243
  %10 = add i32 %0, -4, !insn.addr !5244
  %11 = inttoptr i32 %10 to i32*, !insn.addr !5244
  store i32 0, i32* %11, align 4, !insn.addr !5244
  %12 = load i32, i32* @__security_cookie, align 4, !insn.addr !5245
  %13 = and i32 %12, 31, !insn.addr !5246
  %14 = load i32, i32* @abort_action, align 4, !insn.addr !5247
  %15 = xor i32 %14, %12, !insn.addr !5247
  %16 = icmp eq i32 %13, 0, !insn.addr !5248
  store i32 %15, i32* %storemerge.reg2mem, !insn.addr !5248
  br i1 %16, label %22, label %17, !insn.addr !5248

; <label>:17:                                     ; preds = %dec_label_pc_456345
  %18 = lshr i32 %15, %13, !insn.addr !5248
  %19 = sub nsw i32 32, %13, !insn.addr !5248
  %20 = shl i32 %15, %19, !insn.addr !5248
  %21 = or i32 %18, %20, !insn.addr !5248
  store i32 %21, i32* %storemerge.reg2mem, !insn.addr !5248
  br label %22, !insn.addr !5248

; <label>:22:                                     ; preds = %dec_label_pc_456345, %17
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  store i32 %storemerge.reload, i32* %3, align 4, !insn.addr !5249
  store i32 -2, i32* %11, align 4, !insn.addr !5250
  %23 = call i32 @function_45639d(), !insn.addr !5251
  %24 = add i32 %0, -16, !insn.addr !5252
  %25 = inttoptr i32 %24 to i32*, !insn.addr !5252
  %26 = load i32, i32* %25, align 4, !insn.addr !5252
  call void @__writefsdword(i32 0, i32 %26), !insn.addr !5253
  %27 = inttoptr i32 %storemerge.reload to i32*, !insn.addr !5254
  ret i32* %27, !insn.addr !5254
}

define i32 @function_45639d() local_unnamed_addr {
dec_label_pc_45639d:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !5255
  %2 = inttoptr i32 %1 to i32*, !insn.addr !5255
  %3 = load i32, i32* %2, align 4, !insn.addr !5255
  %4 = inttoptr i32 %3 to i32*, !insn.addr !5256
  %5 = load i32, i32* %4, align 4, !insn.addr !5256
  %6 = call i32 @function_4017d5(i32 %5), !insn.addr !5257
  ret i32 %6, !insn.addr !5258
}

define i32** @get_global_action_nolock(i32 %signum) local_unnamed_addr {
dec_label_pc_45655f:
  %merge.reg2mem = alloca i32**, !insn.addr !5259
  store i32** bitcast (i32* @ctrlc_action to i32**), i32*** %merge.reg2mem
  switch i32 %signum, label %dec_label_pc_456581.fold.split1 [
    i32 2, label %dec_label_pc_456581
    i32 6, label %dec_label_pc_456593
    i32 15, label %dec_label_pc_456581.fold.split
    i32 21, label %dec_label_pc_456581.fold.split2
    i32 22, label %dec_label_pc_456593
  ]

dec_label_pc_456581.fold.split:                   ; preds = %dec_label_pc_45655f
  store i32** bitcast (i32* @term_action to i32**), i32*** %merge.reg2mem
  br label %dec_label_pc_456581

dec_label_pc_456581.fold.split1:                  ; preds = %dec_label_pc_45655f
  store i32** null, i32*** %merge.reg2mem
  br label %dec_label_pc_456581

dec_label_pc_456581.fold.split2:                  ; preds = %dec_label_pc_45655f
  store i32** bitcast (i32* @ctrlbreak_action to i32**), i32*** %merge.reg2mem
  br label %dec_label_pc_456581

dec_label_pc_456581:                              ; preds = %dec_label_pc_45655f, %dec_label_pc_456581.fold.split2, %dec_label_pc_456581.fold.split1, %dec_label_pc_456581.fold.split, %dec_label_pc_456593
  %merge.reload = load i32**, i32*** %merge.reg2mem
  ret i32** %merge.reload, !insn.addr !5260

dec_label_pc_456593:                              ; preds = %dec_label_pc_45655f, %dec_label_pc_45655f
  store i32** bitcast (i32* @abort_action to i32**), i32*** %merge.reg2mem
  br label %dec_label_pc_456581
}

declare i32 @siglookup(i32, i32) local_unnamed_addr

define i32* @__acrt_get_sigabrt_handler() local_unnamed_addr {
dec_label_pc_456692:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 3, i32* %stack_var_-12, align 4, !insn.addr !5261
  store i32 3, i32* %stack_var_-16, align 4, !insn.addr !5262
  %0 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !5263
  %1 = call i32* @"__crt_seh_guarded_call<void (__cdecl*)(int)>::operator()<<lambda_cbab9ec6f41b0180b23cc171c22676b0>,<lambda_44731a7d0e6d81c3e6aa82d741081786> &,<lambda_4b292cb8dd18144e164572427af410ab> >"(i32 %0, i32* nonnull %stack_var_-5, i32* nonnull %stack_var_-12, i32* inttoptr (i32 3 to i32*)), !insn.addr !5264
  ret i32* %1, !insn.addr !5265
}

define i32* @__fpecode() local_unnamed_addr {
dec_label_pc_4566e7:
  %0 = call i32 @___acrt_getptd(), !insn.addr !5266
  %1 = add i32 %0, 8, !insn.addr !5267
  %2 = inttoptr i32 %1 to i32*, !insn.addr !5268
  ret i32* %2, !insn.addr !5268
}

define i32 @raise(i32 %signum) local_unnamed_addr {
dec_label_pc_4566fd:
  %eax.17.reg2mem = alloca i32, !insn.addr !5269
  %edx.0.reg2mem = alloca i32, !insn.addr !5269
  %ecx.2.reg2mem = alloca i8, !insn.addr !5269
  %storemerge.reg2mem = alloca i32, !insn.addr !5269
  %ecx.1.reg2mem = alloca i1, !insn.addr !5269
  %ebx.09.reg2mem = alloca i32, !insn.addr !5269
  %.reg2mem11 = alloca i32*, !insn.addr !5269
  %.reg2mem = alloca i32*, !insn.addr !5269
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_47b858 to i32), i32* %stack_var_-8, align 4, !insn.addr !5270
  %1 = call i32 @function_401b54(i32* nonnull @global_var_47b858, i32 40), !insn.addr !5271
  %2 = add i32 %0, -40, !insn.addr !5272
  %3 = inttoptr i32 %2 to i32*, !insn.addr !5272
  store i32 0, i32* %3, align 4, !insn.addr !5272
  %4 = add i32 %0, -52, !insn.addr !5273
  %5 = inttoptr i32 %4 to i32*, !insn.addr !5273
  store i32 0, i32* %5, align 4, !insn.addr !5273
  %6 = add i32 %0, -25, !insn.addr !5274
  %7 = inttoptr i32 %6 to i8*, !insn.addr !5274
  store i8 1, i8* %7, align 1, !insn.addr !5274
  %8 = add i32 %0, 8, !insn.addr !5275
  %9 = inttoptr i32 %8 to i32*, !insn.addr !5275
  %10 = load i32, i32* %9, align 4, !insn.addr !5275
  %11 = icmp sgt i32 %10, 8, !insn.addr !5276
  br i1 %11, label %dec_label_pc_456738, label %dec_label_pc_456720, !insn.addr !5276

dec_label_pc_456720:                              ; preds = %dec_label_pc_4566fd
  switch i32 %10, label %dec_label_pc_45672a [
    i32 8, label %dec_label_pc_456757
    i32 2, label %dec_label_pc_4567a0
  ]

dec_label_pc_45672a:                              ; preds = %dec_label_pc_456720
  %12 = add i32 %10, -4, !insn.addr !5277
  %13 = icmp eq i32 %12, 0, !insn.addr !5277
  br i1 %13, label %dec_label_pc_456757, label %dec_label_pc_456730, !insn.addr !5278

dec_label_pc_456730:                              ; preds = %dec_label_pc_45672a
  %14 = icmp eq i32 %12, 2, !insn.addr !5279
  %15 = icmp eq i1 %14, false, !insn.addr !5280
  br i1 %15, label %dec_label_pc_45677b, label %dec_label_pc_4567a0, !insn.addr !5280

dec_label_pc_456738:                              ; preds = %dec_label_pc_4566fd
  switch i32 %10, label %dec_label_pc_456742 [
    i32 11, label %dec_label_pc_456757
    i32 15, label %dec_label_pc_4567a0
  ]

dec_label_pc_456742:                              ; preds = %dec_label_pc_456738
  %.off = add i32 %10, -21
  %16 = icmp ugt i32 %.off, 1
  br i1 %16, label %dec_label_pc_45677b, label %dec_label_pc_4567a0, !insn.addr !5281

dec_label_pc_456757:                              ; preds = %dec_label_pc_456738, %dec_label_pc_456720, %dec_label_pc_45672a
  %17 = call i32 @___acrt_getptd_noexit(), !insn.addr !5282
  store i32 %17, i32* %3, align 4, !insn.addr !5283
  %18 = icmp eq i32 %17, 0, !insn.addr !5284
  %19 = icmp eq i1 %18, false, !insn.addr !5285
  br i1 %19, label %dec_label_pc_45676d, label %dec_label_pc_456765, !insn.addr !5285

dec_label_pc_456765:                              ; preds = %dec_label_pc_45677b, %dec_label_pc_456757
  %20 = add i32 %0, -16, !insn.addr !5286
  %21 = inttoptr i32 %20 to i32*, !insn.addr !5286
  %22 = load i32, i32* %21, align 4, !insn.addr !5286
  call void @__writefsdword(i32 0, i32 %22), !insn.addr !5287
  ret i32 -1, !insn.addr !5288

dec_label_pc_45676d:                              ; preds = %dec_label_pc_456757
  %23 = inttoptr i32 %17 to i32*, !insn.addr !5289
  %24 = load i32, i32* %23, align 4, !insn.addr !5289
  %sext2 = mul i32 %24, 16777216
  %25 = sdiv i32 %sext2, 16777216, !insn.addr !5290
  %26 = call i32 @siglookup(i32 %10, i32 %25), !insn.addr !5290
  %27 = icmp eq i32 %26, 0, !insn.addr !5291
  %28 = icmp eq i1 %27, false, !insn.addr !5292
  br i1 %28, label %dec_label_pc_456795.thread, label %dec_label_pc_45677b, !insn.addr !5292

dec_label_pc_45677b:                              ; preds = %dec_label_pc_45676d, %dec_label_pc_456742, %dec_label_pc_456730
  %29 = call i32* @_errno(), !insn.addr !5293
  store i32 22, i32* %29, align 4, !insn.addr !5294
  call void @_invalid_parameter_noinfo(), !insn.addr !5295
  br label %dec_label_pc_456765, !insn.addr !5296

dec_label_pc_456795.thread:                       ; preds = %dec_label_pc_45676d
  %30 = add i32 %26, 8, !insn.addr !5297
  store i8 0, i8* %7, align 1, !insn.addr !5298
  %31 = add i32 %0, -36, !insn.addr !5299
  %32 = inttoptr i32 %31 to i32*, !insn.addr !5299
  store i32 %30, i32* %32, align 4, !insn.addr !5299
  %33 = add i32 %0, -48, !insn.addr !5300
  %34 = inttoptr i32 %33 to i32*, !insn.addr !5300
  store i32 0, i32* %34, align 4, !insn.addr !5300
  store i32* %34, i32** %.reg2mem
  store i32* %32, i32** %.reg2mem11
  store i32 %17, i32* %ebx.09.reg2mem
  store i1 true, i1* %ecx.1.reg2mem
  br label %dec_label_pc_4567ab

dec_label_pc_4567a0:                              ; preds = %dec_label_pc_456738, %dec_label_pc_456720, %dec_label_pc_456742, %dec_label_pc_456730
  %sext = mul i32 %10, 16777216
  %35 = sdiv i32 %sext, 16777216, !insn.addr !5301
  %36 = call i32** @get_global_action_nolock(i32 %35), !insn.addr !5301
  %37 = ptrtoint i32** %36 to i32, !insn.addr !5301
  %38 = add i32 %0, -36, !insn.addr !5299
  %39 = inttoptr i32 %38 to i32*, !insn.addr !5299
  store i32 %37, i32* %39, align 4, !insn.addr !5299
  %40 = add i32 %0, -48, !insn.addr !5300
  %41 = inttoptr i32 %40 to i32*, !insn.addr !5300
  store i32 0, i32* %41, align 4, !insn.addr !5300
  %42 = call i32 @function_404548(i32 3), !insn.addr !5302
  %43 = load i8, i8* %7, align 1, !insn.addr !5303
  %phitmp = icmp eq i8 %43, 0
  store i32* %41, i32** %.reg2mem, !insn.addr !5303
  store i32* %39, i32** %.reg2mem11, !insn.addr !5303
  store i32 0, i32* %ebx.09.reg2mem, !insn.addr !5303
  store i1 %phitmp, i1* %ecx.1.reg2mem, !insn.addr !5303
  br label %dec_label_pc_4567ab, !insn.addr !5303

dec_label_pc_4567ab:                              ; preds = %dec_label_pc_456795.thread, %dec_label_pc_4567a0
  %ecx.1.reload = load i1, i1* %ecx.1.reg2mem
  %ebx.09.reload = load i32, i32* %ebx.09.reg2mem
  %.reload12 = load i32*, i32** %.reg2mem11
  %.reload = load i32*, i32** %.reg2mem
  %44 = add i32 %0, -44, !insn.addr !5304
  %45 = inttoptr i32 %44 to i32*, !insn.addr !5304
  store i32 0, i32* %45, align 4, !insn.addr !5304
  %46 = add i32 %0, -26, !insn.addr !5305
  %47 = inttoptr i32 %46 to i8*, !insn.addr !5305
  store i8 0, i8* %47, align 1, !insn.addr !5305
  %48 = add i32 %0, -4, !insn.addr !5306
  %49 = inttoptr i32 %48 to i32*, !insn.addr !5306
  store i32 0, i32* %49, align 4, !insn.addr !5306
  %50 = load i32, i32* %.reload12, align 4, !insn.addr !5307
  br i1 %ecx.1.reload, label %dec_label_pc_4567d2, label %dec_label_pc_4567be, !insn.addr !5308

dec_label_pc_4567be:                              ; preds = %dec_label_pc_4567ab
  %51 = load i32, i32* @__security_cookie, align 4, !insn.addr !5309
  %52 = and i32 %51, 31, !insn.addr !5310
  %53 = inttoptr i32 %50 to i32*, !insn.addr !5311
  %54 = load i32, i32* %53, align 4, !insn.addr !5311
  %55 = xor i32 %54, %51, !insn.addr !5311
  %56 = icmp eq i32 %52, 0, !insn.addr !5312
  store i32 %55, i32* %storemerge.reg2mem, !insn.addr !5312
  br i1 %56, label %62, label %57, !insn.addr !5312

; <label>:57:                                     ; preds = %dec_label_pc_4567be
  %58 = lshr i32 %55, %52, !insn.addr !5312
  %59 = sub nsw i32 32, %52, !insn.addr !5312
  %60 = shl i32 %55, %59, !insn.addr !5312
  %61 = or i32 %58, %60, !insn.addr !5312
  store i32 %61, i32* %storemerge.reg2mem, !insn.addr !5312
  br label %62, !insn.addr !5312

; <label>:62:                                     ; preds = %dec_label_pc_4567be, %57
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %63 = load i8, i8* %7, align 1, !insn.addr !5313
  store i8 %63, i8* %ecx.2.reg2mem, !insn.addr !5314
  store i32 %storemerge.reload, i32* %edx.0.reg2mem, !insn.addr !5314
  br label %dec_label_pc_4567d4, !insn.addr !5314

dec_label_pc_4567d2:                              ; preds = %dec_label_pc_4567ab
  %64 = inttoptr i32 %50 to i32*, !insn.addr !5315
  %65 = load i32, i32* %64, align 4, !insn.addr !5315
  store i8 0, i8* %ecx.2.reg2mem, !insn.addr !5315
  store i32 %65, i32* %edx.0.reg2mem, !insn.addr !5315
  br label %dec_label_pc_4567d4, !insn.addr !5315

dec_label_pc_4567d4:                              ; preds = %dec_label_pc_4567d2, %62
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %ecx.2.reload = load i8, i8* %ecx.2.reg2mem
  %66 = add i32 %0, -32, !insn.addr !5316
  %67 = inttoptr i32 %66 to i32*, !insn.addr !5316
  store i32 %edx.0.reload, i32* %67, align 4, !insn.addr !5316
  store i32 %edx.0.reload, i32* %45, align 4, !insn.addr !5317
  %68 = icmp eq i32 %edx.0.reload, 1, !insn.addr !5318
  %69 = zext i1 %68 to i8, !insn.addr !5319
  store i8 %69, i8* %47, align 1, !insn.addr !5319
  %70 = icmp eq i1 %68, false, !insn.addr !5320
  %71 = icmp eq i1 %70, false, !insn.addr !5321
  br i1 %71, label %dec_label_pc_456853, label %dec_label_pc_4567e7, !insn.addr !5321

dec_label_pc_4567e7:                              ; preds = %dec_label_pc_4567d4
  %72 = icmp eq i32 %edx.0.reload, 0, !insn.addr !5322
  br i1 %72, label %dec_label_pc_4568e4, label %dec_label_pc_4567ef, !insn.addr !5323

dec_label_pc_4567ef:                              ; preds = %dec_label_pc_4567e7
  switch i32 %10, label %dec_label_pc_4567f8 [
    i32 11, label %dec_label_pc_4567fd
    i32 8, label %dec_label_pc_4567fd
  ]

dec_label_pc_4567f8:                              ; preds = %dec_label_pc_4567ef
  %73 = icmp eq i32 %10, 4, !insn.addr !5324
  %74 = icmp eq i1 %73, false, !insn.addr !5325
  br i1 %74, label %dec_label_pc_456823, label %dec_label_pc_4567fd, !insn.addr !5325

dec_label_pc_4567fd:                              ; preds = %dec_label_pc_4567ef, %dec_label_pc_4567ef, %dec_label_pc_4567f8
  %75 = add i32 %ebx.09.reload, 4, !insn.addr !5326
  %76 = inttoptr i32 %75 to i32*, !insn.addr !5326
  %77 = load i32, i32* %76, align 4, !insn.addr !5326
  store i32 %77, i32* %.reload, align 4, !insn.addr !5327
  store i32 0, i32* %76, align 4, !insn.addr !5328
  %78 = icmp eq i32 %10, 8, !insn.addr !5329
  %79 = icmp eq i1 %78, false, !insn.addr !5330
  br i1 %79, label %dec_label_pc_456849, label %dec_label_pc_45680b, !insn.addr !5330

dec_label_pc_45680b:                              ; preds = %dec_label_pc_4567fd
  %80 = call i32* @__fpecode(), !insn.addr !5331
  %81 = load i32, i32* %80, align 4, !insn.addr !5332
  store i32 %81, i32* %5, align 4, !insn.addr !5333
  %82 = call i32* @__fpecode(), !insn.addr !5334
  store i32 140, i32* %82, align 4, !insn.addr !5335
  br label %dec_label_pc_456823, !insn.addr !5336

dec_label_pc_456823:                              ; preds = %dec_label_pc_45680b, %dec_label_pc_4567f8
  %83 = icmp eq i32 %10, 8, !insn.addr !5337
  %84 = icmp eq i1 %83, false, !insn.addr !5338
  br i1 %84, label %dec_label_pc_456849, label %dec_label_pc_456827, !insn.addr !5338

dec_label_pc_456827:                              ; preds = %dec_label_pc_456823
  %85 = inttoptr i32 %ebx.09.reload to i32*, !insn.addr !5339
  %86 = load i32, i32* %85, align 4, !insn.addr !5339
  %87 = add i32 %86, 36, !insn.addr !5339
  %88 = add i32 %0, -56, !insn.addr !5340
  %89 = inttoptr i32 %88 to i32*, !insn.addr !5340
  store i32 %87, i32* %89, align 4, !insn.addr !5340
  %90 = add nsw i32 %86, 132
  store i32 %87, i32* %eax.17.reg2mem
  br label %dec_label_pc_456840

dec_label_pc_456840:                              ; preds = %dec_label_pc_456827, %dec_label_pc_456840
  %eax.17.reload = load i32, i32* %eax.17.reg2mem
  %91 = add i32 %eax.17.reload, 8, !insn.addr !5341
  %92 = inttoptr i32 %91 to i32*, !insn.addr !5341
  store i32 0, i32* %92, align 4, !insn.addr !5341
  %93 = add i32 %eax.17.reload, 12, !insn.addr !5342
  store i32 %93, i32* %89, align 4, !insn.addr !5340
  %94 = icmp eq i32 %eax.17.reload, %90, !insn.addr !5343
  store i32 %93, i32* %eax.17.reg2mem, !insn.addr !5344
  br i1 %94, label %dec_label_pc_456853, label %dec_label_pc_456840, !insn.addr !5344

dec_label_pc_456849:                              ; preds = %dec_label_pc_456823, %dec_label_pc_4567fd
  %95 = load i32, i32* @__security_cookie, align 4, !insn.addr !5345
  %96 = load i32, i32* %.reload12, align 4, !insn.addr !5346
  %97 = inttoptr i32 %96 to i32*, !insn.addr !5347
  store i32 %95, i32* %97, align 4, !insn.addr !5347
  br label %dec_label_pc_456853, !insn.addr !5347

dec_label_pc_456853:                              ; preds = %dec_label_pc_456840, %dec_label_pc_456849, %dec_label_pc_4567d4
  store i32 -2, i32* %49, align 4, !insn.addr !5348
  %98 = call i32 @function_456890(), !insn.addr !5349
  %99 = load i8, i8* %47, align 1, !insn.addr !5350
  %100 = icmp eq i8 %99, 0, !insn.addr !5350
  %101 = icmp eq i1 %100, false, !insn.addr !5351
  br i1 %101, label %102, label %dec_label_pc_456865, !insn.addr !5351

; <label>:102:                                    ; preds = %dec_label_pc_456853
  %103 = call i32 @function_4568d2(), !insn.addr !5351
  br label %dec_label_pc_456865, !insn.addr !5351

dec_label_pc_456865:                              ; preds = %102, %dec_label_pc_456853
  %104 = icmp eq i32 %10, 8, !insn.addr !5352
  %105 = icmp eq i1 %104, false, !insn.addr !5353
  br i1 %105, label %106, label %dec_label_pc_456869, !insn.addr !5353

; <label>:106:                                    ; preds = %dec_label_pc_456865
  %107 = call i32 @function_4568a2(), !insn.addr !5353
  br label %dec_label_pc_456869, !insn.addr !5353

dec_label_pc_456869:                              ; preds = %106, %dec_label_pc_456865
  %108 = call i32 @___acrt_getptd(), !insn.addr !5354
  %109 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !5355
  %110 = call i32 @function_4568ae(i32 ptrtoint (i32* @80 to i32)), !insn.addr !5356
  ret i32 %110, !insn.addr !5356

dec_label_pc_4568e4:                              ; preds = %dec_label_pc_4567e7
  %111 = icmp eq i8 %ecx.2.reload, 0, !insn.addr !5357
  br i1 %111, label %dec_label_pc_4568f0, label %dec_label_pc_4568e8, !insn.addr !5358

dec_label_pc_4568e8:                              ; preds = %dec_label_pc_4568e4
  %112 = call i32 @function_4017d5(i32 3), !insn.addr !5359
  br label %dec_label_pc_4568f0, !insn.addr !5360

dec_label_pc_4568f0:                              ; preds = %dec_label_pc_4568e8, %dec_label_pc_4568e4
  %esp.2 = ptrtoint i32* %stack_var_-8 to i32
  %113 = add i32 %esp.2, -4, !insn.addr !5361
  %114 = inttoptr i32 %113 to i32*, !insn.addr !5361
  store i32 3, i32* %114, align 4, !insn.addr !5361
  call void @_exit(i32 ptrtoint (i32* @80 to i32)), !insn.addr !5362
  %115 = call i32 @__asm_int3(), !insn.addr !5363
  %116 = call i32 @__asm_int3(), !insn.addr !5364
  %117 = call i32 @__asm_int3(), !insn.addr !5365
  %118 = call i32 @__asm_int3(), !insn.addr !5366
  %119 = call i32 @__asm_int3(), !insn.addr !5367
  %120 = call i32 @__asm_int3(), !insn.addr !5368
  %121 = call i32 @__asm_int3(), !insn.addr !5369
  %122 = call i32 @__asm_int3(), !insn.addr !5370
  %123 = call i32 @__asm_int3(), !insn.addr !5371
  %124 = call i32 @__asm_int3(), !insn.addr !5372
  %125 = call i32 @__asm_int3(), !insn.addr !5373
  %126 = call i32 @__asm_int3(), !insn.addr !5374
  %127 = call i32 @__asm_int3(), !insn.addr !5375
  %128 = call i32 @__asm_int3(), !insn.addr !5376
  %129 = call i32 @__asm_int3(), !insn.addr !5377
  %130 = call i32 @__asm_int3(), !insn.addr !5378
  %131 = call i32 @__asm_int3(), !insn.addr !5379
  %132 = call i32 @__asm_int3(), !insn.addr !5380
  %133 = call i32 @__asm_int3(), !insn.addr !5381
  %134 = call i32 @__asm_int3(), !insn.addr !5382
  %135 = call i32 @__asm_int3(), !insn.addr !5383
  %136 = call i32 @__asm_int3(), !insn.addr !5384
  %137 = call i32 @__asm_int3(), !insn.addr !5385
  %138 = call i32 @__asm_int3(), !insn.addr !5386
  %139 = call i32 @__asm_int3(), !insn.addr !5387
  %140 = call i32 @__asm_int3(), !insn.addr !5388
  %141 = call i32 @__asm_int3(), !insn.addr !5389
  %142 = call i32 @__asm_int3(), !insn.addr !5390
  %143 = call i32 @__asm_int3(), !insn.addr !5391
  %144 = call i32 @__asm_int3(), !insn.addr !5392
  %145 = call i32 @__asm_int3(), !insn.addr !5393
  %146 = call i32 @__asm_int3(), !insn.addr !5394
  %147 = call i32 @__asm_int3(), !insn.addr !5395
  %148 = call i32 @__asm_int3(), !insn.addr !5396
  %149 = call i32 @__asm_int3(), !insn.addr !5397
  %150 = call i32 @__asm_int3(), !insn.addr !5398
  %151 = call i32 @__asm_int3(), !insn.addr !5399
  %152 = call i32 @__asm_int3(), !insn.addr !5400
  %153 = call i32 @__asm_int3(), !insn.addr !5401
  %154 = call i32 @__asm_int3(), !insn.addr !5402
  %155 = call i32 @__asm_int3(), !insn.addr !5403
  %156 = call i32 @__asm_int3(), !insn.addr !5404
  %157 = call i32 @__asm_int3(), !insn.addr !5405
  %158 = call i32 @__asm_int3(), !insn.addr !5406
  %159 = call i32 @__asm_int3(), !insn.addr !5407
  %160 = call i32 @__asm_int3(), !insn.addr !5408
  %161 = call i32 @__asm_int3(), !insn.addr !5409
  %162 = call i32 @__asm_int3(), !insn.addr !5410
  %163 = call i32 @__asm_int3(), !insn.addr !5411
  %164 = call i32 @__asm_int3(), !insn.addr !5412
  %165 = call i32 @__asm_int3(), !insn.addr !5413
  %166 = call i32 @__asm_int3(), !insn.addr !5414
  %167 = call i32 @__asm_int3(), !insn.addr !5415
  %168 = call i32 @__asm_int3(), !insn.addr !5416
  %169 = call i32 @__asm_int3(), !insn.addr !5417
  %170 = call i32 @__asm_int3(), !insn.addr !5418
  %171 = call i32 @__asm_int3(), !insn.addr !5419
  %172 = call i32 @__asm_int3(), !insn.addr !5420
  %173 = call i32 @__asm_int3(), !insn.addr !5421
  %174 = call i32 @__asm_int3(), !insn.addr !5422
  %175 = call i32 @__asm_int3(), !insn.addr !5423
  %176 = call i32 @__asm_int3(), !insn.addr !5424
  %177 = call i32 @__asm_int3(), !insn.addr !5425
  %178 = call i32 @__asm_int3(), !insn.addr !5426
  %179 = call i32 @__asm_int3(), !insn.addr !5427
  %180 = call i32 @__asm_int3(), !insn.addr !5428
  %181 = call i32 @__asm_int3(), !insn.addr !5429
  %182 = call i32 @__asm_int3(), !insn.addr !5430
  %183 = call i32 @__asm_int3(), !insn.addr !5431
  %184 = call i32 @__asm_int3(), !insn.addr !5432
  %185 = call i32 @__asm_int3(), !insn.addr !5433
  %186 = call i32 @__asm_int3(), !insn.addr !5434
  %187 = call i32 @__asm_int3(), !insn.addr !5435
  %188 = call i32 @__asm_int3(), !insn.addr !5436
  %189 = call i32 @__asm_int3(), !insn.addr !5437
  %190 = call i32 @__asm_int3(), !insn.addr !5438
  %191 = call i32 @__asm_int3(), !insn.addr !5439
  %192 = call i32 @__asm_int3(), !insn.addr !5440
  %193 = call i32 @__asm_int3(), !insn.addr !5441
  %194 = call i32 @__asm_int3(), !insn.addr !5442
  %195 = call i32 @__asm_int3(), !insn.addr !5443
  %196 = call i32 @__asm_int3(), !insn.addr !5444
  %197 = call i32 @__asm_int3(), !insn.addr !5445
  %198 = call i32 @__asm_int3(), !insn.addr !5446
  %199 = call i32 @__asm_int3(), !insn.addr !5447
  %200 = call i32 @__asm_int3(), !insn.addr !5448
  %201 = call i32 @__asm_int3(), !insn.addr !5449
  %202 = call i32 @__asm_int3(), !insn.addr !5450
  %203 = call i32 @__asm_int3(), !insn.addr !5451
  %204 = call i32 @__asm_int3(), !insn.addr !5452
  %205 = call i32 @__asm_int3(), !insn.addr !5453
  %206 = call i32 @__asm_int3(), !insn.addr !5454
  %207 = call i32 @__asm_int3(), !insn.addr !5455
  %208 = call i32 @__asm_int3(), !insn.addr !5456
  %209 = call i32 @__asm_int3(), !insn.addr !5457
  %210 = call i32 @__asm_int3(), !insn.addr !5458
  %211 = call i32 @__asm_int3(), !insn.addr !5459
  %212 = call i32 @__asm_int3(), !insn.addr !5460
  %213 = call i32 @__asm_int3(), !insn.addr !5461
  %214 = call i32 @__asm_int3(), !insn.addr !5462
  %215 = call i32 @__asm_int3(), !insn.addr !5463
  %216 = call i32 @__asm_int3(), !insn.addr !5464
  %217 = call i32 @__asm_int3(), !insn.addr !5465
  %218 = call i32 @__asm_int3(), !insn.addr !5466
  %219 = call i32 @__asm_int3(), !insn.addr !5467
  %220 = call i32 @__asm_int3(), !insn.addr !5468
  %221 = call i32 @__asm_int3(), !insn.addr !5469
  %222 = call i32 @__asm_int3(), !insn.addr !5470
  %223 = call i32 @__asm_int3(), !insn.addr !5471
  %224 = call i32 @__asm_int3(), !insn.addr !5472
  %225 = call i32 @__asm_int3(), !insn.addr !5473
  %226 = call i32 @__asm_int3(), !insn.addr !5474
  %227 = call i32 @__asm_int3(), !insn.addr !5475
  %228 = call i32 @__asm_int3(), !insn.addr !5476
  %229 = call i32 @__asm_int3(), !insn.addr !5477
  %230 = call i32 @__asm_int3(), !insn.addr !5478
  %231 = call i32 @__asm_int3(), !insn.addr !5479
  %232 = call i32 @__asm_int3(), !insn.addr !5480
  %233 = call i32 @__asm_int3(), !insn.addr !5481
  %234 = call i32 @__asm_int3(), !insn.addr !5482
  %235 = call i32 @__asm_int3(), !insn.addr !5483
  %236 = call i32 @__asm_int3(), !insn.addr !5484
  %237 = call i32 @__asm_int3(), !insn.addr !5485
  %238 = call i32 @__asm_int3(), !insn.addr !5486
  %239 = call i32 @__asm_int3(), !insn.addr !5487
  %240 = call i32 @__asm_int3(), !insn.addr !5488
  %241 = call i32 @__asm_int3(), !insn.addr !5489
  ret i32 %241, !insn.addr !5489
}

define i32 @function_456890() local_unnamed_addr {
dec_label_pc_456890:
  %eax.0.reg2mem = alloca i32, !insn.addr !5490
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, -25, !insn.addr !5490
  %2 = inttoptr i32 %1 to i8*, !insn.addr !5490
  %3 = load i8, i8* %2, align 1, !insn.addr !5490
  %4 = icmp eq i8 %3, 0, !insn.addr !5490
  br i1 %4, label %dec_label_pc_4568a1, label %dec_label_pc_456896, !insn.addr !5491

dec_label_pc_456896:                              ; preds = %dec_label_pc_456890
  %5 = call i32 @function_4017d5(i32 3), !insn.addr !5492
  store i32 %5, i32* %eax.0.reg2mem, !insn.addr !5493
  br label %dec_label_pc_4568a1, !insn.addr !5493

dec_label_pc_4568a1:                              ; preds = %dec_label_pc_456896, %dec_label_pc_456890
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !5494
}

define i32 @function_4568a2() local_unnamed_addr {
dec_label_pc_4568a2:
  %0 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !5495
  ret i32 %0, !insn.addr !5496
}

define i32 @function_4568ae(i32 %arg1) local_unnamed_addr {
dec_label_pc_4568ae:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @__decompiler_undefined_function_0()
  %4 = icmp eq i32 %1, %0, !insn.addr !5497
  %5 = icmp eq i32 %1, 11, !insn.addr !5498
  %or.cond = or i1 %4, %5
  %or.cond.not = icmp ne i1 %or.cond, true
  %6 = icmp eq i32 %1, 4, !insn.addr !5499
  %7 = icmp eq i1 %6, false, !insn.addr !5500
  %or.cond3 = icmp eq i1 %7, %or.cond.not
  br i1 %or.cond3, label %8, label %dec_label_pc_4568bd, !insn.addr !5501

; <label>:8:                                      ; preds = %dec_label_pc_4568ae
  %9 = call i32 @function_4568d2(), !insn.addr !5500
  br label %dec_label_pc_4568bd, !insn.addr !5500

dec_label_pc_4568bd:                              ; preds = %dec_label_pc_4568ae, %8
  %10 = add i32 %2, -48, !insn.addr !5502
  %11 = inttoptr i32 %10 to i32*, !insn.addr !5502
  %12 = load i32, i32* %11, align 4, !insn.addr !5502
  %13 = add i32 %3, 4, !insn.addr !5503
  %14 = inttoptr i32 %13 to i32*, !insn.addr !5503
  store i32 %12, i32* %14, align 4, !insn.addr !5503
  %15 = icmp eq i1 %4, false, !insn.addr !5504
  br i1 %15, label %16, label %dec_label_pc_4568c7, !insn.addr !5504

; <label>:16:                                     ; preds = %dec_label_pc_4568bd
  %17 = call i32 @function_4568d2(), !insn.addr !5504
  br label %dec_label_pc_4568c7, !insn.addr !5504

dec_label_pc_4568c7:                              ; preds = %16, %dec_label_pc_4568bd
  %18 = call i32 @___acrt_getptd(), !insn.addr !5505
  %19 = add i32 %2, -52, !insn.addr !5506
  %20 = inttoptr i32 %19 to i32*, !insn.addr !5506
  %21 = load i32, i32* %20, align 4, !insn.addr !5506
  %22 = add i32 %18, 8, !insn.addr !5507
  %23 = inttoptr i32 %22 to i32*, !insn.addr !5507
  store i32 %21, i32* %23, align 4, !insn.addr !5507
  ret i32 %18, !insn.addr !5507
}

define i32 @function_4568d2() local_unnamed_addr {
dec_label_pc_4568d2:
  ret i32 0, !insn.addr !5508
}

define i32 @_clearfp() local_unnamed_addr {
dec_label_pc_45753d:
  %eax.4.reg2mem = alloca i32, !insn.addr !5509
  %ecx.4.reg2mem = alloca i32, !insn.addr !5509
  %edx.4.reg2mem = alloca i32, !insn.addr !5509
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i8 @__decompiler_undefined_function_8()
  %2 = call i32 @__asm_fnclex(), !insn.addr !5510
  %3 = load i32, i32* @__isa_available, align 4, !insn.addr !5511
  %4 = icmp slt i32 %3, 1, !insn.addr !5512
  %5 = and i32 %0, 63
  %6 = icmp eq i32 %5, 0
  br i1 %4, label %dec_label_pc_4575dc, label %dec_label_pc_45755a, !insn.addr !5512

dec_label_pc_45755a:                              ; preds = %dec_label_pc_45753d
  store i32 0, i32* %edx.4.reg2mem, !insn.addr !5513
  br i1 %6, label %dec_label_pc_457595, label %dec_label_pc_45756c, !insn.addr !5513

dec_label_pc_45756c:                              ; preds = %dec_label_pc_45755a
  %7 = mul i32 %0, 16, !insn.addr !5514
  %8 = and i32 %7, 16, !insn.addr !5515
  %9 = mul i32 %0, 2
  %10 = and i32 %9, 8
  %11 = or i32 %10, %8
  %12 = udiv i32 %0, 2
  %13 = and i32 %12, 4
  %14 = or i32 %11, %13
  %15 = udiv i32 %0, 8
  %16 = and i32 %15, 2
  %17 = or i32 %14, %16
  %18 = udiv i32 %0, 32
  %19 = and i32 %18, 1
  %20 = or i32 %17, %19
  %21 = mul i32 %0, 262144
  %22 = and i32 %21, 524288
  %23 = or i32 %20, %22
  store i32 %23, i32* %edx.4.reg2mem
  br label %dec_label_pc_457595

dec_label_pc_457595:                              ; preds = %dec_label_pc_45756c, %dec_label_pc_45755a
  %edx.4.reload = load i32, i32* %edx.4.reg2mem
  %24 = sext i8 %1 to i32, !insn.addr !5516
  call void @__asm_stmxcsr(i32 %24), !insn.addr !5516
  %25 = and i8 %1, -64
  %26 = sext i8 %25 to i32, !insn.addr !5517
  call void @__asm_ldmxcsr(i32 %26), !insn.addr !5518
  %27 = and i8 %1, 63, !insn.addr !5519
  %28 = icmp eq i8 %27, 0, !insn.addr !5519
  store i32 0, i32* %ecx.4.reg2mem, !insn.addr !5520
  br i1 %28, label %dec_label_pc_4575d5, label %dec_label_pc_4575ad, !insn.addr !5520

dec_label_pc_4575ad:                              ; preds = %dec_label_pc_457595
  %29 = mul i32 %24, 16, !insn.addr !5521
  %30 = and i32 %29, 16, !insn.addr !5522
  %31 = mul i32 %24, 2
  %32 = and i32 %31, 8
  %33 = or i32 %32, %30
  %34 = udiv i32 %24, 2
  %35 = and i32 %34, 4
  %36 = or i32 %33, %35
  %37 = udiv i32 %24, 8
  %38 = and i32 %37, 2
  %39 = or i32 %36, %38
  %40 = udiv i32 %24, 32
  %41 = and i32 %40, 1
  %42 = or i32 %39, %41
  %43 = mul i32 %24, 262144
  %44 = and i32 %43, 524288
  %45 = or i32 %42, %44
  store i32 %45, i32* %ecx.4.reg2mem
  br label %dec_label_pc_4575d5

dec_label_pc_4575d5:                              ; preds = %dec_label_pc_4575ad, %dec_label_pc_457595
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %46 = or i32 %ecx.4.reload, %edx.4.reload, !insn.addr !5523
  store i32 %46, i32* %eax.4.reg2mem, !insn.addr !5524
  br label %dec_label_pc_457618, !insn.addr !5524

dec_label_pc_4575dc:                              ; preds = %dec_label_pc_45753d
  store i32 0, i32* %eax.4.reg2mem, !insn.addr !5525
  br i1 %6, label %dec_label_pc_457618, label %dec_label_pc_4575e7, !insn.addr !5525

dec_label_pc_4575e7:                              ; preds = %dec_label_pc_4575dc
  %47 = mul i32 %0, 16, !insn.addr !5526
  %48 = and i32 %47, 16, !insn.addr !5527
  %49 = mul i32 %0, 2
  %50 = and i32 %49, 8
  %51 = or i32 %50, %48
  %52 = udiv i32 %0, 2
  %53 = and i32 %52, 4
  %54 = or i32 %51, %53
  %55 = udiv i32 %0, 8
  %56 = and i32 %55, 2
  %57 = or i32 %54, %56
  %58 = udiv i32 %0, 32
  %59 = and i32 %58, 1
  %60 = or i32 %57, %59
  %61 = mul i32 %0, 262144
  %62 = and i32 %61, 524288
  %63 = or i32 %60, %62
  ret i32 %63

dec_label_pc_457618:                              ; preds = %dec_label_pc_4575dc, %dec_label_pc_4575d5
  %eax.4.reload = load i32, i32* %eax.4.reg2mem
  ret i32 %eax.4.reload, !insn.addr !5528
}

declare i32 @__acrt_DownlevelLocaleNameToLCID(i16*) local_unnamed_addr

define %"`anonymous-namespace'::write_result.741" @write_double_translated_ansi_nolock(i32 %fh, i8* %buffer, i32 %buffer_size) local_unnamed_addr {
dec_label_pc_45816b:
  %.reg2mem72 = alloca i32, !insn.addr !5529
  %storemerge1.reg2mem = alloca i32, !insn.addr !5529
  %esi.2.reg2mem = alloca i32, !insn.addr !5529
  %.reg2mem70 = alloca i32, !insn.addr !5529
  %.reg2mem68 = alloca i32, !insn.addr !5529
  %ebx.0.reg2mem = alloca i32, !insn.addr !5529
  %esi.1.reg2mem = alloca i32, !insn.addr !5529
  %esp.4.reg2mem = alloca i32, !insn.addr !5529
  %stack_var_-88.1.reg2mem = alloca i32, !insn.addr !5529
  %edi.4.reg2mem = alloca i32, !insn.addr !5529
  %esp.3.reg2mem = alloca i32, !insn.addr !5529
  %cr_-44.1.reg2mem = alloca i32, !insn.addr !5529
  %storemerge2.reg2mem = alloca i32, !insn.addr !5529
  %storemerge.reg2mem = alloca i32, !insn.addr !5529
  %esp.2.reg2mem = alloca i32, !insn.addr !5529
  %stack_var_-52.0.reg2mem = alloca i32, !insn.addr !5529
  %cr_-44.0.in.reg2mem = alloca i32, !insn.addr !5529
  %edi.1.reg2mem = alloca i32, !insn.addr !5529
  %ecx.3.reg2mem = alloca i32, !insn.addr !5529
  %edx.1.reg2mem = alloca i32, !insn.addr !5529
  %ecx.25.reg2mem = alloca i32, !insn.addr !5529
  %.reg2mem = alloca i32, !insn.addr !5529
  %ecx.1.reg2mem = alloca i32, !insn.addr !5529
  %esi.0.reg2mem = alloca i32, !insn.addr !5529
  %esp.0.reg2mem = alloca i32, !insn.addr !5529
  %stack_var_-88.0.reg2mem = alloca i32, !insn.addr !5529
  %stack_var_-40.0.reg2mem = alloca i32, !insn.addr !5529
  %0 = call i1 @__decompiler_undefined_function_7()
  %1 = ptrtoint i8* %buffer to i32
  %2 = call i8 @__decompiler_undefined_function_8()
  %cr_-48 = alloca i16, align 2
  %written_-100 = alloca i32, align 4
  %mb_buffer_-32 = alloca [5 x i8], align 1
  %stack_var_-24 = alloca i8, align 1
  %str_-120 = alloca i8*, align 4
  %state_-136 = alloca %_Mbstatet.478, align 8
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %wc_-76 = alloca [2 x i16], align 2
  %result_-92 = alloca %"`anonymous-namespace'::write_result.477", align 8
  %result_-96 = alloca %"`anonymous-namespace'::write_result", align 8
  %3 = call i32 @__decompiler_undefined_function_0()
  %4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-160 = alloca i32, align 4
  %5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %6 = and i32 %1, 63, !insn.addr !5530
  %narrow = mul nuw nsw i32 %6, 56
  %7 = sdiv i32 %1, 64, !insn.addr !5531
  %8 = mul i32 %7, 4, !insn.addr !5532
  %9 = add i32 %8, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5532
  %10 = inttoptr i32 %9 to i32*, !insn.addr !5532
  %11 = load i32, i32* %10, align 4, !insn.addr !5532
  %12 = add nuw nsw i32 %narrow, 24, !insn.addr !5533
  %13 = add i32 %12, %11, !insn.addr !5533
  %14 = inttoptr i32 %13 to i32*, !insn.addr !5533
  %15 = load i32, i32* %14, align 4, !insn.addr !5533
  %16 = add i32 %5, %buffer_size, !insn.addr !5534
  %17 = call i32 @GetConsoleCP(), !insn.addr !5535
  store i32 0, i32* %stack_var_-160, align 4, !insn.addr !5536
  %18 = call i32 @function_403d91(i32 0), !insn.addr !5537
  %19 = ptrtoint %"`anonymous-namespace'::write_result"* %result_-96 to i32, !insn.addr !5538
  store %"`anonymous-namespace'::write_result" { i32 0, i32 undef, i32 undef }, %"`anonymous-namespace'::write_result"* %result_-96, align 8, !insn.addr !5539
  %20 = select i1 %0, i32 -4, i32 4, !insn.addr !5539
  %21 = add i32 %20, %19, !insn.addr !5539
  %22 = add i32 %3, 8, !insn.addr !5540
  %23 = inttoptr i32 %22 to i32*, !insn.addr !5540
  %24 = load i32, i32* %23, align 4, !insn.addr !5540
  %25 = inttoptr i32 %21 to i32*, !insn.addr !5541
  store i32 0, i32* %25, align 4, !insn.addr !5541
  %26 = add i32 %21, %20, !insn.addr !5541
  %27 = inttoptr i32 %26 to i32*, !insn.addr !5542
  store i32 0, i32* %27, align 8, !insn.addr !5542
  %28 = icmp ugt i32 %16, %buffer_size, !insn.addr !5543
  %29 = icmp eq i1 %28, false, !insn.addr !5544
  br i1 %29, label %dec_label_pc_4584ef, label %dec_label_pc_4581e6, !insn.addr !5544

dec_label_pc_4581e6:                              ; preds = %dec_label_pc_45816b
  %30 = ptrtoint i32* %stack_var_-4 to i32, !insn.addr !5545
  %31 = ptrtoint i32* %stack_var_-160 to i32, !insn.addr !5536
  %32 = getelementptr inbounds %"`anonymous-namespace'::write_result.477", %"`anonymous-namespace'::write_result.477"* %result_-92, i32 0, i32 0, !insn.addr !5546
  %33 = load i32, i32* %32, align 8, !insn.addr !5546
  %34 = icmp eq i32 %24, 65001, !insn.addr !5547
  %35 = icmp eq i1 %34, false, !insn.addr !5548
  %36 = add nuw nsw i32 %narrow, 46
  %37 = add i32 %30, -12
  %38 = ptrtoint i32* %stack_var_-16 to i32
  %39 = bitcast i32* %stack_var_-16 to i8*
  %40 = ptrtoint %_Mbstatet.478* %state_-136 to i32
  %41 = ptrtoint i8** %str_-120 to i32
  %42 = ptrtoint i32* %stack_var_-144 to i32
  %43 = ptrtoint i32* %stack_var_-56 to i32
  %44 = ptrtoint [2 x i16]* %wc_-76 to i32
  %45 = add nuw nsw i32 %narrow, 45
  %46 = ptrtoint i8* %stack_var_-24 to i32
  %47 = ptrtoint [5 x i8]* %mb_buffer_-32 to i32
  %48 = ptrtoint i32* %written_-100 to i32
  %49 = ptrtoint i16* %cr_-48 to i32
  %50 = bitcast %"`anonymous-namespace'::write_result.477"* %result_-92 to i32**
  store i32 %buffer_size, i32* %stack_var_-40.0.reg2mem, !insn.addr !5546
  store i32 %31, i32* %esp.0.reg2mem, !insn.addr !5546
  store i32 %33, i32* %esi.0.reg2mem, !insn.addr !5546
  br label %dec_label_pc_4581e9, !insn.addr !5546

dec_label_pc_4581e9:                              ; preds = %dec_label_pc_458456, %dec_label_pc_4581e6
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %stack_var_-88.0.reload = load i32, i32* %stack_var_-88.0.reg2mem
  %stack_var_-40.0.reload = load i32, i32* %stack_var_-40.0.reg2mem
  %51 = inttoptr i32 %stack_var_-40.0.reload to i8*
  %52 = load i8, i8* %51, align 1, !insn.addr !5549
  store [2 x i16] [i16 0, i16 undef], [2 x i16]* %wc_-76, align 2, !insn.addr !5550
  %53 = load i32, i32* %10, align 4, !insn.addr !5551
  br i1 %35, label %dec_label_pc_45833e, label %dec_label_pc_458211, !insn.addr !5548

dec_label_pc_458211:                              ; preds = %dec_label_pc_4581e9
  %54 = add i32 %53, %36
  store i32 0, i32* %ecx.1.reg2mem, !insn.addr !5552
  br label %dec_label_pc_45821e, !insn.addr !5552

dec_label_pc_45821e:                              ; preds = %dec_label_pc_458223, %dec_label_pc_458211
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %55 = add i32 %ecx.1.reload, %54, !insn.addr !5553
  %56 = inttoptr i32 %55 to i8*, !insn.addr !5553
  %57 = load i8, i8* %56, align 1, !insn.addr !5553
  %58 = icmp eq i8 %57, 0, !insn.addr !5553
  br i1 %58, label %dec_label_pc_458229, label %dec_label_pc_458223, !insn.addr !5554

dec_label_pc_458223:                              ; preds = %dec_label_pc_45821e
  %59 = add nuw nsw i32 %ecx.1.reload, 1, !insn.addr !5555
  %60 = icmp ult i32 %59, 5, !insn.addr !5556
  store i32 %59, i32* %ecx.1.reg2mem, !insn.addr !5556
  br i1 %60, label %dec_label_pc_45821e, label %dec_label_pc_458229.thread, !insn.addr !5556

dec_label_pc_458229.thread:                       ; preds = %dec_label_pc_458223
  %61 = sub i32 %16, %stack_var_-40.0.reload, !insn.addr !5557
  store i32 %61, i32* %.reg2mem
  store i32 5, i32* %ecx.25.reg2mem
  br label %dec_label_pc_45823c

dec_label_pc_458229:                              ; preds = %dec_label_pc_45821e
  %62 = sub i32 %16, %stack_var_-40.0.reload, !insn.addr !5557
  %63 = icmp eq i32 %ecx.1.reload, 0
  store i32 %62, i32* %.reg2mem, !insn.addr !5558
  store i32 %ecx.1.reload, i32* %ecx.25.reg2mem, !insn.addr !5558
  br i1 %63, label %dec_label_pc_4582de, label %dec_label_pc_45823c, !insn.addr !5558

dec_label_pc_45823c:                              ; preds = %dec_label_pc_458229.thread, %dec_label_pc_458229
  %ecx.25.reload = load i32, i32* %ecx.25.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %64 = inttoptr i32 %54 to i8*, !insn.addr !5559
  %65 = load i8, i8* %64, align 1, !insn.addr !5559
  %66 = zext i8 %65 to i32, !insn.addr !5559
  %67 = add i32 %66, ptrtoint ([256 x i8]* @_lookuptrailbytes to i32), !insn.addr !5560
  %68 = inttoptr i32 %67 to i8*, !insn.addr !5560
  %69 = load i8, i8* %68, align 1, !insn.addr !5560
  %70 = sext i8 %69 to i32, !insn.addr !5560
  %71 = add nsw i32 %70, 1, !insn.addr !5561
  store i32 %71, i32* %stack_var_-56, align 4, !insn.addr !5562
  %72 = sub i32 %71, %ecx.25.reload, !insn.addr !5563
  %73 = icmp sgt i32 %72, %.reload, !insn.addr !5564
  store i32 0, i32* %edx.1.reg2mem, !insn.addr !5564
  br i1 %73, label %dec_label_pc_458467, label %dec_label_pc_458265, !insn.addr !5564

dec_label_pc_458265:                              ; preds = %dec_label_pc_45823c, %dec_label_pc_458265
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %74 = add i32 %edx.1.reload, %54, !insn.addr !5565
  %75 = inttoptr i32 %74 to i8*, !insn.addr !5565
  %76 = load i8, i8* %75, align 1, !insn.addr !5565
  %77 = add i32 %37, %edx.1.reload, !insn.addr !5566
  %78 = inttoptr i32 %77 to i8*, !insn.addr !5566
  store i8 %76, i8* %78, align 1, !insn.addr !5566
  %79 = add nuw nsw i32 %edx.1.reload, 1, !insn.addr !5567
  %80 = icmp ult i32 %79, %ecx.25.reload, !insn.addr !5568
  store i32 %79, i32* %edx.1.reg2mem, !insn.addr !5568
  br i1 %80, label %dec_label_pc_458265, label %dec_label_pc_458274, !insn.addr !5568

dec_label_pc_458274:                              ; preds = %dec_label_pc_458265
  %81 = icmp slt i32 %72, 1
  store i32 %ecx.25.reload, i32* %ecx.3.reg2mem, !insn.addr !5569
  br i1 %81, label %dec_label_pc_458290, label %dec_label_pc_45827b, !insn.addr !5569

dec_label_pc_45827b:                              ; preds = %dec_label_pc_458274
  %82 = add i32 %esp.0.reload, -4, !insn.addr !5570
  %83 = inttoptr i32 %82 to i32*, !insn.addr !5570
  store i32 %72, i32* %83, align 4, !insn.addr !5570
  %84 = add i32 %ecx.25.reload, %38, !insn.addr !5571
  %85 = add i32 %esp.0.reload, -8, !insn.addr !5572
  %86 = inttoptr i32 %85 to i32*, !insn.addr !5572
  store i32 %stack_var_-40.0.reload, i32* %86, align 4, !insn.addr !5572
  %87 = add i32 %esp.0.reload, -12, !insn.addr !5573
  %88 = inttoptr i32 %87 to i32*, !insn.addr !5573
  store i32 %84, i32* %88, align 4, !insn.addr !5573
  call void @memcpy(i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !5574
  %sext = mul i32 %ecx.25.reload, 65536
  %89 = sdiv i32 %sext, 65536, !insn.addr !5575
  store i32 %89, i32* %ecx.3.reg2mem, !insn.addr !5576
  br label %dec_label_pc_458290, !insn.addr !5576

dec_label_pc_458290:                              ; preds = %dec_label_pc_45827b, %dec_label_pc_458274
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %90 = icmp slt i32 %ecx.3.reload, 1
  br i1 %90, label %dec_label_pc_4582b5, label %dec_label_pc_458294, !insn.addr !5577

dec_label_pc_458294:                              ; preds = %dec_label_pc_458290
  %sext3 = mul i32 %ecx.25.reload, 65536
  %91 = sdiv i32 %sext3, 65536, !insn.addr !5578
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !5579
  br label %dec_label_pc_45829c, !insn.addr !5579

dec_label_pc_45829c:                              ; preds = %dec_label_pc_45829c, %dec_label_pc_458294
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %92 = add nuw nsw i32 %edi.1.reload, 1, !insn.addr !5580
  %93 = load i32, i32* %10, align 4, !insn.addr !5581
  %94 = add nuw nsw i32 %edi.1.reload, %36, !insn.addr !5582
  %95 = add i32 %94, %93, !insn.addr !5582
  %96 = inttoptr i32 %95 to i8*, !insn.addr !5582
  store i8 0, i8* %96, align 1, !insn.addr !5582
  %97 = icmp ult i32 %92, %91, !insn.addr !5583
  store i32 %92, i32* %edi.1.reg2mem, !insn.addr !5583
  br i1 %97, label %dec_label_pc_45829c, label %dec_label_pc_4582b5, !insn.addr !5583

dec_label_pc_4582b5:                              ; preds = %dec_label_pc_45829c, %dec_label_pc_458290
  store %_Mbstatet.478 { i32 0, i16 undef, i16 undef }, %_Mbstatet.478* %state_-136, align 8, !insn.addr !5584
  store i8* %39, i8** %str_-120, align 4, !insn.addr !5585
  %98 = load i32, i32* %stack_var_-56, align 4, !insn.addr !5586
  %99 = icmp eq i32 %98, 4, !insn.addr !5586
  %100 = add i32 %esp.0.reload, -4, !insn.addr !5587
  %101 = inttoptr i32 %100 to i32*, !insn.addr !5587
  store i32 %40, i32* %101, align 4, !insn.addr !5587
  %102 = select i1 %99, i32 2, i32 1, !insn.addr !5588
  %103 = add i32 %esp.0.reload, -8, !insn.addr !5589
  %104 = inttoptr i32 %103 to i32*, !insn.addr !5589
  store i32 %102, i32* %104, align 4, !insn.addr !5589
  store i32 %102, i32* %cr_-44.0.in.reg2mem, !insn.addr !5590
  store i32 %72, i32* %stack_var_-52.0.reg2mem, !insn.addr !5590
  store i32 %103, i32* %esp.2.reg2mem, !insn.addr !5590
  store i32 %41, i32* %storemerge.reg2mem, !insn.addr !5590
  br label %dec_label_pc_45831d, !insn.addr !5590

dec_label_pc_4582de:                              ; preds = %dec_label_pc_458229
  %105 = load i8, i8* %51, align 1, !insn.addr !5591
  %106 = zext i8 %105 to i32, !insn.addr !5591
  %107 = add i32 %106, ptrtoint ([256 x i8]* @_lookuptrailbytes to i32), !insn.addr !5592
  %108 = inttoptr i32 %107 to i8*, !insn.addr !5592
  %109 = load i8, i8* %108, align 1, !insn.addr !5592
  %110 = sext i8 %109 to i32, !insn.addr !5592
  %111 = icmp sgt i32 %62, %110, !insn.addr !5593
  br i1 %111, label %dec_label_pc_4582f4, label %dec_label_pc_45849c, !insn.addr !5593

dec_label_pc_4582f4:                              ; preds = %dec_label_pc_4582de
  %112 = add nsw i32 %110, 1, !insn.addr !5594
  %113 = icmp eq i32 %112, 4, !insn.addr !5595
  store i32 0, i32* %stack_var_-144, align 4, !insn.addr !5596
  store i32 %stack_var_-40.0.reload, i32* %stack_var_-56, align 4, !insn.addr !5597
  %114 = select i1 %113, i32 2, i32 1, !insn.addr !5598
  %115 = add i32 %esp.0.reload, -4, !insn.addr !5599
  %116 = inttoptr i32 %115 to i32*, !insn.addr !5599
  store i32 %42, i32* %116, align 4, !insn.addr !5599
  %117 = add i32 %esp.0.reload, -8, !insn.addr !5600
  %118 = inttoptr i32 %117 to i32*, !insn.addr !5600
  store i32 %114, i32* %118, align 4, !insn.addr !5600
  store i32 %114, i32* %cr_-44.0.in.reg2mem, !insn.addr !5601
  store i32 %112, i32* %stack_var_-52.0.reg2mem, !insn.addr !5601
  store i32 %117, i32* %esp.2.reg2mem, !insn.addr !5601
  store i32 %43, i32* %storemerge.reg2mem, !insn.addr !5601
  br label %dec_label_pc_45831d, !insn.addr !5601

dec_label_pc_45831d:                              ; preds = %dec_label_pc_4582f4, %dec_label_pc_4582b5
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %stack_var_-52.0.reload = load i32, i32* %stack_var_-52.0.reg2mem
  %cr_-44.0.in.reload = load i32, i32* %cr_-44.0.in.reg2mem
  %119 = add i32 %esp.2.reload, -4, !insn.addr !5602
  %120 = inttoptr i32 %119 to i32*, !insn.addr !5602
  store i32 %storemerge.reload, i32* %120, align 4, !insn.addr !5602
  %121 = add i32 %esp.2.reload, -8, !insn.addr !5603
  %122 = inttoptr i32 %121 to i32*, !insn.addr !5603
  store i32 %44, i32* %122, align 4, !insn.addr !5603
  %123 = call i32 @function_40432c(i32 %cr_-44.0.in.reload), !insn.addr !5604
  %124 = icmp eq i32 %123, -1, !insn.addr !5605
  br i1 %124, label %dec_label_pc_4584ef, label %dec_label_pc_458333, !insn.addr !5606

dec_label_pc_458333:                              ; preds = %dec_label_pc_45831d
  %125 = add i32 %esp.2.reload, 8, !insn.addr !5607
  %126 = add i32 %stack_var_-40.0.reload, -1, !insn.addr !5608
  %127 = add i32 %126, %stack_var_-52.0.reload, !insn.addr !5609
  store i32 %cr_-44.0.in.reload, i32* %cr_-44.1.reg2mem, !insn.addr !5610
  store i32 %125, i32* %esp.3.reg2mem, !insn.addr !5610
  store i32 %127, i32* %edi.4.reg2mem, !insn.addr !5610
  br label %dec_label_pc_4583c0, !insn.addr !5610

dec_label_pc_45833e:                              ; preds = %dec_label_pc_4581e9
  %128 = add i32 %53, %45, !insn.addr !5611
  %129 = inttoptr i32 %128 to i8*, !insn.addr !5611
  %130 = load i8, i8* %129, align 1, !insn.addr !5611
  %131 = and i8 %130, 4, !insn.addr !5612
  %132 = icmp eq i8 %131, 0, !insn.addr !5612
  br i1 %132, label %dec_label_pc_458368, label %dec_label_pc_45834a, !insn.addr !5613

dec_label_pc_45834a:                              ; preds = %dec_label_pc_45833e
  %133 = add i32 %53, %36, !insn.addr !5614
  %134 = inttoptr i32 %133 to i8*, !insn.addr !5614
  %135 = load i8, i8* %134, align 1, !insn.addr !5614
  %136 = and i8 %130, -5
  store i8 %135, i8* %stack_var_-24, align 1, !insn.addr !5615
  %137 = add i32 %esp.0.reload, -4, !insn.addr !5616
  %138 = inttoptr i32 %137 to i32*, !insn.addr !5616
  store i32 2, i32* %138, align 4, !insn.addr !5616
  store i8 %136, i8* %129, align 1, !insn.addr !5617
  %139 = add i32 %esp.0.reload, -8, !insn.addr !5618
  %140 = inttoptr i32 %139 to i32*, !insn.addr !5618
  store i32 %46, i32* %140, align 4, !insn.addr !5618
  store i32 %139, i32* %storemerge2.reg2mem, !insn.addr !5619
  br label %dec_label_pc_4583ab, !insn.addr !5619

dec_label_pc_458368:                              ; preds = %dec_label_pc_45833e
  %141 = load i8, i8* %51, align 1, !insn.addr !5620
  %142 = zext i8 %141 to i32, !insn.addr !5620
  %143 = call i16* @__pctype_func(), !insn.addr !5621
  %144 = ptrtoint i16* %143 to i32, !insn.addr !5621
  %145 = mul i32 %142, 2, !insn.addr !5622
  %146 = add i32 %145, %144, !insn.addr !5622
  %147 = inttoptr i32 %146 to i16*, !insn.addr !5622
  %148 = load i16, i16* %147, align 2, !insn.addr !5622
  %149 = icmp slt i16 %148, 0, !insn.addr !5623
  br i1 %149, label %dec_label_pc_45837c, label %dec_label_pc_4583a8, !insn.addr !5623

dec_label_pc_45837c:                              ; preds = %dec_label_pc_458368
  %150 = add i32 %stack_var_-40.0.reload, 1, !insn.addr !5624
  store i32 %150, i32* %stack_var_-56, align 4, !insn.addr !5625
  %151 = icmp ult i32 %150, %16, !insn.addr !5626
  %152 = icmp eq i1 %151, false, !insn.addr !5627
  br i1 %152, label %dec_label_pc_4584c0, label %dec_label_pc_45838b, !insn.addr !5627

dec_label_pc_45838b:                              ; preds = %dec_label_pc_45837c
  %153 = add i32 %esp.0.reload, -4, !insn.addr !5628
  %154 = inttoptr i32 %153 to i32*, !insn.addr !5628
  store i32 2, i32* %154, align 4, !insn.addr !5628
  %155 = add i32 %esp.0.reload, -8, !insn.addr !5629
  %156 = inttoptr i32 %155 to i32*, !insn.addr !5629
  store i32 %stack_var_-40.0.reload, i32* %156, align 4, !insn.addr !5629
  %157 = add i32 %esp.0.reload, -12, !insn.addr !5630
  %158 = inttoptr i32 %157 to i32*, !insn.addr !5630
  store i32 %44, i32* %158, align 4, !insn.addr !5630
  %159 = load i32, i32* %stack_var_-56, align 4, !insn.addr !5631
  %160 = inttoptr i32 %159 to i16*, !insn.addr !5631
  %161 = call i32 @mbtowc(i16* %160, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !5631
  %162 = icmp eq i32 %161, -1, !insn.addr !5632
  br i1 %162, label %dec_label_pc_4584ef, label %dec_label_pc_4583a3, !insn.addr !5633

dec_label_pc_4583a3:                              ; preds = %dec_label_pc_45838b
  %163 = load i32, i32* %stack_var_-56, align 4, !insn.addr !5634
  store i32 1, i32* %cr_-44.1.reg2mem, !insn.addr !5635
  store i32 %esp.0.reload, i32* %esp.3.reg2mem, !insn.addr !5635
  store i32 %163, i32* %edi.4.reg2mem, !insn.addr !5635
  br label %dec_label_pc_4583c0, !insn.addr !5635

dec_label_pc_4583a8:                              ; preds = %dec_label_pc_458368
  %164 = add i32 %esp.0.reload, -4, !insn.addr !5636
  %165 = inttoptr i32 %164 to i32*, !insn.addr !5636
  store i32 1, i32* %165, align 4, !insn.addr !5636
  %166 = add i32 %esp.0.reload, -8, !insn.addr !5637
  %167 = inttoptr i32 %166 to i32*, !insn.addr !5637
  store i32 %stack_var_-40.0.reload, i32* %167, align 4, !insn.addr !5637
  store i32 %166, i32* %storemerge2.reg2mem, !insn.addr !5637
  br label %dec_label_pc_4583ab, !insn.addr !5637

dec_label_pc_4583ab:                              ; preds = %dec_label_pc_4583a8, %dec_label_pc_45834a
  %storemerge2.reload = load i32, i32* %storemerge2.reg2mem
  %168 = add i32 %storemerge2.reload, -4, !insn.addr !5638
  %169 = inttoptr i32 %168 to i32*, !insn.addr !5638
  store i32 %44, i32* %169, align 4, !insn.addr !5638
  %170 = call i32 @mbtowc(i16* bitcast (i32* @80 to i16*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !5639
  %171 = add i32 %storemerge2.reload, 8, !insn.addr !5640
  %172 = icmp eq i32 %170, -1, !insn.addr !5641
  store i32 1, i32* %cr_-44.1.reg2mem, !insn.addr !5642
  store i32 %171, i32* %esp.3.reg2mem, !insn.addr !5642
  store i32 %stack_var_-40.0.reload, i32* %edi.4.reg2mem, !insn.addr !5642
  br i1 %172, label %dec_label_pc_4584ef, label %dec_label_pc_4583c0, !insn.addr !5642

dec_label_pc_4583c0:                              ; preds = %dec_label_pc_4583ab, %dec_label_pc_4583a3, %dec_label_pc_458333
  %edi.4.reload = load i32, i32* %edi.4.reg2mem
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %cr_-44.1.reload = load i32, i32* %cr_-44.1.reg2mem
  %173 = add i32 %esp.3.reload, -4, !insn.addr !5643
  %174 = inttoptr i32 %173 to i32*, !insn.addr !5643
  store i32 0, i32* %174, align 4, !insn.addr !5643
  %175 = add i32 %esp.3.reload, -8, !insn.addr !5644
  %176 = inttoptr i32 %175 to i32*, !insn.addr !5644
  store i32 0, i32* %176, align 4, !insn.addr !5644
  %177 = add i32 %esp.3.reload, -12, !insn.addr !5645
  %178 = inttoptr i32 %177 to i32*, !insn.addr !5645
  store i32 5, i32* %178, align 4, !insn.addr !5645
  %179 = add i32 %esp.3.reload, -16, !insn.addr !5646
  %180 = inttoptr i32 %179 to i32*, !insn.addr !5646
  store i32 %47, i32* %180, align 4, !insn.addr !5646
  %181 = add i32 %esp.3.reload, -20, !insn.addr !5647
  %182 = inttoptr i32 %181 to i32*, !insn.addr !5647
  store i32 %cr_-44.1.reload, i32* %182, align 4, !insn.addr !5647
  %183 = add i32 %esp.3.reload, -24, !insn.addr !5648
  %184 = inttoptr i32 %183 to i32*, !insn.addr !5648
  store i32 %44, i32* %184, align 4, !insn.addr !5648
  %185 = add i32 %esp.3.reload, -28, !insn.addr !5649
  %186 = inttoptr i32 %185 to i32*, !insn.addr !5649
  store i32 0, i32* %186, align 4, !insn.addr !5649
  %187 = add i32 %esp.3.reload, -32, !insn.addr !5650
  %188 = inttoptr i32 %187 to i32*, !insn.addr !5650
  store i32 %17, i32* %188, align 4, !insn.addr !5650
  %189 = call i32 @function_40461f(), !insn.addr !5651
  store i32 %189, i32* %stack_var_-56, align 4, !insn.addr !5652
  %190 = icmp eq i32 %189, 0, !insn.addr !5653
  br i1 %190, label %dec_label_pc_4584ef, label %dec_label_pc_4583ea, !insn.addr !5654

dec_label_pc_4583ea:                              ; preds = %dec_label_pc_4583c0
  store i32 0, i32* %174, align 4, !insn.addr !5655
  store i32 %48, i32* %176, align 4, !insn.addr !5656
  store i32 %189, i32* %178, align 4, !insn.addr !5657
  store i32 %47, i32* %180, align 4, !insn.addr !5658
  store i32 %15, i32* %182, align 4, !insn.addr !5659
  %191 = load i32, i32* %stack_var_-56, align 4, !insn.addr !5660
  %192 = inttoptr i32 %191 to i32*, !insn.addr !5660
  %193 = call i1 @WriteFile(i32* %192, i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, %_OVERLAPPED* bitcast (i32* @80 to %_OVERLAPPED*)), !insn.addr !5660
  %194 = icmp eq i1 %193, false, !insn.addr !5661
  br i1 %194, label %dec_label_pc_4584e3, label %dec_label_pc_458405, !insn.addr !5662

dec_label_pc_458405:                              ; preds = %dec_label_pc_4583ea
  %195 = add i32 %edi.4.reload, 1, !insn.addr !5663
  %196 = sub i32 %stack_var_-88.0.reload, %buffer_size, !insn.addr !5664
  %197 = load i32, i32* %stack_var_-56, align 4, !insn.addr !5665
  %198 = add i32 %195, %196, !insn.addr !5666
  %199 = insertvalue %"`anonymous-namespace'::write_result.477" undef, i32 %198, 0, !insn.addr !5667
  store %"`anonymous-namespace'::write_result.477" %199, %"`anonymous-namespace'::write_result.477"* %result_-92, align 8, !insn.addr !5667
  %200 = load i32, i32* %written_-100, align 4, !insn.addr !5668
  %201 = icmp ult i32 %200, %197, !insn.addr !5668
  br i1 %201, label %dec_label_pc_4584ef, label %dec_label_pc_45841c, !insn.addr !5669

dec_label_pc_45841c:                              ; preds = %dec_label_pc_458405
  %202 = icmp eq i8 %52, 10, !insn.addr !5670
  %203 = icmp eq i1 %202, false, !insn.addr !5671
  store i32 %stack_var_-88.0.reload, i32* %stack_var_-88.1.reg2mem, !insn.addr !5671
  store i32 %181, i32* %esp.4.reg2mem, !insn.addr !5671
  store i32 %198, i32* %esi.1.reg2mem, !insn.addr !5671
  br i1 %203, label %dec_label_pc_458456, label %dec_label_pc_458422, !insn.addr !5671

dec_label_pc_458422:                              ; preds = %dec_label_pc_45841c
  store i32 0, i32* %184, align 4, !insn.addr !5672
  store i16 13, i16* %cr_-48, align 2, !insn.addr !5673
  store i32 %48, i32* %186, align 4, !insn.addr !5674
  store i32 1, i32* %188, align 4, !insn.addr !5675
  %204 = add i32 %esp.3.reload, -36, !insn.addr !5676
  %205 = inttoptr i32 %204 to i32*, !insn.addr !5676
  store i32 %49, i32* %205, align 4, !insn.addr !5676
  %206 = add i32 %esp.3.reload, -40, !insn.addr !5677
  %207 = inttoptr i32 %206 to i32*, !insn.addr !5677
  store i32 %15, i32* %207, align 4, !insn.addr !5677
  %208 = load i32*, i32** %50, align 8, !insn.addr !5678
  %209 = call i1 @WriteFile(i32* %208, i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, %_OVERLAPPED* bitcast (i32* @80 to %_OVERLAPPED*)), !insn.addr !5678
  %210 = icmp eq i1 %209, false, !insn.addr !5679
  br i1 %210, label %dec_label_pc_4584e3, label %dec_label_pc_458445, !insn.addr !5680

dec_label_pc_458445:                              ; preds = %dec_label_pc_458422
  %211 = load i32, i32* %written_-100, align 4, !insn.addr !5681
  %212 = icmp eq i32 %211, 0, !insn.addr !5681
  br i1 %212, label %dec_label_pc_4584ef, label %dec_label_pc_45844f, !insn.addr !5682

dec_label_pc_45844f:                              ; preds = %dec_label_pc_458445
  %213 = add i32 %stack_var_-88.0.reload, 1, !insn.addr !5683
  %214 = add i32 %198, 1, !insn.addr !5684
  %215 = insertvalue %"`anonymous-namespace'::write_result.477" undef, i32 %214, 0, !insn.addr !5685
  store %"`anonymous-namespace'::write_result.477" %215, %"`anonymous-namespace'::write_result.477"* %result_-92, align 8, !insn.addr !5685
  store i32 %213, i32* %stack_var_-88.1.reg2mem, !insn.addr !5685
  store i32 %206, i32* %esp.4.reg2mem, !insn.addr !5685
  store i32 %214, i32* %esi.1.reg2mem, !insn.addr !5685
  br label %dec_label_pc_458456, !insn.addr !5685

dec_label_pc_458456:                              ; preds = %dec_label_pc_45844f, %dec_label_pc_45841c
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %esp.4.reload = load i32, i32* %esp.4.reg2mem
  %stack_var_-88.1.reload = load i32, i32* %stack_var_-88.1.reg2mem
  %216 = icmp ult i32 %195, %16, !insn.addr !5686
  %217 = icmp eq i1 %216, false, !insn.addr !5687
  store i32 %195, i32* %stack_var_-40.0.reg2mem, !insn.addr !5687
  store i32 %stack_var_-88.1.reload, i32* %stack_var_-88.0.reg2mem, !insn.addr !5687
  store i32 %esp.4.reload, i32* %esp.0.reg2mem, !insn.addr !5687
  store i32 %esi.1.reload, i32* %esi.0.reg2mem, !insn.addr !5687
  br i1 %217, label %dec_label_pc_4584ef, label %dec_label_pc_4581e9, !insn.addr !5687

dec_label_pc_458467:                              ; preds = %dec_label_pc_45823c
  %218 = icmp slt i32 %.reload, 1
  store i32 %.reload, i32* %.reg2mem70, !insn.addr !5688
  store i32 %esi.0.reload, i32* %esi.2.reg2mem, !insn.addr !5688
  br i1 %218, label %dec_label_pc_458491, label %dec_label_pc_45846e.preheader, !insn.addr !5688

dec_label_pc_45846e.preheader:                    ; preds = %dec_label_pc_458467
  %219 = add nuw i32 %36, %ecx.25.reload
  store i32 0, i32* %ebx.0.reg2mem
  br label %dec_label_pc_45846e

dec_label_pc_45846e:                              ; preds = %dec_label_pc_45846e, %dec_label_pc_45846e.preheader
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %220 = load i32, i32* %10, align 4, !insn.addr !5689
  %221 = add i32 %ebx.0.reload, %stack_var_-40.0.reload, !insn.addr !5690
  %222 = inttoptr i32 %221 to i8*, !insn.addr !5690
  %223 = load i8, i8* %222, align 1, !insn.addr !5690
  %224 = add nuw nsw i32 %ebx.0.reload, 1, !insn.addr !5691
  %225 = add i32 %219, %ebx.0.reload, !insn.addr !5692
  %226 = add i32 %225, %220, !insn.addr !5692
  %227 = inttoptr i32 %226 to i8*, !insn.addr !5692
  store i8 %223, i8* %227, align 1, !insn.addr !5692
  %exitcond33 = icmp eq i32 %224, %.reload
  store i32 %224, i32* %ebx.0.reg2mem, !insn.addr !5693
  store i32 %.reload, i32* %.reg2mem68, !insn.addr !5693
  br i1 %exitcond33, label %dec_label_pc_45848e, label %dec_label_pc_45846e, !insn.addr !5693

dec_label_pc_45848e:                              ; preds = %dec_label_pc_45846e, %dec_label_pc_4584a3.preheader, %dec_label_pc_4584a3.dec_label_pc_4584a3_crit_edge
  %.reload69 = load i32, i32* %.reg2mem68
  %228 = load i32, i32* %32, align 8, !insn.addr !5694
  store i32 %.reload69, i32* %.reg2mem70, !insn.addr !5694
  store i32 %228, i32* %esi.2.reg2mem, !insn.addr !5694
  br label %dec_label_pc_458491, !insn.addr !5694

dec_label_pc_458491:                              ; preds = %dec_label_pc_45849c, %dec_label_pc_45848e, %dec_label_pc_458467
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %.reload71 = load i32, i32* %.reg2mem70
  %229 = add i32 %esi.2.reload, %.reload71, !insn.addr !5695
  store i32 %229, i32* %storemerge1.reg2mem, !insn.addr !5695
  br label %dec_label_pc_458493, !insn.addr !5695

dec_label_pc_458493:                              ; preds = %dec_label_pc_4584c0, %dec_label_pc_458491
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %230 = insertvalue %"`anonymous-namespace'::write_result.477" undef, i32 %storemerge1.reload, 0, !insn.addr !5696
  store %"`anonymous-namespace'::write_result.477" %230, %"`anonymous-namespace'::write_result.477"* %result_-92, align 8, !insn.addr !5696
  br label %dec_label_pc_4584ef, !insn.addr !5697

dec_label_pc_45849c:                              ; preds = %dec_label_pc_4582de
  %231 = icmp slt i32 %62, 1
  store i32 %62, i32* %.reg2mem70, !insn.addr !5698
  store i32 %esi.0.reload, i32* %esi.2.reg2mem, !insn.addr !5698
  br i1 %231, label %dec_label_pc_458491, label %dec_label_pc_4584a3.preheader, !insn.addr !5698

dec_label_pc_4584a3.preheader:                    ; preds = %dec_label_pc_45849c
  %232 = inttoptr i32 %54 to i8*, !insn.addr !5699
  store i8 %105, i8* %232, align 1, !insn.addr !5699
  %exitcond51 = icmp eq i32 %62, 1
  store i32 1, i32* %.reg2mem68, !insn.addr !5700
  store i32 1, i32* %.reg2mem72, !insn.addr !5700
  br i1 %exitcond51, label %dec_label_pc_45848e, label %dec_label_pc_4584a3.dec_label_pc_4584a3_crit_edge, !insn.addr !5700

dec_label_pc_4584a3.dec_label_pc_4584a3_crit_edge: ; preds = %dec_label_pc_4584a3.preheader, %dec_label_pc_4584a3.dec_label_pc_4584a3_crit_edge
  %.reload73 = load i32, i32* %.reg2mem72
  %.pre = load i32, i32* %10, align 4
  %233 = add i32 %.reload73, %stack_var_-40.0.reload, !insn.addr !5701
  %234 = inttoptr i32 %233 to i8*, !insn.addr !5701
  %235 = load i8, i8* %234, align 1, !insn.addr !5701
  %236 = add nuw nsw i32 %.reload73, 1, !insn.addr !5702
  %237 = add i32 %.pre, %36, !insn.addr !5699
  %238 = add i32 %237, %.reload73, !insn.addr !5699
  %239 = inttoptr i32 %238 to i8*, !insn.addr !5699
  store i8 %235, i8* %239, align 1, !insn.addr !5699
  %exitcond = icmp eq i32 %236, %62
  store i32 %62, i32* %.reg2mem68, !insn.addr !5700
  store i32 %236, i32* %.reg2mem72, !insn.addr !5700
  br i1 %exitcond, label %dec_label_pc_45848e, label %dec_label_pc_4584a3.dec_label_pc_4584a3_crit_edge, !insn.addr !5700

dec_label_pc_4584c0:                              ; preds = %dec_label_pc_45837c
  %240 = load i32, i32* %10, align 4, !insn.addr !5703
  %241 = add i32 %240, %36, !insn.addr !5704
  %242 = inttoptr i32 %241 to i8*, !insn.addr !5704
  store i8 %141, i8* %242, align 1, !insn.addr !5704
  %243 = load i32, i32* %10, align 4, !insn.addr !5705
  %244 = add i32 %243, %45, !insn.addr !5706
  %245 = inttoptr i32 %244 to i8*, !insn.addr !5706
  %246 = load i8, i8* %245, align 1, !insn.addr !5706
  %247 = or i8 %246, 4, !insn.addr !5706
  store i8 %247, i8* %245, align 1, !insn.addr !5706
  %248 = add i32 %esi.0.reload, 1, !insn.addr !5707
  store i32 %248, i32* %storemerge1.reg2mem, !insn.addr !5708
  br label %dec_label_pc_458493, !insn.addr !5708

dec_label_pc_4584e3:                              ; preds = %dec_label_pc_458422, %dec_label_pc_4583ea
  %249 = call i32 @GetLastError(), !insn.addr !5709
  %250 = insertvalue %"`anonymous-namespace'::write_result" undef, i32 %249, 0, !insn.addr !5710
  store %"`anonymous-namespace'::write_result" %250, %"`anonymous-namespace'::write_result"* %result_-96, align 8, !insn.addr !5710
  br label %dec_label_pc_4584ef, !insn.addr !5710

dec_label_pc_4584ef:                              ; preds = %dec_label_pc_45831d, %dec_label_pc_45838b, %dec_label_pc_4583ab, %dec_label_pc_4583c0, %dec_label_pc_458405, %dec_label_pc_458445, %dec_label_pc_458456, %dec_label_pc_45816b, %dec_label_pc_4584e3, %dec_label_pc_458493
  %zf.0 = icmp eq i8 %2, 0
  br i1 %zf.0, label %dec_label_pc_4584fb, label %dec_label_pc_4584f1, !insn.addr !5711

dec_label_pc_4584f1:                              ; preds = %dec_label_pc_4584ef
  %251 = add i32 %4, 848, !insn.addr !5712
  %252 = inttoptr i32 %251 to i32*, !insn.addr !5712
  %253 = load i32, i32* %252, align 4, !insn.addr !5712
  %254 = and i32 %253, -3, !insn.addr !5712
  store i32 %254, i32* %252, align 4, !insn.addr !5712
  br label %dec_label_pc_4584fb, !insn.addr !5712

dec_label_pc_4584fb:                              ; preds = %dec_label_pc_4584f1, %dec_label_pc_4584ef
  %255 = getelementptr inbounds %"`anonymous-namespace'::write_result", %"`anonymous-namespace'::write_result"* %result_-96, i32 0, i32 0, !insn.addr !5713
  %256 = load i32, i32* %255, align 8, !insn.addr !5713
  %257 = inttoptr i32 %fh to i32*, !insn.addr !5713
  store i32 %256, i32* %257, align 4, !insn.addr !5713
  %258 = add i32 %20, %fh, !insn.addr !5713
  %259 = load i32, i32* %25, align 4, !insn.addr !5714
  %260 = inttoptr i32 %258 to i32*, !insn.addr !5714
  store i32 %259, i32* %260, align 4, !insn.addr !5714
  %261 = add i32 %258, %20, !insn.addr !5714
  %262 = load i32, i32* %27, align 8, !insn.addr !5715
  %263 = inttoptr i32 %261 to i32*, !insn.addr !5715
  store i32 %262, i32* %263, align 4, !insn.addr !5715
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !5716
  ret %"`anonymous-namespace'::write_result.741" { i32 ptrtoint (i32* @80 to i32) }, !insn.addr !5717
}

define %"`anonymous-namespace'::write_result.742" @write_double_translated_unicode_nolock(i8* %buffer, i32 %buffer_size) local_unnamed_addr {
dec_label_pc_4585ff:
  %edi.0.reg2mem = alloca i32, !insn.addr !5718
  %0 = call i1 @__decompiler_undefined_function_7()
  %1 = ptrtoint i8* %buffer to i32
  %2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %3 = bitcast i8* %buffer to i32*, !insn.addr !5719
  store i32 0, i32* %3, align 4, !insn.addr !5719
  %4 = select i1 %0, i32 -4, i32 4, !insn.addr !5719
  %5 = add i32 %4, %1, !insn.addr !5719
  %6 = inttoptr i32 %5 to i32*, !insn.addr !5720
  store i32 0, i32* %6, align 4, !insn.addr !5720
  %7 = add i32 %5, %4, !insn.addr !5720
  %8 = inttoptr i32 %7 to i32*, !insn.addr !5721
  store i32 0, i32* %8, align 4, !insn.addr !5721
  %9 = add i32 %2, %buffer_size, !insn.addr !5722
  %10 = icmp ugt i32 %9, %buffer_size, !insn.addr !5723
  %11 = icmp eq i1 %10, false, !insn.addr !5724
  br i1 %11, label %dec_label_pc_458660, label %dec_label_pc_458621.preheader, !insn.addr !5724

dec_label_pc_458621.preheader:                    ; preds = %dec_label_pc_4585ff
  %12 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !5725
  %13 = add i32 %12, -4, !insn.addr !5726
  %14 = inttoptr i32 %13 to i32*, !insn.addr !5726
  %15 = add i32 %1, 4
  %16 = inttoptr i32 %15 to i32*
  %17 = add i32 %1, 8
  %18 = inttoptr i32 %17 to i32*
  store i32 %buffer_size, i32* %edi.0.reg2mem
  br label %dec_label_pc_458621

dec_label_pc_458621:                              ; preds = %dec_label_pc_458621.preheader, %dec_label_pc_45864e
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %19 = inttoptr i32 %edi.0.reload to i16*, !insn.addr !5727
  %20 = load i16, i16* %19, align 2, !insn.addr !5727
  %21 = zext i16 %20 to i32, !insn.addr !5727
  store i32 %21, i32* %14, align 4, !insn.addr !5726
  %22 = call i16 @_putwch_nolock(i16 ptrtoint (i32* @80 to i16)), !insn.addr !5728
  %23 = icmp eq i16 %22, %20, !insn.addr !5729
  %24 = icmp eq i1 %23, false, !insn.addr !5730
  br i1 %24, label %dec_label_pc_458658, label %dec_label_pc_458630, !insn.addr !5730

dec_label_pc_458630:                              ; preds = %dec_label_pc_458621
  %25 = load i32, i32* %16, align 4, !insn.addr !5731
  %26 = add i32 %25, 2, !insn.addr !5731
  store i32 %26, i32* %16, align 4, !insn.addr !5731
  %27 = icmp eq i16 %20, 10, !insn.addr !5732
  %28 = icmp eq i1 %27, false, !insn.addr !5733
  br i1 %28, label %dec_label_pc_45864e, label %dec_label_pc_458639, !insn.addr !5733

dec_label_pc_458639:                              ; preds = %dec_label_pc_458630
  store i32 13, i32* %14, align 4, !insn.addr !5734
  %29 = call i16 @_putwch_nolock(i16 ptrtoint (i32* @80 to i16)), !insn.addr !5735
  %30 = icmp eq i16 %29, 13, !insn.addr !5736
  %31 = icmp eq i1 %30, false, !insn.addr !5737
  br i1 %31, label %dec_label_pc_458658, label %dec_label_pc_458648, !insn.addr !5737

dec_label_pc_458648:                              ; preds = %dec_label_pc_458639
  %32 = load i32, i32* %16, align 4, !insn.addr !5738
  %33 = add i32 %32, 1, !insn.addr !5738
  store i32 %33, i32* %16, align 4, !insn.addr !5738
  %34 = load i32, i32* %18, align 4, !insn.addr !5739
  %35 = add i32 %34, 1, !insn.addr !5739
  store i32 %35, i32* %18, align 4, !insn.addr !5739
  br label %dec_label_pc_45864e, !insn.addr !5739

dec_label_pc_45864e:                              ; preds = %dec_label_pc_458648, %dec_label_pc_458630
  %36 = add i32 %edi.0.reload, 2, !insn.addr !5740
  %37 = icmp ult i32 %36, %9, !insn.addr !5741
  store i32 %36, i32* %edi.0.reg2mem, !insn.addr !5742
  br i1 %37, label %dec_label_pc_458621, label %dec_label_pc_458660, !insn.addr !5742

dec_label_pc_458658:                              ; preds = %dec_label_pc_458639, %dec_label_pc_458621
  %38 = call i32 @GetLastError(), !insn.addr !5743
  store i32 %38, i32* %3, align 4, !insn.addr !5744
  br label %dec_label_pc_458660, !insn.addr !5744

dec_label_pc_458660:                              ; preds = %dec_label_pc_45864e, %dec_label_pc_458658, %dec_label_pc_4585ff
  %39 = insertvalue %"`anonymous-namespace'::write_result.742" undef, i32 %1, 0, !insn.addr !5745
  ret %"`anonymous-namespace'::write_result.742" %39, !insn.addr !5745
}

define i1 @write_requires_double_translation_nolock(i32 %fh) local_unnamed_addr {
dec_label_pc_458681:
  %storemerge.reg2mem = alloca i1, !insn.addr !5746
  %stack_var_-8 = alloca i32, align 4
  %0 = call i32 @_isatty(i32 %fh), !insn.addr !5747
  %1 = icmp eq i32 %0, 0, !insn.addr !5748
  br i1 %1, label %dec_label_pc_4586ec, label %dec_label_pc_458697, !insn.addr !5749

dec_label_pc_458697:                              ; preds = %dec_label_pc_458681
  %2 = and i32 %fh, 63, !insn.addr !5750
  %3 = sdiv i32 %fh, 64, !insn.addr !5751
  %narrow = mul nuw nsw i32 %2, 56
  %4 = mul i32 %3, 4, !insn.addr !5752
  %5 = add i32 %4, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5752
  %6 = inttoptr i32 %5 to i32*, !insn.addr !5752
  %7 = load i32, i32* %6, align 4, !insn.addr !5752
  %8 = add nuw nsw i32 %narrow, 40, !insn.addr !5753
  %9 = add i32 %8, %7, !insn.addr !5753
  %10 = inttoptr i32 %9 to i8*, !insn.addr !5753
  %11 = load i8, i8* %10, align 1, !insn.addr !5753
  %12 = icmp slt i8 %11, 0, !insn.addr !5753
  %13 = icmp eq i1 %12, false, !insn.addr !5754
  br i1 %13, label %dec_label_pc_4586ec, label %dec_label_pc_4586b0, !insn.addr !5754

dec_label_pc_4586b0:                              ; preds = %dec_label_pc_458697
  %14 = call i32 @___acrt_getptd(), !insn.addr !5755
  %15 = add i32 %14, 76, !insn.addr !5756
  %16 = inttoptr i32 %15 to i32*, !insn.addr !5756
  %17 = load i32, i32* %16, align 4, !insn.addr !5756
  %18 = add i32 %17, 168, !insn.addr !5757
  %19 = inttoptr i32 %18 to i32*, !insn.addr !5757
  %20 = load i32, i32* %19, align 4, !insn.addr !5757
  %21 = icmp eq i32 %20, 0, !insn.addr !5757
  %22 = icmp eq i1 %21, false, !insn.addr !5758
  %.pre = load i32, i32* %6, align 4
  %.pre1 = add i32 %.pre, %narrow
  br i1 %22, label %dec_label_pc_4586cf, label %dec_label_pc_4586c1, !insn.addr !5758

dec_label_pc_4586c1:                              ; preds = %dec_label_pc_4586b0
  %23 = add i32 %.pre1, 41, !insn.addr !5759
  %24 = inttoptr i32 %23 to i8*, !insn.addr !5759
  %25 = load i8, i8* %24, align 1, !insn.addr !5759
  %26 = icmp eq i8 %25, 0, !insn.addr !5759
  br i1 %26, label %dec_label_pc_4586ec, label %dec_label_pc_4586cf, !insn.addr !5760

dec_label_pc_4586cf:                              ; preds = %dec_label_pc_4586b0, %dec_label_pc_4586c1
  %27 = add i32 %.pre1, 24, !insn.addr !5761
  %28 = inttoptr i32 %27 to i32*, !insn.addr !5761
  %29 = load i32, i32* %28, align 4, !insn.addr !5761
  %30 = inttoptr i32 %29 to i32*, !insn.addr !5762
  %31 = call i1 @GetConsoleMode(i32* %30, i32* nonnull %stack_var_-8), !insn.addr !5762
  %32 = icmp eq i1 %31, false, !insn.addr !5763
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !5764
  br i1 %32, label %dec_label_pc_4586ec, label %dec_label_pc_4586ee, !insn.addr !5764

dec_label_pc_4586ec:                              ; preds = %dec_label_pc_4586cf, %dec_label_pc_4586c1, %dec_label_pc_458697, %dec_label_pc_458681
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !5765
  br label %dec_label_pc_4586ee, !insn.addr !5765

dec_label_pc_4586ee:                              ; preds = %dec_label_pc_4586cf, %dec_label_pc_4586ec
  %storemerge.reload = load i1, i1* %storemerge.reg2mem
  ret i1 %storemerge.reload, !insn.addr !5766
}

define %"`anonymous-namespace'::write_result.743" @write_text_ansi_nolock(i32 %fh, i8* %buffer, i32 %buffer_size) local_unnamed_addr {
dec_label_pc_45870e:
  %esi.2.reg2mem = alloca i32, !insn.addr !5767
  %ecx.2.reg2mem = alloca i32, !insn.addr !5767
  %esi.1.reg2mem = alloca i32, !insn.addr !5767
  %esi.0.reg2mem = alloca i32, !insn.addr !5767
  %ecx.1.reg2mem = alloca i32, !insn.addr !5767
  %esp.0.reg2mem = alloca i32, !insn.addr !5767
  %ecx.0.reg2mem = alloca i32, !insn.addr !5767
  %0 = call i1 @__decompiler_undefined_function_7()
  %1 = ptrtoint i8* %buffer to i32
  %stack_var_-9 = alloca i32, align 4
  %lfbuf_-5128 = alloca [5120 x i8], align 1
  %written_-5132 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %2 = call i32 @__decompiler_undefined_function_0()
  call void @_chkstk(), !insn.addr !5768
  %3 = and i32 %1, 63, !insn.addr !5769
  %4 = sdiv i32 %1, 64, !insn.addr !5770
  %narrow = mul nuw nsw i32 %3, 56
  %5 = mul i32 %4, 4, !insn.addr !5771
  %6 = add i32 %5, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5771
  %7 = inttoptr i32 %6 to i32*, !insn.addr !5771
  %8 = load i32, i32* %7, align 4, !insn.addr !5771
  %9 = add nuw nsw i32 %narrow, 24, !insn.addr !5772
  %10 = add i32 %9, %8, !insn.addr !5772
  %11 = inttoptr i32 %10 to i32*, !insn.addr !5772
  %12 = load i32, i32* %11, align 4, !insn.addr !5772
  %13 = add i32 %2, %buffer_size, !insn.addr !5773
  store i32 %12, i32* %written_-5132, align 4, !insn.addr !5774
  %14 = inttoptr i32 %fh to i32*, !insn.addr !5775
  store i32 0, i32* %14, align 4, !insn.addr !5775
  %15 = select i1 %0, i32 -4, i32 4, !insn.addr !5775
  %16 = add i32 %15, %fh, !insn.addr !5775
  %17 = inttoptr i32 %16 to i32*, !insn.addr !5776
  store i32 0, i32* %17, align 4, !insn.addr !5776
  %18 = add i32 %16, %15, !insn.addr !5776
  %19 = inttoptr i32 %18 to i32*, !insn.addr !5777
  store i32 0, i32* %19, align 4, !insn.addr !5777
  %20 = icmp ugt i32 %13, %buffer_size, !insn.addr !5778
  %21 = icmp eq i1 %20, false, !insn.addr !5779
  br i1 %21, label %dec_label_pc_4587d8, label %dec_label_pc_458765, !insn.addr !5779

dec_label_pc_458765:                              ; preds = %dec_label_pc_45870e
  %22 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !5780
  %23 = load i32, i32* %written_-5132, align 4, !insn.addr !5781
  %24 = ptrtoint [5120 x i8]* %lfbuf_-5128 to i32, !insn.addr !5782
  %25 = add i32 %fh, 8
  %26 = inttoptr i32 %25 to i32*
  %27 = ptrtoint i32* %stack_var_-9 to i32
  %28 = ptrtoint i32* %written_-5132 to i32, !insn.addr !5783
  %29 = add i32 %fh, 4
  %30 = inttoptr i32 %29 to i32*
  store i32 %buffer_size, i32* %ecx.0.reg2mem, !insn.addr !5781
  store i32 %22, i32* %esp.0.reg2mem, !insn.addr !5781
  br label %dec_label_pc_45876b, !insn.addr !5781

dec_label_pc_45876b:                              ; preds = %dec_label_pc_4587b4, %dec_label_pc_458765
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !5782
  store i32 %24, i32* %esi.0.reg2mem, !insn.addr !5782
  br label %dec_label_pc_458771, !insn.addr !5782

dec_label_pc_458771:                              ; preds = %dec_label_pc_458783, %dec_label_pc_45876b
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %31 = icmp ult i32 %ecx.1.reload, %13, !insn.addr !5784
  %32 = icmp eq i1 %31, false, !insn.addr !5785
  store i32 %ecx.1.reload, i32* %ecx.2.reg2mem, !insn.addr !5785
  store i32 %esi.0.reload, i32* %esi.2.reg2mem, !insn.addr !5785
  br i1 %32, label %dec_label_pc_45878d, label %dec_label_pc_458775, !insn.addr !5785

dec_label_pc_458775:                              ; preds = %dec_label_pc_458771
  %33 = inttoptr i32 %ecx.1.reload to i8*, !insn.addr !5786
  %34 = load i8, i8* %33, align 1, !insn.addr !5786
  %35 = icmp eq i8 %34, 10, !insn.addr !5787
  %36 = icmp eq i1 %35, false, !insn.addr !5788
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !5788
  br i1 %36, label %dec_label_pc_458783, label %dec_label_pc_45877c, !insn.addr !5788

dec_label_pc_45877c:                              ; preds = %dec_label_pc_458775
  %37 = load i32, i32* %26, align 4, !insn.addr !5789
  %38 = add i32 %37, 1, !insn.addr !5789
  store i32 %38, i32* %26, align 4, !insn.addr !5789
  %39 = inttoptr i32 %esi.0.reload to i8*, !insn.addr !5790
  store i8 13, i8* %39, align 1, !insn.addr !5790
  %40 = add i32 %esi.0.reload, 1, !insn.addr !5791
  store i32 %40, i32* %esi.1.reg2mem, !insn.addr !5791
  br label %dec_label_pc_458783, !insn.addr !5791

dec_label_pc_458783:                              ; preds = %dec_label_pc_45877c, %dec_label_pc_458775
  %41 = add i32 %ecx.1.reload, 1, !insn.addr !5792
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %42 = inttoptr i32 %esi.1.reload to i8*, !insn.addr !5793
  store i8 %34, i8* %42, align 1, !insn.addr !5793
  %43 = add i32 %esi.1.reload, 1, !insn.addr !5794
  %44 = icmp ult i32 %43, %27, !insn.addr !5795
  store i32 %41, i32* %ecx.1.reg2mem, !insn.addr !5796
  store i32 %43, i32* %esi.0.reg2mem, !insn.addr !5796
  store i32 %41, i32* %ecx.2.reg2mem, !insn.addr !5796
  store i32 %43, i32* %esi.2.reg2mem, !insn.addr !5796
  br i1 %44, label %dec_label_pc_458771, label %dec_label_pc_45878d, !insn.addr !5796

dec_label_pc_45878d:                              ; preds = %dec_label_pc_458783, %dec_label_pc_458771
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %45 = sub i32 %esi.2.reload, %24, !insn.addr !5797
  %46 = add i32 %esp.0.reload, -4, !insn.addr !5798
  %47 = inttoptr i32 %46 to i32*, !insn.addr !5798
  store i32 0, i32* %47, align 4, !insn.addr !5798
  %48 = add i32 %esp.0.reload, -8, !insn.addr !5783
  %49 = inttoptr i32 %48 to i32*, !insn.addr !5783
  store i32 %28, i32* %49, align 4, !insn.addr !5783
  %50 = add i32 %esp.0.reload, -12, !insn.addr !5799
  %51 = inttoptr i32 %50 to i32*, !insn.addr !5799
  store i32 %45, i32* %51, align 4, !insn.addr !5799
  %52 = add i32 %esp.0.reload, -16, !insn.addr !5800
  %53 = inttoptr i32 %52 to i32*, !insn.addr !5800
  store i32 %24, i32* %53, align 4, !insn.addr !5800
  %54 = add i32 %esp.0.reload, -20, !insn.addr !5801
  %55 = inttoptr i32 %54 to i32*, !insn.addr !5801
  store i32 %23, i32* %55, align 4, !insn.addr !5801
  %56 = inttoptr i32 %ecx.2.reload to i32*, !insn.addr !5802
  %57 = call i1 @WriteFile(i32* %56, i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, %_OVERLAPPED* bitcast (i32* @80 to %_OVERLAPPED*)), !insn.addr !5802
  %58 = icmp eq i1 %57, false, !insn.addr !5803
  br i1 %58, label %dec_label_pc_4587d0, label %dec_label_pc_4587b4, !insn.addr !5804

dec_label_pc_4587b4:                              ; preds = %dec_label_pc_45878d
  %59 = load i32, i32* %written_-5132, align 4, !insn.addr !5805
  %60 = load i32, i32* %30, align 4, !insn.addr !5806
  %61 = add i32 %60, %59, !insn.addr !5806
  store i32 %61, i32* %30, align 4, !insn.addr !5806
  %62 = icmp uge i32 %59, %45, !insn.addr !5807
  %63 = icmp ult i32 %ecx.2.reload, %13, !insn.addr !5808
  %or.cond = icmp eq i1 %63, %62
  store i32 %ecx.2.reload, i32* %ecx.0.reg2mem, !insn.addr !5809
  store i32 %54, i32* %esp.0.reg2mem, !insn.addr !5809
  br i1 %or.cond, label %dec_label_pc_45876b, label %dec_label_pc_4587d8, !insn.addr !5809

dec_label_pc_4587d0:                              ; preds = %dec_label_pc_45878d
  %64 = call i32 @GetLastError(), !insn.addr !5810
  store i32 %64, i32* %14, align 4, !insn.addr !5811
  br label %dec_label_pc_4587d8, !insn.addr !5811

dec_label_pc_4587d8:                              ; preds = %dec_label_pc_4587b4, %dec_label_pc_4587d0, %dec_label_pc_45870e
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !5812
  ret %"`anonymous-namespace'::write_result.743" { i32 ptrtoint (i32* @80 to i32) }, !insn.addr !5813
}

define %"`anonymous-namespace'::write_result.744" @write_text_utf16le_nolock(i32 %fh, i8* %buffer, i32 %buffer_size) local_unnamed_addr {
dec_label_pc_45881f:
  %esp.3.reg2mem = alloca i32, !insn.addr !5814
  %ecx.2.reg2mem = alloca i32, !insn.addr !5814
  %esi.2.reg2mem = alloca i32, !insn.addr !5814
  %ecx.1.reg2mem = alloca i32, !insn.addr !5814
  %esi.1.reg2mem = alloca i32, !insn.addr !5814
  %esi.0.reg2mem = alloca i32, !insn.addr !5814
  %ecx.0.reg2mem = alloca i32, !insn.addr !5814
  %0 = call i1 @__decompiler_undefined_function_7()
  %1 = ptrtoint i8* %buffer to i32
  %written_-5136 = alloca i32, align 4
  %stack_var_-10 = alloca i32, align 4
  %lfbuf_-5128 = alloca [2560 x i16], align 2
  %stack_var_-16 = alloca i32, align 4
  %2 = call i32 @__decompiler_undefined_function_0()
  call void @_chkstk(), !insn.addr !5815
  %3 = and i32 %1, 63, !insn.addr !5816
  %4 = sdiv i32 %1, 64, !insn.addr !5817
  %narrow = mul nuw nsw i32 %3, 56
  %5 = mul i32 %4, 4, !insn.addr !5818
  %6 = add i32 %5, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5818
  %7 = inttoptr i32 %6 to i32*, !insn.addr !5818
  %8 = load i32, i32* %7, align 4, !insn.addr !5818
  %9 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !5819
  %10 = add nuw nsw i32 %narrow, 24, !insn.addr !5820
  %11 = add i32 %10, %8, !insn.addr !5820
  %12 = inttoptr i32 %11 to i32*, !insn.addr !5820
  %13 = load i32, i32* %12, align 4, !insn.addr !5820
  %14 = add i32 %2, %buffer_size, !insn.addr !5821
  %15 = inttoptr i32 %fh to i32*, !insn.addr !5822
  store i32 0, i32* %15, align 4, !insn.addr !5822
  %16 = select i1 %0, i32 -4, i32 4, !insn.addr !5822
  %17 = add i32 %16, %fh, !insn.addr !5822
  %18 = inttoptr i32 %17 to i32*, !insn.addr !5823
  store i32 0, i32* %18, align 4, !insn.addr !5823
  %19 = add i32 %17, %16, !insn.addr !5823
  %20 = inttoptr i32 %19 to i32*, !insn.addr !5824
  store i32 0, i32* %20, align 4, !insn.addr !5824
  %21 = ptrtoint [2560 x i16]* %lfbuf_-5128 to i32
  %22 = add i32 %fh, 8
  %23 = inttoptr i32 %22 to i32*
  %24 = ptrtoint i32* %stack_var_-10 to i32
  %25 = ptrtoint i32* %written_-5136 to i32
  %26 = add i32 %fh, 4
  %27 = inttoptr i32 %26 to i32*
  store i32 %buffer_size, i32* %ecx.2.reg2mem, !insn.addr !5825
  store i32 %9, i32* %esp.3.reg2mem, !insn.addr !5825
  br label %dec_label_pc_4588e9, !insn.addr !5825

dec_label_pc_458874:                              ; preds = %dec_label_pc_4588e9
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %28 = add i32 %esp.3.reload, -4
  %29 = inttoptr i32 %28 to i32*
  store i32 %ecx.2.reload, i32* %ecx.0.reg2mem, !insn.addr !5826
  store i32 %21, i32* %esi.0.reg2mem, !insn.addr !5826
  br label %dec_label_pc_45887a, !insn.addr !5826

dec_label_pc_45887a:                              ; preds = %dec_label_pc_458896, %dec_label_pc_458874
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %30 = icmp ult i32 %ecx.0.reload, %14, !insn.addr !5827
  %31 = icmp eq i1 %30, false, !insn.addr !5828
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !5828
  store i32 %esi.0.reload, i32* %esi.2.reg2mem, !insn.addr !5828
  br i1 %31, label %dec_label_pc_4588a3, label %dec_label_pc_45887e, !insn.addr !5828

dec_label_pc_45887e:                              ; preds = %dec_label_pc_45887a
  %32 = inttoptr i32 %ecx.0.reload to i16*, !insn.addr !5829
  %33 = load i16, i16* %32, align 2, !insn.addr !5829
  %34 = icmp eq i16 %33, 10, !insn.addr !5830
  %35 = icmp eq i1 %34, false, !insn.addr !5831
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !5831
  br i1 %35, label %dec_label_pc_458896, label %dec_label_pc_458889, !insn.addr !5831

dec_label_pc_458889:                              ; preds = %dec_label_pc_45887e
  %36 = load i32, i32* %23, align 4, !insn.addr !5832
  %37 = add i32 %36, 2, !insn.addr !5832
  store i32 %37, i32* %23, align 4, !insn.addr !5832
  store i32 13, i32* %29, align 4, !insn.addr !5833
  %38 = inttoptr i32 %esi.0.reload to i16*, !insn.addr !5834
  store i16 13, i16* %38, align 2, !insn.addr !5834
  %39 = add i32 %esi.0.reload, 2, !insn.addr !5835
  store i32 %39, i32* %esi.1.reg2mem, !insn.addr !5835
  br label %dec_label_pc_458896, !insn.addr !5835

dec_label_pc_458896:                              ; preds = %dec_label_pc_458889, %dec_label_pc_45887e
  %40 = add i32 %ecx.0.reload, 2, !insn.addr !5836
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %41 = inttoptr i32 %esi.1.reload to i16*, !insn.addr !5837
  store i16 %33, i16* %41, align 2, !insn.addr !5837
  %42 = add i32 %esi.1.reload, 2, !insn.addr !5838
  %43 = icmp ult i32 %42, %24, !insn.addr !5839
  store i32 %40, i32* %ecx.0.reg2mem, !insn.addr !5840
  store i32 %42, i32* %esi.0.reg2mem, !insn.addr !5840
  store i32 %40, i32* %ecx.1.reg2mem, !insn.addr !5840
  store i32 %42, i32* %esi.2.reg2mem, !insn.addr !5840
  br i1 %43, label %dec_label_pc_45887a, label %dec_label_pc_4588a3, !insn.addr !5840

dec_label_pc_4588a3:                              ; preds = %dec_label_pc_458896, %dec_label_pc_45887a
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %44 = sub i32 %esi.2.reload, %21, !insn.addr !5841
  store i32 0, i32* %29, align 4, !insn.addr !5842
  %45 = and i32 %44, -2, !insn.addr !5843
  %46 = add i32 %esp.3.reload, -8, !insn.addr !5844
  %47 = inttoptr i32 %46 to i32*, !insn.addr !5844
  store i32 %25, i32* %47, align 4, !insn.addr !5844
  %48 = add i32 %esp.3.reload, -12, !insn.addr !5845
  %49 = inttoptr i32 %48 to i32*, !insn.addr !5845
  store i32 %45, i32* %49, align 4, !insn.addr !5845
  %50 = add i32 %esp.3.reload, -16, !insn.addr !5846
  %51 = inttoptr i32 %50 to i32*, !insn.addr !5846
  store i32 %21, i32* %51, align 4, !insn.addr !5846
  %52 = add i32 %esp.3.reload, -20, !insn.addr !5847
  %53 = inttoptr i32 %52 to i32*, !insn.addr !5847
  store i32 %13, i32* %53, align 4, !insn.addr !5847
  %54 = inttoptr i32 %ecx.1.reload to i32*, !insn.addr !5848
  %55 = call i1 @WriteFile(i32* %54, i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, %_OVERLAPPED* bitcast (i32* @80 to %_OVERLAPPED*)), !insn.addr !5848
  %56 = icmp eq i1 %55, false, !insn.addr !5849
  br i1 %56, label %dec_label_pc_4588ef, label %dec_label_pc_4588d3, !insn.addr !5850

dec_label_pc_4588d3:                              ; preds = %dec_label_pc_4588a3
  %57 = load i32, i32* %written_-5136, align 4, !insn.addr !5851
  %58 = load i32, i32* %27, align 4, !insn.addr !5852
  %59 = add i32 %58, %57, !insn.addr !5852
  store i32 %59, i32* %27, align 4, !insn.addr !5852
  %60 = icmp ult i32 %57, %45, !insn.addr !5853
  store i32 %ecx.1.reload, i32* %ecx.2.reg2mem, !insn.addr !5854
  store i32 %52, i32* %esp.3.reg2mem, !insn.addr !5854
  br i1 %60, label %dec_label_pc_4588f7, label %dec_label_pc_4588e9, !insn.addr !5854

dec_label_pc_4588e9:                              ; preds = %dec_label_pc_4588d3, %dec_label_pc_45881f
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %61 = icmp ult i32 %ecx.2.reload, %14, !insn.addr !5855
  br i1 %61, label %dec_label_pc_458874, label %dec_label_pc_4588f7, !insn.addr !5856

dec_label_pc_4588ef:                              ; preds = %dec_label_pc_4588a3
  %62 = call i32 @GetLastError(), !insn.addr !5857
  store i32 %62, i32* %15, align 4, !insn.addr !5858
  br label %dec_label_pc_4588f7, !insn.addr !5858

dec_label_pc_4588f7:                              ; preds = %dec_label_pc_4588e9, %dec_label_pc_4588d3, %dec_label_pc_4588ef
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !5859
  ret %"`anonymous-namespace'::write_result.744" { i32 ptrtoint (i32* @80 to i32) }, !insn.addr !5860
}

define %"`anonymous-namespace'::write_result.745" @write_text_utf8_nolock(i32 %fh, i8* %buffer, i32 %buffer_size) local_unnamed_addr {
dec_label_pc_458942:
  %esp.4.reg2mem = alloca i32, !insn.addr !5861
  %ebx.0.reg2mem = alloca i32, !insn.addr !5861
  %edi.2.reg2mem = alloca i32, !insn.addr !5861
  %eax.2.reg2mem = alloca i32, !insn.addr !5861
  %eax.1.reg2mem = alloca i32, !insn.addr !5861
  %edi.1.reg2mem = alloca i32, !insn.addr !5861
  %eax.0.reg2mem = alloca i32, !insn.addr !5861
  %edi.0.reg2mem = alloca i32, !insn.addr !5861
  %esp.0.reg2mem = alloca i32, !insn.addr !5861
  %0 = call i1 @__decompiler_undefined_function_7()
  %1 = ptrtoint i8* %buffer to i32
  %written_-5144 = alloca i32, align 4
  %utf8_buf_-5132 = alloca [3413 x i8], align 1
  %utf16_buf_-1716 = alloca [853 x i16], align 2
  %2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  call void @_chkstk(), !insn.addr !5862
  %3 = and i32 %1, 63, !insn.addr !5863
  %4 = sdiv i32 %1, 64, !insn.addr !5864
  %narrow = mul nuw nsw i32 %3, 56
  %5 = mul i32 %4, 4, !insn.addr !5865
  %6 = add i32 %5, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5865
  %7 = inttoptr i32 %6 to i32*, !insn.addr !5865
  %8 = load i32, i32* %7, align 4, !insn.addr !5865
  %9 = add nuw nsw i32 %narrow, 24, !insn.addr !5866
  %10 = add i32 %9, %8, !insn.addr !5866
  %11 = inttoptr i32 %10 to i32*, !insn.addr !5866
  %12 = load i32, i32* %11, align 4, !insn.addr !5866
  %13 = add i32 %2, %buffer_size, !insn.addr !5867
  %14 = inttoptr i32 %fh to i32*, !insn.addr !5868
  store i32 0, i32* %14, align 4, !insn.addr !5868
  %15 = select i1 %0, i32 -4, i32 4, !insn.addr !5868
  %16 = add i32 %15, %fh, !insn.addr !5868
  %17 = inttoptr i32 %16 to i32*, !insn.addr !5869
  store i32 0, i32* %17, align 4, !insn.addr !5869
  %18 = add i32 %16, %15, !insn.addr !5869
  %19 = inttoptr i32 %18 to i32*, !insn.addr !5870
  store i32 0, i32* %19, align 4, !insn.addr !5870
  %20 = icmp ugt i32 %13, %buffer_size, !insn.addr !5871
  %21 = icmp eq i1 %20, false, !insn.addr !5872
  br i1 %21, label %dec_label_pc_458a63, label %dec_label_pc_45899f.preheader, !insn.addr !5872

dec_label_pc_45899f.preheader:                    ; preds = %dec_label_pc_458942
  %22 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !5873
  %23 = ptrtoint [853 x i16]* %utf16_buf_-1716 to i32, !insn.addr !5874
  %24 = ptrtoint i32* %stack_var_-12 to i32
  %25 = ptrtoint [3413 x i8]* %utf8_buf_-5132 to i32, !insn.addr !5875
  %26 = ptrtoint i32* %written_-5144 to i32
  %27 = add i32 %fh, 4
  %28 = inttoptr i32 %27 to i32*
  store i32 %22, i32* %esp.0.reg2mem
  store i32 %buffer_size, i32* %edi.0.reg2mem
  br label %dec_label_pc_45899f

dec_label_pc_45899f:                              ; preds = %dec_label_pc_45899f.preheader, %dec_label_pc_458a45
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %29 = add i32 %esp.0.reload, -4
  %30 = inttoptr i32 %29 to i32*
  store i32 %23, i32* %eax.0.reg2mem, !insn.addr !5874
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !5874
  br label %dec_label_pc_4589ab, !insn.addr !5874

dec_label_pc_4589ab:                              ; preds = %dec_label_pc_4589c3, %dec_label_pc_45899f
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %31 = icmp ult i32 %edi.1.reload, %13, !insn.addr !5876
  %32 = icmp eq i1 %31, false, !insn.addr !5877
  store i32 %eax.0.reload, i32* %eax.2.reg2mem, !insn.addr !5877
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !5877
  br i1 %32, label %dec_label_pc_4589d0, label %dec_label_pc_4589af, !insn.addr !5877

dec_label_pc_4589af:                              ; preds = %dec_label_pc_4589ab
  %33 = inttoptr i32 %edi.1.reload to i16*, !insn.addr !5878
  %34 = load i16, i16* %33, align 2, !insn.addr !5878
  %35 = icmp eq i16 %34, 10, !insn.addr !5879
  %36 = icmp eq i1 %35, false, !insn.addr !5880
  store i32 %eax.0.reload, i32* %eax.1.reg2mem, !insn.addr !5880
  br i1 %36, label %dec_label_pc_4589c3, label %dec_label_pc_4589ba, !insn.addr !5880

dec_label_pc_4589ba:                              ; preds = %dec_label_pc_4589af
  store i32 13, i32* %30, align 4, !insn.addr !5881
  %37 = inttoptr i32 %eax.0.reload to i16*, !insn.addr !5882
  store i16 13, i16* %37, align 2, !insn.addr !5882
  %38 = add i32 %eax.0.reload, 2, !insn.addr !5883
  store i32 %38, i32* %eax.1.reg2mem, !insn.addr !5883
  br label %dec_label_pc_4589c3, !insn.addr !5883

dec_label_pc_4589c3:                              ; preds = %dec_label_pc_4589ba, %dec_label_pc_4589af
  %39 = add i32 %edi.1.reload, 2, !insn.addr !5884
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %40 = inttoptr i32 %eax.1.reload to i16*, !insn.addr !5885
  store i16 %34, i16* %40, align 2, !insn.addr !5885
  %41 = add i32 %eax.1.reload, 2, !insn.addr !5886
  %42 = icmp ult i32 %41, %24, !insn.addr !5887
  store i32 %41, i32* %eax.0.reg2mem, !insn.addr !5888
  store i32 %39, i32* %edi.1.reg2mem, !insn.addr !5888
  store i32 %41, i32* %eax.2.reg2mem, !insn.addr !5888
  store i32 %39, i32* %edi.2.reg2mem, !insn.addr !5888
  br i1 %42, label %dec_label_pc_4589ab, label %dec_label_pc_4589d0, !insn.addr !5888

dec_label_pc_4589d0:                              ; preds = %dec_label_pc_4589c3, %dec_label_pc_4589ab
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  store i32 0, i32* %30, align 4, !insn.addr !5889
  %43 = add i32 %esp.0.reload, -8, !insn.addr !5890
  %44 = inttoptr i32 %43 to i32*, !insn.addr !5890
  store i32 0, i32* %44, align 4, !insn.addr !5890
  %45 = add i32 %esp.0.reload, -12, !insn.addr !5891
  %46 = inttoptr i32 %45 to i32*, !insn.addr !5891
  store i32 3413, i32* %46, align 4, !insn.addr !5891
  %47 = add i32 %esp.0.reload, -16, !insn.addr !5875
  %48 = inttoptr i32 %47 to i32*, !insn.addr !5875
  store i32 %25, i32* %48, align 4, !insn.addr !5875
  %49 = sub i32 %eax.2.reload, %23, !insn.addr !5892
  %50 = sdiv i32 %49, 2, !insn.addr !5893
  %51 = add i32 %esp.0.reload, -20, !insn.addr !5894
  %52 = inttoptr i32 %51 to i32*, !insn.addr !5894
  store i32 %50, i32* %52, align 4, !insn.addr !5894
  %53 = add i32 %esp.0.reload, -24, !insn.addr !5895
  %54 = inttoptr i32 %53 to i32*, !insn.addr !5895
  store i32 %23, i32* %54, align 4, !insn.addr !5895
  %55 = add i32 %esp.0.reload, -28, !insn.addr !5896
  %56 = inttoptr i32 %55 to i32*, !insn.addr !5896
  store i32 0, i32* %56, align 4, !insn.addr !5896
  %57 = add i32 %esp.0.reload, -32, !insn.addr !5897
  %58 = inttoptr i32 %57 to i32*, !insn.addr !5897
  store i32 65001, i32* %58, align 4, !insn.addr !5897
  %59 = call i32 @function_40461f(), !insn.addr !5898
  %60 = icmp eq i32 %59, 0, !insn.addr !5899
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !5900
  store i32 %esp.0.reload, i32* %esp.4.reg2mem, !insn.addr !5900
  br i1 %60, label %dec_label_pc_458a5b, label %dec_label_pc_458a10, !insn.addr !5900

dec_label_pc_458a10:                              ; preds = %dec_label_pc_4589d0, %dec_label_pc_458a35
  %esp.4.reload = load i32, i32* %esp.4.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %61 = add i32 %esp.4.reload, -4, !insn.addr !5901
  %62 = inttoptr i32 %61 to i32*, !insn.addr !5901
  store i32 0, i32* %62, align 4, !insn.addr !5901
  %63 = sub i32 %59, %ebx.0.reload, !insn.addr !5902
  %64 = add i32 %esp.4.reload, -8, !insn.addr !5903
  %65 = inttoptr i32 %64 to i32*, !insn.addr !5903
  store i32 %26, i32* %65, align 4, !insn.addr !5903
  %66 = add i32 %esp.4.reload, -12, !insn.addr !5904
  %67 = inttoptr i32 %66 to i32*, !insn.addr !5904
  store i32 %63, i32* %67, align 4, !insn.addr !5904
  %68 = add i32 %ebx.0.reload, %25, !insn.addr !5905
  %69 = add i32 %esp.4.reload, -16, !insn.addr !5906
  %70 = inttoptr i32 %69 to i32*, !insn.addr !5906
  store i32 %68, i32* %70, align 4, !insn.addr !5906
  %71 = add i32 %esp.4.reload, -20, !insn.addr !5907
  %72 = inttoptr i32 %71 to i32*, !insn.addr !5907
  store i32 %12, i32* %72, align 4, !insn.addr !5907
  %73 = call i1 @WriteFile(i32* nonnull @80, i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, %_OVERLAPPED* bitcast (i32* @80 to %_OVERLAPPED*)), !insn.addr !5908
  %74 = icmp eq i1 %73, false, !insn.addr !5909
  br i1 %74, label %dec_label_pc_458a5b, label %dec_label_pc_458a35, !insn.addr !5910

dec_label_pc_458a35:                              ; preds = %dec_label_pc_458a10
  %75 = load i32, i32* %written_-5144, align 4, !insn.addr !5911
  %76 = add i32 %75, %ebx.0.reload, !insn.addr !5911
  %77 = icmp ult i32 %76, %59, !insn.addr !5912
  store i32 %76, i32* %ebx.0.reg2mem, !insn.addr !5913
  store i32 %71, i32* %esp.4.reg2mem, !insn.addr !5913
  br i1 %77, label %dec_label_pc_458a10, label %dec_label_pc_458a45, !insn.addr !5913

dec_label_pc_458a45:                              ; preds = %dec_label_pc_458a35
  %78 = sub i32 %edi.2.reload, %buffer_size, !insn.addr !5914
  store i32 %78, i32* %28, align 4, !insn.addr !5915
  %79 = icmp ult i32 %edi.2.reload, %13, !insn.addr !5916
  store i32 %71, i32* %esp.0.reg2mem, !insn.addr !5917
  store i32 %edi.2.reload, i32* %edi.0.reg2mem, !insn.addr !5917
  br i1 %79, label %dec_label_pc_45899f, label %dec_label_pc_458a63, !insn.addr !5917

dec_label_pc_458a5b:                              ; preds = %dec_label_pc_4589d0, %dec_label_pc_458a10
  %80 = call i32 @GetLastError(), !insn.addr !5918
  store i32 %80, i32* %14, align 4, !insn.addr !5919
  br label %dec_label_pc_458a63, !insn.addr !5919

dec_label_pc_458a63:                              ; preds = %dec_label_pc_458a45, %dec_label_pc_458a5b, %dec_label_pc_458942
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !5920
  ret %"`anonymous-namespace'::write_result.745" { i32 ptrtoint (i32* @80 to i32) }, !insn.addr !5921
}

define i32 @_write(i32 %fh, i8* %buffer, i32 %size) local_unnamed_addr {
dec_label_pc_458ad5:
  %storemerge.reg2mem = alloca i32, !insn.addr !5922
  %edi.0.reg2mem = alloca i32, !insn.addr !5922
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b54(i32* nonnull @global_var_47b8d8, i32 16), !insn.addr !5923
  %2 = add i32 %0, 8, !insn.addr !5924
  %3 = inttoptr i32 %2 to i32*, !insn.addr !5924
  %4 = load i32, i32* %3, align 4, !insn.addr !5924
  %5 = icmp eq i32 %4, -2, !insn.addr !5925
  %6 = icmp eq i1 %5, false, !insn.addr !5926
  br i1 %6, label %dec_label_pc_458b01, label %dec_label_pc_458ae9, !insn.addr !5926

dec_label_pc_458ae9:                              ; preds = %dec_label_pc_458ad5
  %7 = call i32* @__doserrno(), !insn.addr !5927
  store i32 0, i32* %7, align 4, !insn.addr !5928
  %8 = call i32* @_errno(), !insn.addr !5929
  store i32 9, i32* %8, align 4, !insn.addr !5930
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !5931
  br label %dec_label_pc_458bb7, !insn.addr !5931

dec_label_pc_458b01:                              ; preds = %dec_label_pc_458ad5
  %9 = icmp slt i32 %4, 0, !insn.addr !5932
  br i1 %9, label %dec_label_pc_458b9c, label %dec_label_pc_458b09, !insn.addr !5933

dec_label_pc_458b09:                              ; preds = %dec_label_pc_458b01
  %10 = load i32, i32* @_nhandle, align 4, !insn.addr !5934
  %11 = icmp ult i32 %4, %10, !insn.addr !5934
  %12 = icmp eq i1 %11, false, !insn.addr !5935
  br i1 %12, label %dec_label_pc_458b9c, label %dec_label_pc_458b15, !insn.addr !5935

dec_label_pc_458b15:                              ; preds = %dec_label_pc_458b09
  %13 = udiv i32 %4, 64
  %14 = and i32 %4, 63, !insn.addr !5936
  %narrow = mul nuw nsw i32 %14, 56
  %15 = add i32 %0, -32, !insn.addr !5937
  %16 = inttoptr i32 %15 to i32*, !insn.addr !5937
  store i32 %narrow, i32* %16, align 4, !insn.addr !5937
  %17 = mul i32 %13, 4, !insn.addr !5938
  %18 = add i32 %17, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5938
  %19 = inttoptr i32 %18 to i32*, !insn.addr !5938
  %20 = load i32, i32* %19, align 4, !insn.addr !5938
  %21 = add nuw nsw i32 %narrow, 40, !insn.addr !5939
  %22 = add i32 %21, %20, !insn.addr !5939
  %23 = inttoptr i32 %22 to i8*, !insn.addr !5939
  %24 = load i8, i8* %23, align 1, !insn.addr !5939
  %25 = and i8 %24, 1, !insn.addr !5939
  %26 = icmp eq i8 %25, 0, !insn.addr !5939
  br i1 %26, label %dec_label_pc_458b9c, label %dec_label_pc_458b33, !insn.addr !5940

dec_label_pc_458b33:                              ; preds = %dec_label_pc_458b15
  %27 = call i32 @function_40132f(), !insn.addr !5941
  %28 = add i32 %0, -28, !insn.addr !5942
  %29 = inttoptr i32 %28 to i32*, !insn.addr !5942
  store i32 -1, i32* %29, align 4, !insn.addr !5942
  %30 = add i32 %0, -4, !insn.addr !5943
  %31 = inttoptr i32 %30 to i32*, !insn.addr !5943
  store i32 0, i32* %31, align 4, !insn.addr !5943
  %32 = load i32, i32* %19, align 4, !insn.addr !5944
  %33 = load i32, i32* %16, align 4, !insn.addr !5945
  %34 = add i32 %32, 40, !insn.addr !5946
  %35 = add i32 %34, %33, !insn.addr !5946
  %36 = inttoptr i32 %35 to i8*, !insn.addr !5946
  %37 = load i8, i8* %36, align 1, !insn.addr !5946
  %38 = and i8 %37, 1, !insn.addr !5946
  %39 = icmp eq i8 %38, 0, !insn.addr !5946
  %40 = icmp eq i1 %39, false, !insn.addr !5947
  br i1 %40, label %dec_label_pc_458b6a, label %dec_label_pc_458b55, !insn.addr !5947

dec_label_pc_458b55:                              ; preds = %dec_label_pc_458b33
  %41 = call i32* @_errno(), !insn.addr !5948
  store i32 9, i32* %41, align 4, !insn.addr !5949
  %42 = call i32* @__doserrno(), !insn.addr !5950
  store i32 0, i32* %42, align 4, !insn.addr !5951
  store i32 -1, i32* %edi.0.reg2mem, !insn.addr !5952
  br label %dec_label_pc_458b7e, !insn.addr !5952

dec_label_pc_458b6a:                              ; preds = %dec_label_pc_458b33
  %43 = add i32 %0, 16, !insn.addr !5953
  %44 = inttoptr i32 %43 to i32*, !insn.addr !5953
  %45 = load i32, i32* %44, align 4, !insn.addr !5953
  %46 = add i32 %0, 12, !insn.addr !5954
  %47 = inttoptr i32 %46 to i32*, !insn.addr !5954
  %48 = load i32, i32* %47, align 4, !insn.addr !5954
  %49 = inttoptr i32 %48 to i8*, !insn.addr !5954
  %50 = call i32 @_write_nolock(i32 %4, i8* %49, i32 %45), !insn.addr !5955
  store i32 %50, i32* %29, align 4, !insn.addr !5956
  store i32 %50, i32* %edi.0.reg2mem, !insn.addr !5956
  br label %dec_label_pc_458b7e, !insn.addr !5956

dec_label_pc_458b7e:                              ; preds = %dec_label_pc_458b6a, %dec_label_pc_458b55
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  store i32 -2, i32* %31, align 4, !insn.addr !5957
  %51 = call i32 @function_458b94(), !insn.addr !5958
  store i32 %edi.0.reload, i32* %storemerge.reg2mem, !insn.addr !5959
  br label %dec_label_pc_458bb7, !insn.addr !5959

dec_label_pc_458b9c:                              ; preds = %dec_label_pc_458b15, %dec_label_pc_458b09, %dec_label_pc_458b01
  %52 = call i32* @__doserrno(), !insn.addr !5960
  store i32 0, i32* %52, align 4, !insn.addr !5961
  %53 = call i32* @_errno(), !insn.addr !5962
  store i32 9, i32* %53, align 4, !insn.addr !5963
  call void @_invalid_parameter_noinfo(), !insn.addr !5964
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !5964
  br label %dec_label_pc_458bb7, !insn.addr !5964

dec_label_pc_458bb7:                              ; preds = %dec_label_pc_458ae9, %dec_label_pc_458b9c, %dec_label_pc_458b7e
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %54 = add i32 %0, -16, !insn.addr !5965
  %55 = inttoptr i32 %54 to i32*, !insn.addr !5965
  %56 = load i32, i32* %55, align 4, !insn.addr !5965
  call void @__writefsdword(i32 0, i32 %56), !insn.addr !5966
  ret i32 %storemerge.reload, !insn.addr !5967
}

define i32 @function_458b94() local_unnamed_addr {
dec_label_pc_458b94:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_4011db(i32 %0), !insn.addr !5968
  ret i32 %1, !insn.addr !5969
}

define i32 @_write_nolock(i32 %fh, i8* %buffer, i32 %buffer_size) local_unnamed_addr {
dec_label_pc_458c03:
  %eax.2.reg2mem = alloca i32, !insn.addr !5970
  %esp.3.reg2mem = alloca i32, !insn.addr !5970
  %ebx.4.ptr.reg2mem = alloca i8*, !insn.addr !5970
  %esp.2.reg2mem = alloca i32, !insn.addr !5970
  %ebx.3.reg2mem = alloca i32, !insn.addr !5970
  %storemerge3.reg2mem = alloca i32, !insn.addr !5970
  %esp.1.reg2mem = alloca i32, !insn.addr !5970
  %ebx.2.reg2mem = alloca i32, !insn.addr !5970
  %ebx.1.reg2mem = alloca i32, !insn.addr !5970
  %eax.1.reg2mem = alloca i32, !insn.addr !5970
  %0 = call i1 @__decompiler_undefined_function_7()
  %1 = call i32 @__decompiler_undefined_function_0()
  %result_-28 = alloca %"`anonymous-namespace'::write_result.489", align 8
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %result_-32 = alloca %"`anonymous-namespace'::write_result.487", align 8
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %2 = icmp eq i32 %buffer_size, 0, !insn.addr !5971
  store i32 0, i32* %eax.2.reg2mem, !insn.addr !5972
  br i1 %2, label %dec_label_pc_458de0, label %dec_label_pc_458c25, !insn.addr !5972

dec_label_pc_458c25:                              ; preds = %dec_label_pc_458c03
  %3 = icmp eq i8* %buffer, null, !insn.addr !5973
  %4 = icmp eq i1 %3, false, !insn.addr !5974
  br i1 %4, label %dec_label_pc_458c49, label %dec_label_pc_458c29, !insn.addr !5974

dec_label_pc_458c29:                              ; preds = %dec_label_pc_458c49, %dec_label_pc_458c25
  %5 = call i32* @__doserrno(), !insn.addr !5975
  store i32 0, i32* %5, align 4, !insn.addr !5976
  %6 = call i32* @_errno(), !insn.addr !5977
  store i32 22, i32* %6, align 4, !insn.addr !5978
  call void @_invalid_parameter_noinfo(), !insn.addr !5979
  store i32 -1, i32* %eax.2.reg2mem, !insn.addr !5979
  br label %dec_label_pc_458de0, !insn.addr !5979

dec_label_pc_458c49:                              ; preds = %dec_label_pc_458c25
  %7 = sdiv i32 %fh, 64, !insn.addr !5980
  %8 = and i32 %fh, 63, !insn.addr !5981
  %narrow = mul nuw nsw i32 %8, 56
  %9 = mul i32 %7, 4, !insn.addr !5982
  %10 = add i32 %9, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5982
  %11 = inttoptr i32 %10 to i32*, !insn.addr !5982
  %12 = load i32, i32* %11, align 4, !insn.addr !5982
  %13 = add nuw nsw i32 %narrow, 41, !insn.addr !5983
  %14 = add i32 %13, %12, !insn.addr !5983
  %15 = inttoptr i32 %14 to i8*, !insn.addr !5983
  %16 = load i8, i8* %15, align 1, !insn.addr !5983
  %17 = icmp ne i8 %16, 2, !insn.addr !5984
  %18 = icmp eq i8 %16, 1, !insn.addr !5985
  %19 = icmp eq i1 %18, false, !insn.addr !5986
  %or.cond = icmp eq i1 %17, %19
  %20 = and i32 %buffer_size, 1
  %21 = icmp eq i32 %20, 0, !insn.addr !5987
  %or.cond6 = or i1 %21, %or.cond
  br i1 %or.cond6, label %dec_label_pc_458c79, label %dec_label_pc_458c29, !insn.addr !5988

dec_label_pc_458c79:                              ; preds = %dec_label_pc_458c49
  %22 = add nuw nsw i32 %narrow, 40
  %23 = add i32 %12, %22, !insn.addr !5989
  %24 = inttoptr i32 %23 to i8*, !insn.addr !5989
  %25 = load i8, i8* %24, align 1, !insn.addr !5989
  %26 = and i8 %25, 32, !insn.addr !5989
  %27 = icmp eq i8 %26, 0, !insn.addr !5989
  br i1 %27, label %dec_label_pc_458c8f, label %dec_label_pc_458c80, !insn.addr !5990

dec_label_pc_458c80:                              ; preds = %dec_label_pc_458c79
  store i32 %fh, i32* %stack_var_-72, align 4, !insn.addr !5991
  %28 = call i64 @_lseeki64_nolock(i32 %fh, i64 0, i32 0), !insn.addr !5992
  br label %dec_label_pc_458c8f, !insn.addr !5993

dec_label_pc_458c8f:                              ; preds = %dec_label_pc_458c80, %dec_label_pc_458c79
  %29 = ptrtoint i32* %stack_var_-56 to i32, !insn.addr !5994
  %30 = ptrtoint %"`anonymous-namespace'::write_result.487"* %result_-32 to i32, !insn.addr !5995
  store %"`anonymous-namespace'::write_result.487" { i32 0, i32 undef, i32 undef }, %"`anonymous-namespace'::write_result.487"* %result_-32, align 8, !insn.addr !5996
  %31 = select i1 %0, i32 -4, i32 4, !insn.addr !5996
  %32 = add i32 %31, %30, !insn.addr !5996
  %33 = inttoptr i32 %32 to i32*, !insn.addr !5997
  store i32 0, i32* %33, align 4, !insn.addr !5997
  %34 = add i32 %32, %31, !insn.addr !5997
  %35 = inttoptr i32 %34 to i32*, !insn.addr !5998
  store i32 0, i32* %35, align 8, !insn.addr !5998
  %36 = call i1 @write_requires_double_translation_nolock(i32 %fh), !insn.addr !5999
  %37 = icmp eq i1 %36, false, !insn.addr !6000
  br i1 %37, label %dec_label_pc_458ce1, label %dec_label_pc_458ca2, !insn.addr !6001

dec_label_pc_458ca2:                              ; preds = %dec_label_pc_458c8f
  %38 = icmp eq i8 %16, 0, !insn.addr !6002
  br i1 %38, label %dec_label_pc_458ccb, label %dec_label_pc_458ca6, !insn.addr !6003

dec_label_pc_458ca6:                              ; preds = %dec_label_pc_458ca2
  %39 = add i8 %16, -1, !insn.addr !6004
  %40 = ptrtoint i8* %buffer to i32, !insn.addr !6005
  %41 = icmp ult i8 %39, 2
  store i32 %40, i32* %ebx.3.reg2mem, !insn.addr !6006
  store i32 %29, i32* %esp.2.reg2mem, !insn.addr !6006
  br i1 %41, label %dec_label_pc_458cb4, label %dec_label_pc_458d70, !insn.addr !6006

dec_label_pc_458cb4:                              ; preds = %dec_label_pc_458ca6
  %42 = bitcast i32* %stack_var_-44 to i8*, !insn.addr !6007
  %43 = call %"`anonymous-namespace'::write_result.742" @write_double_translated_unicode_nolock(i8* nonnull %42, i32 %40), !insn.addr !6007
  %44 = extractvalue %"`anonymous-namespace'::write_result.742" %43, 0, !insn.addr !6007
  store i32 %40, i32* %ebx.2.reg2mem, !insn.addr !6008
  store i32 %29, i32* %esp.1.reg2mem, !insn.addr !6008
  store i32 %44, i32* %storemerge3.reg2mem, !insn.addr !6008
  br label %dec_label_pc_458d6a, !insn.addr !6008

dec_label_pc_458ccb:                              ; preds = %dec_label_pc_458ca2
  %45 = ptrtoint i8* %buffer to i32, !insn.addr !6009
  %46 = ptrtoint i32* %stack_var_-44 to i32, !insn.addr !6010
  store i32 %46, i32* %stack_var_-72, align 4, !insn.addr !6010
  %47 = inttoptr i32 %fh to i8*, !insn.addr !6011
  %48 = call %"`anonymous-namespace'::write_result.741" @write_double_translated_ansi_nolock(i32 %46, i8* %47, i32 %45), !insn.addr !6011
  %49 = extractvalue %"`anonymous-namespace'::write_result.741" %48, 0, !insn.addr !6011
  store i32 %49, i32* %eax.1.reg2mem, !insn.addr !6011
  store i32 %45, i32* %ebx.1.reg2mem, !insn.addr !6011
  br label %dec_label_pc_458cdc, !insn.addr !6011

dec_label_pc_458cdc:                              ; preds = %dec_label_pc_458d2a, %dec_label_pc_458d1a, %dec_label_pc_458d0a, %dec_label_pc_458ccb
  %ebx.1.reload = load i32, i32* %ebx.1.reg2mem
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %esp.0 = ptrtoint i32* %stack_var_-72 to i32
  %50 = add i32 %esp.0, 16, !insn.addr !6012
  store i32 %ebx.1.reload, i32* %ebx.2.reg2mem, !insn.addr !6013
  store i32 %50, i32* %esp.1.reg2mem, !insn.addr !6013
  store i32 %eax.1.reload, i32* %storemerge3.reg2mem, !insn.addr !6013
  br label %dec_label_pc_458d6a, !insn.addr !6013

dec_label_pc_458ce1:                              ; preds = %dec_label_pc_458c8f
  %51 = load i32, i32* %11, align 4, !insn.addr !6014
  %52 = add i32 %51, %22, !insn.addr !6015
  %53 = inttoptr i32 %52 to i8*, !insn.addr !6015
  %54 = load i8, i8* %53, align 1, !insn.addr !6015
  %55 = icmp slt i8 %54, 0, !insn.addr !6015
  %56 = icmp eq i1 %55, false, !insn.addr !6016
  br i1 %56, label %dec_label_pc_458d3a, label %dec_label_pc_458cf5, !insn.addr !6016

dec_label_pc_458cf5:                              ; preds = %dec_label_pc_458ce1
  %57 = ptrtoint i8* %buffer to i32, !insn.addr !6017
  %58 = icmp eq i8 %16, 0, !insn.addr !6018
  br i1 %58, label %dec_label_pc_458d2a, label %dec_label_pc_458d00, !insn.addr !6019

dec_label_pc_458d00:                              ; preds = %dec_label_pc_458cf5
  %59 = sext i8 %16 to i32, !insn.addr !6020
  %60 = add nsw i32 %59, -1, !insn.addr !6021
  %61 = icmp eq i32 %60, 0, !insn.addr !6021
  br i1 %61, label %dec_label_pc_458d1a, label %dec_label_pc_458d05, !insn.addr !6022

dec_label_pc_458d05:                              ; preds = %dec_label_pc_458d00
  %62 = icmp eq i32 %60, 1, !insn.addr !6023
  %63 = icmp eq i1 %62, false, !insn.addr !6024
  store i8* %buffer, i8** %ebx.4.ptr.reg2mem, !insn.addr !6024
  store i32 %29, i32* %esp.3.reg2mem, !insn.addr !6024
  br i1 %63, label %dec_label_pc_458d76, label %dec_label_pc_458d0a, !insn.addr !6024

dec_label_pc_458d0a:                              ; preds = %dec_label_pc_458d05
  %64 = ptrtoint i32* %stack_var_-44 to i32, !insn.addr !6025
  store i32 %64, i32* %stack_var_-72, align 4, !insn.addr !6025
  %65 = inttoptr i32 %fh to i8*, !insn.addr !6026
  %66 = call %"`anonymous-namespace'::write_result.744" @write_text_utf16le_nolock(i32 %64, i8* %65, i32 %57), !insn.addr !6026
  %67 = extractvalue %"`anonymous-namespace'::write_result.744" %66, 0, !insn.addr !6026
  store i32 %67, i32* %eax.1.reg2mem, !insn.addr !6027
  store i32 %57, i32* %ebx.1.reg2mem, !insn.addr !6027
  br label %dec_label_pc_458cdc, !insn.addr !6027

dec_label_pc_458d1a:                              ; preds = %dec_label_pc_458d00
  %68 = ptrtoint i32* %stack_var_-44 to i32, !insn.addr !6028
  store i32 %68, i32* %stack_var_-72, align 4, !insn.addr !6028
  %69 = inttoptr i32 %fh to i8*, !insn.addr !6029
  %70 = call %"`anonymous-namespace'::write_result.745" @write_text_utf8_nolock(i32 %68, i8* %69, i32 %57), !insn.addr !6029
  %71 = extractvalue %"`anonymous-namespace'::write_result.745" %70, 0, !insn.addr !6029
  store i32 %71, i32* %eax.1.reg2mem, !insn.addr !6030
  store i32 %57, i32* %ebx.1.reg2mem, !insn.addr !6030
  br label %dec_label_pc_458cdc, !insn.addr !6030

dec_label_pc_458d2a:                              ; preds = %dec_label_pc_458cf5
  %72 = ptrtoint i32* %stack_var_-44 to i32, !insn.addr !6031
  store i32 %72, i32* %stack_var_-72, align 4, !insn.addr !6031
  %73 = inttoptr i32 %fh to i8*, !insn.addr !6032
  %74 = call %"`anonymous-namespace'::write_result.743" @write_text_ansi_nolock(i32 %72, i8* %73, i32 %57), !insn.addr !6032
  %75 = extractvalue %"`anonymous-namespace'::write_result.743" %74, 0, !insn.addr !6032
  store i32 %75, i32* %eax.1.reg2mem, !insn.addr !6033
  store i32 %57, i32* %ebx.1.reg2mem, !insn.addr !6033
  br label %dec_label_pc_458cdc, !insn.addr !6033

dec_label_pc_458d3a:                              ; preds = %dec_label_pc_458ce1
  %76 = add nuw nsw i32 %narrow, 24, !insn.addr !6034
  %77 = add i32 %76, %51, !insn.addr !6034
  %78 = inttoptr i32 %77 to i32*, !insn.addr !6034
  %79 = load i32, i32* %78, align 4, !insn.addr !6034
  %80 = ptrtoint i32* %stack_var_-44 to i32, !insn.addr !6035
  %81 = ptrtoint i8* %buffer to i32, !insn.addr !6036
  store i32 0, i32* %stack_var_-44, align 4, !insn.addr !6037
  %82 = add i32 %31, %80, !insn.addr !6037
  %83 = inttoptr i32 %82 to i32*, !insn.addr !6038
  store i32 0, i32* %83, align 4, !insn.addr !6038
  %84 = add i32 %82, %31, !insn.addr !6038
  %85 = inttoptr i32 %84 to i32*, !insn.addr !6039
  store i32 0, i32* %85, align 4, !insn.addr !6039
  store i32 %81, i32* %stack_var_-72, align 4, !insn.addr !6040
  store i32 %79, i32* %stack_var_-76, align 4, !insn.addr !6041
  %86 = ptrtoint i32* %stack_var_-76 to i32, !insn.addr !6041
  %87 = inttoptr i32 %79 to i32*, !insn.addr !6042
  %88 = bitcast i8* %buffer to i32*, !insn.addr !6042
  %89 = call i1 @WriteFile(i32* %87, i32* %88, i32 %buffer_size, i32* nonnull %stack_var_-40, %_OVERLAPPED* null), !insn.addr !6042
  %90 = icmp eq i1 %89, false, !insn.addr !6043
  %91 = icmp eq i1 %90, false, !insn.addr !6044
  store i32 %81, i32* %ebx.2.reg2mem, !insn.addr !6044
  store i32 %86, i32* %esp.1.reg2mem, !insn.addr !6044
  store i32 %80, i32* %storemerge3.reg2mem, !insn.addr !6044
  br i1 %91, label %dec_label_pc_458d6a, label %dec_label_pc_458d5e, !insn.addr !6044

dec_label_pc_458d5e:                              ; preds = %dec_label_pc_458d3a
  %92 = call i32 @GetLastError(), !insn.addr !6045
  store i32 %92, i32* %stack_var_-44, align 4, !insn.addr !6046
  store i32 %81, i32* %ebx.2.reg2mem, !insn.addr !6046
  store i32 %86, i32* %esp.1.reg2mem, !insn.addr !6046
  store i32 %80, i32* %storemerge3.reg2mem, !insn.addr !6046
  br label %dec_label_pc_458d6a, !insn.addr !6046

dec_label_pc_458d6a:                              ; preds = %dec_label_pc_458d3a, %dec_label_pc_458d5e, %dec_label_pc_458cb4, %dec_label_pc_458cdc
  %storemerge3.reload = load i32, i32* %storemerge3.reg2mem
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %ebx.2.reload = load i32, i32* %ebx.2.reg2mem
  %93 = inttoptr i32 %storemerge3.reload to i32*, !insn.addr !6047
  %94 = load i32, i32* %93, align 4, !insn.addr !6047
  %95 = insertvalue %"`anonymous-namespace'::write_result.487" undef, i32 %94, 0, !insn.addr !6047
  store %"`anonymous-namespace'::write_result.487" %95, %"`anonymous-namespace'::write_result.487"* %result_-32, align 8, !insn.addr !6047
  %96 = add i32 %storemerge3.reload, %31, !insn.addr !6047
  %97 = inttoptr i32 %96 to i32*, !insn.addr !6048
  %98 = load i32, i32* %97, align 4, !insn.addr !6048
  store i32 %98, i32* %33, align 4, !insn.addr !6048
  %99 = add i32 %96, %31, !insn.addr !6048
  %100 = inttoptr i32 %99 to i32*, !insn.addr !6049
  %101 = load i32, i32* %100, align 4, !insn.addr !6049
  store i32 %101, i32* %35, align 8, !insn.addr !6049
  store i32 %ebx.2.reload, i32* %ebx.3.reg2mem, !insn.addr !6049
  store i32 %esp.1.reload, i32* %esp.2.reg2mem, !insn.addr !6049
  br label %dec_label_pc_458d70, !insn.addr !6049

dec_label_pc_458d70:                              ; preds = %dec_label_pc_458ca6, %dec_label_pc_458d6a
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %ebx.3.reload = load i32, i32* %ebx.3.reg2mem
  %ebx.3.ptr = inttoptr i32 %ebx.3.reload to i8*
  store i8* %ebx.3.ptr, i8** %ebx.4.ptr.reg2mem, !insn.addr !6050
  store i32 %esp.2.reload, i32* %esp.3.reg2mem, !insn.addr !6050
  br label %dec_label_pc_458d76, !insn.addr !6050

dec_label_pc_458d76:                              ; preds = %dec_label_pc_458d70, %dec_label_pc_458d05
  %102 = getelementptr inbounds %"`anonymous-namespace'::write_result.489", %"`anonymous-namespace'::write_result.489"* %result_-28, i32 0, i32 0, !insn.addr !6051
  %103 = load i32, i32* %102, align 8, !insn.addr !6051
  %104 = icmp eq i32 %103, 0, !insn.addr !6052
  %105 = icmp eq i1 %104, false, !insn.addr !6053
  br i1 %105, label %dec_label_pc_458dd9, label %dec_label_pc_458d7d, !insn.addr !6053

dec_label_pc_458d7d:                              ; preds = %dec_label_pc_458d76
  %106 = getelementptr inbounds %"`anonymous-namespace'::write_result.487", %"`anonymous-namespace'::write_result.487"* %result_-32, i32 0, i32 0, !insn.addr !6054
  %107 = load i32, i32* %106, align 8, !insn.addr !6054
  %108 = icmp eq i32 %107, 0, !insn.addr !6055
  br i1 %108, label %dec_label_pc_458dae, label %dec_label_pc_458d84, !insn.addr !6056

dec_label_pc_458d84:                              ; preds = %dec_label_pc_458d7d
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %109 = add i32 %esp.3.reload, -4, !insn.addr !6057
  %110 = inttoptr i32 %109 to i32*, !insn.addr !6057
  store i32 5, i32* %110, align 4, !insn.addr !6057
  %111 = icmp eq i32 %107, 5, !insn.addr !6058
  %112 = icmp eq i1 %111, false, !insn.addr !6059
  br i1 %112, label %dec_label_pc_458da2, label %dec_label_pc_458d8b, !insn.addr !6059

dec_label_pc_458d8b:                              ; preds = %dec_label_pc_458d84
  %113 = call i32* @_errno(), !insn.addr !6060
  store i32 9, i32* %113, align 4, !insn.addr !6061
  %114 = call i32* @__doserrno(), !insn.addr !6062
  store i32 5, i32* %114, align 4, !insn.addr !6063
  store i32 -1, i32* %eax.2.reg2mem, !insn.addr !6064
  br label %dec_label_pc_458de0, !insn.addr !6064

dec_label_pc_458da2:                              ; preds = %dec_label_pc_458d84
  store i32 %107, i32* %110, align 4, !insn.addr !6065
  %115 = call i32 @function_403512(), !insn.addr !6066
  store i32 -1, i32* %eax.2.reg2mem, !insn.addr !6067
  br label %dec_label_pc_458de0, !insn.addr !6067

dec_label_pc_458dae:                              ; preds = %dec_label_pc_458d7d
  %116 = load i32, i32* %11, align 4, !insn.addr !6068
  %117 = add i32 %116, %22, !insn.addr !6069
  %118 = inttoptr i32 %117 to i8*, !insn.addr !6069
  %119 = load i8, i8* %118, align 1, !insn.addr !6069
  %120 = and i8 %119, 64, !insn.addr !6069
  %121 = icmp eq i8 %120, 0, !insn.addr !6069
  br i1 %121, label %dec_label_pc_458dc1, label %dec_label_pc_458dbc, !insn.addr !6070

dec_label_pc_458dbc:                              ; preds = %dec_label_pc_458dae
  %ebx.4.ptr.reload = load i8*, i8** %ebx.4.ptr.reg2mem
  %122 = load i8, i8* %ebx.4.ptr.reload, align 1, !insn.addr !6071
  %123 = icmp eq i8 %122, 26, !insn.addr !6071
  store i32 0, i32* %eax.2.reg2mem, !insn.addr !6072
  br i1 %123, label %dec_label_pc_458de0, label %dec_label_pc_458dc1, !insn.addr !6072

dec_label_pc_458dc1:                              ; preds = %dec_label_pc_458dbc, %dec_label_pc_458dae
  %124 = call i32* @_errno(), !insn.addr !6073
  store i32 28, i32* %124, align 4, !insn.addr !6074
  %125 = call i32* @__doserrno(), !insn.addr !6075
  store i32 0, i32* %125, align 4, !insn.addr !6076
  store i32 -1, i32* %eax.2.reg2mem, !insn.addr !6077
  br label %dec_label_pc_458de0, !insn.addr !6077

dec_label_pc_458dd9:                              ; preds = %dec_label_pc_458d76
  %126 = sub i32 %103, %1, !insn.addr !6078
  store i32 %126, i32* %eax.2.reg2mem, !insn.addr !6079
  br label %dec_label_pc_458de0, !insn.addr !6079

dec_label_pc_458de0:                              ; preds = %dec_label_pc_458c03, %dec_label_pc_458dbc, %dec_label_pc_458c29, %dec_label_pc_458d8b, %dec_label_pc_458da2, %dec_label_pc_458dc1, %dec_label_pc_458dd9
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  ret i32 %eax.2.reload, !insn.addr !6080
}

define i32 @_isleadbyte_l(i32 %c, i32 %locale) local_unnamed_addr {
dec_label_pc_458ebb:
  %0 = call i8 @__decompiler_undefined_function_8()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @function_403d91(i32 %locale), !insn.addr !6081
  %3 = call i32 @function_404340(), !insn.addr !6082
  %4 = icmp eq i8 %0, 0, !insn.addr !6083
  br i1 %4, label %dec_label_pc_458ef3, label %dec_label_pc_458ee9, !insn.addr !6084

dec_label_pc_458ee9:                              ; preds = %dec_label_pc_458ebb
  %5 = add i32 %1, 848, !insn.addr !6085
  %6 = inttoptr i32 %5 to i32*, !insn.addr !6085
  %7 = load i32, i32* %6, align 4, !insn.addr !6085
  %8 = and i32 %7, -3, !insn.addr !6085
  store i32 %8, i32* %6, align 4, !insn.addr !6085
  br label %dec_label_pc_458ef3, !insn.addr !6085

dec_label_pc_458ef3:                              ; preds = %dec_label_pc_458ee9, %dec_label_pc_458ebb
  ret i32 %3, !insn.addr !6086
}

define i32 @"<lambda_3d301b9e52f5099be73030e1f0bf487e>::operator()"(i32* %this, i8* %s) local_unnamed_addr {
dec_label_pc_4591fb:
  %eax.0.reg2mem = alloca i32, !insn.addr !6087
  %0 = bitcast i32* %this to i8*, !insn.addr !6088
  %1 = load i8, i8* %0, align 1, !insn.addr !6088
  %2 = icmp eq i8 %1, 0, !insn.addr !6088
  %3 = icmp eq i1 %2, false, !insn.addr !6089
  store i32 1, i32* %eax.0.reg2mem, !insn.addr !6089
  br i1 %3, label %dec_label_pc_45920d, label %dec_label_pc_459223, !insn.addr !6089

dec_label_pc_45920d:                              ; preds = %dec_label_pc_4591fb
  %4 = ptrtoint i32* %this to i32
  %5 = add i32 %4, 1, !insn.addr !6090
  %6 = inttoptr i32 %5 to i8*, !insn.addr !6090
  %7 = load i8, i8* %6, align 1, !insn.addr !6090
  %8 = icmp eq i8 %7, 0, !insn.addr !6090
  %9 = icmp eq i1 %8, false, !insn.addr !6091
  store i32 2, i32* %eax.0.reg2mem, !insn.addr !6091
  br i1 %9, label %dec_label_pc_459218, label %dec_label_pc_459223, !insn.addr !6091

dec_label_pc_459218:                              ; preds = %dec_label_pc_45920d
  %10 = add i32 %4, 2, !insn.addr !6092
  %11 = inttoptr i32 %10 to i8*, !insn.addr !6092
  %12 = load i8, i8* %11, align 1, !insn.addr !6092
  %13 = icmp eq i8 %12, 0, !insn.addr !6092
  %14 = icmp eq i1 %13, false, !insn.addr !6093
  %15 = select i1 %14, i32 4, i32 3, !insn.addr !6094
  store i32 %15, i32* %eax.0.reg2mem, !insn.addr !6094
  br label %dec_label_pc_459223, !insn.addr !6094

dec_label_pc_459223:                              ; preds = %dec_label_pc_45920d, %dec_label_pc_4591fb, %dec_label_pc_459218
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !6095
}

define i32 @"__crt_mbstring::__mbrtowc_utf8"(i16* %pwc, i8* %s, i32 %n, %_Mbstatet* %ps) local_unnamed_addr {
dec_label_pc_459232:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_403675(), !insn.addr !6096
  %2 = icmp ugt i32 %1, 4
  %3 = icmp eq i16* %pwc, null, !insn.addr !6097
  %or.cond = or i1 %3, %2
  br i1 %or.cond, label %dec_label_pc_45926e, label %dec_label_pc_45926b, !insn.addr !6098

dec_label_pc_45926b:                              ; preds = %dec_label_pc_459232
  %4 = trunc i32 %0 to i16, !insn.addr !6099
  %5 = icmp sgt i16 %4, -1
  %6 = select i1 %5, i16 %4, i16 -3, !insn.addr !6100
  store i16 %6, i16* %pwc, align 2, !insn.addr !6100
  br label %dec_label_pc_45926e, !insn.addr !6100

dec_label_pc_45926e:                              ; preds = %dec_label_pc_459232, %dec_label_pc_45926b
  ret i32 %1, !insn.addr !6101
}

define i32 @"__crt_mbstring::__mbsrtowcs_utf8"(i16* %dst, i8** %src, i32 %len, %_Mbstatet* %ps) local_unnamed_addr {
dec_label_pc_459282:
  %eax.0.reg2mem = alloca i32, !insn.addr !6102
  %storemerge.reg2mem = alloca i32, !insn.addr !6102
  %edi.2.reg2mem = alloca i32, !insn.addr !6102
  %esp.1.reg2mem = alloca i32, !insn.addr !6102
  %edi.1.reg2mem = alloca i32, !insn.addr !6102
  %esi.2.reg2mem = alloca i32, !insn.addr !6102
  %esi.1.reg2mem = alloca i32, !insn.addr !6102
  %ebx.1.reg2mem = alloca i32, !insn.addr !6102
  %ecx.0.reg2mem = alloca i32, !insn.addr !6102
  %edi.0.reg2mem = alloca i32, !insn.addr !6102
  %esi.0.reg2mem = alloca i32, !insn.addr !6102
  %esp.0.reg2mem = alloca i32, !insn.addr !6102
  %ebx.0.reg2mem = alloca i32, !insn.addr !6102
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-12 = alloca i16, align 2
  %1 = trunc i32 %0 to i16, !insn.addr !6103
  store i16 %1, i16* %stack_var_-12, align 2, !insn.addr !6103
  %2 = icmp eq i16* %dst, null, !insn.addr !6104
  %3 = ptrtoint i32* %stack_var_-24 to i32, !insn.addr !6105
  %4 = load i8*, i8** %src, align 4, !insn.addr !6106
  %5 = ptrtoint i8* %4 to i32, !insn.addr !6106
  br i1 %2, label %dec_label_pc_459348.preheader, label %dec_label_pc_45929b, !insn.addr !6107

dec_label_pc_459348.preheader:                    ; preds = %dec_label_pc_459282
  %6 = ptrtoint %_Mbstatet* %ps to i32
  store i32 %3, i32* %esp.1.reg2mem
  store i32 %5, i32* %edi.2.reg2mem
  store i32 0, i32* %storemerge.reg2mem
  br label %dec_label_pc_459348

dec_label_pc_45929b:                              ; preds = %dec_label_pc_459282
  %7 = ptrtoint i16* %dst to i32, !insn.addr !6108
  %8 = icmp eq i32 %len, 0, !insn.addr !6109
  store i32 %7, i32* %esi.2.reg2mem, !insn.addr !6110
  store i32 %5, i32* %edi.1.reg2mem, !insn.addr !6110
  br i1 %8, label %dec_label_pc_45930d, label %dec_label_pc_4592a5.preheader, !insn.addr !6110

dec_label_pc_4592a5.preheader:                    ; preds = %dec_label_pc_45929b
  %9 = ptrtoint %_Mbstatet* %ps to i32
  %10 = ptrtoint i16* %stack_var_-12 to i32
  store i32 %len, i32* %ebx.0.reg2mem
  store i32 %3, i32* %esp.0.reg2mem
  store i32 %7, i32* %esi.0.reg2mem
  store i32 %5, i32* %edi.0.reg2mem
  br label %dec_label_pc_4592a5

dec_label_pc_4592a5:                              ; preds = %dec_label_pc_4592a5.preheader, %dec_label_pc_459300
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %11 = add i32 %esp.0.reload, -4, !insn.addr !6111
  %12 = inttoptr i32 %11 to i32*, !insn.addr !6111
  store i32 %edi.0.reload, i32* %12, align 4, !insn.addr !6111
  %13 = call i32 @"<lambda_3d301b9e52f5099be73030e1f0bf487e>::operator()"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*)), !insn.addr !6112
  %14 = add i32 %esp.0.reload, -8, !insn.addr !6113
  %15 = inttoptr i32 %14 to i32*, !insn.addr !6113
  store i32 %9, i32* %15, align 4, !insn.addr !6113
  %16 = add i32 %esp.0.reload, -12, !insn.addr !6114
  %17 = inttoptr i32 %16 to i32*, !insn.addr !6114
  store i32 %13, i32* %17, align 4, !insn.addr !6114
  %18 = add i32 %esp.0.reload, -16, !insn.addr !6115
  %19 = inttoptr i32 %18 to i32*, !insn.addr !6115
  store i32 %edi.0.reload, i32* %19, align 4, !insn.addr !6115
  %20 = add i32 %esp.0.reload, -20, !insn.addr !6116
  %21 = inttoptr i32 %20 to i32*, !insn.addr !6116
  store i32 %10, i32* %21, align 4, !insn.addr !6116
  %22 = call i32 @function_403675(), !insn.addr !6117
  switch i32 %22, label %dec_label_pc_4592ca [
    i32 -1, label %dec_label_pc_459322
    i32 0, label %dec_label_pc_459319
  ]

dec_label_pc_4592ca:                              ; preds = %dec_label_pc_4592a5
  %23 = load i16, i16* %stack_var_-12, align 2, !insn.addr !6118
  %24 = sext i16 %23 to i32, !insn.addr !6118
  %25 = icmp sgt i16 %23, -1
  store i32 %24, i32* %ecx.0.reg2mem, !insn.addr !6119
  store i32 %ebx.0.reload, i32* %ebx.1.reg2mem, !insn.addr !6119
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !6119
  br i1 %25, label %dec_label_pc_459300, label %dec_label_pc_4592d5, !insn.addr !6119

dec_label_pc_4592d5:                              ; preds = %dec_label_pc_4592ca
  %26 = icmp ult i32 %ebx.0.reload, 2
  store i32 %esi.0.reload, i32* %esi.2.reg2mem, !insn.addr !6120
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !6120
  br i1 %26, label %dec_label_pc_45930d, label %dec_label_pc_4592da, !insn.addr !6120

dec_label_pc_4592da:                              ; preds = %dec_label_pc_4592d5
  %27 = add nsw i32 %24, -65536, !insn.addr !6121
  %28 = add i32 %ebx.0.reload, -1, !insn.addr !6122
  %29 = trunc i32 %27 to i16, !insn.addr !6123
  store i16 %29, i16* %stack_var_-12, align 2, !insn.addr !6123
  %30 = udiv i32 %27, 1024, !insn.addr !6124
  %31 = and i32 %27, 1023, !insn.addr !6125
  %32 = trunc i32 %30 to i16
  %33 = or i16 %32, -10240, !insn.addr !6126
  %34 = inttoptr i32 %esi.0.reload to i16*, !insn.addr !6126
  store i16 %33, i16* %34, align 2, !insn.addr !6126
  %35 = add i32 %esi.0.reload, 2, !insn.addr !6127
  %36 = or i32 %31, 56320, !insn.addr !6128
  store i32 %36, i32* %ecx.0.reg2mem, !insn.addr !6128
  store i32 %28, i32* %ebx.1.reg2mem, !insn.addr !6128
  store i32 %35, i32* %esi.1.reg2mem, !insn.addr !6128
  br label %dec_label_pc_459300, !insn.addr !6128

dec_label_pc_459300:                              ; preds = %dec_label_pc_4592da, %dec_label_pc_4592ca
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %ebx.1.reload = load i32, i32* %ebx.1.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %37 = trunc i32 %ecx.0.reload to i16, !insn.addr !6129
  %38 = inttoptr i32 %esi.1.reload to i16*, !insn.addr !6129
  store i16 %37, i16* %38, align 2, !insn.addr !6129
  %39 = add i32 %22, %edi.0.reload, !insn.addr !6130
  %40 = add i32 %esi.1.reload, 2, !insn.addr !6131
  %41 = add i32 %ebx.1.reload, -1, !insn.addr !6132
  %42 = icmp eq i32 %41, 0, !insn.addr !6132
  %43 = icmp eq i1 %42, false, !insn.addr !6133
  store i32 %41, i32* %ebx.0.reg2mem, !insn.addr !6133
  store i32 %11, i32* %esp.0.reg2mem, !insn.addr !6133
  store i32 %40, i32* %esi.0.reg2mem, !insn.addr !6133
  store i32 %39, i32* %edi.0.reg2mem, !insn.addr !6133
  store i32 %40, i32* %esi.2.reg2mem, !insn.addr !6133
  store i32 %39, i32* %edi.1.reg2mem, !insn.addr !6133
  br i1 %43, label %dec_label_pc_4592a5, label %dec_label_pc_45930d, !insn.addr !6133

dec_label_pc_45930d:                              ; preds = %dec_label_pc_459300, %dec_label_pc_4592d5, %dec_label_pc_459319, %dec_label_pc_45929b
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %44 = sub i32 %esi.2.reload, %7, !insn.addr !6134
  %45 = sdiv i32 %44, 2, !insn.addr !6135
  %46 = bitcast i8** %src to i32*
  store i32 %edi.1.reload, i32* %46, align 4, !insn.addr !6136
  store i32 %45, i32* %eax.0.reg2mem, !insn.addr !6137
  br label %dec_label_pc_459374, !insn.addr !6137

dec_label_pc_459319:                              ; preds = %dec_label_pc_4592a5
  %47 = inttoptr i32 %esi.0.reload to i16*, !insn.addr !6138
  store i16 0, i16* %47, align 2, !insn.addr !6138
  store i32 %esi.0.reload, i32* %esi.2.reg2mem, !insn.addr !6139
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !6139
  br label %dec_label_pc_45930d, !insn.addr !6139

dec_label_pc_459322:                              ; preds = %dec_label_pc_4592a5
  %48 = bitcast i8** %src to i32*
  store i32 %edi.0.reload, i32* %48, align 4, !insn.addr !6140
  %49 = call i32* @_errno(), !insn.addr !6141
  store i32 42, i32* %49, align 4, !insn.addr !6142
  store i32 -1, i32* %eax.0.reg2mem, !insn.addr !6143
  br label %dec_label_pc_459374, !insn.addr !6143

dec_label_pc_45933b:                              ; preds = %dec_label_pc_459348
  %50 = icmp eq i32 %66, 0, !insn.addr !6144
  store i32 %storemerge.reload, i32* %eax.0.reg2mem, !insn.addr !6145
  br i1 %50, label %dec_label_pc_459374, label %dec_label_pc_45933f, !insn.addr !6145

dec_label_pc_45933f:                              ; preds = %dec_label_pc_45933b
  %51 = icmp eq i32 %66, 4, !insn.addr !6146
  %52 = zext i1 %51 to i32
  %53 = add i32 %66, %edi.2.reload, !insn.addr !6147
  %spec.select = add i32 %storemerge.reload, 1
  %54 = add i32 %spec.select, %52, !insn.addr !6148
  store i32 %55, i32* %esp.1.reg2mem, !insn.addr !6148
  store i32 %53, i32* %edi.2.reg2mem, !insn.addr !6148
  store i32 %54, i32* %storemerge.reg2mem, !insn.addr !6148
  br label %dec_label_pc_459348, !insn.addr !6148

dec_label_pc_459348:                              ; preds = %dec_label_pc_459348.preheader, %dec_label_pc_45933f
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %55 = add i32 %esp.1.reload, -4, !insn.addr !6149
  %56 = inttoptr i32 %55 to i32*, !insn.addr !6149
  store i32 %edi.2.reload, i32* %56, align 4, !insn.addr !6149
  %57 = call i32 @"<lambda_3d301b9e52f5099be73030e1f0bf487e>::operator()"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*)), !insn.addr !6150
  %58 = add i32 %esp.1.reload, -8, !insn.addr !6151
  %59 = inttoptr i32 %58 to i32*, !insn.addr !6151
  store i32 %6, i32* %59, align 4, !insn.addr !6151
  %60 = add i32 %esp.1.reload, -12, !insn.addr !6152
  %61 = inttoptr i32 %60 to i32*, !insn.addr !6152
  store i32 %57, i32* %61, align 4, !insn.addr !6152
  %62 = add i32 %esp.1.reload, -16, !insn.addr !6153
  %63 = inttoptr i32 %62 to i32*, !insn.addr !6153
  store i32 %edi.2.reload, i32* %63, align 4, !insn.addr !6153
  %64 = add i32 %esp.1.reload, -20, !insn.addr !6154
  %65 = inttoptr i32 %64 to i32*, !insn.addr !6154
  store i32 0, i32* %65, align 4, !insn.addr !6154
  %66 = call i32 @function_403675(), !insn.addr !6155
  %67 = icmp eq i32 %66, -1, !insn.addr !6156
  %68 = icmp eq i1 %67, false, !insn.addr !6157
  br i1 %68, label %dec_label_pc_45933b, label %dec_label_pc_459367, !insn.addr !6157

dec_label_pc_459367:                              ; preds = %dec_label_pc_459348
  %69 = call i32* @_errno(), !insn.addr !6158
  store i32 42, i32* %69, align 4, !insn.addr !6159
  store i32 %66, i32* %eax.0.reg2mem, !insn.addr !6159
  br label %dec_label_pc_459374, !insn.addr !6159

dec_label_pc_459374:                              ; preds = %dec_label_pc_45933b, %dec_label_pc_45930d, %dec_label_pc_459367, %dec_label_pc_459322
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !6160
}

define i32 @"__crt_mbstring::__c32rtomb_utf8"(i8* %s, i32 %c32, %_Mbstatet* %ps) local_unnamed_addr {
dec_label_pc_459980:
  %edi.0.reg2mem = alloca i32, !insn.addr !6161
  %ecx.1.reg2mem = alloca i32, !insn.addr !6161
  %storemerge.reg2mem = alloca i32, !insn.addr !6161
  %ebx.0.reg2mem = alloca i32, !insn.addr !6161
  %storemerge4.reg2mem = alloca i32, !insn.addr !6161
  %.reg2mem = alloca %_Mbstatet*, !insn.addr !6161
  %merge.reg2mem = alloca i32, !insn.addr !6161
  %ecx.0.reg2mem = alloca i32, !insn.addr !6161
  %0 = icmp eq i8* %s, null, !insn.addr !6162
  %1 = icmp eq i1 %0, false, !insn.addr !6163
  %2 = ptrtoint %_Mbstatet* %ps to i32
  store i32 0, i32* %ecx.0.reg2mem, !insn.addr !6163
  br i1 %1, label %dec_label_pc_45999b, label %dec_label_pc_45998e, !insn.addr !6163

dec_label_pc_45998e:                              ; preds = %dec_label_pc_459980, %dec_label_pc_4599a2
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %3 = getelementptr inbounds %_Mbstatet, %_Mbstatet* %ps, i32 0, i32 0
  store i32 %ecx.0.reload, i32* %3, align 4, !insn.addr !6164
  %4 = add i32 %2, 4, !insn.addr !6165
  %5 = inttoptr i32 %4 to i32*, !insn.addr !6165
  store i32 %ecx.0.reload, i32* %5, align 4, !insn.addr !6165
  store i32 1, i32* %merge.reg2mem, !insn.addr !6165
  br label %dec_label_pc_459996, !insn.addr !6165

dec_label_pc_459996:                              ; preds = %dec_label_pc_459a0a, %dec_label_pc_459a1e, %dec_label_pc_4599ae, %dec_label_pc_45998e
  %merge.reload = load i32, i32* %merge.reg2mem
  ret i32 %merge.reload, !insn.addr !6166

dec_label_pc_45999b:                              ; preds = %dec_label_pc_459980
  %6 = icmp eq i32 %c32, 0, !insn.addr !6167
  %7 = icmp eq i1 %6, false, !insn.addr !6168
  br i1 %7, label %dec_label_pc_4599a6, label %dec_label_pc_4599a2, !insn.addr !6168

dec_label_pc_4599a2:                              ; preds = %dec_label_pc_45999b
  %8 = trunc i32 %c32 to i8, !insn.addr !6169
  store i8 %8, i8* %s, align 1, !insn.addr !6169
  store i32 %c32, i32* %ecx.0.reg2mem, !insn.addr !6170
  br label %dec_label_pc_45998e, !insn.addr !6170

dec_label_pc_4599a6:                              ; preds = %dec_label_pc_45999b
  %9 = icmp ult i32 %c32, 128, !insn.addr !6171
  %10 = icmp eq i1 %9, false, !insn.addr !6172
  br i1 %10, label %dec_label_pc_4599b2, label %dec_label_pc_4599ae, !insn.addr !6172

dec_label_pc_4599ae:                              ; preds = %dec_label_pc_4599a6
  %11 = trunc i32 %c32 to i8, !insn.addr !6173
  store i8 %11, i8* %s, align 1, !insn.addr !6173
  store i32 1, i32* %merge.reg2mem, !insn.addr !6174
  br label %dec_label_pc_459996, !insn.addr !6174

dec_label_pc_4599b2:                              ; preds = %dec_label_pc_4599a6
  %12 = icmp ult i32 %c32, 2048, !insn.addr !6175
  %13 = icmp eq i1 %12, false, !insn.addr !6176
  store i32 192, i32* %ebx.0.reg2mem, !insn.addr !6176
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !6176
  br i1 %13, label %dec_label_pc_4599c3, label %dec_label_pc_4599f6, !insn.addr !6176

dec_label_pc_4599c3:                              ; preds = %dec_label_pc_4599b2
  %14 = icmp ult i32 %c32, 65536, !insn.addr !6177
  %15 = icmp eq i1 %14, false, !insn.addr !6178
  br i1 %15, label %dec_label_pc_4599e1, label %dec_label_pc_4599cb, !insn.addr !6178

dec_label_pc_4599cb:                              ; preds = %dec_label_pc_4599c3
  %16 = and i32 %c32, -2048
  %17 = icmp eq i32 %16, 55296
  store %_Mbstatet* inttoptr (i32 2 to %_Mbstatet*), %_Mbstatet** %.reg2mem, !insn.addr !6179
  store i32 224, i32* %storemerge4.reg2mem, !insn.addr !6179
  br i1 %17, label %dec_label_pc_459a1e, label %dec_label_pc_4599f5, !insn.addr !6179

dec_label_pc_4599e1:                              ; preds = %dec_label_pc_4599c3
  %18 = icmp ult i32 %c32, 1114112
  store %_Mbstatet* inttoptr (i32 3 to %_Mbstatet*), %_Mbstatet** %.reg2mem, !insn.addr !6180
  store i32 240, i32* %storemerge4.reg2mem, !insn.addr !6180
  br i1 %18, label %dec_label_pc_4599f5, label %dec_label_pc_459a1e, !insn.addr !6180

dec_label_pc_4599f5:                              ; preds = %dec_label_pc_4599e1, %dec_label_pc_4599cb
  %storemerge4.reload = load i32, i32* %storemerge4.reg2mem
  %.reload = load %_Mbstatet*, %_Mbstatet** %.reg2mem, !insn.addr !6181
  %19 = ptrtoint %_Mbstatet* %.reload to i32, !insn.addr !6181
  store i32 %storemerge4.reload, i32* %ebx.0.reg2mem, !insn.addr !6181
  store i32 %19, i32* %storemerge.reg2mem, !insn.addr !6181
  br label %dec_label_pc_4599f6, !insn.addr !6181

dec_label_pc_4599f6:                              ; preds = %dec_label_pc_4599b2, %dec_label_pc_4599f5
  %20 = ptrtoint i8* %s to i32
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  store i32 %c32, i32* %ecx.1.reg2mem, !insn.addr !6182
  store i32 %storemerge.reload, i32* %edi.0.reg2mem, !insn.addr !6182
  br label %dec_label_pc_4599f9, !insn.addr !6182

dec_label_pc_4599f9:                              ; preds = %dec_label_pc_4599f9, %dec_label_pc_4599f6
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %21 = udiv i32 %ecx.1.reload, 64, !insn.addr !6183
  %22 = trunc i32 %ecx.1.reload to i8
  %23 = and i8 %22, 63
  %24 = or i8 %23, -128, !insn.addr !6184
  %25 = add i32 %edi.0.reload, %20, !insn.addr !6184
  %26 = inttoptr i32 %25 to i8*, !insn.addr !6184
  store i8 %24, i8* %26, align 1, !insn.addr !6184
  %27 = add i32 %edi.0.reload, -1, !insn.addr !6185
  %28 = icmp eq i32 %27, 0, !insn.addr !6185
  %29 = icmp eq i1 %28, false, !insn.addr !6186
  store i32 %21, i32* %ecx.1.reg2mem, !insn.addr !6186
  store i32 %27, i32* %edi.0.reg2mem, !insn.addr !6186
  br i1 %29, label %dec_label_pc_4599f9, label %dec_label_pc_459a0a, !insn.addr !6186

dec_label_pc_459a0a:                              ; preds = %dec_label_pc_4599f9
  %30 = or i32 %21, %ebx.0.reload, !insn.addr !6187
  %31 = trunc i32 %30 to i8, !insn.addr !6188
  store i8 %31, i8* %s, align 1, !insn.addr !6188
  %32 = getelementptr inbounds %_Mbstatet, %_Mbstatet* %ps, i32 0, i32 0
  store i32 0, i32* %32, align 4, !insn.addr !6189
  %33 = add i32 %2, 4, !insn.addr !6190
  %34 = inttoptr i32 %33 to i32*, !insn.addr !6190
  store i32 0, i32* %34, align 4, !insn.addr !6190
  %35 = add nsw i32 %storemerge.reload, 1, !insn.addr !6191
  store i32 %35, i32* %merge.reg2mem, !insn.addr !6192
  br label %dec_label_pc_459996, !insn.addr !6192

dec_label_pc_459a1e:                              ; preds = %dec_label_pc_4599e1, %dec_label_pc_4599cb
  %36 = call i32 @function_401d57(i32 %2), !insn.addr !6193
  store i32 %36, i32* %merge.reg2mem, !insn.addr !6194
  br label %dec_label_pc_459996, !insn.addr !6194
}

define i32 @"__crt_mbstring::return_illegal_sequence"(%_Mbstatet* %ps) local_unnamed_addr {
dec_label_pc_459a6e:
  %0 = ptrtoint %_Mbstatet* %ps to i32
  %1 = getelementptr inbounds %_Mbstatet, %_Mbstatet* %ps, i32 0, i32 0, !insn.addr !6195
  store i32 0, i32* %1, align 4, !insn.addr !6195
  %2 = add i32 %0, 4, !insn.addr !6196
  %3 = inttoptr i32 %2 to i32*, !insn.addr !6196
  store i32 0, i32* %3, align 4, !insn.addr !6196
  %4 = call i32* @_errno(), !insn.addr !6197
  store i32 42, i32* %4, align 4, !insn.addr !6198
  ret i32 -1, !insn.addr !6199
}

define i32 @__acrt_fp_strflt_to_string(i8* %buffer, i32 %buffer_count, i32 %digits, %_strflt* %pflt) local_unnamed_addr {
dec_label_pc_459aa1:
  %storemerge4.reg2mem = alloca i32, !insn.addr !6200
  %ecx.3.reg2mem = alloca i32, !insn.addr !6200
  %.lcssa.reg2mem = alloca i8, !insn.addr !6200
  %.lcssa8.reg2mem = alloca i8*, !insn.addr !6200
  %.reg2mem29 = alloca i32, !insn.addr !6200
  %.reg2mem = alloca i8*, !insn.addr !6200
  %edi.2.reg2mem = alloca i32, !insn.addr !6200
  %ecx.1.reg2mem = alloca i32, !insn.addr !6200
  %eax.1.reg2mem = alloca i32, !insn.addr !6200
  %edi.0.reg2mem = alloca i32, !insn.addr !6200
  %ecx.0.reg2mem = alloca i32, !insn.addr !6200
  %eax.0.reg2mem = alloca i32, !insn.addr !6200
  %storemerge.reg2mem = alloca i32, !insn.addr !6200
  %storemerge6.in.reg2mem = alloca i32*, !insn.addr !6200
  %0 = icmp eq i8* %buffer, null, !insn.addr !6201
  %1 = icmp eq i32 %buffer_count, 0, !insn.addr !6202
  %or.cond = or i1 %0, %1
  br i1 %or.cond, label %dec_label_pc_459aae, label %dec_label_pc_459aca, !insn.addr !6203

dec_label_pc_459aae:                              ; preds = %dec_label_pc_459aa1, %dec_label_pc_459ae9
  %2 = call i32* @_errno(), !insn.addr !6204
  store i32* %2, i32** %storemerge6.in.reg2mem, !insn.addr !6205
  store i32 22, i32* %storemerge.reg2mem, !insn.addr !6205
  br label %dec_label_pc_459ab5, !insn.addr !6205

dec_label_pc_459ab5:                              ; preds = %dec_label_pc_459ae0, %dec_label_pc_459aae
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %storemerge6.in.reload = load i32*, i32** %storemerge6.in.reg2mem
  store i32 %storemerge.reload, i32* %storemerge6.in.reload, align 4, !insn.addr !6206
  call void @_invalid_parameter_noinfo(), !insn.addr !6207
  store i32 %storemerge.reload, i32* %storemerge4.reg2mem, !insn.addr !6208
  br label %dec_label_pc_459b5e, !insn.addr !6208

dec_label_pc_459aca:                              ; preds = %dec_label_pc_459aa1
  store i8 0, i8* %buffer, align 1, !insn.addr !6209
  %3 = icmp sgt i32 %digits, 0
  %storemerge5 = select i1 %3, i32 %digits, i32 0
  %4 = add nuw i32 %storemerge5, 1, !insn.addr !6210
  %5 = icmp ult i32 %4, %buffer_count
  br i1 %5, label %dec_label_pc_459ae9, label %dec_label_pc_459ae0, !insn.addr !6211

dec_label_pc_459ae0:                              ; preds = %dec_label_pc_459aca
  %6 = call i32* @_errno(), !insn.addr !6212
  store i32* %6, i32** %storemerge6.in.reg2mem, !insn.addr !6213
  store i32 34, i32* %storemerge.reg2mem, !insn.addr !6213
  br label %dec_label_pc_459ab5, !insn.addr !6213

dec_label_pc_459ae9:                              ; preds = %dec_label_pc_459aca
  %7 = icmp eq %_strflt* %pflt, null, !insn.addr !6214
  br i1 %7, label %dec_label_pc_459aae, label %dec_label_pc_459af0, !insn.addr !6215

dec_label_pc_459af0:                              ; preds = %dec_label_pc_459ae9
  %8 = ptrtoint i8* %buffer to i32
  %9 = ptrtoint %_strflt* %pflt to i32, !insn.addr !6216
  %10 = add i32 %8, 1, !insn.addr !6217
  %11 = add i32 %9, 8, !insn.addr !6218
  %12 = inttoptr i32 %11 to i32*, !insn.addr !6218
  %13 = load i32, i32* %12, align 4, !insn.addr !6218
  store i8 48, i8* %buffer, align 1, !insn.addr !6219
  %14 = icmp slt i32 %digits, 1
  store i32 %10, i32* %eax.0.reg2mem, !insn.addr !6220
  store i32 %digits, i32* %ecx.0.reg2mem, !insn.addr !6220
  store i32 %13, i32* %edi.0.reg2mem, !insn.addr !6220
  store i32 %10, i32* %eax.1.reg2mem, !insn.addr !6220
  store i32 %digits, i32* %ecx.1.reg2mem, !insn.addr !6220
  store i32 %13, i32* %edi.2.reg2mem, !insn.addr !6220
  br i1 %14, label %dec_label_pc_459b17, label %dec_label_pc_459b01, !insn.addr !6220

dec_label_pc_459b01:                              ; preds = %dec_label_pc_459af0, %dec_label_pc_459b01
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %15 = inttoptr i32 %edi.0.reload to i8*, !insn.addr !6221
  %16 = load i8, i8* %15, align 1, !insn.addr !6221
  %17 = icmp eq i8 %16, 0, !insn.addr !6222
  %ebx.1 = select i1 %17, i8 48, i8 %16
  %not. = icmp ne i1 %17, true
  %18 = zext i1 %not. to i32
  %edi.1 = add i32 %edi.0.reload, %18
  %19 = inttoptr i32 %eax.0.reload to i8*, !insn.addr !6223
  store i8 %ebx.1, i8* %19, align 1, !insn.addr !6223
  %20 = add i32 %eax.0.reload, 1, !insn.addr !6224
  %21 = add i32 %ecx.0.reload, -1, !insn.addr !6225
  %22 = icmp eq i32 %21, 0, !insn.addr !6226
  %23 = icmp slt i32 %21, 0, !insn.addr !6226
  %24 = icmp eq i1 %23, false, !insn.addr !6227
  %25 = icmp eq i1 %22, false, !insn.addr !6227
  %26 = icmp eq i1 %24, %25, !insn.addr !6227
  store i32 %20, i32* %eax.0.reg2mem, !insn.addr !6227
  store i32 %21, i32* %ecx.0.reg2mem, !insn.addr !6227
  store i32 %edi.1, i32* %edi.0.reg2mem, !insn.addr !6227
  store i32 %20, i32* %eax.1.reg2mem, !insn.addr !6227
  store i32 %21, i32* %ecx.1.reg2mem, !insn.addr !6227
  store i32 %edi.1, i32* %edi.2.reg2mem, !insn.addr !6227
  br i1 %26, label %dec_label_pc_459b01, label %dec_label_pc_459b17, !insn.addr !6227

dec_label_pc_459b17:                              ; preds = %dec_label_pc_459b01, %dec_label_pc_459af0
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %27 = inttoptr i32 %eax.1.reload to i8*, !insn.addr !6228
  store i8 0, i8* %27, align 1, !insn.addr !6228
  %28 = icmp slt i32 %ecx.1.reload, 0, !insn.addr !6229
  br i1 %28, label %dec_label_pc_459b34, label %dec_label_pc_459b1e, !insn.addr !6230

dec_label_pc_459b1e:                              ; preds = %dec_label_pc_459b17
  %29 = inttoptr i32 %edi.2.reload to i8*, !insn.addr !6231
  %30 = load i8, i8* %29, align 1, !insn.addr !6231
  %31 = icmp slt i8 %30, 53, !insn.addr !6232
  br i1 %31, label %dec_label_pc_459b34, label %dec_label_pc_459b28.preheader, !insn.addr !6232

dec_label_pc_459b28.preheader:                    ; preds = %dec_label_pc_459b1e
  %32 = add i32 %eax.1.reload, -1, !insn.addr !6233
  %33 = inttoptr i32 %32 to i8*, !insn.addr !6234
  %34 = load i8, i8* %33, align 1, !insn.addr !6234
  %35 = icmp eq i8 %34, 57, !insn.addr !6235
  store i8* %33, i8** %.reg2mem, !insn.addr !6236
  store i32 %32, i32* %.reg2mem29, !insn.addr !6236
  store i8* %33, i8** %.lcssa8.reg2mem, !insn.addr !6236
  store i8 %34, i8* %.lcssa.reg2mem, !insn.addr !6236
  br i1 %35, label %dec_label_pc_459b25, label %dec_label_pc_459b30, !insn.addr !6236

dec_label_pc_459b25:                              ; preds = %dec_label_pc_459b28.preheader, %dec_label_pc_459b25
  %.reload30 = load i32, i32* %.reg2mem29
  %.reload = load i8*, i8** %.reg2mem
  store i8 48, i8* %.reload, align 1, !insn.addr !6237
  %36 = add i32 %.reload30, -1, !insn.addr !6233
  %37 = inttoptr i32 %36 to i8*
  %38 = load i8, i8* %37, align 1, !insn.addr !6234
  %39 = icmp eq i8 %38, 57, !insn.addr !6235
  store i8* %37, i8** %.reg2mem, !insn.addr !6236
  store i32 %36, i32* %.reg2mem29, !insn.addr !6236
  store i8* %37, i8** %.lcssa8.reg2mem, !insn.addr !6236
  store i8 %38, i8* %.lcssa.reg2mem, !insn.addr !6236
  br i1 %39, label %dec_label_pc_459b25, label %dec_label_pc_459b30, !insn.addr !6236

dec_label_pc_459b30:                              ; preds = %dec_label_pc_459b25, %dec_label_pc_459b28.preheader
  %.lcssa.reload = load i8, i8* %.lcssa.reg2mem
  %.lcssa8.reload = load i8*, i8** %.lcssa8.reg2mem
  %40 = add i8 %.lcssa.reload, 1, !insn.addr !6238
  store i8 %40, i8* %.lcssa8.reload, align 1, !insn.addr !6238
  br label %dec_label_pc_459b34, !insn.addr !6238

dec_label_pc_459b34:                              ; preds = %dec_label_pc_459b30, %dec_label_pc_459b1e, %dec_label_pc_459b17
  %41 = load i8, i8* %buffer, align 1, !insn.addr !6239
  %42 = icmp eq i8 %41, 49, !insn.addr !6239
  %43 = icmp eq i1 %42, false, !insn.addr !6240
  store i32 %10, i32* %ecx.3.reg2mem, !insn.addr !6240
  br i1 %43, label %dec_label_pc_459b43, label %dec_label_pc_459b39, !insn.addr !6240

dec_label_pc_459b39:                              ; preds = %dec_label_pc_459b34
  %44 = add i32 %9, 4, !insn.addr !6241
  %45 = inttoptr i32 %44 to i32*, !insn.addr !6241
  %46 = load i32, i32* %45, align 4, !insn.addr !6241
  %47 = add i32 %46, 1, !insn.addr !6241
  store i32 %47, i32* %45, align 4, !insn.addr !6241
  store i32 0, i32* %storemerge4.reg2mem, !insn.addr !6242
  br label %dec_label_pc_459b5e, !insn.addr !6242

dec_label_pc_459b43:                              ; preds = %dec_label_pc_459b34, %dec_label_pc_459b43
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %48 = inttoptr i32 %ecx.3.reload to i8*, !insn.addr !6243
  %49 = load i8, i8* %48, align 1, !insn.addr !6243
  %50 = add i32 %ecx.3.reload, 1, !insn.addr !6244
  %51 = icmp eq i8 %49, 0, !insn.addr !6245
  %52 = icmp eq i1 %51, false, !insn.addr !6246
  store i32 %50, i32* %ecx.3.reg2mem, !insn.addr !6246
  br i1 %52, label %dec_label_pc_459b43, label %dec_label_pc_459b4a, !insn.addr !6246

dec_label_pc_459b4a:                              ; preds = %dec_label_pc_459b43
  %53 = sub i32 %ecx.3.reload, %8, !insn.addr !6247
  %54 = inttoptr i32 %10 to i8*, !insn.addr !6248
  call void @memmove(i8* %buffer, i8* %54, i32 %53), !insn.addr !6249
  store i32 0, i32* %storemerge4.reg2mem, !insn.addr !6250
  br label %dec_label_pc_459b5e, !insn.addr !6250

dec_label_pc_459b5e:                              ; preds = %dec_label_pc_459b39, %dec_label_pc_459b4a, %dec_label_pc_459ab5
  %storemerge4.reload = load i32, i32* %storemerge4.reg2mem
  ret i32 %storemerge4.reload, !insn.addr !6251
}

define void @__acrt_fltout(%_CRT_DOUBLE.747 %value, i32 %precision, %_strflt* %flt, i8* %result, i32 %result_count) local_unnamed_addr {
dec_label_pc_45b34f:
  %storemerge53.reg2mem = alloca i32, !insn.addr !6252
  %esp.26.reg2mem = alloca i32, !insn.addr !6252
  %esi.19.reg2mem = alloca i32, !insn.addr !6252
  %ecx.31.reg2mem = alloca i32, !insn.addr !6252
  %edi.13.reg2mem = alloca i32, !insn.addr !6252
  %eax.28.reg2mem = alloca i32, !insn.addr !6252
  %ecx.30.reg2mem = alloca i32, !insn.addr !6252
  %esi.18.reg2mem = alloca i32, !insn.addr !6252
  %storemerge.reg2mem = alloca i32, !insn.addr !6252
  %esi.17.reg2mem = alloca i32, !insn.addr !6252
  %ecx.28.reg2mem = alloca i32, !insn.addr !6252
  %esp.1789.reg2mem = alloca i32, !insn.addr !6252
  %edi.9.reg2mem = alloca i32, !insn.addr !6252
  %esp.17.reg2mem = alloca i32, !insn.addr !6252
  %.reg2mem309 = alloca i8*, !insn.addr !6252
  %esp.17.ph.reg2mem = alloca i32, !insn.addr !6252
  %storemerge30.in.reg2mem = alloca i8**, !insn.addr !6252
  %storemerge57.reg2mem = alloca i32, !insn.addr !6252
  %esp.16.reg2mem = alloca i32, !insn.addr !6252
  %.pre-phi195.reg2mem = alloca i32, !insn.addr !6252
  %edi.8.reg2mem = alloca i32, !insn.addr !6252
  %esi.13.reg2mem = alloca i32, !insn.addr !6252
  %storemerge90.reg2mem = alloca i32, !insn.addr !6252
  %storemerge32.pre-phi.reg2mem = alloca i32, !insn.addr !6252
  %eax.24.reg2mem = alloca i32, !insn.addr !6252
  %ecx.26.reg2mem = alloca i32, !insn.addr !6252
  %eax.23.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1864.13.reg2mem = alloca i8*, !insn.addr !6252
  %ecx.25.reg2mem = alloca i32, !insn.addr !6252
  %eax.22.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1864.12.reg2mem = alloca i8*, !insn.addr !6252
  %eax.21125.reg2mem = alloca i32, !insn.addr !6252
  %ecx.24126.reg2mem = alloca i32, !insn.addr !6252
  %edx.14127.reg2mem = alloca i32, !insn.addr !6252
  %edx.14.ph.reg2mem = alloca i32, !insn.addr !6252
  %ecx.24.ph.reg2mem = alloca i32, !insn.addr !6252
  %eax.21.ph.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1864.10.ph.reg2mem = alloca i8*, !insn.addr !6252
  %stack_var_-1864.9.reg2mem = alloca i8*, !insn.addr !6252
  %.reg2mem307 = alloca i32, !insn.addr !6252
  %ecx.23.reg2mem = alloca i32, !insn.addr !6252
  %eax.20.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1864.8.reg2mem = alloca i8*, !insn.addr !6252
  %stack_var_-1880.1.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1872.0.reg2mem = alloca i32, !insn.addr !6252
  %esi.12.reg2mem = alloca i32, !insn.addr !6252
  %ecx.22.reg2mem = alloca i32, !insn.addr !6252
  %eax.19.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1864.7.reg2mem = alloca i8*, !insn.addr !6252
  %esi.11.reg2mem = alloca i32, !insn.addr !6252
  %ecx.19.reg2mem = alloca i32, !insn.addr !6252
  %ecx.18.reg2mem = alloca i32, !insn.addr !6252
  %esi.10.reg2mem = alloca i32, !insn.addr !6252
  %ecx.17.reg2mem = alloca i32, !insn.addr !6252
  %eax.17.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1892.2.in.reg2mem = alloca i32, !insn.addr !6252
  %edi.6.reg2mem = alloca i32, !insn.addr !6252
  %esi.9.reg2mem = alloca i32, !insn.addr !6252
  %storemerge25.reg2mem = alloca i32, !insn.addr !6252
  %.pre-phi198.reg2mem = alloca i32, !insn.addr !6252
  %storemerge28.reg2mem = alloca i32, !insn.addr !6252
  %storemerge27.reg2mem = alloca i32, !insn.addr !6252
  %storemerge167.reg2mem = alloca i32, !insn.addr !6252
  %eax.12.reg2mem = alloca i32, !insn.addr !6252
  %ecx.15.reg2mem = alloca i32, !insn.addr !6252
  %eax.11.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1864.6.reg2mem = alloca i8*, !insn.addr !6252
  %ecx.14.reg2mem = alloca i32, !insn.addr !6252
  %eax.10.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1864.5.reg2mem = alloca i8*, !insn.addr !6252
  %eax.9144.reg2mem = alloca i32, !insn.addr !6252
  %ecx.13145.reg2mem = alloca i32, !insn.addr !6252
  %edx.9146.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1864.2.reg2mem = alloca i8*, !insn.addr !6252
  %.reg2mem305 = alloca i32, !insn.addr !6252
  %stack_var_-1880.0130.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1896.2131.reg2mem = alloca i8*, !insn.addr !6252
  %stack_var_-1864.1132.reg2mem = alloca i8*, !insn.addr !6252
  %eax.8133.reg2mem = alloca i32, !insn.addr !6252
  %ecx.12134.reg2mem = alloca i32, !insn.addr !6252
  %esi.8.reg2mem = alloca i32, !insn.addr !6252
  %ecx.11.reg2mem = alloca i32, !insn.addr !6252
  %eax.7.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1864.0.reg2mem = alloca i8*, !insn.addr !6252
  %ecx.8.reg2mem = alloca i32, !insn.addr !6252
  %esi.7.reg2mem = alloca i32, !insn.addr !6252
  %ecx.7.reg2mem = alloca i32, !insn.addr !6252
  %esi.6.reg2mem = alloca i32, !insn.addr !6252
  %ecx.6.reg2mem = alloca i32, !insn.addr !6252
  %eax.5.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1908.0.in.reg2mem = alloca i32, !insn.addr !6252
  %edi.4.reg2mem = alloca i32, !insn.addr !6252
  %.pre-phi.reg2mem = alloca i8*, !insn.addr !6252
  %storemerge49.reg2mem = alloca i32, !insn.addr !6252
  %storemerge50.reg2mem = alloca i32, !insn.addr !6252
  %esi.5.reg2mem = alloca i32, !insn.addr !6252
  %ebx.8.reg2mem = alloca i32, !insn.addr !6252
  %ecx.5.reg2mem = alloca i32, !insn.addr !6252
  %storemerge44.reg2mem = alloca i32, !insn.addr !6252
  %storemerge45.reg2mem = alloca i32, !insn.addr !6252
  %esi.4.reg2mem = alloca i32, !insn.addr !6252
  %ebx.7.reg2mem = alloca i32, !insn.addr !6252
  %ecx.4.reg2mem = alloca i32, !insn.addr !6252
  %ecx.3.reg2mem = alloca i32, !insn.addr !6252
  %.reg2mem303 = alloca i32, !insn.addr !6252
  %stack_var_-1892.1234.reg2mem = alloca i8*, !insn.addr !6252
  %.reg2mem301 = alloca i32, !insn.addr !6252
  %stack_var_-1892.1233.reg2mem = alloca i8*, !insn.addr !6252
  %storemerge39.reg2mem = alloca i32, !insn.addr !6252
  %storemerge40.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1896.1.in150.reg2mem = alloca i32, !insn.addr !6252
  %edx.4151.reg2mem = alloca i32, !insn.addr !6252
  %ebx.4154.reg2mem = alloca i32, !insn.addr !6252
  %esi.2155.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1892.1235.reg2mem = alloca i8*, !insn.addr !6252
  %stack_var_-1892.1232.reg2mem = alloca i8*, !insn.addr !6252
  %edx.3236.reg2mem = alloca i32, !insn.addr !6252
  %.reg2mem299 = alloca i32, !insn.addr !6252
  %.pre-phi286.reg2mem = alloca i32, !insn.addr !6252
  %.reg2mem297 = alloca i32, !insn.addr !6252
  %stack_var_-1896.0229.reg2mem = alloca i8*, !insn.addr !6252
  %.reg2mem295 = alloca i32, !insn.addr !6252
  %stack_var_-1896.0228.reg2mem = alloca i8*, !insn.addr !6252
  %storemerge34.reg2mem = alloca i32, !insn.addr !6252
  %storemerge35.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1892.0.in156.reg2mem = alloca i32, !insn.addr !6252
  %edx.1157.reg2mem = alloca i32, !insn.addr !6252
  %ebx.0160.reg2mem = alloca i32, !insn.addr !6252
  %esi.0161.reg2mem = alloca i32, !insn.addr !6252
  %stack_var_-1896.0230.reg2mem = alloca i8*, !insn.addr !6252
  %stack_var_-1896.0227.reg2mem = alloca i8*, !insn.addr !6252
  %edx.0231.reg2mem = alloca i32, !insn.addr !6252
  %.reg2mem293 = alloca i32, !insn.addr !6252
  %.pre-phi288.reg2mem = alloca i32, !insn.addr !6252
  %ecx.0.reg2mem = alloca i32, !insn.addr !6252
  %storemerge55.reg2mem = alloca i8, !insn.addr !6252
  %.reg2mem = alloca double, !insn.addr !6252
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = extractvalue %_CRT_DOUBLE.747 %value, 0
  %stack_var_-2404 = alloca i32, align 4
  %stack_var_-1860 = alloca i32, align 4
  %stack_var_-932 = alloca i8*, align 4
  %stack_var_-1396 = alloca i8*, align 4
  %stack_var_-472 = alloca i8*, align 4
  %stack_var_-936 = alloca i8*, align 4
  %stack_var_-468 = alloca i8*, align 4
  %3 = call i64 @__decompiler_undefined_function_2()
  %stack_var_-2432 = alloca i32, align 4
  %4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-2424 = alloca i8*, align 4
  %stack_var_-2420 = alloca i32, align 4
  %stack_var_4 = alloca double, align 8
  store double %2, double* %stack_var_4, align 8
  %reset_fp_state_-1944 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %5 = bitcast i32* %reset_fp_state_-1944 to %fenv_t*
  %6 = call i32 @fegetenv(%fenv_t* nonnull %5), !insn.addr !6253
  %7 = load i32, i32* %reset_fp_state_-1944, align 4, !insn.addr !6254
  %8 = and i32 %7, 31
  %9 = icmp eq i32 %8, 31, !insn.addr !6255
  %10 = icmp eq i1 %9, false, !insn.addr !6256
  store double %2, double* %.reg2mem, !insn.addr !6256
  store i8 0, i8* %storemerge55.reg2mem, !insn.addr !6256
  br i1 %10, label %dec_label_pc_45b399, label %dec_label_pc_45b3ad, !insn.addr !6256

dec_label_pc_45b399:                              ; preds = %dec_label_pc_45b34f
  %11 = call i32 @feholdexcept(%fenv_t* nonnull %5), !insn.addr !6257
  %.pre = load double, double* %stack_var_4, align 8
  store double %.pre, double* %.reg2mem, !insn.addr !6258
  store i8 1, i8* %storemerge55.reg2mem, !insn.addr !6258
  br label %dec_label_pc_45b3ad, !insn.addr !6258

dec_label_pc_45b3ad:                              ; preds = %dec_label_pc_45b34f, %dec_label_pc_45b399
  %storemerge55.reload = load i8, i8* %storemerge55.reg2mem
  %.reload = load double, double* %.reg2mem, !insn.addr !6259
  %12 = icmp eq i32 %precision, 0, !insn.addr !6260
  %13 = icmp slt i32 %precision, 0, !insn.addr !6260
  %14 = icmp eq i1 %13, false, !insn.addr !6261
  %15 = icmp eq i1 %12, false, !insn.addr !6261
  %16 = icmp eq i1 %14, %15, !insn.addr !6261
  %or.cond77 = or i1 %14, %16
  %spec.store.select87 = select i1 %or.cond77, i8* inttoptr (i32 32 to i8*), i8* inttoptr (i32 45 to i8*)
  store i8* %spec.store.select87, i8** %stack_var_-2424, align 4
  %spec.select88 = select i1 %or.cond77, i32 32, i32 45
  %17 = ptrtoint i8* %result to i32, !insn.addr !6262
  %18 = bitcast i8* %result to i32*
  store i32 %spec.select88, i32* %18, align 4, !insn.addr !6263
  %19 = add i32 %17, 8, !insn.addr !6264
  %20 = inttoptr i32 %19 to i32*, !insn.addr !6264
  store i32 %result_count, i32* %20, align 4, !insn.addr !6264
  %21 = and i32 %precision, 2146435072, !insn.addr !6265
  %22 = icmp eq i32 %21, 0, !insn.addr !6266
  %23 = icmp eq i1 %22, false, !insn.addr !6267
  br i1 %23, label %dec_label_pc_45b40f, label %dec_label_pc_45b3e9, !insn.addr !6267

dec_label_pc_45b3e9:                              ; preds = %dec_label_pc_45b3ad
  %24 = fptrunc double %.reload to float, !insn.addr !6259
  %25 = bitcast float %24 to i32, !insn.addr !6259
  %26 = and i32 %precision, 1048575, !insn.addr !6268
  %27 = or i32 %26, %25, !insn.addr !6269
  %28 = icmp eq i32 %27, 0, !insn.addr !6269
  %29 = icmp eq i1 %28, false, !insn.addr !6270
  br i1 %29, label %dec_label_pc_45b40f, label %dec_label_pc_45b3f7, !insn.addr !6270

dec_label_pc_45b3f7:                              ; preds = %dec_label_pc_45b3e9
  store i8* bitcast (i8** @global_var_478c28 to i8*), i8** %stack_var_-2424, align 4, !insn.addr !6271
  %30 = add i32 %17, 4, !insn.addr !6272
  %31 = inttoptr i32 %30 to i32*, !insn.addr !6272
  store i32 0, i32* %31, align 4, !insn.addr !6272
  store i32 %result_count, i32* %stack_var_-2432, align 4, !insn.addr !6273
  %32 = ptrtoint i32* %stack_var_-2432 to i32, !insn.addr !6273
  store i32 %32, i32* %storemerge53.reg2mem, !insn.addr !6274
  br label %dec_label_pc_45c677, !insn.addr !6274

dec_label_pc_45b40f:                              ; preds = %dec_label_pc_45b3e9, %dec_label_pc_45b3ad
  %33 = bitcast double* %stack_var_4 to i8*
  store i8* %33, i8** %stack_var_-2424, align 4, !insn.addr !6275
  %34 = ptrtoint double* %stack_var_4 to i32, !insn.addr !6276
  %35 = load i32, i32* %stack_var_-2420, align 4, !insn.addr !6276
  %36 = call i32 @function_4030f8(i32 %34, i32 %35, i32 %0, i32 %1, i32 ptrtoint (i32* @80 to i32)), !insn.addr !6276
  %cond = icmp eq i32 %36, 0
  br i1 %cond, label %dec_label_pc_45b44e, label %dec_label_pc_45b41d

dec_label_pc_45b41d:                              ; preds = %dec_label_pc_45b40f
  %37 = add i32 %17, 4, !insn.addr !6277
  %38 = inttoptr i32 %37 to i32*, !insn.addr !6277
  store i32 1, i32* %38, align 4, !insn.addr !6277
  switch i32 %36, label %dec_label_pc_45b44e [
    i32 1, label %dec_label_pc_45c685
    i32 2, label %dec_label_pc_45c668
    i32 3, label %dec_label_pc_45c661
    i32 4, label %dec_label_pc_45c65a
  ]

dec_label_pc_45b44e:                              ; preds = %dec_label_pc_45b41d, %dec_label_pc_45b40f
  %39 = ptrtoint i32* %stack_var_-4 to i32, !insn.addr !6278
  %40 = ptrtoint %_strflt* %flt to i32, !insn.addr !6279
  %41 = add i32 %40, 1, !insn.addr !6280
  store double %.reload, double* %stack_var_4, align 8, !insn.addr !6281
  %42 = trunc i64 %3 to i32, !insn.addr !6282
  %43 = udiv i32 %42, 1048576, !insn.addr !6283
  %44 = and i32 %43, 2047, !insn.addr !6284
  %45 = icmp eq i32 %44, 0, !insn.addr !6285
  %46 = icmp eq i1 %45, false, !insn.addr !6286
  %spec.store.select = select i1 %46, i32 0, i32 %44
  %spec.select = select i1 %46, i32 1048576, i32 0
  %not. = icmp ne i1 %46, true
  %spec.select69 = zext i1 %not. to i32
  %47 = fptrunc double %.reload to float, !insn.addr !6287
  %48 = bitcast float %47 to i32, !insn.addr !6287
  %49 = and i32 %42, 1048575, !insn.addr !6288
  %50 = add i32 %spec.store.select, %48, !insn.addr !6289
  %51 = icmp ult i32 %50, %48, !insn.addr !6289
  %52 = zext i1 %51 to i32, !insn.addr !6290
  %53 = or i32 %spec.select, %49, !insn.addr !6290
  %54 = add nuw nsw i32 %53, %52, !insn.addr !6290
  %55 = add nuw nsw i32 %44, %spec.select69, !insn.addr !6291
  %56 = call i32 @function_4039fe(i32 0, i32 %41, i32 %48), !insn.addr !6292
  %57 = inttoptr i32 %44 to i8*, !insn.addr !6293
  store i8* %57, i8** %stack_var_-2424, align 4, !insn.addr !6293
  %58 = call double @ceil(double %.reload), !insn.addr !6294
  call void @_ftol2_sse_excpt(), !insn.addr !6295
  store i8* inttoptr (i32 32 to i8*), i8** %stack_var_-2424, align 4, !insn.addr !6296
  %59 = icmp eq i32 %54, 0, !insn.addr !6297
  %60 = bitcast i8** %stack_var_-468 to i32*
  store i32 %50, i32* %60, align 4
  %61 = icmp eq i1 %59, false, !insn.addr !6298
  store i8* null, i8** %stack_var_-936, align 4, !insn.addr !6299
  %62 = select i1 %61, i32 2, i32 1, !insn.addr !6300
  %63 = inttoptr i32 %62 to i8*, !insn.addr !6301
  store i8* %63, i8** %stack_var_-472, align 4, !insn.addr !6301
  %64 = icmp ult i32 %55, 1075, !insn.addr !6302
  br i1 %64, label %dec_label_pc_45b90a, label %dec_label_pc_45b532, !insn.addr !6303

dec_label_pc_45b532:                              ; preds = %dec_label_pc_45b44e
  store i8* null, i8** %stack_var_-1396, align 4, !insn.addr !6304
  br i1 %59, label %dec_label_pc_45b749, label %dec_label_pc_45b557.preheader, !insn.addr !6305

dec_label_pc_45b557.preheader:                    ; preds = %dec_label_pc_45b532
  %65 = add i32 %39, -1392, !insn.addr !6306
  %66 = add i32 %39, -464, !insn.addr !6307
  store i32 0, i32* %ecx.0.reg2mem
  br label %dec_label_pc_45b557

dec_label_pc_45b557:                              ; preds = %dec_label_pc_45b557.preheader, %dec_label_pc_45b56b
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %67 = add i32 %65, %ecx.0.reload, !insn.addr !6306
  %68 = inttoptr i32 %67 to i32*, !insn.addr !6306
  %69 = load i32, i32* %68, align 4, !insn.addr !6306
  %70 = add i32 %ecx.0.reload, %66, !insn.addr !6307
  %71 = inttoptr i32 %70 to i32*, !insn.addr !6307
  %72 = load i32, i32* %71, align 4, !insn.addr !6307
  %73 = icmp eq i32 %69, %72, !insn.addr !6307
  %74 = icmp eq i1 %73, false, !insn.addr !6308
  br i1 %74, label %dec_label_pc_45b749, label %dec_label_pc_45b56b, !insn.addr !6308

dec_label_pc_45b56b:                              ; preds = %dec_label_pc_45b557
  %75 = add nuw nsw i32 %ecx.0.reload, 4, !insn.addr !6309
  %76 = icmp eq i32 %ecx.0.reload, 4, !insn.addr !6310
  %77 = icmp eq i1 %76, false, !insn.addr !6311
  store i32 %75, i32* %ecx.0.reg2mem, !insn.addr !6311
  br i1 %77, label %dec_label_pc_45b557, label %dec_label_pc_45b573, !insn.addr !6311

dec_label_pc_45b573:                              ; preds = %dec_label_pc_45b56b
  %78 = add nsw i32 %55, -1073, !insn.addr !6312
  %79 = udiv i32 %78, 32, !insn.addr !6313
  %80 = call i32 @function_402e78(), !insn.addr !6314
  %81 = add nuw nsw i32 %62, %79, !insn.addr !6315
  %82 = icmp ult i32 %81, 116
  br i1 %82, label %dec_label_pc_45b5f5, label %dec_label_pc_45b6e2, !insn.addr !6316

dec_label_pc_45b5f5:                              ; preds = %dec_label_pc_45b573
  %83 = and i32 %78, 31, !insn.addr !6317
  %84 = mul i32 %62, 4
  %85 = add i32 %39, -468, !insn.addr !6318
  %86 = add i32 %85, %84, !insn.addr !6318
  %87 = inttoptr i32 %86 to i32*, !insn.addr !6318
  %88 = load i32, i32* %87, align 4, !insn.addr !6318
  %89 = call i32 @llvm.ctlz.i32(i32 %88, i1 false), !range !1997, !insn.addr !6319
  %90 = icmp ugt i32 %83, %89
  %91 = icmp eq i32 %81, 115, !insn.addr !6320
  %or.cond78 = icmp eq i1 %91, %90
  %92 = icmp eq i1 %or.cond78, false, !insn.addr !6321
  %93 = icmp eq i1 %92, false, !insn.addr !6322
  br i1 %93, label %dec_label_pc_45b6e2, label %dec_label_pc_45b5fd, !insn.addr !6322

dec_label_pc_45b5fd:                              ; preds = %dec_label_pc_45b5f5
  %94 = inttoptr i32 %81 to i8*, !insn.addr !6323
  %95 = icmp ult i32 %81, 114, !insn.addr !6324
  store i32 %84, i32* %.pre-phi288.reg2mem, !insn.addr !6325
  store i32 %62, i32* %.reg2mem293, !insn.addr !6325
  store i32 %81, i32* %edx.0231.reg2mem, !insn.addr !6325
  store i8* %94, i8** %stack_var_-1896.0227.reg2mem, !insn.addr !6325
  br i1 %95, label %dec_label_pc_45b633.lr.ph, label %dec_label_pc_45b61c, !insn.addr !6325

dec_label_pc_45b61c:                              ; preds = %dec_label_pc_45b5fd
  store i8* inttoptr (i32 114 to i8*), i8** %stack_var_-2424, align 4, !insn.addr !6326
  %96 = icmp ugt i32 %78, 3679, !insn.addr !6327
  store i8* inttoptr (i32 114 to i8*), i8** %stack_var_-1896.0230.reg2mem, !insn.addr !6328
  br i1 %96, label %dec_label_pc_45b69a.thread, label %dec_label_pc_45b61c.dec_label_pc_45b633.lr.ph_crit_edge, !insn.addr !6328

dec_label_pc_45b61c.dec_label_pc_45b633.lr.ph_crit_edge: ; preds = %dec_label_pc_45b61c
  %97 = sub nsw i32 114, %79, !insn.addr !6329
  %.pre287 = mul i32 %97, 4, !insn.addr !6330
  store i32 %.pre287, i32* %.pre-phi288.reg2mem
  store i32 %97, i32* %.reg2mem293
  store i32 114, i32* %edx.0231.reg2mem
  store i8* inttoptr (i32 114 to i8*), i8** %stack_var_-1896.0227.reg2mem
  br label %dec_label_pc_45b633.lr.ph

dec_label_pc_45b633.lr.ph:                        ; preds = %dec_label_pc_45b61c.dec_label_pc_45b633.lr.ph_crit_edge, %dec_label_pc_45b5fd
  %98 = sub nsw i32 17, %55, !insn.addr !6331
  %99 = add i32 %80, -1, !insn.addr !6332
  %100 = sub i32 0, %80, !insn.addr !6333
  %stack_var_-1896.0227.reload = load i8*, i8** %stack_var_-1896.0227.reg2mem
  %edx.0231.reload = load i32, i32* %edx.0231.reg2mem
  %.reload294 = load i32, i32* %.reg2mem293
  %.pre-phi288.reload = load i32, i32* %.pre-phi288.reg2mem
  %101 = ptrtoint i8** %stack_var_-468 to i32, !insn.addr !6334
  %102 = add i32 %.pre-phi288.reload, %101, !insn.addr !6330
  %103 = and i32 %98, 31, !insn.addr !6335
  store i32 %.reload294, i32* %esi.0161.reg2mem
  store i32 %62, i32* %ebx.0160.reg2mem
  store i32 %102, i32* %edx.1157.reg2mem
  store i32 %edx.0231.reload, i32* %stack_var_-1892.0.in156.reg2mem
  br label %dec_label_pc_45b633

dec_label_pc_45b69a.thread:                       ; preds = %dec_label_pc_45b692, %dec_label_pc_45b61c
  %stack_var_-1896.0230.reload = load i8*, i8** %stack_var_-1896.0230.reg2mem
  %104 = ptrtoint i8* %stack_var_-1896.0230.reload to i32, !insn.addr !6336
  store i8* %stack_var_-1896.0230.reload, i8** %stack_var_-1896.0228.reg2mem
  store i32 %104, i32* %.reg2mem295
  br label %dec_label_pc_45b6b0

dec_label_pc_45b633:                              ; preds = %dec_label_pc_45b633.lr.ph, %dec_label_pc_45b692
  %stack_var_-1892.0.in156.reload = load i32, i32* %stack_var_-1892.0.in156.reg2mem
  %edx.1157.reload = load i32, i32* %edx.1157.reg2mem
  %ebx.0160.reload = load i32, i32* %ebx.0160.reg2mem
  %esi.0161.reload = load i32, i32* %esi.0161.reg2mem
  %105 = icmp ult i32 %esi.0161.reload, %ebx.0160.reload, !insn.addr !6337
  %106 = icmp eq i1 %105, false, !insn.addr !6338
  store i32 0, i32* %storemerge35.reg2mem, !insn.addr !6338
  br i1 %106, label %dec_label_pc_45b63d, label %dec_label_pc_45b637, !insn.addr !6338

dec_label_pc_45b637:                              ; preds = %dec_label_pc_45b633
  %107 = inttoptr i32 %edx.1157.reload to i32*, !insn.addr !6339
  %108 = load i32, i32* %107, align 4, !insn.addr !6339
  store i32 %108, i32* %storemerge35.reg2mem, !insn.addr !6340
  br label %dec_label_pc_45b63d, !insn.addr !6340

dec_label_pc_45b63d:                              ; preds = %dec_label_pc_45b633, %dec_label_pc_45b637
  %storemerge35.reload = load i32, i32* %storemerge35.reg2mem
  %109 = add nsw i32 %esi.0161.reload, -1, !insn.addr !6341
  %110 = icmp ult i32 %109, %ebx.0160.reload, !insn.addr !6342
  %111 = icmp eq i1 %110, false, !insn.addr !6343
  store i32 0, i32* %storemerge34.reg2mem, !insn.addr !6343
  br i1 %111, label %dec_label_pc_45b651, label %dec_label_pc_45b64a, !insn.addr !6343

dec_label_pc_45b64a:                              ; preds = %dec_label_pc_45b63d
  %112 = add i32 %edx.1157.reload, -4, !insn.addr !6344
  %113 = inttoptr i32 %112 to i32*, !insn.addr !6344
  %114 = load i32, i32* %113, align 4, !insn.addr !6344
  store i32 %114, i32* %storemerge34.reg2mem, !insn.addr !6345
  br label %dec_label_pc_45b651, !insn.addr !6345

dec_label_pc_45b651:                              ; preds = %dec_label_pc_45b63d, %dec_label_pc_45b64a
  %storemerge34.reload = load i32, i32* %storemerge34.reg2mem
  %115 = and i32 %storemerge34.reload, %100, !insn.addr !6346
  %116 = and i32 %storemerge35.reload, %99, !insn.addr !6347
  %117 = lshr i32 %115, %103
  %118 = shl i32 %116, %83
  %119 = or i32 %117, %118, !insn.addr !6348
  %120 = mul i32 %stack_var_-1892.0.in156.reload, 4, !insn.addr !6349
  %121 = add i32 %120, %66, !insn.addr !6349
  %122 = inttoptr i32 %121 to i32*, !insn.addr !6349
  store i32 %119, i32* %122, align 4, !insn.addr !6349
  %123 = icmp eq i32 %stack_var_-1892.0.in156.reload, 0, !insn.addr !6350
  br i1 %123, label %dec_label_pc_45b69a, label %dec_label_pc_45b692, !insn.addr !6351

dec_label_pc_45b692:                              ; preds = %dec_label_pc_45b651
  %124 = add nsw i32 %stack_var_-1892.0.in156.reload, -1, !insn.addr !6352
  %125 = add i32 %edx.1157.reload, -4, !insn.addr !6353
  %126 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6354
  %127 = ptrtoint i8* %126 to i32, !insn.addr !6354
  %128 = icmp ult i32 %124, %79, !insn.addr !6327
  store i8* %stack_var_-1896.0227.reload, i8** %stack_var_-1896.0230.reg2mem, !insn.addr !6328
  store i32 %109, i32* %esi.0161.reg2mem, !insn.addr !6328
  store i32 %127, i32* %ebx.0160.reg2mem, !insn.addr !6328
  store i32 %125, i32* %edx.1157.reg2mem, !insn.addr !6328
  store i32 %124, i32* %stack_var_-1892.0.in156.reg2mem, !insn.addr !6328
  br i1 %128, label %dec_label_pc_45b69a.thread, label %dec_label_pc_45b633, !insn.addr !6328

dec_label_pc_45b69a:                              ; preds = %dec_label_pc_45b651
  %129 = ptrtoint i8* %stack_var_-1896.0227.reload to i32, !insn.addr !6336
  %130 = icmp ult i32 %78, 32
  store i8* %stack_var_-1896.0227.reload, i8** %stack_var_-1896.0228.reg2mem, !insn.addr !6355
  store i32 %129, i32* %.reg2mem295, !insn.addr !6355
  store i8* %stack_var_-1896.0227.reload, i8** %stack_var_-1896.0229.reg2mem, !insn.addr !6355
  store i32 %129, i32* %.reg2mem297, !insn.addr !6355
  br i1 %130, label %dec_label_pc_45b6c2, label %dec_label_pc_45b6b0, !insn.addr !6355

dec_label_pc_45b6b0:                              ; preds = %dec_label_pc_45b69a.thread, %dec_label_pc_45b69a
  %.reload296 = load i32, i32* %.reg2mem295
  %stack_var_-1896.0228.reload = load i8*, i8** %stack_var_-1896.0228.reg2mem
  %131 = bitcast i8** %stack_var_-468 to i8*, !insn.addr !6356
  call void @__asm_rep_stosd_memset(i8* nonnull %131, i32 0, i32 %79), !insn.addr !6356
  store i8* %stack_var_-1896.0228.reload, i8** %stack_var_-1896.0229.reg2mem, !insn.addr !6357
  store i32 %.reload296, i32* %.reg2mem297, !insn.addr !6357
  br label %dec_label_pc_45b6c2, !insn.addr !6357

dec_label_pc_45b6c2:                              ; preds = %dec_label_pc_45b6b0, %dec_label_pc_45b69a
  br i1 %90, label %dec_label_pc_45b6cf, label %dec_label_pc_45b6da, !insn.addr !6358

dec_label_pc_45b6cf:                              ; preds = %dec_label_pc_45b6c2
  %.reload298 = load i32, i32* %.reg2mem297
  %132 = add i32 %.reload298, 1, !insn.addr !6359
  %133 = inttoptr i32 %132 to i8*, !insn.addr !6360
  store i8* %133, i8** %stack_var_-472, align 4, !insn.addr !6360
  br label %dec_label_pc_45b70d, !insn.addr !6361

dec_label_pc_45b6da:                              ; preds = %dec_label_pc_45b6c2
  %stack_var_-1896.0229.reload = load i8*, i8** %stack_var_-1896.0229.reg2mem
  store i8* %stack_var_-1896.0229.reload, i8** %stack_var_-472, align 4, !insn.addr !6362
  br label %dec_label_pc_45b70d, !insn.addr !6363

dec_label_pc_45b6e2:                              ; preds = %dec_label_pc_45b573, %dec_label_pc_45b5f5
  store i8* null, i8** %stack_var_-2424, align 4, !insn.addr !6364
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6365
  %134 = bitcast i8** %stack_var_-1396 to i8*
  store i32 460, i32* %stack_var_-2432, align 4, !insn.addr !6366
  %135 = bitcast i8** %stack_var_-468 to i8*
  %136 = call i32 @memcpy_s_3(i8* nonnull %135, i32 460, i8* nonnull %134, i32 0), !insn.addr !6367
  br label %dec_label_pc_45b70d, !insn.addr !6368

dec_label_pc_45b70d:                              ; preds = %dec_label_pc_45b6e2, %dec_label_pc_45b6da, %dec_label_pc_45b6cf
  %137 = bitcast i8** %stack_var_-1396 to i32*
  store i32 4, i32* %137, align 4
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-936, align 4, !insn.addr !6369
  %138 = bitcast i8** %stack_var_-2424 to i32*
  store i32 4, i32* %138, align 4
  br label %dec_label_pc_45b72d, !insn.addr !6370

dec_label_pc_45b72d:                              ; preds = %dec_label_pc_45b8e3, %dec_label_pc_45b70d
  %storemerge38 = ptrtoint i8** %stack_var_-2424 to i32
  %139 = add i32 %storemerge38, -4, !insn.addr !6371
  %140 = inttoptr i32 %139 to i32*, !insn.addr !6371
  %141 = ptrtoint i8** %stack_var_-1396 to i32, !insn.addr !6371
  store i32 %141, i32* %140, align 4, !insn.addr !6371
  %142 = add i32 %storemerge38, -8, !insn.addr !6372
  %143 = inttoptr i32 %142 to i32*, !insn.addr !6372
  store i32 460, i32* %143, align 4, !insn.addr !6372
  %144 = add i32 %storemerge38, -12, !insn.addr !6373
  %145 = inttoptr i32 %144 to i32*, !insn.addr !6373
  %146 = ptrtoint i8** %stack_var_-932 to i32, !insn.addr !6373
  store i32 %146, i32* %145, align 4, !insn.addr !6373
  %147 = load i8*, i8** %stack_var_-2424, align 4, !insn.addr !6374
  %148 = call i32 @memcpy_s_3(i8* %147, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6374
  br label %dec_label_pc_45bb26, !insn.addr !6375

dec_label_pc_45b749:                              ; preds = %dec_label_pc_45b557, %dec_label_pc_45b532
  %149 = add nsw i32 %55, -1074, !insn.addr !6376
  %150 = udiv i32 %149, 32, !insn.addr !6377
  %151 = call i32 @function_402e78(), !insn.addr !6378
  %152 = add nuw nsw i32 %62, %150, !insn.addr !6379
  %153 = icmp ult i32 %152, 116
  br i1 %153, label %dec_label_pc_45b7cb, label %dec_label_pc_45b8b8, !insn.addr !6380

dec_label_pc_45b7cb:                              ; preds = %dec_label_pc_45b749
  %154 = and i32 %149, 31, !insn.addr !6381
  %155 = mul i32 %62, 4
  %156 = add i32 %39, -468, !insn.addr !6382
  %157 = add i32 %156, %155, !insn.addr !6382
  %158 = inttoptr i32 %157 to i32*, !insn.addr !6382
  %159 = load i32, i32* %158, align 4, !insn.addr !6382
  %160 = call i32 @llvm.ctlz.i32(i32 %159, i1 false), !range !1997, !insn.addr !6383
  %161 = icmp ugt i32 %154, %160
  %162 = icmp eq i32 %152, 115, !insn.addr !6384
  %or.cond80 = icmp eq i1 %162, %161
  %163 = icmp eq i1 %or.cond80, false, !insn.addr !6385
  %164 = icmp eq i1 %163, false, !insn.addr !6386
  br i1 %164, label %dec_label_pc_45b8b8, label %dec_label_pc_45b7d3, !insn.addr !6386

dec_label_pc_45b7d3:                              ; preds = %dec_label_pc_45b7cb
  %165 = inttoptr i32 %152 to i8*, !insn.addr !6387
  %166 = icmp ult i32 %152, 114, !insn.addr !6388
  store i32 %155, i32* %.pre-phi286.reg2mem, !insn.addr !6389
  store i32 %62, i32* %.reg2mem299, !insn.addr !6389
  store i32 %152, i32* %edx.3236.reg2mem, !insn.addr !6389
  store i8* %165, i8** %stack_var_-1892.1232.reg2mem, !insn.addr !6389
  br i1 %166, label %dec_label_pc_45b809.lr.ph, label %dec_label_pc_45b7f2, !insn.addr !6389

dec_label_pc_45b7f2:                              ; preds = %dec_label_pc_45b7d3
  store i8* inttoptr (i32 114 to i8*), i8** %stack_var_-2424, align 4, !insn.addr !6390
  %167 = icmp ugt i32 %149, 3679, !insn.addr !6391
  store i8* inttoptr (i32 114 to i8*), i8** %stack_var_-1892.1235.reg2mem, !insn.addr !6392
  br i1 %167, label %dec_label_pc_45b870.thread, label %dec_label_pc_45b7f2.dec_label_pc_45b809.lr.ph_crit_edge, !insn.addr !6392

dec_label_pc_45b7f2.dec_label_pc_45b809.lr.ph_crit_edge: ; preds = %dec_label_pc_45b7f2
  %168 = sub nsw i32 114, %150, !insn.addr !6393
  %.pre285 = mul i32 %168, 4, !insn.addr !6394
  store i32 %.pre285, i32* %.pre-phi286.reg2mem
  store i32 %168, i32* %.reg2mem299
  store i32 114, i32* %edx.3236.reg2mem
  store i8* inttoptr (i32 114 to i8*), i8** %stack_var_-1892.1232.reg2mem
  br label %dec_label_pc_45b809.lr.ph

dec_label_pc_45b809.lr.ph:                        ; preds = %dec_label_pc_45b7f2.dec_label_pc_45b809.lr.ph_crit_edge, %dec_label_pc_45b7d3
  %169 = sub nsw i32 18, %55, !insn.addr !6395
  %170 = add i32 %151, -1, !insn.addr !6396
  %171 = sub i32 0, %151, !insn.addr !6397
  %stack_var_-1892.1232.reload = load i8*, i8** %stack_var_-1892.1232.reg2mem
  %edx.3236.reload = load i32, i32* %edx.3236.reg2mem
  %.reload300 = load i32, i32* %.reg2mem299
  %.pre-phi286.reload = load i32, i32* %.pre-phi286.reg2mem
  %172 = ptrtoint i8** %stack_var_-468 to i32, !insn.addr !6398
  %173 = add i32 %.pre-phi286.reload, %172, !insn.addr !6394
  %174 = add i32 %39, -464, !insn.addr !6399
  %175 = and i32 %169, 31, !insn.addr !6400
  store i32 %.reload300, i32* %esi.2155.reg2mem
  store i32 %62, i32* %ebx.4154.reg2mem
  store i32 %173, i32* %edx.4151.reg2mem
  store i32 %edx.3236.reload, i32* %stack_var_-1896.1.in150.reg2mem
  br label %dec_label_pc_45b809

dec_label_pc_45b870.thread:                       ; preds = %dec_label_pc_45b868, %dec_label_pc_45b7f2
  %stack_var_-1892.1235.reload = load i8*, i8** %stack_var_-1892.1235.reg2mem
  %176 = ptrtoint i8* %stack_var_-1892.1235.reload to i32, !insn.addr !6401
  store i8* %stack_var_-1892.1235.reload, i8** %stack_var_-1892.1233.reg2mem
  store i32 %176, i32* %.reg2mem301
  br label %dec_label_pc_45b886

dec_label_pc_45b809:                              ; preds = %dec_label_pc_45b809.lr.ph, %dec_label_pc_45b868
  %stack_var_-1896.1.in150.reload = load i32, i32* %stack_var_-1896.1.in150.reg2mem
  %edx.4151.reload = load i32, i32* %edx.4151.reg2mem
  %ebx.4154.reload = load i32, i32* %ebx.4154.reg2mem
  %esi.2155.reload = load i32, i32* %esi.2155.reg2mem
  %177 = icmp ult i32 %esi.2155.reload, %ebx.4154.reload, !insn.addr !6402
  %178 = icmp eq i1 %177, false, !insn.addr !6403
  store i32 0, i32* %storemerge40.reg2mem, !insn.addr !6403
  br i1 %178, label %dec_label_pc_45b813, label %dec_label_pc_45b80d, !insn.addr !6403

dec_label_pc_45b80d:                              ; preds = %dec_label_pc_45b809
  %179 = inttoptr i32 %edx.4151.reload to i32*, !insn.addr !6404
  %180 = load i32, i32* %179, align 4, !insn.addr !6404
  store i32 %180, i32* %storemerge40.reg2mem, !insn.addr !6405
  br label %dec_label_pc_45b813, !insn.addr !6405

dec_label_pc_45b813:                              ; preds = %dec_label_pc_45b809, %dec_label_pc_45b80d
  %storemerge40.reload = load i32, i32* %storemerge40.reg2mem
  %181 = add nsw i32 %esi.2155.reload, -1, !insn.addr !6406
  %182 = icmp ult i32 %181, %ebx.4154.reload, !insn.addr !6407
  %183 = icmp eq i1 %182, false, !insn.addr !6408
  store i32 0, i32* %storemerge39.reg2mem, !insn.addr !6408
  br i1 %183, label %dec_label_pc_45b827, label %dec_label_pc_45b820, !insn.addr !6408

dec_label_pc_45b820:                              ; preds = %dec_label_pc_45b813
  %184 = add i32 %edx.4151.reload, -4, !insn.addr !6409
  %185 = inttoptr i32 %184 to i32*, !insn.addr !6409
  %186 = load i32, i32* %185, align 4, !insn.addr !6409
  store i32 %186, i32* %storemerge39.reg2mem, !insn.addr !6410
  br label %dec_label_pc_45b827, !insn.addr !6410

dec_label_pc_45b827:                              ; preds = %dec_label_pc_45b813, %dec_label_pc_45b820
  %storemerge39.reload = load i32, i32* %storemerge39.reg2mem
  %187 = and i32 %storemerge39.reload, %171, !insn.addr !6411
  %188 = and i32 %storemerge40.reload, %170, !insn.addr !6412
  %189 = lshr i32 %187, %175
  %190 = shl i32 %188, %154
  %191 = or i32 %189, %190, !insn.addr !6413
  %192 = mul i32 %stack_var_-1896.1.in150.reload, 4, !insn.addr !6399
  %193 = add i32 %174, %192, !insn.addr !6399
  %194 = inttoptr i32 %193 to i32*, !insn.addr !6399
  store i32 %191, i32* %194, align 4, !insn.addr !6399
  %195 = icmp eq i32 %stack_var_-1896.1.in150.reload, 0, !insn.addr !6414
  br i1 %195, label %dec_label_pc_45b870, label %dec_label_pc_45b868, !insn.addr !6415

dec_label_pc_45b868:                              ; preds = %dec_label_pc_45b827
  %196 = add nsw i32 %stack_var_-1896.1.in150.reload, -1, !insn.addr !6416
  %197 = add i32 %edx.4151.reload, -4, !insn.addr !6417
  %198 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6418
  %199 = ptrtoint i8* %198 to i32, !insn.addr !6418
  %200 = icmp ult i32 %196, %150, !insn.addr !6391
  store i8* %stack_var_-1892.1232.reload, i8** %stack_var_-1892.1235.reg2mem, !insn.addr !6392
  store i32 %181, i32* %esi.2155.reg2mem, !insn.addr !6392
  store i32 %199, i32* %ebx.4154.reg2mem, !insn.addr !6392
  store i32 %197, i32* %edx.4151.reg2mem, !insn.addr !6392
  store i32 %196, i32* %stack_var_-1896.1.in150.reg2mem, !insn.addr !6392
  br i1 %200, label %dec_label_pc_45b870.thread, label %dec_label_pc_45b809, !insn.addr !6392

dec_label_pc_45b870:                              ; preds = %dec_label_pc_45b827
  %201 = ptrtoint i8* %stack_var_-1892.1232.reload to i32, !insn.addr !6401
  %202 = icmp ult i32 %149, 32
  store i8* %stack_var_-1892.1232.reload, i8** %stack_var_-1892.1233.reg2mem, !insn.addr !6419
  store i32 %201, i32* %.reg2mem301, !insn.addr !6419
  store i8* %stack_var_-1892.1232.reload, i8** %stack_var_-1892.1234.reg2mem, !insn.addr !6419
  store i32 %201, i32* %.reg2mem303, !insn.addr !6419
  br i1 %202, label %dec_label_pc_45b898, label %dec_label_pc_45b886, !insn.addr !6419

dec_label_pc_45b886:                              ; preds = %dec_label_pc_45b870.thread, %dec_label_pc_45b870
  %.reload302 = load i32, i32* %.reg2mem301
  %stack_var_-1892.1233.reload = load i8*, i8** %stack_var_-1892.1233.reg2mem
  %203 = bitcast i8** %stack_var_-468 to i8*, !insn.addr !6420
  call void @__asm_rep_stosd_memset(i8* nonnull %203, i32 0, i32 %150), !insn.addr !6420
  store i8* %stack_var_-1892.1233.reload, i8** %stack_var_-1892.1234.reg2mem, !insn.addr !6421
  store i32 %.reload302, i32* %.reg2mem303, !insn.addr !6421
  br label %dec_label_pc_45b898, !insn.addr !6421

dec_label_pc_45b898:                              ; preds = %dec_label_pc_45b886, %dec_label_pc_45b870
  br i1 %161, label %dec_label_pc_45b8a5, label %dec_label_pc_45b8b0, !insn.addr !6422

dec_label_pc_45b8a5:                              ; preds = %dec_label_pc_45b898
  %.reload304 = load i32, i32* %.reg2mem303
  %204 = add i32 %.reload304, 1, !insn.addr !6423
  %205 = inttoptr i32 %204 to i8*, !insn.addr !6424
  store i8* %205, i8** %stack_var_-472, align 4, !insn.addr !6424
  br label %dec_label_pc_45b8e3, !insn.addr !6425

dec_label_pc_45b8b0:                              ; preds = %dec_label_pc_45b898
  %stack_var_-1892.1234.reload = load i8*, i8** %stack_var_-1892.1234.reg2mem
  store i8* %stack_var_-1892.1234.reload, i8** %stack_var_-472, align 4, !insn.addr !6426
  br label %dec_label_pc_45b8e3, !insn.addr !6427

dec_label_pc_45b8b8:                              ; preds = %dec_label_pc_45b749, %dec_label_pc_45b7cb
  store i8* null, i8** %stack_var_-2424, align 4, !insn.addr !6428
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6429
  %206 = bitcast i8** %stack_var_-1396 to i8*
  store i32 460, i32* %stack_var_-2432, align 4, !insn.addr !6430
  %207 = bitcast i8** %stack_var_-468 to i8*
  %208 = call i32 @memcpy_s_3(i8* nonnull %207, i32 460, i8* nonnull %206, i32 0), !insn.addr !6431
  br label %dec_label_pc_45b8e3, !insn.addr !6432

dec_label_pc_45b8e3:                              ; preds = %dec_label_pc_45b8b8, %dec_label_pc_45b8b0, %dec_label_pc_45b8a5
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-1396, align 4, !insn.addr !6433
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-936, align 4, !insn.addr !6434
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-2424, align 4, !insn.addr !6435
  br label %dec_label_pc_45b72d, !insn.addr !6436

dec_label_pc_45b90a:                              ; preds = %dec_label_pc_45b44e
  %209 = icmp eq i32 %55, 53, !insn.addr !6437
  br i1 %209, label %dec_label_pc_45ba25, label %dec_label_pc_45b913, !insn.addr !6438

dec_label_pc_45b913:                              ; preds = %dec_label_pc_45b90a
  store i8* null, i8** %stack_var_-1396, align 4, !insn.addr !6439
  br i1 %59, label %dec_label_pc_45ba25, label %dec_label_pc_45b938.preheader, !insn.addr !6440

dec_label_pc_45b938.preheader:                    ; preds = %dec_label_pc_45b913
  %210 = add i32 %39, -1392, !insn.addr !6441
  %211 = add i32 %39, -464, !insn.addr !6442
  store i32 0, i32* %ecx.3.reg2mem
  br label %dec_label_pc_45b938

dec_label_pc_45b938:                              ; preds = %dec_label_pc_45b938.preheader, %dec_label_pc_45b94c
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %212 = add i32 %ecx.3.reload, %210, !insn.addr !6441
  %213 = inttoptr i32 %212 to i32*, !insn.addr !6441
  %214 = load i32, i32* %213, align 4, !insn.addr !6441
  %215 = add i32 %ecx.3.reload, %211, !insn.addr !6442
  %216 = inttoptr i32 %215 to i32*, !insn.addr !6442
  %217 = load i32, i32* %216, align 4, !insn.addr !6442
  %218 = icmp eq i32 %214, %217, !insn.addr !6442
  %219 = icmp eq i1 %218, false, !insn.addr !6443
  br i1 %219, label %dec_label_pc_45ba25, label %dec_label_pc_45b94c, !insn.addr !6443

dec_label_pc_45b94c:                              ; preds = %dec_label_pc_45b938
  %220 = add nuw nsw i32 %ecx.3.reload, 4, !insn.addr !6444
  %221 = icmp eq i32 %ecx.3.reload, 4, !insn.addr !6445
  %222 = icmp eq i1 %221, false, !insn.addr !6446
  store i32 %220, i32* %ecx.3.reg2mem, !insn.addr !6446
  br i1 %222, label %dec_label_pc_45b938, label %dec_label_pc_45b954, !insn.addr !6446

dec_label_pc_45b954:                              ; preds = %dec_label_pc_45b94c
  %223 = ptrtoint i8** %stack_var_-472 to i32, !insn.addr !6447
  %224 = mul i32 %62, 4, !insn.addr !6448
  %225 = add i32 %224, %223, !insn.addr !6448
  store i32 %62, i32* %ecx.4.reg2mem, !insn.addr !6449
  store i32 %62, i32* %ebx.7.reg2mem, !insn.addr !6449
  store i32 %225, i32* %esi.4.reg2mem, !insn.addr !6449
  br label %dec_label_pc_45b982, !insn.addr !6449

dec_label_pc_45b982:                              ; preds = %dec_label_pc_45b9c7, %dec_label_pc_45b954
  %esi.4.reload = load i32, i32* %esi.4.reg2mem
  %ebx.7.reload = load i32, i32* %ebx.7.reg2mem
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %226 = icmp ult i32 %ecx.4.reload, %ebx.7.reload, !insn.addr !6450
  %227 = icmp eq i1 %226, false, !insn.addr !6451
  store i32 0, i32* %storemerge45.reg2mem, !insn.addr !6451
  br i1 %227, label %dec_label_pc_45b99c, label %dec_label_pc_45b986, !insn.addr !6451

dec_label_pc_45b986:                              ; preds = %dec_label_pc_45b982
  %228 = mul i32 %ecx.4.reload, 4, !insn.addr !6452
  %229 = add i32 %228, %211, !insn.addr !6452
  %230 = inttoptr i32 %229 to i32*, !insn.addr !6452
  %231 = load i32, i32* %230, align 4, !insn.addr !6452
  store i32 %231, i32* %storemerge45.reg2mem, !insn.addr !6453
  br label %dec_label_pc_45b99c, !insn.addr !6453

dec_label_pc_45b99c:                              ; preds = %dec_label_pc_45b982, %dec_label_pc_45b986
  %storemerge45.reload = load i32, i32* %storemerge45.reg2mem
  %232 = add nsw i32 %ecx.4.reload, -1, !insn.addr !6454
  %233 = icmp ult i32 %232, %ebx.7.reload, !insn.addr !6455
  %234 = icmp eq i1 %233, false, !insn.addr !6456
  store i32 0, i32* %storemerge44.reg2mem, !insn.addr !6456
  br i1 %234, label %dec_label_pc_45b9a9, label %dec_label_pc_45b9a3, !insn.addr !6456

dec_label_pc_45b9a3:                              ; preds = %dec_label_pc_45b99c
  %235 = inttoptr i32 %esi.4.reload to i32*, !insn.addr !6457
  %236 = load i32, i32* %235, align 4, !insn.addr !6457
  store i32 %236, i32* %storemerge44.reg2mem, !insn.addr !6458
  br label %dec_label_pc_45b9a9, !insn.addr !6458

dec_label_pc_45b9a9:                              ; preds = %dec_label_pc_45b99c, %dec_label_pc_45b9a3
  %storemerge44.reload = load i32, i32* %storemerge44.reg2mem
  %237 = udiv i32 %storemerge44.reload, 1073741824, !insn.addr !6459
  %238 = mul i32 %storemerge45.reload, 4, !insn.addr !6460
  %239 = or i32 %237, %238, !insn.addr !6461
  %240 = mul i32 %ecx.4.reload, 4, !insn.addr !6462
  %241 = add i32 %240, %211, !insn.addr !6462
  %242 = inttoptr i32 %241 to i32*, !insn.addr !6462
  store i32 %239, i32* %242, align 4, !insn.addr !6462
  %243 = icmp eq i32 %ecx.4.reload, 0, !insn.addr !6463
  br i1 %243, label %dec_label_pc_45b9cf, label %dec_label_pc_45b9c7, !insn.addr !6464

dec_label_pc_45b9c7:                              ; preds = %dec_label_pc_45b9a9
  %244 = add i32 %esi.4.reload, -4, !insn.addr !6465
  %245 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6466
  %246 = ptrtoint i8* %245 to i32, !insn.addr !6466
  store i32 %232, i32* %ecx.4.reg2mem, !insn.addr !6467
  store i32 %246, i32* %ebx.7.reg2mem, !insn.addr !6467
  store i32 %244, i32* %esi.4.reg2mem, !insn.addr !6467
  br label %dec_label_pc_45b982, !insn.addr !6467

dec_label_pc_45b9cf:                              ; preds = %dec_label_pc_45b9a9
  %247 = call i32 @llvm.ctlz.i32(i32 %54, i1 false), !range !1997, !insn.addr !6468
  %248 = icmp ult i32 %247, 2, !insn.addr !6469
  %249 = zext i1 %248 to i32
  %storemerge43.in = add nuw nsw i32 %62, %249
  %storemerge43 = inttoptr i32 %storemerge43.in to i8*
  store i8* %storemerge43, i8** %stack_var_-472, align 4
  %250 = sub nsw i32 1077, %55, !insn.addr !6470
  %251 = udiv i32 %250, 32, !insn.addr !6471
  %252 = mul i32 %251, 4, !insn.addr !6472
  %253 = inttoptr i32 %252 to i8*, !insn.addr !6473
  store i8* %253, i8** %stack_var_-2424, align 4, !insn.addr !6473
  %254 = ptrtoint i8** %stack_var_-1396 to i32, !insn.addr !6474
  store i32 %254, i32* %stack_var_-2432, align 4, !insn.addr !6474
  %255 = bitcast i8** %stack_var_-1396 to i8*
  call void @memset(i8* nonnull %255, i8 0, i32 %252), !insn.addr !6475
  %256 = and i32 %250, 31, !insn.addr !6476
  %257 = shl i32 1, %256
  %258 = add i32 %210, %252, !insn.addr !6477
  %259 = inttoptr i32 %258 to i32*, !insn.addr !6477
  store i32 %257, i32* %259, align 4, !insn.addr !6477
  store i8* %255, i8** %.pre-phi.reg2mem, !insn.addr !6478
  store i32 %251, i32* %edi.4.reg2mem, !insn.addr !6478
  br label %dec_label_pc_45baf7, !insn.addr !6478

dec_label_pc_45ba25:                              ; preds = %dec_label_pc_45b938, %dec_label_pc_45b913, %dec_label_pc_45b90a
  %260 = mul i32 %62, 4, !insn.addr !6479
  %261 = add i32 %39, -468, !insn.addr !6479
  %262 = add i32 %261, %260, !insn.addr !6479
  %263 = inttoptr i32 %262 to i32*, !insn.addr !6479
  %264 = load i32, i32* %263, align 4, !insn.addr !6479
  %265 = ptrtoint i8** %stack_var_-472 to i32, !insn.addr !6480
  %266 = add i32 %260, %265, !insn.addr !6481
  %267 = add i32 %39, -464
  store i32 %62, i32* %ecx.5.reg2mem, !insn.addr !6482
  store i32 %62, i32* %ebx.8.reg2mem, !insn.addr !6482
  store i32 %266, i32* %esi.5.reg2mem, !insn.addr !6482
  br label %dec_label_pc_45ba5a, !insn.addr !6482

dec_label_pc_45ba5a:                              ; preds = %dec_label_pc_45ba9e, %dec_label_pc_45ba25
  %esi.5.reload = load i32, i32* %esi.5.reg2mem
  %ebx.8.reload = load i32, i32* %ebx.8.reg2mem
  %ecx.5.reload = load i32, i32* %ecx.5.reg2mem
  %268 = icmp ult i32 %ecx.5.reload, %ebx.8.reload, !insn.addr !6483
  %269 = icmp eq i1 %268, false, !insn.addr !6484
  store i32 0, i32* %storemerge50.reg2mem, !insn.addr !6484
  br i1 %269, label %dec_label_pc_45ba74, label %dec_label_pc_45ba5e, !insn.addr !6484

dec_label_pc_45ba5e:                              ; preds = %dec_label_pc_45ba5a
  %270 = mul i32 %ecx.5.reload, 4, !insn.addr !6485
  %271 = add i32 %270, %267, !insn.addr !6485
  %272 = inttoptr i32 %271 to i32*, !insn.addr !6485
  %273 = load i32, i32* %272, align 4, !insn.addr !6485
  store i32 %273, i32* %storemerge50.reg2mem, !insn.addr !6486
  br label %dec_label_pc_45ba74, !insn.addr !6486

dec_label_pc_45ba74:                              ; preds = %dec_label_pc_45ba5a, %dec_label_pc_45ba5e
  %storemerge50.reload = load i32, i32* %storemerge50.reg2mem
  %274 = add nsw i32 %ecx.5.reload, -1, !insn.addr !6487
  %275 = icmp ult i32 %274, %ebx.8.reload, !insn.addr !6488
  %276 = icmp eq i1 %275, false, !insn.addr !6489
  store i32 0, i32* %storemerge49.reg2mem, !insn.addr !6489
  br i1 %276, label %dec_label_pc_45ba81, label %dec_label_pc_45ba7b, !insn.addr !6489

dec_label_pc_45ba7b:                              ; preds = %dec_label_pc_45ba74
  %277 = inttoptr i32 %esi.5.reload to i32*, !insn.addr !6490
  %278 = load i32, i32* %277, align 4, !insn.addr !6490
  store i32 %278, i32* %storemerge49.reg2mem, !insn.addr !6491
  br label %dec_label_pc_45ba81, !insn.addr !6491

dec_label_pc_45ba81:                              ; preds = %dec_label_pc_45ba74, %dec_label_pc_45ba7b
  %storemerge49.reload = load i32, i32* %storemerge49.reg2mem
  %279 = lshr i32 %storemerge49.reload, 31, !insn.addr !6492
  %280 = mul i32 %storemerge50.reload, 2, !insn.addr !6493
  %281 = or i32 %279, %280, !insn.addr !6494
  %282 = mul i32 %ecx.5.reload, 4, !insn.addr !6495
  %283 = add i32 %282, %267, !insn.addr !6495
  %284 = inttoptr i32 %283 to i32*, !insn.addr !6495
  store i32 %281, i32* %284, align 4, !insn.addr !6495
  %285 = icmp eq i32 %ecx.5.reload, 0, !insn.addr !6496
  br i1 %285, label %dec_label_pc_45baa6, label %dec_label_pc_45ba9e, !insn.addr !6497

dec_label_pc_45ba9e:                              ; preds = %dec_label_pc_45ba81
  %286 = add i32 %esi.5.reload, -4, !insn.addr !6498
  %287 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6499
  %288 = ptrtoint i8* %287 to i32, !insn.addr !6499
  store i32 %274, i32* %ecx.5.reg2mem, !insn.addr !6500
  store i32 %288, i32* %ebx.8.reg2mem, !insn.addr !6500
  store i32 %286, i32* %esi.5.reg2mem, !insn.addr !6500
  br label %dec_label_pc_45ba5a, !insn.addr !6500

dec_label_pc_45baa6:                              ; preds = %dec_label_pc_45ba81
  %289 = icmp slt i32 %264, 0, !insn.addr !6501
  %290 = zext i1 %289 to i32
  %storemerge48.in = add nuw nsw i32 %62, %290
  %storemerge48 = inttoptr i32 %storemerge48.in to i8*
  store i8* %storemerge48, i8** %stack_var_-472, align 4
  %291 = sub nsw i32 1076, %55, !insn.addr !6502
  %292 = udiv i32 %291, 32, !insn.addr !6503
  %293 = mul i32 %292, 4, !insn.addr !6504
  %294 = inttoptr i32 %293 to i8*, !insn.addr !6505
  store i8* %294, i8** %stack_var_-2424, align 4, !insn.addr !6505
  %295 = ptrtoint i8** %stack_var_-1396 to i32, !insn.addr !6506
  store i32 %295, i32* %stack_var_-2432, align 4, !insn.addr !6506
  %296 = bitcast i8** %stack_var_-1396 to i8*
  call void @memset(i8* nonnull %296, i8 0, i32 %293), !insn.addr !6507
  %297 = and i32 %291, 31, !insn.addr !6508
  %298 = shl i32 1, %297
  %299 = add i32 %39, -1392, !insn.addr !6509
  %300 = add i32 %299, %293, !insn.addr !6509
  %301 = inttoptr i32 %300 to i32*, !insn.addr !6509
  store i32 %298, i32* %301, align 4, !insn.addr !6509
  store i8* %296, i8** %.pre-phi.reg2mem, !insn.addr !6509
  store i32 %292, i32* %edi.4.reg2mem, !insn.addr !6509
  br label %dec_label_pc_45baf7, !insn.addr !6509

dec_label_pc_45baf7:                              ; preds = %dec_label_pc_45baa6, %dec_label_pc_45b9cf
  %edi.4.reload = load i32, i32* %edi.4.reg2mem
  %.pre-phi.reload = load i8*, i8** %.pre-phi.reg2mem
  %302 = add nuw nsw i32 %edi.4.reload, 1, !insn.addr !6510
  %303 = inttoptr i32 %302 to i8*, !insn.addr !6511
  store i8* %303, i8** %stack_var_-936, align 4, !insn.addr !6511
  %304 = mul i32 %302, 4, !insn.addr !6512
  %305 = bitcast i8** %stack_var_-932 to i8*
  %306 = call i32 @memcpy_s_3(i8* nonnull %305, i32 460, i8* nonnull %.pre-phi.reload, i32 %304), !insn.addr !6513
  br label %dec_label_pc_45bb26, !insn.addr !6514

dec_label_pc_45bb26:                              ; preds = %dec_label_pc_45baf7, %dec_label_pc_45b72d
  store i8* inttoptr (i32 10 to i8*), i8** %stack_var_-2424, align 4, !insn.addr !6515
  %307 = ptrtoint i32* %stack_var_-2420 to i32, !insn.addr !6516
  br i1 icmp slt (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 0), label %dec_label_pc_45bf93, label %dec_label_pc_45bb3f, !insn.addr !6517

dec_label_pc_45bb3f:                              ; preds = %dec_label_pc_45bb26
  br i1 or (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i1 icmp ult (i32 ptrtoint (i32* @80 to i32), i32 10)), label %dec_label_pc_45beb9, label %dec_label_pc_45bb57.preheader, !insn.addr !6518

dec_label_pc_45bb57.preheader:                    ; preds = %dec_label_pc_45bb3f
  %308 = add i32 %307, -4
  %309 = inttoptr i32 %308 to i32*
  %310 = add i32 %307, -8
  %311 = inttoptr i32 %310 to i32*
  %312 = add i32 %307, -12
  %313 = inttoptr i32 %312 to i32*
  %314 = ptrtoint i8** %stack_var_-1396 to i32, !insn.addr !6519
  %315 = add i32 %307, -16
  %316 = inttoptr i32 %315 to i32*
  %317 = add i32 %307, -20
  %318 = inttoptr i32 %317 to i32*
  %319 = add i32 %307, -24
  %320 = inttoptr i32 %319 to i32*
  %321 = ptrtoint i8** %stack_var_-932 to i32
  %322 = add i32 %39, -1856
  %323 = ptrtoint i32* %stack_var_-2404 to i32
  %324 = add i32 %39, -928
  %325 = ptrtoint i32* %stack_var_-1860 to i32
  store i32 udiv (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 10), i32* %stack_var_-1908.0.in.reg2mem
  br label %dec_label_pc_45bb57

dec_label_pc_45bb57:                              ; preds = %dec_label_pc_45bb57.preheader, %dec_label_pc_45be9b
  %stack_var_-1908.0.in.reload = load i32, i32* %stack_var_-1908.0.in.reg2mem
  %326 = icmp ult i32 %stack_var_-1908.0.in.reload, 39
  store i32 %stack_var_-1908.0.in.reload, i32* %eax.5.reg2mem, !insn.addr !6520
  br i1 %326, label %dec_label_pc_45bb5f, label %dec_label_pc_45bb5c, !insn.addr !6520

dec_label_pc_45bb5c:                              ; preds = %dec_label_pc_45bb57
  store i32 38, i32* %309, align 4, !insn.addr !6521
  store i32 38, i32* %eax.5.reg2mem, !insn.addr !6522
  br label %dec_label_pc_45bb5f, !insn.addr !6522

dec_label_pc_45bb5f:                              ; preds = %dec_label_pc_45bb5c, %dec_label_pc_45bb57
  %stack_var_-1908.0 = inttoptr i32 %stack_var_-1908.0.in.reload to i8*
  %eax.5.reload = load i32, i32* %eax.5.reg2mem
  %327 = mul i32 %eax.5.reload, 4, !insn.addr !6523
  %328 = add i32 %327, ptrtoint (i8** @global_var_478b6e to i32), !insn.addr !6523
  %329 = inttoptr i32 %328 to i8*, !insn.addr !6523
  %330 = load i8, i8* %329, align 4, !insn.addr !6523
  %331 = zext i8 %330 to i32, !insn.addr !6523
  %332 = add i32 %327, ptrtoint (i8** @global_var_478b6f to i32), !insn.addr !6524
  %333 = inttoptr i32 %332 to i8*, !insn.addr !6524
  %334 = load i8, i8* %333, align 4, !insn.addr !6524
  %335 = zext i8 %334 to i32, !insn.addr !6524
  %336 = mul i32 %331, 4, !insn.addr !6525
  store i32 %336, i32* %309, align 4, !insn.addr !6526
  %337 = add nuw nsw i32 %335, %331, !insn.addr !6527
  store i32 0, i32* %311, align 4, !insn.addr !6528
  store i32 %314, i32* %313, align 4, !insn.addr !6519
  call void @memset(i8* %stack_var_-1908.0, i8 ptrtoint (i32* @80 to i8), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6529
  %338 = mul i32 %335, 4, !insn.addr !6530
  store i32 %338, i32* %316, align 4, !insn.addr !6531
  %339 = add i32 %327, ptrtoint (i16** @global_var_478b6c to i32), !insn.addr !6532
  %340 = inttoptr i32 %339 to i16*, !insn.addr !6532
  %341 = load i16, i16* %340, align 4, !insn.addr !6532
  %342 = zext i16 %341 to i32, !insn.addr !6532
  %343 = mul i32 %342, 4, !insn.addr !6533
  %344 = add i32 %343, ptrtoint ([578 x i32]* @large_power_data to i32), !insn.addr !6533
  store i32 %344, i32* %318, align 4, !insn.addr !6534
  %345 = add i32 %336, %314, !insn.addr !6535
  store i32 %345, i32* %320, align 4, !insn.addr !6536
  call void @memcpy(i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6537
  %346 = icmp ult i32 %337, 2
  br i1 %346, label %dec_label_pc_45bbca, label %dec_label_pc_45bc3c, !insn.addr !6538

dec_label_pc_45bbca:                              ; preds = %dec_label_pc_45bb5f
  %347 = load i8*, i8** %stack_var_-1396, align 4, !insn.addr !6539
  %348 = icmp eq i8* %347, null, !insn.addr !6540
  %349 = icmp eq i1 %348, false, !insn.addr !6541
  br i1 %349, label %dec_label_pc_45bbe7, label %dec_label_pc_45bbd4, !insn.addr !6541

dec_label_pc_45bbd4:                              ; preds = %dec_label_pc_45bbca
  store i8* null, i8** %stack_var_-936, align 4, !insn.addr !6542
  store i32 0, i32* %storemerge167.reg2mem, !insn.addr !6543
  store i32 %325, i32* %storemerge27.reg2mem, !insn.addr !6543
  br label %dec_label_pc_45be84, !insn.addr !6543

dec_label_pc_45bbe7:                              ; preds = %dec_label_pc_45bbca
  %350 = icmp eq i8* %347, inttoptr (i32 1 to i8*), !insn.addr !6544
  %351 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6545
  %352 = icmp eq i8* %351, null, !insn.addr !6545
  %or.cond = or i1 %350, %352
  br i1 %or.cond, label %dec_label_pc_45be9b, label %dec_label_pc_45bbfd, !insn.addr !6546

dec_label_pc_45bbfd:                              ; preds = %dec_label_pc_45bbe7
  %353 = ptrtoint i8* %347 to i32, !insn.addr !6539
  %354 = ptrtoint i8* %351 to i32, !insn.addr !6547
  %355 = zext i32 %353 to i64, !insn.addr !6548
  store i32 0, i32* %ecx.6.reg2mem, !insn.addr !6549
  store i32 0, i32* %esi.6.reg2mem, !insn.addr !6549
  br label %dec_label_pc_45bc09, !insn.addr !6549

dec_label_pc_45bc09:                              ; preds = %dec_label_pc_45bc09, %dec_label_pc_45bbfd
  %esi.6.reload = load i32, i32* %esi.6.reg2mem
  %ecx.6.reload = load i32, i32* %ecx.6.reg2mem
  %356 = mul i32 %esi.6.reload, 4, !insn.addr !6548
  %357 = add i32 %356, %324, !insn.addr !6548
  %358 = inttoptr i32 %357 to i32*, !insn.addr !6548
  %359 = load i32, i32* %358, align 4, !insn.addr !6548
  %360 = zext i32 %359 to i64, !insn.addr !6548
  %361 = mul nuw i64 %360, %355, !insn.addr !6548
  %362 = trunc i64 %361 to i32, !insn.addr !6548
  %363 = udiv i64 %361, 4294967296, !insn.addr !6548
  %364 = trunc i64 %363 to i32, !insn.addr !6548
  %365 = add i32 %ecx.6.reload, %362, !insn.addr !6550
  %366 = icmp ult i32 %365, %362, !insn.addr !6550
  store i32 %365, i32* %358, align 4, !insn.addr !6551
  %367 = zext i1 %366 to i32, !insn.addr !6552
  %368 = add i32 %367, %364, !insn.addr !6552
  %369 = add i32 %esi.6.reload, 1, !insn.addr !6553
  %370 = icmp eq i32 %369, %354, !insn.addr !6554
  %371 = icmp eq i1 %370, false, !insn.addr !6555
  store i32 %368, i32* %ecx.6.reg2mem, !insn.addr !6555
  store i32 %369, i32* %esi.6.reg2mem, !insn.addr !6555
  store i32 %368, i32* %ecx.8.reg2mem, !insn.addr !6555
  br i1 %371, label %dec_label_pc_45bc09, label %dec_label_pc_45bcda, !insn.addr !6555

dec_label_pc_45bc2a:                              ; preds = %dec_label_pc_45bce7
  %372 = ptrtoint i8* %410 to i32, !insn.addr !6556
  %373 = mul i32 %372, 4, !insn.addr !6557
  %374 = add i32 %373, %324, !insn.addr !6557
  %375 = inttoptr i32 %374 to i32*, !insn.addr !6557
  store i32 %ecx.8.reload, i32* %375, align 4, !insn.addr !6557
  %376 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6558
  %377 = ptrtoint i8* %376 to i32, !insn.addr !6558
  %378 = add i32 %377, 1, !insn.addr !6558
  %379 = inttoptr i32 %378 to i8*, !insn.addr !6558
  store i8* %379, i8** %stack_var_-936, align 4, !insn.addr !6558
  br label %dec_label_pc_45be9b, !insn.addr !6559

dec_label_pc_45bc3c:                              ; preds = %dec_label_pc_45bb5f
  %380 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6560
  %switch = icmp ult i8* %380, inttoptr (i32 2 to i8*)
  br i1 %switch, label %dec_label_pc_45bc49, label %dec_label_pc_45bd10

dec_label_pc_45bc49:                              ; preds = %dec_label_pc_45bc3c
  %381 = load i8*, i8** %stack_var_-932, align 4, !insn.addr !6561
  %382 = mul i32 %337, 4, !insn.addr !6562
  store i32 %382, i32* %309, align 4, !insn.addr !6563
  store i32 %314, i32* %311, align 4, !insn.addr !6564
  %383 = inttoptr i32 %337 to i8*, !insn.addr !6565
  store i8* %383, i8** %stack_var_-936, align 4, !insn.addr !6565
  store i32 460, i32* %313, align 4, !insn.addr !6566
  store i32 %321, i32* %316, align 4, !insn.addr !6567
  %384 = call i32 @memcpy_s_3(i8* %381, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6568
  %385 = icmp eq i8* %381, null, !insn.addr !6569
  %386 = icmp eq i1 %385, false, !insn.addr !6570
  br i1 %386, label %dec_label_pc_45bc96, label %dec_label_pc_45bc7c, !insn.addr !6570

dec_label_pc_45bc7c:                              ; preds = %dec_label_pc_45bc49
  store i8* null, i8** %stack_var_-936, align 4, !insn.addr !6571
  store i32 0, i32* %storemerge167.reg2mem, !insn.addr !6572
  store i32 %314, i32* %storemerge27.reg2mem, !insn.addr !6572
  br label %dec_label_pc_45be84, !insn.addr !6572

dec_label_pc_45bc96:                              ; preds = %dec_label_pc_45bc49
  %387 = icmp eq i8* %381, inttoptr (i32 1 to i8*), !insn.addr !6573
  %388 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6574
  %389 = icmp eq i8* %388, null, !insn.addr !6574
  %or.cond61 = or i1 %387, %389
  br i1 %or.cond61, label %dec_label_pc_45be9b, label %dec_label_pc_45bcac, !insn.addr !6575

dec_label_pc_45bcac:                              ; preds = %dec_label_pc_45bc96
  %390 = ptrtoint i8* %388 to i32, !insn.addr !6576
  %391 = ptrtoint i8* %381 to i32, !insn.addr !6577
  %392 = zext i32 %391 to i64, !insn.addr !6578
  store i32 0, i32* %ecx.7.reg2mem, !insn.addr !6579
  store i32 0, i32* %esi.7.reg2mem, !insn.addr !6579
  br label %dec_label_pc_45bcbe, !insn.addr !6579

dec_label_pc_45bcbe:                              ; preds = %dec_label_pc_45bcbe, %dec_label_pc_45bcac
  %esi.7.reload = load i32, i32* %esi.7.reg2mem
  %ecx.7.reload = load i32, i32* %ecx.7.reg2mem
  %393 = mul i32 %esi.7.reload, 4, !insn.addr !6578
  %394 = add i32 %393, %324, !insn.addr !6578
  %395 = inttoptr i32 %394 to i32*, !insn.addr !6578
  %396 = load i32, i32* %395, align 4, !insn.addr !6578
  %397 = zext i32 %396 to i64, !insn.addr !6578
  %398 = mul nuw i64 %397, %392, !insn.addr !6578
  %399 = trunc i64 %398 to i32, !insn.addr !6578
  %400 = udiv i64 %398, 4294967296, !insn.addr !6578
  %401 = trunc i64 %400 to i32, !insn.addr !6578
  %402 = add i32 %ecx.7.reload, %399, !insn.addr !6580
  %403 = icmp ult i32 %402, %399, !insn.addr !6580
  store i32 %402, i32* %395, align 4, !insn.addr !6581
  %404 = zext i1 %403 to i32, !insn.addr !6582
  %405 = add i32 %404, %401, !insn.addr !6582
  %406 = add i32 %esi.7.reload, 1, !insn.addr !6583
  %407 = icmp eq i32 %406, %390, !insn.addr !6584
  %408 = icmp eq i1 %407, false, !insn.addr !6585
  store i32 %405, i32* %ecx.7.reg2mem, !insn.addr !6585
  store i32 %406, i32* %esi.7.reg2mem, !insn.addr !6585
  store i32 %405, i32* %ecx.8.reg2mem, !insn.addr !6585
  br i1 %408, label %dec_label_pc_45bcbe, label %dec_label_pc_45bcda, !insn.addr !6585

dec_label_pc_45bcda:                              ; preds = %dec_label_pc_45bcbe, %dec_label_pc_45bc09
  %ecx.8.reload = load i32, i32* %ecx.8.reg2mem
  %409 = icmp eq i32 %ecx.8.reload, 0, !insn.addr !6586
  br i1 %409, label %dec_label_pc_45be9b, label %dec_label_pc_45bce7, !insn.addr !6587

dec_label_pc_45bce7:                              ; preds = %dec_label_pc_45bcda
  %410 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6556
  %411 = icmp ult i8* %410, inttoptr (i32 115 to i8*), !insn.addr !6588
  store i32 %314, i32* %storemerge28.reg2mem, !insn.addr !6589
  br i1 %411, label %dec_label_pc_45bc2a, label %dec_label_pc_45bef8, !insn.addr !6589

dec_label_pc_45bd10:                              ; preds = %dec_label_pc_45bc3c
  %412 = ptrtoint i8* %380 to i32, !insn.addr !6590
  %413 = icmp ult i32 %337, %412, !insn.addr !6590
  %414 = icmp eq i1 %413, false, !insn.addr !6591
  %ecx.10 = select i1 %414, i32 %412, i32 %337
  %415 = icmp eq i32 %ecx.10, 0, !insn.addr !6592
  store i32 0, i32* %eax.12.reg2mem, !insn.addr !6593
  br i1 %415, label %dec_label_pc_45be74, label %dec_label_pc_45bd79.preheader, !insn.addr !6593

dec_label_pc_45bd79.preheader:                    ; preds = %dec_label_pc_45bd10
  %spec.select84 = select i1 %413, i32 %314, i32 %321
  %416 = icmp eq i1 %414, false, !insn.addr !6594
  %ecx.9 = select i1 %416, i32 %321, i32 %314
  %edi.5 = select i1 %414, i32 %337, i32 %412
  %417 = inttoptr i32 %337 to i8*
  %storemerge29 = select i1 %414, i8* %380, i8* %417
  %418 = icmp eq i32 %edi.5, 0
  %419 = ptrtoint i8* %storemerge29 to i32
  store i8* null, i8** %stack_var_-1864.0.reg2mem
  store i32 0, i32* %eax.7.reg2mem
  store i32 %ecx.10, i32* %ecx.11.reg2mem
  store i32 0, i32* %esi.8.reg2mem
  br label %dec_label_pc_45bd79

dec_label_pc_45bd79:                              ; preds = %dec_label_pc_45bd79.preheader, %dec_label_pc_45be6b
  %esi.8.reload = load i32, i32* %esi.8.reg2mem
  %eax.7.reload = load i32, i32* %eax.7.reg2mem
  %stack_var_-1864.0.reload = load i8*, i8** %stack_var_-1864.0.reg2mem
  %420 = mul i32 %esi.8.reload, 4, !insn.addr !6595
  %421 = add i32 %420, %spec.select84
  %422 = inttoptr i32 %421 to i32*
  %423 = load i32, i32* %422, align 4, !insn.addr !6595
  %424 = icmp eq i32 %423, 0, !insn.addr !6595
  %425 = icmp eq i1 %424, false, !insn.addr !6596
  br i1 %425, label %dec_label_pc_45bd9d, label %dec_label_pc_45bd7f, !insn.addr !6596

dec_label_pc_45bd7f:                              ; preds = %dec_label_pc_45bd79
  %ecx.11.reload = load i32, i32* %ecx.11.reg2mem
  %426 = icmp eq i32 %esi.8.reload, %eax.7.reload, !insn.addr !6597
  %427 = icmp eq i1 %426, false, !insn.addr !6598
  store i8* %stack_var_-1864.0.reload, i8** %stack_var_-1864.6.reg2mem, !insn.addr !6598
  store i32 %eax.7.reload, i32* %eax.11.reg2mem, !insn.addr !6598
  store i32 %ecx.11.reload, i32* %ecx.15.reg2mem, !insn.addr !6598
  br i1 %427, label %dec_label_pc_45be6b, label %dec_label_pc_45bd87, !insn.addr !6598

dec_label_pc_45bd87:                              ; preds = %dec_label_pc_45bd7f
  %428 = add i32 %420, %322, !insn.addr !6599
  %429 = inttoptr i32 %428 to i32*, !insn.addr !6599
  store i32 0, i32* %429, align 4, !insn.addr !6599
  %430 = add i32 %esi.8.reload, 1, !insn.addr !6600
  %431 = inttoptr i32 %430 to i8*, !insn.addr !6601
  store i8* %431, i8** %stack_var_-1864.6.reg2mem, !insn.addr !6602
  store i32 %430, i32* %eax.11.reg2mem, !insn.addr !6602
  store i32 %ecx.11.reload, i32* %ecx.15.reg2mem, !insn.addr !6602
  br label %dec_label_pc_45be6b, !insn.addr !6602

dec_label_pc_45bd9d:                              ; preds = %dec_label_pc_45bd79
  store i8* %stack_var_-1864.0.reload, i8** %stack_var_-1864.5.reg2mem, !insn.addr !6603
  store i32 %eax.7.reload, i32* %eax.10.reg2mem, !insn.addr !6603
  store i32 %esi.8.reload, i32* %ecx.14.reg2mem, !insn.addr !6603
  br i1 %418, label %dec_label_pc_45be56, label %dec_label_pc_45bdb5.preheader, !insn.addr !6603

dec_label_pc_45bdb5.preheader:                    ; preds = %dec_label_pc_45bd9d
  %432 = icmp eq i32 %esi.8.reload, 115, !insn.addr !6604
  store i32 %323, i32* %storemerge28.reg2mem, !insn.addr !6605
  br i1 %432, label %dec_label_pc_45bef8, label %dec_label_pc_45bdba.lr.ph, !insn.addr !6605

dec_label_pc_45bdba.lr.ph:                        ; preds = %dec_label_pc_45bdb5.preheader
  %433 = add i32 %esi.8.reload, 1
  store i32 %esi.8.reload, i32* %ecx.12134.reg2mem
  store i32 %eax.7.reload, i32* %eax.8133.reg2mem
  store i8* %stack_var_-1864.0.reload, i8** %stack_var_-1864.1132.reg2mem
  store i8* null, i8** %stack_var_-1896.2131.reg2mem
  store i32 0, i32* %stack_var_-1880.0130.reg2mem
  br label %dec_label_pc_45bdba

dec_label_pc_45bdb5:                              ; preds = %dec_label_pc_45bdd5
  %434 = inttoptr i32 %459 to i8*, !insn.addr !6606
  %435 = icmp eq i32 %461, 115, !insn.addr !6604
  store i32 %461, i32* %ecx.12134.reg2mem, !insn.addr !6605
  store i32 %464, i32* %eax.8133.reg2mem, !insn.addr !6605
  store i8* %stack_var_-1864.2.reload, i8** %stack_var_-1864.1132.reg2mem, !insn.addr !6605
  store i8* %434, i8** %stack_var_-1896.2131.reg2mem, !insn.addr !6605
  store i32 %460, i32* %stack_var_-1880.0130.reg2mem, !insn.addr !6605
  br i1 %435, label %dec_label_pc_45be1e.preheader, label %dec_label_pc_45bdba, !insn.addr !6605

dec_label_pc_45bdba:                              ; preds = %dec_label_pc_45bdba.lr.ph, %dec_label_pc_45bdb5
  %stack_var_-1880.0130.reload = load i32, i32* %stack_var_-1880.0130.reg2mem
  %stack_var_-1896.2131.reload = load i8*, i8** %stack_var_-1896.2131.reg2mem
  %eax.8133.reload = load i32, i32* %eax.8133.reg2mem
  %ecx.12134.reload = load i32, i32* %ecx.12134.reg2mem
  %436 = icmp eq i32 %ecx.12134.reload, %eax.8133.reload, !insn.addr !6607
  %437 = icmp eq i1 %436, false, !insn.addr !6608
  %.pre221 = mul i32 %ecx.12134.reload, 4
  %.pre223 = add i32 %.pre221, %322
  %.pre225 = inttoptr i32 %.pre223 to i32*
  br i1 %437, label %dec_label_pc_45bdba.dec_label_pc_45bdd5_crit_edge, label %dec_label_pc_45bdbe, !insn.addr !6608

dec_label_pc_45bdba.dec_label_pc_45bdd5_crit_edge: ; preds = %dec_label_pc_45bdba
  %stack_var_-1864.1132.reload = load i8*, i8** %stack_var_-1864.1132.reg2mem
  %.pre279 = load i32, i32* %.pre225, align 4
  store i32 %.pre279, i32* %.reg2mem305
  store i8* %stack_var_-1864.1132.reload, i8** %stack_var_-1864.2.reg2mem
  br label %dec_label_pc_45bdd5

dec_label_pc_45bdbe:                              ; preds = %dec_label_pc_45bdba
  store i32 0, i32* %.pre225, align 4, !insn.addr !6609
  %438 = add i32 %433, %stack_var_-1880.0130.reload, !insn.addr !6610
  %439 = inttoptr i32 %438 to i8*, !insn.addr !6611
  store i32 0, i32* %.reg2mem305, !insn.addr !6611
  store i8* %439, i8** %stack_var_-1864.2.reg2mem, !insn.addr !6611
  br label %dec_label_pc_45bdd5, !insn.addr !6611

dec_label_pc_45bdd5:                              ; preds = %dec_label_pc_45bdba.dec_label_pc_45bdd5_crit_edge, %dec_label_pc_45bdbe
  %stack_var_-1864.2.reload = load i8*, i8** %stack_var_-1864.2.reg2mem
  %.reload306 = load i32, i32* %.reg2mem305, !insn.addr !6612
  %440 = mul i32 %stack_var_-1880.0130.reload, 4, !insn.addr !6613
  %441 = add i32 %440, %ecx.9, !insn.addr !6613
  %442 = inttoptr i32 %441 to i32*, !insn.addr !6613
  %443 = load i32, i32* %442, align 4, !insn.addr !6613
  %444 = load i32, i32* %422, align 4, !insn.addr !6614
  %445 = zext i32 %444 to i64, !insn.addr !6614
  %446 = zext i32 %443 to i64, !insn.addr !6614
  %447 = mul nuw i64 %445, %446, !insn.addr !6614
  %448 = trunc i64 %447 to i32, !insn.addr !6614
  %449 = udiv i64 %447, 4294967296, !insn.addr !6614
  %450 = trunc i64 %449 to i32, !insn.addr !6614
  %451 = ptrtoint i8* %stack_var_-1896.2131.reload to i32, !insn.addr !6615
  %452 = add i32 %448, %451, !insn.addr !6615
  %453 = icmp ult i32 %452, %448, !insn.addr !6615
  %454 = zext i1 %453 to i32, !insn.addr !6616
  %455 = add i32 %454, %450, !insn.addr !6616
  %456 = add i32 %452, %.reload306, !insn.addr !6612
  %457 = icmp ult i32 %456, %.reload306, !insn.addr !6612
  store i32 %456, i32* %.pre225, align 4, !insn.addr !6612
  %458 = zext i1 %457 to i32, !insn.addr !6617
  %459 = add i32 %455, %458, !insn.addr !6617
  %460 = add i32 %stack_var_-1880.0130.reload, 1, !insn.addr !6618
  %461 = add i32 %ecx.12134.reload, 1, !insn.addr !6619
  %462 = icmp eq i32 %460, %edi.5, !insn.addr !6620
  %463 = icmp eq i1 %462, false, !insn.addr !6621
  %464 = ptrtoint i8* %stack_var_-1864.2.reload to i32
  br i1 %463, label %dec_label_pc_45bdb5, label %dec_label_pc_45be1e.preheader, !insn.addr !6621

dec_label_pc_45be1e.preheader:                    ; preds = %dec_label_pc_45bdd5, %dec_label_pc_45bdb5
  %465 = icmp eq i32 %459, 0, !insn.addr !6622
  store i32 %459, i32* %edx.9146.reg2mem, !insn.addr !6623
  store i32 %461, i32* %ecx.13145.reg2mem, !insn.addr !6623
  store i32 %464, i32* %eax.9144.reg2mem, !insn.addr !6623
  store i8* %stack_var_-1864.2.reload, i8** %stack_var_-1864.5.reg2mem, !insn.addr !6623
  store i32 %464, i32* %eax.10.reg2mem, !insn.addr !6623
  store i32 %461, i32* %ecx.14.reg2mem, !insn.addr !6623
  br i1 %465, label %dec_label_pc_45be56, label %dec_label_pc_45be22, !insn.addr !6623

dec_label_pc_45be22:                              ; preds = %dec_label_pc_45be1e.preheader, %dec_label_pc_45be40
  %ecx.13145.reload = load i32, i32* %ecx.13145.reg2mem
  %466 = icmp eq i32 %ecx.13145.reload, 115, !insn.addr !6624
  store i32 %323, i32* %storemerge28.reg2mem, !insn.addr !6625
  br i1 %466, label %dec_label_pc_45bef8, label %dec_label_pc_45be2b, !insn.addr !6625

dec_label_pc_45be2b:                              ; preds = %dec_label_pc_45be22
  %eax.9144.reload = load i32, i32* %eax.9144.reg2mem
  %edx.9146.reload = load i32, i32* %edx.9146.reg2mem
  %467 = icmp eq i32 %ecx.13145.reload, %eax.9144.reload, !insn.addr !6626
  %468 = icmp eq i1 %467, false, !insn.addr !6627
  %.pre213 = mul i32 %ecx.13145.reload, 4
  %.pre215 = add i32 %.pre213, %322
  %.pre217 = inttoptr i32 %.pre215 to i32*
  %.pre219 = add i32 %ecx.13145.reload, 1
  br i1 %468, label %dec_label_pc_45be40, label %dec_label_pc_45be40.thread, !insn.addr !6627

dec_label_pc_45be40.thread:                       ; preds = %dec_label_pc_45be2b
  %469 = inttoptr i32 %.pre219 to i8*, !insn.addr !6628
  store i32 %edx.9146.reload, i32* %.pre217, align 4, !insn.addr !6629
  store i8* %469, i8** %stack_var_-1864.5.reg2mem
  store i32 %.pre219, i32* %eax.10.reg2mem
  store i32 %.pre219, i32* %ecx.14.reg2mem
  br label %dec_label_pc_45be56

dec_label_pc_45be40:                              ; preds = %dec_label_pc_45be2b
  %.pre280 = load i32, i32* %.pre217, align 4
  %470 = add i32 %.pre280, %edx.9146.reload, !insn.addr !6629
  %471 = icmp ult i32 %470, %.pre280, !insn.addr !6629
  store i32 %470, i32* %.pre217, align 4, !insn.addr !6629
  %472 = ptrtoint i8* %stack_var_-1864.2.reload to i32
  %473 = icmp eq i1 %471, false, !insn.addr !6622
  store i32 1, i32* %edx.9146.reg2mem, !insn.addr !6623
  store i32 %.pre219, i32* %ecx.13145.reg2mem, !insn.addr !6623
  store i32 %472, i32* %eax.9144.reg2mem, !insn.addr !6623
  store i8* %stack_var_-1864.2.reload, i8** %stack_var_-1864.5.reg2mem, !insn.addr !6623
  store i32 %472, i32* %eax.10.reg2mem, !insn.addr !6623
  store i32 %.pre219, i32* %ecx.14.reg2mem, !insn.addr !6623
  br i1 %473, label %dec_label_pc_45be56, label %dec_label_pc_45be22, !insn.addr !6623

dec_label_pc_45be56:                              ; preds = %dec_label_pc_45be40, %dec_label_pc_45be40.thread, %dec_label_pc_45be1e.preheader, %dec_label_pc_45bd9d
  %ecx.14.reload = load i32, i32* %ecx.14.reg2mem
  %eax.10.reload = load i32, i32* %eax.10.reg2mem
  %stack_var_-1864.5.reload = load i8*, i8** %stack_var_-1864.5.reg2mem
  %474 = icmp eq i32 %ecx.14.reload, 115, !insn.addr !6630
  store i8* %stack_var_-1864.5.reload, i8** %stack_var_-1864.6.reg2mem, !insn.addr !6631
  store i32 %eax.10.reload, i32* %eax.11.reg2mem, !insn.addr !6631
  store i32 %419, i32* %ecx.15.reg2mem, !insn.addr !6631
  store i32 %323, i32* %storemerge28.reg2mem, !insn.addr !6631
  br i1 %474, label %dec_label_pc_45bef8, label %dec_label_pc_45be6b, !insn.addr !6631

dec_label_pc_45be6b:                              ; preds = %dec_label_pc_45be56, %dec_label_pc_45bd87, %dec_label_pc_45bd7f
  %ecx.15.reload = load i32, i32* %ecx.15.reg2mem
  %eax.11.reload = load i32, i32* %eax.11.reg2mem
  %stack_var_-1864.6.reload = load i8*, i8** %stack_var_-1864.6.reg2mem
  %475 = add i32 %esi.8.reload, 1, !insn.addr !6632
  %476 = icmp eq i32 %475, %ecx.15.reload, !insn.addr !6633
  %477 = icmp eq i1 %476, false, !insn.addr !6634
  store i8* %stack_var_-1864.6.reload, i8** %stack_var_-1864.0.reg2mem, !insn.addr !6634
  store i32 %eax.11.reload, i32* %eax.7.reg2mem, !insn.addr !6634
  store i32 %ecx.15.reload, i32* %ecx.11.reg2mem, !insn.addr !6634
  store i32 %475, i32* %esi.8.reg2mem, !insn.addr !6634
  store i32 %eax.11.reload, i32* %eax.12.reg2mem, !insn.addr !6634
  br i1 %477, label %dec_label_pc_45bd79, label %dec_label_pc_45be74, !insn.addr !6634

dec_label_pc_45be74:                              ; preds = %dec_label_pc_45be6b, %dec_label_pc_45bd10
  %eax.12.reload = load i32, i32* %eax.12.reg2mem
  %478 = inttoptr i32 %eax.12.reload to i8*, !insn.addr !6635
  store i8* %478, i8** %stack_var_-936, align 4, !insn.addr !6635
  %479 = mul i32 %eax.12.reload, 4, !insn.addr !6636
  store i32 %479, i32* %storemerge167.reg2mem, !insn.addr !6636
  store i32 %325, i32* %storemerge27.reg2mem, !insn.addr !6636
  br label %dec_label_pc_45be84, !insn.addr !6636

dec_label_pc_45be84:                              ; preds = %dec_label_pc_45bbd4, %dec_label_pc_45be74, %dec_label_pc_45bc7c
  %storemerge27.reload = load i32, i32* %storemerge27.reg2mem
  %storemerge167.reload = load i32, i32* %storemerge167.reg2mem
  store i32 %storemerge167.reload, i32* %309, align 4
  store i32 %storemerge27.reload, i32* %311, align 4, !insn.addr !6637
  store i32 460, i32* %313, align 4, !insn.addr !6638
  store i32 %321, i32* %316, align 4, !insn.addr !6639
  %480 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6640
  %481 = call i32 @memcpy_s_3(i8* %480, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6640
  br label %dec_label_pc_45be9b, !insn.addr !6641

dec_label_pc_45be9b:                              ; preds = %dec_label_pc_45be84, %dec_label_pc_45bc2a, %dec_label_pc_45bcda, %dec_label_pc_45bc96, %dec_label_pc_45bbe7
  %482 = sub i32 %stack_var_-1908.0.in.reload, %eax.5.reload, !insn.addr !6642
  %483 = icmp eq i32 %482, 0, !insn.addr !6642
  %484 = icmp eq i1 %483, false, !insn.addr !6643
  store i32 %482, i32* %stack_var_-1908.0.in.reg2mem, !insn.addr !6643
  br i1 %484, label %dec_label_pc_45bb57, label %dec_label_pc_45beb9, !insn.addr !6643

dec_label_pc_45beb9:                              ; preds = %dec_label_pc_45be9b, %dec_label_pc_45bb3f
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6644
  br i1 icmp eq (i32 urem (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 10), i32 0), label %dec_label_pc_45c3c9thread-pre-split, label %dec_label_pc_45bec1, !insn.addr !6644

dec_label_pc_45bec1:                              ; preds = %dec_label_pc_45beb9
  %485 = load i32, i32* inttoptr (i32 add (i32 shl (i32 urem (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 10), i32 2), i32 ptrtoint (i32* @global_var_472f14 to i32)) to i32*), align 4, !insn.addr !6645
  %486 = icmp eq i32 %485, 0, !insn.addr !6646
  %487 = icmp eq i1 %486, false, !insn.addr !6647
  br i1 %487, label %dec_label_pc_45bf2f, label %dec_label_pc_45bed2, !insn.addr !6647

dec_label_pc_45bed2:                              ; preds = %dec_label_pc_45bf72, %dec_label_pc_45bec1
  store i8* null, i8** %stack_var_-936, align 4, !insn.addr !6648
  %488 = add i32 %307, -4, !insn.addr !6649
  %489 = inttoptr i32 %488 to i32*, !insn.addr !6649
  store i32 0, i32* %489, align 4, !insn.addr !6649
  %.pre197 = ptrtoint i32* %stack_var_-2404 to i32, !insn.addr !6650
  store i32 %.pre197, i32* %.pre-phi198.reg2mem, !insn.addr !6651
  store i32 %488, i32* %storemerge25.reg2mem, !insn.addr !6651
  br label %dec_label_pc_45bf1d, !insn.addr !6651

dec_label_pc_45bef8:                              ; preds = %dec_label_pc_45bce7, %dec_label_pc_45bdb5.preheader, %dec_label_pc_45be56, %dec_label_pc_45be22
  %storemerge28.reload = load i32, i32* %storemerge28.reg2mem
  store i8* null, i8** %stack_var_-936, align 4
  store i32 0, i32* %309, align 4
  store i32 %storemerge28.reload, i32* %311, align 4, !insn.addr !6652
  store i32 460, i32* %313, align 4, !insn.addr !6653
  store i32 %321, i32* %316, align 4, !insn.addr !6654
  %490 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6655
  %491 = call i32 @memcpy_s_3(i8* %490, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6655
  store i8* null, i8** %stack_var_-936, align 4, !insn.addr !6656
  store i32 0, i32* %309, align 4, !insn.addr !6657
  store i32 %323, i32* %.pre-phi198.reg2mem, !insn.addr !6657
  store i32 %308, i32* %storemerge25.reg2mem, !insn.addr !6657
  br label %dec_label_pc_45bf1d, !insn.addr !6657

dec_label_pc_45bf1d:                              ; preds = %dec_label_pc_45bef8, %dec_label_pc_45bed2
  %storemerge25.reload = load i32, i32* %storemerge25.reg2mem
  %.pre-phi198.reload = load i32, i32* %.pre-phi198.reg2mem
  %492 = add i32 %storemerge25.reload, -4, !insn.addr !6650
  %493 = inttoptr i32 %492 to i32*, !insn.addr !6650
  store i32 %.pre-phi198.reload, i32* %493, align 4, !insn.addr !6650
  store i32 %492, i32* %storemerge57.reg2mem, !insn.addr !6658
  store i8** %stack_var_-932, i8*** %storemerge30.in.reg2mem, !insn.addr !6658
  br label %dec_label_pc_45c3bf, !insn.addr !6658

dec_label_pc_45bf2f:                              ; preds = %dec_label_pc_45bec1
  %494 = icmp eq i32 %485, 1, !insn.addr !6659
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6660
  br i1 %494, label %dec_label_pc_45c3c9thread-pre-split, label %dec_label_pc_45bf38, !insn.addr !6660

dec_label_pc_45bf38:                              ; preds = %dec_label_pc_45bf2f
  %495 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6661
  %496 = icmp eq i8* %495, null, !insn.addr !6662
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6663
  br i1 %496, label %dec_label_pc_45c3c9thread-pre-split, label %dec_label_pc_45bf4a.preheader, !insn.addr !6663

dec_label_pc_45bf4a.preheader:                    ; preds = %dec_label_pc_45bf38
  %497 = ptrtoint i8* %495 to i32, !insn.addr !6661
  %498 = add i32 %39, -928, !insn.addr !6664
  %499 = zext i32 %485 to i64, !insn.addr !6664
  store i32 0, i32* %esi.9.reg2mem
  store i32 0, i32* %edi.6.reg2mem
  br label %dec_label_pc_45bf4a

dec_label_pc_45bf4a:                              ; preds = %dec_label_pc_45bf4a.preheader, %dec_label_pc_45bf4a
  %edi.6.reload = load i32, i32* %edi.6.reg2mem
  %esi.9.reload = load i32, i32* %esi.9.reg2mem
  %500 = mul i32 %esi.9.reload, 4, !insn.addr !6664
  %501 = add i32 %500, %498, !insn.addr !6664
  %502 = inttoptr i32 %501 to i32*, !insn.addr !6664
  %503 = load i32, i32* %502, align 4, !insn.addr !6664
  %504 = zext i32 %503 to i64, !insn.addr !6664
  %505 = mul nuw i64 %504, %499, !insn.addr !6664
  %506 = trunc i64 %505 to i32, !insn.addr !6664
  %507 = udiv i64 %505, 4294967296, !insn.addr !6664
  %508 = trunc i64 %507 to i32, !insn.addr !6664
  %509 = add i32 %edi.6.reload, %506, !insn.addr !6665
  %510 = icmp ult i32 %509, %506, !insn.addr !6665
  store i32 %509, i32* %502, align 4, !insn.addr !6666
  %511 = zext i1 %510 to i32, !insn.addr !6667
  %512 = add i32 %511, %508, !insn.addr !6667
  %513 = add i32 %esi.9.reload, 1, !insn.addr !6668
  %514 = icmp eq i32 %513, %497, !insn.addr !6669
  %515 = icmp eq i1 %514, false, !insn.addr !6670
  store i32 %513, i32* %esi.9.reg2mem, !insn.addr !6670
  store i32 %512, i32* %edi.6.reg2mem, !insn.addr !6670
  br i1 %515, label %dec_label_pc_45bf4a, label %dec_label_pc_45bf6a, !insn.addr !6670

dec_label_pc_45bf6a:                              ; preds = %dec_label_pc_45bf4a
  %516 = icmp eq i32 %512, 0, !insn.addr !6671
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6672
  br i1 %516, label %dec_label_pc_45c3c9thread-pre-split, label %dec_label_pc_45bf72, !insn.addr !6672

dec_label_pc_45bf72:                              ; preds = %dec_label_pc_45bf6a
  %517 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6673
  %518 = icmp ult i8* %517, inttoptr (i32 115 to i8*), !insn.addr !6674
  %519 = icmp eq i1 %518, false, !insn.addr !6675
  br i1 %519, label %dec_label_pc_45bed2, label %dec_label_pc_45bf81, !insn.addr !6675

dec_label_pc_45bf81:                              ; preds = %dec_label_pc_45bf72
  %520 = ptrtoint i8* %517 to i32, !insn.addr !6673
  %521 = mul i32 %520, 4, !insn.addr !6676
  %522 = add i32 %521, %498, !insn.addr !6676
  %523 = inttoptr i32 %522 to i32*, !insn.addr !6676
  store i32 %512, i32* %523, align 4, !insn.addr !6676
  %524 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6677
  %525 = ptrtoint i8* %524 to i32, !insn.addr !6677
  %526 = add i32 %525, 1, !insn.addr !6677
  %527 = inttoptr i32 %526 to i8*, !insn.addr !6677
  store i8* %527, i8** %stack_var_-936, align 4, !insn.addr !6677
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6678
  br label %dec_label_pc_45c3c9thread-pre-split, !insn.addr !6678

dec_label_pc_45bf93:                              ; preds = %dec_label_pc_45bb26
  br i1 icmp ult (i32 sub (i32 0, i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32))), i32 10), label %dec_label_pc_45c2ee, label %dec_label_pc_45bfad.preheader, !insn.addr !6679

dec_label_pc_45bfad.preheader:                    ; preds = %dec_label_pc_45bf93
  %528 = add i32 %307, -4
  %529 = inttoptr i32 %528 to i32*
  %530 = add i32 %307, -8
  %531 = inttoptr i32 %530 to i32*
  %532 = add i32 %307, -12
  %533 = inttoptr i32 %532 to i32*
  %534 = ptrtoint i8** %stack_var_-1396 to i32, !insn.addr !6680
  %535 = add i32 %307, -16
  %536 = inttoptr i32 %535 to i32*
  %537 = add i32 %307, -20
  %538 = inttoptr i32 %537 to i32*
  %539 = add i32 %307, -24
  %540 = inttoptr i32 %539 to i32*
  %541 = ptrtoint i8** %stack_var_-468 to i32
  %542 = add i32 %39, -1856
  %543 = add i32 %39, -464
  %544 = ptrtoint i32* %stack_var_-2404 to i32
  %.pre196 = ptrtoint i32* %stack_var_-1860 to i32
  store i32 udiv (i32 sub (i32 0, i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32))), i32 10), i32* %stack_var_-1892.2.in.reg2mem
  br label %dec_label_pc_45bfad

dec_label_pc_45bfad:                              ; preds = %dec_label_pc_45bfad.preheader, %dec_label_pc_45c2d0
  %stack_var_-1892.2.in.reload = load i32, i32* %stack_var_-1892.2.in.reg2mem
  %545 = icmp ult i32 %stack_var_-1892.2.in.reload, 39
  store i32 %stack_var_-1892.2.in.reload, i32* %eax.17.reg2mem, !insn.addr !6681
  br i1 %545, label %dec_label_pc_45bfb5, label %dec_label_pc_45bfb2, !insn.addr !6681

dec_label_pc_45bfb2:                              ; preds = %dec_label_pc_45bfad
  store i32 38, i32* %529, align 4, !insn.addr !6682
  store i32 38, i32* %eax.17.reg2mem, !insn.addr !6683
  br label %dec_label_pc_45bfb5, !insn.addr !6683

dec_label_pc_45bfb5:                              ; preds = %dec_label_pc_45bfb2, %dec_label_pc_45bfad
  %stack_var_-1892.2 = inttoptr i32 %stack_var_-1892.2.in.reload to i8*
  %eax.17.reload = load i32, i32* %eax.17.reg2mem
  %546 = mul i32 %eax.17.reload, 4, !insn.addr !6684
  %547 = add i32 %546, ptrtoint (i8** @global_var_478b6e to i32), !insn.addr !6684
  %548 = inttoptr i32 %547 to i8*, !insn.addr !6684
  %549 = load i8, i8* %548, align 4, !insn.addr !6684
  %550 = zext i8 %549 to i32, !insn.addr !6684
  %551 = add i32 %546, ptrtoint (i8** @global_var_478b6f to i32), !insn.addr !6685
  %552 = inttoptr i32 %551 to i8*, !insn.addr !6685
  %553 = load i8, i8* %552, align 4, !insn.addr !6685
  %554 = zext i8 %553 to i32, !insn.addr !6685
  %555 = mul i32 %550, 4, !insn.addr !6686
  store i32 %555, i32* %529, align 4, !insn.addr !6687
  %556 = add nuw nsw i32 %554, %550, !insn.addr !6688
  store i32 0, i32* %531, align 4, !insn.addr !6689
  store i32 %534, i32* %533, align 4, !insn.addr !6680
  call void @memset(i8* %stack_var_-1892.2, i8 ptrtoint (i32* @80 to i8), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6690
  %557 = mul i32 %554, 4, !insn.addr !6691
  store i32 %557, i32* %536, align 4, !insn.addr !6692
  %558 = add i32 %546, ptrtoint (i16** @global_var_478b6c to i32), !insn.addr !6693
  %559 = inttoptr i32 %558 to i16*, !insn.addr !6693
  %560 = load i16, i16* %559, align 4, !insn.addr !6693
  %561 = zext i16 %560 to i32, !insn.addr !6693
  %562 = mul i32 %561, 4, !insn.addr !6694
  %563 = add i32 %562, ptrtoint ([578 x i32]* @large_power_data to i32), !insn.addr !6694
  store i32 %563, i32* %538, align 4, !insn.addr !6695
  %564 = add i32 %555, %534, !insn.addr !6696
  store i32 %564, i32* %540, align 4, !insn.addr !6697
  call void @memcpy(i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6698
  %565 = icmp ult i32 %556, 2
  br i1 %565, label %dec_label_pc_45c024, label %dec_label_pc_45c0b4, !insn.addr !6699

dec_label_pc_45c024:                              ; preds = %dec_label_pc_45bfb5
  %566 = load i8*, i8** %stack_var_-1396, align 4, !insn.addr !6700
  %567 = icmp eq i8* %566, null, !insn.addr !6701
  %568 = icmp eq i1 %567, false, !insn.addr !6702
  br i1 %568, label %dec_label_pc_45c048, label %dec_label_pc_45c02e, !insn.addr !6702

dec_label_pc_45c02e:                              ; preds = %dec_label_pc_45c0c1, %dec_label_pc_45c024
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6703
  store i32 %544, i32* %storemerge32.pre-phi.reg2mem, !insn.addr !6704
  store i32 0, i32* %storemerge90.reg2mem, !insn.addr !6704
  br label %dec_label_pc_45c2b5, !insn.addr !6704

dec_label_pc_45c048:                              ; preds = %dec_label_pc_45c024
  %569 = icmp eq i8* %566, inttoptr (i32 1 to i8*), !insn.addr !6705
  %570 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6706
  %571 = icmp eq i8* %570, null, !insn.addr !6706
  %or.cond63 = or i1 %569, %571
  br i1 %or.cond63, label %dec_label_pc_45c2d0, label %dec_label_pc_45c05e, !insn.addr !6707

dec_label_pc_45c05e:                              ; preds = %dec_label_pc_45c048
  %572 = ptrtoint i8* %566 to i32, !insn.addr !6700
  %573 = ptrtoint i8* %570 to i32, !insn.addr !6708
  %574 = zext i32 %572 to i64, !insn.addr !6709
  store i32 0, i32* %ecx.17.reg2mem, !insn.addr !6710
  store i32 0, i32* %esi.10.reg2mem, !insn.addr !6710
  br label %dec_label_pc_45c06a, !insn.addr !6710

dec_label_pc_45c06a:                              ; preds = %dec_label_pc_45c06a, %dec_label_pc_45c05e
  %esi.10.reload = load i32, i32* %esi.10.reg2mem
  %ecx.17.reload = load i32, i32* %ecx.17.reg2mem
  %575 = mul i32 %esi.10.reload, 4, !insn.addr !6709
  %576 = add i32 %575, %543, !insn.addr !6709
  %577 = inttoptr i32 %576 to i32*, !insn.addr !6709
  %578 = load i32, i32* %577, align 4, !insn.addr !6709
  %579 = zext i32 %578 to i64, !insn.addr !6709
  %580 = mul nuw i64 %579, %574, !insn.addr !6709
  %581 = trunc i64 %580 to i32, !insn.addr !6709
  %582 = udiv i64 %580, 4294967296, !insn.addr !6709
  %583 = trunc i64 %582 to i32, !insn.addr !6709
  %584 = add i32 %ecx.17.reload, %581, !insn.addr !6711
  %585 = icmp ult i32 %584, %581, !insn.addr !6711
  store i32 %584, i32* %577, align 4, !insn.addr !6712
  %586 = zext i1 %585 to i32, !insn.addr !6713
  %587 = add i32 %586, %583, !insn.addr !6713
  %588 = add i32 %esi.10.reload, 1, !insn.addr !6714
  %589 = icmp eq i32 %588, %573, !insn.addr !6715
  %590 = icmp eq i1 %589, false, !insn.addr !6716
  store i32 %587, i32* %ecx.17.reg2mem, !insn.addr !6716
  store i32 %588, i32* %esi.10.reg2mem, !insn.addr !6716
  store i32 %587, i32* %ecx.18.reg2mem, !insn.addr !6716
  br i1 %590, label %dec_label_pc_45c06a, label %dec_label_pc_45c086, !insn.addr !6716

dec_label_pc_45c086:                              ; preds = %dec_label_pc_45c120, %dec_label_pc_45c06a
  %ecx.18.reload = load i32, i32* %ecx.18.reg2mem
  %591 = icmp eq i32 %ecx.18.reload, 0, !insn.addr !6717
  br i1 %591, label %dec_label_pc_45c2d0, label %dec_label_pc_45c093, !insn.addr !6718

dec_label_pc_45c093:                              ; preds = %dec_label_pc_45c086
  %592 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6719
  %593 = icmp ult i8* %592, inttoptr (i32 115 to i8*), !insn.addr !6720
  %594 = icmp eq i1 %593, false, !insn.addr !6721
  br i1 %594, label %dec_label_pc_45c364, label %dec_label_pc_45c0a2, !insn.addr !6721

dec_label_pc_45c0a2:                              ; preds = %dec_label_pc_45c093
  %595 = ptrtoint i8* %592 to i32, !insn.addr !6719
  %596 = mul i32 %595, 4, !insn.addr !6722
  %597 = add i32 %596, %543, !insn.addr !6722
  %598 = inttoptr i32 %597 to i32*, !insn.addr !6722
  store i32 %ecx.18.reload, i32* %598, align 4, !insn.addr !6722
  %599 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6723
  %600 = ptrtoint i8* %599 to i32, !insn.addr !6723
  %601 = add i32 %600, 1, !insn.addr !6723
  %602 = inttoptr i32 %601 to i8*, !insn.addr !6723
  store i8* %602, i8** %stack_var_-472, align 4, !insn.addr !6723
  br label %dec_label_pc_45c2d0, !insn.addr !6724

dec_label_pc_45c0b4:                              ; preds = %dec_label_pc_45bfb5
  %603 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6725
  %switch70 = icmp ult i8* %603, inttoptr (i32 2 to i8*)
  br i1 %switch70, label %dec_label_pc_45c0c1, label %dec_label_pc_45c141

dec_label_pc_45c0c1:                              ; preds = %dec_label_pc_45c0b4
  %604 = load i8*, i8** %stack_var_-468, align 4, !insn.addr !6726
  %605 = mul i32 %556, 4, !insn.addr !6727
  store i32 %605, i32* %529, align 4, !insn.addr !6728
  store i32 %534, i32* %531, align 4, !insn.addr !6729
  %606 = inttoptr i32 %556 to i8*, !insn.addr !6730
  store i8* %606, i8** %stack_var_-472, align 4, !insn.addr !6730
  store i32 460, i32* %533, align 4, !insn.addr !6731
  store i32 %541, i32* %536, align 4, !insn.addr !6732
  %607 = call i32 @memcpy_s_3(i8* %604, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6733
  %608 = icmp eq i8* %604, null, !insn.addr !6734
  br i1 %608, label %dec_label_pc_45c02e, label %dec_label_pc_45c0f8, !insn.addr !6735

dec_label_pc_45c0f8:                              ; preds = %dec_label_pc_45c0c1
  %609 = icmp eq i8* %604, inttoptr (i32 1 to i8*), !insn.addr !6736
  %610 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6737
  %611 = icmp eq i8* %610, null, !insn.addr !6737
  %or.cond66 = or i1 %609, %611
  br i1 %or.cond66, label %dec_label_pc_45c2d0, label %dec_label_pc_45c10e, !insn.addr !6738

dec_label_pc_45c10e:                              ; preds = %dec_label_pc_45c0f8
  %612 = ptrtoint i8* %610 to i32, !insn.addr !6739
  %613 = ptrtoint i8* %604 to i32, !insn.addr !6740
  %614 = zext i32 %613 to i64, !insn.addr !6741
  store i32 0, i32* %ecx.19.reg2mem, !insn.addr !6742
  store i32 0, i32* %esi.11.reg2mem, !insn.addr !6742
  br label %dec_label_pc_45c120, !insn.addr !6742

dec_label_pc_45c120:                              ; preds = %dec_label_pc_45c120, %dec_label_pc_45c10e
  %esi.11.reload = load i32, i32* %esi.11.reg2mem
  %ecx.19.reload = load i32, i32* %ecx.19.reg2mem
  %615 = mul i32 %esi.11.reload, 4, !insn.addr !6741
  %616 = add i32 %615, %543, !insn.addr !6741
  %617 = inttoptr i32 %616 to i32*, !insn.addr !6741
  %618 = load i32, i32* %617, align 4, !insn.addr !6741
  %619 = zext i32 %618 to i64, !insn.addr !6741
  %620 = mul nuw i64 %619, %614, !insn.addr !6741
  %621 = trunc i64 %620 to i32, !insn.addr !6741
  %622 = udiv i64 %620, 4294967296, !insn.addr !6741
  %623 = trunc i64 %622 to i32, !insn.addr !6741
  %624 = add i32 %ecx.19.reload, %621, !insn.addr !6743
  %625 = icmp ult i32 %624, %621, !insn.addr !6743
  store i32 %624, i32* %617, align 4, !insn.addr !6744
  %626 = zext i1 %625 to i32, !insn.addr !6745
  %627 = add i32 %626, %623, !insn.addr !6745
  %628 = add i32 %esi.11.reload, 1, !insn.addr !6746
  %629 = icmp eq i32 %628, %612, !insn.addr !6747
  %630 = icmp eq i1 %629, false, !insn.addr !6748
  store i32 %627, i32* %ecx.18.reg2mem, !insn.addr !6748
  store i32 %627, i32* %ecx.19.reg2mem, !insn.addr !6748
  store i32 %628, i32* %esi.11.reg2mem, !insn.addr !6748
  br i1 %630, label %dec_label_pc_45c120, label %dec_label_pc_45c086, !insn.addr !6748

dec_label_pc_45c141:                              ; preds = %dec_label_pc_45c0b4
  %631 = ptrtoint i8* %603 to i32, !insn.addr !6749
  %632 = icmp ult i32 %556, %631, !insn.addr !6749
  %633 = icmp eq i1 %632, false, !insn.addr !6750
  %ecx.21 = select i1 %633, i32 %631, i32 %556
  %634 = icmp eq i32 %ecx.21, 0, !insn.addr !6751
  store i32 0, i32* %eax.24.reg2mem, !insn.addr !6752
  br i1 %634, label %dec_label_pc_45c2a5, label %dec_label_pc_45c1aa.preheader, !insn.addr !6752

dec_label_pc_45c1aa.preheader:                    ; preds = %dec_label_pc_45c141
  %spec.select85 = select i1 %632, i32 %534, i32 %541
  %635 = icmp eq i1 %633, false, !insn.addr !6753
  %ecx.20 = select i1 %635, i32 %541, i32 %534
  %edi.7 = select i1 %633, i32 %556, i32 %631
  %636 = inttoptr i32 %556 to i8*
  %storemerge33 = select i1 %633, i8* %603, i8* %636
  %637 = icmp eq i32 %edi.7, 0
  %638 = ptrtoint i8* %storemerge33 to i32
  store i8* null, i8** %stack_var_-1864.7.reg2mem
  store i32 0, i32* %eax.19.reg2mem
  store i32 %ecx.21, i32* %ecx.22.reg2mem
  store i32 0, i32* %esi.12.reg2mem
  br label %dec_label_pc_45c1aa

dec_label_pc_45c1aa:                              ; preds = %dec_label_pc_45c1aa.preheader, %dec_label_pc_45c29c
  %esi.12.reload = load i32, i32* %esi.12.reg2mem
  %eax.19.reload = load i32, i32* %eax.19.reg2mem
  %stack_var_-1864.7.reload = load i8*, i8** %stack_var_-1864.7.reg2mem
  %639 = mul i32 %esi.12.reload, 4, !insn.addr !6754
  %640 = add i32 %639, %spec.select85
  %641 = inttoptr i32 %640 to i32*
  %642 = load i32, i32* %641, align 4, !insn.addr !6754
  %643 = icmp eq i32 %642, 0, !insn.addr !6754
  %644 = icmp eq i1 %643, false, !insn.addr !6755
  br i1 %644, label %dec_label_pc_45c1ce, label %dec_label_pc_45c1b0, !insn.addr !6755

dec_label_pc_45c1b0:                              ; preds = %dec_label_pc_45c1aa
  %ecx.22.reload = load i32, i32* %ecx.22.reg2mem
  %645 = icmp eq i32 %esi.12.reload, %eax.19.reload, !insn.addr !6756
  %646 = icmp eq i1 %645, false, !insn.addr !6757
  store i8* %stack_var_-1864.7.reload, i8** %stack_var_-1864.13.reg2mem, !insn.addr !6757
  store i32 %eax.19.reload, i32* %eax.23.reg2mem, !insn.addr !6757
  store i32 %ecx.22.reload, i32* %ecx.26.reg2mem, !insn.addr !6757
  br i1 %646, label %dec_label_pc_45c29c, label %dec_label_pc_45c1b8, !insn.addr !6757

dec_label_pc_45c1b8:                              ; preds = %dec_label_pc_45c1b0
  %647 = add i32 %639, %542, !insn.addr !6758
  %648 = inttoptr i32 %647 to i32*, !insn.addr !6758
  store i32 0, i32* %648, align 4, !insn.addr !6758
  %649 = add i32 %esi.12.reload, 1, !insn.addr !6759
  %650 = inttoptr i32 %649 to i8*, !insn.addr !6760
  store i8* %650, i8** %stack_var_-1864.13.reg2mem, !insn.addr !6761
  store i32 %649, i32* %eax.23.reg2mem, !insn.addr !6761
  store i32 %ecx.22.reload, i32* %ecx.26.reg2mem, !insn.addr !6761
  br label %dec_label_pc_45c29c, !insn.addr !6761

dec_label_pc_45c1ce:                              ; preds = %dec_label_pc_45c1aa
  store i8* %stack_var_-1864.7.reload, i8** %stack_var_-1864.12.reg2mem, !insn.addr !6762
  store i32 %eax.19.reload, i32* %eax.22.reg2mem, !insn.addr !6762
  store i32 %esi.12.reload, i32* %ecx.25.reg2mem, !insn.addr !6762
  br i1 %637, label %dec_label_pc_45c287, label %dec_label_pc_45c1e6.preheader, !insn.addr !6762

dec_label_pc_45c1e6.preheader:                    ; preds = %dec_label_pc_45c1ce
  %651 = add i32 %esi.12.reload, 1
  store i32 0, i32* %stack_var_-1872.0.reg2mem
  store i32 0, i32* %stack_var_-1880.1.reg2mem
  store i8* %stack_var_-1864.7.reload, i8** %stack_var_-1864.8.reg2mem
  store i32 %eax.19.reload, i32* %eax.20.reg2mem
  store i32 %esi.12.reload, i32* %ecx.23.reg2mem
  br label %dec_label_pc_45c1e6

dec_label_pc_45c1e6:                              ; preds = %dec_label_pc_45c1e6.preheader, %dec_label_pc_45c206
  %ecx.23.reload = load i32, i32* %ecx.23.reg2mem
  %eax.20.reload = load i32, i32* %eax.20.reg2mem
  %stack_var_-1864.8.reload = load i8*, i8** %stack_var_-1864.8.reg2mem
  %stack_var_-1872.0.reload = load i32, i32* %stack_var_-1872.0.reg2mem
  %652 = icmp eq i32 %ecx.23.reload, 115, !insn.addr !6763
  store i8* %stack_var_-1864.8.reload, i8** %stack_var_-1864.10.ph.reg2mem, !insn.addr !6764
  store i32 %eax.20.reload, i32* %eax.21.ph.reg2mem, !insn.addr !6764
  store i32 115, i32* %ecx.24.ph.reg2mem, !insn.addr !6764
  store i32 %stack_var_-1872.0.reload, i32* %edx.14.ph.reg2mem, !insn.addr !6764
  br i1 %652, label %dec_label_pc_45c24f.preheader, label %dec_label_pc_45c1eb, !insn.addr !6764

dec_label_pc_45c1eb:                              ; preds = %dec_label_pc_45c1e6
  %stack_var_-1880.1.reload = load i32, i32* %stack_var_-1880.1.reg2mem
  %653 = icmp eq i32 %ecx.23.reload, %eax.20.reload, !insn.addr !6765
  %654 = icmp eq i1 %653, false, !insn.addr !6766
  %.pre207 = mul i32 %ecx.23.reload, 4
  %.pre209 = add i32 %.pre207, %542
  %.pre211 = inttoptr i32 %.pre209 to i32*
  br i1 %654, label %dec_label_pc_45c1eb.dec_label_pc_45c206_crit_edge, label %dec_label_pc_45c1ef, !insn.addr !6766

dec_label_pc_45c1eb.dec_label_pc_45c206_crit_edge: ; preds = %dec_label_pc_45c1eb
  %.pre281 = load i32, i32* %.pre211, align 4
  store i32 %.pre281, i32* %.reg2mem307
  store i8* %stack_var_-1864.8.reload, i8** %stack_var_-1864.9.reg2mem
  br label %dec_label_pc_45c206

dec_label_pc_45c1ef:                              ; preds = %dec_label_pc_45c1eb
  store i32 0, i32* %.pre211, align 4, !insn.addr !6767
  %655 = add i32 %651, %stack_var_-1880.1.reload, !insn.addr !6768
  %656 = inttoptr i32 %655 to i8*, !insn.addr !6769
  store i32 0, i32* %.reg2mem307, !insn.addr !6769
  store i8* %656, i8** %stack_var_-1864.9.reg2mem, !insn.addr !6769
  br label %dec_label_pc_45c206, !insn.addr !6769

dec_label_pc_45c206:                              ; preds = %dec_label_pc_45c1eb.dec_label_pc_45c206_crit_edge, %dec_label_pc_45c1ef
  %stack_var_-1864.9.reload = load i8*, i8** %stack_var_-1864.9.reg2mem
  %.reload308 = load i32, i32* %.reg2mem307, !insn.addr !6770
  %657 = mul i32 %stack_var_-1880.1.reload, 4, !insn.addr !6771
  %658 = add i32 %657, %ecx.20, !insn.addr !6771
  %659 = inttoptr i32 %658 to i32*, !insn.addr !6771
  %660 = load i32, i32* %659, align 4, !insn.addr !6771
  %661 = load i32, i32* %641, align 4, !insn.addr !6772
  %662 = zext i32 %661 to i64, !insn.addr !6772
  %663 = zext i32 %660 to i64, !insn.addr !6772
  %664 = mul nuw i64 %662, %663, !insn.addr !6772
  %665 = trunc i64 %664 to i32, !insn.addr !6772
  %666 = udiv i64 %664, 4294967296, !insn.addr !6772
  %667 = trunc i64 %666 to i32, !insn.addr !6772
  %668 = add i32 %stack_var_-1872.0.reload, %665, !insn.addr !6773
  %669 = icmp ult i32 %668, %665, !insn.addr !6773
  %670 = zext i1 %669 to i32, !insn.addr !6774
  %671 = add i32 %670, %667, !insn.addr !6774
  %672 = add i32 %668, %.reload308, !insn.addr !6770
  %673 = icmp ult i32 %672, %.reload308, !insn.addr !6770
  store i32 %672, i32* %.pre211, align 4, !insn.addr !6770
  %674 = zext i1 %673 to i32, !insn.addr !6775
  %675 = add i32 %671, %674, !insn.addr !6775
  %676 = add i32 %stack_var_-1880.1.reload, 1, !insn.addr !6776
  %677 = add i32 %ecx.23.reload, 1, !insn.addr !6777
  %678 = icmp eq i32 %676, %edi.7, !insn.addr !6778
  %679 = ptrtoint i8* %stack_var_-1864.9.reload to i32
  %680 = icmp eq i1 %678, false, !insn.addr !6779
  store i32 %675, i32* %stack_var_-1872.0.reg2mem, !insn.addr !6779
  store i32 %676, i32* %stack_var_-1880.1.reg2mem, !insn.addr !6779
  store i8* %stack_var_-1864.9.reload, i8** %stack_var_-1864.8.reg2mem, !insn.addr !6779
  store i32 %679, i32* %eax.20.reg2mem, !insn.addr !6779
  store i32 %677, i32* %ecx.23.reg2mem, !insn.addr !6779
  store i8* %stack_var_-1864.9.reload, i8** %stack_var_-1864.10.ph.reg2mem, !insn.addr !6779
  store i32 %679, i32* %eax.21.ph.reg2mem, !insn.addr !6779
  store i32 %677, i32* %ecx.24.ph.reg2mem, !insn.addr !6779
  store i32 %675, i32* %edx.14.ph.reg2mem, !insn.addr !6779
  br i1 %680, label %dec_label_pc_45c1e6, label %dec_label_pc_45c24f.preheader, !insn.addr !6779

dec_label_pc_45c24f.preheader:                    ; preds = %dec_label_pc_45c1e6, %dec_label_pc_45c206
  %edx.14.ph.reload = load i32, i32* %edx.14.ph.reg2mem
  %ecx.24.ph.reload = load i32, i32* %ecx.24.ph.reg2mem
  %eax.21.ph.reload = load i32, i32* %eax.21.ph.reg2mem
  %stack_var_-1864.10.ph.reload = load i8*, i8** %stack_var_-1864.10.ph.reg2mem
  %681 = icmp eq i32 %edx.14.ph.reload, 0, !insn.addr !6780
  store i32 %edx.14.ph.reload, i32* %edx.14127.reg2mem, !insn.addr !6781
  store i32 %ecx.24.ph.reload, i32* %ecx.24126.reg2mem, !insn.addr !6781
  store i32 %eax.21.ph.reload, i32* %eax.21125.reg2mem, !insn.addr !6781
  store i8* %stack_var_-1864.10.ph.reload, i8** %stack_var_-1864.12.reg2mem, !insn.addr !6781
  store i32 %eax.21.ph.reload, i32* %eax.22.reg2mem, !insn.addr !6781
  store i32 %ecx.24.ph.reload, i32* %ecx.25.reg2mem, !insn.addr !6781
  br i1 %681, label %dec_label_pc_45c287, label %dec_label_pc_45c253, !insn.addr !6781

dec_label_pc_45c253:                              ; preds = %dec_label_pc_45c24f.preheader, %dec_label_pc_45c271
  %ecx.24126.reload = load i32, i32* %ecx.24126.reg2mem
  %682 = icmp eq i32 %ecx.24126.reload, 115, !insn.addr !6782
  br i1 %682, label %dec_label_pc_45c364, label %dec_label_pc_45c25c, !insn.addr !6783

dec_label_pc_45c25c:                              ; preds = %dec_label_pc_45c253
  %eax.21125.reload = load i32, i32* %eax.21125.reg2mem
  %edx.14127.reload = load i32, i32* %edx.14127.reg2mem
  %683 = icmp eq i32 %ecx.24126.reload, %eax.21125.reload, !insn.addr !6784
  %684 = icmp eq i1 %683, false, !insn.addr !6785
  %.pre199 = mul i32 %ecx.24126.reload, 4
  %.pre201 = add i32 %.pre199, %542
  %.pre203 = inttoptr i32 %.pre201 to i32*
  %.pre205 = add i32 %ecx.24126.reload, 1
  br i1 %684, label %dec_label_pc_45c271, label %dec_label_pc_45c271.thread, !insn.addr !6785

dec_label_pc_45c271.thread:                       ; preds = %dec_label_pc_45c25c
  %685 = inttoptr i32 %.pre205 to i8*, !insn.addr !6786
  store i32 %edx.14127.reload, i32* %.pre203, align 4, !insn.addr !6787
  store i8* %685, i8** %stack_var_-1864.12.reg2mem
  store i32 %.pre205, i32* %eax.22.reg2mem
  store i32 %.pre205, i32* %ecx.25.reg2mem
  br label %dec_label_pc_45c287

dec_label_pc_45c271:                              ; preds = %dec_label_pc_45c25c
  %.pre282 = load i32, i32* %.pre203, align 4
  %686 = add i32 %.pre282, %edx.14127.reload, !insn.addr !6787
  %687 = icmp ult i32 %686, %.pre282, !insn.addr !6787
  store i32 %686, i32* %.pre203, align 4, !insn.addr !6787
  %688 = ptrtoint i8* %stack_var_-1864.10.ph.reload to i32
  %689 = icmp eq i1 %687, false, !insn.addr !6780
  store i32 1, i32* %edx.14127.reg2mem, !insn.addr !6781
  store i32 %.pre205, i32* %ecx.24126.reg2mem, !insn.addr !6781
  store i32 %688, i32* %eax.21125.reg2mem, !insn.addr !6781
  store i8* %stack_var_-1864.10.ph.reload, i8** %stack_var_-1864.12.reg2mem, !insn.addr !6781
  store i32 %688, i32* %eax.22.reg2mem, !insn.addr !6781
  store i32 %.pre205, i32* %ecx.25.reg2mem, !insn.addr !6781
  br i1 %689, label %dec_label_pc_45c287, label %dec_label_pc_45c253, !insn.addr !6781

dec_label_pc_45c287:                              ; preds = %dec_label_pc_45c271, %dec_label_pc_45c271.thread, %dec_label_pc_45c24f.preheader, %dec_label_pc_45c1ce
  %ecx.25.reload = load i32, i32* %ecx.25.reg2mem
  %eax.22.reload = load i32, i32* %eax.22.reg2mem
  %stack_var_-1864.12.reload = load i8*, i8** %stack_var_-1864.12.reg2mem
  %690 = icmp eq i32 %ecx.25.reload, 115, !insn.addr !6788
  store i8* %stack_var_-1864.12.reload, i8** %stack_var_-1864.13.reg2mem, !insn.addr !6789
  store i32 %eax.22.reload, i32* %eax.23.reg2mem, !insn.addr !6789
  store i32 %638, i32* %ecx.26.reg2mem, !insn.addr !6789
  br i1 %690, label %dec_label_pc_45c364, label %dec_label_pc_45c29c, !insn.addr !6789

dec_label_pc_45c29c:                              ; preds = %dec_label_pc_45c287, %dec_label_pc_45c1b8, %dec_label_pc_45c1b0
  %ecx.26.reload = load i32, i32* %ecx.26.reg2mem
  %eax.23.reload = load i32, i32* %eax.23.reg2mem
  %stack_var_-1864.13.reload = load i8*, i8** %stack_var_-1864.13.reg2mem
  %691 = add i32 %esi.12.reload, 1, !insn.addr !6790
  %692 = icmp eq i32 %691, %ecx.26.reload, !insn.addr !6791
  %693 = icmp eq i1 %692, false, !insn.addr !6792
  store i8* %stack_var_-1864.13.reload, i8** %stack_var_-1864.7.reg2mem, !insn.addr !6792
  store i32 %eax.23.reload, i32* %eax.19.reg2mem, !insn.addr !6792
  store i32 %ecx.26.reload, i32* %ecx.22.reg2mem, !insn.addr !6792
  store i32 %691, i32* %esi.12.reg2mem, !insn.addr !6792
  store i32 %eax.23.reload, i32* %eax.24.reg2mem, !insn.addr !6792
  br i1 %693, label %dec_label_pc_45c1aa, label %dec_label_pc_45c2a5, !insn.addr !6792

dec_label_pc_45c2a5:                              ; preds = %dec_label_pc_45c29c, %dec_label_pc_45c141
  %eax.24.reload = load i32, i32* %eax.24.reg2mem
  %694 = inttoptr i32 %eax.24.reload to i8*, !insn.addr !6793
  store i8* %694, i8** %stack_var_-472, align 4, !insn.addr !6793
  %695 = mul i32 %eax.24.reload, 4, !insn.addr !6794
  store i32 %.pre196, i32* %storemerge32.pre-phi.reg2mem, !insn.addr !6795
  store i32 %695, i32* %storemerge90.reg2mem, !insn.addr !6795
  br label %dec_label_pc_45c2b5, !insn.addr !6795

dec_label_pc_45c2b5:                              ; preds = %dec_label_pc_45c2a5, %dec_label_pc_45c02e
  %storemerge90.reload = load i32, i32* %storemerge90.reg2mem
  %storemerge32.pre-phi.reload = load i32, i32* %storemerge32.pre-phi.reg2mem
  store i32 %storemerge90.reload, i32* %529, align 4
  store i32 %storemerge32.pre-phi.reload, i32* %531, align 4, !insn.addr !6796
  store i32 460, i32* %533, align 4, !insn.addr !6797
  store i32 %541, i32* %536, align 4, !insn.addr !6798
  %696 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6799
  %697 = call i32 @memcpy_s_3(i8* %696, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6799
  br label %dec_label_pc_45c2d0, !insn.addr !6800

dec_label_pc_45c2d0:                              ; preds = %dec_label_pc_45c2b5, %dec_label_pc_45c0f8, %dec_label_pc_45c0a2, %dec_label_pc_45c086, %dec_label_pc_45c048
  %698 = sub i32 %stack_var_-1892.2.in.reload, %eax.17.reload, !insn.addr !6801
  %699 = icmp eq i32 %698, 0, !insn.addr !6801
  %700 = icmp eq i1 %699, false, !insn.addr !6802
  store i32 %698, i32* %stack_var_-1892.2.in.reg2mem, !insn.addr !6802
  br i1 %700, label %dec_label_pc_45bfad, label %dec_label_pc_45c2ee, !insn.addr !6802

dec_label_pc_45c2ee:                              ; preds = %dec_label_pc_45c2d0, %dec_label_pc_45bf93
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6803
  br i1 icmp eq (i32 urem (i32 sub (i32 0, i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32))), i32 10), i32 0), label %dec_label_pc_45c3c9thread-pre-split, label %dec_label_pc_45c2f6, !insn.addr !6803

dec_label_pc_45c2f6:                              ; preds = %dec_label_pc_45c2ee
  %701 = load i32, i32* inttoptr (i32 add (i32 shl (i32 urem (i32 sub (i32 0, i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32))), i32 10), i32 2), i32 ptrtoint (i32* @global_var_472f14 to i32)) to i32*), align 4, !insn.addr !6804
  store i32 %307, i32* %esp.17.ph.reg2mem
  switch i32 %701, label %dec_label_pc_45c314 [
    i32 0, label %dec_label_pc_45c3a3
    i32 1, label %dec_label_pc_45c3c9thread-pre-split
  ]

dec_label_pc_45c314:                              ; preds = %dec_label_pc_45c2f6
  %702 = load i8*, i8** %stack_var_-472, align 4
  %703 = icmp eq i8* %702, null, !insn.addr !6805
  store i32 %307, i32* %esp.1789.reg2mem, !insn.addr !6806
  br i1 %703, label %dec_label_pc_45c45d, label %dec_label_pc_45c326.preheader, !insn.addr !6806

dec_label_pc_45c326.preheader:                    ; preds = %dec_label_pc_45c314
  %704 = ptrtoint i8* %702 to i32, !insn.addr !6807
  %705 = add i32 %39, -464, !insn.addr !6808
  %706 = zext i32 %701 to i64, !insn.addr !6808
  store i32 0, i32* %esi.13.reg2mem
  store i32 0, i32* %edi.8.reg2mem
  br label %dec_label_pc_45c326

dec_label_pc_45c326:                              ; preds = %dec_label_pc_45c326.preheader, %dec_label_pc_45c326
  %edi.8.reload = load i32, i32* %edi.8.reg2mem
  %esi.13.reload = load i32, i32* %esi.13.reg2mem
  %707 = mul i32 %esi.13.reload, 4, !insn.addr !6808
  %708 = add i32 %707, %705, !insn.addr !6808
  %709 = inttoptr i32 %708 to i32*, !insn.addr !6808
  %710 = load i32, i32* %709, align 4, !insn.addr !6808
  %711 = zext i32 %710 to i64, !insn.addr !6808
  %712 = mul nuw i64 %711, %706, !insn.addr !6808
  %713 = trunc i64 %712 to i32, !insn.addr !6808
  %714 = udiv i64 %712, 4294967296, !insn.addr !6808
  %715 = trunc i64 %714 to i32, !insn.addr !6808
  %716 = add i32 %edi.8.reload, %713, !insn.addr !6809
  %717 = icmp ult i32 %716, %713, !insn.addr !6809
  store i32 %716, i32* %709, align 4, !insn.addr !6810
  %718 = zext i1 %717 to i32, !insn.addr !6811
  %719 = add i32 %718, %715, !insn.addr !6811
  %720 = add i32 %esi.13.reload, 1, !insn.addr !6812
  %721 = icmp eq i32 %720, %704, !insn.addr !6813
  %722 = icmp eq i1 %721, false, !insn.addr !6814
  store i32 %720, i32* %esi.13.reg2mem, !insn.addr !6814
  store i32 %719, i32* %edi.8.reg2mem, !insn.addr !6814
  br i1 %722, label %dec_label_pc_45c326, label %dec_label_pc_45c346, !insn.addr !6814

dec_label_pc_45c346:                              ; preds = %dec_label_pc_45c326
  %723 = icmp eq i32 %719, 0, !insn.addr !6815
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6816
  br i1 %723, label %dec_label_pc_45c3c9thread-pre-split, label %dec_label_pc_45c34a, !insn.addr !6816

dec_label_pc_45c34a:                              ; preds = %dec_label_pc_45c346
  %724 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6817
  %725 = icmp ult i8* %724, inttoptr (i32 115 to i8*), !insn.addr !6818
  %726 = icmp eq i1 %725, false, !insn.addr !6819
  br i1 %726, label %dec_label_pc_45c3a3, label %dec_label_pc_45c355, !insn.addr !6819

dec_label_pc_45c355:                              ; preds = %dec_label_pc_45c34a
  %727 = ptrtoint i8* %724 to i32, !insn.addr !6817
  %728 = mul i32 %727, 4, !insn.addr !6820
  %729 = add i32 %728, %705, !insn.addr !6820
  %730 = inttoptr i32 %729 to i32*, !insn.addr !6820
  store i32 %719, i32* %730, align 4, !insn.addr !6820
  %731 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6821
  %732 = ptrtoint i8* %731 to i32, !insn.addr !6821
  %733 = add i32 %732, 1, !insn.addr !6821
  %734 = inttoptr i32 %733 to i8*, !insn.addr !6821
  store i8* %734, i8** %stack_var_-472, align 4, !insn.addr !6821
  store i8* %734, i8** %.reg2mem309, !insn.addr !6822
  store i32 %307, i32* %esp.17.reg2mem, !insn.addr !6822
  br label %dec_label_pc_45c3c9, !insn.addr !6822

dec_label_pc_45c364:                              ; preds = %dec_label_pc_45c093, %dec_label_pc_45c287, %dec_label_pc_45c253
  store i32 0, i32* %529, align 4, !insn.addr !6823
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6824
  store i32 %544, i32* %531, align 4, !insn.addr !6825
  store i32 460, i32* %533, align 4, !insn.addr !6826
  store i32 %541, i32* %536, align 4, !insn.addr !6827
  %735 = call i32 @memcpy_s_3(i8* null, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6828
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6829
  store i32 0, i32* %529, align 4, !insn.addr !6830
  store i32 %544, i32* %.pre-phi195.reg2mem, !insn.addr !6831
  store i32 %528, i32* %esp.16.reg2mem, !insn.addr !6831
  br label %dec_label_pc_45c3b2, !insn.addr !6831

dec_label_pc_45c3a3:                              ; preds = %dec_label_pc_45c2f6, %dec_label_pc_45c34a
  %736 = add i32 %307, -4, !insn.addr !6832
  %737 = inttoptr i32 %736 to i32*, !insn.addr !6832
  store i32 0, i32* %737, align 4, !insn.addr !6832
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6833
  %.pre194 = ptrtoint i32* %stack_var_-2404 to i32, !insn.addr !6834
  store i32 %.pre194, i32* %.pre-phi195.reg2mem, !insn.addr !6835
  store i32 %736, i32* %esp.16.reg2mem, !insn.addr !6835
  br label %dec_label_pc_45c3b2, !insn.addr !6835

dec_label_pc_45c3b2:                              ; preds = %dec_label_pc_45c3a3, %dec_label_pc_45c364
  %esp.16.reload = load i32, i32* %esp.16.reg2mem
  %.pre-phi195.reload = load i32, i32* %.pre-phi195.reg2mem
  %738 = add i32 %esp.16.reload, -4, !insn.addr !6834
  %739 = inttoptr i32 %738 to i32*, !insn.addr !6834
  store i32 %.pre-phi195.reload, i32* %739, align 4, !insn.addr !6834
  store i32 %738, i32* %storemerge57.reg2mem, !insn.addr !6836
  store i8** %stack_var_-468, i8*** %storemerge30.in.reg2mem, !insn.addr !6836
  br label %dec_label_pc_45c3bf, !insn.addr !6836

dec_label_pc_45c3bf:                              ; preds = %dec_label_pc_45c3b2, %dec_label_pc_45bf1d
  %storemerge30.in.reload = load i8**, i8*** %storemerge30.in.reg2mem
  %storemerge57.reload = load i32, i32* %storemerge57.reg2mem
  %storemerge30 = ptrtoint i8** %storemerge30.in.reload to i32
  %740 = add i32 %storemerge57.reload, -4, !insn.addr !6837
  %741 = inttoptr i32 %740 to i32*, !insn.addr !6837
  store i32 460, i32* %741, align 4, !insn.addr !6837
  %742 = add i32 %storemerge57.reload, -8, !insn.addr !6838
  %743 = inttoptr i32 %742 to i32*, !insn.addr !6838
  store i32 %storemerge30, i32* %743, align 4, !insn.addr !6838
  %744 = call i32 @memcpy_s_3(i8* null, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6839
  %745 = add i32 %storemerge57.reload, 8, !insn.addr !6840
  store i32 %745, i32* %esp.17.ph.reg2mem, !insn.addr !6840
  br label %dec_label_pc_45c3c9thread-pre-split, !insn.addr !6840

dec_label_pc_45c3c9thread-pre-split:              ; preds = %dec_label_pc_45beb9, %dec_label_pc_45bf2f, %dec_label_pc_45bf38, %dec_label_pc_45bf6a, %dec_label_pc_45bf81, %dec_label_pc_45c2ee, %dec_label_pc_45c346, %dec_label_pc_45c3bf, %dec_label_pc_45c2f6
  %esp.17.ph.reload = load i32, i32* %esp.17.ph.reg2mem
  %.pr = load i8*, i8** %stack_var_-472, align 4
  store i8* %.pr, i8** %.reg2mem309
  store i32 %esp.17.ph.reload, i32* %esp.17.reg2mem
  br label %dec_label_pc_45c3c9

dec_label_pc_45c3c9:                              ; preds = %dec_label_pc_45c3c9thread-pre-split, %dec_label_pc_45c355
  %esp.17.reload = load i32, i32* %esp.17.reg2mem
  %.reload310 = load i8*, i8** %.reg2mem309, !insn.addr !6841
  %746 = icmp eq i8* %.reload310, null, !insn.addr !6842
  store i32 %esp.17.reload, i32* %esp.1789.reg2mem, !insn.addr !6843
  br i1 %746, label %dec_label_pc_45c45d, label %dec_label_pc_45c3e1, !insn.addr !6843

dec_label_pc_45c3e1:                              ; preds = %dec_label_pc_45c3c9
  %747 = ptrtoint i8* %.reload310 to i32, !insn.addr !6841
  %748 = add i32 %esp.17.reload, -4, !insn.addr !6844
  %749 = inttoptr i32 %748 to i32*, !insn.addr !6844
  store i32 10, i32* %749, align 4, !insn.addr !6844
  %750 = add i32 %39, -464, !insn.addr !6845
  store i32 0, i32* %edi.9.reg2mem, !insn.addr !6846
  br label %dec_label_pc_45c3e8, !insn.addr !6846

dec_label_pc_45c3e8:                              ; preds = %dec_label_pc_45c3e8, %dec_label_pc_45c3e1
  %edi.9.reload = load i32, i32* %edi.9.reg2mem
  %751 = mul i32 %edi.9.reload, 4, !insn.addr !6845
  %752 = add i32 %751, %750, !insn.addr !6845
  %753 = inttoptr i32 %752 to i32*, !insn.addr !6845
  %754 = load i32, i32* %753, align 4, !insn.addr !6845
  %755 = add i32 %edi.9.reload, 1, !insn.addr !6847
  %756 = icmp eq i32 %755, %747, !insn.addr !6848
  %757 = icmp eq i1 %756, false, !insn.addr !6849
  store i32 %755, i32* %edi.9.reg2mem, !insn.addr !6849
  br i1 %757, label %dec_label_pc_45c3e8, label %dec_label_pc_45c404, !insn.addr !6849

dec_label_pc_45c404:                              ; preds = %dec_label_pc_45c3e8
  %758 = icmp ult i32 %754, 429496730
  store i32 %esp.17.reload, i32* %esp.1789.reg2mem, !insn.addr !6850
  br i1 %758, label %dec_label_pc_45c45d, label %dec_label_pc_45c419, !insn.addr !6850

dec_label_pc_45c419:                              ; preds = %dec_label_pc_45c404
  %759 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6851
  %760 = icmp ult i8* %759, inttoptr (i32 115 to i8*), !insn.addr !6852
  %761 = icmp eq i1 %760, false, !insn.addr !6853
  br i1 %761, label %dec_label_pc_45c435, label %dec_label_pc_45c424, !insn.addr !6853

dec_label_pc_45c424:                              ; preds = %dec_label_pc_45c419
  %762 = udiv i32 %754, 429496730, !insn.addr !6854
  %763 = ptrtoint i8* %759 to i32, !insn.addr !6851
  %764 = mul i32 %763, 4, !insn.addr !6855
  %765 = add i32 %764, %750, !insn.addr !6855
  %766 = inttoptr i32 %765 to i32*, !insn.addr !6855
  store i32 %762, i32* %766, align 4, !insn.addr !6855
  %767 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6856
  %768 = ptrtoint i8* %767 to i32, !insn.addr !6856
  %769 = add i32 %768, 1, !insn.addr !6856
  %770 = inttoptr i32 %769 to i8*, !insn.addr !6856
  store i8* %770, i8** %stack_var_-472, align 4, !insn.addr !6856
  store i32 %esp.17.reload, i32* %esp.1789.reg2mem, !insn.addr !6857
  br label %dec_label_pc_45c45d, !insn.addr !6857

dec_label_pc_45c435:                              ; preds = %dec_label_pc_45c419
  store i32 0, i32* %749, align 4, !insn.addr !6858
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6859
  %771 = add i32 %esp.17.reload, -8, !insn.addr !6860
  %772 = inttoptr i32 %771 to i32*, !insn.addr !6860
  %773 = ptrtoint i32* %stack_var_-2404 to i32, !insn.addr !6860
  store i32 %773, i32* %772, align 4, !insn.addr !6860
  %774 = add i32 %esp.17.reload, -12, !insn.addr !6861
  %775 = inttoptr i32 %774 to i32*, !insn.addr !6861
  store i32 460, i32* %775, align 4, !insn.addr !6861
  %776 = add i32 %esp.17.reload, -16, !insn.addr !6862
  %777 = inttoptr i32 %776 to i32*, !insn.addr !6862
  %778 = ptrtoint i8** %stack_var_-468 to i32, !insn.addr !6862
  store i32 %778, i32* %777, align 4, !insn.addr !6862
  %779 = call i32 @memcpy_s_3(i8* null, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6863
  store i32 %esp.17.reload, i32* %esp.1789.reg2mem, !insn.addr !6864
  br label %dec_label_pc_45c45d, !insn.addr !6864

dec_label_pc_45c45d:                              ; preds = %dec_label_pc_45c314, %dec_label_pc_45c404, %dec_label_pc_45c424, %dec_label_pc_45c435, %dec_label_pc_45c3c9
  %esp.1789.reload = load i32, i32* %esp.1789.reg2mem
  %780 = add i32 %esp.1789.reload, -4, !insn.addr !6865
  %781 = inttoptr i32 %780 to i32*, !insn.addr !6865
  %782 = ptrtoint i8** %stack_var_-936 to i32, !insn.addr !6865
  store i32 %782, i32* %781, align 4, !insn.addr !6865
  %783 = add i32 %esp.1789.reload, -8, !insn.addr !6866
  %784 = inttoptr i32 %783 to i32*, !insn.addr !6866
  %785 = ptrtoint i8** %stack_var_-472 to i32, !insn.addr !6866
  store i32 %785, i32* %784, align 4, !insn.addr !6866
  %786 = call i32 @function_4032bf(), !insn.addr !6867
  %787 = icmp eq i32 %786, 10, !insn.addr !6868
  %788 = icmp eq i1 %787, false, !insn.addr !6869
  br i1 %788, label %dec_label_pc_45c511, label %dec_label_pc_45c47b, !insn.addr !6869

dec_label_pc_45c47b:                              ; preds = %dec_label_pc_45c45d
  %789 = add i32 %result_count, 1, !insn.addr !6870
  %790 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6871
  %791 = inttoptr i32 %result_count to i8*, !insn.addr !6872
  store i8 49, i8* %791, align 1, !insn.addr !6872
  %792 = icmp eq i8* %790, null, !insn.addr !6873
  store i32 %789, i32* %esi.17.reg2mem, !insn.addr !6874
  store i32 add (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 1), i32* %storemerge.reg2mem, !insn.addr !6874
  br i1 %792, label %dec_label_pc_45c52b, label %dec_label_pc_45c49b, !insn.addr !6874

dec_label_pc_45c49b:                              ; preds = %dec_label_pc_45c47b
  %793 = ptrtoint i8* %790 to i32, !insn.addr !6871
  store i32 10, i32* %781, align 4, !insn.addr !6875
  %794 = add i32 %39, -928, !insn.addr !6876
  store i32 0, i32* %ecx.28.reg2mem, !insn.addr !6877
  br label %dec_label_pc_45c4a4, !insn.addr !6877

dec_label_pc_45c4a4:                              ; preds = %dec_label_pc_45c4a4, %dec_label_pc_45c49b
  %ecx.28.reload = load i32, i32* %ecx.28.reg2mem
  %795 = mul i32 %ecx.28.reload, 4, !insn.addr !6876
  %796 = add i32 %795, %794, !insn.addr !6876
  %797 = inttoptr i32 %796 to i32*, !insn.addr !6876
  %798 = load i32, i32* %797, align 4, !insn.addr !6876
  %799 = add i32 %ecx.28.reload, 1, !insn.addr !6878
  %800 = icmp eq i32 %799, %793, !insn.addr !6879
  %801 = icmp eq i1 %800, false, !insn.addr !6880
  store i32 %799, i32* %ecx.28.reg2mem, !insn.addr !6880
  br i1 %801, label %dec_label_pc_45c4a4, label %dec_label_pc_45c4c0, !insn.addr !6880

dec_label_pc_45c4c0:                              ; preds = %dec_label_pc_45c4a4
  %802 = icmp ult i32 %798, 429496730
  store i32 %789, i32* %esi.17.reg2mem, !insn.addr !6881
  store i32 add (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 1), i32* %storemerge.reg2mem, !insn.addr !6881
  br i1 %802, label %dec_label_pc_45c52b, label %dec_label_pc_45c4cf, !insn.addr !6881

dec_label_pc_45c4cf:                              ; preds = %dec_label_pc_45c4c0
  %803 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6882
  %804 = icmp ult i8* %803, inttoptr (i32 115 to i8*), !insn.addr !6883
  %805 = icmp eq i1 %804, false, !insn.addr !6884
  br i1 %805, label %dec_label_pc_45c4e9, label %dec_label_pc_45c4da, !insn.addr !6884

dec_label_pc_45c4da:                              ; preds = %dec_label_pc_45c4cf
  %806 = udiv i32 %798, 429496730, !insn.addr !6885
  %807 = ptrtoint i8* %803 to i32, !insn.addr !6882
  %808 = mul i32 %807, 4, !insn.addr !6886
  %809 = add i32 %808, %794, !insn.addr !6886
  %810 = inttoptr i32 %809 to i32*, !insn.addr !6886
  store i32 %806, i32* %810, align 4, !insn.addr !6886
  %811 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6887
  %812 = ptrtoint i8* %811 to i32, !insn.addr !6887
  %813 = add i32 %812, 1, !insn.addr !6887
  %814 = inttoptr i32 %813 to i8*, !insn.addr !6887
  store i8* %814, i8** %stack_var_-936, align 4, !insn.addr !6887
  store i32 %789, i32* %esi.17.reg2mem, !insn.addr !6888
  store i32 add (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 1), i32* %storemerge.reg2mem, !insn.addr !6888
  br label %dec_label_pc_45c52b, !insn.addr !6888

dec_label_pc_45c4e9:                              ; preds = %dec_label_pc_45c4cf
  store i32 0, i32* %781, align 4, !insn.addr !6889
  store i8* null, i8** %stack_var_-936, align 4, !insn.addr !6890
  %815 = ptrtoint i32* %stack_var_-2404 to i32, !insn.addr !6891
  store i32 %815, i32* %784, align 4, !insn.addr !6891
  %816 = add i32 %esp.1789.reload, -12, !insn.addr !6892
  %817 = inttoptr i32 %816 to i32*, !insn.addr !6892
  store i32 460, i32* %817, align 4, !insn.addr !6892
  %818 = add i32 %esp.1789.reload, -16, !insn.addr !6893
  %819 = inttoptr i32 %818 to i32*, !insn.addr !6893
  %820 = ptrtoint i8** %stack_var_-932 to i32, !insn.addr !6893
  store i32 %820, i32* %819, align 4, !insn.addr !6893
  %821 = call i32 @memcpy_s_3(i8* null, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6894
  store i32 %789, i32* %esi.17.reg2mem, !insn.addr !6895
  store i32 add (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 1), i32* %storemerge.reg2mem, !insn.addr !6895
  br label %dec_label_pc_45c52b, !insn.addr !6895

dec_label_pc_45c511:                              ; preds = %dec_label_pc_45c45d
  %822 = icmp eq i32 %786, 0, !insn.addr !6896
  %823 = icmp eq i1 %822, false, !insn.addr !6897
  store i32 %result_count, i32* %esi.17.reg2mem, !insn.addr !6897
  store i32 add (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 -1), i32* %storemerge.reg2mem, !insn.addr !6897
  br i1 %823, label %dec_label_pc_45c51e, label %dec_label_pc_45c52b, !insn.addr !6897

dec_label_pc_45c51e:                              ; preds = %dec_label_pc_45c511
  %824 = add i32 %result_count, 1, !insn.addr !6898
  %825 = trunc i32 %786 to i8
  %826 = add i8 %825, 48, !insn.addr !6899
  %827 = inttoptr i32 %result_count to i8*, !insn.addr !6899
  store i8 %826, i8* %827, align 1, !insn.addr !6899
  store i32 %824, i32* %esi.17.reg2mem, !insn.addr !6899
  store i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32* %storemerge.reg2mem, !insn.addr !6899
  br label %dec_label_pc_45c52b, !insn.addr !6899

dec_label_pc_45c52b:                              ; preds = %dec_label_pc_45c511, %dec_label_pc_45c47b, %dec_label_pc_45c4c0, %dec_label_pc_45c4da, %dec_label_pc_45c4e9, %dec_label_pc_45c51e
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %esi.17.reload = load i32, i32* %esi.17.reg2mem
  %828 = add i32 %17, 4, !insn.addr !6900
  %829 = inttoptr i32 %828 to i32*, !insn.addr !6900
  store i32 %storemerge.reload, i32* %829, align 4, !insn.addr !6900
  %830 = icmp sgt i32 %storemerge.reload, -1, !insn.addr !6901
  %831 = icmp sgt i32 %41, -1
  %or.cond68 = icmp eq i1 %831, %830
  %832 = select i1 %or.cond68, i32 %storemerge.reload, i32 0
  %spec.select86 = add i32 %832, %41
  %833 = add i32 %4, -1, !insn.addr !6902
  %834 = icmp ult i32 %833, %spec.select86, !insn.addr !6903
  %eax.27 = select i1 %834, i32 %833, i32 %spec.select86
  %835 = add i32 %eax.27, %result_count, !insn.addr !6904
  %836 = icmp eq i32 %esi.17.reload, %835, !insn.addr !6905
  store i32 %esi.17.reload, i32* %esi.19.reg2mem, !insn.addr !6906
  br i1 %836, label %dec_label_pc_45c632, label %dec_label_pc_45c566.preheader, !insn.addr !6906

dec_label_pc_45c566.preheader:                    ; preds = %dec_label_pc_45c52b
  %837 = add i32 %39, -464
  %838 = ptrtoint i32* %stack_var_-2404 to i32
  %839 = add i32 %esp.1789.reload, -12
  %840 = inttoptr i32 %839 to i32*
  %841 = add i32 %esp.1789.reload, -16
  %842 = inttoptr i32 %841 to i32*
  %843 = ptrtoint i8** %stack_var_-468 to i32
  store i32 %esi.17.reload, i32* %esi.18.reg2mem
  br label %dec_label_pc_45c566

dec_label_pc_45c566:                              ; preds = %dec_label_pc_45c566.preheader, %dec_label_pc_45c624
  %esi.18.reload = load i32, i32* %esi.18.reg2mem
  %844 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6907
  %845 = ptrtoint i8* %844 to i32, !insn.addr !6907
  %846 = icmp eq i8* %844, null, !insn.addr !6908
  store i32 0, i32* %ecx.30.reg2mem, !insn.addr !6909
  store i32 %esi.18.reload, i32* %esi.19.reg2mem, !insn.addr !6909
  br i1 %846, label %dec_label_pc_45c632, label %dec_label_pc_45c57a, !insn.addr !6909

dec_label_pc_45c57a:                              ; preds = %dec_label_pc_45c566, %dec_label_pc_45c57a
  %ecx.30.reload = load i32, i32* %ecx.30.reg2mem
  %847 = mul i32 %ecx.30.reload, 4, !insn.addr !6910
  %848 = add i32 %847, %837, !insn.addr !6910
  %849 = inttoptr i32 %848 to i32*, !insn.addr !6910
  %850 = load i32, i32* %849, align 4, !insn.addr !6910
  %851 = add i32 %ecx.30.reload, 1, !insn.addr !6911
  %852 = icmp eq i32 %851, %845, !insn.addr !6912
  %853 = icmp eq i1 %852, false, !insn.addr !6913
  store i32 %851, i32* %ecx.30.reg2mem, !insn.addr !6913
  br i1 %853, label %dec_label_pc_45c57a, label %dec_label_pc_45c59b, !insn.addr !6913

dec_label_pc_45c59b:                              ; preds = %dec_label_pc_45c57a
  %854 = icmp ult i32 %850, 5
  br i1 %854, label %dec_label_pc_45c5e4, label %dec_label_pc_45c5a4, !insn.addr !6914

dec_label_pc_45c5a4:                              ; preds = %dec_label_pc_45c59b
  %855 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6915
  %856 = icmp ult i8* %855, inttoptr (i32 115 to i8*), !insn.addr !6916
  %857 = icmp eq i1 %856, false, !insn.addr !6917
  br i1 %857, label %dec_label_pc_45c5be, label %dec_label_pc_45c5af, !insn.addr !6917

dec_label_pc_45c5af:                              ; preds = %dec_label_pc_45c5a4
  %858 = udiv i32 %850, 5, !insn.addr !6918
  %859 = ptrtoint i8* %855 to i32, !insn.addr !6915
  %860 = mul i32 %859, 4, !insn.addr !6919
  %861 = add i32 %860, %837, !insn.addr !6919
  %862 = inttoptr i32 %861 to i32*, !insn.addr !6919
  store i32 %858, i32* %862, align 4, !insn.addr !6919
  %863 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6920
  %864 = ptrtoint i8* %863 to i32, !insn.addr !6920
  %865 = add i32 %864, 1, !insn.addr !6920
  %866 = inttoptr i32 %865 to i8*, !insn.addr !6920
  store i8* %866, i8** %stack_var_-472, align 4, !insn.addr !6920
  br label %dec_label_pc_45c5e4, !insn.addr !6921

dec_label_pc_45c5be:                              ; preds = %dec_label_pc_45c5a4
  store i32 0, i32* %781, align 4, !insn.addr !6922
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6923
  store i32 %838, i32* %784, align 4, !insn.addr !6924
  store i32 460, i32* %840, align 4, !insn.addr !6925
  store i32 %843, i32* %842, align 4, !insn.addr !6926
  %867 = call i32 @memcpy_s_3(i8* null, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6927
  br label %dec_label_pc_45c5e4, !insn.addr !6928

dec_label_pc_45c5e4:                              ; preds = %dec_label_pc_45c5be, %dec_label_pc_45c5af, %dec_label_pc_45c59b
  store i32 %782, i32* %781, align 4, !insn.addr !6929
  store i32 %785, i32* %784, align 4, !insn.addr !6930
  %868 = call i32 @function_4032bf(), !insn.addr !6931
  store i32 8, i32* %781, align 4, !insn.addr !6932
  %869 = sub i32 %835, %esi.18.reload, !insn.addr !6933
  store i32 %868, i32* %eax.28.reg2mem, !insn.addr !6933
  store i32 8, i32* %edi.13.reg2mem, !insn.addr !6933
  br label %dec_label_pc_45c604, !insn.addr !6933

dec_label_pc_45c604:                              ; preds = %dec_label_pc_45c616, %dec_label_pc_45c5e4
  %edi.13.reload = load i32, i32* %edi.13.reg2mem
  %eax.28.reload = load i32, i32* %eax.28.reg2mem
  %870 = icmp ult i32 %869, %edi.13.reload, !insn.addr !6934
  br i1 %870, label %dec_label_pc_45c616, label %dec_label_pc_45c613, !insn.addr !6935

dec_label_pc_45c613:                              ; preds = %dec_label_pc_45c604
  %871 = urem i32 %eax.28.reload, 10
  %872 = trunc i32 %871 to i8
  %873 = or i8 %872, 48, !insn.addr !6936
  %874 = add i32 %edi.13.reload, %esi.18.reload, !insn.addr !6936
  %875 = inttoptr i32 %874 to i8*, !insn.addr !6936
  store i8 %873, i8* %875, align 1, !insn.addr !6936
  br label %dec_label_pc_45c616, !insn.addr !6936

dec_label_pc_45c616:                              ; preds = %dec_label_pc_45c613, %dec_label_pc_45c604
  %876 = udiv i32 %eax.28.reload, 10, !insn.addr !6937
  %877 = add nsw i32 %edi.13.reload, -1, !insn.addr !6938
  %878 = icmp eq i32 %edi.13.reload, 0, !insn.addr !6939
  %879 = icmp eq i1 %878, false, !insn.addr !6940
  store i32 %876, i32* %eax.28.reg2mem, !insn.addr !6940
  store i32 %877, i32* %edi.13.reg2mem, !insn.addr !6940
  br i1 %879, label %dec_label_pc_45c604, label %dec_label_pc_45c61c, !insn.addr !6940

dec_label_pc_45c61c:                              ; preds = %dec_label_pc_45c616
  %880 = icmp ult i32 %869, 10
  store i32 %869, i32* %ecx.31.reg2mem, !insn.addr !6941
  br i1 %880, label %dec_label_pc_45c624, label %dec_label_pc_45c621, !insn.addr !6941

dec_label_pc_45c621:                              ; preds = %dec_label_pc_45c61c
  store i32 9, i32* %781, align 4, !insn.addr !6942
  store i32 9, i32* %ecx.31.reg2mem, !insn.addr !6943
  br label %dec_label_pc_45c624, !insn.addr !6943

dec_label_pc_45c624:                              ; preds = %dec_label_pc_45c621, %dec_label_pc_45c61c
  %ecx.31.reload = load i32, i32* %ecx.31.reg2mem
  %881 = add i32 %ecx.31.reload, %esi.18.reload, !insn.addr !6944
  %882 = icmp eq i32 %881, %835, !insn.addr !6945
  %883 = icmp eq i1 %882, false, !insn.addr !6946
  store i32 %881, i32* %esi.18.reg2mem, !insn.addr !6946
  store i32 %881, i32* %esi.19.reg2mem, !insn.addr !6946
  br i1 %883, label %dec_label_pc_45c566, label %dec_label_pc_45c632, !insn.addr !6946

dec_label_pc_45c632:                              ; preds = %dec_label_pc_45c624, %dec_label_pc_45c566, %dec_label_pc_45c52b
  %esi.19.reload = load i32, i32* %esi.19.reg2mem
  %884 = inttoptr i32 %esi.19.reload to i8*, !insn.addr !6947
  store i8 0, i8* %884, align 1, !insn.addr !6947
  store i32 %esp.1789.reload, i32* %esp.26.reg2mem, !insn.addr !6947
  br label %dec_label_pc_45c635, !insn.addr !6947

dec_label_pc_45c635:                              ; preds = %dec_label_pc_45c677, %dec_label_pc_45c632
  %885 = icmp eq i8 %storemerge55.reload, 0, !insn.addr !6948
  br i1 %885, label %dec_label_pc_45c64e, label %dec_label_pc_45c641, !insn.addr !6949

dec_label_pc_45c641:                              ; preds = %dec_label_pc_45c635
  %esp.26.reload = load i32, i32* %esp.26.reg2mem
  %886 = add i32 %esp.26.reload, 8, !insn.addr !6950
  %887 = inttoptr i32 %886 to i32*, !insn.addr !6950
  %888 = ptrtoint i32* %reset_fp_state_-1944 to i32, !insn.addr !6950
  store i32 %888, i32* %887, align 4, !insn.addr !6950
  %889 = call i32 @fesetenv(%fenv_t* bitcast (i32* @80 to %fenv_t*)), !insn.addr !6951
  br label %dec_label_pc_45c64e, !insn.addr !6952

dec_label_pc_45c64e:                              ; preds = %dec_label_pc_45c641, %dec_label_pc_45c635
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !6953
  ret void, !insn.addr !6954

dec_label_pc_45c65a:                              ; preds = %dec_label_pc_45b41d
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_478c44, i32 0, i32 0), i8** %stack_var_-2424, align 4, !insn.addr !6955
  br label %dec_label_pc_45c66d, !insn.addr !6956

dec_label_pc_45c661:                              ; preds = %dec_label_pc_45b41d
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_478c3c, i32 0, i32 0), i8** %stack_var_-2424, align 4, !insn.addr !6957
  br label %dec_label_pc_45c66d, !insn.addr !6958

dec_label_pc_45c668:                              ; preds = %dec_label_pc_45b41d
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_478c34, i32 0, i32 0), i8** %stack_var_-2424, align 4, !insn.addr !6959
  br label %dec_label_pc_45c66d, !insn.addr !6959

dec_label_pc_45c66d:                              ; preds = %dec_label_pc_45c685, %dec_label_pc_45c668, %dec_label_pc_45c661, %dec_label_pc_45c65a
  %esp.27 = ptrtoint i8** %stack_var_-2424 to i32
  %890 = add i32 %esp.27, -4, !insn.addr !6960
  %891 = inttoptr i32 %890 to i32*, !insn.addr !6960
  %892 = add i32 %esp.27, -8, !insn.addr !6961
  %893 = inttoptr i32 %892 to i32*, !insn.addr !6961
  store i32 %result_count, i32* %893, align 4, !insn.addr !6961
  store i32 %892, i32* %storemerge53.reg2mem, !insn.addr !6961
  br label %dec_label_pc_45c677, !insn.addr !6961

dec_label_pc_45c677:                              ; preds = %dec_label_pc_45c66d, %dec_label_pc_45b3f7
  %storemerge53.reload = load i32, i32* %storemerge53.reg2mem
  %894 = load i8*, i8** %stack_var_-2424, align 4, !insn.addr !6962
  %895 = call i32 @strcpy_s(i8* %894, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*)), !insn.addr !6962
  %896 = add i32 %storemerge53.reload, 12, !insn.addr !6963
  %897 = icmp eq i32 %895, 0, !insn.addr !6964
  %898 = icmp eq i1 %897, false, !insn.addr !6965
  store i32 %896, i32* %esp.26.reg2mem, !insn.addr !6965
  br i1 %898, label %dec_label_pc_45c68c, label %dec_label_pc_45c635, !insn.addr !6965

dec_label_pc_45c685:                              ; preds = %dec_label_pc_45b41d
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_478c2c, i32 0, i32 0), i8** %stack_var_-2424, align 4, !insn.addr !6966
  br label %dec_label_pc_45c66d, !insn.addr !6967

dec_label_pc_45c68c:                              ; preds = %dec_label_pc_45c677
  %899 = add i32 %storemerge53.reload, 8, !insn.addr !6968
  %900 = inttoptr i32 %899 to i32*, !insn.addr !6968
  store i32 0, i32* %900, align 4, !insn.addr !6968
  %901 = add i32 %storemerge53.reload, 4, !insn.addr !6969
  %902 = inttoptr i32 %901 to i32*, !insn.addr !6969
  store i32 0, i32* %902, align 4, !insn.addr !6969
  %903 = inttoptr i32 %storemerge53.reload to i32*, !insn.addr !6970
  store i32 0, i32* %903, align 4, !insn.addr !6970
  %904 = add i32 %storemerge53.reload, -4, !insn.addr !6971
  %905 = inttoptr i32 %904 to i32*, !insn.addr !6971
  store i32 0, i32* %905, align 4, !insn.addr !6971
  %906 = add i32 %storemerge53.reload, -8, !insn.addr !6972
  %907 = inttoptr i32 %906 to i32*, !insn.addr !6972
  store i32 0, i32* %907, align 4, !insn.addr !6972
  %908 = call i32 @__invoke_watson(), !insn.addr !6973
  %909 = call i32 @__asm_int3(), !insn.addr !6974
  %910 = call i32 @__asm_int3(), !insn.addr !6975
  %911 = call i32 @__asm_int3(), !insn.addr !6976
  %912 = call i32 @__asm_int3(), !insn.addr !6977
  %913 = call i32 @__asm_int3(), !insn.addr !6978
  %914 = call i32 @__asm_int3(), !insn.addr !6979
  %915 = call i32 @__asm_int3(), !insn.addr !6980
  %916 = call i32 @__asm_int3(), !insn.addr !6981
  %917 = call i32 @__asm_int3(), !insn.addr !6982
  %918 = call i32 @__asm_int3(), !insn.addr !6983
  %919 = call i32 @__asm_int3(), !insn.addr !6984
  %920 = call i32 @__asm_int3(), !insn.addr !6985
  %921 = call i32 @__asm_int3(), !insn.addr !6986
  %922 = call i32 @__asm_int3(), !insn.addr !6987
  %923 = call i32 @__asm_int3(), !insn.addr !6988
  %924 = call i32 @__asm_int3(), !insn.addr !6989
  %925 = call i32 @__asm_int3(), !insn.addr !6990
  %926 = call i32 @__asm_int3(), !insn.addr !6991
  %927 = call i32 @__asm_int3(), !insn.addr !6992
  %928 = call i32 @__asm_int3(), !insn.addr !6993
  %929 = call i32 @__asm_int3(), !insn.addr !6994
  %930 = call i32 @__asm_int3(), !insn.addr !6995
  %931 = call i32 @__asm_int3(), !insn.addr !6996
  %932 = call i32 @__asm_int3(), !insn.addr !6997
  %933 = call i32 @__asm_int3(), !insn.addr !6998
  %934 = call i32 @__asm_int3(), !insn.addr !6999
  %935 = call i32 @__asm_int3(), !insn.addr !7000
  %936 = call i32 @__asm_int3(), !insn.addr !7001
  %937 = call i32 @__asm_int3(), !insn.addr !7002
  %938 = call i32 @__asm_int3(), !insn.addr !7003
  %939 = call i32 @__asm_int3(), !insn.addr !7004
  %940 = call i32 @__asm_int3(), !insn.addr !7005
  %941 = call i32 @__asm_int3(), !insn.addr !7006
  %942 = call i32 @__asm_int3(), !insn.addr !7007
  %943 = call i32 @__asm_int3(), !insn.addr !7008
  %944 = call i32 @__asm_int3(), !insn.addr !7009
  %945 = call i32 @__asm_int3(), !insn.addr !7010
  %946 = call i32 @__asm_int3(), !insn.addr !7011
  %947 = call i32 @__asm_int3(), !insn.addr !7012
  %948 = call i32 @__asm_int3(), !insn.addr !7013
  %949 = call i32 @__asm_int3(), !insn.addr !7014
  %950 = call i32 @__asm_int3(), !insn.addr !7015
  %951 = call i32 @__asm_int3(), !insn.addr !7016
  %952 = call i32 @__asm_int3(), !insn.addr !7017
  %953 = call i32 @__asm_int3(), !insn.addr !7018
  %954 = call i32 @__asm_int3(), !insn.addr !7019
  %955 = call i32 @__asm_int3(), !insn.addr !7020
  %956 = call i32 @__asm_int3(), !insn.addr !7021
  %957 = call i32 @__asm_int3(), !insn.addr !7022
  %958 = call i32 @__asm_int3(), !insn.addr !7023
  %959 = call i32 @__asm_int3(), !insn.addr !7024
  %960 = call i32 @__asm_int3(), !insn.addr !7025
  %961 = call i32 @__asm_int3(), !insn.addr !7026
  %962 = call i32 @__asm_int3(), !insn.addr !7027
  %963 = call i32 @__asm_int3(), !insn.addr !7028
  %964 = call i32 @__asm_int3(), !insn.addr !7029
  %965 = call i32 @__asm_int3(), !insn.addr !7030
  %966 = call i32 @__asm_int3(), !insn.addr !7031
  %967 = call i32 @__asm_int3(), !insn.addr !7032
  %968 = call i32 @__asm_int3(), !insn.addr !7033
  %969 = call i32 @__asm_int3(), !insn.addr !7034
  %970 = call i32 @__asm_int3(), !insn.addr !7035
  %971 = call i32 @__asm_int3(), !insn.addr !7036
  %972 = call i32 @__asm_int3(), !insn.addr !7037
  %973 = call i32 @__asm_int3(), !insn.addr !7038
  %974 = call i32 @__asm_int3(), !insn.addr !7039
  %975 = call i32 @__asm_int3(), !insn.addr !7040
  %976 = call i32 @__asm_int3(), !insn.addr !7041
  %977 = call i32 @__asm_int3(), !insn.addr !7042
  %978 = call i32 @__asm_int3(), !insn.addr !7043
  %979 = call i32 @__asm_int3(), !insn.addr !7044
  %980 = call i32 @__asm_int3(), !insn.addr !7045
  %981 = call i32 @__asm_int3(), !insn.addr !7046
  %982 = call i32 @__asm_int3(), !insn.addr !7047
  %983 = call i32 @__asm_int3(), !insn.addr !7048
  %984 = call i32 @__asm_int3(), !insn.addr !7049
  %985 = call i32 @__asm_int3(), !insn.addr !7050
  %986 = call i32 @__asm_int3(), !insn.addr !7051
  %987 = call i32 @__asm_int3(), !insn.addr !7052
  %988 = call i32 @__asm_int3(), !insn.addr !7053
  %989 = call i32 @__asm_int3(), !insn.addr !7054
  %990 = call i32 @__asm_int3(), !insn.addr !7055
  %991 = call i32 @__asm_int3(), !insn.addr !7056
  %992 = call i32 @__asm_int3(), !insn.addr !7057
  %993 = call i32 @__asm_int3(), !insn.addr !7058
  %994 = call i32 @__asm_int3(), !insn.addr !7059
  %995 = call i32 @__asm_int3(), !insn.addr !7060
  %996 = call i32 @__asm_int3(), !insn.addr !7061
  %997 = call i32 @__asm_int3(), !insn.addr !7062
  %998 = call i32 @__asm_int3(), !insn.addr !7063
  %999 = call i32 @__asm_int3(), !insn.addr !7064
  %1000 = call i32 @__asm_int3(), !insn.addr !7065
  %1001 = call i32 @__asm_int3(), !insn.addr !7066
  %1002 = call i32 @__asm_int3(), !insn.addr !7067
  %1003 = call i32 @__asm_int3(), !insn.addr !7068
  %1004 = call i32 @__asm_int3(), !insn.addr !7069
  %1005 = call i32 @__asm_int3(), !insn.addr !7070
  %1006 = call i32 @__asm_int3(), !insn.addr !7071
  %1007 = call i32 @__asm_int3(), !insn.addr !7072
  %1008 = call i32 @__asm_int3(), !insn.addr !7073
  %1009 = call i32 @__asm_int3(), !insn.addr !7074
  %1010 = call i32 @__asm_int3(), !insn.addr !7075
  %1011 = call i32 @__asm_int3(), !insn.addr !7076
  %1012 = call i32 @__asm_int3(), !insn.addr !7077
  %1013 = call i32 @__asm_int3(), !insn.addr !7078
  %1014 = call i32 @__asm_int3(), !insn.addr !7079
  %1015 = call i32 @__asm_int3(), !insn.addr !7080
  %1016 = call i32 @__asm_int3(), !insn.addr !7081
  %1017 = call i32 @__asm_int3(), !insn.addr !7082
  %1018 = call i32 @__asm_int3(), !insn.addr !7083
  %1019 = call i32 @__asm_int3(), !insn.addr !7084
  %1020 = call i32 @__asm_int3(), !insn.addr !7085
  %1021 = call i32 @__asm_int3(), !insn.addr !7086
  %1022 = call i32 @__asm_int3(), !insn.addr !7087
  %1023 = call i32 @__asm_int3(), !insn.addr !7088
  %1024 = call i32 @__asm_int3(), !insn.addr !7089
  %1025 = call i32 @__asm_int3(), !insn.addr !7090
  %1026 = call i32 @__asm_int3(), !insn.addr !7091
  %1027 = call i32 @__asm_int3(), !insn.addr !7092
  %1028 = call i32 @__asm_int3(), !insn.addr !7093
  %1029 = call i32 @__asm_int3(), !insn.addr !7094
  %1030 = call i32 @__asm_int3(), !insn.addr !7095
  %1031 = call i32 @__asm_int3(), !insn.addr !7096
  %1032 = call i32 @__asm_int3(), !insn.addr !7097
  %1033 = call i32 @__asm_int3(), !insn.addr !7098
  %1034 = call i32 @__asm_int3(), !insn.addr !7099
  %1035 = call i32 @__asm_int3(), !insn.addr !7100
  %1036 = call i32 @__asm_int3(), !insn.addr !7101
  %1037 = call i32 @__asm_int3(), !insn.addr !7102
  %1038 = call i32 @__asm_int3(), !insn.addr !7103
  %1039 = call i32 @__asm_int3(), !insn.addr !7104
  %1040 = call i32 @__asm_int3(), !insn.addr !7105
  %1041 = call i32 @__asm_int3(), !insn.addr !7106
  %1042 = call i32 @__asm_int3(), !insn.addr !7107
  %1043 = call i32 @__asm_int3(), !insn.addr !7108
  %1044 = call i32 @__asm_int3(), !insn.addr !7109
  %1045 = call i32 @__asm_int3(), !insn.addr !7110
  %1046 = call i32 @__asm_int3(), !insn.addr !7111
  %1047 = call i32 @__asm_int3(), !insn.addr !7112
  %1048 = call i32 @__asm_int3(), !insn.addr !7113
  %1049 = call i32 @__asm_int3(), !insn.addr !7114
  %1050 = call i32 @__asm_int3(), !insn.addr !7115
  %1051 = call i32 @__asm_int3(), !insn.addr !7116
  %1052 = call i32 @__asm_int3(), !insn.addr !7117
  %1053 = call i32 @__asm_int3(), !insn.addr !7118
  %1054 = call i32 @__asm_int3(), !insn.addr !7119
  %1055 = call i32 @__asm_int3(), !insn.addr !7120
  %1056 = call i32 @__asm_int3(), !insn.addr !7121
  %1057 = call i32 @__asm_int3(), !insn.addr !7122
  %1058 = call i32 @__asm_int3(), !insn.addr !7123
  %1059 = call i32 @__asm_int3(), !insn.addr !7124
  %1060 = call i32 @__asm_int3(), !insn.addr !7125
  %1061 = call i32 @__asm_int3(), !insn.addr !7126
  %1062 = call i32 @__asm_int3(), !insn.addr !7127
  %1063 = call i32 @__asm_int3(), !insn.addr !7128
  %1064 = call i32 @__asm_int3(), !insn.addr !7129
  %1065 = call i32 @__asm_int3(), !insn.addr !7130
  %1066 = call i32 @__asm_int3(), !insn.addr !7131
  %1067 = call i32 @__asm_int3(), !insn.addr !7132
  %1068 = call i32 @__asm_int3(), !insn.addr !7133
  %1069 = call i32 @__asm_int3(), !insn.addr !7134
  %1070 = call i32 @__asm_int3(), !insn.addr !7135
  %1071 = call i32 @__asm_int3(), !insn.addr !7136
  %1072 = call i32 @__asm_int3(), !insn.addr !7137
  %1073 = call i32 @__asm_int3(), !insn.addr !7138
  %1074 = call i32 @__asm_int3(), !insn.addr !7139
  %1075 = call i32 @__asm_int3(), !insn.addr !7140
  %1076 = call i32 @__asm_int3(), !insn.addr !7141
  %1077 = call i32 @__asm_int3(), !insn.addr !7142
  %1078 = call i32 @__asm_int3(), !insn.addr !7143
  %1079 = call i32 @__asm_int3(), !insn.addr !7144
  %1080 = call i32 @__asm_int3(), !insn.addr !7145
  %1081 = call i32 @__asm_int3(), !insn.addr !7146
  %1082 = call i32 @__asm_int3(), !insn.addr !7147
  %1083 = call i32 @__asm_int3(), !insn.addr !7148
  %1084 = call i32 @__asm_int3(), !insn.addr !7149
  %1085 = call i32 @__asm_int3(), !insn.addr !7150
  %1086 = call i32 @__asm_int3(), !insn.addr !7151
  %1087 = call i32 @__asm_int3(), !insn.addr !7152
  %1088 = call i32 @__asm_int3(), !insn.addr !7153
  %1089 = call i32 @__asm_int3(), !insn.addr !7154
  %1090 = call i32 @__asm_int3(), !insn.addr !7155
  %1091 = call i32 @__asm_int3(), !insn.addr !7156
  %1092 = call i32 @__asm_int3(), !insn.addr !7157
  %1093 = call i32 @__asm_int3(), !insn.addr !7158
  %1094 = call i32 @__asm_int3(), !insn.addr !7159
  %1095 = call i32 @__asm_int3(), !insn.addr !7160
  %1096 = call i32 @__asm_int3(), !insn.addr !7161
  %1097 = call i32 @__asm_int3(), !insn.addr !7162
  %1098 = call i32 @__asm_int3(), !insn.addr !7163
  %1099 = call i32 @__asm_int3(), !insn.addr !7164
  %1100 = call i32 @__asm_int3(), !insn.addr !7165
  %1101 = call i32 @__asm_int3(), !insn.addr !7166
  %1102 = call i32 @__asm_int3(), !insn.addr !7167
  %1103 = call i32 @__asm_int3(), !insn.addr !7168
  %1104 = call i32 @__asm_int3(), !insn.addr !7169
  %1105 = call i32 @__asm_int3(), !insn.addr !7170
  %1106 = call i32 @__asm_int3(), !insn.addr !7171
  %1107 = call i32 @__asm_int3(), !insn.addr !7172
  %1108 = call i32 @__asm_int3(), !insn.addr !7173
  %1109 = call i32 @__asm_int3(), !insn.addr !7174
  %1110 = call i32 @__asm_int3(), !insn.addr !7175
  %1111 = call i32 @__asm_int3(), !insn.addr !7176
  %1112 = call i32 @__asm_int3(), !insn.addr !7177
  %1113 = call i32 @__asm_int3(), !insn.addr !7178
  %1114 = call i32 @__asm_int3(), !insn.addr !7179
  %1115 = call i32 @__asm_int3(), !insn.addr !7180
  %1116 = call i32 @__asm_int3(), !insn.addr !7181
  %1117 = call i32 @__asm_int3(), !insn.addr !7182
  %1118 = call i32 @__asm_int3(), !insn.addr !7183
  %1119 = call i32 @__asm_int3(), !insn.addr !7184
  %1120 = call i32 @__asm_int3(), !insn.addr !7185
  %1121 = call i32 @__asm_int3(), !insn.addr !7186
  %1122 = call i32 @__asm_int3(), !insn.addr !7187
  %1123 = call i32 @__asm_int3(), !insn.addr !7188
  %1124 = call i32 @__asm_int3(), !insn.addr !7189
  %1125 = call i32 @__asm_int3(), !insn.addr !7190
  %1126 = call i32 @__asm_int3(), !insn.addr !7191
  %1127 = call i32 @__asm_int3(), !insn.addr !7192
  %1128 = call i32 @__asm_int3(), !insn.addr !7193
  %1129 = call i32 @__asm_int3(), !insn.addr !7194
  %1130 = call i32 @__asm_int3(), !insn.addr !7195
  %1131 = call i32 @__asm_int3(), !insn.addr !7196
  %1132 = call i32 @__asm_int3(), !insn.addr !7197
  %1133 = call i32 @__asm_int3(), !insn.addr !7198
  %1134 = call i32 @__asm_int3(), !insn.addr !7199
  %1135 = call i32 @__asm_int3(), !insn.addr !7200
  %1136 = call i32 @__asm_int3(), !insn.addr !7201
  %1137 = call i32 @__asm_int3(), !insn.addr !7202
  %1138 = call i32 @__asm_int3(), !insn.addr !7203
  %1139 = call i32 @__asm_int3(), !insn.addr !7204
  %1140 = call i32 @__asm_int3(), !insn.addr !7205
  %1141 = call i32 @__asm_int3(), !insn.addr !7206
  %1142 = call i32 @__asm_int3(), !insn.addr !7207
  %1143 = call i32 @__asm_int3(), !insn.addr !7208
  %1144 = call i32 @__asm_int3(), !insn.addr !7209
  %1145 = call i32 @__asm_int3(), !insn.addr !7210
  %1146 = call i32 @__asm_int3(), !insn.addr !7211
  %1147 = call i32 @__asm_int3(), !insn.addr !7212
  %1148 = call i32 @__asm_int3(), !insn.addr !7213
  %1149 = call i32 @__asm_int3(), !insn.addr !7214
  %1150 = call i32 @__asm_int3(), !insn.addr !7215
  %1151 = call i32 @__asm_int3(), !insn.addr !7216
  %1152 = call i32 @__asm_int3(), !insn.addr !7217
  %1153 = call i32 @__asm_int3(), !insn.addr !7218
  %1154 = call i32 @__asm_int3(), !insn.addr !7219
  %1155 = call i32 @__asm_int3(), !insn.addr !7220
  %1156 = call i32 @__asm_int3(), !insn.addr !7221
  %1157 = call i32 @__asm_int3(), !insn.addr !7222
  %1158 = call i32 @__asm_int3(), !insn.addr !7223
  %1159 = call i32 @__asm_int3(), !insn.addr !7224
  %1160 = call i32 @__asm_int3(), !insn.addr !7225
  %1161 = call i32 @__asm_int3(), !insn.addr !7226
  %1162 = call i32 @__asm_int3(), !insn.addr !7227
  %1163 = call i32 @__asm_int3(), !insn.addr !7228
  %1164 = call i32 @__asm_int3(), !insn.addr !7229
  %1165 = call i32 @__asm_int3(), !insn.addr !7230
  %1166 = call i32 @__asm_int3(), !insn.addr !7231
  %1167 = call i32 @__asm_int3(), !insn.addr !7232
  %1168 = call i32 @__asm_int3(), !insn.addr !7233
  %1169 = call i32 @__asm_int3(), !insn.addr !7234
  %1170 = call i32 @__asm_int3(), !insn.addr !7235
  %1171 = call i32 @__asm_int3(), !insn.addr !7236
  %1172 = call i32 @__asm_int3(), !insn.addr !7237
  %1173 = call i32 @__asm_int3(), !insn.addr !7238
  %1174 = call i32 @__asm_int3(), !insn.addr !7239
  %1175 = call i32 @__asm_int3(), !insn.addr !7240
  %1176 = call i32 @__asm_int3(), !insn.addr !7241
  %1177 = call i32 @__asm_int3(), !insn.addr !7242
  %1178 = call i32 @__asm_int3(), !insn.addr !7243
  %1179 = call i32 @__asm_int3(), !insn.addr !7244
  %1180 = call i32 @__asm_int3(), !insn.addr !7245
  %1181 = call i32 @__asm_int3(), !insn.addr !7246
  %1182 = call i32 @__asm_int3(), !insn.addr !7247
  %1183 = call i32 @__asm_int3(), !insn.addr !7248
  %1184 = call i32 @__asm_int3(), !insn.addr !7249
  %1185 = call i32 @__asm_int3(), !insn.addr !7250
  %1186 = call i32 @__asm_int3(), !insn.addr !7251
  %1187 = call i32 @__asm_int3(), !insn.addr !7252
  %1188 = call i32 @__asm_int3(), !insn.addr !7253
  %1189 = call i32 @__asm_int3(), !insn.addr !7254
  %1190 = call i32 @__asm_int3(), !insn.addr !7255
  %1191 = call i32 @__asm_int3(), !insn.addr !7256
  %1192 = call i32 @__asm_int3(), !insn.addr !7257
  %1193 = call i32 @__asm_int3(), !insn.addr !7258
  %1194 = call i32 @__asm_int3(), !insn.addr !7259
  %1195 = call i32 @__asm_int3(), !insn.addr !7260
  %1196 = call i32 @__asm_int3(), !insn.addr !7261
  %1197 = call i32 @__asm_int3(), !insn.addr !7262
  %1198 = call i32 @__asm_int3(), !insn.addr !7263
  %1199 = call i32 @__asm_int3(), !insn.addr !7264
  %1200 = call i32 @__asm_int3(), !insn.addr !7265
  %1201 = call i32 @__asm_int3(), !insn.addr !7266
  %1202 = call i32 @__asm_int3(), !insn.addr !7267
  %1203 = call i32 @__asm_int3(), !insn.addr !7268
  %1204 = call i32 @__asm_int3(), !insn.addr !7269
  %1205 = call i32 @__asm_int3(), !insn.addr !7270
  %1206 = call i32 @__asm_int3(), !insn.addr !7271
  %1207 = call i32 @__asm_int3(), !insn.addr !7272
  %1208 = call i32 @__asm_int3(), !insn.addr !7273
  %1209 = call i32 @__asm_int3(), !insn.addr !7274
  %1210 = call i32 @__asm_int3(), !insn.addr !7275
  %1211 = call i32 @__asm_int3(), !insn.addr !7276
  %1212 = call i32 @__asm_int3(), !insn.addr !7277
  %1213 = call i32 @__asm_int3(), !insn.addr !7278
  %1214 = call i32 @__asm_int3(), !insn.addr !7279
  %1215 = call i32 @__asm_int3(), !insn.addr !7280
  %1216 = call i32 @__asm_int3(), !insn.addr !7281
  %1217 = call i32 @__asm_int3(), !insn.addr !7282
  %1218 = call i32 @__asm_int3(), !insn.addr !7283
  %1219 = call i32 @__asm_int3(), !insn.addr !7284
  %1220 = call i32 @__asm_int3(), !insn.addr !7285
  %1221 = call i32 @__asm_int3(), !insn.addr !7286
  %1222 = call i32 @__asm_int3(), !insn.addr !7287
  %1223 = call i32 @__asm_int3(), !insn.addr !7288
  %1224 = call i32 @__asm_int3(), !insn.addr !7289
  %1225 = call i32 @__asm_int3(), !insn.addr !7290
  %1226 = call i32 @__asm_int3(), !insn.addr !7291
  %1227 = call i32 @__asm_int3(), !insn.addr !7292
  %1228 = call i32 @__asm_int3(), !insn.addr !7293
  %1229 = call i32 @__asm_int3(), !insn.addr !7294
  %1230 = call i32 @__asm_int3(), !insn.addr !7295
  %1231 = call i32 @__asm_int3(), !insn.addr !7296
  %1232 = call i32 @__asm_int3(), !insn.addr !7297
  %1233 = call i32 @__asm_int3(), !insn.addr !7298
  %1234 = call i32 @__asm_int3(), !insn.addr !7299
  %1235 = call i32 @__asm_int3(), !insn.addr !7300
  %1236 = call i32 @__asm_int3(), !insn.addr !7301
  %1237 = call i32 @__asm_int3(), !insn.addr !7302
  %1238 = call i32 @__asm_int3(), !insn.addr !7303
  %1239 = call i32 @__asm_int3(), !insn.addr !7304
  %1240 = call i32 @__asm_int3(), !insn.addr !7305
  %1241 = call i32 @__asm_int3(), !insn.addr !7306
  %1242 = call i32 @__asm_int3(), !insn.addr !7307
  %1243 = call i32 @__asm_int3(), !insn.addr !7308
  %1244 = call i32 @__asm_int3(), !insn.addr !7309
  %1245 = call i32 @__asm_int3(), !insn.addr !7310
  %1246 = call i32 @__asm_int3(), !insn.addr !7311
  %1247 = call i32 @__asm_int3(), !insn.addr !7312
  %1248 = call i32 @__asm_int3(), !insn.addr !7313
  %1249 = call i32 @__asm_int3(), !insn.addr !7314
  %1250 = call i32 @__asm_int3(), !insn.addr !7315
  %1251 = call i32 @__asm_int3(), !insn.addr !7316
  %1252 = call i32 @__asm_int3(), !insn.addr !7317
  %1253 = call i32 @__asm_int3(), !insn.addr !7318
  %1254 = call i32 @__asm_int3(), !insn.addr !7319
  %1255 = call i32 @__asm_int3(), !insn.addr !7320
  %1256 = call i32 @__asm_int3(), !insn.addr !7321
  %1257 = call i32 @__asm_int3(), !insn.addr !7322
  %1258 = call i32 @__asm_int3(), !insn.addr !7323
  %1259 = call i32 @__asm_int3(), !insn.addr !7324
  %1260 = call i32 @__asm_int3(), !insn.addr !7325
  %1261 = call i32 @__asm_int3(), !insn.addr !7326
  %1262 = call i32 @__asm_int3(), !insn.addr !7327
  %1263 = call i32 @__asm_int3(), !insn.addr !7328
  %1264 = call i32 @__asm_int3(), !insn.addr !7329
  %1265 = call i32 @__asm_int3(), !insn.addr !7330
  %1266 = call i32 @__asm_int3(), !insn.addr !7331
  %1267 = call i32 @__asm_int3(), !insn.addr !7332
  %1268 = call i32 @__asm_int3(), !insn.addr !7333
  %1269 = call i32 @__asm_int3(), !insn.addr !7334
  %1270 = call i32 @__asm_int3(), !insn.addr !7335
  %1271 = call i32 @__asm_int3(), !insn.addr !7336
  %1272 = call i32 @__asm_int3(), !insn.addr !7337
  %1273 = call i32 @__asm_int3(), !insn.addr !7338
  %1274 = call i32 @__asm_int3(), !insn.addr !7339
  %1275 = call i32 @__asm_int3(), !insn.addr !7340
  %1276 = call i32 @__asm_int3(), !insn.addr !7341
  %1277 = call i32 @__asm_int3(), !insn.addr !7342
  %1278 = call i32 @__asm_int3(), !insn.addr !7343
  %1279 = call i32 @__asm_int3(), !insn.addr !7344
  %1280 = call i32 @__asm_int3(), !insn.addr !7345
  %1281 = call i32 @__asm_int3(), !insn.addr !7346
  %1282 = call i32 @__asm_int3(), !insn.addr !7347
  %1283 = call i32 @__asm_int3(), !insn.addr !7348
  %1284 = call i32 @__asm_int3(), !insn.addr !7349
  %1285 = call i32 @__asm_int3(), !insn.addr !7350
  %1286 = call i32 @__asm_int3(), !insn.addr !7351
  %1287 = call i32 @__asm_int3(), !insn.addr !7352
  %1288 = call i32 @__asm_int3(), !insn.addr !7353
  %1289 = call i32 @__asm_int3(), !insn.addr !7354
  %1290 = call i32 @__asm_int3(), !insn.addr !7355
  %1291 = call i32 @__asm_int3(), !insn.addr !7356
  %1292 = call i32 @__asm_int3(), !insn.addr !7357
  %1293 = call i32 @__asm_int3(), !insn.addr !7358
  %1294 = call i32 @__asm_int3(), !insn.addr !7359
  %1295 = call i32 @__asm_int3(), !insn.addr !7360
  %1296 = call i32 @__asm_int3(), !insn.addr !7361
  %1297 = call i32 @__asm_int3(), !insn.addr !7362
  %1298 = call i32 @__asm_int3(), !insn.addr !7363
  %1299 = call i32 @__asm_int3(), !insn.addr !7364
  %1300 = call i32 @__asm_int3(), !insn.addr !7365
  %1301 = call i32 @__asm_int3(), !insn.addr !7366
  %1302 = call i32 @__asm_int3(), !insn.addr !7367
  %1303 = call i32 @__asm_int3(), !insn.addr !7368
  %1304 = call i32 @__asm_int3(), !insn.addr !7369
  %1305 = call i32 @__asm_int3(), !insn.addr !7370
  %1306 = call i32 @__asm_int3(), !insn.addr !7371
  %1307 = call i32 @__asm_int3(), !insn.addr !7372
  %1308 = call i32 @__asm_int3(), !insn.addr !7373
  %1309 = call i32 @__asm_int3(), !insn.addr !7374
  %1310 = call i32 @__asm_int3(), !insn.addr !7375
  %1311 = call i32 @__asm_int3(), !insn.addr !7376
  %1312 = call i32 @__asm_int3(), !insn.addr !7377
  %1313 = call i32 @__asm_int3(), !insn.addr !7378
  %1314 = call i32 @__asm_int3(), !insn.addr !7379
  %1315 = call i32 @__asm_int3(), !insn.addr !7380
  %1316 = call i32 @__asm_int3(), !insn.addr !7381
  %1317 = call i32 @__asm_int3(), !insn.addr !7382
  %1318 = call i32 @__asm_int3(), !insn.addr !7383
  %1319 = call i32 @__asm_int3(), !insn.addr !7384
  %1320 = call i32 @__asm_int3(), !insn.addr !7385
  %1321 = call i32 @__asm_int3(), !insn.addr !7386
  %1322 = call i32 @__asm_int3(), !insn.addr !7387
  %1323 = call i32 @__asm_int3(), !insn.addr !7388
  %1324 = call i32 @__asm_int3(), !insn.addr !7389
  %1325 = call i32 @__asm_int3(), !insn.addr !7390
  %1326 = call i32 @__asm_int3(), !insn.addr !7391
  %1327 = call i32 @__asm_int3(), !insn.addr !7392
  %1328 = call i32 @__asm_int3(), !insn.addr !7393
  %1329 = call i32 @__asm_int3(), !insn.addr !7394
  %1330 = call i32 @__asm_int3(), !insn.addr !7395
  %1331 = call i32 @__asm_int3(), !insn.addr !7396
  %1332 = call i32 @__asm_int3(), !insn.addr !7397
  %1333 = call i32 @__asm_int3(), !insn.addr !7398
  %1334 = call i32 @__asm_int3(), !insn.addr !7399
  %1335 = call i32 @__asm_int3(), !insn.addr !7400
  %1336 = call i32 @__asm_int3(), !insn.addr !7401
  %1337 = call i32 @__asm_int3(), !insn.addr !7402
  %1338 = call i32 @__asm_int3(), !insn.addr !7403
  %1339 = call i32 @__asm_int3(), !insn.addr !7404
  %1340 = call i32 @__asm_int3(), !insn.addr !7405
  %1341 = call i32 @__asm_int3(), !insn.addr !7406
  %1342 = call i32 @__asm_int3(), !insn.addr !7407
  %1343 = call i32 @__asm_int3(), !insn.addr !7408
  %1344 = call i32 @__asm_int3(), !insn.addr !7409
  %1345 = call i32 @__asm_int3(), !insn.addr !7410
  %1346 = call i32 @__asm_int3(), !insn.addr !7411
  %1347 = call i32 @__asm_int3(), !insn.addr !7412
  %1348 = call i32 @__asm_int3(), !insn.addr !7413
  %1349 = call i32 @__asm_int3(), !insn.addr !7414
  %1350 = call i32 @__asm_int3(), !insn.addr !7415
  %1351 = call i32 @__asm_int3(), !insn.addr !7416
  %1352 = call i32 @__asm_int3(), !insn.addr !7417
  %1353 = call i32 @__asm_int3(), !insn.addr !7418
  %1354 = call i32 @__asm_int3(), !insn.addr !7419
  %1355 = call i32 @__asm_int3(), !insn.addr !7420
  %1356 = call i32 @__asm_int3(), !insn.addr !7421
  %1357 = call i32 @__asm_int3(), !insn.addr !7422
  %1358 = call i32 @__asm_int3(), !insn.addr !7423
  %1359 = call i32 @__asm_int3(), !insn.addr !7424
  %1360 = call i32 @__asm_int3(), !insn.addr !7425
  %1361 = call i32 @__asm_int3(), !insn.addr !7426
  %1362 = call i32 @__asm_int3(), !insn.addr !7427
  %1363 = call i32 @__asm_int3(), !insn.addr !7428
  %1364 = call i32 @__asm_int3(), !insn.addr !7429
  %1365 = call i32 @__asm_int3(), !insn.addr !7430
  %1366 = call i32 @__asm_int3(), !insn.addr !7431
  %1367 = call i32 @__asm_int3(), !insn.addr !7432
  %1368 = call i32 @__asm_int3(), !insn.addr !7433
  %1369 = call i32 @__asm_int3(), !insn.addr !7434
  %1370 = call i32 @__asm_int3(), !insn.addr !7435
  %1371 = call i32 @__asm_int3(), !insn.addr !7436
  %1372 = call i32 @__asm_int3(), !insn.addr !7437
  %1373 = call i32 @__asm_int3(), !insn.addr !7438
  %1374 = call i32 @__asm_int3(), !insn.addr !7439
  %1375 = call i32 @__asm_int3(), !insn.addr !7440
  %1376 = call i32 @__asm_int3(), !insn.addr !7441
  %1377 = call i32 @__asm_int3(), !insn.addr !7442
  %1378 = call i32 @__asm_int3(), !insn.addr !7443
  %1379 = call i32 @__asm_int3(), !insn.addr !7444
  %1380 = call i32 @__asm_int3(), !insn.addr !7445
  %1381 = call i32 @__asm_int3(), !insn.addr !7446
  %1382 = call i32 @__asm_int3(), !insn.addr !7447
  %1383 = call i32 @__asm_int3(), !insn.addr !7448
  %1384 = call i32 @__asm_int3(), !insn.addr !7449
  %1385 = call i32 @__asm_int3(), !insn.addr !7450
  %1386 = call i32 @__asm_int3(), !insn.addr !7451
  %1387 = call i32 @__asm_int3(), !insn.addr !7452
  %1388 = call i32 @__asm_int3(), !insn.addr !7453
  %1389 = call i32 @__asm_int3(), !insn.addr !7454
  %1390 = call i32 @__asm_int3(), !insn.addr !7455
  %1391 = call i32 @__asm_int3(), !insn.addr !7456
  %1392 = call i32 @__asm_int3(), !insn.addr !7457
  %1393 = call i32 @__asm_int3(), !insn.addr !7458
  %1394 = call i32 @__asm_int3(), !insn.addr !7459
  %1395 = call i32 @__asm_int3(), !insn.addr !7460
  %1396 = call i32 @__asm_int3(), !insn.addr !7461
  %1397 = call i32 @__asm_int3(), !insn.addr !7462
  %1398 = call i32 @__asm_int3(), !insn.addr !7463
  %1399 = call i32 @__asm_int3(), !insn.addr !7464
  %1400 = call i32 @__asm_int3(), !insn.addr !7465
  %1401 = call i32 @__asm_int3(), !insn.addr !7466
  %1402 = call i32 @__asm_int3(), !insn.addr !7467
  %1403 = call i32 @__asm_int3(), !insn.addr !7468
  %1404 = call i32 @__asm_int3(), !insn.addr !7469
  %1405 = call i32 @__asm_int3(), !insn.addr !7470
  %1406 = call i32 @__asm_int3(), !insn.addr !7471
  %1407 = call i32 @__asm_int3(), !insn.addr !7472
  %1408 = call i32 @__asm_int3(), !insn.addr !7473
  %1409 = call i32 @__asm_int3(), !insn.addr !7474
  %1410 = call i32 @__asm_int3(), !insn.addr !7475
  %1411 = call i32 @__asm_int3(), !insn.addr !7476
  %1412 = call i32 @__asm_int3(), !insn.addr !7477
  %1413 = call i32 @__asm_int3(), !insn.addr !7478
  %1414 = call i32 @__asm_int3(), !insn.addr !7479
  %1415 = call i32 @__asm_int3(), !insn.addr !7480
  %1416 = call i32 @__asm_int3(), !insn.addr !7481
  %1417 = call i32 @__asm_int3(), !insn.addr !7482
  %1418 = call i32 @__asm_int3(), !insn.addr !7483
  %1419 = call i32 @__asm_int3(), !insn.addr !7484
  %1420 = call i32 @__asm_int3(), !insn.addr !7485
  %1421 = call i32 @__asm_int3(), !insn.addr !7486
  %1422 = call i32 @__asm_int3(), !insn.addr !7487
  %1423 = call i32 @__asm_int3(), !insn.addr !7488
  %1424 = call i32 @__asm_int3(), !insn.addr !7489
  %1425 = call i32 @__asm_int3(), !insn.addr !7490
  %1426 = call i32 @__asm_int3(), !insn.addr !7491
  %1427 = call i32 @__asm_int3(), !insn.addr !7492
  %1428 = call i32 @__asm_int3(), !insn.addr !7493
  %1429 = call i32 @__asm_int3(), !insn.addr !7494
  %1430 = call i32 @__asm_int3(), !insn.addr !7495
  %1431 = call i32 @__asm_int3(), !insn.addr !7496
  %1432 = call i32 @__asm_int3(), !insn.addr !7497
  %1433 = call i32 @__asm_int3(), !insn.addr !7498
  %1434 = call i32 @__asm_int3(), !insn.addr !7499
  %1435 = call i32 @__asm_int3(), !insn.addr !7500
  %1436 = call i32 @__asm_int3(), !insn.addr !7501
  %1437 = call i32 @__asm_int3(), !insn.addr !7502
  %1438 = call i32 @__asm_int3(), !insn.addr !7503
  %1439 = call i32 @__asm_int3(), !insn.addr !7504
  %1440 = call i32 @__asm_int3(), !insn.addr !7505
  %1441 = call i32 @__asm_int3(), !insn.addr !7506
  %1442 = call i32 @__asm_int3(), !insn.addr !7507
  %1443 = call i32 @__asm_int3(), !insn.addr !7508
  %1444 = call i32 @__asm_int3(), !insn.addr !7509
  %1445 = call i32 @__asm_int3(), !insn.addr !7510
  %1446 = call i32 @__asm_int3(), !insn.addr !7511
  %1447 = call i32 @__asm_int3(), !insn.addr !7512
  %1448 = call i32 @__asm_int3(), !insn.addr !7513
  %1449 = call i32 @__asm_int3(), !insn.addr !7514
  %1450 = call i32 @__asm_int3(), !insn.addr !7515
  %1451 = call i32 @__asm_int3(), !insn.addr !7516
  %1452 = call i32 @__asm_int3(), !insn.addr !7517
  %1453 = call i32 @__asm_int3(), !insn.addr !7518
  %1454 = call i32 @__asm_int3(), !insn.addr !7519
  %1455 = call i32 @__asm_int3(), !insn.addr !7520
  %1456 = call i32 @__asm_int3(), !insn.addr !7521
  %1457 = call i32 @__asm_int3(), !insn.addr !7522
  %1458 = call i32 @__asm_int3(), !insn.addr !7523
  %1459 = call i32 @__asm_int3(), !insn.addr !7524
  %1460 = call i32 @__asm_int3(), !insn.addr !7525
  %1461 = call i32 @__asm_int3(), !insn.addr !7526
  %1462 = call i32 @__asm_int3(), !insn.addr !7527
  %1463 = call i32 @__asm_int3(), !insn.addr !7528
  %1464 = call i32 @__asm_int3(), !insn.addr !7529
  %1465 = call i32 @__asm_int3(), !insn.addr !7530
  %1466 = call i32 @__asm_int3(), !insn.addr !7531
  %1467 = call i32 @__asm_int3(), !insn.addr !7532
  %1468 = call i32 @__asm_int3(), !insn.addr !7533
  %1469 = call i32 @__asm_int3(), !insn.addr !7534
  %1470 = call i32 @__asm_int3(), !insn.addr !7535
  %1471 = call i32 @__asm_int3(), !insn.addr !7536
  %1472 = call i32 @__asm_int3(), !insn.addr !7537
  %1473 = call i32 @__asm_int3(), !insn.addr !7538
  %1474 = call i32 @__asm_int3(), !insn.addr !7539
  %1475 = call i32 @__asm_int3(), !insn.addr !7540
  %1476 = call i32 @__asm_int3(), !insn.addr !7541
  %1477 = call i32 @__asm_int3(), !insn.addr !7542
  %1478 = call i32 @__asm_int3(), !insn.addr !7543
  %1479 = call i32 @__asm_int3(), !insn.addr !7544
  %1480 = call i32 @__asm_int3(), !insn.addr !7545
  %1481 = call i32 @__asm_int3(), !insn.addr !7546
  %1482 = call i32 @__asm_int3(), !insn.addr !7547
  %1483 = call i32 @__asm_int3(), !insn.addr !7548
  %1484 = call i32 @__asm_int3(), !insn.addr !7549
  %1485 = call i32 @__asm_int3(), !insn.addr !7550
  %1486 = call i32 @__asm_int3(), !insn.addr !7551
  %1487 = call i32 @__asm_int3(), !insn.addr !7552
  %1488 = call i32 @__asm_int3(), !insn.addr !7553
  %1489 = call i32 @__asm_int3(), !insn.addr !7554
  %1490 = call i32 @__asm_int3(), !insn.addr !7555
  %1491 = call i32 @__asm_int3(), !insn.addr !7556
  %1492 = call i32 @__asm_int3(), !insn.addr !7557
  %1493 = call i32 @__asm_int3(), !insn.addr !7558
  %1494 = call i32 @__asm_int3(), !insn.addr !7559
  %1495 = call i32 @__asm_int3(), !insn.addr !7560
  %1496 = call i32 @__asm_int3(), !insn.addr !7561
  %1497 = call i32 @__asm_int3(), !insn.addr !7562
  %1498 = call i32 @__asm_int3(), !insn.addr !7563
  %1499 = call i32 @__asm_int3(), !insn.addr !7564
  %1500 = call i32 @__asm_int3(), !insn.addr !7565
  %1501 = call i32 @__asm_int3(), !insn.addr !7566
  %1502 = call i32 @__asm_int3(), !insn.addr !7567
  %1503 = call i32 @__asm_int3(), !insn.addr !7568
  %1504 = call i32 @__asm_int3(), !insn.addr !7569
  %1505 = call i32 @__asm_int3(), !insn.addr !7570
  %1506 = call i32 @__asm_int3(), !insn.addr !7571
  %1507 = call i32 @__asm_int3(), !insn.addr !7572
  %1508 = call i32 @__asm_int3(), !insn.addr !7573
  %1509 = call i32 @__asm_int3(), !insn.addr !7574
  %1510 = call i32 @__asm_int3(), !insn.addr !7575
  %1511 = call i32 @__asm_int3(), !insn.addr !7576
  %1512 = call i32 @__asm_int3(), !insn.addr !7577
  %1513 = call i32 @__asm_int3(), !insn.addr !7578
  %1514 = call i32 @__asm_int3(), !insn.addr !7579
  %1515 = call i32 @__asm_int3(), !insn.addr !7580
  %1516 = call i32 @__asm_int3(), !insn.addr !7581
  %1517 = call i32 @__asm_int3(), !insn.addr !7582
  %1518 = call i32 @__asm_int3(), !insn.addr !7583
  %1519 = call i32 @__asm_int3(), !insn.addr !7584
  %1520 = call i32 @__asm_int3(), !insn.addr !7585
  %1521 = call i32 @__asm_int3(), !insn.addr !7586
  %1522 = call i32 @__asm_int3(), !insn.addr !7587
  %1523 = call i32 @__asm_int3(), !insn.addr !7588
  %1524 = call i32 @__asm_int3(), !insn.addr !7589
  %1525 = call i32 @__asm_int3(), !insn.addr !7590
  %1526 = call i32 @__asm_int3(), !insn.addr !7591
  %1527 = call i32 @__asm_int3(), !insn.addr !7592
  %1528 = call i32 @__asm_int3(), !insn.addr !7593
  %1529 = call i32 @__asm_int3(), !insn.addr !7594
  %1530 = call i32 @__asm_int3(), !insn.addr !7595
  %1531 = call i32 @__asm_int3(), !insn.addr !7596
  %1532 = call i32 @__asm_int3(), !insn.addr !7597
  %1533 = call i32 @__asm_int3(), !insn.addr !7598
  %1534 = call i32 @__asm_int3(), !insn.addr !7599
  %1535 = call i32 @__asm_int3(), !insn.addr !7600
  %1536 = call i32 @__asm_int3(), !insn.addr !7601
  %1537 = call i32 @__asm_int3(), !insn.addr !7602
  %1538 = call i32 @__asm_int3(), !insn.addr !7603
  %1539 = call i32 @__asm_int3(), !insn.addr !7604
  %1540 = call i32 @__asm_int3(), !insn.addr !7605
  %1541 = call i32 @__asm_int3(), !insn.addr !7606
  %1542 = call i32 @__asm_int3(), !insn.addr !7607
  %1543 = call i32 @__asm_int3(), !insn.addr !7608
  %1544 = call i32 @__asm_int3(), !insn.addr !7609
  %1545 = call i32 @__asm_int3(), !insn.addr !7610
  %1546 = call i32 @__asm_int3(), !insn.addr !7611
  %1547 = call i32 @__asm_int3(), !insn.addr !7612
  %1548 = call i32 @__asm_int3(), !insn.addr !7613
  %1549 = call i32 @__asm_int3(), !insn.addr !7614
  %1550 = call i32 @__asm_int3(), !insn.addr !7615
  %1551 = call i32 @__asm_int3(), !insn.addr !7616
  %1552 = call i32 @__asm_int3(), !insn.addr !7617
  %1553 = call i32 @__asm_int3(), !insn.addr !7618
  %1554 = call i32 @__asm_int3(), !insn.addr !7619
  %1555 = call i32 @__asm_int3(), !insn.addr !7620
  %1556 = call i32 @__asm_int3(), !insn.addr !7621
  %1557 = call i32 @__asm_int3(), !insn.addr !7622
  %1558 = call i32 @__asm_int3(), !insn.addr !7623
  %1559 = call i32 @__asm_int3(), !insn.addr !7624
  %1560 = call i32 @__asm_int3(), !insn.addr !7625
  %1561 = call i32 @__asm_int3(), !insn.addr !7626
  %1562 = call i32 @__asm_int3(), !insn.addr !7627
  %1563 = call i32 @__asm_int3(), !insn.addr !7628
  %1564 = call i32 @__asm_int3(), !insn.addr !7629
  %1565 = call i32 @__asm_int3(), !insn.addr !7630
  %1566 = call i32 @__asm_int3(), !insn.addr !7631
  %1567 = call i32 @__asm_int3(), !insn.addr !7632
  %1568 = call i32 @__asm_int3(), !insn.addr !7633
  %1569 = call i32 @__asm_int3(), !insn.addr !7634
  %1570 = call i32 @__asm_int3(), !insn.addr !7635
  %1571 = call i32 @__asm_int3(), !insn.addr !7636
  %1572 = call i32 @__asm_int3(), !insn.addr !7637
  %1573 = call i32 @__asm_int3(), !insn.addr !7638
  %1574 = call i32 @__asm_int3(), !insn.addr !7639
  %1575 = call i32 @__asm_int3(), !insn.addr !7640
  %1576 = call i32 @__asm_int3(), !insn.addr !7641
  %1577 = call i32 @__asm_int3(), !insn.addr !7642
  %1578 = call i32 @__asm_int3(), !insn.addr !7643
  %1579 = call i32 @__asm_int3(), !insn.addr !7644
  %1580 = call i32 @__asm_int3(), !insn.addr !7645
  %1581 = call i32 @__asm_int3(), !insn.addr !7646
  %1582 = call i32 @__asm_int3(), !insn.addr !7647
  %1583 = call i32 @__asm_int3(), !insn.addr !7648
  %1584 = call i32 @__asm_int3(), !insn.addr !7649
  %1585 = call i32 @__asm_int3(), !insn.addr !7650
  %1586 = call i32 @__asm_int3(), !insn.addr !7651
  %1587 = call i32 @__asm_int3(), !insn.addr !7652
  %1588 = call i32 @__asm_int3(), !insn.addr !7653
  %1589 = call i32 @__asm_int3(), !insn.addr !7654
  %1590 = call i32 @__asm_int3(), !insn.addr !7655
  %1591 = call i32 @__asm_int3(), !insn.addr !7656
  %1592 = call i32 @__asm_int3(), !insn.addr !7657
  %1593 = call i32 @__asm_int3(), !insn.addr !7658
  %1594 = call i32 @__asm_int3(), !insn.addr !7659
  %1595 = call i32 @__asm_int3(), !insn.addr !7660
  %1596 = call i32 @__asm_int3(), !insn.addr !7661
  %1597 = call i32 @__asm_int3(), !insn.addr !7662
  %1598 = call i32 @__asm_int3(), !insn.addr !7663
  %1599 = call i32 @__asm_int3(), !insn.addr !7664
  %1600 = call i32 @__asm_int3(), !insn.addr !7665
  %1601 = call i32 @__asm_int3(), !insn.addr !7666
  %1602 = call i32 @__asm_int3(), !insn.addr !7667
  %1603 = call i32 @__asm_int3(), !insn.addr !7668
  %1604 = call i32 @__asm_int3(), !insn.addr !7669
  %1605 = call i32 @__asm_int3(), !insn.addr !7670
  %1606 = call i32 @__asm_int3(), !insn.addr !7671
  %1607 = call i32 @__asm_int3(), !insn.addr !7672
  %1608 = call i32 @__asm_int3(), !insn.addr !7673
  %1609 = call i32 @__asm_int3(), !insn.addr !7674
  %1610 = call i32 @__asm_int3(), !insn.addr !7675
  %1611 = call i32 @__asm_int3(), !insn.addr !7676
  %1612 = call i32 @__asm_int3(), !insn.addr !7677
  %1613 = call i32 @__asm_int3(), !insn.addr !7678
  %1614 = call i32 @__asm_int3(), !insn.addr !7679
  %1615 = call i32 @__asm_int3(), !insn.addr !7680
  %1616 = call i32 @__asm_int3(), !insn.addr !7681
  %1617 = call i32 @__asm_int3(), !insn.addr !7682
  %1618 = call i32 @__asm_int3(), !insn.addr !7683
  %1619 = call i32 @__asm_int3(), !insn.addr !7684
  %1620 = call i32 @__asm_int3(), !insn.addr !7685
  %1621 = call i32 @__asm_int3(), !insn.addr !7686
  %1622 = call i32 @__asm_int3(), !insn.addr !7687
  %1623 = call i32 @__asm_int3(), !insn.addr !7688
  %1624 = call i32 @__asm_int3(), !insn.addr !7689
  %1625 = call i32 @__asm_int3(), !insn.addr !7690
  %1626 = call i32 @__asm_int3(), !insn.addr !7691
  %1627 = call i32 @__asm_int3(), !insn.addr !7692
  %1628 = call i32 @__asm_int3(), !insn.addr !7693
  %1629 = call i32 @__asm_int3(), !insn.addr !7694
  %1630 = call i32 @__asm_int3(), !insn.addr !7695
  %1631 = call i32 @__asm_int3(), !insn.addr !7696
  %1632 = call i32 @__asm_int3(), !insn.addr !7697
  %1633 = call i32 @__asm_int3(), !insn.addr !7698
  %1634 = call i32 @__asm_int3(), !insn.addr !7699
  %1635 = call i32 @__asm_int3(), !insn.addr !7700
  %1636 = call i32 @__asm_int3(), !insn.addr !7701
  %1637 = call i32 @__asm_int3(), !insn.addr !7702
  %1638 = call i32 @__asm_int3(), !insn.addr !7703
  %1639 = call i32 @__asm_int3(), !insn.addr !7704
  %1640 = call i32 @__asm_int3(), !insn.addr !7705
  %1641 = call i32 @__asm_int3(), !insn.addr !7706
  %1642 = call i32 @__asm_int3(), !insn.addr !7707
  %1643 = call i32 @__asm_int3(), !insn.addr !7708
  %1644 = call i32 @__asm_int3(), !insn.addr !7709
  %1645 = call i32 @__asm_int3(), !insn.addr !7710
  %1646 = call i32 @__asm_int3(), !insn.addr !7711
  %1647 = call i32 @__asm_int3(), !insn.addr !7712
  %1648 = call i32 @__asm_int3(), !insn.addr !7713
  %1649 = call i32 @__asm_int3(), !insn.addr !7714
  %1650 = call i32 @__asm_int3(), !insn.addr !7715
  %1651 = call i32 @__asm_int3(), !insn.addr !7716
  %1652 = call i32 @__asm_int3(), !insn.addr !7717
  %1653 = call i32 @__asm_int3(), !insn.addr !7718
  %1654 = call i32 @__asm_int3(), !insn.addr !7719
  %1655 = call i32 @__asm_int3(), !insn.addr !7720
  %1656 = call i32 @__asm_int3(), !insn.addr !7721
  %1657 = call i32 @__asm_int3(), !insn.addr !7722
  %1658 = call i32 @__asm_int3(), !insn.addr !7723
  %1659 = call i32 @__asm_int3(), !insn.addr !7724
  %1660 = call i32 @__asm_int3(), !insn.addr !7725
  %1661 = call i32 @__asm_int3(), !insn.addr !7726
  %1662 = call i32 @__asm_int3(), !insn.addr !7727
  %1663 = call i32 @__asm_int3(), !insn.addr !7728
  %1664 = call i32 @__asm_int3(), !insn.addr !7729
  %1665 = call i32 @__asm_int3(), !insn.addr !7730
  %1666 = call i32 @__asm_int3(), !insn.addr !7731
  %1667 = call i32 @__asm_int3(), !insn.addr !7732
  %1668 = call i32 @__asm_int3(), !insn.addr !7733
  %1669 = call i32 @__asm_int3(), !insn.addr !7734
  %1670 = call i32 @__asm_int3(), !insn.addr !7735
  %1671 = call i32 @__asm_int3(), !insn.addr !7736
  %1672 = call i32 @__asm_int3(), !insn.addr !7737
  %1673 = call i32 @__asm_int3(), !insn.addr !7738
  %1674 = call i32 @__asm_int3(), !insn.addr !7739
  %1675 = call i32 @__asm_int3(), !insn.addr !7740
  %1676 = call i32 @__asm_int3(), !insn.addr !7741
  %1677 = call i32 @__asm_int3(), !insn.addr !7742
  %1678 = call i32 @__asm_int3(), !insn.addr !7743
  %1679 = call i32 @__asm_int3(), !insn.addr !7744
  %1680 = call i32 @__asm_int3(), !insn.addr !7745
  %1681 = call i32 @__asm_int3(), !insn.addr !7746
  %1682 = call i32 @__asm_int3(), !insn.addr !7747
  %1683 = call i32 @__asm_int3(), !insn.addr !7748
  %1684 = call i32 @__asm_int3(), !insn.addr !7749
  %1685 = call i32 @__asm_int3(), !insn.addr !7750
  %1686 = call i32 @__asm_int3(), !insn.addr !7751
  %1687 = call i32 @__asm_int3(), !insn.addr !7752
  %1688 = call i32 @__asm_int3(), !insn.addr !7753
  %1689 = call i32 @__asm_int3(), !insn.addr !7754
  %1690 = call i32 @__asm_int3(), !insn.addr !7755
  %1691 = call i32 @__asm_int3(), !insn.addr !7756
  %1692 = call i32 @__asm_int3(), !insn.addr !7757
  %1693 = call i32 @__asm_int3(), !insn.addr !7758
  %1694 = call i32 @__asm_int3(), !insn.addr !7759
  %1695 = call i32 @__asm_int3(), !insn.addr !7760
  %1696 = call i32 @__asm_int3(), !insn.addr !7761
  %1697 = call i32 @__asm_int3(), !insn.addr !7762
  %1698 = call i32 @__asm_int3(), !insn.addr !7763
  %1699 = call i32 @__asm_int3(), !insn.addr !7764
  %1700 = call i32 @__asm_int3(), !insn.addr !7765
  %1701 = call i32 @__asm_int3(), !insn.addr !7766
  %1702 = call i32 @__asm_int3(), !insn.addr !7767
  %1703 = call i32 @__asm_int3(), !insn.addr !7768
  %1704 = call i32 @__asm_int3(), !insn.addr !7769
  %1705 = call i32 @__asm_int3(), !insn.addr !7770
  %1706 = call i32 @__asm_int3(), !insn.addr !7771
  %1707 = call i32 @__asm_int3(), !insn.addr !7772
  %1708 = call i32 @__asm_int3(), !insn.addr !7773
  %1709 = call i32 @__asm_int3(), !insn.addr !7774
  %1710 = call i32 @__asm_int3(), !insn.addr !7775
  %1711 = call i32 @__asm_int3(), !insn.addr !7776
  %1712 = call i32 @__asm_int3(), !insn.addr !7777
  %1713 = call i32 @__asm_int3(), !insn.addr !7778
  %1714 = call i32 @__asm_int3(), !insn.addr !7779
  %1715 = call i32 @__asm_int3(), !insn.addr !7780
  %1716 = call i32 @__asm_int3(), !insn.addr !7781
  %1717 = call i32 @__asm_int3(), !insn.addr !7782
  %1718 = call i32 @__asm_int3(), !insn.addr !7783
  %1719 = call i32 @__asm_int3(), !insn.addr !7784
  %1720 = call i32 @__asm_int3(), !insn.addr !7785
  %1721 = call i32 @__asm_int3(), !insn.addr !7786
  %1722 = call i32 @__asm_int3(), !insn.addr !7787
  %1723 = call i32 @__asm_int3(), !insn.addr !7788
  %1724 = call i32 @__asm_int3(), !insn.addr !7789
  %1725 = call i32 @__asm_int3(), !insn.addr !7790
  %1726 = call i32 @__asm_int3(), !insn.addr !7791
  %1727 = call i32 @__asm_int3(), !insn.addr !7792
  %1728 = call i32 @__asm_int3(), !insn.addr !7793
  %1729 = call i32 @__asm_int3(), !insn.addr !7794
  %1730 = call i32 @__asm_int3(), !insn.addr !7795
  %1731 = call i32 @__asm_int3(), !insn.addr !7796
  %1732 = call i32 @__asm_int3(), !insn.addr !7797
  %1733 = call i32 @__asm_int3(), !insn.addr !7798
  %1734 = call i32 @__asm_int3(), !insn.addr !7799
  %1735 = call i32 @__asm_int3(), !insn.addr !7800
  %1736 = call i32 @__asm_int3(), !insn.addr !7801
  %1737 = call i32 @__asm_int3(), !insn.addr !7802
  %1738 = call i32 @__asm_int3(), !insn.addr !7803
  %1739 = call i32 @__asm_int3(), !insn.addr !7804
  %1740 = call i32 @__asm_int3(), !insn.addr !7805
  %1741 = call i32 @__asm_int3(), !insn.addr !7806
  %1742 = call i32 @__asm_int3(), !insn.addr !7807
  %1743 = call i32 @__asm_int3(), !insn.addr !7808
  %1744 = call i32 @__asm_int3(), !insn.addr !7809
  %1745 = call i32 @__asm_int3(), !insn.addr !7810
  %1746 = call i32 @__asm_int3(), !insn.addr !7811
  %1747 = call i32 @__asm_int3(), !insn.addr !7812
  %1748 = call i32 @__asm_int3(), !insn.addr !7813
  %1749 = call i32 @__asm_int3(), !insn.addr !7814
  %1750 = call i32 @__asm_int3(), !insn.addr !7815
  %1751 = call i32 @__asm_int3(), !insn.addr !7816
  %1752 = call i32 @__asm_int3(), !insn.addr !7817
  %1753 = call i32 @__asm_int3(), !insn.addr !7818
  %1754 = call i32 @__asm_int3(), !insn.addr !7819
  %1755 = call i32 @__asm_int3(), !insn.addr !7820
  %1756 = call i32 @__asm_int3(), !insn.addr !7821
  %1757 = call i32 @__asm_int3(), !insn.addr !7822
  %1758 = call i32 @__asm_int3(), !insn.addr !7823
  %1759 = call i32 @__asm_int3(), !insn.addr !7824
  %1760 = call i32 @__asm_int3(), !insn.addr !7825
  %1761 = call i32 @__asm_int3(), !insn.addr !7826
  %1762 = call i32 @__asm_int3(), !insn.addr !7827
  %1763 = call i32 @__asm_int3(), !insn.addr !7828
  %1764 = call i32 @__asm_int3(), !insn.addr !7829
  %1765 = call i32 @__asm_int3(), !insn.addr !7830
  %1766 = call i32 @__asm_int3(), !insn.addr !7831
  %1767 = call i32 @__asm_int3(), !insn.addr !7832
  %1768 = call i32 @__asm_int3(), !insn.addr !7833
  %1769 = call i32 @__asm_int3(), !insn.addr !7834
  %1770 = call i32 @__asm_int3(), !insn.addr !7835
  %1771 = call i32 @__asm_int3(), !insn.addr !7836
  %1772 = call i32 @__asm_int3(), !insn.addr !7837
  %1773 = call i32 @__asm_int3(), !insn.addr !7838
  %1774 = call i32 @__asm_int3(), !insn.addr !7839
  %1775 = call i32 @__asm_int3(), !insn.addr !7840
  %1776 = call i32 @__asm_int3(), !insn.addr !7841
  %1777 = call i32 @__asm_int3(), !insn.addr !7842
  %1778 = call i32 @__asm_int3(), !insn.addr !7843
  %1779 = call i32 @__asm_int3(), !insn.addr !7844
  %1780 = call i32 @__asm_int3(), !insn.addr !7845
  %1781 = call i32 @__asm_int3(), !insn.addr !7846
  %1782 = call i32 @__asm_int3(), !insn.addr !7847
  %1783 = call i32 @__asm_int3(), !insn.addr !7848
  %1784 = call i32 @__asm_int3(), !insn.addr !7849
  %1785 = call i32 @__asm_int3(), !insn.addr !7850
  %1786 = call i32 @__asm_int3(), !insn.addr !7851
  %1787 = call i32 @__asm_int3(), !insn.addr !7852
  %1788 = call i32 @__asm_int3(), !insn.addr !7853
  %1789 = call i32 @__asm_int3(), !insn.addr !7854
  %1790 = call i32 @__asm_int3(), !insn.addr !7855
  %1791 = call i32 @__asm_int3(), !insn.addr !7856
  %1792 = call i32 @__asm_int3(), !insn.addr !7857
  %1793 = call i32 @__asm_int3(), !insn.addr !7858
  %1794 = call i32 @__asm_int3(), !insn.addr !7859
  %1795 = call i32 @__asm_int3(), !insn.addr !7860
  %1796 = call i32 @__asm_int3(), !insn.addr !7861
  %1797 = call i32 @__asm_int3(), !insn.addr !7862
  %1798 = call i32 @__asm_int3(), !insn.addr !7863
  %1799 = call i32 @__asm_int3(), !insn.addr !7864
  %1800 = call i32 @__asm_int3(), !insn.addr !7865
  %1801 = call i32 @__asm_int3(), !insn.addr !7866
  %1802 = call i32 @__asm_int3(), !insn.addr !7867
  %1803 = call i32 @__asm_int3(), !insn.addr !7868
  %1804 = call i32 @__asm_int3(), !insn.addr !7869
  %1805 = call i32 @__asm_int3(), !insn.addr !7870
  %1806 = call i32 @__asm_int3(), !insn.addr !7871
  %1807 = call i32 @__asm_int3(), !insn.addr !7872
  %1808 = call i32 @__asm_int3(), !insn.addr !7873
  %1809 = call i32 @__asm_int3(), !insn.addr !7874
  %1810 = call i32 @__asm_int3(), !insn.addr !7875
  %1811 = call i32 @__asm_int3(), !insn.addr !7876
  %1812 = call i32 @__asm_int3(), !insn.addr !7877
  %1813 = call i32 @__asm_int3(), !insn.addr !7878
  %1814 = call i32 @__asm_int3(), !insn.addr !7879
  %1815 = call i32 @__asm_int3(), !insn.addr !7880
  %1816 = call i32 @__asm_int3(), !insn.addr !7881
  %1817 = call i32 @__asm_int3(), !insn.addr !7882
  %1818 = call i32 @__asm_int3(), !insn.addr !7883
  %1819 = call i32 @__asm_int3(), !insn.addr !7884
  %1820 = call i32 @__asm_int3(), !insn.addr !7885
  %1821 = call i32 @__asm_int3(), !insn.addr !7886
  %1822 = call i32 @__asm_int3(), !insn.addr !7887
  %1823 = call i32 @__asm_int3(), !insn.addr !7888
  %1824 = call i32 @__asm_int3(), !insn.addr !7889
  %1825 = call i32 @__asm_int3(), !insn.addr !7890
  %1826 = call i32 @__asm_int3(), !insn.addr !7891
  %1827 = call i32 @__asm_int3(), !insn.addr !7892
  %1828 = call i32 @__asm_int3(), !insn.addr !7893
  %1829 = call i32 @__asm_int3(), !insn.addr !7894
  %1830 = call i32 @__asm_int3(), !insn.addr !7895
  %1831 = call i32 @__asm_int3(), !insn.addr !7896
  %1832 = call i32 @__asm_int3(), !insn.addr !7897
  %1833 = call i32 @__asm_int3(), !insn.addr !7898
  %1834 = call i32 @__asm_int3(), !insn.addr !7899
  %1835 = call i32 @__asm_int3(), !insn.addr !7900
  %1836 = call i32 @__asm_int3(), !insn.addr !7901
  %1837 = call i32 @__asm_int3(), !insn.addr !7902
  %1838 = call i32 @__asm_int3(), !insn.addr !7903
  %1839 = call i32 @__asm_int3(), !insn.addr !7904
  %1840 = call i32 @__asm_int3(), !insn.addr !7905
  %1841 = call i32 @__asm_int3(), !insn.addr !7906
  %1842 = call i32 @__asm_int3(), !insn.addr !7907
  %1843 = call i32 @__asm_int3(), !insn.addr !7908
  %1844 = call i32 @__asm_int3(), !insn.addr !7909
  %1845 = call i32 @__asm_int3(), !insn.addr !7910
  %1846 = call i32 @__asm_int3(), !insn.addr !7911
  %1847 = call i32 @__asm_int3(), !insn.addr !7912
  %1848 = call i32 @__asm_int3(), !insn.addr !7913
  %1849 = call i32 @__asm_int3(), !insn.addr !7914
  %1850 = call i32 @__asm_int3(), !insn.addr !7915
  %1851 = call i32 @__asm_int3(), !insn.addr !7916
  %1852 = call i32 @__asm_int3(), !insn.addr !7917
  %1853 = call i32 @__asm_int3(), !insn.addr !7918
  %1854 = call i32 @__asm_int3(), !insn.addr !7919
  %1855 = call i32 @__asm_int3(), !insn.addr !7920
  %1856 = call i32 @__asm_int3(), !insn.addr !7921
  %1857 = call i32 @__asm_int3(), !insn.addr !7922
  %1858 = call i32 @__asm_int3(), !insn.addr !7923
  %1859 = call i32 @__asm_int3(), !insn.addr !7924
  %1860 = call i32 @__asm_int3(), !insn.addr !7925
  %1861 = call i32 @__asm_int3(), !insn.addr !7926
  %1862 = call i32 @__asm_int3(), !insn.addr !7927
  %1863 = call i32 @__asm_int3(), !insn.addr !7928
  %1864 = call i32 @__asm_int3(), !insn.addr !7929
  %1865 = call i32 @__asm_int3(), !insn.addr !7930
  %1866 = call i32 @__asm_int3(), !insn.addr !7931
  %1867 = call i32 @__asm_int3(), !insn.addr !7932
  %1868 = call i32 @__asm_int3(), !insn.addr !7933
  %1869 = call i32 @__asm_int3(), !insn.addr !7934
  %1870 = call i32 @__asm_int3(), !insn.addr !7935
  %1871 = call i32 @__asm_int3(), !insn.addr !7936
  %1872 = call i32 @__asm_int3(), !insn.addr !7937
  %1873 = call i32 @__asm_int3(), !insn.addr !7938
  %1874 = call i32 @__asm_int3(), !insn.addr !7939
  %1875 = call i32 @__asm_int3(), !insn.addr !7940
  %1876 = call i32 @__asm_int3(), !insn.addr !7941
  %1877 = call i32 @__asm_int3(), !insn.addr !7942
  %1878 = call i32 @__asm_int3(), !insn.addr !7943
  %1879 = call i32 @__asm_int3(), !insn.addr !7944
  %1880 = call i32 @__asm_int3(), !insn.addr !7945
  %1881 = call i32 @__asm_int3(), !insn.addr !7946
  %1882 = call i32 @__asm_int3(), !insn.addr !7947
  %1883 = call i32 @__asm_int3(), !insn.addr !7948
  %1884 = call i32 @__asm_int3(), !insn.addr !7949
  %1885 = call i32 @__asm_int3(), !insn.addr !7950
  %1886 = call i32 @__asm_int3(), !insn.addr !7951
  %1887 = call i32 @__asm_int3(), !insn.addr !7952
  %1888 = call i32 @__asm_int3(), !insn.addr !7953
  %1889 = call i32 @__asm_int3(), !insn.addr !7954
  %1890 = call i32 @__asm_int3(), !insn.addr !7955
  %1891 = call i32 @__asm_int3(), !insn.addr !7956
  %1892 = call i32 @__asm_int3(), !insn.addr !7957
  %1893 = call i32 @__asm_int3(), !insn.addr !7958
  %1894 = call i32 @__asm_int3(), !insn.addr !7959
  %1895 = call i32 @__asm_int3(), !insn.addr !7960
  %1896 = call i32 @__asm_int3(), !insn.addr !7961
  %1897 = call i32 @__asm_int3(), !insn.addr !7962
  %1898 = call i32 @__asm_int3(), !insn.addr !7963
  %1899 = call i32 @__asm_int3(), !insn.addr !7964
  %1900 = call i32 @__asm_int3(), !insn.addr !7965
  %1901 = call i32 @__asm_int3(), !insn.addr !7966
  %1902 = call i32 @__asm_int3(), !insn.addr !7967
  %1903 = call i32 @__asm_int3(), !insn.addr !7968
  %1904 = call i32 @__asm_int3(), !insn.addr !7969
  %1905 = call i32 @__asm_int3(), !insn.addr !7970
  %1906 = call i32 @__asm_int3(), !insn.addr !7971
  %1907 = call i32 @__asm_int3(), !insn.addr !7972
  %1908 = call i32 @__asm_int3(), !insn.addr !7973
  %1909 = call i32 @__asm_int3(), !insn.addr !7974
  %1910 = call i32 @__asm_int3(), !insn.addr !7975
  %1911 = call i32 @__asm_int3(), !insn.addr !7976
  %1912 = call i32 @__asm_int3(), !insn.addr !7977
  %1913 = call i32 @__asm_int3(), !insn.addr !7978
  %1914 = call i32 @__asm_int3(), !insn.addr !7979
  %1915 = call i32 @__asm_int3(), !insn.addr !7980
  %1916 = call i32 @__asm_int3(), !insn.addr !7981
  %1917 = call i32 @__asm_int3(), !insn.addr !7982
  %1918 = call i32 @__asm_int3(), !insn.addr !7983
  %1919 = call i32 @__asm_int3(), !insn.addr !7984
  %1920 = call i32 @__asm_int3(), !insn.addr !7985
  %1921 = call i32 @__asm_int3(), !insn.addr !7986
  %1922 = call i32 @__asm_int3(), !insn.addr !7987
  %1923 = call i32 @__asm_int3(), !insn.addr !7988
  %1924 = call i32 @__asm_int3(), !insn.addr !7989
  %1925 = call i32 @__asm_int3(), !insn.addr !7990
  %1926 = call i32 @__asm_int3(), !insn.addr !7991
  %1927 = call i32 @__asm_int3(), !insn.addr !7992
  %1928 = call i32 @__asm_int3(), !insn.addr !7993
  %1929 = call i32 @__asm_int3(), !insn.addr !7994
  %1930 = call i32 @__asm_int3(), !insn.addr !7995
  %1931 = call i32 @__asm_int3(), !insn.addr !7996
  %1932 = call i32 @__asm_int3(), !insn.addr !7997
  %1933 = call i32 @__asm_int3(), !insn.addr !7998
  %1934 = call i32 @__asm_int3(), !insn.addr !7999
  %1935 = call i32 @__asm_int3(), !insn.addr !8000
  %1936 = call i32 @__asm_int3(), !insn.addr !8001
  %1937 = call i32 @__asm_int3(), !insn.addr !8002
  %1938 = call i32 @__asm_int3(), !insn.addr !8003
  %1939 = call i32 @__asm_int3(), !insn.addr !8004
  %1940 = call i32 @__asm_int3(), !insn.addr !8005
  %1941 = call i32 @__asm_int3(), !insn.addr !8006
  %1942 = call i32 @__asm_int3(), !insn.addr !8007
  %1943 = call i32 @__asm_int3(), !insn.addr !8008
  %1944 = call i32 @__asm_int3(), !insn.addr !8009
  %1945 = call i32 @__asm_int3(), !insn.addr !8010
  %1946 = call i32 @__asm_int3(), !insn.addr !8011
  %1947 = call i32 @__asm_int3(), !insn.addr !8012
  %1948 = call i32 @__asm_int3(), !insn.addr !8013
  %1949 = call i32 @__asm_int3(), !insn.addr !8014
  %1950 = call i32 @__asm_int3(), !insn.addr !8015
  %1951 = call i32 @__asm_int3(), !insn.addr !8016
  %1952 = call i32 @__asm_int3(), !insn.addr !8017
  %1953 = call i32 @__asm_int3(), !insn.addr !8018
  %1954 = call i32 @__asm_int3(), !insn.addr !8019
  %1955 = call i32 @__asm_int3(), !insn.addr !8020
  %1956 = call i32 @__asm_int3(), !insn.addr !8021
  %1957 = call i32 @__asm_int3(), !insn.addr !8022
  %1958 = call i32 @__asm_int3(), !insn.addr !8023
  %1959 = call i32 @__asm_int3(), !insn.addr !8024
  %1960 = call i32 @__asm_int3(), !insn.addr !8025
  %1961 = call i32 @__asm_int3(), !insn.addr !8026
  %1962 = call i32 @__asm_int3(), !insn.addr !8027
  %1963 = call i32 @__asm_int3(), !insn.addr !8028
  %1964 = call i32 @__asm_int3(), !insn.addr !8029
  %1965 = call i32 @__asm_int3(), !insn.addr !8030
  %1966 = call i32 @__asm_int3(), !insn.addr !8031
  %1967 = call i32 @__asm_int3(), !insn.addr !8032
  %1968 = call i32 @__asm_int3(), !insn.addr !8033
  %1969 = call i32 @__asm_int3(), !insn.addr !8034
  %1970 = call i32 @__asm_int3(), !insn.addr !8035
  %1971 = call i32 @__asm_int3(), !insn.addr !8036
  %1972 = call i32 @__asm_int3(), !insn.addr !8037
  %1973 = call i32 @__asm_int3(), !insn.addr !8038
  %1974 = call i32 @__asm_int3(), !insn.addr !8039
  %1975 = call i32 @__asm_int3(), !insn.addr !8040
  %1976 = call i32 @__asm_int3(), !insn.addr !8041
  %1977 = call i32 @__asm_int3(), !insn.addr !8042
  %1978 = call i32 @__asm_int3(), !insn.addr !8043
  %1979 = call i32 @__asm_int3(), !insn.addr !8044
  %1980 = call i32 @__asm_int3(), !insn.addr !8045
  %1981 = call i32 @__asm_int3(), !insn.addr !8046
  %1982 = call i32 @__asm_int3(), !insn.addr !8047
  %1983 = call i32 @__asm_int3(), !insn.addr !8048
  %1984 = call i32 @__asm_int3(), !insn.addr !8049
  %1985 = call i32 @__asm_int3(), !insn.addr !8050
  %1986 = call i32 @__asm_int3(), !insn.addr !8051
  %1987 = call i32 @__asm_int3(), !insn.addr !8052
  %1988 = call i32 @__asm_int3(), !insn.addr !8053
  %1989 = call i32 @__asm_int3(), !insn.addr !8054
  %1990 = call i32 @__asm_int3(), !insn.addr !8055
  %1991 = call i32 @__asm_int3(), !insn.addr !8056
  %1992 = call i32 @__asm_int3(), !insn.addr !8057
  %1993 = call i32 @__asm_int3(), !insn.addr !8058
  %1994 = call i32 @__asm_int3(), !insn.addr !8059
  %1995 = call i32 @__asm_int3(), !insn.addr !8060
  %1996 = call i32 @__asm_int3(), !insn.addr !8061
  %1997 = call i32 @__asm_int3(), !insn.addr !8062
  %1998 = call i32 @__asm_int3(), !insn.addr !8063
  %1999 = call i32 @__asm_int3(), !insn.addr !8064
  %2000 = call i32 @__asm_int3(), !insn.addr !8065
  %2001 = call i32 @__asm_int3(), !insn.addr !8066
  %2002 = call i32 @__asm_int3(), !insn.addr !8067
  %2003 = call i32 @__asm_int3(), !insn.addr !8068
  %2004 = call i32 @__asm_int3(), !insn.addr !8069
  %2005 = call i32 @__asm_int3(), !insn.addr !8070
  %2006 = call i32 @__asm_int3(), !insn.addr !8071
  %2007 = call i32 @__asm_int3(), !insn.addr !8072
  %2008 = call i32 @__asm_int3(), !insn.addr !8073
  %2009 = call i32 @__asm_int3(), !insn.addr !8074
  %2010 = call i32 @__asm_int3(), !insn.addr !8075
  %2011 = call i32 @__asm_int3(), !insn.addr !8076
  %2012 = call i32 @__asm_int3(), !insn.addr !8077
  %2013 = call i32 @__asm_int3(), !insn.addr !8078
  %2014 = call i32 @__asm_int3(), !insn.addr !8079
  %2015 = call i32 @__asm_int3(), !insn.addr !8080
  %2016 = call i32 @__asm_int3(), !insn.addr !8081
  %2017 = call i32 @__asm_int3(), !insn.addr !8082
  %2018 = call i32 @__asm_int3(), !insn.addr !8083
  %2019 = call i32 @__asm_int3(), !insn.addr !8084
  %2020 = call i32 @__asm_int3(), !insn.addr !8085
  %2021 = call i32 @__asm_int3(), !insn.addr !8086
  %2022 = call i32 @__asm_int3(), !insn.addr !8087
  %2023 = call i32 @__asm_int3(), !insn.addr !8088
  %2024 = call i32 @__asm_int3(), !insn.addr !8089
  %2025 = call i32 @__asm_int3(), !insn.addr !8090
  %2026 = call i32 @__asm_int3(), !insn.addr !8091
  %2027 = call i32 @__asm_int3(), !insn.addr !8092
  %2028 = call i32 @__asm_int3(), !insn.addr !8093
  %2029 = call i32 @__asm_int3(), !insn.addr !8094
  %2030 = call i32 @__asm_int3(), !insn.addr !8095
  %2031 = call i32 @__asm_int3(), !insn.addr !8096
  %2032 = call i32 @__asm_int3(), !insn.addr !8097
  %2033 = call i32 @__asm_int3(), !insn.addr !8098
  %2034 = call i32 @__asm_int3(), !insn.addr !8099
  %2035 = call i32 @__asm_int3(), !insn.addr !8100
  %2036 = call i32 @__asm_int3(), !insn.addr !8101
  %2037 = call i32 @__asm_int3(), !insn.addr !8102
  %2038 = call i32 @__asm_int3(), !insn.addr !8103
  %2039 = call i32 @__asm_int3(), !insn.addr !8104
  %2040 = call i32 @__asm_int3(), !insn.addr !8105
  %2041 = call i32 @__asm_int3(), !insn.addr !8106
  %2042 = call i32 @__asm_int3(), !insn.addr !8107
  %2043 = call i32 @__asm_int3(), !insn.addr !8108
  %2044 = call i32 @__asm_int3(), !insn.addr !8109
  %2045 = call i32 @__asm_int3(), !insn.addr !8110
  %2046 = call i32 @__asm_int3(), !insn.addr !8111
  %2047 = call i32 @__asm_int3(), !insn.addr !8112
  %2048 = call i32 @__asm_int3(), !insn.addr !8113
  %2049 = call i32 @__asm_int3(), !insn.addr !8114
  %2050 = call i32 @__asm_int3(), !insn.addr !8115
  %2051 = call i32 @__asm_int3(), !insn.addr !8116
  %2052 = call i32 @__asm_int3(), !insn.addr !8117
  %2053 = call i32 @__asm_int3(), !insn.addr !8118
  %2054 = call i32 @__asm_int3(), !insn.addr !8119
  %2055 = call i32 @__asm_int3(), !insn.addr !8120
  %2056 = call i32 @__asm_int3(), !insn.addr !8121
  %2057 = call i32 @__asm_int3(), !insn.addr !8122
  %2058 = call i32 @__asm_int3(), !insn.addr !8123
  %2059 = call i32 @__asm_int3(), !insn.addr !8124
  %2060 = call i32 @__asm_int3(), !insn.addr !8125
  %2061 = call i32 @__asm_int3(), !insn.addr !8126
  %2062 = call i32 @__asm_int3(), !insn.addr !8127
  %2063 = call i32 @__asm_int3(), !insn.addr !8128
  %2064 = call i32 @__asm_int3(), !insn.addr !8129
  %2065 = call i32 @__asm_int3(), !insn.addr !8130
  %2066 = call i32 @__asm_int3(), !insn.addr !8131
  %2067 = call i32 @__asm_int3(), !insn.addr !8132
  %2068 = call i32 @__asm_int3(), !insn.addr !8133
  %2069 = call i32 @__asm_int3(), !insn.addr !8134
  %2070 = call i32 @__asm_int3(), !insn.addr !8135
  %2071 = call i32 @__asm_int3(), !insn.addr !8136
  %2072 = call i32 @__asm_int3(), !insn.addr !8137
  %2073 = call i32 @__asm_int3(), !insn.addr !8138
  %2074 = call i32 @__asm_int3(), !insn.addr !8139
  %2075 = call i32 @__asm_int3(), !insn.addr !8140
  %2076 = call i32 @__asm_int3(), !insn.addr !8141
  %2077 = call i32 @__asm_int3(), !insn.addr !8142
  %2078 = call i32 @__asm_int3(), !insn.addr !8143
  %2079 = call i32 @__asm_int3(), !insn.addr !8144
  %2080 = call i32 @__asm_int3(), !insn.addr !8145
  %2081 = call i32 @__asm_int3(), !insn.addr !8146
  %2082 = call i32 @__asm_int3(), !insn.addr !8147
  %2083 = call i32 @__asm_int3(), !insn.addr !8148
  %2084 = call i32 @__asm_int3(), !insn.addr !8149
  %2085 = call i32 @__asm_int3(), !insn.addr !8150
  %2086 = call i32 @__asm_int3(), !insn.addr !8151
  %2087 = call i32 @__asm_int3(), !insn.addr !8152
  %2088 = call i32 @__asm_int3(), !insn.addr !8153
  %2089 = call i32 @__asm_int3(), !insn.addr !8154
  %2090 = call i32 @__asm_int3(), !insn.addr !8155
  %2091 = call i32 @__asm_int3(), !insn.addr !8156
  %2092 = call i32 @__asm_int3(), !insn.addr !8157
  %2093 = call i32 @__asm_int3(), !insn.addr !8158
  %2094 = call i32 @__asm_int3(), !insn.addr !8159
  %2095 = call i32 @__asm_int3(), !insn.addr !8160
  %2096 = call i32 @__asm_int3(), !insn.addr !8161
  %2097 = call i32 @__asm_int3(), !insn.addr !8162
  %2098 = call i32 @__asm_int3(), !insn.addr !8163
  %2099 = call i32 @__asm_int3(), !insn.addr !8164
  %2100 = call i32 @__asm_int3(), !insn.addr !8165
  %2101 = call i32 @__asm_int3(), !insn.addr !8166
  %2102 = call i32 @__asm_int3(), !insn.addr !8167
  %2103 = call i32 @__asm_int3(), !insn.addr !8168
  %2104 = call i32 @__asm_int3(), !insn.addr !8169
  %2105 = call i32 @__asm_int3(), !insn.addr !8170
  %2106 = call i32 @__asm_int3(), !insn.addr !8171
  %2107 = call i32 @__asm_int3(), !insn.addr !8172
  %2108 = call i32 @__asm_int3(), !insn.addr !8173
  %2109 = call i32 @__asm_int3(), !insn.addr !8174
  %2110 = call i32 @__asm_int3(), !insn.addr !8175
  %2111 = call i32 @__asm_int3(), !insn.addr !8176
  %2112 = call i32 @__asm_int3(), !insn.addr !8177
  %2113 = call i32 @__asm_int3(), !insn.addr !8178
  %2114 = call i32 @__asm_int3(), !insn.addr !8179
  %2115 = call i32 @__asm_int3(), !insn.addr !8180
  %2116 = call i32 @__asm_int3(), !insn.addr !8181
  %2117 = call i32 @__asm_int3(), !insn.addr !8182
  %2118 = call i32 @__asm_int3(), !insn.addr !8183
  %2119 = call i32 @__asm_int3(), !insn.addr !8184
  %2120 = call i32 @__asm_int3(), !insn.addr !8185
  %2121 = call i32 @__asm_int3(), !insn.addr !8186
  %2122 = call i32 @__asm_int3(), !insn.addr !8187
  %2123 = call i32 @__asm_int3(), !insn.addr !8188
  %2124 = call i32 @__asm_int3(), !insn.addr !8189
  %2125 = call i32 @__asm_int3(), !insn.addr !8190
  %2126 = call i32 @__asm_int3(), !insn.addr !8191
  %2127 = call i32 @__asm_int3(), !insn.addr !8192
  %2128 = call i32 @__asm_int3(), !insn.addr !8193
  %2129 = call i32 @__asm_int3(), !insn.addr !8194
  %2130 = call i32 @__asm_int3(), !insn.addr !8195
  %2131 = call i32 @__asm_int3(), !insn.addr !8196
  %2132 = call i32 @__asm_int3(), !insn.addr !8197
  %2133 = call i32 @__asm_int3(), !insn.addr !8198
  %2134 = call i32 @__asm_int3(), !insn.addr !8199
  %2135 = call i32 @__asm_int3(), !insn.addr !8200
  %2136 = call i32 @__asm_int3(), !insn.addr !8201
  %2137 = call i32 @__asm_int3(), !insn.addr !8202
  %2138 = call i32 @__asm_int3(), !insn.addr !8203
  %2139 = call i32 @__asm_int3(), !insn.addr !8204
  %2140 = call i32 @__asm_int3(), !insn.addr !8205
  %2141 = call i32 @__asm_int3(), !insn.addr !8206
  %2142 = call i32 @__asm_int3(), !insn.addr !8207
  %2143 = call i32 @__asm_int3(), !insn.addr !8208
  ret void, !insn.addr !8208
}

declare i32 @memcpy_s_3(i8*, i32, i8*, i32) local_unnamed_addr

define i32 @"common_flush_and_write_nolock<char>"(i32 %c, i32 %stream) local_unnamed_addr {
dec_label_pc_45cc0c:
  %storemerge1.reg2mem = alloca i32, !insn.addr !8209
  %.reg2mem = alloca i32, !insn.addr !8209
  %.pre-phi3.reg2mem = alloca i32*, !insn.addr !8209
  %0 = call i32 @_fileno(i32 %stream), !insn.addr !8210
  %1 = add i32 %stream, 12, !insn.addr !8211
  %2 = inttoptr i32 %1 to i32*, !insn.addr !8211
  %3 = load i32, i32* %2, align 4, !insn.addr !8211
  %4 = and i32 %3, 6
  %5 = icmp eq i32 %4, 0, !insn.addr !8212
  %6 = icmp eq i1 %5, false, !insn.addr !8213
  br i1 %6, label %dec_label_pc_45cc48, label %dec_label_pc_45cc29, !insn.addr !8213

dec_label_pc_45cc29:                              ; preds = %dec_label_pc_45cc0c
  %7 = call i32* @_errno(), !insn.addr !8214
  store i32 9, i32* %7, align 4, !insn.addr !8215
  br label %dec_label_pc_45cc37, !insn.addr !8215

dec_label_pc_45cc37:                              ; preds = %dec_label_pc_45cc29, %dec_label_pc_45cc56, %dec_label_pc_45cc6e
  %8 = load i32, i32* %2, align 4, !insn.addr !8216
  %9 = or i32 %8, 16, !insn.addr !8216
  store i32 %9, i32* %2, align 4, !insn.addr !8216
  store i32 -1, i32* %storemerge1.reg2mem, !insn.addr !8217
  br label %dec_label_pc_45cd1e, !insn.addr !8217

dec_label_pc_45cc48:                              ; preds = %dec_label_pc_45cc0c
  %10 = and i32 %3, 4096
  %11 = icmp eq i32 %10, 0, !insn.addr !8218
  br i1 %11, label %dec_label_pc_45cc63, label %dec_label_pc_45cc56, !insn.addr !8219

dec_label_pc_45cc56:                              ; preds = %dec_label_pc_45cc48
  %12 = call i32* @_errno(), !insn.addr !8220
  store i32 34, i32* %12, align 4, !insn.addr !8221
  br label %dec_label_pc_45cc37, !insn.addr !8222

dec_label_pc_45cc63:                              ; preds = %dec_label_pc_45cc48
  %13 = and i32 %3, 1
  %14 = icmp eq i32 %13, 0, !insn.addr !8223
  br i1 %14, label %dec_label_pc_45cc63.dec_label_pc_45cc96_crit_edge, label %dec_label_pc_45cc6e, !insn.addr !8224

dec_label_pc_45cc63.dec_label_pc_45cc96_crit_edge: ; preds = %dec_label_pc_45cc63
  %.pre = add i32 %stream, 8, !insn.addr !8225
  %.pre2 = inttoptr i32 %.pre to i32*, !insn.addr !8225
  store i32* %.pre2, i32** %.pre-phi3.reg2mem
  store i32 %3, i32* %.reg2mem
  br label %dec_label_pc_45cc96

dec_label_pc_45cc6e:                              ; preds = %dec_label_pc_45cc63
  %15 = call i1 @stream_is_at_end_of_file_nolock(i32 %stream), !insn.addr !8226
  %16 = add i32 %stream, 8
  %17 = inttoptr i32 %16 to i32*
  store i32 0, i32* %17, align 4, !insn.addr !8227
  %18 = icmp eq i1 %15, false, !insn.addr !8228
  br i1 %18, label %dec_label_pc_45cc37, label %dec_label_pc_45cc85, !insn.addr !8229

dec_label_pc_45cc85:                              ; preds = %dec_label_pc_45cc6e
  %19 = add i32 %stream, 4, !insn.addr !8230
  %20 = inttoptr i32 %19 to i32*, !insn.addr !8230
  %21 = load i32, i32* %20, align 4, !insn.addr !8230
  %22 = inttoptr i32 %stream to i32*, !insn.addr !8231
  store i32 %21, i32* %22, align 4, !insn.addr !8231
  %23 = load i32, i32* %2, align 4, !insn.addr !8232
  %24 = and i32 %23, -2, !insn.addr !8232
  store i32 %24, i32* %2, align 4, !insn.addr !8232
  store i32* %17, i32** %.pre-phi3.reg2mem, !insn.addr !8232
  store i32 %24, i32* %.reg2mem, !insn.addr !8232
  br label %dec_label_pc_45cc96, !insn.addr !8232

dec_label_pc_45cc96:                              ; preds = %dec_label_pc_45cc63.dec_label_pc_45cc96_crit_edge, %dec_label_pc_45cc85
  %.reload = load i32, i32* %.reg2mem, !insn.addr !8233
  %.pre-phi3.reload = load i32*, i32** %.pre-phi3.reg2mem
  %25 = and i32 %.reload, -11, !insn.addr !8233
  %26 = or i32 %25, 2, !insn.addr !8234
  store i32 %26, i32* %2, align 4, !insn.addr !8234
  store i32 0, i32* %.pre-phi3.reload, align 4, !insn.addr !8225
  %27 = load i32, i32* %2, align 4, !insn.addr !8235
  %28 = and i32 %27, 1216, !insn.addr !8236
  %29 = icmp eq i32 %28, 0, !insn.addr !8236
  %30 = icmp eq i1 %29, false, !insn.addr !8237
  br i1 %30, label %dec_label_pc_45ccf7, label %dec_label_pc_45ccc4, !insn.addr !8237

dec_label_pc_45ccc4:                              ; preds = %dec_label_pc_45cc96
  %31 = call i32* @__acrt_iob_func(i32 1), !insn.addr !8238
  %32 = ptrtoint i32* %31 to i32, !insn.addr !8238
  %33 = icmp eq i32 %32, %stream, !insn.addr !8239
  br i1 %33, label %dec_label_pc_45cce2, label %dec_label_pc_45ccd4, !insn.addr !8240

dec_label_pc_45ccd4:                              ; preds = %dec_label_pc_45ccc4
  %34 = call i32* @__acrt_iob_func(i32 2), !insn.addr !8241
  %35 = ptrtoint i32* %34 to i32, !insn.addr !8241
  %36 = icmp eq i32 %35, %stream, !insn.addr !8242
  %37 = icmp eq i1 %36, false, !insn.addr !8243
  br i1 %37, label %dec_label_pc_45cced, label %dec_label_pc_45cce2, !insn.addr !8243

dec_label_pc_45cce2:                              ; preds = %dec_label_pc_45ccd4, %dec_label_pc_45ccc4
  %38 = call i32 @_isatty(i32 %0), !insn.addr !8244
  %39 = icmp eq i32 %38, 0, !insn.addr !8245
  %40 = icmp eq i1 %39, false, !insn.addr !8246
  br i1 %40, label %dec_label_pc_45ccf7, label %dec_label_pc_45cced, !insn.addr !8246

dec_label_pc_45cced:                              ; preds = %dec_label_pc_45cce2, %dec_label_pc_45ccd4
  %41 = call i32 @function_401997(i32 %stream), !insn.addr !8247
  br label %dec_label_pc_45ccf7, !insn.addr !8248

dec_label_pc_45ccf7:                              ; preds = %dec_label_pc_45cce2, %dec_label_pc_45cced, %dec_label_pc_45cc96
  %42 = trunc i32 %c to i8, !insn.addr !8249
  %43 = call i1 @"write_buffer_nolock<char>"(i8 %42, i32 %stream), !insn.addr !8249
  %44 = icmp eq i1 %43, false, !insn.addr !8250
  %45 = icmp eq i1 %44, false, !insn.addr !8251
  br i1 %45, label %dec_label_pc_45cd1a, label %dec_label_pc_45cd09, !insn.addr !8251

dec_label_pc_45cd09:                              ; preds = %dec_label_pc_45ccf7
  %46 = load i32, i32* %2, align 4, !insn.addr !8252
  %47 = or i32 %46, 16, !insn.addr !8252
  store i32 %47, i32* %2, align 4, !insn.addr !8252
  store i32 -1, i32* %storemerge1.reg2mem, !insn.addr !8253
  br label %dec_label_pc_45cd1e, !insn.addr !8253

dec_label_pc_45cd1a:                              ; preds = %dec_label_pc_45ccf7
  %48 = and i32 %c, 255, !insn.addr !8254
  store i32 %48, i32* %storemerge1.reg2mem, !insn.addr !8254
  br label %dec_label_pc_45cd1e, !insn.addr !8254

dec_label_pc_45cd1e:                              ; preds = %dec_label_pc_45cd09, %dec_label_pc_45cd1a, %dec_label_pc_45cc37
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  ret i32 %storemerge1.reload, !insn.addr !8255
}

define i1 @"write_buffer_nolock<char>"(i8 %c, i32 %stream) local_unnamed_addr {
dec_label_pc_45cec5:
  %eax.0.shrunk.reg2mem = alloca i1, !insn.addr !8256
  %storemerge.reg2mem = alloca i32, !insn.addr !8256
  %edi.0.reg2mem = alloca i32, !insn.addr !8256
  %stack_var_4 = alloca i8, align 1
  store i8 %c, i8* %stack_var_4, align 1
  %0 = call i32 @_fileno(i32 %stream), !insn.addr !8257
  %1 = add i32 %stream, 12, !insn.addr !8258
  %2 = inttoptr i32 %1 to i32*, !insn.addr !8258
  %3 = load i32, i32* %2, align 4, !insn.addr !8258
  %4 = and i32 %3, 192
  %5 = icmp eq i32 %4, 0, !insn.addr !8259
  br i1 %5, label %dec_label_pc_45cf77, label %dec_label_pc_45cee7, !insn.addr !8260

dec_label_pc_45cee7:                              ; preds = %dec_label_pc_45cec5
  %6 = add i32 %stream, 4, !insn.addr !8261
  %7 = inttoptr i32 %6 to i32*, !insn.addr !8261
  %8 = load i32, i32* %7, align 4, !insn.addr !8261
  %9 = inttoptr i32 %stream to i32*, !insn.addr !8262
  %10 = load i32, i32* %9, align 4, !insn.addr !8262
  %11 = sub i32 %10, %8, !insn.addr !8263
  %12 = add i32 %8, 1, !insn.addr !8264
  store i32 %12, i32* %9, align 4, !insn.addr !8265
  %13 = add i32 %stream, 24, !insn.addr !8266
  %14 = inttoptr i32 %13 to i32*, !insn.addr !8266
  %15 = load i32, i32* %14, align 4, !insn.addr !8266
  %16 = add i32 %15, -1, !insn.addr !8267
  %17 = add i32 %stream, 8, !insn.addr !8268
  %18 = inttoptr i32 %17 to i32*, !insn.addr !8268
  store i32 %16, i32* %18, align 4, !insn.addr !8268
  %19 = icmp slt i32 %11, 1
  br i1 %19, label %dec_label_pc_45cf28, label %dec_label_pc_45cf04, !insn.addr !8269

dec_label_pc_45cf04:                              ; preds = %dec_label_pc_45cee7
  %20 = load i32, i32* %7, align 4, !insn.addr !8270
  %21 = inttoptr i32 %20 to i8*, !insn.addr !8270
  %22 = call i32 @_write(i32 %0, i8* %21, i32 %11), !insn.addr !8271
  store i32 %22, i32* %edi.0.reg2mem, !insn.addr !8272
  br label %dec_label_pc_45cf16, !insn.addr !8272

dec_label_pc_45cf16:                              ; preds = %dec_label_pc_45cf53, %dec_label_pc_45cf4d, %dec_label_pc_45cf04
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %23 = icmp eq i32 %edi.0.reload, %11, !insn.addr !8273
  %24 = load i32, i32* %7, align 4, !insn.addr !8274
  %25 = load i8, i8* %stack_var_4, align 1, !insn.addr !8275
  %26 = inttoptr i32 %24 to i8*, !insn.addr !8276
  store i8 %25, i8* %26, align 1, !insn.addr !8276
  store i1 %23, i1* %eax.0.shrunk.reg2mem, !insn.addr !8277
  br label %dec_label_pc_45cf8d, !insn.addr !8277

dec_label_pc_45cf28:                              ; preds = %dec_label_pc_45cee7
  %27 = icmp ugt i32 %0, -3
  store i32 ptrtoint (i32* @__badioinfo to i32), i32* %storemerge.reg2mem, !insn.addr !8278
  br i1 %27, label %dec_label_pc_45cf4d, label %dec_label_pc_45cf32, !insn.addr !8278

dec_label_pc_45cf32:                              ; preds = %dec_label_pc_45cf28
  %28 = and i32 %0, 63, !insn.addr !8279
  %29 = sdiv i32 %0, 64, !insn.addr !8280
  %narrow = mul nuw nsw i32 %28, 56
  %30 = mul i32 %29, 4, !insn.addr !8281
  %31 = add i32 %30, ptrtoint (i32* @__pioinfo to i32), !insn.addr !8281
  %32 = inttoptr i32 %31 to i32*, !insn.addr !8281
  %33 = load i32, i32* %32, align 4, !insn.addr !8281
  %34 = add i32 %33, %narrow, !insn.addr !8281
  store i32 %34, i32* %storemerge.reg2mem, !insn.addr !8282
  br label %dec_label_pc_45cf4d, !insn.addr !8282

dec_label_pc_45cf4d:                              ; preds = %dec_label_pc_45cf28, %dec_label_pc_45cf32
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %35 = add i32 %storemerge.reload, 40, !insn.addr !8283
  %36 = inttoptr i32 %35 to i8*, !insn.addr !8283
  %37 = load i8, i8* %36, align 1, !insn.addr !8283
  %38 = and i8 %37, 32, !insn.addr !8283
  %39 = icmp eq i8 %38, 0, !insn.addr !8283
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !8284
  br i1 %39, label %dec_label_pc_45cf16, label %dec_label_pc_45cf53, !insn.addr !8284

dec_label_pc_45cf53:                              ; preds = %dec_label_pc_45cf4d
  %40 = call i64 @_lseeki64(i32 %0, i64 0, i32 0), !insn.addr !8285
  %41 = trunc i64 %40 to i32, !insn.addr !8285
  %42 = and i32 %0, %41, !insn.addr !8286
  %43 = icmp eq i32 %42, -1, !insn.addr !8287
  %44 = icmp eq i1 %43, false, !insn.addr !8288
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !8288
  br i1 %44, label %dec_label_pc_45cf16, label %dec_label_pc_45cf67, !insn.addr !8288

dec_label_pc_45cf67:                              ; preds = %dec_label_pc_45cf53
  %45 = load i32, i32* %2, align 4, !insn.addr !8289
  %46 = or i32 %45, 16, !insn.addr !8289
  store i32 %46, i32* %2, align 4, !insn.addr !8289
  store i1 true, i1* %eax.0.shrunk.reg2mem, !insn.addr !8290
  br label %dec_label_pc_45cf8d, !insn.addr !8290

dec_label_pc_45cf77:                              ; preds = %dec_label_pc_45cec5
  %47 = call i32 @_write(i32 %0, i8* nonnull %stack_var_4, i32 1), !insn.addr !8291
  %48 = icmp eq i32 %47, 1, !insn.addr !8292
  store i1 %48, i1* %eax.0.shrunk.reg2mem, !insn.addr !8293
  br label %dec_label_pc_45cf8d, !insn.addr !8293

dec_label_pc_45cf8d:                              ; preds = %dec_label_pc_45cf77, %dec_label_pc_45cf67, %dec_label_pc_45cf16
  %eax.0.shrunk.reload = load i1, i1* %eax.0.shrunk.reg2mem
  ret i1 %eax.0.shrunk.reload, !insn.addr !8294
}

define i1 @stream_is_at_end_of_file_nolock(i32 %stream) local_unnamed_addr {
dec_label_pc_45d0c5:
  %merge.reg2mem = alloca i1, !insn.addr !8295
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %current_position_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %2 = add i32 %stream, 12, !insn.addr !8296
  %3 = inttoptr i32 %2 to i32*, !insn.addr !8296
  %4 = load i32, i32* %3, align 4, !insn.addr !8296
  %5 = and i32 %4, 8
  %6 = icmp eq i32 %5, 0, !insn.addr !8297
  store i1 true, i1* %merge.reg2mem, !insn.addr !8298
  br i1 %6, label %dec_label_pc_45d0df, label %dec_label_pc_45d0db, !insn.addr !8298

dec_label_pc_45d0db:                              ; preds = %dec_label_pc_45d12e, %dec_label_pc_45d11f, %dec_label_pc_45d108, %dec_label_pc_45d0f6, %dec_label_pc_45d0ef, %dec_label_pc_45d0c5
  %merge.reload = load i1, i1* %merge.reg2mem
  ret i1 %merge.reload, !insn.addr !8299

dec_label_pc_45d0df:                              ; preds = %dec_label_pc_45d0c5
  %7 = and i32 %4, 192
  %8 = icmp eq i32 %7, 0, !insn.addr !8300
  br i1 %8, label %dec_label_pc_45d0f6, label %dec_label_pc_45d0ef, !insn.addr !8301

dec_label_pc_45d0ef:                              ; preds = %dec_label_pc_45d0df
  %9 = inttoptr i32 %stream to i32*, !insn.addr !8302
  %10 = load i32, i32* %9, align 4, !insn.addr !8302
  %11 = add i32 %stream, 4, !insn.addr !8303
  %12 = inttoptr i32 %11 to i32*, !insn.addr !8303
  %13 = load i32, i32* %12, align 4, !insn.addr !8303
  %14 = icmp eq i32 %10, %13, !insn.addr !8303
  store i1 false, i1* %merge.reg2mem, !insn.addr !8304
  br i1 %14, label %dec_label_pc_45d0db, label %dec_label_pc_45d0f6, !insn.addr !8304

dec_label_pc_45d0f6:                              ; preds = %dec_label_pc_45d0ef, %dec_label_pc_45d0df
  %15 = add i32 %stream, 16, !insn.addr !8305
  %16 = inttoptr i32 %15 to i32*, !insn.addr !8305
  %17 = load i32, i32* %16, align 4, !insn.addr !8305
  %18 = call i32 @_get_osfhandle(i32 %17), !insn.addr !8306
  %19 = icmp eq i32 %18, -1, !insn.addr !8307
  store i1 false, i1* %merge.reg2mem, !insn.addr !8308
  br i1 %19, label %dec_label_pc_45d0db, label %dec_label_pc_45d108, !insn.addr !8308

dec_label_pc_45d108:                              ; preds = %dec_label_pc_45d0f6
  %20 = ptrtoint i32* %current_position_-12 to i32, !insn.addr !8309
  %21 = inttoptr i32 %18 to i32*, !insn.addr !8310
  %22 = call i1 @SetFilePointerEx(i32* %21, %_LARGE_INTEGER zeroinitializer, %_LARGE_INTEGER* null, i32 %20), !insn.addr !8310
  %23 = icmp eq i1 %22, false, !insn.addr !8311
  store i1 false, i1* %merge.reg2mem, !insn.addr !8312
  br i1 %23, label %dec_label_pc_45d0db, label %dec_label_pc_45d11f, !insn.addr !8312

dec_label_pc_45d11f:                              ; preds = %dec_label_pc_45d108
  %24 = bitcast i32* %stack_var_-20 to %_LARGE_INTEGER*
  %25 = call i1 @GetFileSizeEx(i32* %21, %_LARGE_INTEGER* nonnull %24), !insn.addr !8313
  %26 = icmp eq i1 %25, false, !insn.addr !8314
  store i1 false, i1* %merge.reg2mem, !insn.addr !8315
  br i1 %26, label %dec_label_pc_45d0db, label %dec_label_pc_45d12e, !insn.addr !8315

dec_label_pc_45d12e:                              ; preds = %dec_label_pc_45d11f
  %27 = load i32, i32* %current_position_-12, align 4, !insn.addr !8316
  %28 = load i32, i32* %stack_var_-20, align 4, !insn.addr !8317
  %29 = icmp eq i32 %27, %28, !insn.addr !8317
  %30 = icmp eq i32 %1, %0, !insn.addr !8318
  %or.cond = icmp eq i1 %30, %29
  store i1 %or.cond, i1* %merge.reg2mem, !insn.addr !8319
  br label %dec_label_pc_45d0db, !insn.addr !8319
}

define i32 @__acrt_stdio_flush_and_write_narrow_nolock(i32 %c, i32 %stream) local_unnamed_addr {
dec_label_pc_45d16b:
  %0 = call i32 @"common_flush_and_write_nolock<char>"(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !8320
  ret i32 %0, !insn.addr !8320
}

define i32 @_isatty(i32 %fh) local_unnamed_addr {
dec_label_pc_45d185:
  %0 = icmp eq i32 %fh, -2, !insn.addr !8321
  %1 = icmp eq i1 %0, false, !insn.addr !8322
  br i1 %1, label %dec_label_pc_45d19f, label %dec_label_pc_45d192, !insn.addr !8322

dec_label_pc_45d192:                              ; preds = %dec_label_pc_45d185
  %2 = call i32* @_errno(), !insn.addr !8323
  store i32 9, i32* %2, align 4, !insn.addr !8324
  br label %dec_label_pc_45d1d7, !insn.addr !8325

dec_label_pc_45d19f:                              ; preds = %dec_label_pc_45d185
  %3 = icmp slt i32 %fh, 0, !insn.addr !8326
  br i1 %3, label %dec_label_pc_45d1c7, label %dec_label_pc_45d1a3, !insn.addr !8327

dec_label_pc_45d1a3:                              ; preds = %dec_label_pc_45d19f
  %4 = load i32, i32* @_nhandle, align 4, !insn.addr !8328
  %5 = icmp ugt i32 %4, %fh, !insn.addr !8328
  %6 = icmp eq i1 %5, false, !insn.addr !8329
  br i1 %6, label %dec_label_pc_45d1c7, label %dec_label_pc_45d1ab, !insn.addr !8329

dec_label_pc_45d1ab:                              ; preds = %dec_label_pc_45d1a3
  %7 = and i32 %fh, 63, !insn.addr !8330
  %8 = udiv i32 %fh, 64
  %narrow = mul nuw nsw i32 %7, 56
  %9 = mul i32 %8, 4, !insn.addr !8331
  %10 = add i32 %9, ptrtoint (i32* @__pioinfo to i32), !insn.addr !8331
  %11 = inttoptr i32 %10 to i32*, !insn.addr !8331
  %12 = load i32, i32* %11, align 4, !insn.addr !8331
  %13 = add nuw nsw i32 %narrow, 40, !insn.addr !8332
  %14 = add i32 %13, %12, !insn.addr !8332
  %15 = inttoptr i32 %14 to i8*, !insn.addr !8332
  %16 = load i8, i8* %15, align 1, !insn.addr !8332
  %17 = and i8 %16, 64
  %18 = zext i8 %17 to i32, !insn.addr !8333
  ret i32 %18, !insn.addr !8334

dec_label_pc_45d1c7:                              ; preds = %dec_label_pc_45d1a3, %dec_label_pc_45d19f
  %19 = call i32* @_errno(), !insn.addr !8335
  store i32 9, i32* %19, align 4, !insn.addr !8336
  call void @_invalid_parameter_noinfo(), !insn.addr !8337
  br label %dec_label_pc_45d1d7, !insn.addr !8337

dec_label_pc_45d1d7:                              ; preds = %dec_label_pc_45d1c7, %dec_label_pc_45d192
  ret i32 0, !insn.addr !8338
}

define void @__acrt_stdio_allocate_buffer_nolock(i32 %public_stream) local_unnamed_addr {
dec_label_pc_45d717:
  %edi.0.reg2mem = alloca i32, !insn.addr !8339
  %0 = load i32, i32* @_cflush, align 4, !insn.addr !8340
  %1 = add i32 %0, 1, !insn.addr !8340
  store i32 %1, i32* @_cflush, align 4, !insn.addr !8340
  %2 = call i32* @_malloc_base(i32 4096), !insn.addr !8341
  %3 = ptrtoint i32* %2 to i32, !insn.addr !8341
  %4 = add i32 %public_stream, 4, !insn.addr !8342
  %5 = inttoptr i32 %4 to i32*, !insn.addr !8342
  store i32 %3, i32* %5, align 4, !insn.addr !8342
  call void @_free_base(i32* null), !insn.addr !8343
  %6 = load i32, i32* %5, align 4, !insn.addr !8344
  %7 = icmp eq i32 %6, 0, !insn.addr !8344
  %8 = add i32 %public_stream, 12, !insn.addr !8345
  %9 = inttoptr i32 %8 to i32*
  %10 = load i32, i32* %9, align 4
  br i1 %7, label %dec_label_pc_45d74f, label %dec_label_pc_45d747, !insn.addr !8346

dec_label_pc_45d747:                              ; preds = %dec_label_pc_45d717
  %11 = or i32 %10, 64, !insn.addr !8347
  store i32 %11, i32* %9, align 4, !insn.addr !8347
  store i32 4096, i32* %edi.0.reg2mem, !insn.addr !8348
  br label %dec_label_pc_45d760, !insn.addr !8348

dec_label_pc_45d74f:                              ; preds = %dec_label_pc_45d717
  %12 = or i32 %10, 1024, !insn.addr !8349
  store i32 %12, i32* %9, align 4, !insn.addr !8349
  %13 = add i32 %public_stream, 20, !insn.addr !8350
  store i32 %13, i32* %5, align 4, !insn.addr !8351
  store i32 2, i32* %edi.0.reg2mem, !insn.addr !8352
  br label %dec_label_pc_45d760, !insn.addr !8352

dec_label_pc_45d760:                              ; preds = %dec_label_pc_45d74f, %dec_label_pc_45d747
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %14 = add i32 %public_stream, 24, !insn.addr !8353
  %15 = inttoptr i32 %14 to i32*, !insn.addr !8353
  store i32 %edi.0.reload, i32* %15, align 4, !insn.addr !8353
  %16 = load i32, i32* %5, align 4, !insn.addr !8354
  %17 = add i32 %public_stream, 8, !insn.addr !8355
  %18 = inttoptr i32 %17 to i32*, !insn.addr !8355
  store i32 0, i32* %18, align 4, !insn.addr !8355
  %19 = inttoptr i32 %public_stream to i32*, !insn.addr !8356
  store i32 %16, i32* %19, align 4, !insn.addr !8356
  ret void, !insn.addr !8357
}

define i32 @to_abstract_control_1(i32 %machine_control) local_unnamed_addr {
dec_label_pc_45e1db:
  %esi.0.reg2mem = alloca i32, !insn.addr !8358
  %ebx.0.reg2mem = alloca i32, !insn.addr !8358
  %0 = and i32 %machine_control, 32832, !insn.addr !8359
  %1 = icmp eq i32 %0, 32768, !insn.addr !8360
  %2 = icmp eq i1 %1, false, !insn.addr !8361
  store i32 3072, i32* %ebx.0.reg2mem, !insn.addr !8361
  br i1 %2, label %dec_label_pc_45e200, label %dec_label_pc_45e219, !insn.addr !8361

dec_label_pc_45e200:                              ; preds = %dec_label_pc_45e1db
  %3 = icmp eq i32 %0, 64, !insn.addr !8362
  %4 = icmp eq i1 %3, false, !insn.addr !8363
  store i32 2048, i32* %ebx.0.reg2mem, !insn.addr !8363
  br i1 %4, label %dec_label_pc_45e20d, label %dec_label_pc_45e219, !insn.addr !8363

dec_label_pc_45e20d:                              ; preds = %dec_label_pc_45e200
  %5 = icmp eq i32 %0, 32832, !insn.addr !8364
  %spec.select = select i1 %5, i32 1024, i32 0
  store i32 %spec.select, i32* %ebx.0.reg2mem
  br label %dec_label_pc_45e219

dec_label_pc_45e219:                              ; preds = %dec_label_pc_45e20d, %dec_label_pc_45e200, %dec_label_pc_45e1db
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %6 = and i32 %machine_control, 24576, !insn.addr !8365
  store i32 0, i32* %esi.0.reg2mem
  switch i32 %6, label %dec_label_pc_45e232 [
    i32 0, label %dec_label_pc_45e249
    i32 8192, label %dec_label_pc_45e244
    i32 16384, label %dec_label_pc_45e23d
  ]

dec_label_pc_45e232:                              ; preds = %dec_label_pc_45e219
  %7 = icmp eq i32 %6, 24576, !insn.addr !8366
  %8 = icmp eq i1 %7, false, !insn.addr !8367
  %spec.select1 = select i1 %8, i32 0, i32 768
  store i32 %spec.select1, i32* %esi.0.reg2mem
  br label %dec_label_pc_45e249

dec_label_pc_45e23d:                              ; preds = %dec_label_pc_45e219
  store i32 512, i32* %esi.0.reg2mem, !insn.addr !8368
  br label %dec_label_pc_45e249, !insn.addr !8368

dec_label_pc_45e244:                              ; preds = %dec_label_pc_45e219
  store i32 256, i32* %esi.0.reg2mem, !insn.addr !8369
  br label %dec_label_pc_45e249, !insn.addr !8369

dec_label_pc_45e249:                              ; preds = %dec_label_pc_45e232, %dec_label_pc_45e219, %dec_label_pc_45e244, %dec_label_pc_45e23d
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %9 = udiv i32 %machine_control, 8
  %10 = and i32 %9, 48, !insn.addr !8370
  %11 = udiv i32 %machine_control, 64
  %12 = and i32 %11, 8, !insn.addr !8371
  %13 = or i32 %10, %12, !insn.addr !8372
  %14 = udiv i32 %machine_control, 256
  %15 = and i32 %14, 4, !insn.addr !8373
  %16 = or i32 %13, %15, !insn.addr !8374
  %17 = udiv i32 %machine_control, 4096, !insn.addr !8375
  %18 = udiv i32 %machine_control, 1024
  %19 = and i32 %18, 2, !insn.addr !8376
  %20 = and i32 %17, 1, !insn.addr !8377
  %21 = or i32 %16, %19, !insn.addr !8378
  %22 = or i32 %21, %20, !insn.addr !8379
  %23 = or i32 %22, %ebx.0.reload, !insn.addr !8380
  %24 = or i32 %23, %esi.0.reload, !insn.addr !8381
  ret i32 %24, !insn.addr !8382
}

define i32 @to_abstract_control_2(i32 %machine_control) local_unnamed_addr {
dec_label_pc_45e2c6:
  %esi.0.reg2mem = alloca i32, !insn.addr !8383
  %0 = and i32 %machine_control, 3072, !insn.addr !8384
  store i32 0, i32* %esi.0.reg2mem
  switch i32 %0, label %dec_label_pc_45e31d [
    i32 0, label %dec_label_pc_45e331
    i32 1024, label %dec_label_pc_45e32c
    i32 2048, label %dec_label_pc_45e328
  ]

dec_label_pc_45e31d:                              ; preds = %dec_label_pc_45e2c6
  %1 = icmp eq i32 %0, 3072, !insn.addr !8385
  %2 = icmp eq i1 %1, false, !insn.addr !8386
  %spec.select = select i1 %2, i32 0, i32 768
  store i32 %spec.select, i32* %esi.0.reg2mem
  br label %dec_label_pc_45e331

dec_label_pc_45e328:                              ; preds = %dec_label_pc_45e2c6
  store i32 512, i32* %esi.0.reg2mem, !insn.addr !8387
  br label %dec_label_pc_45e331, !insn.addr !8387

dec_label_pc_45e32c:                              ; preds = %dec_label_pc_45e2c6
  store i32 256, i32* %esi.0.reg2mem, !insn.addr !8388
  br label %dec_label_pc_45e331, !insn.addr !8388

dec_label_pc_45e331:                              ; preds = %dec_label_pc_45e31d, %dec_label_pc_45e2c6, %dec_label_pc_45e32c, %dec_label_pc_45e328
  %3 = mul i32 %machine_control, 4, !insn.addr !8389
  %4 = and i32 %3, 16384, !insn.addr !8390
  %5 = and i32 %machine_control, 768, !insn.addr !8391
  %switch.selectcmp = icmp eq i32 %5, 512
  %switch.select = select i1 %switch.selectcmp, i32 4096, i32 0
  %switch.selectcmp1 = icmp eq i32 %5, 0
  %switch.select2 = select i1 %switch.selectcmp1, i32 8192, i32 %switch.select
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %6 = mul i32 %machine_control, 16
  %7 = and i32 %6, 32, !insn.addr !8392
  %8 = mul i32 %machine_control, 2
  %9 = and i32 %8, 8, !insn.addr !8393
  %10 = or i32 %7, %9, !insn.addr !8394
  %11 = udiv i32 %machine_control, 2
  %12 = and i32 %11, 4, !insn.addr !8395
  %13 = or i32 %10, %12, !insn.addr !8396
  %14 = udiv i32 %machine_control, 8
  %15 = and i32 %14, 2, !insn.addr !8397
  %16 = udiv i32 %machine_control, 32, !insn.addr !8398
  %17 = or i32 %13, %15, !insn.addr !8399
  %18 = and i32 %6, 16, !insn.addr !8400
  %19 = and i32 %16, 1, !insn.addr !8401
  %20 = or i32 %17, %18, !insn.addr !8402
  %21 = or i32 %20, %19, !insn.addr !8403
  %22 = or i32 %21, %4, !insn.addr !8404
  %23 = or i32 %22, %switch.select2, !insn.addr !8405
  %24 = or i32 %23, %esi.0.reload, !insn.addr !8406
  ret i32 %24, !insn.addr !8407
}

define i32 @to_machine_sse_control(i32 %abstract_control) local_unnamed_addr {
dec_label_pc_45e3ad:
  %edi.0.reg2mem = alloca i32, !insn.addr !8408
  %ebx.0.reg2mem = alloca i32, !insn.addr !8408
  %0 = and i32 %abstract_control, 3072, !insn.addr !8409
  store i32 0, i32* %ebx.0.reg2mem
  switch i32 %0, label %dec_label_pc_45e3fc [
    i32 1024, label %dec_label_pc_45e3f7
    i32 2048, label %dec_label_pc_45e3f2
    i32 3072, label %dec_label_pc_45e3eb
  ]

dec_label_pc_45e3eb:                              ; preds = %dec_label_pc_45e3ad
  store i32 32768, i32* %ebx.0.reg2mem, !insn.addr !8410
  br label %dec_label_pc_45e3fc, !insn.addr !8410

dec_label_pc_45e3f2:                              ; preds = %dec_label_pc_45e3ad
  store i32 64, i32* %ebx.0.reg2mem, !insn.addr !8411
  br label %dec_label_pc_45e3fc, !insn.addr !8411

dec_label_pc_45e3f7:                              ; preds = %dec_label_pc_45e3ad
  store i32 32832, i32* %ebx.0.reg2mem, !insn.addr !8412
  br label %dec_label_pc_45e3fc, !insn.addr !8412

dec_label_pc_45e3fc:                              ; preds = %dec_label_pc_45e3ad, %dec_label_pc_45e3f7, %dec_label_pc_45e3f2, %dec_label_pc_45e3eb
  %1 = udiv i32 %abstract_control, 4, !insn.addr !8413
  %2 = and i32 %abstract_control, -1073741824, !insn.addr !8414
  %3 = or i32 %2, %1, !insn.addr !8415
  %4 = udiv i32 %3, 4194304, !insn.addr !8416
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %5 = and i32 %4, 768, !insn.addr !8417
  store i32 0, i32* %edi.0.reg2mem
  switch i32 %5, label %dec_label_pc_45e415 [
    i32 0, label %dec_label_pc_45e42c
    i32 256, label %dec_label_pc_45e427
    i32 512, label %dec_label_pc_45e420
  ]

dec_label_pc_45e415:                              ; preds = %dec_label_pc_45e3fc
  %6 = icmp eq i32 %5, 768, !insn.addr !8418
  %7 = icmp eq i1 %6, false, !insn.addr !8419
  %spec.select = select i1 %7, i32 0, i32 24576
  store i32 %spec.select, i32* %edi.0.reg2mem
  br label %dec_label_pc_45e42c

dec_label_pc_45e420:                              ; preds = %dec_label_pc_45e3fc
  store i32 16384, i32* %edi.0.reg2mem, !insn.addr !8420
  br label %dec_label_pc_45e42c, !insn.addr !8420

dec_label_pc_45e427:                              ; preds = %dec_label_pc_45e3fc
  store i32 8192, i32* %edi.0.reg2mem, !insn.addr !8421
  br label %dec_label_pc_45e42c, !insn.addr !8421

dec_label_pc_45e42c:                              ; preds = %dec_label_pc_45e415, %dec_label_pc_45e3fc, %dec_label_pc_45e427, %dec_label_pc_45e420
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %8 = mul i32 %4, 1024
  %9 = and i32 %8, 2048, !insn.addr !8422
  %10 = mul i32 %4, 256
  %11 = and i32 %10, 1024, !insn.addr !8423
  %12 = or i32 %9, %11, !insn.addr !8424
  %13 = mul i32 %4, 64
  %14 = and i32 %13, 512, !insn.addr !8425
  %15 = or i32 %12, %14, !insn.addr !8426
  %16 = mul i32 %4, 8
  %17 = and i32 %16, 256, !insn.addr !8427
  %18 = or i32 %15, %17, !insn.addr !8428
  %19 = mul i32 %4, 4096, !insn.addr !8429
  %20 = and i32 %19, 4096, !insn.addr !8430
  %21 = and i32 %16, 128, !insn.addr !8431
  %22 = or i32 %18, %21, !insn.addr !8432
  %23 = or i32 %22, %20, !insn.addr !8433
  %24 = or i32 %23, %ebx.0.reload, !insn.addr !8434
  %25 = or i32 %24, %edi.0.reload, !insn.addr !8435
  ret i32 %25, !insn.addr !8436
}

define i32 @to_machine_x87_control(i32 %abstract_control) local_unnamed_addr {
dec_label_pc_45e511:
  %edi.0.reg2mem = alloca i32, !insn.addr !8437
  %0 = and i32 %abstract_control, 12582912, !insn.addr !8438
  store i32 0, i32* %edi.0.reg2mem
  switch i32 %0, label %dec_label_pc_45e578 [
    i32 0, label %dec_label_pc_45e58f
    i32 4194304, label %dec_label_pc_45e58a
    i32 8388608, label %dec_label_pc_45e583
  ]

dec_label_pc_45e578:                              ; preds = %dec_label_pc_45e511
  %1 = icmp eq i32 %0, 12582912, !insn.addr !8439
  %2 = icmp eq i1 %1, false, !insn.addr !8440
  %spec.select = select i1 %2, i32 0, i32 3072
  store i32 %spec.select, i32* %edi.0.reg2mem
  br label %dec_label_pc_45e58f

dec_label_pc_45e583:                              ; preds = %dec_label_pc_45e511
  store i32 2048, i32* %edi.0.reg2mem, !insn.addr !8441
  br label %dec_label_pc_45e58f, !insn.addr !8441

dec_label_pc_45e58a:                              ; preds = %dec_label_pc_45e511
  store i32 1024, i32* %edi.0.reg2mem, !insn.addr !8442
  br label %dec_label_pc_45e58f, !insn.addr !8442

dec_label_pc_45e58f:                              ; preds = %dec_label_pc_45e578, %dec_label_pc_45e511, %dec_label_pc_45e58a, %dec_label_pc_45e583
  %3 = udiv i32 %abstract_control, 4, !insn.addr !8443
  %4 = and i32 %3, 1032192, !insn.addr !8444
  %5 = or i32 %4, %0, !insn.addr !8445
  %6 = and i32 %3, 4096, !insn.addr !8446
  %7 = and i32 %abstract_control, 12288, !insn.addr !8447
  %switch.selectcmp = icmp eq i32 %7, 4096
  %switch.select = select i1 %switch.selectcmp, i32 512, i32 0
  %switch.selectcmp1 = icmp eq i32 %7, 0
  %switch.select2 = select i1 %switch.selectcmp1, i32 768, i32 %switch.select
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %8 = udiv i32 %4, 2048
  %9 = and i32 %8, 16, !insn.addr !8448
  %10 = udiv i32 %4, 8192
  %11 = and i32 %10, 8, !insn.addr !8449
  %12 = udiv i32 %5, 262144
  %13 = and i32 %12, 2, !insn.addr !8450
  %14 = udiv i32 %abstract_control, 131072
  %15 = and i32 %14, 4, !insn.addr !8451
  %16 = and i32 %12, 1, !insn.addr !8452
  %17 = udiv i32 %4, 512, !insn.addr !8453
  %18 = and i32 %17, 32, !insn.addr !8454
  %19 = or i32 %6, %15, !insn.addr !8455
  %20 = or i32 %19, %11, !insn.addr !8456
  %21 = or i32 %20, %9, !insn.addr !8457
  %22 = or i32 %21, %18, !insn.addr !8458
  %23 = or i32 %22, %switch.select2, !insn.addr !8459
  %24 = or i32 %23, %13, !insn.addr !8460
  %25 = or i32 %24, %16, !insn.addr !8461
  %26 = or i32 %25, %edi.0.reload, !insn.addr !8462
  ret i32 %26, !insn.addr !8463
}

define i32 @__acrt_fenv_get_control() local_unnamed_addr {
dec_label_pc_45e76e:
  %storemerge.reg2mem = alloca i32, !insn.addr !8464
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i224, align 8
  %1 = bitcast i224* %stack_var_-36 to i8*, !insn.addr !8465
  call void @__asm_rep_stosd_memset(i8* nonnull %1, i32 0, i32 7), !insn.addr !8465
  %2 = call i32 @__asm_fnstenv(), !insn.addr !8466
  %3 = sext i32 %2 to i224, !insn.addr !8466
  store i224 %3, i224* %stack_var_-36, align 8, !insn.addr !8466
  call void @__asm_fldenv(i224 %3), !insn.addr !8467
  %4 = load i224, i224* %stack_var_-36, align 8, !insn.addr !8468
  %5 = trunc i224 %4 to i32, !insn.addr !8468
  %6 = and i32 %5, 7999, !insn.addr !8469
  %7 = call i32 @to_abstract_control_2(i32 %6), !insn.addr !8470
  %8 = load i32, i32* @__isa_available, align 4, !insn.addr !8471
  %9 = icmp sgt i32 %8, 0, !insn.addr !8472
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8472
  br i1 %9, label %dec_label_pc_45e7a6, label %dec_label_pc_45e7b3, !insn.addr !8472

dec_label_pc_45e7a6:                              ; preds = %dec_label_pc_45e76e
  call void @__asm_stmxcsr(i32 %0), !insn.addr !8473
  %10 = and i32 %0, 65472, !insn.addr !8474
  store i32 %10, i32* %storemerge.reg2mem, !insn.addr !8474
  br label %dec_label_pc_45e7b3, !insn.addr !8474

dec_label_pc_45e7b3:                              ; preds = %dec_label_pc_45e76e, %dec_label_pc_45e7a6
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %11 = call i32 @to_abstract_control_1(i32 %storemerge.reload), !insn.addr !8475
  %12 = and i32 %11, 16776960, !insn.addr !8476
  %13 = mul i32 %11, 4, !insn.addr !8477
  %14 = and i32 %13, 252, !insn.addr !8478
  %15 = or i32 %14, %12, !insn.addr !8479
  %16 = mul i32 %15, 64, !insn.addr !8480
  %17 = and i32 %7, 63, !insn.addr !8481
  %18 = or i32 %16, %17, !insn.addr !8482
  %19 = mul i32 %18, 4, !insn.addr !8483
  %20 = and i32 %7, 768, !insn.addr !8484
  %21 = or i32 %19, %20, !insn.addr !8485
  %22 = mul i32 %21, 16384, !insn.addr !8486
  %23 = or i32 %11, %7, !insn.addr !8487
  %24 = or i32 %23, %22, !insn.addr !8488
  ret i32 %24, !insn.addr !8489
}

define i32 @__acrt_fenv_get_status() local_unnamed_addr {
dec_label_pc_45e82e:
  %storemerge.reg2mem = alloca i32, !insn.addr !8490
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = load i32, i32* @__isa_available, align 4, !insn.addr !8491
  %3 = icmp sgt i32 %2, 0, !insn.addr !8492
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8492
  br i1 %3, label %dec_label_pc_45e890, label %dec_label_pc_45e89a, !insn.addr !8492

dec_label_pc_45e890:                              ; preds = %dec_label_pc_45e82e
  call void @__asm_stmxcsr(i32 %0), !insn.addr !8493
  %4 = and i32 %0, 63, !insn.addr !8494
  store i32 %4, i32* %storemerge.reg2mem, !insn.addr !8494
  br label %dec_label_pc_45e89a, !insn.addr !8494

dec_label_pc_45e89a:                              ; preds = %dec_label_pc_45e82e, %dec_label_pc_45e890
  %5 = mul i32 %1, 2
  %6 = and i32 %5, 8, !insn.addr !8495
  %7 = mul i32 %1, 16
  %8 = and i32 %7, 32, !insn.addr !8496
  %9 = or i32 %8, %6, !insn.addr !8497
  %10 = udiv i32 %1, 2
  %11 = and i32 %10, 4, !insn.addr !8498
  %12 = or i32 %9, %11, !insn.addr !8499
  %13 = udiv i32 %1, 8
  %14 = and i32 %13, 2, !insn.addr !8500
  %15 = or i32 %12, %14, !insn.addr !8501
  %16 = udiv i32 %1, 32, !insn.addr !8502
  %17 = and i32 %16, 1, !insn.addr !8503
  %18 = and i32 %7, 16, !insn.addr !8504
  %19 = or i32 %15, %18, !insn.addr !8505
  %20 = or i32 %19, %17, !insn.addr !8506
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %21 = mul i32 %storemerge.reload, 2
  %22 = and i32 %21, 8, !insn.addr !8507
  %23 = mul i32 %storemerge.reload, 16
  %24 = and i32 %23, 32, !insn.addr !8508
  %25 = udiv i32 %storemerge.reload, 2
  %26 = and i32 %25, 4, !insn.addr !8509
  %27 = udiv i32 %storemerge.reload, 8
  %28 = and i32 %27, 2, !insn.addr !8510
  %29 = udiv i32 %storemerge.reload, 32, !insn.addr !8511
  %30 = and i32 %23, 16, !insn.addr !8512
  %31 = or i32 %22, %29, !insn.addr !8513
  %32 = or i32 %31, %24, !insn.addr !8514
  %33 = or i32 %32, %26, !insn.addr !8515
  %34 = or i32 %33, %28, !insn.addr !8516
  %35 = or i32 %34, %30, !insn.addr !8517
  %36 = mul i32 %35, 256, !insn.addr !8518
  %37 = or i32 %36, %20, !insn.addr !8519
  %38 = mul i32 %37, 65536, !insn.addr !8520
  %39 = or i32 %35, %20, !insn.addr !8521
  %40 = or i32 %39, %38, !insn.addr !8522
  ret i32 %40, !insn.addr !8523
}

define void @__acrt_fenv_set_control(i32 %abstract_control) local_unnamed_addr {
dec_label_pc_45e914:
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i224, align 8
  %1 = call i32 @to_machine_x87_control(i32 %abstract_control), !insn.addr !8524
  %2 = bitcast i224* %stack_var_-36 to i8*, !insn.addr !8525
  call void @__asm_rep_stosd_memset(i8* nonnull %2, i32 0, i32 7), !insn.addr !8525
  %3 = call i32 @__asm_fnstenv(), !insn.addr !8526
  %4 = and i32 %1, 7999
  %5 = and i32 %3, -8000
  %6 = or i32 %5, %4, !insn.addr !8527
  %7 = sext i32 %6 to i224, !insn.addr !8528
  store i224 %7, i224* %stack_var_-36, align 8, !insn.addr !8528
  call void @__asm_fldenv(i224 %7), !insn.addr !8529
  %8 = call i32 @to_machine_sse_control(i32 %abstract_control), !insn.addr !8530
  %9 = load i32, i32* @__isa_available, align 4, !insn.addr !8531
  %10 = icmp slt i32 %9, 1, !insn.addr !8532
  br i1 %10, label %dec_label_pc_45e97a, label %dec_label_pc_45e95f, !insn.addr !8532

dec_label_pc_45e95f:                              ; preds = %dec_label_pc_45e914
  call void @__asm_stmxcsr(i32 %0), !insn.addr !8533
  %11 = and i32 %8, 65472, !insn.addr !8534
  %12 = and i32 %0, -65473, !insn.addr !8535
  %13 = or i32 %11, %12, !insn.addr !8536
  call void @__asm_ldmxcsr(i32 %13), !insn.addr !8537
  br label %dec_label_pc_45e97a, !insn.addr !8537

dec_label_pc_45e97a:                              ; preds = %dec_label_pc_45e95f, %dec_label_pc_45e914
  ret void, !insn.addr !8538
}

define void @__acrt_fenv_set_status(i32 %abstract_status) local_unnamed_addr {
dec_label_pc_45e996:
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i224, align 8
  %1 = bitcast i224* %stack_var_-36 to i8*, !insn.addr !8539
  call void @__asm_rep_stosd_memset(i8* nonnull %1, i32 0, i32 7), !insn.addr !8539
  %2 = call i32 @__asm_fnstenv(), !insn.addr !8540
  %3 = sext i32 %2 to i224, !insn.addr !8540
  store i224 %3, i224* %stack_var_-36, align 8, !insn.addr !8540
  call void @__asm_fldenv(i224 %3), !insn.addr !8541
  %4 = load i32, i32* @__isa_available, align 4, !insn.addr !8542
  %5 = icmp slt i32 %4, 1, !insn.addr !8543
  br i1 %5, label %dec_label_pc_45ea8b, label %dec_label_pc_45ea75, !insn.addr !8543

dec_label_pc_45ea75:                              ; preds = %dec_label_pc_45e996
  %6 = udiv i32 %abstract_status, 268435456, !insn.addr !8544
  %7 = udiv i32 %abstract_status, 524288
  %8 = and i32 %7, 32, !insn.addr !8545
  %9 = udiv i32 %abstract_status, 2097152
  %10 = and i32 %9, 16, !insn.addr !8546
  %11 = or i32 %8, %10, !insn.addr !8547
  %12 = udiv i32 %abstract_status, 8388608
  %13 = and i32 %12, 8, !insn.addr !8548
  %14 = or i32 %11, %13, !insn.addr !8549
  %15 = udiv i32 %abstract_status, 33554432
  %16 = and i32 %15, 4, !insn.addr !8550
  %17 = or i32 %14, %16, !insn.addr !8551
  %18 = and i32 %6, 1, !insn.addr !8552
  %19 = or i32 %17, %18, !insn.addr !8553
  %20 = and i32 %6, 2, !insn.addr !8554
  call void @__asm_stmxcsr(i32 %0), !insn.addr !8555
  %21 = or i32 %19, %20, !insn.addr !8556
  %22 = and i32 %0, -64, !insn.addr !8557
  %23 = or i32 %21, %22, !insn.addr !8558
  call void @__asm_ldmxcsr(i32 %23), !insn.addr !8559
  br label %dec_label_pc_45ea8b, !insn.addr !8559

dec_label_pc_45ea8b:                              ; preds = %dec_label_pc_45ea75, %dec_label_pc_45e996
  ret void, !insn.addr !8560
}

declare i32 @_strnicmp(i8*, i8*, i32) local_unnamed_addr

define i32 @_strnicmp_l(i8* %lhs, i8* %rhs, i32 %count, i32 %plocinfo) local_unnamed_addr {
dec_label_pc_45ed9d:
  %eax.2.reg2mem = alloca i32, !insn.addr !8561
  %edi.0.reg2mem = alloca i32, !insn.addr !8561
  %esi.0.reg2mem = alloca i32, !insn.addr !8561
  %ebx.0.reg2mem = alloca i32, !insn.addr !8561
  %0 = call i8 @__decompiler_undefined_function_8()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = icmp eq i8* %lhs, null, !insn.addr !8562
  %4 = icmp eq i1 %3, false, !insn.addr !8563
  br i1 %4, label %dec_label_pc_45edc7, label %dec_label_pc_45edad, !insn.addr !8563

dec_label_pc_45edad:                              ; preds = %dec_label_pc_45ed9d
  %5 = call i32* @_errno(), !insn.addr !8564
  store i32 22, i32* %5, align 4, !insn.addr !8565
  call void @_invalid_parameter_noinfo(), !insn.addr !8566
  store i32 2147483647, i32* %eax.2.reg2mem, !insn.addr !8567
  br label %dec_label_pc_45ee63, !insn.addr !8567

dec_label_pc_45edc7:                              ; preds = %dec_label_pc_45ed9d
  %6 = icmp eq i8* %rhs, null, !insn.addr !8568
  %7 = icmp eq i1 %6, false, !insn.addr !8569
  br i1 %7, label %dec_label_pc_45ede6, label %dec_label_pc_45edcf, !insn.addr !8569

dec_label_pc_45edcf:                              ; preds = %dec_label_pc_45edc7
  %8 = call i32* @_errno(), !insn.addr !8570
  store i32 22, i32* %8, align 4, !insn.addr !8571
  call void @_invalid_parameter_noinfo(), !insn.addr !8572
  store i32 2147483647, i32* %eax.2.reg2mem, !insn.addr !8573
  br label %dec_label_pc_45ee63, !insn.addr !8573

dec_label_pc_45ede6:                              ; preds = %dec_label_pc_45edc7
  %9 = icmp sgt i32 %count, -1
  br i1 %9, label %dec_label_pc_45ee09, label %dec_label_pc_45edf2, !insn.addr !8574

dec_label_pc_45edf2:                              ; preds = %dec_label_pc_45ede6
  %10 = call i32* @_errno(), !insn.addr !8575
  store i32 22, i32* %10, align 4, !insn.addr !8576
  call void @_invalid_parameter_noinfo(), !insn.addr !8577
  store i32 2147483647, i32* %eax.2.reg2mem, !insn.addr !8578
  br label %dec_label_pc_45ee63, !insn.addr !8578

dec_label_pc_45ee09:                              ; preds = %dec_label_pc_45ede6
  %11 = icmp eq i32 %count, 0, !insn.addr !8579
  %12 = icmp eq i1 %11, false, !insn.addr !8580
  store i32 0, i32* %eax.2.reg2mem, !insn.addr !8580
  br i1 %12, label %dec_label_pc_45ee11, label %dec_label_pc_45ee63, !insn.addr !8580

dec_label_pc_45ee11:                              ; preds = %dec_label_pc_45ee09
  %13 = ptrtoint i8* %lhs to i32
  %14 = ptrtoint i8* %rhs to i32, !insn.addr !8581
  %15 = call i32 @function_403d91(i32 %plocinfo), !insn.addr !8582
  %16 = add i32 %1, 148, !insn.addr !8583
  %17 = inttoptr i32 %16 to i32*, !insn.addr !8583
  %18 = load i32, i32* %17, align 4, !insn.addr !8583
  store i32 %14, i32* %ebx.0.reg2mem, !insn.addr !8584
  store i32 %count, i32* %esi.0.reg2mem, !insn.addr !8584
  store i32 %13, i32* %edi.0.reg2mem, !insn.addr !8584
  br label %dec_label_pc_45ee28, !insn.addr !8584

dec_label_pc_45ee28:                              ; preds = %dec_label_pc_45ee47, %dec_label_pc_45ee11
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %19 = inttoptr i32 %edi.0.reload to i8*, !insn.addr !8585
  %20 = load i8, i8* %19, align 1, !insn.addr !8585
  %21 = zext i8 %20 to i32, !insn.addr !8585
  %22 = add i32 %18, %21, !insn.addr !8586
  %23 = inttoptr i32 %22 to i8*, !insn.addr !8586
  %24 = load i8, i8* %23, align 1, !insn.addr !8586
  %25 = zext i8 %24 to i32, !insn.addr !8586
  %26 = inttoptr i32 %ebx.0.reload to i8*, !insn.addr !8587
  %27 = load i8, i8* %26, align 1, !insn.addr !8587
  %28 = zext i8 %27 to i32, !insn.addr !8587
  %29 = add i32 %18, %28, !insn.addr !8588
  %30 = inttoptr i32 %29 to i8*, !insn.addr !8588
  %31 = load i8, i8* %30, align 1, !insn.addr !8588
  %32 = zext i8 %31 to i32, !insn.addr !8588
  %33 = sub nsw i32 %25, %32, !insn.addr !8589
  %34 = icmp eq i32 %33, 0, !insn.addr !8589
  %35 = icmp eq i1 %34, false, !insn.addr !8590
  %36 = icmp eq i8 %24, 0, !insn.addr !8591
  %or.cond = or i1 %36, %35
  br i1 %or.cond, label %dec_label_pc_45ee4f, label %dec_label_pc_45ee47, !insn.addr !8590

dec_label_pc_45ee47:                              ; preds = %dec_label_pc_45ee28
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %37 = add i32 %ebx.0.reload, 1, !insn.addr !8592
  %38 = add i32 %edi.0.reload, 1, !insn.addr !8593
  %39 = add i32 %esi.0.reload, -1, !insn.addr !8594
  %40 = icmp eq i32 %39, 0, !insn.addr !8594
  %41 = icmp eq i1 %40, false, !insn.addr !8595
  store i32 %37, i32* %ebx.0.reg2mem, !insn.addr !8595
  store i32 %39, i32* %esi.0.reg2mem, !insn.addr !8595
  store i32 %38, i32* %edi.0.reg2mem, !insn.addr !8595
  br i1 %41, label %dec_label_pc_45ee28, label %dec_label_pc_45ee4f, !insn.addr !8595

dec_label_pc_45ee4f:                              ; preds = %dec_label_pc_45ee47, %dec_label_pc_45ee28
  %42 = icmp eq i8 %0, 0, !insn.addr !8596
  store i32 %33, i32* %eax.2.reg2mem, !insn.addr !8597
  br i1 %42, label %dec_label_pc_45ee63, label %dec_label_pc_45ee55, !insn.addr !8597

dec_label_pc_45ee55:                              ; preds = %dec_label_pc_45ee4f
  %43 = add i32 %2, 848, !insn.addr !8598
  %44 = inttoptr i32 %43 to i32*, !insn.addr !8598
  %45 = load i32, i32* %44, align 4, !insn.addr !8598
  %46 = and i32 %45, -3, !insn.addr !8598
  store i32 %46, i32* %44, align 4, !insn.addr !8598
  store i32 %33, i32* %eax.2.reg2mem, !insn.addr !8598
  br label %dec_label_pc_45ee63, !insn.addr !8598

dec_label_pc_45ee63:                              ; preds = %dec_label_pc_45edcf, %dec_label_pc_45ee4f, %dec_label_pc_45ee55, %dec_label_pc_45ee09, %dec_label_pc_45edf2, %dec_label_pc_45edad
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  ret i32 %eax.2.reload, !insn.addr !8599
}

define i32 @InternalCompareStringA(i32 %plocinfo, i16* %LocaleName, i32 %dwCmpFlags, i8* %lpString1, i32 %cchCount1, i8* %lpString2, i32 %cchCount2, i32 %code_page) local_unnamed_addr {
dec_label_pc_4601cd:
  %esp.12.reg2mem = alloca i32, !insn.addr !8600
  %ebx.2.reg2mem = alloca i32, !insn.addr !8600
  %.pre-phi15.reg2mem = alloca i32*, !insn.addr !8600
  %esi.3.reg2mem = alloca i32, !insn.addr !8600
  %.pre-phi18.reg2mem = alloca i32*, !insn.addr !8600
  %esi.1.reg2mem = alloca i32, !insn.addr !8600
  %eax.4.reg2mem = alloca i32, !insn.addr !8600
  %esp.3.reg2mem = alloca i32, !insn.addr !8600
  %eax.3.reg2mem = alloca i32, !insn.addr !8600
  %esp.2.reg2mem = alloca i32, !insn.addr !8600
  %eax.2.reg2mem = alloca i32, !insn.addr !8600
  %stack_var_32.0.reg2mem = alloca i32, !insn.addr !8600
  %ebx.0.reg2mem = alloca i32, !insn.addr !8600
  %esi.0.reg2mem = alloca i32, !insn.addr !8600
  %stack_var_-22 = alloca i8, align 1
  %cpInfo_-28 = alloca %_cpinfo.655, align 8
  %stack_var_-68 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %0 = icmp slt i32 %cchCount1, 1
  br i1 %0, label %dec_label_pc_460211, label %dec_label_pc_460201, !insn.addr !8601

dec_label_pc_460201:                              ; preds = %dec_label_pc_4601cd
  store i8* %lpString1, i8** %stack_var_-68, align 4, !insn.addr !8602
  %1 = call i32 @__strncnt(i8* %lpString1, i32 %cchCount1), !insn.addr !8603
  store i32 %1, i32* %esi.0.reg2mem, !insn.addr !8604
  br label %dec_label_pc_46021a, !insn.addr !8604

dec_label_pc_460211:                              ; preds = %dec_label_pc_4601cd
  %2 = icmp slt i32 %cchCount1, -1, !insn.addr !8605
  store i32 %cchCount1, i32* %esi.0.reg2mem, !insn.addr !8605
  br i1 %2, label %dec_label_pc_460446, label %dec_label_pc_46021a, !insn.addr !8605

dec_label_pc_46021a:                              ; preds = %dec_label_pc_460211, %dec_label_pc_460201
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %3 = icmp slt i32 %cchCount2, 1
  br i1 %3, label %dec_label_pc_46022e, label %dec_label_pc_460221, !insn.addr !8606

dec_label_pc_460221:                              ; preds = %dec_label_pc_46021a
  store i8* %lpString2, i8** %stack_var_-68, align 4, !insn.addr !8607
  %4 = call i32 @__strncnt(i8* %lpString2, i32 %cchCount2), !insn.addr !8608
  store i32 %4, i32* %ebx.0.reg2mem, !insn.addr !8609
  br label %dec_label_pc_460237, !insn.addr !8609

dec_label_pc_46022e:                              ; preds = %dec_label_pc_46021a
  %5 = icmp slt i32 %cchCount2, -1, !insn.addr !8610
  store i32 %cchCount2, i32* %ebx.0.reg2mem, !insn.addr !8610
  br i1 %5, label %dec_label_pc_460446, label %dec_label_pc_460237, !insn.addr !8610

dec_label_pc_460237:                              ; preds = %dec_label_pc_46022e, %dec_label_pc_460221
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %6 = icmp eq i32 %code_page, 0, !insn.addr !8611
  %7 = icmp eq i1 %6, false, !insn.addr !8612
  store i32 %code_page, i32* %stack_var_32.0.reg2mem, !insn.addr !8612
  br i1 %7, label %dec_label_pc_460249, label %dec_label_pc_46023e, !insn.addr !8612

dec_label_pc_46023e:                              ; preds = %dec_label_pc_460237
  %8 = inttoptr i32 %plocinfo to i32*, !insn.addr !8613
  %9 = load i32, i32* %8, align 4, !insn.addr !8613
  %10 = add i32 %9, 8, !insn.addr !8614
  %11 = inttoptr i32 %10 to i32*, !insn.addr !8614
  %12 = load i32, i32* %11, align 4, !insn.addr !8614
  store i32 %12, i32* %stack_var_32.0.reg2mem, !insn.addr !8615
  br label %dec_label_pc_460249, !insn.addr !8615

dec_label_pc_460249:                              ; preds = %dec_label_pc_46023e, %dec_label_pc_460237
  %13 = ptrtoint i32* %stack_var_-60 to i32, !insn.addr !8616
  %stack_var_32.0.reload = load i32, i32* %stack_var_32.0.reg2mem
  %14 = icmp ne i32 %esi.0.reload, 0, !insn.addr !8617
  %15 = icmp eq i32 %ebx.0.reload, 0, !insn.addr !8618
  %16 = icmp eq i1 %15, false, !insn.addr !8619
  %or.cond = icmp eq i1 %14, %16
  store i32 %13, i32* %esp.3.reg2mem, !insn.addr !8620
  br i1 %or.cond, label %dec_label_pc_4602f1, label %dec_label_pc_460255, !insn.addr !8620

dec_label_pc_460255:                              ; preds = %dec_label_pc_460249
  %17 = icmp eq i32 %esi.0.reload, %ebx.0.reload, !insn.addr !8621
  store i32 %13, i32* %esp.12.reg2mem, !insn.addr !8622
  br i1 %17, label %dec_label_pc_46043d, label %dec_label_pc_46025d, !insn.addr !8622

dec_label_pc_46025d:                              ; preds = %dec_label_pc_460255
  %18 = icmp sgt i32 %ebx.0.reload, 1, !insn.addr !8623
  br i1 %18, label %dec_label_pc_460446, label %dec_label_pc_460266, !insn.addr !8623

dec_label_pc_460266:                              ; preds = %dec_label_pc_46025d
  %19 = icmp sgt i32 %esi.0.reload, 1, !insn.addr !8624
  store i32 %13, i32* %esp.2.reg2mem, !insn.addr !8624
  br i1 %19, label %dec_label_pc_4602ae, label %dec_label_pc_46026b, !insn.addr !8624

dec_label_pc_46026b:                              ; preds = %dec_label_pc_460266
  %20 = inttoptr i32 %stack_var_32.0.reload to i8*, !insn.addr !8625
  store i8* %20, i8** %stack_var_-68, align 4, !insn.addr !8625
  %21 = bitcast %_cpinfo.655* %cpInfo_-28 to %_cpinfo*, !insn.addr !8626
  %22 = call i1 @GetCPInfo(i32 %stack_var_32.0.reload, %_cpinfo* nonnull %21), !insn.addr !8626
  %23 = icmp eq i1 %22, false, !insn.addr !8627
  br i1 %23, label %dec_label_pc_460446, label %dec_label_pc_46027e, !insn.addr !8628

dec_label_pc_46027e:                              ; preds = %dec_label_pc_46026b
  %24 = ptrtoint i8** %stack_var_-68 to i32, !insn.addr !8625
  %25 = icmp slt i32 %esi.0.reload, 1
  br i1 %25, label %dec_label_pc_4602b6, label %dec_label_pc_460282, !insn.addr !8629

dec_label_pc_460282:                              ; preds = %dec_label_pc_46027e
  %26 = getelementptr inbounds %_cpinfo.655, %_cpinfo.655* %cpInfo_-28, i32 0, i32 0, !insn.addr !8630
  %27 = load i32, i32* %26, align 8, !insn.addr !8630
  %28 = icmp ult i32 %27, 2, !insn.addr !8630
  %29 = load i8, i8* %stack_var_-22, align 1, !insn.addr !8631
  %30 = icmp eq i8 %29, 0, !insn.addr !8631
  %or.cond20 = or i1 %28, %30
  store i32 %24, i32* %esp.2.reg2mem, !insn.addr !8632
  br i1 %or.cond20, label %dec_label_pc_4602ae, label %dec_label_pc_460291.preheader, !insn.addr !8632

dec_label_pc_460291.preheader:                    ; preds = %dec_label_pc_460282
  %31 = ptrtoint i8* %stack_var_-22 to i32, !insn.addr !8633
  store i32 %31, i32* %eax.2.reg2mem
  br label %dec_label_pc_460291

dec_label_pc_460291:                              ; preds = %dec_label_pc_460291.preheader, %dec_label_pc_4602a6
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  %32 = add i32 %eax.2.reload, 1, !insn.addr !8634
  %33 = inttoptr i32 %32 to i8*, !insn.addr !8634
  %34 = load i8, i8* %33, align 1, !insn.addr !8634
  %35 = icmp eq i8 %34, 0, !insn.addr !8635
  store i32 %24, i32* %esp.2.reg2mem, !insn.addr !8636
  br i1 %35, label %dec_label_pc_4602ae, label %dec_label_pc_460298, !insn.addr !8636

dec_label_pc_460298:                              ; preds = %dec_label_pc_460291
  %36 = load i8, i8* %lpString1, align 1, !insn.addr !8637
  %37 = inttoptr i32 %eax.2.reload to i8*, !insn.addr !8638
  %38 = load i8, i8* %37, align 1, !insn.addr !8638
  %39 = icmp ult i8 %36, %38, !insn.addr !8638
  %40 = icmp ugt i8 %36, %34
  %or.cond9 = or i1 %40, %39
  store i32 %24, i32* %esp.12.reg2mem, !insn.addr !8639
  br i1 %or.cond9, label %dec_label_pc_4602a6, label %dec_label_pc_46043d, !insn.addr !8639

dec_label_pc_4602a6:                              ; preds = %dec_label_pc_460298
  %41 = add i32 %eax.2.reload, 2, !insn.addr !8640
  %42 = inttoptr i32 %41 to i8*, !insn.addr !8641
  %43 = load i8, i8* %42, align 1, !insn.addr !8641
  %44 = icmp eq i8 %43, 0, !insn.addr !8641
  %45 = icmp eq i1 %44, false, !insn.addr !8642
  store i32 %41, i32* %eax.2.reg2mem, !insn.addr !8642
  store i32 %24, i32* %esp.2.reg2mem, !insn.addr !8642
  br i1 %45, label %dec_label_pc_460291, label %dec_label_pc_4602ae, !insn.addr !8642

dec_label_pc_4602ae:                              ; preds = %dec_label_pc_4602a6, %dec_label_pc_460291, %dec_label_pc_460282, %dec_label_pc_460266
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %46 = add i32 %esp.2.reload, -4, !insn.addr !8643
  %47 = inttoptr i32 %46 to i32*, !insn.addr !8643
  store i32 3, i32* %47, align 4, !insn.addr !8643
  br label %dec_label_pc_460446, !insn.addr !8643

dec_label_pc_4602b6:                              ; preds = %dec_label_pc_46027e
  %48 = icmp slt i32 %ebx.0.reload, 1
  store i32 %24, i32* %esp.3.reg2mem, !insn.addr !8644
  br i1 %48, label %dec_label_pc_4602f1, label %dec_label_pc_4602ba, !insn.addr !8644

dec_label_pc_4602ba:                              ; preds = %dec_label_pc_4602b6
  %49 = getelementptr inbounds %_cpinfo.655, %_cpinfo.655* %cpInfo_-28, i32 0, i32 0, !insn.addr !8645
  %50 = load i32, i32* %49, align 8, !insn.addr !8645
  %51 = icmp ult i32 %50, 2, !insn.addr !8645
  %52 = load i8, i8* %stack_var_-22, align 1, !insn.addr !8646
  %53 = icmp eq i8 %52, 0, !insn.addr !8646
  %or.cond11 = or i1 %51, %53
  br i1 %or.cond11, label %dec_label_pc_460446, label %dec_label_pc_4602c9, !insn.addr !8647

dec_label_pc_4602c9:                              ; preds = %dec_label_pc_4602ba
  %54 = ptrtoint i8* %stack_var_-22 to i32, !insn.addr !8648
  store i32 %54, i32* %eax.3.reg2mem, !insn.addr !8649
  br label %dec_label_pc_4602cc, !insn.addr !8649

dec_label_pc_4602cc:                              ; preds = %dec_label_pc_4602e1, %dec_label_pc_4602c9
  %eax.3.reload = load i32, i32* %eax.3.reg2mem
  %55 = add i32 %eax.3.reload, 1, !insn.addr !8650
  %56 = inttoptr i32 %55 to i8*, !insn.addr !8650
  %57 = load i8, i8* %56, align 1, !insn.addr !8650
  %58 = icmp eq i8 %57, 0, !insn.addr !8651
  br i1 %58, label %dec_label_pc_460446, label %dec_label_pc_4602d3, !insn.addr !8652

dec_label_pc_4602d3:                              ; preds = %dec_label_pc_4602cc
  %59 = load i8, i8* %lpString2, align 1, !insn.addr !8653
  %60 = inttoptr i32 %eax.3.reload to i8*, !insn.addr !8654
  %61 = load i8, i8* %60, align 1, !insn.addr !8654
  %62 = icmp ult i8 %59, %61, !insn.addr !8654
  %63 = icmp ugt i8 %59, %57
  %or.cond12 = or i1 %63, %62
  store i32 %24, i32* %esp.12.reg2mem, !insn.addr !8655
  br i1 %or.cond12, label %dec_label_pc_4602e1, label %dec_label_pc_46043d, !insn.addr !8655

dec_label_pc_4602e1:                              ; preds = %dec_label_pc_4602d3
  %64 = add i32 %eax.3.reload, 2, !insn.addr !8656
  %65 = inttoptr i32 %64 to i8*, !insn.addr !8657
  %66 = load i8, i8* %65, align 1, !insn.addr !8657
  %67 = icmp eq i8 %66, 0, !insn.addr !8657
  %68 = icmp eq i1 %67, false, !insn.addr !8658
  store i32 %64, i32* %eax.3.reg2mem, !insn.addr !8658
  br i1 %68, label %dec_label_pc_4602cc, label %dec_label_pc_460446, !insn.addr !8658

dec_label_pc_4602f1:                              ; preds = %dec_label_pc_460249, %dec_label_pc_4602b6
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %69 = add i32 %esp.3.reload, -4
  %70 = inttoptr i32 %69 to i32*
  store i32 0, i32* %70, align 4, !insn.addr !8659
  %71 = add i32 %esp.3.reload, -8, !insn.addr !8660
  %72 = inttoptr i32 %71 to i32*, !insn.addr !8660
  store i32 0, i32* %72, align 4, !insn.addr !8660
  %73 = add i32 %esp.3.reload, -12, !insn.addr !8661
  %74 = inttoptr i32 %73 to i32*, !insn.addr !8661
  store i32 %esi.0.reload, i32* %74, align 4, !insn.addr !8661
  %75 = ptrtoint i8* %lpString1 to i32, !insn.addr !8662
  %76 = add i32 %esp.3.reload, -16, !insn.addr !8662
  %77 = inttoptr i32 %76 to i32*, !insn.addr !8662
  store i32 %75, i32* %77, align 4, !insn.addr !8662
  %78 = add i32 %esp.3.reload, -20, !insn.addr !8663
  %79 = inttoptr i32 %78 to i32*, !insn.addr !8663
  store i32 9, i32* %79, align 4, !insn.addr !8663
  %80 = add i32 %esp.3.reload, -24, !insn.addr !8664
  %81 = inttoptr i32 %80 to i32*, !insn.addr !8664
  store i32 %stack_var_32.0.reload, i32* %81, align 4, !insn.addr !8664
  %82 = call i32 @function_401712(), !insn.addr !8665
  %83 = icmp eq i32 %82, 0, !insn.addr !8666
  br i1 %83, label %dec_label_pc_460446, label %dec_label_pc_460311, !insn.addr !8667

dec_label_pc_460311:                              ; preds = %dec_label_pc_4602f1
  %84 = mul i32 %82, 2, !insn.addr !8668
  %85 = add i32 %84, 8, !insn.addr !8669
  %86 = icmp ugt i32 %84, -9, !insn.addr !8670
  %87 = icmp eq i32 %85, 0
  %88 = or i1 %86, %87, !insn.addr !8671
  store i32* %70, i32** %.pre-phi15.reg2mem, !insn.addr !8672
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !8672
  br i1 %88, label %dec_label_pc_460432, label %dec_label_pc_46031f, !insn.addr !8672

dec_label_pc_46031f:                              ; preds = %dec_label_pc_460311
  %89 = icmp ult i32 %85, 1025
  br i1 %89, label %dec_label_pc_460326, label %dec_label_pc_460340, !insn.addr !8673

dec_label_pc_460326:                              ; preds = %dec_label_pc_46031f
  call void @_alloca_probe_16(), !insn.addr !8674
  %90 = inttoptr i32 %esp.3.reload to i32*, !insn.addr !8675
  store i32 52428, i32* %90, align 4, !insn.addr !8675
  store i32 %esp.3.reload, i32* %eax.4.reg2mem, !insn.addr !8676
  br label %dec_label_pc_460365, !insn.addr !8676

dec_label_pc_460340:                              ; preds = %dec_label_pc_46031f
  store i32 %85, i32* %70, align 4, !insn.addr !8677
  %91 = call i32* @_malloc_base(i32 %82), !insn.addr !8678
  %92 = ptrtoint i32* %91 to i32, !insn.addr !8678
  %93 = icmp eq i32* %91, null, !insn.addr !8679
  store i32* %70, i32** %.pre-phi15.reg2mem, !insn.addr !8680
  store i32 %92, i32* %ebx.2.reg2mem, !insn.addr !8680
  br i1 %93, label %dec_label_pc_460432, label %dec_label_pc_460352, !insn.addr !8680

dec_label_pc_460352:                              ; preds = %dec_label_pc_460340
  store i32 56797, i32* %91, align 4, !insn.addr !8681
  store i32 %92, i32* %eax.4.reg2mem, !insn.addr !8681
  br label %dec_label_pc_460365, !insn.addr !8681

dec_label_pc_460365:                              ; preds = %dec_label_pc_460326, %dec_label_pc_460352
  %eax.4.reload = load i32, i32* %eax.4.reg2mem
  %94 = add i32 %eax.4.reload, 8, !insn.addr !8682
  %95 = icmp eq i32 %94, 0, !insn.addr !8683
  store i32* %70, i32** %.pre-phi15.reg2mem, !insn.addr !8684
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !8684
  br i1 %95, label %dec_label_pc_460432, label %dec_label_pc_46036d, !insn.addr !8684

dec_label_pc_46036d:                              ; preds = %dec_label_pc_460365
  store i32 %82, i32* %70, align 4, !insn.addr !8685
  store i32 %94, i32* %72, align 4, !insn.addr !8686
  store i32 %esi.0.reload, i32* %74, align 4, !insn.addr !8687
  store i32 %75, i32* %77, align 4, !insn.addr !8688
  store i32 1, i32* %79, align 4, !insn.addr !8689
  store i32 %stack_var_32.0.reload, i32* %81, align 4, !insn.addr !8690
  %96 = call i32 @function_401712(), !insn.addr !8691
  %97 = icmp eq i32 %96, 0, !insn.addr !8692
  store i32* %70, i32** %.pre-phi15.reg2mem, !insn.addr !8693
  store i32 %94, i32* %ebx.2.reg2mem, !insn.addr !8693
  br i1 %97, label %dec_label_pc_460432, label %dec_label_pc_46038b, !insn.addr !8693

dec_label_pc_46038b:                              ; preds = %dec_label_pc_46036d
  store i32 0, i32* %70, align 4, !insn.addr !8694
  store i32 0, i32* %72, align 4, !insn.addr !8695
  store i32 %ebx.0.reload, i32* %74, align 4, !insn.addr !8696
  %98 = ptrtoint i8* %lpString2 to i32, !insn.addr !8697
  store i32 %98, i32* %77, align 4, !insn.addr !8697
  store i32 9, i32* %79, align 4, !insn.addr !8698
  store i32 %stack_var_32.0.reload, i32* %81, align 4, !insn.addr !8699
  %99 = call i32 @function_401712(), !insn.addr !8700
  %100 = icmp eq i32 %99, 0, !insn.addr !8701
  store i32* %70, i32** %.pre-phi15.reg2mem, !insn.addr !8702
  store i32 %94, i32* %ebx.2.reg2mem, !insn.addr !8702
  br i1 %100, label %dec_label_pc_460432, label %dec_label_pc_4603a7, !insn.addr !8702

dec_label_pc_4603a7:                              ; preds = %dec_label_pc_46038b
  %101 = mul i32 %99, 2, !insn.addr !8703
  %102 = add i32 %101, 8, !insn.addr !8704
  %103 = icmp ugt i32 %101, -9, !insn.addr !8705
  %104 = icmp eq i32 %102, 0
  %105 = or i1 %103, %104, !insn.addr !8706
  store i32* %70, i32** %.pre-phi18.reg2mem, !insn.addr !8707
  store i32 0, i32* %esi.3.reg2mem, !insn.addr !8707
  br i1 %105, label %dec_label_pc_460426, label %dec_label_pc_4603b5, !insn.addr !8707

dec_label_pc_4603b5:                              ; preds = %dec_label_pc_4603a7
  %106 = icmp ult i32 %102, 1025
  br i1 %106, label %dec_label_pc_4603bc, label %dec_label_pc_4603cf, !insn.addr !8708

dec_label_pc_4603bc:                              ; preds = %dec_label_pc_4603b5
  call void @_alloca_probe_16(), !insn.addr !8709
  %107 = inttoptr i32 %esp.3.reload to i32*, !insn.addr !8710
  store i32 52428, i32* %107, align 4, !insn.addr !8710
  store i32 %esp.3.reload, i32* %esi.1.reg2mem, !insn.addr !8711
  br label %dec_label_pc_4603e9, !insn.addr !8711

dec_label_pc_4603cf:                              ; preds = %dec_label_pc_4603b5
  store i32 %102, i32* %70, align 4, !insn.addr !8712
  %108 = call i32* @_malloc_base(i32 %99), !insn.addr !8713
  %109 = ptrtoint i32* %108 to i32, !insn.addr !8713
  %110 = icmp eq i32* %108, null, !insn.addr !8714
  store i32* %70, i32** %.pre-phi18.reg2mem, !insn.addr !8715
  store i32 %109, i32* %esi.3.reg2mem, !insn.addr !8715
  br i1 %110, label %dec_label_pc_460426, label %dec_label_pc_4603dc, !insn.addr !8715

dec_label_pc_4603dc:                              ; preds = %dec_label_pc_4603cf
  store i32 56797, i32* %108, align 4, !insn.addr !8716
  store i32 %109, i32* %esi.1.reg2mem, !insn.addr !8716
  br label %dec_label_pc_4603e9, !insn.addr !8716

dec_label_pc_4603e9:                              ; preds = %dec_label_pc_4603bc, %dec_label_pc_4603dc
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %111 = add i32 %esi.1.reload, 8, !insn.addr !8717
  %112 = icmp eq i32 %111, 0, !insn.addr !8718
  store i32* %70, i32** %.pre-phi18.reg2mem, !insn.addr !8719
  store i32 0, i32* %esi.3.reg2mem, !insn.addr !8719
  br i1 %112, label %dec_label_pc_460426, label %dec_label_pc_4603ed, !insn.addr !8719

dec_label_pc_4603ed:                              ; preds = %dec_label_pc_4603e9
  store i32 %99, i32* %70, align 4, !insn.addr !8720
  store i32 %111, i32* %72, align 4, !insn.addr !8721
  store i32 %ebx.0.reload, i32* %74, align 4, !insn.addr !8722
  store i32 %98, i32* %77, align 4, !insn.addr !8723
  store i32 1, i32* %79, align 4, !insn.addr !8724
  store i32 %stack_var_32.0.reload, i32* %81, align 4, !insn.addr !8725
  %113 = call i32 @function_401712(), !insn.addr !8726
  %114 = icmp eq i32 %113, 0, !insn.addr !8727
  store i32* %70, i32** %.pre-phi18.reg2mem, !insn.addr !8728
  store i32 %111, i32* %esi.3.reg2mem, !insn.addr !8728
  br i1 %114, label %dec_label_pc_460426, label %dec_label_pc_460406, !insn.addr !8728

dec_label_pc_460406:                              ; preds = %dec_label_pc_4603ed
  store i32 0, i32* %70, align 4, !insn.addr !8729
  store i32 0, i32* %72, align 4, !insn.addr !8730
  store i32 0, i32* %74, align 4, !insn.addr !8731
  store i32 %99, i32* %77, align 4, !insn.addr !8732
  store i32 %111, i32* %79, align 4, !insn.addr !8733
  store i32 %82, i32* %81, align 4, !insn.addr !8734
  %115 = add i32 %esp.3.reload, -28, !insn.addr !8735
  %116 = inttoptr i32 %115 to i32*, !insn.addr !8735
  store i32 %94, i32* %116, align 4, !insn.addr !8735
  %117 = add i32 %esp.3.reload, -32, !insn.addr !8736
  %118 = inttoptr i32 %117 to i32*, !insn.addr !8736
  store i32 %dwCmpFlags, i32* %118, align 4, !insn.addr !8736
  %119 = ptrtoint i16* %LocaleName to i32, !insn.addr !8737
  %120 = add i32 %esp.3.reload, -36, !insn.addr !8737
  %121 = inttoptr i32 %120 to i32*, !insn.addr !8737
  store i32 %119, i32* %121, align 4, !insn.addr !8737
  %122 = call i32 @function_403242(), !insn.addr !8738
  %.pre = add i32 %esp.3.reload, -40
  %.pre17 = inttoptr i32 %.pre to i32*
  store i32* %.pre17, i32** %.pre-phi18.reg2mem, !insn.addr !8739
  store i32 %111, i32* %esi.3.reg2mem, !insn.addr !8739
  br label %dec_label_pc_460426, !insn.addr !8739

dec_label_pc_460426:                              ; preds = %dec_label_pc_4603a7, %dec_label_pc_4603cf, %dec_label_pc_4603e9, %dec_label_pc_4603ed, %dec_label_pc_460406
  %esi.3.reload = load i32, i32* %esi.3.reg2mem
  %.pre-phi18.reload = load i32*, i32** %.pre-phi18.reg2mem
  store i32 %esi.3.reload, i32* %.pre-phi18.reload, align 4, !insn.addr !8740
  %123 = call i32 @function_40125d(), !insn.addr !8741
  store i32* %.pre-phi18.reload, i32** %.pre-phi15.reg2mem, !insn.addr !8742
  store i32 %94, i32* %ebx.2.reg2mem, !insn.addr !8742
  br label %dec_label_pc_460432, !insn.addr !8742

dec_label_pc_460432:                              ; preds = %dec_label_pc_460311, %dec_label_pc_460340, %dec_label_pc_460365, %dec_label_pc_46036d, %dec_label_pc_46038b, %dec_label_pc_460426
  %ebx.2.reload = load i32, i32* %ebx.2.reg2mem
  %.pre-phi15.reload = load i32*, i32** %.pre-phi15.reg2mem
  store i32 %ebx.2.reload, i32* %.pre-phi15.reload, align 4, !insn.addr !8743
  %124 = call i32 @function_40125d(), !insn.addr !8744
  br label %dec_label_pc_460446, !insn.addr !8745

dec_label_pc_46043d:                              ; preds = %dec_label_pc_460298, %dec_label_pc_4602d3, %dec_label_pc_460255
  %esp.12.reload = load i32, i32* %esp.12.reg2mem
  %125 = add i32 %esp.12.reload, -4, !insn.addr !8746
  %126 = inttoptr i32 %125 to i32*, !insn.addr !8746
  store i32 2, i32* %126, align 4, !insn.addr !8746
  br label %dec_label_pc_460446, !insn.addr !8747

dec_label_pc_460446:                              ; preds = %dec_label_pc_4602cc, %dec_label_pc_4602e1, %dec_label_pc_4602ae, %dec_label_pc_46043d, %dec_label_pc_460211, %dec_label_pc_46022e, %dec_label_pc_46026b, %dec_label_pc_4602f1, %dec_label_pc_46025d, %dec_label_pc_4602ba, %dec_label_pc_460432
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !8748
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !8749
}

define i32 @__acrt_CompareStringA(i32 %locale, i16* %locale_name, i32 %compare_flags, i8* %string1, i32 %string1_count, i8* %string2, i32 %string2_count, i32 %code_page) local_unnamed_addr {
dec_label_pc_4604fa:
  %0 = call i8 @__decompiler_undefined_function_8()
  %locale_update_-16 = alloca i32, align 4
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @function_403d91(i32 %locale), !insn.addr !8750
  %3 = ptrtoint i32* %locale_update_-16 to i32, !insn.addr !8751
  %4 = call i32 @InternalCompareStringA(i32 %3, i16* %locale_name, i32 %compare_flags, i8* %string1, i32 %string1_count, i8* %string2, i32 %string2_count, i32 %code_page), !insn.addr !8752
  %5 = icmp eq i8 %0, 0, !insn.addr !8753
  br i1 %5, label %dec_label_pc_46053e, label %dec_label_pc_460534, !insn.addr !8754

dec_label_pc_460534:                              ; preds = %dec_label_pc_4604fa
  %6 = add i32 %1, 848, !insn.addr !8755
  %7 = inttoptr i32 %6 to i32*, !insn.addr !8755
  %8 = load i32, i32* %7, align 4, !insn.addr !8755
  %9 = and i32 %8, -3, !insn.addr !8755
  store i32 %9, i32* %7, align 4, !insn.addr !8755
  br label %dec_label_pc_46053e, !insn.addr !8755

dec_label_pc_46053e:                              ; preds = %dec_label_pc_460534, %dec_label_pc_4604fa
  ret i32 %4, !insn.addr !8756
}

define i32 @__acrt_LCMapStringA_stat(i32 %plocinfo, i16* %LocaleName, i32 %dwMapFlags, i8* %lpSrcStr, i32 %cchSrc, i8* %lpDestStr, i32 %cchDest, i32 %code_page, i32 %bError) local_unnamed_addr {
dec_label_pc_460e43:
  %esp.7.reg2mem = alloca i32, !insn.addr !8757
  %ebx.214.reg2mem = alloca i32, !insn.addr !8757
  %edi.2.reg2mem = alloca i32, !insn.addr !8757
  %esp.5.reg2mem = alloca i32, !insn.addr !8757
  %edi.1.reg2mem = alloca i32, !insn.addr !8757
  %ebx.2.reg2mem = alloca i32, !insn.addr !8757
  %ebx.0.reg2mem = alloca i32, !insn.addr !8757
  %stack_var_-96 = alloca i16*, align 4
  %stack_var_-60 = alloca i16*, align 4
  %stack_var_-24 = alloca i32, align 4
  %0 = icmp slt i32 %cchSrc, 1
  br i1 %0, label %dec_label_pc_460e72, label %dec_label_pc_460e5e, !insn.addr !8758

dec_label_pc_460e5e:                              ; preds = %dec_label_pc_460e43
  %1 = call i32 @__strncnt(i8* %lpSrcStr, i32 %cchSrc), !insn.addr !8759
  br label %dec_label_pc_460e72

dec_label_pc_460e72:                              ; preds = %dec_label_pc_460e5e, %dec_label_pc_460e43
  %2 = call i32 @function_401712(), !insn.addr !8760
  %3 = icmp eq i32 %2, 0, !insn.addr !8761
  br i1 %3, label %dec_label_pc_46100a, label %dec_label_pc_460eb2, !insn.addr !8762

dec_label_pc_460eb2:                              ; preds = %dec_label_pc_460e72
  %4 = ptrtoint i32* %stack_var_-24 to i32, !insn.addr !8763
  %5 = mul i32 %2, 2, !insn.addr !8764
  %6 = add i32 %5, 8, !insn.addr !8765
  %7 = icmp ult i32 %5, -8, !insn.addr !8766
  %8 = zext i1 %7 to i32, !insn.addr !8767
  %9 = or i32 %5, %8, !insn.addr !8767
  %10 = sub i32 %5, %9, !insn.addr !8767
  %11 = and i32 %10, %6, !insn.addr !8768
  %12 = icmp eq i32 %11, 0, !insn.addr !8768
  store i32 0, i32* %ebx.214.reg2mem, !insn.addr !8769
  store i32 %4, i32* %esp.7.reg2mem, !insn.addr !8769
  br i1 %12, label %dec_label_pc_461001, label %dec_label_pc_460ec0, !insn.addr !8769

dec_label_pc_460ec0:                              ; preds = %dec_label_pc_460eb2
  %13 = icmp ult i32 %11, 1025
  br i1 %13, label %dec_label_pc_460ec7, label %dec_label_pc_460eda, !insn.addr !8770

dec_label_pc_460ec7:                              ; preds = %dec_label_pc_460ec0
  call void @_alloca_probe_16(), !insn.addr !8771
  store i32 52428, i32* %stack_var_-24, align 4, !insn.addr !8772
  store i32 %4, i32* %ebx.0.reg2mem, !insn.addr !8773
  br label %dec_label_pc_460eed, !insn.addr !8773

dec_label_pc_460eda:                              ; preds = %dec_label_pc_460ec0
  %14 = call i32* @_malloc_base(i32 %11), !insn.addr !8774
  %15 = ptrtoint i32* %14 to i32, !insn.addr !8774
  %16 = icmp eq i32* %14, null, !insn.addr !8775
  store i32 %15, i32* %ebx.2.reg2mem, !insn.addr !8776
  br i1 %16, label %dec_label_pc_460ef7, label %dec_label_pc_460ee7, !insn.addr !8776

dec_label_pc_460ee7:                              ; preds = %dec_label_pc_460eda
  store i32 56797, i32* %14, align 4, !insn.addr !8777
  store i32 %15, i32* %ebx.0.reg2mem, !insn.addr !8777
  br label %dec_label_pc_460eed, !insn.addr !8777

dec_label_pc_460eed:                              ; preds = %dec_label_pc_460ee7, %dec_label_pc_460ec7
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %17 = add i32 %ebx.0.reload, 8, !insn.addr !8778
  store i32 %17, i32* %ebx.2.reg2mem, !insn.addr !8778
  br label %dec_label_pc_460ef7, !insn.addr !8778

dec_label_pc_460ef7:                              ; preds = %dec_label_pc_460eda, %dec_label_pc_460eed
  %ebx.2.reload = load i32, i32* %ebx.2.reg2mem
  %18 = icmp eq i32 %ebx.2.reload, 0, !insn.addr !8779
  store i32 0, i32* %ebx.214.reg2mem, !insn.addr !8780
  store i32 %4, i32* %esp.7.reg2mem, !insn.addr !8780
  br i1 %18, label %dec_label_pc_461001, label %dec_label_pc_460eff, !insn.addr !8780

dec_label_pc_460eff:                              ; preds = %dec_label_pc_460ef7
  %19 = call i32 @function_401712(), !insn.addr !8781
  %20 = icmp eq i32 %19, 0, !insn.addr !8782
  store i32 %ebx.2.reload, i32* %ebx.214.reg2mem, !insn.addr !8783
  store i32 %4, i32* %esp.7.reg2mem, !insn.addr !8783
  br i1 %20, label %dec_label_pc_461001, label %dec_label_pc_460f18, !insn.addr !8783

dec_label_pc_460f18:                              ; preds = %dec_label_pc_460eff
  %21 = ptrtoint i16* %LocaleName to i32
  %22 = bitcast i16** %stack_var_-60 to i32*
  store i32 %21, i32* %22, align 4
  %23 = ptrtoint i16** %stack_var_-60 to i32, !insn.addr !8784
  %24 = call i32 @"___acrt_LCMapStringEx@36"(i32 %21, i32 %dwMapFlags, i32 %ebx.2.reload, i32 %2, i32 0, i32 0, i32 0, i32 0, i32 0), !insn.addr !8785
  %25 = icmp eq i32 %24, 0, !insn.addr !8786
  store i32 %ebx.2.reload, i32* %ebx.214.reg2mem, !insn.addr !8787
  store i32 %23, i32* %esp.7.reg2mem, !insn.addr !8787
  br i1 %25, label %dec_label_pc_461001, label %dec_label_pc_460f39, !insn.addr !8787

dec_label_pc_460f39:                              ; preds = %dec_label_pc_460f18
  %26 = and i32 %dwMapFlags, 1024, !insn.addr !8788
  %27 = icmp eq i32 %26, 0, !insn.addr !8788
  br i1 %27, label %dec_label_pc_460f7b, label %dec_label_pc_460f43, !insn.addr !8789

dec_label_pc_460f43:                              ; preds = %dec_label_pc_460f39
  %28 = icmp eq i32 %cchDest, 0, !insn.addr !8790
  %29 = icmp sgt i32 %24, %cchDest, !insn.addr !8791
  %or.cond = or i1 %28, %29
  store i32 %ebx.2.reload, i32* %ebx.214.reg2mem, !insn.addr !8792
  store i32 %23, i32* %esp.7.reg2mem, !insn.addr !8792
  br i1 %or.cond, label %dec_label_pc_461001, label %dec_label_pc_460f56, !insn.addr !8792

dec_label_pc_460f56:                              ; preds = %dec_label_pc_460f43
  %30 = ptrtoint i8* %lpDestStr to i32
  %31 = bitcast i16** %stack_var_-96 to i32*
  store i32 %21, i32* %31, align 4
  %32 = ptrtoint i16** %stack_var_-96 to i32, !insn.addr !8793
  %33 = call i32 @"___acrt_LCMapStringEx@36"(i32 %21, i32 %dwMapFlags, i32 %ebx.2.reload, i32 %2, i32 %30, i32 %cchDest, i32 0, i32 0, i32 0), !insn.addr !8794
  store i32 %ebx.2.reload, i32* %ebx.214.reg2mem
  store i32 %32, i32* %esp.7.reg2mem
  br label %dec_label_pc_461001

dec_label_pc_460f7b:                              ; preds = %dec_label_pc_460f39
  %34 = mul i32 %24, 2, !insn.addr !8795
  %35 = add i32 %34, 8, !insn.addr !8796
  %36 = icmp ult i32 %34, -8, !insn.addr !8797
  %37 = zext i1 %36 to i32, !insn.addr !8798
  %38 = or i32 %34, %37, !insn.addr !8798
  %39 = sub i32 %34, %38, !insn.addr !8798
  %40 = and i32 %39, %35, !insn.addr !8799
  %41 = icmp eq i32 %40, 0, !insn.addr !8799
  store i32 %23, i32* %esp.5.reg2mem, !insn.addr !8800
  store i32 0, i32* %edi.2.reg2mem, !insn.addr !8800
  br i1 %41, label %dec_label_pc_460ff8, label %dec_label_pc_460f89, !insn.addr !8800

dec_label_pc_460f89:                              ; preds = %dec_label_pc_460f7b
  %42 = icmp ugt i32 %40, 1024
  br i1 %42, label %dec_label_pc_460fa0, label %dec_label_pc_460f8d, !insn.addr !8801

dec_label_pc_460f8d:                              ; preds = %dec_label_pc_460f89
  call void @_alloca_probe_16(), !insn.addr !8802
  store i16* inttoptr (i32 52428 to i16*), i16** %stack_var_-60, align 4, !insn.addr !8803
  store i32 %23, i32* %edi.1.reg2mem, !insn.addr !8804
  br label %dec_label_pc_460fba, !insn.addr !8804

dec_label_pc_460fa0:                              ; preds = %dec_label_pc_460f89
  %43 = call i32* @_malloc_base(i32 %40), !insn.addr !8805
  %44 = ptrtoint i32* %43 to i32, !insn.addr !8805
  %45 = icmp eq i32* %43, null, !insn.addr !8806
  store i32 %23, i32* %esp.5.reg2mem, !insn.addr !8807
  store i32 %44, i32* %edi.2.reg2mem, !insn.addr !8807
  br i1 %45, label %dec_label_pc_460ff8, label %dec_label_pc_460fad, !insn.addr !8807

dec_label_pc_460fad:                              ; preds = %dec_label_pc_460fa0
  store i32 56797, i32* %43, align 4, !insn.addr !8808
  store i32 %44, i32* %edi.1.reg2mem, !insn.addr !8808
  br label %dec_label_pc_460fba, !insn.addr !8808

dec_label_pc_460fba:                              ; preds = %dec_label_pc_460f8d, %dec_label_pc_460fad
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %46 = add i32 %edi.1.reload, 8, !insn.addr !8809
  %47 = icmp eq i32 %46, 0, !insn.addr !8810
  store i32 %23, i32* %esp.5.reg2mem, !insn.addr !8811
  store i32 0, i32* %edi.2.reg2mem, !insn.addr !8811
  br i1 %47, label %dec_label_pc_460ff8, label %dec_label_pc_460fbe, !insn.addr !8811

dec_label_pc_460fbe:                              ; preds = %dec_label_pc_460fba
  %48 = bitcast i16** %stack_var_-96 to i32*
  store i32 %21, i32* %48, align 4
  %49 = ptrtoint i16** %stack_var_-96 to i32, !insn.addr !8812
  %50 = call i32 @"___acrt_LCMapStringEx@36"(i32 %21, i32 %dwMapFlags, i32 %ebx.2.reload, i32 %2, i32 %46, i32 %24, i32 0, i32 0, i32 0), !insn.addr !8813
  %51 = icmp eq i32 %50, 0, !insn.addr !8814
  store i32 %49, i32* %esp.5.reg2mem, !insn.addr !8815
  store i32 %46, i32* %edi.2.reg2mem, !insn.addr !8815
  br i1 %51, label %dec_label_pc_460ff8, label %dec_label_pc_460fd9, !insn.addr !8815

dec_label_pc_460fd9:                              ; preds = %dec_label_pc_460fbe
  %52 = call i32 @function_40461f(), !insn.addr !8816
  %53 = icmp eq i32 %52, 0, !insn.addr !8817
  %54 = icmp eq i1 %53, false, !insn.addr !8818
  store i32 %49, i32* %esp.5.reg2mem, !insn.addr !8818
  store i32 %46, i32* %edi.2.reg2mem, !insn.addr !8818
  br i1 %54, label %dec_label_pc_461024, label %dec_label_pc_460ff8, !insn.addr !8818

dec_label_pc_460ff8:                              ; preds = %dec_label_pc_460f7b, %dec_label_pc_460fd9, %dec_label_pc_460fbe, %dec_label_pc_460fba, %dec_label_pc_460fa0
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %esp.5.reload = load i32, i32* %esp.5.reg2mem
  %55 = add i32 %esp.5.reload, -4, !insn.addr !8819
  %56 = inttoptr i32 %55 to i32*, !insn.addr !8819
  store i32 %edi.2.reload, i32* %56, align 4, !insn.addr !8819
  %57 = call i32 @function_40125d(), !insn.addr !8820
  store i32 %ebx.2.reload, i32* %ebx.214.reg2mem, !insn.addr !8821
  store i32 %esp.5.reload, i32* %esp.7.reg2mem, !insn.addr !8821
  br label %dec_label_pc_461001, !insn.addr !8821

dec_label_pc_461001:                              ; preds = %dec_label_pc_460eb2, %dec_label_pc_460f56, %dec_label_pc_460ef7, %dec_label_pc_460eff, %dec_label_pc_460f18, %dec_label_pc_460ff8, %dec_label_pc_461024, %dec_label_pc_460f43
  %esp.7.reload = load i32, i32* %esp.7.reg2mem
  %ebx.214.reload = load i32, i32* %ebx.214.reg2mem
  %58 = add i32 %esp.7.reload, -4, !insn.addr !8822
  %59 = inttoptr i32 %58 to i32*, !insn.addr !8822
  store i32 %ebx.214.reload, i32* %59, align 4, !insn.addr !8822
  %60 = call i32 @function_40125d(), !insn.addr !8823
  br label %dec_label_pc_46100a, !insn.addr !8824

dec_label_pc_46100a:                              ; preds = %dec_label_pc_461001, %dec_label_pc_460e72
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !8825
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !8826

dec_label_pc_461024:                              ; preds = %dec_label_pc_460fd9
  %61 = call i32 @function_40125d(), !insn.addr !8827
  store i32 %ebx.2.reload, i32* %ebx.214.reg2mem, !insn.addr !8828
  store i32 %49, i32* %esp.7.reg2mem, !insn.addr !8828
  br label %dec_label_pc_461001, !insn.addr !8828
}

define i32 @__acrt_LCMapStringA(i32 %plocinfo, i16* %LocaleName, i32 %dwMapFlags, i8* %lpSrcStr, i32 %cchSrc, i8* %lpDestStr, i32 %cchDest, i32 %code_page, i32 %bError) local_unnamed_addr {
dec_label_pc_4610a7:
  %0 = call i8 @__decompiler_undefined_function_8()
  %_loc_update_-16 = alloca i32, align 4
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @function_403d91(i32 %plocinfo), !insn.addr !8829
  %3 = ptrtoint i32* %_loc_update_-16 to i32, !insn.addr !8830
  %4 = call i32 @__acrt_LCMapStringA_stat(i32 %3, i16* %LocaleName, i32 %dwMapFlags, i8* %lpSrcStr, i32 %cchSrc, i8* %lpDestStr, i32 %cchDest, i32 %code_page, i32 %bError), !insn.addr !8831
  %5 = icmp eq i8 %0, 0, !insn.addr !8832
  br i1 %5, label %dec_label_pc_4610ee, label %dec_label_pc_4610e4, !insn.addr !8833

dec_label_pc_4610e4:                              ; preds = %dec_label_pc_4610a7
  %6 = add i32 %1, 848, !insn.addr !8834
  %7 = inttoptr i32 %6 to i32*, !insn.addr !8834
  %8 = load i32, i32* %7, align 4, !insn.addr !8834
  %9 = and i32 %8, -3, !insn.addr !8834
  store i32 %9, i32* %7, align 4, !insn.addr !8834
  br label %dec_label_pc_4610ee, !insn.addr !8834

dec_label_pc_4610ee:                              ; preds = %dec_label_pc_4610e4, %dec_label_pc_4610a7
  ret i32 %4, !insn.addr !8835
}

define i32 @__acrt_SetEnvironmentVariableA(i8* %lpName, i8* %lpValue) local_unnamed_addr {
dec_label_pc_46121b:
  %ebx.0.reg2mem = alloca i32, !insn.addr !8836
  %0 = call i32 @function_402ae5(), !insn.addr !8837
  %1 = call i32 @function_403747(), !insn.addr !8838
  %2 = icmp eq i32 %1, 0, !insn.addr !8839
  %3 = icmp eq i1 %2, false, !insn.addr !8840
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !8840
  br i1 %3, label %dec_label_pc_4612aa, label %dec_label_pc_461266, !insn.addr !8840

dec_label_pc_461266:                              ; preds = %dec_label_pc_46121b
  %4 = call i32 @function_402ae5(), !insn.addr !8841
  %5 = call i32 @function_403747(), !insn.addr !8842
  %6 = icmp eq i32 %5, 0, !insn.addr !8843
  %7 = icmp eq i1 %6, false, !insn.addr !8844
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !8844
  br i1 %7, label %dec_label_pc_4612aa, label %dec_label_pc_461282, !insn.addr !8844

dec_label_pc_461282:                              ; preds = %dec_label_pc_461266
  %8 = call i1 @SetEnvironmentVariableW(i16* null, i16* null), !insn.addr !8845
  %9 = sext i1 %8 to i32, !insn.addr !8845
  store i32 %9, i32* %ebx.0.reg2mem, !insn.addr !8846
  br label %dec_label_pc_4612aa, !insn.addr !8846

dec_label_pc_4612aa:                              ; preds = %dec_label_pc_461282, %dec_label_pc_461266, %dec_label_pc_46121b
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  ret i32 %ebx.0.reload, !insn.addr !8847
}

define i64 @"common_lseek<__int64>"(i32 %fh, i64 %offset, i32 %origin) local_unnamed_addr {
dec_label_pc_462658:
  %esi.1.reg2mem = alloca i32, !insn.addr !8848
  %esi.0.reg2mem = alloca i32, !insn.addr !8848
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b54(i32* nonnull @global_var_47b9b8, i32 24), !insn.addr !8849
  %2 = add i32 %0, 8, !insn.addr !8850
  %3 = inttoptr i32 %2 to i32*, !insn.addr !8850
  %4 = load i32, i32* %3, align 4, !insn.addr !8850
  %5 = icmp eq i32 %4, -2, !insn.addr !8851
  %6 = icmp eq i1 %5, false, !insn.addr !8852
  br i1 %6, label %dec_label_pc_462684, label %dec_label_pc_46266c, !insn.addr !8852

dec_label_pc_46266c:                              ; preds = %dec_label_pc_462658
  %7 = call i32* @__doserrno(), !insn.addr !8853
  store i32 0, i32* %7, align 4, !insn.addr !8854
  %8 = call i32* @_errno(), !insn.addr !8855
  store i32 9, i32* %8, align 4, !insn.addr !8856
  store i32 -1, i32* %esi.1.reg2mem, !insn.addr !8857
  br label %dec_label_pc_462752, !insn.addr !8857

dec_label_pc_462684:                              ; preds = %dec_label_pc_462658
  %9 = icmp slt i32 %4, 0, !insn.addr !8858
  br i1 %9, label %dec_label_pc_462735, label %dec_label_pc_46268c, !insn.addr !8859

dec_label_pc_46268c:                              ; preds = %dec_label_pc_462684
  %10 = load i32, i32* @_nhandle, align 4, !insn.addr !8860
  %11 = icmp ult i32 %4, %10, !insn.addr !8860
  %12 = icmp eq i1 %11, false, !insn.addr !8861
  br i1 %12, label %dec_label_pc_462735, label %dec_label_pc_462698, !insn.addr !8861

dec_label_pc_462698:                              ; preds = %dec_label_pc_46268c
  %13 = udiv i32 %4, 64
  %14 = add i32 %0, -28, !insn.addr !8862
  %15 = inttoptr i32 %14 to i32*, !insn.addr !8862
  store i32 %13, i32* %15, align 4, !insn.addr !8862
  %16 = and i32 %4, 63, !insn.addr !8863
  %narrow = mul nuw nsw i32 %16, 56
  %17 = add i32 %0, -32, !insn.addr !8864
  %18 = inttoptr i32 %17 to i32*, !insn.addr !8864
  store i32 %narrow, i32* %18, align 4, !insn.addr !8864
  %19 = mul i32 %13, 4, !insn.addr !8865
  %20 = add i32 %19, ptrtoint (i32* @__pioinfo to i32), !insn.addr !8865
  %21 = inttoptr i32 %20 to i32*, !insn.addr !8865
  %22 = load i32, i32* %21, align 4, !insn.addr !8865
  %23 = add nuw nsw i32 %narrow, 40, !insn.addr !8866
  %24 = add i32 %23, %22, !insn.addr !8866
  %25 = inttoptr i32 %24 to i8*, !insn.addr !8866
  %26 = load i8, i8* %25, align 1, !insn.addr !8866
  %27 = and i8 %26, 1, !insn.addr !8866
  %28 = icmp eq i8 %27, 0, !insn.addr !8866
  br i1 %28, label %dec_label_pc_462735, label %dec_label_pc_4626b9, !insn.addr !8867

dec_label_pc_4626b9:                              ; preds = %dec_label_pc_462698
  %29 = call i32 @function_40132f(), !insn.addr !8868
  %30 = add i32 %0, -40, !insn.addr !8869
  %31 = inttoptr i32 %30 to i32*, !insn.addr !8869
  store i32 -1, i32* %31, align 4, !insn.addr !8869
  %32 = add i32 %0, -36, !insn.addr !8870
  %33 = inttoptr i32 %32 to i32*, !insn.addr !8870
  store i32 -1, i32* %33, align 4, !insn.addr !8870
  %34 = add i32 %0, -4, !insn.addr !8871
  %35 = inttoptr i32 %34 to i32*, !insn.addr !8871
  store i32 0, i32* %35, align 4, !insn.addr !8871
  %36 = load i32, i32* %15, align 4, !insn.addr !8872
  %37 = mul i32 %36, 4, !insn.addr !8873
  %38 = add i32 %37, ptrtoint (i32* @__pioinfo to i32), !insn.addr !8873
  %39 = inttoptr i32 %38 to i32*, !insn.addr !8873
  %40 = load i32, i32* %39, align 4, !insn.addr !8873
  %41 = load i32, i32* %18, align 4, !insn.addr !8874
  %42 = add i32 %40, 40, !insn.addr !8875
  %43 = add i32 %42, %41, !insn.addr !8875
  %44 = inttoptr i32 %43 to i8*, !insn.addr !8875
  %45 = load i8, i8* %44, align 1, !insn.addr !8875
  %46 = and i8 %45, 1, !insn.addr !8875
  %47 = icmp eq i8 %46, 0, !insn.addr !8875
  %48 = icmp eq i1 %47, false, !insn.addr !8876
  br i1 %48, label %dec_label_pc_4626f8, label %dec_label_pc_4626e3, !insn.addr !8876

dec_label_pc_4626e3:                              ; preds = %dec_label_pc_4626b9
  %49 = call i32* @_errno(), !insn.addr !8877
  store i32 9, i32* %49, align 4, !insn.addr !8878
  %50 = call i32* @__doserrno(), !insn.addr !8879
  store i32 0, i32* %50, align 4, !insn.addr !8880
  store i32 -1, i32* %esi.0.reg2mem, !insn.addr !8881
  br label %dec_label_pc_462714, !insn.addr !8881

dec_label_pc_4626f8:                              ; preds = %dec_label_pc_4626b9
  %51 = add i32 %0, 16, !insn.addr !8882
  %52 = inttoptr i32 %51 to i32*, !insn.addr !8882
  %53 = load i32, i32* %52, align 4, !insn.addr !8882
  %54 = add i32 %0, 12, !insn.addr !8883
  %55 = inttoptr i32 %54 to i32*, !insn.addr !8883
  %56 = load i32, i32* %55, align 4, !insn.addr !8883
  %57 = sext i32 %56 to i64, !insn.addr !8884
  %58 = call i64 @"common_lseek_nolock<__int64>"(i32 %4, i64 %57, i32 %53), !insn.addr !8884
  %59 = trunc i64 %58 to i32, !insn.addr !8884
  store i32 %59, i32* %31, align 4, !insn.addr !8885
  store i32 %narrow, i32* %33, align 4, !insn.addr !8886
  store i32 %59, i32* %esi.0.reg2mem, !insn.addr !8886
  br label %dec_label_pc_462714, !insn.addr !8886

dec_label_pc_462714:                              ; preds = %dec_label_pc_4626f8, %dec_label_pc_4626e3
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  store i32 -2, i32* %35, align 4, !insn.addr !8887
  %60 = call i32 @function_46272d(), !insn.addr !8888
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !8889
  br label %dec_label_pc_462752, !insn.addr !8889

dec_label_pc_462735:                              ; preds = %dec_label_pc_462698, %dec_label_pc_46268c, %dec_label_pc_462684
  %61 = call i32* @__doserrno(), !insn.addr !8890
  store i32 0, i32* %61, align 4, !insn.addr !8891
  %62 = call i32* @_errno(), !insn.addr !8892
  store i32 9, i32* %62, align 4, !insn.addr !8893
  call void @_invalid_parameter_noinfo(), !insn.addr !8894
  store i32 -1, i32* %esi.1.reg2mem, !insn.addr !8894
  br label %dec_label_pc_462752, !insn.addr !8894

dec_label_pc_462752:                              ; preds = %dec_label_pc_46266c, %dec_label_pc_462735, %dec_label_pc_462714
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %63 = add i32 %0, -16, !insn.addr !8895
  %64 = inttoptr i32 %63 to i32*, !insn.addr !8895
  %65 = load i32, i32* %64, align 4, !insn.addr !8895
  call void @__writefsdword(i32 0, i32 %65), !insn.addr !8896
  %66 = sext i32 %esi.1.reload to i64, !insn.addr !8897
  ret i64 %66, !insn.addr !8897
}

define i32 @function_46272d() local_unnamed_addr {
dec_label_pc_46272d:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_4011db(i32 %0), !insn.addr !8898
  ret i32 %1, !insn.addr !8899
}

define i64 @"common_lseek_nolock<__int64>"(i32 %fh, i64 %offset, i32 %origin) local_unnamed_addr {
dec_label_pc_462813:
  %eax.0.reg2mem = alloca i64, !insn.addr !8900
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i64, align 8
  %1 = sext i32 %0 to i64, !insn.addr !8901
  store i64 %1, i64* %stack_var_-12, align 8, !insn.addr !8901
  %2 = call i32 @_get_osfhandle(i32 %fh), !insn.addr !8902
  %3 = icmp eq i32 %2, -1, !insn.addr !8903
  %4 = icmp eq i1 %3, false, !insn.addr !8904
  br i1 %4, label %dec_label_pc_46283e, label %dec_label_pc_46282d, !insn.addr !8904

dec_label_pc_46282d:                              ; preds = %dec_label_pc_462813
  %5 = call i32* @_errno(), !insn.addr !8905
  store i32 9, i32* %5, align 4, !insn.addr !8906
  store i64 -1, i64* %eax.0.reg2mem, !insn.addr !8906
  br label %dec_label_pc_46288b, !insn.addr !8906

dec_label_pc_46283e:                              ; preds = %dec_label_pc_462813
  %6 = mul i64 %offset, 4294967296
  %7 = ptrtoint i64* %stack_var_-12 to i32, !insn.addr !8907
  %8 = inttoptr i32 %2 to i32*, !insn.addr !8908
  %9 = sdiv i64 %6, 4294967296, !insn.addr !8908
  %10 = insertvalue %_LARGE_INTEGER undef, i64 %9, 0, !insn.addr !8908
  %11 = inttoptr i32 %origin to %_LARGE_INTEGER*, !insn.addr !8908
  %12 = call i1 @SetFilePointerEx(i32* %8, %_LARGE_INTEGER %10, %_LARGE_INTEGER* %11, i32 %7), !insn.addr !8908
  %13 = icmp eq i1 %12, false, !insn.addr !8909
  %14 = icmp eq i1 %13, false, !insn.addr !8910
  br i1 %14, label %dec_label_pc_462865, label %dec_label_pc_462856, !insn.addr !8910

dec_label_pc_462856:                              ; preds = %dec_label_pc_46283e
  %15 = call i32 @GetLastError(), !insn.addr !8911
  %16 = call i32 @function_403512(), !insn.addr !8912
  store i64 -1, i64* %eax.0.reg2mem, !insn.addr !8913
  br label %dec_label_pc_46288b, !insn.addr !8913

dec_label_pc_462865:                              ; preds = %dec_label_pc_46283e
  %17 = load i64, i64* %stack_var_-12, align 8, !insn.addr !8914
  %18 = trunc i64 %17 to i32, !insn.addr !8914
  %19 = and i32 %0, %18, !insn.addr !8915
  %20 = icmp eq i32 %19, -1, !insn.addr !8916
  store i64 -1, i64* %eax.0.reg2mem, !insn.addr !8917
  br i1 %20, label %dec_label_pc_46288b, label %dec_label_pc_462871, !insn.addr !8917

dec_label_pc_462871:                              ; preds = %dec_label_pc_462865
  %21 = and i32 %fh, 63, !insn.addr !8918
  %22 = sdiv i32 %fh, 64, !insn.addr !8919
  %narrow = mul nuw nsw i32 %21, 56
  %23 = mul i32 %22, 4, !insn.addr !8920
  %24 = add i32 %23, ptrtoint (i32* @__pioinfo to i32), !insn.addr !8920
  %25 = inttoptr i32 %24 to i32*, !insn.addr !8920
  %26 = load i32, i32* %25, align 4, !insn.addr !8920
  %27 = add nuw nsw i32 %narrow, 40, !insn.addr !8921
  %28 = add i32 %27, %26, !insn.addr !8921
  %29 = inttoptr i32 %28 to i8*, !insn.addr !8921
  %30 = load i8, i8* %29, align 1, !insn.addr !8921
  %31 = and i8 %30, -3, !insn.addr !8921
  store i8 %31, i8* %29, align 1, !insn.addr !8921
  %phitmp = sext i32 %18 to i64
  store i64 %phitmp, i64* %eax.0.reg2mem, !insn.addr !8921
  br label %dec_label_pc_46288b, !insn.addr !8921

dec_label_pc_46288b:                              ; preds = %dec_label_pc_46282d, %dec_label_pc_462856, %dec_label_pc_462865, %dec_label_pc_462871
  %eax.0.reload = load i64, i64* %eax.0.reg2mem
  ret i64 %eax.0.reload, !insn.addr !8922
}

define i64 @_lseeki64(i32 %fh, i64 %offset, i32 %origin) local_unnamed_addr {
dec_label_pc_4629b6:
  %0 = mul i64 %offset, 4294967296
  %1 = sdiv i64 %0, 4294967296, !insn.addr !8923
  %2 = call i64 @"common_lseek<__int64>"(i32 %fh, i64 %1, i32 %origin), !insn.addr !8923
  %3 = mul i64 %2, 4294967296
  %4 = sdiv i64 %3, 4294967296, !insn.addr !8924
  ret i64 %4, !insn.addr !8924
}

define i64 @_lseeki64_nolock(i32 %fh, i64 %offset, i32 %origin) local_unnamed_addr {
dec_label_pc_4629d7:
  %0 = mul i64 %offset, 4294967296
  %1 = sdiv i64 %0, 4294967296, !insn.addr !8925
  %2 = call i64 @"common_lseek_nolock<__int64>"(i32 %fh, i64 %1, i32 %origin), !insn.addr !8925
  %3 = mul i64 %2, 4294967296
  %4 = sdiv i64 %3, 4294967296, !insn.addr !8926
  ret i64 %4, !insn.addr !8926
}

define i16 @_putwch_nolock(i16 %c) local_unnamed_addr {
dec_label_pc_462b47:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_4 = alloca i16, align 2
  store i16 %c, i16* %stack_var_4, align 2
  %stack_var_-8 = alloca i32, align 4
  %2 = call i32 @function_40359e(i32 %1, i32 %0), !insn.addr !8927
  %3 = icmp eq i32 %2, 0, !insn.addr !8928
  br i1 %3, label %dec_label_pc_462b72, label %dec_label_pc_462b56, !insn.addr !8929

dec_label_pc_462b56:                              ; preds = %dec_label_pc_462b47
  %4 = bitcast i16* %stack_var_4 to i32*, !insn.addr !8930
  %5 = call i32 @function_4028c4(i32* nonnull %4, i32 1, i32* nonnull %stack_var_-8), !insn.addr !8930
  %6 = icmp eq i32 %5, 0, !insn.addr !8931
  br i1 %6, label %dec_label_pc_462b72, label %dec_label_pc_462b6c, !insn.addr !8932

dec_label_pc_462b6c:                              ; preds = %dec_label_pc_462b56
  %7 = load i16, i16* %stack_var_4, align 2, !insn.addr !8933
  ret i16 %7, !insn.addr !8934

dec_label_pc_462b72:                              ; preds = %dec_label_pc_462b56, %dec_label_pc_462b47
  ret i16 -1, !insn.addr !8935
}

define i32 @"__crt_mbstring::__mbrtoc32_utf8"(i32 %pc32, i8* %s, i32 %n, %_Mbstatet* %ps) local_unnamed_addr {
dec_label_pc_463839:
  %edx.2.lcssa.reg2mem = alloca i32, !insn.addr !8936
  %stack_var_-28.010.reg2mem = alloca i32, !insn.addr !8936
  %edx.211.reg2mem = alloca i32, !insn.addr !8936
  %ebx.212.reg2mem = alloca i32, !insn.addr !8936
  %ebx.1.reg2mem = alloca i32, !insn.addr !8936
  %edx.1.reg2mem = alloca i32, !insn.addr !8936
  %ecx.0.reg2mem = alloca i32, !insn.addr !8936
  %eax.0.reg2mem = alloca i32, !insn.addr !8936
  %stack_var_-56 = alloca %_Mbstatet.722, align 8
  %stack_var_-4 = alloca i32, align 4
  %0 = icmp eq i8* %s, null, !insn.addr !8937
  %1 = icmp eq i1 %0, false, !insn.addr !8938
  %storemerge = select i1 %1, i32 %n, i32 1
  %2 = icmp eq i32 %storemerge, 0, !insn.addr !8939
  %3 = icmp eq i1 %2, false, !insn.addr !8940
  br i1 %3, label %dec_label_pc_46388d, label %dec_label_pc_463885, !insn.addr !8940

dec_label_pc_463885:                              ; preds = %dec_label_pc_463965, %dec_label_pc_463839
  store %_Mbstatet.722 { i32 -2, i16 undef, i16 undef }, %_Mbstatet.722* %stack_var_-56, align 8, !insn.addr !8941
  br label %dec_label_pc_4639d1, !insn.addr !8942

dec_label_pc_46388d:                              ; preds = %dec_label_pc_463839
  %4 = ptrtoint %_Mbstatet* %ps to i32
  %5 = ptrtoint i8* %s to i32
  %6 = icmp eq %_Mbstatet* %ps, null, !insn.addr !8943
  %7 = icmp eq i1 %6, false, !insn.addr !8944
  %spec.select = select i1 %7, i32 %4, i32 ptrtoint (%_Mbstatet.722* @internal_pst to i32)
  %ebx.0 = select i1 %1, i32 %5, i32 ptrtoint (i8** @global_var_4713f8 to i32)
  %8 = select i1 %0, i32 0, i32 %pc32, !insn.addr !8945
  %9 = add i32 %spec.select, 6, !insn.addr !8946
  %10 = inttoptr i32 %9 to i16*, !insn.addr !8946
  %11 = load i16, i16* %10, align 2, !insn.addr !8946
  %12 = icmp eq i16 %11, 0, !insn.addr !8946
  %13 = icmp eq i1 %12, false, !insn.addr !8947
  br i1 %13, label %dec_label_pc_4638f9, label %dec_label_pc_463895, !insn.addr !8947

dec_label_pc_463895:                              ; preds = %dec_label_pc_46388d
  %14 = inttoptr i32 %ebx.0 to i8*, !insn.addr !8948
  %15 = load i8, i8* %14, align 1, !insn.addr !8948
  %16 = zext i8 %15 to i32, !insn.addr !8948
  %17 = icmp slt i8 %15, 0, !insn.addr !8949
  br i1 %17, label %dec_label_pc_4638b4, label %dec_label_pc_46389f, !insn.addr !8950

dec_label_pc_46389f:                              ; preds = %dec_label_pc_463895
  %18 = icmp eq i32 %8, 0, !insn.addr !8951
  br i1 %18, label %dec_label_pc_4639d1, label %dec_label_pc_4638a3, !insn.addr !8952

dec_label_pc_4638a3:                              ; preds = %dec_label_pc_46389f
  %19 = inttoptr i32 %8 to i32*, !insn.addr !8953
  store i32 %16, i32* %19, align 4, !insn.addr !8953
  br label %dec_label_pc_4639d1, !insn.addr !8953

dec_label_pc_4638b4:                              ; preds = %dec_label_pc_463895
  %20 = and i32 %16, 224, !insn.addr !8954
  %21 = icmp eq i32 %20, 192, !insn.addr !8955
  %22 = icmp eq i1 %21, false, !insn.addr !8956
  store i32 2, i32* %eax.0.reg2mem, !insn.addr !8956
  br i1 %22, label %dec_label_pc_4638c0, label %dec_label_pc_4638da, !insn.addr !8956

dec_label_pc_4638c0:                              ; preds = %dec_label_pc_4638b4
  %23 = and i32 %16, 240, !insn.addr !8957
  %24 = icmp eq i32 %23, 224, !insn.addr !8958
  %25 = icmp eq i1 %24, false, !insn.addr !8959
  store i32 3, i32* %eax.0.reg2mem, !insn.addr !8959
  br i1 %25, label %dec_label_pc_4638cc, label %dec_label_pc_4638da, !insn.addr !8959

dec_label_pc_4638cc:                              ; preds = %dec_label_pc_4638c0
  %26 = and i32 %16, 248, !insn.addr !8960
  %27 = icmp eq i32 %26, 240, !insn.addr !8961
  %28 = icmp eq i1 %27, false, !insn.addr !8962
  store i32 4, i32* %eax.0.reg2mem, !insn.addr !8962
  br i1 %28, label %dec_label_pc_4639ca, label %dec_label_pc_4638da, !insn.addr !8962

dec_label_pc_4638da:                              ; preds = %dec_label_pc_4638cc, %dec_label_pc_4638c0, %dec_label_pc_4638b4
  %29 = add i32 %ebx.0, 1, !insn.addr !8963
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  store %_Mbstatet.722 { i32 7, i16 undef, i16 undef }, %_Mbstatet.722* %stack_var_-56, align 8, !insn.addr !8964
  %30 = getelementptr inbounds %_Mbstatet.722, %_Mbstatet.722* %stack_var_-56, i32 0, i32 0, !insn.addr !8965
  %31 = load i32, i32* %30, align 8, !insn.addr !8965
  %32 = sub i32 %31, %eax.0.reload, !insn.addr !8966
  %33 = mul i32 %eax.0.reload, 256, !insn.addr !8967
  %34 = and i32 %32, 31, !insn.addr !8968
  %35 = icmp eq i32 %34, 0, !insn.addr !8968
  %notmask = shl nsw i32 -1, %34
  %phitmp = xor i32 %notmask, 255
  %edx.0 = select i1 %35, i32 0, i32 %phitmp
  %36 = or i32 %33, %eax.0.reload, !insn.addr !8967
  %37 = and i32 %edx.0, %16, !insn.addr !8969
  store i32 %36, i32* %ecx.0.reg2mem, !insn.addr !8970
  store i32 %37, i32* %edx.1.reg2mem, !insn.addr !8970
  store i32 %29, i32* %ebx.1.reg2mem, !insn.addr !8970
  br label %dec_label_pc_46391e, !insn.addr !8970

dec_label_pc_4638f9:                              ; preds = %dec_label_pc_46388d
  %38 = add i32 %spec.select, 4, !insn.addr !8971
  %39 = inttoptr i32 %38 to i8*, !insn.addr !8971
  %40 = load i8, i8* %39, align 1, !insn.addr !8971
  %41 = zext i8 %40 to i32, !insn.addr !8971
  %42 = inttoptr i32 %spec.select to i32*, !insn.addr !8972
  %43 = load i32, i32* %42, align 4, !insn.addr !8972
  %44 = inttoptr i32 %9 to i8*, !insn.addr !8973
  %45 = load i8, i8* %44, align 1, !insn.addr !8973
  %46 = zext i8 %45 to i32, !insn.addr !8973
  %47 = mul i32 %46, 256, !insn.addr !8973
  %48 = or i32 %47, %41, !insn.addr !8973
  %.off = add i8 %40, -2
  %switch = icmp ugt i8 %.off, 2
  %49 = icmp eq i8 %45, 0, !insn.addr !8974
  %or.cond = or i1 %switch, %49
  %50 = icmp ugt i8 %40, %45, !insn.addr !8975
  %51 = icmp eq i1 %50, false, !insn.addr !8976
  %or.cond7 = or i1 %or.cond, %51
  store i32 %48, i32* %ecx.0.reg2mem
  store i32 %43, i32* %edx.1.reg2mem
  store i32 %ebx.0, i32* %ebx.1.reg2mem
  br i1 %or.cond7, label %dec_label_pc_4639ca, label %dec_label_pc_46391e

dec_label_pc_46391e:                              ; preds = %dec_label_pc_4638f9, %dec_label_pc_4638da
  %ebx.1.reload = load i32, i32* %ebx.1.reg2mem
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %52 = udiv i32 %ecx.0.reload, 256, !insn.addr !8977
  %53 = and i32 %52, 255, !insn.addr !8977
  %54 = icmp ult i32 %53, %storemerge, !insn.addr !8978
  %55 = icmp eq i1 %54, false, !insn.addr !8979
  %spec.select8 = select i1 %55, i32 %storemerge, i32 %53
  %56 = sub i32 %ebx.1.reload, %5, !insn.addr !8980
  %57 = icmp ult i32 %56, %spec.select8, !insn.addr !8981
  store i32 %ebx.1.reload, i32* %ebx.212.reg2mem, !insn.addr !8982
  store i32 %edx.1.reload, i32* %edx.211.reg2mem, !insn.addr !8982
  store i32 %56, i32* %stack_var_-28.010.reg2mem, !insn.addr !8982
  store i32 %edx.1.reload, i32* %edx.2.lcssa.reg2mem, !insn.addr !8982
  br i1 %57, label %dec_label_pc_46393d, label %dec_label_pc_46395e, !insn.addr !8982

dec_label_pc_46393d:                              ; preds = %dec_label_pc_46391e, %dec_label_pc_46394b
  %ebx.212.reload = load i32, i32* %ebx.212.reg2mem
  %58 = inttoptr i32 %ebx.212.reload to i8*, !insn.addr !8983
  %59 = load i8, i8* %58, align 1, !insn.addr !8983
  %60 = and i8 %59, -64, !insn.addr !8984
  %61 = icmp eq i8 %60, -128, !insn.addr !8985
  %62 = icmp eq i1 %61, false, !insn.addr !8986
  br i1 %62, label %dec_label_pc_4639ca, label %dec_label_pc_46394b, !insn.addr !8986

dec_label_pc_46394b:                              ; preds = %dec_label_pc_46393d
  %stack_var_-28.010.reload = load i32, i32* %stack_var_-28.010.reg2mem
  %edx.211.reload = load i32, i32* %edx.211.reg2mem
  %63 = add nuw i32 %stack_var_-28.010.reload, 1, !insn.addr !8987
  %64 = add i32 %ebx.212.reload, 1, !insn.addr !8988
  %65 = and i8 %59, 63
  %66 = zext i8 %65 to i32, !insn.addr !8989
  %67 = mul i32 %edx.211.reload, 64, !insn.addr !8990
  %68 = or i32 %67, %66, !insn.addr !8991
  %69 = icmp ult i32 %63, %spec.select8, !insn.addr !8981
  store i32 %64, i32* %ebx.212.reg2mem, !insn.addr !8982
  store i32 %68, i32* %edx.211.reg2mem, !insn.addr !8982
  store i32 %63, i32* %stack_var_-28.010.reg2mem, !insn.addr !8982
  store i32 %68, i32* %edx.2.lcssa.reg2mem, !insn.addr !8982
  br i1 %69, label %dec_label_pc_46393d, label %dec_label_pc_46395e, !insn.addr !8982

dec_label_pc_46395e:                              ; preds = %dec_label_pc_46394b, %dec_label_pc_46391e
  %edx.2.lcssa.reload = load i32, i32* %edx.2.lcssa.reg2mem
  %70 = icmp ult i32 %spec.select8, %53, !insn.addr !8992
  %71 = icmp eq i1 %70, false, !insn.addr !8993
  br i1 %71, label %dec_label_pc_46397d, label %dec_label_pc_463965, !insn.addr !8993

dec_label_pc_463965:                              ; preds = %dec_label_pc_46395e
  %72 = mul i32 %spec.select8, 256
  %73 = sub i32 %ecx.0.reload, %72
  %74 = trunc i32 %ecx.0.reload to i16
  %75 = and i16 %74, 255, !insn.addr !8994
  %76 = add i32 %spec.select, 4, !insn.addr !8994
  %77 = inttoptr i32 %76 to i16*, !insn.addr !8994
  store i16 %75, i16* %77, align 2, !insn.addr !8994
  %78 = udiv i32 %73, 256, !insn.addr !8995
  %79 = inttoptr i32 %spec.select to i32*, !insn.addr !8996
  store i32 %edx.2.lcssa.reload, i32* %79, align 4, !insn.addr !8996
  %80 = trunc i32 %78 to i16
  %81 = and i16 %80, 255, !insn.addr !8997
  store i16 %81, i16* %10, align 2, !insn.addr !8997
  br label %dec_label_pc_463885, !insn.addr !8998

dec_label_pc_46397d:                              ; preds = %dec_label_pc_46395e
  %82 = and i32 %edx.2.lcssa.reload, -2048
  %83 = icmp ne i32 %82, 55296
  %84 = icmp ult i32 %edx.2.lcssa.reload, 1114112
  %or.cond5 = icmp eq i1 %84, %83
  br i1 %or.cond5, label %dec_label_pc_463995, label %dec_label_pc_4639ca, !insn.addr !8999

dec_label_pc_463995:                              ; preds = %dec_label_pc_46397d
  %85 = ptrtoint i32* %stack_var_-4 to i32, !insn.addr !9000
  %86 = mul i32 %ecx.0.reload, 4, !insn.addr !9001
  %87 = and i32 %86, 1020, !insn.addr !9002
  %88 = add i32 %85, -24, !insn.addr !9002
  %89 = add i32 %88, %87, !insn.addr !9002
  %90 = inttoptr i32 %89 to i32*, !insn.addr !9002
  %91 = load i32, i32* %90, align 4, !insn.addr !9002
  %92 = icmp ult i32 %edx.2.lcssa.reload, %91, !insn.addr !9002
  br i1 %92, label %dec_label_pc_4639ca, label %dec_label_pc_4639b3, !insn.addr !9003

dec_label_pc_4639b3:                              ; preds = %dec_label_pc_463995
  %93 = icmp eq i32 %8, 0, !insn.addr !9004
  br i1 %93, label %dec_label_pc_4639b9, label %dec_label_pc_4639b7, !insn.addr !9005

dec_label_pc_4639b7:                              ; preds = %dec_label_pc_4639b3
  %94 = inttoptr i32 %8 to i32*, !insn.addr !9006
  store i32 %edx.2.lcssa.reload, i32* %94, align 4, !insn.addr !9006
  br label %dec_label_pc_4639b9, !insn.addr !9006

dec_label_pc_4639b9:                              ; preds = %dec_label_pc_4639b7, %dec_label_pc_4639b3
  %95 = inttoptr i32 %spec.select to i32*, !insn.addr !9007
  store i32 0, i32* %95, align 4, !insn.addr !9007
  %96 = add i32 %spec.select, 4, !insn.addr !9008
  %97 = inttoptr i32 %96 to i32*, !insn.addr !9008
  store i32 0, i32* %97, align 4, !insn.addr !9008
  br label %dec_label_pc_4639d1, !insn.addr !9009

dec_label_pc_4639ca:                              ; preds = %dec_label_pc_46393d, %dec_label_pc_4638f9, %dec_label_pc_46397d, %dec_label_pc_463995, %dec_label_pc_4638cc
  %98 = insertvalue %_Mbstatet.722 undef, i32 %spec.select, 0, !insn.addr !9010
  store %_Mbstatet.722 %98, %_Mbstatet.722* %stack_var_-56, align 8, !insn.addr !9010
  %99 = getelementptr inbounds %_Mbstatet.722, %_Mbstatet.722* %stack_var_-56, i32 0, i32 0, !insn.addr !9011
  %100 = load i32, i32* %99, align 8, !insn.addr !9011
  %101 = call i32 @function_401d57(i32 %100), !insn.addr !9011
  br label %dec_label_pc_4639d1, !insn.addr !9012

dec_label_pc_4639d1:                              ; preds = %dec_label_pc_46389f, %dec_label_pc_4638a3, %dec_label_pc_4639ca, %dec_label_pc_4639b9, %dec_label_pc_463885
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !9013
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !9014
}

define i32 @fegetenv(%fenv_t* %result) local_unnamed_addr {
dec_label_pc_463a56:
  %0 = ptrtoint %fenv_t* %result to i32
  %1 = call i32 @function_403fdf(), !insn.addr !9015
  %2 = getelementptr inbounds %fenv_t, %fenv_t* %result, i32 0, i32 0, !insn.addr !9016
  store i32 %1, i32* %2, align 4, !insn.addr !9016
  %3 = call i32 @function_40333c(), !insn.addr !9017
  %4 = add i32 %0, 4, !insn.addr !9018
  %5 = inttoptr i32 %4 to i32*, !insn.addr !9018
  store i32 %3, i32* %5, align 4, !insn.addr !9018
  ret i32 0, !insn.addr !9019
}

define i32 @fesetenv(%fenv_t* %requested_env) local_unnamed_addr {
dec_label_pc_463a7a:
  %storemerge.reg2mem = alloca i32, !insn.addr !9020
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = ptrtoint %fenv_t* %requested_env to i32
  %stack_var_-12 = alloca i32, align 4
  %check_env_-8 = alloca %fenv_t, align 8
  %4 = insertvalue %fenv_t undef, i32 %2, 0, !insn.addr !9021
  store %fenv_t %4, %fenv_t* %check_env_-8, align 8, !insn.addr !9021
  %5 = getelementptr inbounds %fenv_t, %fenv_t* %requested_env, i32 0, i32 0, !insn.addr !9022
  %6 = load i32, i32* %5, align 4, !insn.addr !9022
  %.elt = getelementptr inbounds %fenv_t, %fenv_t* %check_env_-8, i32 0, i32 0
  %.unpack = load i32, i32* %.elt, align 8
  %7 = insertvalue %fenv_t undef, i32 %.unpack, 0
  %.elt2 = getelementptr inbounds %fenv_t, %fenv_t* %check_env_-8, i32 0, i32 1
  %.unpack3 = load i32, i32* %.elt2, align 4
  %8 = insertvalue %fenv_t %7, i32 %.unpack3, 1
  %9 = call i32 @function_403535(i32 %6, i32 %0, i32 %2, %fenv_t %8, i32 %1), !insn.addr !9023
  %10 = add i32 %3, 4, !insn.addr !9024
  %11 = inttoptr i32 %10 to i32*, !insn.addr !9024
  %12 = load i32, i32* %11, align 4, !insn.addr !9024
  %13 = call i32 @function_401fcd(i32 %12), !insn.addr !9025
  store i32 0, i32* %stack_var_-12, align 4, !insn.addr !9026
  store %fenv_t { i32 0, i32 undef }, %fenv_t* %check_env_-8, align 8, !insn.addr !9027
  %14 = bitcast i32* %stack_var_-12 to %fenv_t*
  %15 = call i32 @fegetenv(%fenv_t* nonnull %14), !insn.addr !9028
  %16 = icmp eq i32 %15, 0, !insn.addr !9029
  %17 = icmp eq i1 %16, false, !insn.addr !9030
  br i1 %17, label %dec_label_pc_463abf, label %dec_label_pc_463aac, !insn.addr !9030

dec_label_pc_463aac:                              ; preds = %dec_label_pc_463a7a
  %18 = load i32, i32* %5, align 4, !insn.addr !9031
  %19 = load i32, i32* %stack_var_-12, align 4, !insn.addr !9032
  %20 = icmp eq i32 %18, %19, !insn.addr !9032
  %21 = icmp eq i1 %20, false, !insn.addr !9033
  br i1 %21, label %dec_label_pc_463abf, label %dec_label_pc_463ab3, !insn.addr !9033

dec_label_pc_463ab3:                              ; preds = %dec_label_pc_463aac
  %22 = load i32, i32* %11, align 4, !insn.addr !9034
  %23 = load i32, i32* %.elt, align 8, !insn.addr !9035
  %24 = icmp eq i32 %22, %23, !insn.addr !9035
  %25 = icmp eq i1 %24, false, !insn.addr !9036
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !9036
  br i1 %25, label %dec_label_pc_463abf, label %dec_label_pc_463ac2, !insn.addr !9036

dec_label_pc_463abf:                              ; preds = %dec_label_pc_463ab3, %dec_label_pc_463aac, %dec_label_pc_463a7a
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !9037
  br label %dec_label_pc_463ac2, !insn.addr !9037

dec_label_pc_463ac2:                              ; preds = %dec_label_pc_463ab3, %dec_label_pc_463abf
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !9038
}

define i32 @feholdexcept(%fenv_t* %penv) local_unnamed_addr {
dec_label_pc_463ad7:
  %stack_var_-12 = alloca i32, align 4
  %env_-8 = alloca %fenv_t.666, align 8
  store i32 0, i32* %stack_var_-12, align 4, !insn.addr !9039
  store %fenv_t.666 { i32 0, i32 undef }, %fenv_t.666* %env_-8, align 8, !insn.addr !9040
  %0 = bitcast i32* %stack_var_-12 to %fenv_t*
  %1 = call i32 @fegetenv(%fenv_t* nonnull %0), !insn.addr !9041
  %2 = icmp eq i32 %1, 0, !insn.addr !9042
  %3 = icmp eq i1 %2, false, !insn.addr !9043
  br i1 %3, label %dec_label_pc_463b1f, label %dec_label_pc_463af4, !insn.addr !9043

dec_label_pc_463af4:                              ; preds = %dec_label_pc_463ad7
  %4 = ptrtoint %fenv_t* %penv to i32, !insn.addr !9044
  %5 = load i32, i32* %stack_var_-12, align 4, !insn.addr !9045
  %6 = getelementptr inbounds %fenv_t.666, %fenv_t.666* %env_-8, i32 0, i32 0, !insn.addr !9046
  %7 = load i32, i32* %6, align 8, !insn.addr !9046
  %8 = add i32 %4, 4, !insn.addr !9047
  %9 = inttoptr i32 %8 to i32*, !insn.addr !9047
  store i32 %7, i32* %9, align 4, !insn.addr !9047
  %10 = getelementptr inbounds %fenv_t, %fenv_t* %penv, i32 0, i32 0
  store i32 %5, i32* %10, align 4, !insn.addr !9048
  %11 = or i32 %5, 31, !insn.addr !9049
  store i32 %11, i32* %stack_var_-12, align 4, !insn.addr !9050
  %12 = call i32 @fesetenv(%fenv_t* nonnull %0), !insn.addr !9051
  %13 = icmp eq i32 %12, 0, !insn.addr !9052
  %14 = icmp eq i1 %13, false, !insn.addr !9053
  br i1 %14, label %dec_label_pc_463b1f, label %dec_label_pc_463b16, !insn.addr !9053

dec_label_pc_463b16:                              ; preds = %dec_label_pc_463af4
  %15 = call i32 @_clearfp(), !insn.addr !9054
  ret i32 0, !insn.addr !9055

dec_label_pc_463b1f:                              ; preds = %dec_label_pc_463af4, %dec_label_pc_463ad7
  ret i32 1, !insn.addr !9056
}

declare void @_CIlog10() local_unnamed_addr

declare double @ceil(double) local_unnamed_addr

define i32 @__strncnt(i8* %string, i32 %count) local_unnamed_addr {
dec_label_pc_4644ad:
  %eax.1.reg2mem = alloca i32, !insn.addr !9057
  %eax.0.reg2mem = alloca i32, !insn.addr !9057
  %0 = ptrtoint i8* %string to i32
  %1 = load i8, i8* %string, align 1, !insn.addr !9058
  %2 = icmp eq i8 %1, 0, !insn.addr !9058
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !9059
  store i32 0, i32* %eax.1.reg2mem, !insn.addr !9059
  br i1 %2, label %dec_label_pc_4644c7, label %dec_label_pc_4644bb, !insn.addr !9059

dec_label_pc_4644bb:                              ; preds = %dec_label_pc_4644ad, %dec_label_pc_4644c0
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %3 = icmp eq i32 %eax.0.reload, %count, !insn.addr !9060
  store i32 %count, i32* %eax.1.reg2mem, !insn.addr !9061
  br i1 %3, label %dec_label_pc_4644c7, label %dec_label_pc_4644c0, !insn.addr !9061

dec_label_pc_4644c0:                              ; preds = %dec_label_pc_4644bb
  %4 = add i32 %eax.0.reload, 1, !insn.addr !9062
  %5 = add i32 %4, %0, !insn.addr !9063
  %6 = inttoptr i32 %5 to i8*, !insn.addr !9063
  %7 = load i8, i8* %6, align 1, !insn.addr !9063
  %8 = icmp eq i8 %7, 0, !insn.addr !9063
  %9 = icmp eq i1 %8, false, !insn.addr !9064
  store i32 %4, i32* %eax.0.reg2mem, !insn.addr !9064
  store i32 %4, i32* %eax.1.reg2mem, !insn.addr !9064
  br i1 %9, label %dec_label_pc_4644bb, label %dec_label_pc_4644c7, !insn.addr !9064

dec_label_pc_4644c7:                              ; preds = %dec_label_pc_4644c0, %dec_label_pc_4644bb, %dec_label_pc_4644ad
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  ret i32 %eax.1.reload, !insn.addr !9065
}

declare void @__dcrt_lowio_initialize_console_output() local_unnamed_addr

define i32 @__dcrt_lowio_ensure_console_output_initialized() local_unnamed_addr {
dec_label_pc_464936:
  %ecx.0.in.reg2mem = alloca i8*, !insn.addr !9066
  %0 = load i8*, i8** @__dcrt_lowio_console_output_handle, align 4, !insn.addr !9066
  %1 = icmp eq i8* %0, inttoptr (i32 -2 to i8*), !insn.addr !9067
  %2 = icmp eq i1 %1, false, !insn.addr !9068
  store i8* %0, i8** %ecx.0.in.reg2mem, !insn.addr !9068
  br i1 %2, label %dec_label_pc_46494c, label %dec_label_pc_464941, !insn.addr !9068

dec_label_pc_464941:                              ; preds = %dec_label_pc_464936
  call void @__dcrt_lowio_initialize_console_output(), !insn.addr !9069
  %3 = load i8*, i8** @__dcrt_lowio_console_output_handle, align 4, !insn.addr !9070
  store i8* %3, i8** %ecx.0.in.reg2mem, !insn.addr !9070
  br label %dec_label_pc_46494c, !insn.addr !9070

dec_label_pc_46494c:                              ; preds = %dec_label_pc_464941, %dec_label_pc_464936
  %ecx.0.in.reload = load i8*, i8** %ecx.0.in.reg2mem
  %4 = icmp eq i8* %ecx.0.in.reload, inttoptr (i32 -1 to i8*), !insn.addr !9071
  %5 = icmp eq i1 %4, false, !insn.addr !9072
  %6 = zext i1 %5 to i32, !insn.addr !9072
  ret i32 %6, !insn.addr !9073
}

declare void @__dcrt_terminate_console_output() local_unnamed_addr

define i32 @__dcrt_write_console(i8* %lpBuffer, i32 %nNumberOfCharsToWrite, i32* %lpNumberOfCharsWritten) local_unnamed_addr {
dec_label_pc_464978:
  %esi.0.reg2mem = alloca i32, !insn.addr !9074
  %0 = load i8*, i8** @__dcrt_lowio_console_output_handle, align 4
  %1 = bitcast i8* %0 to i32*
  %2 = bitcast i8* %lpBuffer to i32*
  %3 = call i1 @WriteConsoleW(i32* %1, i32* %2, i32 %nNumberOfCharsToWrite, i32* %lpNumberOfCharsWritten, i32* null), !insn.addr !9075
  %4 = sext i1 %3 to i32, !insn.addr !9075
  %5 = icmp eq i1 %3, false, !insn.addr !9076
  %6 = icmp eq i1 %5, false, !insn.addr !9077
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !9077
  br i1 %6, label %dec_label_pc_4649c8, label %dec_label_pc_46499b, !insn.addr !9077

dec_label_pc_46499b:                              ; preds = %dec_label_pc_464978
  %7 = call i32 @GetLastError(), !insn.addr !9078
  %8 = icmp eq i32 %7, 6, !insn.addr !9079
  %9 = icmp eq i1 %8, false, !insn.addr !9080
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !9080
  br i1 %9, label %dec_label_pc_4649c8, label %dec_label_pc_4649a6, !insn.addr !9080

dec_label_pc_4649a6:                              ; preds = %dec_label_pc_46499b
  %10 = call i32 @function_40431d(), !insn.addr !9081
  call void @__dcrt_lowio_initialize_console_output(), !insn.addr !9082
  %11 = load i8*, i8** @__dcrt_lowio_console_output_handle, align 4
  %12 = bitcast i8* %11 to i32*
  %13 = inttoptr i32 %4 to i32*, !insn.addr !9083
  %14 = call i1 @WriteConsoleW(i32* %12, i32* %2, i32 %nNumberOfCharsToWrite, i32* %lpNumberOfCharsWritten, i32* %13), !insn.addr !9083
  %15 = sext i1 %14 to i32, !insn.addr !9083
  store i32 %15, i32* %esi.0.reg2mem, !insn.addr !9084
  br label %dec_label_pc_4649c8, !insn.addr !9084

dec_label_pc_4649c8:                              ; preds = %dec_label_pc_4649a6, %dec_label_pc_46499b, %dec_label_pc_464978
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  ret i32 %esi.0.reload, !insn.addr !9085
}

declare i8* @"type_info::`scalar deleting destructor'"(i32*) local_unnamed_addr

declare void @_aulldvrm() local_unnamed_addr

declare void @_allmul() local_unnamed_addr

define void @_allshl() local_unnamed_addr {
dec_label_pc_467960:
  ret void
}

define void @_aullshr() local_unnamed_addr {
dec_label_pc_467990:
  ret void
}

declare void @_alldvrm() local_unnamed_addr

define void @_alloca_probe_16() local_unnamed_addr {
dec_label_pc_467ca0:
  call void @_chkstk(), !insn.addr !9086
  ret void, !insn.addr !9086
}

declare void @_chkstk() local_unnamed_addr

define void @_ftol2_sse_excpt() local_unnamed_addr {
dec_label_pc_467d20:
  ret void
}

define void @strrchr_1(i8* %string, i8 %chr) local_unnamed_addr {
dec_label_pc_46a7e0:
  %eax.2.reg2mem = alloca i32, !insn.addr !9087
  %xmm0.0.reg2mem = alloca i128, !insn.addr !9087
  %edi.3.reg2mem = alloca i32, !insn.addr !9087
  %edi.2.reg2mem = alloca i32, !insn.addr !9087
  %edi.1.reg2mem = alloca i32, !insn.addr !9087
  %edi.0.reg2mem = alloca i32, !insn.addr !9087
  %eax.0.reg2mem = alloca i32, !insn.addr !9087
  %xmm2.0.reg2mem = alloca i128, !insn.addr !9087
  %0 = call i128 @__decompiler_undefined_function_6()
  %1 = load i32, i32* @__isa_available, align 4, !insn.addr !9088
  %2 = icmp eq i32 %1, 0, !insn.addr !9088
  br i1 %2, label %dec_label_pc_46a84d, label %dec_label_pc_46a7f1, !insn.addr !9089

dec_label_pc_46a7f1:                              ; preds = %dec_label_pc_46a7e0
  %3 = ptrtoint i8* %string to i32
  %4 = icmp eq i32 %1, 1
  %5 = zext i8 %chr to i32
  br i1 %4, label %dec_label_pc_46a7f6, label %dec_label_pc_46a86d, !insn.addr !9090

dec_label_pc_46a7f6:                              ; preds = %dec_label_pc_46a7f1
  %6 = mul i32 %5, 256, !insn.addr !9091
  %7 = or i32 %6, %5, !insn.addr !9092
  %8 = call i128 @__asm_movd(i32 %7), !insn.addr !9093
  %9 = call i128 @__asm_pshuflw(i128 %8, i32 0), !insn.addr !9094
  %10 = call i128 @__asm_movlhps(i128 %9, i128 %9), !insn.addr !9095
  %11 = and i32 %3, 15, !insn.addr !9096
  %12 = shl i32 -1, %11
  %13 = sub i32 %3, %11, !insn.addr !9097
  store i32 %12, i32* %eax.0.reg2mem, !insn.addr !9098
  store i32 %13, i32* %edi.0.reg2mem, !insn.addr !9098
  br label %dec_label_pc_46a81d, !insn.addr !9098

dec_label_pc_46a81d:                              ; preds = %dec_label_pc_46a81d, %dec_label_pc_46a7f6
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %xmm2.0.reload = load i128, i128* %xmm2.0.reg2mem
  %14 = inttoptr i32 %edi.0.reload to i128*, !insn.addr !9099
  %15 = load i128, i128* %14, align 4, !insn.addr !9099
  %16 = call i128 @__asm_movdqu.5(i128 %15), !insn.addr !9099
  %17 = call i128 @__asm_pxor(i128 %xmm2.0.reload, i128 %xmm2.0.reload), !insn.addr !9100
  %18 = call i128 @__asm_pcmpeqb(i128 %17, i128 %16), !insn.addr !9101
  %19 = call i128 @__asm_pcmpeqb(i128 %16, i128 %10), !insn.addr !9102
  %20 = call i32 @__asm_pmovmskb(i128 %18), !insn.addr !9103
  %21 = and i32 %20, %eax.0.reload, !insn.addr !9104
  %22 = icmp eq i32 %21, 0, !insn.addr !9104
  %23 = icmp eq i1 %22, false, !insn.addr !9105
  %24 = call i32 @__asm_pmovmskb(i128 %19)
  %25 = add i32 %edi.0.reload, 16, !insn.addr !9106
  store i128 %18, i128* %xmm2.0.reg2mem, !insn.addr !9105
  store i32 -1, i32* %eax.0.reg2mem, !insn.addr !9105
  store i32 %25, i32* %edi.0.reg2mem, !insn.addr !9105
  br i1 %23, label %dec_label_pc_46a84d, label %dec_label_pc_46a81d, !insn.addr !9105

dec_label_pc_46a84d:                              ; preds = %dec_label_pc_46a87f, %dec_label_pc_46a898, %dec_label_pc_46a8d3, %dec_label_pc_46a81d, %dec_label_pc_46a7e0, %dec_label_pc_46a8ae
  ret void, !insn.addr !9107

dec_label_pc_46a86d:                              ; preds = %dec_label_pc_46a7f1
  %26 = icmp eq i8 %chr, 0, !insn.addr !9108
  br i1 %26, label %dec_label_pc_46a8ae, label %dec_label_pc_46a875, !insn.addr !9109

dec_label_pc_46a875:                              ; preds = %dec_label_pc_46a86d
  %27 = and i32 %3, 15, !insn.addr !9110
  %28 = icmp eq i32 %27, 0, !insn.addr !9110
  store i32 %3, i32* %edi.1.reg2mem, !insn.addr !9111
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !9111
  br i1 %28, label %dec_label_pc_46a894, label %dec_label_pc_46a87f, !insn.addr !9111

dec_label_pc_46a87f:                              ; preds = %dec_label_pc_46a875, %dec_label_pc_46a88b
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %29 = inttoptr i32 %edi.1.reload to i8*, !insn.addr !9112
  %30 = load i8, i8* %29, align 1, !insn.addr !9112
  %31 = icmp eq i8 %30, 0, !insn.addr !9113
  br i1 %31, label %dec_label_pc_46a84d, label %dec_label_pc_46a88b, !insn.addr !9114

dec_label_pc_46a88b:                              ; preds = %dec_label_pc_46a87f
  %32 = add i32 %edi.1.reload, 1, !insn.addr !9115
  %33 = and i32 %32, 15, !insn.addr !9116
  %34 = icmp eq i32 %33, 0, !insn.addr !9116
  %35 = icmp eq i1 %34, false, !insn.addr !9117
  store i32 %32, i32* %edi.1.reg2mem, !insn.addr !9117
  store i32 %32, i32* %edi.2.reg2mem, !insn.addr !9117
  br i1 %35, label %dec_label_pc_46a87f, label %dec_label_pc_46a894, !insn.addr !9117

dec_label_pc_46a894:                              ; preds = %dec_label_pc_46a88b, %dec_label_pc_46a875
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %36 = call i128 @__asm_movd(i32 %5), !insn.addr !9118
  store i32 %edi.2.reload, i32* %edi.3.reg2mem, !insn.addr !9118
  br label %dec_label_pc_46a898, !insn.addr !9118

dec_label_pc_46a898:                              ; preds = %dec_label_pc_46a898, %dec_label_pc_46a894
  %edi.3.reload = load i32, i32* %edi.3.reg2mem
  %37 = add i32 %edi.3.reload, 16, !insn.addr !9119
  %38 = icmp eq i32 %37, 0, !insn.addr !9119
  %39 = inttoptr i32 %edi.3.reload to i128*, !insn.addr !9120
  %40 = load i128, i128* %39, align 4, !insn.addr !9120
  call void @__asm_pcmpistri(i128 %36, i128 %40, i32 64), !insn.addr !9120
  %41 = icmp eq i1 %38, false, !insn.addr !9121
  store i32 %37, i32* %edi.3.reg2mem, !insn.addr !9121
  br i1 %41, label %dec_label_pc_46a898, label %dec_label_pc_46a84d, !insn.addr !9121

dec_label_pc_46a8ae:                              ; preds = %dec_label_pc_46a86d
  %42 = and i32 %3, -16, !insn.addr !9122
  %43 = call i128 @__asm_pxor(i128 %0, i128 %0), !insn.addr !9123
  %44 = inttoptr i32 %42 to i128*, !insn.addr !9124
  %45 = load i128, i128* %44, align 16, !insn.addr !9124
  %46 = call i128 @__asm_pcmpeqb(i128 %43, i128 %45), !insn.addr !9124
  %47 = and i32 %3, 15, !insn.addr !9125
  %48 = shl i32 -1, %47
  %49 = call i32 @__asm_pmovmskb(i128 %46), !insn.addr !9126
  %50 = and i32 %49, %48, !insn.addr !9127
  %51 = icmp eq i32 %50, 0, !insn.addr !9127
  %52 = icmp eq i1 %51, false, !insn.addr !9128
  store i128 %46, i128* %xmm0.0.reg2mem, !insn.addr !9128
  store i32 %42, i32* %eax.2.reg2mem, !insn.addr !9128
  br i1 %52, label %dec_label_pc_46a84d, label %dec_label_pc_46a8d3, !insn.addr !9128

dec_label_pc_46a8d3:                              ; preds = %dec_label_pc_46a8ae, %dec_label_pc_46a8d3
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  %xmm0.0.reload = load i128, i128* %xmm0.0.reg2mem
  %53 = call i128 @__asm_pxor(i128 %xmm0.0.reload, i128 %xmm0.0.reload), !insn.addr !9129
  %54 = add i32 %eax.2.reload, 16, !insn.addr !9130
  %55 = inttoptr i32 %54 to i128*, !insn.addr !9130
  %56 = load i128, i128* %55, align 16, !insn.addr !9130
  %57 = call i128 @__asm_pcmpeqb(i128 %53, i128 %56), !insn.addr !9130
  %58 = call i32 @__asm_pmovmskb(i128 %57), !insn.addr !9131
  %59 = icmp eq i32 %58, 0, !insn.addr !9132
  store i128 %57, i128* %xmm0.0.reg2mem, !insn.addr !9133
  store i32 %54, i32* %eax.2.reg2mem, !insn.addr !9133
  br i1 %59, label %dec_label_pc_46a8d3, label %dec_label_pc_46a84d, !insn.addr !9133
}

declare void @strchr_1(i8*, i8) local_unnamed_addr

declare void @EnterCriticalSection(%_RTL_CRITICAL_SECTION*) local_unnamed_addr

declare void @LeaveCriticalSection(%_RTL_CRITICAL_SECTION*) local_unnamed_addr

declare i32 @UnhandledExceptionFilter(%_EXCEPTION_POINTERS*) local_unnamed_addr

declare i32 (%_EXCEPTION_POINTERS*)* @SetUnhandledExceptionFilter(i32 (%_EXCEPTION_POINTERS*)*) local_unnamed_addr

declare i32* @GetCurrentProcess() local_unnamed_addr

declare i1 @TerminateProcess(i32*, i32) local_unnamed_addr

declare i1 @IsProcessorFeaturePresent(i32) local_unnamed_addr

declare void @GetSystemTimeAsFileTime(%_FILETIME*) local_unnamed_addr

declare i1 @IsDebuggerPresent() local_unnamed_addr

declare i32* @GetModuleHandleW(i16*) local_unnamed_addr

declare i1 @WriteConsoleW(i32*, i32*, i32, i32*, i32*) local_unnamed_addr

declare i32 @GetLastError() local_unnamed_addr

declare void @SetLastError(i32) local_unnamed_addr

declare i32* @TlsGetValue(i32) local_unnamed_addr

declare i1 @TlsSetValue(i32, i32*) local_unnamed_addr

declare i1 @FreeLibrary(i32*) local_unnamed_addr

declare i32 ()* @GetProcAddress(i32*, i8*) local_unnamed_addr

declare i32* @LoadLibraryExW(i16*, i32*, i32) local_unnamed_addr

declare i1 @GetModuleHandleExW(i32, i16*, i32**) local_unnamed_addr

declare i1 @WriteFile(i32*, i32*, i32, i32*, %_OVERLAPPED*) local_unnamed_addr

declare i32 @CompareStringW(i32, i32, i16*, i32, i16*, i32) local_unnamed_addr

declare i32 @LCMapStringW(i32, i32, i16*, i32, i16*, i32) local_unnamed_addr

declare i1 @GetStringTypeW(i32, i16*, i32, i16*) local_unnamed_addr

declare i1 @IsValidCodePage(i32) local_unnamed_addr

declare i32 @GetACP() local_unnamed_addr

declare i32 @GetOEMCP() local_unnamed_addr

declare i1 @GetCPInfo(i32, %_cpinfo*) local_unnamed_addr

declare i32 @MultiByteToWideChar(i32, i32, i8*, i32, i16*, i32) local_unnamed_addr

declare i32 @WideCharToMultiByte(i32, i32, i16*, i32, i8*, i32, i8*, i1*) local_unnamed_addr

declare i16* @GetEnvironmentStringsW() local_unnamed_addr

declare i1 @FreeEnvironmentStringsW(i16*) local_unnamed_addr

declare i1 @SetEnvironmentVariableW(i16*, i16*) local_unnamed_addr

declare i32 @GetConsoleCP() local_unnamed_addr

declare i1 @GetConsoleMode(i32*, i32*) local_unnamed_addr

declare i1 @GetFileSizeEx(i32*, %_LARGE_INTEGER*) local_unnamed_addr

declare i1 @SetFilePointerEx(i32*, %_LARGE_INTEGER, %_LARGE_INTEGER*, i32) local_unnamed_addr

declare i32 @__asm_int3() local_unnamed_addr

declare void @__asm_int(i32) local_unnamed_addr

declare void @__asm_rep_stosb_memset(i8*, i8, i32) local_unnamed_addr

declare i128 @__asm_movd(i32) local_unnamed_addr

declare i128 @__asm_pshufd(i128, i32) local_unnamed_addr

declare void @__asm_movups(i128, i128) local_unnamed_addr

declare void @__asm_movdqa(i128, i128) local_unnamed_addr

declare void @__asm_movdqu(i128, i128) local_unnamed_addr

declare i128 @__asm_vpxor(i128, i128) local_unnamed_addr

declare i256 @__asm_vpcmpeqb(i256, i256) local_unnamed_addr

declare i32 @__asm_vpmovmskb(i256) local_unnamed_addr

declare i32 @__asm_vzeroupper() local_unnamed_addr

declare i128 @__asm_xorps(i128, i128) local_unnamed_addr

declare i128 @__asm_movups.3(i128) local_unnamed_addr

declare i128 @__asm_pcmpeqb(i128, i128) local_unnamed_addr

declare i32 @__asm_pmovmskb(i128) local_unnamed_addr

declare i32 @__asm_lfence(i8*, i32) local_unnamed_addr

declare i256 @__asm_vpcmpeqw(i256, i256) local_unnamed_addr

declare i128 @__asm_pcmpeqw(i128, i128) local_unnamed_addr

declare i128 @__asm_pshuflw(i128, i32) local_unnamed_addr

declare i128 @__asm_movlhps(i128, i128) local_unnamed_addr

declare i128 @__asm_movdqu.5(i128) local_unnamed_addr

declare i128 @__asm_pxor(i128, i128) local_unnamed_addr

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1) #0

declare void @__asm_pcmpistri(i128, i128, i32) local_unnamed_addr

declare void @__asm_rep_stosd_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @__asm_fnstenv() local_unnamed_addr

declare void @__asm_fldenv(i224) local_unnamed_addr

declare void @__asm_stmxcsr(i32) local_unnamed_addr

declare void @__asm_ldmxcsr(i32) local_unnamed_addr

declare i128 @__asm_movq(i64) local_unnamed_addr

declare void @__asm_rep_movsb_memcpy(i8*, i8*, i32) local_unnamed_addr

declare void @__asm_movq.7(i64, i128) local_unnamed_addr

declare i128 @__asm_movdqa.8(i128) local_unnamed_addr

declare i128 @__asm_palignr(i128, i128, i32) local_unnamed_addr

declare void @__asm_rep_movsd_memcpy(i8*, i8*, i32) local_unnamed_addr

declare i32 @__asm_fnclex() local_unnamed_addr

declare i32 @__readfsdword(i32) local_unnamed_addr

declare void @__writefsdword(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_2() local_unnamed_addr

declare i128 @__decompiler_undefined_function_6() local_unnamed_addr

declare i1 @__decompiler_undefined_function_7() local_unnamed_addr

declare i8 @__decompiler_undefined_function_8() local_unnamed_addr

declare i256 @__decompiler_undefined_function_24() local_unnamed_addr

attributes #0 = { nounwind readnone speculatable }
