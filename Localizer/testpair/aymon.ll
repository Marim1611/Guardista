
define i32 @function_401091(i32 %arg1) local_unnamed_addr {
dec_label_pc_401091:
  %0 = call i32 @__acrt_DownlevelLocaleNameToLCID(i16* bitcast (i32* @80 to i16*)), !insn.addr !0
  ret i32 %0, !insn.addr !0
}

define i32 @function_4010c3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_4010c3:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_p"(i32* nonnull @80), !insn.addr !1
  %1 = sext i1 %0 to i32, !insn.addr !1
  ret i32 %1, !insn.addr !1
}

define i32 @function_4010e1() local_unnamed_addr {
dec_label_pc_4010e1:
  %0 = call i8** @__dcrt_get_or_create_narrow_environment_nolock(), !insn.addr !2
  %1 = ptrtoint i8** %0 to i32, !insn.addr !2
  ret i32 %1, !insn.addr !2
}

define i32 @function_4011c2(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i16* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_4011c2:
  %0 = call i32 @__acrt_GetStringTypeA(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3
  ret i32 %0, !insn.addr !3
}

define i32 @function_4011db(i32 %arg1) local_unnamed_addr {
dec_label_pc_4011db:
  call void @__acrt_lowio_unlock_fh(i32 ptrtoint (i32* @80 to i32)), !insn.addr !4
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !4
}

define i32 @function_401221() local_unnamed_addr {
dec_label_pc_401221:
  %0 = call i32 @"__crt_mbstring::__c32rtomb_utf8"(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), %_Mbstatet* bitcast (i32* @80 to %_Mbstatet*)), !insn.addr !5
  ret i32 %0, !insn.addr !5
}

define i32 @function_40124e() local_unnamed_addr {
dec_label_pc_40124e:
  %0 = call i32 @__acrt_stdio_flush_and_write_narrow_nolock(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6
  ret i32 %0, !insn.addr !6
}

define i32 @function_40125d() local_unnamed_addr {
dec_label_pc_40125d:
  call void @_freea_crt(i8* bitcast (i32* @80 to i8*)), !insn.addr !7
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !7
}

define i32 @function_40132f() local_unnamed_addr {
dec_label_pc_40132f:
  call void @__acrt_lowio_lock_fh(i32 ptrtoint (i32* @80 to i32)), !insn.addr !8
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !8
}

define i32 @"___acrt_LCMapStringEx@36"(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_401393:
  %0 = call i32 @__acrt_LCMapStringEx(i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !9
  ret i32 %0, !insn.addr !9
}

define i32 @function_4013de() {
dec_label_pc_4013de:
  %0 = call i8 @"charNode::getLastChar"(i32* nonnull @80), !insn.addr !10
  %1 = sext i8 %0 to i32, !insn.addr !10
  ret i32 %1, !insn.addr !10
}

define i32 @function_401500() local_unnamed_addr {
dec_label_pc_401500:
  call void @_aulldvrm(), !insn.addr !11
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !11
}

define i32 @"___acrt_FlsSetValue@8"() local_unnamed_addr {
dec_label_pc_401569:
  %0 = call i32 @__acrt_FlsSetValue(i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*)), !insn.addr !12
  ret i32 %0, !insn.addr !12
}

define i32 @function_40158c() {
dec_label_pc_40158c:
  %0 = call i32 @"DNameStatusNode::raw_length"(i32* nonnull @80), !insn.addr !13
  ret i32 %0, !insn.addr !13
}

define i32 @function_4015c3() local_unnamed_addr {
dec_label_pc_4015c3:
  %0 = call i1 @"__crt_strtox::is_overflow_condition<unsigned long>"(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !14
  %1 = sext i1 %0 to i32, !insn.addr !14
  ret i32 %1, !insn.addr !14
}

define i32 @function_40169f() local_unnamed_addr {
dec_label_pc_40169f:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_precision"(i32* nonnull @80), !insn.addr !15
  %1 = sext i1 %0 to i32, !insn.addr !15
  ret i32 %1, !insn.addr !15
}

define i32 @function_401712() local_unnamed_addr {
dec_label_pc_401712:
  %0 = call i32 @__acrt_MultiByteToWideChar(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !16
  ret i32 %0, !insn.addr !16
}

define i32 @function_401730() local_unnamed_addr {
dec_label_pc_401730:
  call void @_aullshr(), !insn.addr !17
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !17
}

define i32 @function_40174e() local_unnamed_addr {
dec_label_pc_40174e:
  call void @strrchr_1(i8* bitcast (i32* @80 to i8*), i8 ptrtoint (i32* @80 to i8)), !insn.addr !18
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !18
}

define i32 @function_4017d5(i32 %arg1) local_unnamed_addr {
dec_label_pc_4017d5:
  call void @__acrt_unlock(i32 ptrtoint (i32* @80 to i32)), !insn.addr !19
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !19
}

define i32 @function_40180c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_40180c:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_Z"(i32* nonnull @80), !insn.addr !20
  %1 = sext i1 %0 to i32, !insn.addr !20
  ret i32 %1, !insn.addr !20
}

define i32 @function_401852(i32 %arg1) local_unnamed_addr {
dec_label_pc_401852:
  call void @"__crt_stdio_output::output_adapter_common<char,__crt_stdio_output::stream_output_adapter<char> >::write_string_impl"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, i32* nonnull @80), !insn.addr !21
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !21
}

define i32 @function_40190b() {
dec_label_pc_40190b:
  %0 = call i32 @"pDNameNode::raw_length"(i32* nonnull @80), !insn.addr !22
  ret i32 %0, !insn.addr !22
}

define i32 @function_401942() local_unnamed_addr {
dec_label_pc_401942:
  %0 = call i32 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::find_next_state"(i32* nonnull @80, i8 ptrtoint (i32* @80 to i8), i32 ptrtoint (i32* @80 to i32)), !insn.addr !23
  ret i32 %0, !insn.addr !23
}

define i32 @function_40196a() local_unnamed_addr {
dec_label_pc_40196a:
  call void @strchr_1(i8* bitcast (i32* @80 to i8*), i8 ptrtoint (i32* @80 to i8)), !insn.addr !24
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !24
}

define i32 @function_401974(i32 %arg1) local_unnamed_addr {
dec_label_pc_401974:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_c_tchar"(i32* nonnull @80, i8 ptrtoint (i32* @80 to i8)), !insn.addr !25
  %1 = sext i1 %0 to i32, !insn.addr !25
  ret i32 %1, !insn.addr !25
}

define i32 @function_401997(i32 %arg1) local_unnamed_addr {
dec_label_pc_401997:
  call void @__acrt_stdio_allocate_buffer_nolock(i32 ptrtoint (i32* @80 to i32)), !insn.addr !26
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !26
}

define i32 @function_4019ce() {
dec_label_pc_4019ce:
  %0 = call i32 @"pcharNode::length"(i32* nonnull @80), !insn.addr !27
  ret i32 %0, !insn.addr !27
}

define i32 @function_401a00(i32 %arg1) local_unnamed_addr {
dec_label_pc_401a00:
  call void @__acrt_locale_free_numeric(%lconv* bitcast (i32* @80 to %lconv*)), !insn.addr !28
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !28
}

define i32 @function_401a64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_401a64:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_s"(i32* nonnull @80), !insn.addr !29
  %1 = sext i1 %0 to i32, !insn.addr !29
  ret i32 %1, !insn.addr !29
}

define i32 @function_401afa() {
dec_label_pc_401afa:
  %0 = call i8* @"pcharNode::getString"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*)), !insn.addr !30
  %1 = ptrtoint i8* %0 to i32, !insn.addr !30
  ret i32 %1, !insn.addr !30
}

define i32 @function_401b4f(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_401b4f:
  call void @__SEH_prolog4(), !insn.addr !31
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !31
}

define i32 @function_401b5e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_401b5e:
  call void @"__crt_stdio_output::force_decimal_point"(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !32
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !32
}

define i32 @function_401cb2() {
dec_label_pc_401cb2:
  %0 = call i8* @"std::exception::what"(i32* nonnull @80), !insn.addr !33
  %1 = ptrtoint i8* %0 to i32, !insn.addr !33
  ret i32 %1, !insn.addr !33
}

define i32 @function_401d52(i32 %arg1) local_unnamed_addr {
dec_label_pc_401d52:
  %0 = call i32 @"__crt_mbstring::return_illegal_sequence"(%_Mbstatet* bitcast (i32* @80 to %_Mbstatet*)), !insn.addr !34
  ret i32 %0, !insn.addr !34
}

define i32 @function_401d75(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_401d75:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_o"(i32* nonnull @80), !insn.addr !35
  %1 = sext i1 %0 to i32, !insn.addr !35
  ret i32 %1, !insn.addr !35
}

define i32 @function_401d89() local_unnamed_addr {
dec_label_pc_401d89:
  call void @_allmul(), !insn.addr !36
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !36
}

define i32 @"?to_integer_size@__crt_stdio_output@@YAIW4length_modifier@1@@Z"(i32 %arg1) local_unnamed_addr {
dec_label_pc_401e51:
  %0 = call i32 @"__crt_stdio_output::to_integer_size"(i32 ptrtoint (i32* @80 to i32)), !insn.addr !37
  ret i32 %0, !insn.addr !37
}

define i32 @function_401f5f() local_unnamed_addr {
dec_label_pc_401f5f:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_type"(i32* nonnull @80), !insn.addr !38
  %1 = sext i1 %0 to i32, !insn.addr !38
  ret i32 %1, !insn.addr !38
}

define i32 @function_401fbe(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_401fbe:
  %0 = call i32 @__acrt_CompareStringA(i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !39
  ret i32 %0, !insn.addr !39
}

define i32 @function_401fc8(i32 %arg1) local_unnamed_addr {
dec_label_pc_401fc8:
  call void @__acrt_fenv_set_status(i32 ptrtoint (i32* @80 to i32)), !insn.addr !40
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !40
}

define i32 @function_40202c() local_unnamed_addr {
dec_label_pc_40202c:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_size"(i32* nonnull @80), !insn.addr !41
  %1 = sext i1 %0 to i32, !insn.addr !41
  ret i32 %1, !insn.addr !41
}

define i32 @function_40212b() local_unnamed_addr {
dec_label_pc_40212b:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_width"(i32* nonnull @80), !insn.addr !42
  %1 = sext i1 %0 to i32, !insn.addr !42
  ret i32 %1, !insn.addr !42
}

define i32 @function_40218f() local_unnamed_addr {
dec_label_pc_40218f:
  %0 = call i8* @_recalloc_base(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !43
  %1 = ptrtoint i8* %0 to i32, !insn.addr !43
  ret i32 %1, !insn.addr !43
}

define i32 @function_402243(i32 %arg1) local_unnamed_addr {
dec_label_pc_402243:
  call void @"__crt_strtox::c_string_character_source<char>::unget"(i32* nonnull @80, i8 ptrtoint (i32* @80 to i8)), !insn.addr !44
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !44
}

define i32 @function_40224d() {
dec_label_pc_40224d:
  %0 = call i8* @"DNameStatusNode::getString"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*)), !insn.addr !45
  %1 = ptrtoint i8* %0 to i32, !insn.addr !45
  ret i32 %1, !insn.addr !45
}

define i32 @function_4022c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_4022c0:
  call void @__acrt_add_locale_ref(i32 ptrtoint (i32* @80 to i32)), !insn.addr !46
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !46
}

define i32 @function_4023c9(i32 %arg1) local_unnamed_addr {
dec_label_pc_4023c9:
  %0 = call i32 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::process"(i32* nonnull @80), !insn.addr !47
  ret i32 %0, !insn.addr !47
}

define i32 @function_402441(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_402441:
  %0 = call i8* @"__crt_stdio_output::formatting_buffer::scratch_data<char>"(i32* nonnull @80), !insn.addr !48
  %1 = ptrtoint i8* %0 to i32, !insn.addr !48
  ret i32 %1, !insn.addr !48
}

define i32 @function_40245a() local_unnamed_addr {
dec_label_pc_40245a:
  call void @good(), !insn.addr !49
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !49
}

define i32 @function_4024c8() local_unnamed_addr {
dec_label_pc_4024c8:
  %0 = call i32 @_free_osfhnd(i32 ptrtoint (i32* @80 to i32)), !insn.addr !50
  ret i32 %0, !insn.addr !50
}

define i32 @function_40250e() local_unnamed_addr {
dec_label_pc_40250e:
  call void @"__crt_win32_buffer<wchar_t,__crt_win32_buffer_internal_dynamic_resizing>::_deallocate"(i32* nonnull @80), !insn.addr !51
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !51
}

define i32 @function_40263a(i32 %arg1) local_unnamed_addr {
dec_label_pc_40263a:
  call void @__acrt_locale_free_monetary(%lconv* bitcast (i32* @80 to %lconv*)), !insn.addr !52
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !52
}

define i32 @___acrt_stdio_free_buffer_nolock(i32 %arg1) local_unnamed_addr {
dec_label_pc_402680:
  call void @__acrt_stdio_free_buffer_nolock(i32 ptrtoint (i32* @80 to i32)), !insn.addr !53
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !53
}

define i32 @function_402725() local_unnamed_addr {
dec_label_pc_402725:
  call void @bad(), !insn.addr !54
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !54
}

define i32 @__invoke_watson() local_unnamed_addr {
dec_label_pc_402798:
  call void @_invoke_watson(i16* bitcast (i32* @80 to i16*), i16* bitcast (i32* @80 to i16*), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !55
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !55
}

define i32 @function_402856() {
dec_label_pc_402856:
  %0 = call i32 @"pcharNode::raw_length"(i32* nonnull @80), !insn.addr !56
  ret i32 %0, !insn.addr !56
}

define i32 @function_4028a1() {
dec_label_pc_4028a1:
  %0 = call i8* @"charNode::getString"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*)), !insn.addr !57
  %1 = ptrtoint i8* %0 to i32, !insn.addr !57
  ret i32 %1, !insn.addr !57
}

define i32 @"___acrt_FlsGetValue@4"(i32 %arg1) local_unnamed_addr {
dec_label_pc_4028a6:
  %0 = call i8* @__acrt_FlsGetValue(i32 ptrtoint (i32* @80 to i32)), !insn.addr !58
  %1 = ptrtoint i8* %0 to i32, !insn.addr !58
  ret i32 %1, !insn.addr !58
}

define i32 @function_4028c9(i32* %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_4028c9:
  %0 = call i32 @__dcrt_write_console(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32* nonnull @80), !insn.addr !59
  ret i32 %0, !insn.addr !59
}

define i32 @function_402982() {
dec_label_pc_402982:
  %0 = call i8* @"std::bad_exception::`scalar deleting destructor'"(i32* nonnull @80), !insn.addr !60
  %1 = ptrtoint i8* %0 to i32, !insn.addr !60
  ret i32 %1, !insn.addr !60
}

define i32 @function_402991(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_402991:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_a"(i32* nonnull @80), !insn.addr !61
  %1 = sext i1 %0 to i32, !insn.addr !61
  ret i32 %1, !insn.addr !61
}

define i32 @function_402a40() {
dec_label_pc_402a40:
  %0 = call i32 @"pairNode::raw_length"(i32* nonnull @80), !insn.addr !62
  ret i32 %0, !insn.addr !62
}

define i32 @function_402ae5() local_unnamed_addr {
dec_label_pc_402ae5:
  %0 = call i32 @__acrt_get_utf8_acp_compatibility_codepage(), !insn.addr !63
  ret i32 %0, !insn.addr !63
}

define i32 @function_402b53(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_402b53:
  %0 = call i32 @__acrt_LocaleNameToLCID(i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !64
  ret i32 %0, !insn.addr !64
}

define i32 @function_402b9e(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_402b9e:
  %0 = call i32 @__acrt_fp_strflt_to_string(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), %_strflt* bitcast (i32* @80 to %_strflt*)), !insn.addr !65
  ret i32 %0, !insn.addr !65
}

define i32 @function_402bee(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_402bee:
  %0 = call i1 @"__crt_stdio_output::stream_output_adapter<char>::validate"(i32* nonnull @80), !insn.addr !66
  %1 = sext i1 %0 to i32, !insn.addr !66
  ret i32 %1, !insn.addr !66
}

define i32 @function_402bf3(i32 %arg1) local_unnamed_addr {
dec_label_pc_402bf3:
  %0 = call i32 @"__crt_win32_buffer<wchar_t,__crt_win32_buffer_internal_dynamic_resizing>::allocate"(i32* nonnull @80, i32 ptrtoint (i32* @80 to i32)), !insn.addr !67
  ret i32 %0, !insn.addr !67
}

define i32 @function_402c20() local_unnamed_addr {
dec_label_pc_402c20:
  call void @"__crt_stdio_output::write_multiple_characters<__crt_stdio_output::stream_output_adapter<char>,char>"(i32* nonnull @80, i8 ptrtoint (i32* @80 to i8), i32 ptrtoint (i32* @80 to i32), i32* nonnull @80), !insn.addr !68
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !68
}

define i32 @function_402c2f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_402c2f:
  %0 = call i1 @"__crt_strtox::c_string_character_source<char>::validate"(i32* nonnull @80), !insn.addr !69
  %1 = sext i1 %0 to i32, !insn.addr !69
  ret i32 %1, !insn.addr !69
}

define i32 @function_402c9d(i32 %arg1, i32 %arg2, i32 %arg3, %_Mbstatet.712* %arg4) local_unnamed_addr {
dec_label_pc_402c9d:
  %0 = call i32 @"__crt_mbstring::__mbrtowc_utf8"(i16* bitcast (i32* @80 to i16*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), %_Mbstatet* bitcast (i32* @80 to %_Mbstatet*)), !insn.addr !70
  ret i32 %0, !insn.addr !70
}

define i32 @function_402cb1() local_unnamed_addr {
dec_label_pc_402cb1:
  call void @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_integer_parse_into_buffer<unsigned int>"(i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i1 ptrtoint (i32* @80 to i1)), !insn.addr !71
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !71
}

define i32 @function_402cca() {
dec_label_pc_402cca:
  %0 = call i8 @"pairNode::getLastChar"(i32* nonnull @80), !insn.addr !72
  %1 = sext i8 %0 to i32, !insn.addr !72
  ret i32 %1, !insn.addr !72
}

define i32 @function_402ccf() {
dec_label_pc_402ccf:
  %0 = call i8 @"pcharNode::getLastChar"(i32* nonnull @80), !insn.addr !73
  %1 = sext i8 %0 to i32, !insn.addr !73
  ret i32 %1, !insn.addr !73
}

define i32 @function_402d5b(i32* %arg1) local_unnamed_addr {
dec_label_pc_402d5b:
  %0 = call i32* @"__crt_unique_heap_ptr<char,__crt_internal_free_policy>::operator="(i32* nonnull @80, i32* nonnull @80), !insn.addr !74
  %1 = ptrtoint i32* %0 to i32, !insn.addr !74
  ret i32 %1, !insn.addr !74
}

define i32 @function_402d88(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_402d88:
  call void @"__crt_stdio_output::output_adapter_data<char,__crt_stdio_output::stream_output_adapter<char> >::output_adapter_data<char,__crt_stdio_output::stream_output_adapter<char> >"(i32* nonnull @80, i32* nonnull @80, i64 ptrtoint (i32* @80 to i64), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*)), !insn.addr !75
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !75
}

define i32 @function_402e69() local_unnamed_addr {
dec_label_pc_402e69:
  call void @_allshl(), !insn.addr !76
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !76
}

define i32 @function_402ed2(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_402ed2:
  %0 = call i32 @__acrt_fp_format(double* bitcast (i32* @80 to double*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i64 ptrtoint (i32* @80 to i64), i32 ptrtoint (i32* @80 to i32)), !insn.addr !77
  ret i32 %0, !insn.addr !77
}

define i32 @function_402f13() {
dec_label_pc_402f13:
  %0 = call i32 @"pDNameNode::length"(i32* nonnull @80), !insn.addr !78
  ret i32 %0, !insn.addr !78
}

define i32 @function_402f59() local_unnamed_addr {
dec_label_pc_402f59:
  %0 = call i32 @__acrt_stdio_flush_nolock(i32 ptrtoint (i32* @80 to i32)), !insn.addr !79
  ret i32 %0, !insn.addr !79
}

define i32 @function_402f7c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_402f7c:
  %0 = call i1 @__acrt_stdio_begin_temporary_buffering_nolock(i32 ptrtoint (i32* @80 to i32)), !insn.addr !80
  %1 = sext i1 %0 to i32, !insn.addr !80
  ret i32 %1, !insn.addr !80
}

define i32 @function_402fc2() {
dec_label_pc_402fc2:
  %0 = call i8* @"pairNode::getString"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*)), !insn.addr !81
  %1 = ptrtoint i8* %0 to i32, !insn.addr !81
  ret i32 %1, !insn.addr !81
}

define i32 @function_402fea() local_unnamed_addr {
dec_label_pc_402fea:
  call void @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_integer_parse_into_buffer<unsigned __int64>"(i32* nonnull @80, i64 ptrtoint (i32* @80 to i64), i32 ptrtoint (i32* @80 to i32), i1 ptrtoint (i32* @80 to i1)), !insn.addr !82
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !82
}

define i32 @___acrt_getptd() local_unnamed_addr {
dec_label_pc_40300d:
  %0 = call i32 @__acrt_getptd(), !insn.addr !83
  ret i32 %0, !insn.addr !83
}

define i32 @function_40308a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_40308a:
  call void @__acrt_update_locale_info(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !84
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !84
}

define i32 @function_4030d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_4030d0:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_n"(i32* nonnull @80), !insn.addr !85
  %1 = sext i1 %0 to i32, !insn.addr !85
  ret i32 %1, !insn.addr !85
}

define i32 @function_4030e9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_4030e9:
  %0 = call i32 @__acrt_fp_classify(double* bitcast (i32* @80 to double*)), !insn.addr !86
  ret i32 %0, !insn.addr !86
}

define i32 @function_40314d(i32 %arg1) local_unnamed_addr {
dec_label_pc_40314d:
  %0 = call i8* @"__crt_fast_encode_pointer<void *>"(i8* bitcast (i32* @80 to i8*)), !insn.addr !87
  %1 = ptrtoint i8* %0 to i32, !insn.addr !87
  ret i32 %1, !insn.addr !87
}

define i32 @function_403210() local_unnamed_addr {
dec_label_pc_403210:
  call void @"__crt_stdio_output::formatting_buffer::~formatting_buffer"(i32* nonnull @80), !insn.addr !88
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !88
}

define i32 @function_403233() local_unnamed_addr {
dec_label_pc_403233:
  %0 = call i32 @__acrt_CompareStringEx(i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !89
  ret i32 %0, !insn.addr !89
}

define i32 @function_4032a6() local_unnamed_addr {
dec_label_pc_4032a6:
  %0 = call i1 @"__crt_stdio_output::is_wide_character_specifier<char>"(i64 ptrtoint (i32* @80 to i64), i8 ptrtoint (i32* @80 to i8), i32 ptrtoint (i32* @80 to i32)), !insn.addr !90
  %1 = sext i1 %0 to i32, !insn.addr !90
  ret i32 %1, !insn.addr !90
}

define i32 @function_4032b0() local_unnamed_addr {
dec_label_pc_4032b0:
  %0 = call i64 @"__crt_strtox::divide"(%"__crt_strtox::big_integer"* bitcast (i32* @80 to %"__crt_strtox::big_integer"*), %"__crt_strtox::big_integer"* bitcast (i32* @80 to %"__crt_strtox::big_integer"*)), !insn.addr !91
  %1 = trunc i64 %0 to i32, !insn.addr !91
  ret i32 %1, !insn.addr !91
}

define i32 @function_40332d() local_unnamed_addr {
dec_label_pc_40332d:
  %0 = call i32 @__acrt_fenv_get_status(), !insn.addr !92
  ret i32 %0, !insn.addr !92
}

define i32 @function_40333c() local_unnamed_addr {
dec_label_pc_40333c:
  %0 = call i1 @__acrt_initialize_multibyte(), !insn.addr !93
  %1 = sext i1 %0 to i32, !insn.addr !93
  ret i32 %1, !insn.addr !93
}

define i32 @function_403387() local_unnamed_addr {
dec_label_pc_403387:
  %0 = call i32 @__acrt_AreFileApisANSI(), !insn.addr !94
  ret i32 %0, !insn.addr !94
}

define i32 @function_4033fa() {
dec_label_pc_4033fa:
  %0 = call i32 @"pairNode::length"(i32* nonnull @80), !insn.addr !95
  ret i32 %0, !insn.addr !95
}

define i32 @"@_guard_check_icall_nop@4"() local_unnamed_addr {
dec_label_pc_403495:
  call void @_guard_check_icall_nop(i32 ptrtoint (i32* @80 to i32)), !insn.addr !96
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !96
}

define i32 @function_4034c2() local_unnamed_addr {
dec_label_pc_4034c2:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::write_stored_string_tchar"(i32* nonnull @80, i8 ptrtoint (i32* @80 to i8)), !insn.addr !97
  %1 = sext i1 %0 to i32, !insn.addr !97
  ret i32 %1, !insn.addr !97
}

define i32 @function_4034f9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4034f9:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_integer"(i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i1 ptrtoint (i32* @80 to i1)), !insn.addr !98
  %1 = sext i1 %0 to i32, !insn.addr !98
  ret i32 %1, !insn.addr !98
}

define i32 @function_4034fe() local_unnamed_addr {
dec_label_pc_4034fe:
  call void @__acrt_errno_map_os_error(i32 ptrtoint (i32* @80 to i32)), !insn.addr !99
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !99
}

define i32 @function_403521(i32 %arg1, i32 %arg2, i32 %arg3, %fenv_t %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_403521:
  call void @__acrt_fenv_set_control(i32 ptrtoint (i32* @80 to i32)), !insn.addr !100
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !100
}

define i32 @function_403580() local_unnamed_addr {
dec_label_pc_403580:
  %0 = call i1 @"__crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>"(i32* nonnull @80, i32 ptrtoint (i32* @80 to i32)), !insn.addr !101
  %1 = sext i1 %0 to i32, !insn.addr !101
  ret i32 %1, !insn.addr !101
}

define i32 @function_40358a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_40358a:
  %0 = call i32 @__dcrt_lowio_ensure_console_output_initialized(), !insn.addr !102
  ret i32 %0, !insn.addr !102
}

define i32 @function_40364d() {
dec_label_pc_40364d:
  %0 = call i8 @"pDNameNode::getLastChar"(i32* nonnull @80), !insn.addr !103
  %1 = sext i8 %0 to i32, !insn.addr !103
  ret i32 %1, !insn.addr !103
}

define i32 @function_403661() local_unnamed_addr {
dec_label_pc_403661:
  %0 = call i32 @"__crt_mbstring::__mbrtoc32_utf8"(i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), %_Mbstatet* bitcast (i32* @80 to %_Mbstatet*)), !insn.addr !104
  ret i32 %0, !insn.addr !104
}

define i32 @function_403733() local_unnamed_addr {
dec_label_pc_403733:
  %0 = call i32 @"__acrt_mbs_to_wcs_cp<__crt_win32_buffer_internal_dynamic_resizing>"(i8* bitcast (i32* @80 to i8*), i32* nonnull @80, i32 ptrtoint (i32* @80 to i32)), !insn.addr !105
  ret i32 %0, !insn.addr !105
}

define i32 @function_40381e(i32 %arg1) local_unnamed_addr {
dec_label_pc_40381e:
  call void @_crt_debugger_hook(i32 ptrtoint (i32* @80 to i32)), !insn.addr !106
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !106
}

define i32 @function_403882() local_unnamed_addr {
dec_label_pc_403882:
  call void @__acrt_set_locale_changed(), !insn.addr !107
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !107
}

define i32 @function_403909(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_403909:
  %0 = call i32 @"__crt_strtox::make_c_string_character_source<char,char * *>"(i8* bitcast (i32* @80 to i8*), i8** bitcast (i32* @80 to i8**)), !insn.addr !108
  ret i32 %0, !insn.addr !108
}

define i32 @function_403931() {
dec_label_pc_403931:
  %0 = call i8* @"pDNameNode::getString"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*)), !insn.addr !109
  %1 = ptrtoint i8* %0 to i32, !insn.addr !109
  ret i32 %1, !insn.addr !109
}

define i32 @function_4039ae() local_unnamed_addr {
dec_label_pc_4039ae:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_flag"(i32* nonnull @80), !insn.addr !110
  %1 = sext i1 %0 to i32, !insn.addr !110
  ret i32 %1, !insn.addr !110
}

define i32 @function_4039e5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4039e5:
  call void @_CIlog10(), !insn.addr !111
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !111
}

define i32 @function_403a12(i32 %arg1) local_unnamed_addr {
dec_label_pc_403a12:
  call void @__acrt_locale_free_lc_time_if_unreferenced(%__crt_lc_time_data* bitcast (i32* @80 to %__crt_lc_time_data*)), !insn.addr !112
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !112
}

define i32 @function_403a3f(i32 %arg1) local_unnamed_addr {
dec_label_pc_403a3f:
  call void @__acrt_release_locale_ref(i32 ptrtoint (i32* @80 to i32)), !insn.addr !113
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !113
}

define i32 @function_403a76(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_403a76:
  %0 = call i32 @__acrt_SetEnvironmentVariableA(i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*)), !insn.addr !114
  ret i32 %0, !insn.addr !114
}

define i32 @function_403b4d(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_403b4d:
  call void @__acrt_fltout(%_CRT_DOUBLE.739 { double bitcast (i64 ptrtoint (i32* @80 to i64) to double) }, i32 ptrtoint (i32* @80 to i32), %_strflt* bitcast (i32* @80 to %_strflt*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !115
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !115
}

define i32 @function_403bde() local_unnamed_addr {
dec_label_pc_403bde:
  %0 = call i32 @__acrt_getptd_head(), !insn.addr !116
  ret i32 %0, !insn.addr !116
}

define i32 @function_403be3() local_unnamed_addr {
dec_label_pc_403be3:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_normal"(i32* nonnull @80), !insn.addr !117
  %1 = sext i1 %0 to i32, !insn.addr !117
  ret i32 %1, !insn.addr !117
}

define i32 @function_403c47() local_unnamed_addr {
dec_label_pc_403c47:
  %0 = call i32 @__dcrt_set_variable_in_narrow_environment_nolock(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !118
  ret i32 %0, !insn.addr !118
}

define i32 @function_403d3c() local_unnamed_addr {
dec_label_pc_403d3c:
  %0 = call i32* @__acrt_get_sigabrt_handler(), !insn.addr !119
  %1 = ptrtoint i32* %0 to i32, !insn.addr !119
  ret i32 %1, !insn.addr !119
}

define i32 @function_403d78(i32 %arg1) local_unnamed_addr {
dec_label_pc_403d78:
  call void @"_LocaleUpdate::_LocaleUpdate"(i32* nonnull @80, i32 ptrtoint (i32* @80 to i32)), !insn.addr !120
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !120
}

define i32 @function_403dfa() local_unnamed_addr {
dec_label_pc_403dfa:
  %0 = call i8* @__dcrt_get_narrow_environment_from_os(), !insn.addr !121
  %1 = ptrtoint i8* %0 to i32, !insn.addr !121
  ret i32 %1, !insn.addr !121
}

define i32 @function_403e4a() local_unnamed_addr {
dec_label_pc_403e4a:
  %0 = call i32 @"__crt_stdio_output::formatting_buffer::count<char>"(i32* nonnull @80), !insn.addr !122
  ret i32 %0, !insn.addr !122
}

define i32 @function_403e6d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_403e6d:
  call void @__acrt_stdio_end_temporary_buffering_nolock(i1 ptrtoint (i32* @80 to i1), i32 ptrtoint (i32* @80 to i32)), !insn.addr !123
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !123
}

define i32 @function_403ea4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_403ea4:
  call void @__acrt_call_reportfault(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !124
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !124
}

define i32 @function_403f8f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_403f8f:
  call void @"__crt_stdio_output::crop_zeroes"(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !125
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !125
}

define i32 @function_403fc6() local_unnamed_addr {
dec_label_pc_403fc6:
  %0 = call i32 @__acrt_fenv_get_control(), !insn.addr !126
  ret i32 %0, !insn.addr !126
}

define i32 @function_403fe4() {
dec_label_pc_403fe4:
  %0 = call i8* @"std::exception::`scalar deleting destructor'"(i32* nonnull @80), !insn.addr !127
  %1 = ptrtoint i8* %0 to i32, !insn.addr !127
  ret i32 %1, !insn.addr !127
}

define i32 @function_403ffd(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_403ffd:
  call void @"__crt_stdio_output::common_data<char>::common_data<char>"(i32* nonnull @80), !insn.addr !128
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !128
}

define i32 @function_40407a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_40407a:
  %0 = call i32 @_setmbcp_nolock(i32 ptrtoint (i32* @80 to i32), %__crt_multibyte_data* bitcast (i32* @80 to %__crt_multibyte_data*)), !insn.addr !129
  ret i32 %0, !insn.addr !129
}

define i32 @function_4040b6() local_unnamed_addr {
dec_label_pc_4040b6:
  %0 = call i1 @"__crt_stdio_output::stream_output_adapter<char>::write_character_without_count_update"(i32* nonnull @80, i8 ptrtoint (i32* @80 to i8)), !insn.addr !130
  %1 = sext i1 %0 to i32, !insn.addr !130
  ret i32 %1, !insn.addr !130
}

define i32 @function_4040c5() local_unnamed_addr {
dec_label_pc_4040c5:
  call void @_alldvrm(), !insn.addr !131
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !131
}

define i32 @function_4040f2() {
dec_label_pc_4040f2:
  %0 = call i32 @"charNode::length"(i32* nonnull @80), !insn.addr !132
  ret i32 %0, !insn.addr !132
}

define i32 @function_4040f7(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_4040f7:
  %0 = call i32 @__acrt_LCMapStringA(i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !133
  ret i32 %0, !insn.addr !133
}

define i32 @function_404147() local_unnamed_addr {
dec_label_pc_404147:
  call void @"__crt_stdio_output::stream_output_adapter<char>::write_string"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, i32* nonnull @80), !insn.addr !134
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !134
}

define i32 @function_404228() {
dec_label_pc_404228:
  %0 = call i32 @"DNameStatusNode::length"(i32* nonnull @80), !insn.addr !135
  ret i32 %0, !insn.addr !135
}

define i32 @function_404237(i32 %arg1) local_unnamed_addr {
dec_label_pc_404237:
  %0 = call i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::parse_int_from_format_string"(i32* nonnull @80, i32* nonnull @80), !insn.addr !136
  %1 = sext i1 %0 to i32, !insn.addr !136
  ret i32 %1, !insn.addr !136
}

define i32 @function_4042ff() local_unnamed_addr {
dec_label_pc_4042ff:
  call void @__dcrt_terminate_console_output(), !insn.addr !137
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !137
}

define i32 @function_40430e(i32 %arg1) local_unnamed_addr {
dec_label_pc_40430e:
  %0 = call i32 @"__crt_mbstring::__mbsrtowcs_utf8"(i16* bitcast (i32* @80 to i16*), i8** bitcast (i32* @80 to i8**), i32 ptrtoint (i32* @80 to i32), %_Mbstatet* bitcast (i32* @80 to %_Mbstatet*)), !insn.addr !138
  ret i32 %0, !insn.addr !138
}

define i32 @function_404322() local_unnamed_addr {
dec_label_pc_404322:
  %0 = call i32 @__acrt_locale_get_ctype_array_value(i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !139
  ret i32 %0, !insn.addr !139
}

define i32 @function_404377(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_404377:
  call void @__acrt_update_multibyte_info(i32 ptrtoint (i32* @80 to i32), %__crt_multibyte_data** bitcast (i32* @80 to %__crt_multibyte_data**)), !insn.addr !140
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !140
}

define i32 @function_404381(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_404381:
  %0 = call i32 @"__crt_win32_buffer_internal_dynamic_resizing::allocate"(i8** bitcast (i32* @80 to i8**), i32 ptrtoint (i32* @80 to i32), i32* nonnull @80), !insn.addr !141
  ret i32 %0, !insn.addr !141
}

define i32 @function_4043a9(i32 %arg1) local_unnamed_addr {
dec_label_pc_4043a9:
  %0 = call i32 @"__crt_strtox::parse_integer<unsigned long,__crt_strtox::c_string_character_source<char> >"(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i1 ptrtoint (i32* @80 to i1)), !insn.addr !142
  ret i32 %0, !insn.addr !142
}

define i32 @function_404403() {
dec_label_pc_404403:
  %0 = call i32 @"charNode::raw_length"(i32* nonnull @80), !insn.addr !143
  ret i32 %0, !insn.addr !143
}

define i32 @function_40452a(i32 %arg1) local_unnamed_addr {
dec_label_pc_40452a:
  call void @__acrt_lock(i32 ptrtoint (i32* @80 to i32)), !insn.addr !144
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !144
}

define i32 @function_4045ed(i32 %arg1) local_unnamed_addr {
dec_label_pc_4045ed:
  call void @__acrt_stdio_free_stream(i32 ptrtoint (i32* @80 to i32)), !insn.addr !145
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !145
}

define i32 @function_404601() local_unnamed_addr {
dec_label_pc_404601:
  %0 = call i32 @__acrt_WideCharToMultiByte(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32* nonnull @80), !insn.addr !146
  ret i32 %0, !insn.addr !146
}

define i32 @function_404606() {
dec_label_pc_404606:
  %0 = call i8 @"DNameStatusNode::getLastChar"(i32* nonnull @80), !insn.addr !147
  %1 = sext i8 %0 to i32, !insn.addr !147
  ret i32 %1, !insn.addr !147
}

define i32 @function_404642() {
dec_label_pc_404642:
  %0 = call i8* @"type_info::`scalar deleting destructor'"(i32* nonnull @80), !insn.addr !148
  %1 = ptrtoint i8* %0 to i32, !insn.addr !148
  ret i32 %1, !insn.addr !148
}

define i32 @___acrt_getptd_noexit() local_unnamed_addr {
dec_label_pc_4047c3:
  %0 = call i32 @__acrt_getptd_noexit(), !insn.addr !149
  ret i32 %0, !insn.addr !149
}

define i32 @function_4047ff(i32 %arg1) local_unnamed_addr {
dec_label_pc_4047ff:
  call void @__acrt_free_locale(i32 ptrtoint (i32* @80 to i32)), !insn.addr !150
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !150
}

define i32 @function_40480e(i32 %arg1) local_unnamed_addr {
dec_label_pc_40480e:
  call void @__acrt_locale_free_time(%__crt_lc_time_data* bitcast (i32* @80 to %__crt_lc_time_data*)), !insn.addr !151
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !151
}

define i64* @__local_stdio_printf_options() local_unnamed_addr {
dec_label_pc_4086b0:
  ret i64* @_OptionsStorage, !insn.addr !152
}

define i32 @_vfprintf_l(i32* %_Stream, i8* %_Format, i32* %_Locale, i8* %_ArgList) local_unnamed_addr {
dec_label_pc_4086d0:
  %0 = call i64* @__local_stdio_printf_options(), !insn.addr !153
  %1 = bitcast i64* %0 to i32*, !insn.addr !153
  %2 = ptrtoint i64* %0 to i32, !insn.addr !153
  %3 = add i32 %2, 4, !insn.addr !154
  %4 = inttoptr i32 %3 to i32*, !insn.addr !154
  %5 = load i32, i32* %4, align 4, !insn.addr !154
  %6 = load i32, i32* %1, align 4, !insn.addr !155
  %7 = sext i32 %6 to i64, !insn.addr !156
  %8 = call i32 @__stdio_common_vfprintf(i64 %7, i32 %5, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*)), !insn.addr !156
  ret i32 %8, !insn.addr !157
}

define i32 @printf(i8* %_Format, ...) local_unnamed_addr {
dec_label_pc_4087d0:
  %0 = call i32* @__acrt_iob_func(i32 1), !insn.addr !158
  %1 = call i32 @_vfprintf_l(i32* %0, i8* bitcast (i32* @80 to i8*), i32* nonnull @80, i8* bitcast (i32* @80 to i8*)), !insn.addr !159
  ret i32 %1, !insn.addr !160
}

define void @bad() local_unnamed_addr {
dec_label_pc_408be0:
  %stack_var_-262 = alloca i32, align 4
  %dataBuffer_-268 = alloca [260 x i8], align 1
  store [260 x i8] [i8 47, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef], [260 x i8]* %dataBuffer_-268, align 1, !insn.addr !161
  %0 = bitcast i32* %stack_var_-262 to i8*
  call void @memset(i8* nonnull %0, i8 0, i32 254), !insn.addr !162
  %1 = getelementptr inbounds [260 x i8], [260 x i8]* %dataBuffer_-268, i32 0, i32 0, !insn.addr !163
  %2 = call i8* @getenv(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_46fe68, i32 0, i32 0)), !insn.addr !164
  %3 = icmp eq i8* %2, null, !insn.addr !165
  br i1 %3, label %dec_label_pc_408c7a, label %dec_label_pc_408c4a, !insn.addr !166

dec_label_pc_408c4a:                              ; preds = %dec_label_pc_408be0
  %4 = call i32 @strlen(i8* nonnull %1), !insn.addr !167
  %5 = sub i32 259, %4, !insn.addr !168
  %6 = call i8* @strncat(i8* nonnull %1, i8* nonnull %2, i32 %5), !insn.addr !169
  br label %dec_label_pc_408c7a, !insn.addr !170

dec_label_pc_408c7a:                              ; preds = %dec_label_pc_408be0, %dec_label_pc_408c4a
  %7 = call %_IO_FILE* @fopen(i8* nonnull %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_46fe6c, i32 0, i32 0)), !insn.addr !171
  %8 = icmp eq %_IO_FILE* %7, null, !insn.addr !172
  br i1 %8, label %dec_label_pc_408cac, label %dec_label_pc_408c9d, !insn.addr !173

dec_label_pc_408c9d:                              ; preds = %dec_label_pc_408c7a
  %9 = ptrtoint %_IO_FILE* %7 to i32, !insn.addr !171
  %10 = call i32 @fclose(i32 %9), !insn.addr !174
  br label %dec_label_pc_408cac, !insn.addr !175

dec_label_pc_408cac:                              ; preds = %dec_label_pc_408c9d, %dec_label_pc_408c7a
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !176
  ret void, !insn.addr !177
}

define void @good() local_unnamed_addr {
dec_label_pc_408cc0:
  %stack_var_-262 = alloca i32, align 4
  %dataBuffer_-268 = alloca [260 x i8], align 1
  store [260 x i8] [i8 47, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef], [260 x i8]* %dataBuffer_-268, align 1, !insn.addr !178
  %0 = bitcast i32* %stack_var_-262 to i8*
  call void @memset(i8* nonnull %0, i8 0, i32 254), !insn.addr !179
  %1 = getelementptr inbounds [260 x i8], [260 x i8]* %dataBuffer_-268, i32 0, i32 0, !insn.addr !180
  %2 = call i8* @strcat(i8* nonnull %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_46fe78, i32 0, i32 0)), !insn.addr !181
  %3 = call %_IO_FILE* @fopen(i8* nonnull %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_46fe84, i32 0, i32 0)), !insn.addr !182
  %4 = icmp eq %_IO_FILE* %3, null, !insn.addr !183
  br i1 %4, label %dec_label_pc_408d54, label %dec_label_pc_408d45, !insn.addr !184

dec_label_pc_408d45:                              ; preds = %dec_label_pc_408cc0
  %5 = ptrtoint %_IO_FILE* %3 to i32, !insn.addr !182
  %6 = call i32 @fclose(i32 %5), !insn.addr !185
  br label %dec_label_pc_408d54, !insn.addr !186

dec_label_pc_408d54:                              ; preds = %dec_label_pc_408d45, %dec_label_pc_408cc0
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !187
  ret void, !insn.addr !188
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
dec_label_pc_408d70:
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_46fe88, i32 0, i32 0)), !insn.addr !189
  %1 = call i32 @function_402725(), !insn.addr !190
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_46fe9c, i32 0, i32 0)), !insn.addr !191
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_46feac, i32 0, i32 0)), !insn.addr !192
  %4 = call i32 @function_40245a(), !insn.addr !193
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_46fec0, i32 0, i32 0)), !insn.addr !194
  ret i32 0, !insn.addr !195
}

declare void @__security_check_cookie(i32) local_unnamed_addr

define void @_crt_debugger_hook(i32 %reserved) local_unnamed_addr {
dec_label_pc_409d97:
  store i32 0, i32* @__scrt_debugger_hook_flag, align 4, !insn.addr !196
  ret void, !insn.addr !197
}

define void @__SEH_prolog4() local_unnamed_addr {
dec_label_pc_409e10:
  %stack_var_8 = alloca i32, align 4
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %1 = call i32 @__readfsdword(i32 0), !insn.addr !198
  store i32 %1, i32* %stack_var_-8, align 4, !insn.addr !198
  %2 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !198
  %3 = ptrtoint i32* %stack_var_8 to i32, !insn.addr !199
  %4 = sub i32 %2, %0, !insn.addr !200
  %5 = add i32 %4, -4, !insn.addr !201
  %6 = inttoptr i32 %5 to i32*, !insn.addr !201
  %7 = add i32 %4, -8, !insn.addr !202
  %8 = inttoptr i32 %7 to i32*, !insn.addr !202
  %9 = add i32 %4, -12, !insn.addr !203
  %10 = inttoptr i32 %9 to i32*, !insn.addr !203
  %11 = load i32, i32* @__security_cookie, align 4, !insn.addr !204
  %12 = xor i32 %11, %3, !insn.addr !205
  %13 = add i32 %4, -16, !insn.addr !206
  %14 = inttoptr i32 %13 to i32*, !insn.addr !206
  store i32 %12, i32* %14, align 4, !insn.addr !206
  %15 = add i32 %4, -20, !insn.addr !207
  %16 = inttoptr i32 %15 to i32*, !insn.addr !207
  call void @__writefsdword(i32 0, i32 %2), !insn.addr !208
  ret void, !insn.addr !209
}

define void @_guard_check_icall_nop(i32 %Target) local_unnamed_addr {
dec_label_pc_409e7e:
  ret void, !insn.addr !210
}

define void @memset(i8* %dst, i8 %value, i32 %count) local_unnamed_addr {
dec_label_pc_40a520:
  %edi.9.reg2mem = alloca i32, !insn.addr !211
  %ecx.9.reg2mem = alloca i32, !insn.addr !211
  %edi.8.reg2mem = alloca i32, !insn.addr !211
  %ecx.8.reg2mem = alloca i32, !insn.addr !211
  %edi.7.reg2mem = alloca i32, !insn.addr !211
  %ecx.7.reg2mem = alloca i32, !insn.addr !211
  %edi.6.reg2mem = alloca i32, !insn.addr !211
  %ecx.6.reg2mem = alloca i32, !insn.addr !211
  %edi.5.reg2mem = alloca i32, !insn.addr !211
  %ecx.5.reg2mem = alloca i32, !insn.addr !211
  %edi.4.reg2mem = alloca i32, !insn.addr !211
  %ecx.4.reg2mem = alloca i32, !insn.addr !211
  %edi.3.reg2mem = alloca i32, !insn.addr !211
  %ecx.3.reg2mem = alloca i32, !insn.addr !211
  %edi.2.reg2mem = alloca i32, !insn.addr !211
  %ecx.2.reg2mem = alloca i32, !insn.addr !211
  %xmm0.0.reg2mem = alloca i128, !insn.addr !211
  %edi.1.reg2mem = alloca i32, !insn.addr !211
  %ecx.1.reg2mem = alloca i32, !insn.addr !211
  %edi.0.reg2mem = alloca i32, !insn.addr !211
  %ecx.0.reg2mem = alloca i32, !insn.addr !211
  %0 = icmp eq i32 %count, 0, !insn.addr !212
  br i1 %0, label %dec_label_pc_40a673, label %dec_label_pc_40a537, !insn.addr !213

dec_label_pc_40a537:                              ; preds = %dec_label_pc_40a520
  %1 = ptrtoint i8* %dst to i32
  %2 = zext i8 %value to i32, !insn.addr !214
  %3 = mul nuw i32 %2, 16843009, !insn.addr !215
  %4 = icmp ult i32 %count, 33
  store i32 %count, i32* %ecx.5.reg2mem, !insn.addr !216
  store i32 %1, i32* %edi.5.reg2mem, !insn.addr !216
  br i1 %4, label %dec_label_pc_40a625, label %dec_label_pc_40a546, !insn.addr !216

dec_label_pc_40a546:                              ; preds = %dec_label_pc_40a537
  %5 = icmp ult i32 %count, 128, !insn.addr !217
  store i32 %count, i32* %ecx.1.reg2mem, !insn.addr !218
  store i32 %1, i32* %edi.1.reg2mem, !insn.addr !218
  br i1 %5, label %dec_label_pc_40a5dd, label %dec_label_pc_40a552, !insn.addr !218

dec_label_pc_40a552:                              ; preds = %dec_label_pc_40a546
  %6 = load i32, i32* @__favor, align 4, !insn.addr !219
  %7 = and i32 %6, 2, !insn.addr !219
  %8 = icmp ne i32 %7, 0, !insn.addr !219
  %9 = icmp eq i1 %8, false, !insn.addr !220
  br i1 %9, label %dec_label_pc_40a565, label %dec_label_pc_40a55c, !insn.addr !220

dec_label_pc_40a55c:                              ; preds = %dec_label_pc_40a552
  %10 = trunc i32 %3 to i8, !insn.addr !221
  call void @__asm_rep_stosb_memset(i8* %dst, i8 %10, i32 %count), !insn.addr !221
  ret void, !insn.addr !222

dec_label_pc_40a565:                              ; preds = %dec_label_pc_40a552
  %11 = load i32, i32* @__isa_enabled, align 4, !insn.addr !223
  %12 = and i32 %11, 2, !insn.addr !223
  %13 = icmp ne i32 %12, 0, !insn.addr !223
  %14 = icmp eq i1 %13, false, !insn.addr !224
  store i32 %count, i32* %ecx.5.reg2mem, !insn.addr !224
  store i32 %1, i32* %edi.5.reg2mem, !insn.addr !224
  br i1 %14, label %dec_label_pc_40a625, label %dec_label_pc_40a573, !insn.addr !224

dec_label_pc_40a573:                              ; preds = %dec_label_pc_40a565
  %15 = call i128 @__asm_movd(i32 %3), !insn.addr !225
  %16 = call i128 @__asm_pshufd(i128 %15, i32 0), !insn.addr !226
  %17 = add i32 %1, %count, !insn.addr !227
  %18 = bitcast i8* %dst to i128*, !insn.addr !228
  %19 = load i128, i128* %18, align 4, !insn.addr !228
  call void @__asm_movups(i128 %19, i128 %16), !insn.addr !228
  %20 = add i32 %1, 16, !insn.addr !229
  %21 = and i32 %20, -16, !insn.addr !230
  %22 = sub i32 %17, %21, !insn.addr !231
  %23 = icmp ult i32 %22, 129
  store i32 %22, i32* %ecx.0.reg2mem, !insn.addr !232
  store i32 %21, i32* %edi.0.reg2mem, !insn.addr !232
  store i32 %22, i32* %ecx.1.reg2mem, !insn.addr !232
  store i32 %21, i32* %edi.1.reg2mem, !insn.addr !232
  br i1 %23, label %dec_label_pc_40a5dd, label %dec_label_pc_40a5a0, !insn.addr !232

dec_label_pc_40a5a0:                              ; preds = %dec_label_pc_40a573, %dec_label_pc_40a5a0
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %24 = inttoptr i32 %edi.0.reload to i128*, !insn.addr !233
  %25 = load i128, i128* %24, align 16, !insn.addr !233
  call void @__asm_movdqa(i128 %25, i128 %16), !insn.addr !233
  %26 = add i32 %edi.0.reload, 16, !insn.addr !234
  %27 = inttoptr i32 %26 to i128*, !insn.addr !234
  %28 = load i128, i128* %27, align 16, !insn.addr !234
  call void @__asm_movdqa(i128 %28, i128 %16), !insn.addr !234
  %29 = add i32 %edi.0.reload, 32, !insn.addr !235
  %30 = inttoptr i32 %29 to i128*, !insn.addr !235
  %31 = load i128, i128* %30, align 16, !insn.addr !235
  call void @__asm_movdqa(i128 %31, i128 %16), !insn.addr !235
  %32 = add i32 %edi.0.reload, 48, !insn.addr !236
  %33 = inttoptr i32 %32 to i128*, !insn.addr !236
  %34 = load i128, i128* %33, align 16, !insn.addr !236
  call void @__asm_movdqa(i128 %34, i128 %16), !insn.addr !236
  %35 = add i32 %edi.0.reload, 64, !insn.addr !237
  %36 = inttoptr i32 %35 to i128*, !insn.addr !237
  %37 = load i128, i128* %36, align 16, !insn.addr !237
  call void @__asm_movdqa(i128 %37, i128 %16), !insn.addr !237
  %38 = add i32 %edi.0.reload, 80, !insn.addr !238
  %39 = inttoptr i32 %38 to i128*, !insn.addr !238
  %40 = load i128, i128* %39, align 16, !insn.addr !238
  call void @__asm_movdqa(i128 %40, i128 %16), !insn.addr !238
  %41 = add i32 %edi.0.reload, 96, !insn.addr !239
  %42 = inttoptr i32 %41 to i128*, !insn.addr !239
  %43 = load i128, i128* %42, align 16, !insn.addr !239
  call void @__asm_movdqa(i128 %43, i128 %16), !insn.addr !239
  %44 = add i32 %edi.0.reload, 112, !insn.addr !240
  %45 = inttoptr i32 %44 to i128*, !insn.addr !240
  %46 = load i128, i128* %45, align 16, !insn.addr !240
  call void @__asm_movdqa(i128 %46, i128 %16), !insn.addr !240
  %47 = add i32 %edi.0.reload, 128, !insn.addr !241
  %48 = add i32 %ecx.0.reload, -128, !insn.addr !242
  %49 = icmp ult i32 %48, 256, !insn.addr !243
  %50 = icmp eq i1 %49, false, !insn.addr !244
  store i32 %48, i32* %ecx.0.reg2mem, !insn.addr !244
  store i32 %47, i32* %edi.0.reg2mem, !insn.addr !244
  store i128 %16, i128* %xmm0.0.reg2mem, !insn.addr !244
  store i32 %48, i32* %ecx.2.reg2mem, !insn.addr !244
  store i32 %47, i32* %edi.2.reg2mem, !insn.addr !244
  br i1 %50, label %dec_label_pc_40a5a0, label %dec_label_pc_40a5f0, !insn.addr !244

dec_label_pc_40a5dd:                              ; preds = %dec_label_pc_40a573, %dec_label_pc_40a546
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %51 = load i32, i32* @__isa_enabled, align 4, !insn.addr !245
  %52 = and i32 %51, 2, !insn.addr !245
  %53 = icmp ne i32 %52, 0, !insn.addr !245
  %54 = icmp eq i1 %53, false, !insn.addr !246
  store i32 %ecx.1.reload, i32* %ecx.5.reg2mem, !insn.addr !246
  store i32 %edi.1.reload, i32* %edi.5.reg2mem, !insn.addr !246
  br i1 %54, label %dec_label_pc_40a625, label %dec_label_pc_40a5e7, !insn.addr !246

dec_label_pc_40a5e7:                              ; preds = %dec_label_pc_40a5dd
  %55 = call i128 @__asm_movd(i32 %3), !insn.addr !247
  %56 = call i128 @__asm_pshufd(i128 %55, i32 0), !insn.addr !248
  store i128 %56, i128* %xmm0.0.reg2mem, !insn.addr !248
  store i32 %ecx.1.reload, i32* %ecx.2.reg2mem, !insn.addr !248
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !248
  br label %dec_label_pc_40a5f0, !insn.addr !248

dec_label_pc_40a5f0:                              ; preds = %dec_label_pc_40a5a0, %dec_label_pc_40a5e7
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %xmm0.0.reload = load i128, i128* %xmm0.0.reg2mem
  %57 = icmp ult i32 %ecx.2.reload, 32, !insn.addr !249
  store i32 %ecx.2.reload, i32* %ecx.3.reg2mem, !insn.addr !250
  store i32 %edi.2.reload, i32* %edi.3.reg2mem, !insn.addr !250
  store i32 %ecx.2.reload, i32* %ecx.4.reg2mem, !insn.addr !250
  store i32 %edi.2.reload, i32* %edi.4.reg2mem, !insn.addr !250
  br i1 %57, label %dec_label_pc_40a611, label %dec_label_pc_40a5f5, !insn.addr !250

dec_label_pc_40a5f5:                              ; preds = %dec_label_pc_40a5f0, %dec_label_pc_40a5f5
  %edi.3.reload = load i32, i32* %edi.3.reg2mem
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %58 = inttoptr i32 %edi.3.reload to i128*, !insn.addr !251
  %59 = load i128, i128* %58, align 4, !insn.addr !251
  call void @__asm_movdqu(i128 %59, i128 %xmm0.0.reload), !insn.addr !251
  %60 = add i32 %edi.3.reload, 16, !insn.addr !252
  %61 = inttoptr i32 %60 to i128*, !insn.addr !252
  %62 = load i128, i128* %61, align 4, !insn.addr !252
  call void @__asm_movdqu(i128 %62, i128 %xmm0.0.reload), !insn.addr !252
  %63 = add i32 %edi.3.reload, 32, !insn.addr !253
  %64 = add i32 %ecx.3.reload, -32, !insn.addr !254
  %65 = icmp ult i32 %64, 32, !insn.addr !255
  %66 = icmp eq i1 %65, false, !insn.addr !256
  store i32 %64, i32* %ecx.3.reg2mem, !insn.addr !256
  store i32 %63, i32* %edi.3.reg2mem, !insn.addr !256
  br i1 %66, label %dec_label_pc_40a5f5, label %dec_label_pc_40a609, !insn.addr !256

dec_label_pc_40a609:                              ; preds = %dec_label_pc_40a5f5
  %67 = and i32 %64, 31, !insn.addr !257
  %68 = icmp eq i32 %67, 0, !insn.addr !257
  store i32 %64, i32* %ecx.4.reg2mem, !insn.addr !258
  store i32 %63, i32* %edi.4.reg2mem, !insn.addr !258
  br i1 %68, label %dec_label_pc_40a673, label %dec_label_pc_40a611, !insn.addr !258

dec_label_pc_40a611:                              ; preds = %dec_label_pc_40a609, %dec_label_pc_40a5f0
  %edi.4.reload = load i32, i32* %edi.4.reg2mem
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %69 = add i32 %ecx.4.reload, -32, !insn.addr !259
  %70 = add i32 %69, %edi.4.reload, !insn.addr !259
  %71 = inttoptr i32 %70 to i128*, !insn.addr !260
  %72 = load i128, i128* %71, align 4, !insn.addr !260
  call void @__asm_movdqu(i128 %72, i128 %xmm0.0.reload), !insn.addr !260
  %73 = add i32 %70, 16, !insn.addr !261
  %74 = inttoptr i32 %73 to i128*, !insn.addr !261
  %75 = load i128, i128* %74, align 4, !insn.addr !261
  call void @__asm_movdqu(i128 %75, i128 %xmm0.0.reload), !insn.addr !261
  ret void, !insn.addr !262

dec_label_pc_40a625:                              ; preds = %dec_label_pc_40a5dd, %dec_label_pc_40a565, %dec_label_pc_40a537
  %edi.5.reload = load i32, i32* %edi.5.reg2mem
  %ecx.5.reload = load i32, i32* %ecx.5.reg2mem
  %76 = and i32 %ecx.5.reload, 3, !insn.addr !263
  %77 = icmp eq i32 %76, 0, !insn.addr !263
  store i32 %ecx.5.reload, i32* %ecx.7.reg2mem, !insn.addr !264
  store i32 %edi.5.reload, i32* %edi.7.reg2mem, !insn.addr !264
  br i1 %77, label %dec_label_pc_40a63b, label %dec_label_pc_40a62d.preheader, !insn.addr !264

dec_label_pc_40a62d.preheader:                    ; preds = %dec_label_pc_40a625
  %78 = trunc i32 %3 to i8, !insn.addr !265
  store i32 %ecx.5.reload, i32* %ecx.6.reg2mem
  store i32 %edi.5.reload, i32* %edi.6.reg2mem
  br label %dec_label_pc_40a62d

dec_label_pc_40a62d:                              ; preds = %dec_label_pc_40a62d.preheader, %dec_label_pc_40a62d
  %edi.6.reload = load i32, i32* %edi.6.reg2mem
  %ecx.6.reload = load i32, i32* %ecx.6.reg2mem
  %79 = inttoptr i32 %edi.6.reload to i8*, !insn.addr !265
  store i8 %78, i8* %79, align 1, !insn.addr !265
  %80 = add i32 %edi.6.reload, 1, !insn.addr !266
  %81 = add i32 %ecx.6.reload, -1, !insn.addr !267
  %82 = and i32 %81, 3, !insn.addr !268
  %83 = icmp eq i32 %82, 0, !insn.addr !268
  %84 = icmp eq i1 %83, false, !insn.addr !269
  store i32 %81, i32* %ecx.6.reg2mem, !insn.addr !269
  store i32 %80, i32* %edi.6.reg2mem, !insn.addr !269
  store i32 %81, i32* %ecx.7.reg2mem, !insn.addr !269
  store i32 %80, i32* %edi.7.reg2mem, !insn.addr !269
  br i1 %84, label %dec_label_pc_40a62d, label %dec_label_pc_40a63b, !insn.addr !269

dec_label_pc_40a63b:                              ; preds = %dec_label_pc_40a62d, %dec_label_pc_40a625
  %edi.7.reload = load i32, i32* %edi.7.reg2mem
  %ecx.7.reload = load i32, i32* %ecx.7.reg2mem
  %85 = and i32 %ecx.7.reload, 4, !insn.addr !270
  %86 = icmp eq i32 %85, 0, !insn.addr !270
  store i32 %ecx.7.reload, i32* %ecx.8.reg2mem, !insn.addr !271
  store i32 %edi.7.reload, i32* %edi.8.reg2mem, !insn.addr !271
  br i1 %86, label %dec_label_pc_40a64b, label %dec_label_pc_40a643, !insn.addr !271

dec_label_pc_40a643:                              ; preds = %dec_label_pc_40a63b
  %87 = inttoptr i32 %edi.7.reload to i32*, !insn.addr !272
  store i32 %3, i32* %87, align 4, !insn.addr !272
  %88 = add i32 %edi.7.reload, 4, !insn.addr !273
  %89 = add i32 %ecx.7.reload, -4, !insn.addr !274
  store i32 %89, i32* %ecx.8.reg2mem, !insn.addr !274
  store i32 %88, i32* %edi.8.reg2mem, !insn.addr !274
  br label %dec_label_pc_40a64b, !insn.addr !274

dec_label_pc_40a64b:                              ; preds = %dec_label_pc_40a643, %dec_label_pc_40a63b
  %edi.8.reload = load i32, i32* %edi.8.reg2mem
  %ecx.8.reload = load i32, i32* %ecx.8.reg2mem
  %90 = icmp ult i32 %ecx.8.reload, 8, !insn.addr !275
  store i32 %ecx.8.reload, i32* %ecx.9.reg2mem, !insn.addr !276
  store i32 %edi.8.reload, i32* %edi.9.reg2mem, !insn.addr !276
  br i1 %90, label %dec_label_pc_40a673, label %dec_label_pc_40a660, !insn.addr !276

dec_label_pc_40a660:                              ; preds = %dec_label_pc_40a64b, %dec_label_pc_40a660
  %edi.9.reload = load i32, i32* %edi.9.reg2mem
  %ecx.9.reload = load i32, i32* %ecx.9.reg2mem
  %91 = inttoptr i32 %edi.9.reload to i32*, !insn.addr !277
  store i32 %3, i32* %91, align 4, !insn.addr !277
  %92 = add i32 %edi.9.reload, 4, !insn.addr !278
  %93 = inttoptr i32 %92 to i32*, !insn.addr !278
  store i32 %3, i32* %93, align 4, !insn.addr !278
  %94 = add i32 %edi.9.reload, 8, !insn.addr !279
  %95 = add i32 %ecx.9.reload, -8, !insn.addr !280
  %96 = icmp ult i32 %95, 8, !insn.addr !281
  %97 = icmp eq i1 %96, false, !insn.addr !282
  store i32 %95, i32* %ecx.9.reg2mem, !insn.addr !282
  store i32 %94, i32* %edi.9.reg2mem, !insn.addr !282
  br i1 %97, label %dec_label_pc_40a660, label %dec_label_pc_40a673, !insn.addr !282

dec_label_pc_40a673:                              ; preds = %dec_label_pc_40a660, %dec_label_pc_40a64b, %dec_label_pc_40a609, %dec_label_pc_40a520
  ret void, !insn.addr !283
}

define i8 @"DNameStatusNode::getLastChar"(i32* %this) local_unnamed_addr {
dec_label_pc_40fda3:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 4, !insn.addr !284
  %2 = inttoptr i32 %1 to i32*, !insn.addr !284
  %3 = load i32, i32* %2, align 4, !insn.addr !284
  %4 = icmp eq i32 %3, 1, !insn.addr !284
  %5 = icmp eq i1 %4, false, !insn.addr !285
  %6 = select i1 %5, i8 0, i8 32, !insn.addr !286
  ret i8 %6, !insn.addr !286
}

define i8 @"charNode::getLastChar"(i32* %this) local_unnamed_addr {
dec_label_pc_40fdb2:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 4, !insn.addr !287
  %2 = inttoptr i32 %1 to i8*, !insn.addr !287
  %3 = load i8, i8* %2, align 1, !insn.addr !287
  ret i8 %3, !insn.addr !288
}

define i8 @"pDNameNode::getLastChar"(i32* %this) local_unnamed_addr {
dec_label_pc_40fdb6:
  ret i8 0, !insn.addr !289
}

define i8 @"pairNode::getLastChar"(i32* %this) local_unnamed_addr {
dec_label_pc_40fdc7:
  %.pre-phi.reg2mem = alloca i8, !insn.addr !290
  %0 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !291
  %1 = trunc i32 %0 to i8
  %2 = icmp eq i8 %1, 0, !insn.addr !292
  %3 = icmp eq i1 %2, false, !insn.addr !293
  store i8 %1, i8* %.pre-phi.reg2mem, !insn.addr !293
  br i1 %3, label %dec_label_pc_40fdf8, label %dec_label_pc_40fde4, !insn.addr !293

dec_label_pc_40fde4:                              ; preds = %dec_label_pc_40fdc7
  %4 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !294
  %.pre = trunc i32 %4 to i8, !insn.addr !295
  store i8 %.pre, i8* %.pre-phi.reg2mem, !insn.addr !296
  br label %dec_label_pc_40fdf8, !insn.addr !296

dec_label_pc_40fdf8:                              ; preds = %dec_label_pc_40fde4, %dec_label_pc_40fdc7
  %.pre-phi.reload = load i8, i8* %.pre-phi.reg2mem
  ret i8 %.pre-phi.reload, !insn.addr !295
}

define i8 @"pcharNode::getLastChar"(i32* %this) local_unnamed_addr {
dec_label_pc_40fe09:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 8, !insn.addr !297
  %2 = inttoptr i32 %1 to i32*, !insn.addr !297
  %3 = load i32, i32* %2, align 4, !insn.addr !297
  %4 = icmp eq i32 %3, 0, !insn.addr !298
  br i1 %4, label %dec_label_pc_40fe18, label %dec_label_pc_40fe10, !insn.addr !299

dec_label_pc_40fe10:                              ; preds = %dec_label_pc_40fe09
  %5 = add i32 %0, 4, !insn.addr !300
  %6 = inttoptr i32 %5 to i32*, !insn.addr !300
  %7 = load i32, i32* %6, align 4, !insn.addr !300
  %8 = add i32 %3, -1, !insn.addr !301
  %9 = add i32 %8, %7, !insn.addr !301
  %10 = inttoptr i32 %9 to i8*, !insn.addr !301
  %11 = load i8, i8* %10, align 1, !insn.addr !301
  ret i8 %11, !insn.addr !302

dec_label_pc_40fe18:                              ; preds = %dec_label_pc_40fe09
  ret i8 0, !insn.addr !303
}

define i8* @"DNameStatusNode::getString"(i32* %this, i8* %buf, i8* %end) local_unnamed_addr {
dec_label_pc_411729:
  %storemerge.reg2mem = alloca i32, !insn.addr !304
  %ecx.1.reg2mem = alloca i32, !insn.addr !304
  %esi.0.reg2mem = alloca i32, !insn.addr !304
  %ebx.0.reg2mem = alloca i32, !insn.addr !304
  %ecx.0.reg2mem = alloca i32, !insn.addr !304
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 4, !insn.addr !305
  %2 = inttoptr i32 %1 to i32*, !insn.addr !305
  %3 = load i32, i32* %2, align 4, !insn.addr !305
  %4 = icmp eq i32 %3, 1, !insn.addr !305
  %5 = icmp eq i1 %4, false, !insn.addr !306
  br i1 %5, label %dec_label_pc_411768, label %dec_label_pc_411732, !insn.addr !306

dec_label_pc_411732:                              ; preds = %dec_label_pc_411729
  %6 = ptrtoint i8* %buf to i32, !insn.addr !307
  %7 = ptrtoint i32* %this to i32, !insn.addr !308
  %8 = sub i32 %6, %7, !insn.addr !309
  %9 = icmp sgt i32 %8, 3, !insn.addr !310
  store i32 4, i32* %ecx.0.reg2mem, !insn.addr !310
  br i1 %9, label %dec_label_pc_411747, label %dec_label_pc_411741, !insn.addr !310

dec_label_pc_411741:                              ; preds = %dec_label_pc_411732
  %10 = icmp eq i32 %8, 0, !insn.addr !311
  store i32 %8, i32* %ecx.0.reg2mem, !insn.addr !312
  store i32 0, i32* %ecx.1.reg2mem, !insn.addr !312
  br i1 %10, label %dec_label_pc_411763, label %dec_label_pc_411747, !insn.addr !312

dec_label_pc_411747:                              ; preds = %dec_label_pc_411741, %dec_label_pc_411732
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %11 = sub i32 ptrtoint ([5 x i8]* @global_var_471084 to i32), %7, !insn.addr !313
  store i32 %ecx.0.reload, i32* %ebx.0.reg2mem, !insn.addr !314
  store i32 %7, i32* %esi.0.reg2mem, !insn.addr !314
  br label %dec_label_pc_411755, !insn.addr !314

dec_label_pc_411755:                              ; preds = %dec_label_pc_411755, %dec_label_pc_411747
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %12 = add i32 %11, %esi.0.reload, !insn.addr !315
  %13 = inttoptr i32 %12 to i8*, !insn.addr !315
  %14 = load i8, i8* %13, align 1, !insn.addr !315
  %15 = inttoptr i32 %esi.0.reload to i8*, !insn.addr !316
  store i8 %14, i8* %15, align 1, !insn.addr !316
  %16 = add i32 %esi.0.reload, 1, !insn.addr !317
  %17 = add i32 %ebx.0.reload, -1, !insn.addr !318
  %18 = icmp eq i32 %17, 0, !insn.addr !318
  %19 = icmp eq i1 %18, false, !insn.addr !319
  store i32 %17, i32* %ebx.0.reg2mem, !insn.addr !319
  store i32 %16, i32* %esi.0.reg2mem, !insn.addr !319
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !319
  br i1 %19, label %dec_label_pc_411755, label %dec_label_pc_411763, !insn.addr !319

dec_label_pc_411763:                              ; preds = %dec_label_pc_411755, %dec_label_pc_411741
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %20 = add i32 %ecx.1.reload, %7, !insn.addr !320
  store i32 %20, i32* %storemerge.reg2mem, !insn.addr !321
  br label %dec_label_pc_41176b, !insn.addr !321

dec_label_pc_411768:                              ; preds = %dec_label_pc_411729
  %21 = ptrtoint i32* %this to i32, !insn.addr !322
  store i32 %21, i32* %storemerge.reg2mem, !insn.addr !322
  br label %dec_label_pc_41176b, !insn.addr !322

dec_label_pc_41176b:                              ; preds = %dec_label_pc_411768, %dec_label_pc_411763
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %22 = inttoptr i32 %storemerge.reload to i8*, !insn.addr !323
  ret i8* %22, !insn.addr !323
}

define i8* @"charNode::getString"(i32* %this, i8* %buf, i8* %end) local_unnamed_addr {
dec_label_pc_411780:
  %eax.0.reg2mem = alloca i32, !insn.addr !324
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = ptrtoint i32* %this to i32
  %2 = bitcast i8* %buf to i32*
  %3 = icmp ugt i32* %2, %this, !insn.addr !325
  %4 = icmp eq i1 %3, false, !insn.addr !326
  store i32 %1, i32* %eax.0.reg2mem, !insn.addr !326
  br i1 %4, label %dec_label_pc_411791, label %dec_label_pc_41178b, !insn.addr !326

dec_label_pc_41178b:                              ; preds = %dec_label_pc_411780
  %5 = add i32 %0, 4, !insn.addr !327
  %6 = inttoptr i32 %5 to i8*, !insn.addr !327
  %7 = load i8, i8* %6, align 1, !insn.addr !327
  %8 = bitcast i32* %this to i8*, !insn.addr !328
  store i8 %7, i8* %8, align 1, !insn.addr !328
  %9 = add i32 %1, 1, !insn.addr !329
  store i32 %9, i32* %eax.0.reg2mem, !insn.addr !329
  br label %dec_label_pc_411791, !insn.addr !329

dec_label_pc_411791:                              ; preds = %dec_label_pc_41178b, %dec_label_pc_411780
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %10 = inttoptr i32 %eax.0.reload to i8*, !insn.addr !330
  ret i8* %10, !insn.addr !330
}

define i8* @"pDNameNode::getString"(i32* %this, i8* %buf, i8* %end) local_unnamed_addr {
dec_label_pc_41179a:
  %0 = bitcast i32* %this to i8*
  ret i8* %0, !insn.addr !331
}

define i8* @"pairNode::getString"(i32* %this, i8* %buf, i8* %end) local_unnamed_addr {
dec_label_pc_4117b6:
  %eax.0.reg2mem = alloca i32, !insn.addr !332
  %0 = ptrtoint i8* %buf to i32
  %1 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !333
  %2 = icmp ult i32 %1, %0, !insn.addr !334
  %3 = icmp eq i1 %2, false, !insn.addr !335
  store i32 %1, i32* %eax.0.reg2mem, !insn.addr !335
  br i1 %3, label %dec_label_pc_4117f5, label %dec_label_pc_4117dd, !insn.addr !335

dec_label_pc_4117dd:                              ; preds = %dec_label_pc_4117b6
  %4 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !336
  store i32 %4, i32* %eax.0.reg2mem, !insn.addr !337
  br label %dec_label_pc_4117f5, !insn.addr !337

dec_label_pc_4117f5:                              ; preds = %dec_label_pc_4117dd, %dec_label_pc_4117b6
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %5 = inttoptr i32 %eax.0.reload to i8*, !insn.addr !338
  ret i8* %5, !insn.addr !338
}

define i8* @"pcharNode::getString"(i32* %this, i8* %buf, i8* %end) local_unnamed_addr {
dec_label_pc_41180d:
  unreachable
}

define i32 @"DNameStatusNode::length"(i32* %this) local_unnamed_addr {
dec_label_pc_4130bb:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 8, !insn.addr !339
  %2 = inttoptr i32 %1 to i32*, !insn.addr !339
  %3 = load i32, i32* %2, align 4, !insn.addr !339
  ret i32 %3, !insn.addr !340
}

define i32 @"charNode::length"(i32* %this) local_unnamed_addr {
dec_label_pc_4130bf:
  ret i32 1, !insn.addr !341
}

define i32 @"pDNameNode::length"(i32* %this) local_unnamed_addr {
dec_label_pc_4130c3:
  ret i32 0, !insn.addr !342
}

define i32 @"pairNode::length"(i32* %this) local_unnamed_addr {
dec_label_pc_4130d4:
  %eax.0.reg2mem = alloca i32, !insn.addr !343
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 12, !insn.addr !344
  %2 = inttoptr i32 %1 to i32*, !insn.addr !344
  %3 = load i32, i32* %2, align 4, !insn.addr !344
  %4 = icmp slt i32 %3, 0, !insn.addr !345
  %5 = icmp eq i1 %4, false, !insn.addr !346
  store i32 %3, i32* %eax.0.reg2mem, !insn.addr !346
  br i1 %5, label %dec_label_pc_41311b, label %dec_label_pc_4130e2, !insn.addr !346

dec_label_pc_4130e2:                              ; preds = %dec_label_pc_4130d4
  %6 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !347
  %7 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !348
  %8 = add i32 %7, %6, !insn.addr !349
  store i32 %8, i32* %2, align 4, !insn.addr !350
  store i32 %8, i32* %eax.0.reg2mem, !insn.addr !350
  br label %dec_label_pc_41311b, !insn.addr !350

dec_label_pc_41311b:                              ; preds = %dec_label_pc_4130e2, %dec_label_pc_4130d4
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !351
}

define i32 @"pcharNode::length"(i32* %this) local_unnamed_addr {
dec_label_pc_41312f:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 8, !insn.addr !352
  %2 = inttoptr i32 %1 to i32*, !insn.addr !352
  %3 = load i32, i32* %2, align 4, !insn.addr !352
  ret i32 %3, !insn.addr !353
}

define i32 @"DNameStatusNode::raw_length"(i32* %this) local_unnamed_addr {
dec_label_pc_41328e:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 8, !insn.addr !354
  %2 = inttoptr i32 %1 to i32*, !insn.addr !354
  %3 = load i32, i32* %2, align 4, !insn.addr !354
  ret i32 %3, !insn.addr !355
}

define i32 @"charNode::raw_length"(i32* %this) local_unnamed_addr {
dec_label_pc_413292:
  ret i32 1, !insn.addr !356
}

define i32 @"pDNameNode::raw_length"(i32* %this) local_unnamed_addr {
dec_label_pc_413296:
  ret i32 -1, !insn.addr !357
}

define i32 @"pairNode::raw_length"(i32* %this) local_unnamed_addr {
dec_label_pc_41329a:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 12, !insn.addr !358
  %2 = inttoptr i32 %1 to i32*, !insn.addr !358
  %3 = load i32, i32* %2, align 4, !insn.addr !358
  ret i32 %3, !insn.addr !359
}

define i32 @"pcharNode::raw_length"(i32* %this) local_unnamed_addr {
dec_label_pc_41329e:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 8, !insn.addr !360
  %2 = inttoptr i32 %1 to i32*, !insn.addr !360
  %3 = load i32, i32* %2, align 4, !insn.addr !360
  ret i32 %3, !insn.addr !361
}

define void @memcpy(i8* %dst, i8* %src, i32 %count) local_unnamed_addr {
dec_label_pc_414180:
  %edi.33.reg2mem = alloca i32, !insn.addr !362
  %esi.33.reg2mem = alloca i32, !insn.addr !362
  %eax.9.reg2mem = alloca i32, !insn.addr !362
  %edi.32.reg2mem = alloca i32, !insn.addr !362
  %esi.32.reg2mem = alloca i32, !insn.addr !362
  %edi.31.reg2mem = alloca i32, !insn.addr !362
  %esi.31.reg2mem = alloca i32, !insn.addr !362
  %ecx.24.reg2mem = alloca i32, !insn.addr !362
  %edi.30.reg2mem = alloca i32, !insn.addr !362
  %esi.30.reg2mem = alloca i32, !insn.addr !362
  %ecx.23.reg2mem = alloca i32, !insn.addr !362
  %edi.29.reg2mem = alloca i32, !insn.addr !362
  %esi.29.reg2mem = alloca i32, !insn.addr !362
  %edi.28.reg2mem = alloca i32, !insn.addr !362
  %esi.28.reg2mem = alloca i32, !insn.addr !362
  %ecx.22.reg2mem = alloca i32, !insn.addr !362
  %edi.27.reg2mem = alloca i32, !insn.addr !362
  %esi.27.reg2mem = alloca i32, !insn.addr !362
  %ecx.21.reg2mem = alloca i32, !insn.addr !362
  %edi.26.reg2mem = alloca i32, !insn.addr !362
  %esi.26.reg2mem = alloca i32, !insn.addr !362
  %edx.2.reg2mem = alloca i32, !insn.addr !362
  %ecx.204.reg2mem = alloca i32, !insn.addr !362
  %esi.255.reg2mem = alloca i32, !insn.addr !362
  %edi.256.reg2mem = alloca i32, !insn.addr !362
  %edi.25.reg2mem = alloca i32, !insn.addr !362
  %esi.25.reg2mem = alloca i32, !insn.addr !362
  %edi.24.reg2mem = alloca i32, !insn.addr !362
  %esi.24.reg2mem = alloca i32, !insn.addr !362
  %edx.1.reg2mem = alloca i32, !insn.addr !362
  %edi.23.reg2mem = alloca i32, !insn.addr !362
  %esi.23.reg2mem = alloca i32, !insn.addr !362
  %ecx.19.reg2mem = alloca i32, !insn.addr !362
  %edi.22.reg2mem = alloca i32, !insn.addr !362
  %esi.22.reg2mem = alloca i32, !insn.addr !362
  %ecx.18.reg2mem = alloca i32, !insn.addr !362
  %edi.21.reg2mem = alloca i32, !insn.addr !362
  %esi.21.reg2mem = alloca i32, !insn.addr !362
  %ecx.17.reg2mem = alloca i32, !insn.addr !362
  %edi.20.reg2mem = alloca i32, !insn.addr !362
  %esi.20.reg2mem = alloca i32, !insn.addr !362
  %ecx.16.reg2mem = alloca i32, !insn.addr !362
  %edi.19.reg2mem = alloca i32, !insn.addr !362
  %esi.19.reg2mem = alloca i32, !insn.addr !362
  %ecx.15.reg2mem = alloca i32, !insn.addr !362
  %edi.18.reg2mem = alloca i32, !insn.addr !362
  %esi.18.reg2mem = alloca i32, !insn.addr !362
  %ecx.14.reg2mem = alloca i32, !insn.addr !362
  %edi.17.reg2mem = alloca i32, !insn.addr !362
  %esi.17.reg2mem = alloca i32, !insn.addr !362
  %ecx.13.reg2mem = alloca i32, !insn.addr !362
  %edi.16.reg2mem = alloca i32, !insn.addr !362
  %esi.16.reg2mem = alloca i32, !insn.addr !362
  %ecx.12.reg2mem = alloca i32, !insn.addr !362
  %edi.16.ph.reg2mem = alloca i32, !insn.addr !362
  %esi.16.ph.reg2mem = alloca i32, !insn.addr !362
  %ecx.12.ph.reg2mem = alloca i32, !insn.addr !362
  %edi.15.reg2mem = alloca i32, !insn.addr !362
  %esi.15.reg2mem = alloca i32, !insn.addr !362
  %ecx.11.reg2mem = alloca i32, !insn.addr !362
  %edi.14.reg2mem = alloca i32, !insn.addr !362
  %esi.14.reg2mem = alloca i32, !insn.addr !362
  %ecx.10.reg2mem = alloca i32, !insn.addr !362
  %edi.13.reg2mem = alloca i32, !insn.addr !362
  %esi.13.reg2mem = alloca i32, !insn.addr !362
  %edx.0.reg2mem = alloca i32, !insn.addr !362
  %edi.12.reg2mem = alloca i32, !insn.addr !362
  %esi.12.reg2mem = alloca i32, !insn.addr !362
  %edi.11.reg2mem = alloca i32, !insn.addr !362
  %esi.11.reg2mem = alloca i32, !insn.addr !362
  %edi.10.reg2mem = alloca i32, !insn.addr !362
  %esi.10.reg2mem = alloca i32, !insn.addr !362
  %edi.9.reg2mem = alloca i32, !insn.addr !362
  %esi.9.reg2mem = alloca i32, !insn.addr !362
  %ecx.9.reg2mem = alloca i32, !insn.addr !362
  %edi.8.reg2mem = alloca i32, !insn.addr !362
  %esi.8.reg2mem = alloca i32, !insn.addr !362
  %ecx.8.reg2mem = alloca i32, !insn.addr !362
  %edi.7.reg2mem = alloca i32, !insn.addr !362
  %esi.7.reg2mem = alloca i32, !insn.addr !362
  %ecx.7.reg2mem = alloca i32, !insn.addr !362
  %edi.6.reg2mem = alloca i32, !insn.addr !362
  %esi.6.reg2mem = alloca i32, !insn.addr !362
  %ecx.6.reg2mem = alloca i32, !insn.addr !362
  %edi.5.lcssa.reg2mem = alloca i32, !insn.addr !362
  %esi.5.lcssa.reg2mem = alloca i32, !insn.addr !362
  %ecx.5.lcssa.reg2mem = alloca i32, !insn.addr !362
  %ecx.546.reg2mem = alloca i32, !insn.addr !362
  %esi.547.reg2mem = alloca i32, !insn.addr !362
  %edi.548.reg2mem = alloca i32, !insn.addr !362
  %edi.5.ph.reg2mem = alloca i32, !insn.addr !362
  %esi.5.ph.reg2mem = alloca i32, !insn.addr !362
  %ecx.5.ph.reg2mem = alloca i32, !insn.addr !362
  %edi.4.reg2mem = alloca i32, !insn.addr !362
  %esi.4.reg2mem = alloca i32, !insn.addr !362
  %ecx.4.reg2mem = alloca i32, !insn.addr !362
  %xmm1.2.reg2mem = alloca i128, !insn.addr !362
  %edi.3.reg2mem = alloca i32, !insn.addr !362
  %esi.3.reg2mem = alloca i32, !insn.addr !362
  %ecx.3.reg2mem = alloca i32, !insn.addr !362
  %xmm1.1.reg2mem = alloca i128, !insn.addr !362
  %edi.2.reg2mem = alloca i32, !insn.addr !362
  %esi.2.reg2mem = alloca i32, !insn.addr !362
  %ecx.2.reg2mem = alloca i32, !insn.addr !362
  %xmm1.0.reg2mem = alloca i128, !insn.addr !362
  %edi.1.reg2mem = alloca i32, !insn.addr !362
  %esi.1.reg2mem = alloca i32, !insn.addr !362
  %ecx.1.reg2mem = alloca i32, !insn.addr !362
  %edi.0.reg2mem = alloca i32, !insn.addr !362
  %esi.0.reg2mem = alloca i32, !insn.addr !362
  %ecx.0.reg2mem = alloca i32, !insn.addr !362
  %0 = call i1 @__decompiler_undefined_function_6()
  %1 = ptrtoint i8* %src to i32
  %2 = ptrtoint i8* %dst to i32
  %3 = add i32 %1, %count, !insn.addr !363
  %4 = icmp ugt i8* %dst, %src
  %5 = icmp ugt i32 %3, %2, !insn.addr !364
  %or.cond = icmp eq i1 %4, %5
  br i1 %or.cond, label %dec_label_pc_414434, label %dec_label_pc_4141a0, !insn.addr !365

dec_label_pc_4141a0:                              ; preds = %dec_label_pc_414180
  %6 = icmp ult i32 %count, 32, !insn.addr !366
  store i32 %count, i32* %ecx.21.reg2mem, !insn.addr !367
  store i32 %1, i32* %esi.27.reg2mem, !insn.addr !367
  store i32 %2, i32* %edi.27.reg2mem, !insn.addr !367
  br i1 %6, label %dec_label_pc_41467b, label %dec_label_pc_4141a9, !insn.addr !367

dec_label_pc_4141a9:                              ; preds = %dec_label_pc_4141a0
  %7 = icmp ult i32 %count, 128, !insn.addr !368
  %8 = icmp eq i1 %7, false, !insn.addr !369
  br i1 %8, label %dec_label_pc_4141c4, label %dec_label_pc_4141b1, !insn.addr !369

dec_label_pc_4141b1:                              ; preds = %dec_label_pc_4141a9
  %9 = load i32, i32* @__isa_enabled, align 4, !insn.addr !370
  %10 = and i32 %9, 2, !insn.addr !370
  %11 = icmp eq i32 %10, 0, !insn.addr !370
  store i32 %2, i32* %edi.256.reg2mem, !insn.addr !371
  store i32 %1, i32* %esi.255.reg2mem, !insn.addr !371
  store i32 %count, i32* %ecx.204.reg2mem, !insn.addr !371
  br i1 %11, label %dec_label_pc_4143a7, label %dec_label_pc_414651, !insn.addr !371

dec_label_pc_4141c4:                              ; preds = %dec_label_pc_4141a9
  %12 = load i32, i32* @__favor, align 4, !insn.addr !372
  %13 = and i32 %12, 2, !insn.addr !372
  %14 = icmp ne i32 %13, 0, !insn.addr !372
  %15 = icmp eq i1 %14, false, !insn.addr !373
  br i1 %15, label %dec_label_pc_4141d7, label %dec_label_pc_4141ce, !insn.addr !373

dec_label_pc_4141ce:                              ; preds = %dec_label_pc_4141c4
  call void @__asm_rep_movsb_memcpy(i8* %dst, i8* %src, i32 %count), !insn.addr !374
  ret void, !insn.addr !375

dec_label_pc_4141d7:                              ; preds = %dec_label_pc_4141c4
  %16 = xor i32 %1, %2, !insn.addr !376
  %17 = and i32 %16, 15, !insn.addr !377
  %18 = icmp eq i32 %17, 0, !insn.addr !377
  %19 = icmp eq i1 %18, false, !insn.addr !378
  br i1 %19, label %dec_label_pc_4141f0, label %dec_label_pc_4141e2, !insn.addr !378

dec_label_pc_4141e2:                              ; preds = %dec_label_pc_4141d7
  %20 = load i32, i32* @__isa_enabled, align 4, !insn.addr !379
  %21 = and i32 %20, 2, !insn.addr !379
  %22 = icmp eq i32 %21, 0, !insn.addr !379
  br i1 %22, label %dec_label_pc_4141f0, label %dec_label_pc_4145d0, !insn.addr !380

dec_label_pc_4141f0:                              ; preds = %dec_label_pc_4141e2, %dec_label_pc_4141d7
  %23 = and i32 %12, 1, !insn.addr !381
  %24 = icmp ne i32 %23, 0, !insn.addr !381
  %25 = icmp eq i1 %24, false, !insn.addr !382
  br i1 %25, label %dec_label_pc_4143a7, label %dec_label_pc_4141fe, !insn.addr !382

dec_label_pc_4141fe:                              ; preds = %dec_label_pc_4141f0
  %26 = and i32 %2, 3, !insn.addr !383
  %27 = icmp eq i32 %26, 0, !insn.addr !383
  %28 = icmp eq i1 %27, false, !insn.addr !384
  br i1 %28, label %dec_label_pc_4143a7, label %dec_label_pc_41420a, !insn.addr !384

dec_label_pc_41420a:                              ; preds = %dec_label_pc_4141fe
  %29 = and i32 %1, 3, !insn.addr !385
  %30 = icmp eq i32 %29, 0, !insn.addr !385
  %31 = icmp eq i1 %30, false, !insn.addr !386
  store i32 %count, i32* %ecx.9.reg2mem, !insn.addr !386
  store i32 %1, i32* %esi.9.reg2mem, !insn.addr !386
  store i32 %2, i32* %edi.9.reg2mem, !insn.addr !386
  br i1 %31, label %dec_label_pc_4143c2, label %dec_label_pc_414216, !insn.addr !386

dec_label_pc_414216:                              ; preds = %dec_label_pc_41420a
  %32 = and i32 %2, 4, !insn.addr !387
  %33 = icmp ne i32 %32, 0, !insn.addr !387
  %34 = icmp eq i1 %33, false, !insn.addr !388
  store i32 %count, i32* %ecx.0.reg2mem, !insn.addr !388
  store i32 %1, i32* %esi.0.reg2mem, !insn.addr !388
  store i32 %2, i32* %edi.0.reg2mem, !insn.addr !388
  br i1 %34, label %dec_label_pc_414229, label %dec_label_pc_41421c, !insn.addr !388

dec_label_pc_41421c:                              ; preds = %dec_label_pc_414216
  %35 = bitcast i8* %src to i32*, !insn.addr !389
  %36 = load i32, i32* %35, align 4, !insn.addr !389
  %37 = add i32 %count, -4, !insn.addr !390
  %38 = add i32 %1, 4, !insn.addr !391
  %39 = bitcast i8* %dst to i32*, !insn.addr !392
  store i32 %36, i32* %39, align 4, !insn.addr !392
  %40 = add i32 %2, 4, !insn.addr !393
  store i32 %37, i32* %ecx.0.reg2mem, !insn.addr !393
  store i32 %38, i32* %esi.0.reg2mem, !insn.addr !393
  store i32 %40, i32* %edi.0.reg2mem, !insn.addr !393
  br label %dec_label_pc_414229, !insn.addr !393

dec_label_pc_414229:                              ; preds = %dec_label_pc_41421c, %dec_label_pc_414216
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %41 = and i32 %edi.0.reload, 8, !insn.addr !394
  %42 = icmp ne i32 %41, 0, !insn.addr !394
  %43 = icmp eq i1 %42, false, !insn.addr !395
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !395
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !395
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !395
  br i1 %43, label %dec_label_pc_414240, label %dec_label_pc_41422f, !insn.addr !395

dec_label_pc_41422f:                              ; preds = %dec_label_pc_414229
  %44 = inttoptr i32 %esi.0.reload to i64*, !insn.addr !396
  %45 = load i64, i64* %44, align 4, !insn.addr !396
  %46 = call i128 @__asm_movq(i64 %45), !insn.addr !396
  %47 = add i32 %ecx.0.reload, -8, !insn.addr !397
  %48 = add i32 %esi.0.reload, 8, !insn.addr !398
  %49 = inttoptr i32 %edi.0.reload to i64*, !insn.addr !399
  %50 = load i64, i64* %49, align 4, !insn.addr !399
  call void @__asm_movq.7(i64 %50, i128 %46), !insn.addr !399
  %51 = add i32 %edi.0.reload, 8, !insn.addr !400
  store i32 %47, i32* %ecx.1.reg2mem, !insn.addr !400
  store i32 %48, i32* %esi.1.reg2mem, !insn.addr !400
  store i32 %51, i32* %edi.1.reg2mem, !insn.addr !400
  br label %dec_label_pc_414240, !insn.addr !400

dec_label_pc_414240:                              ; preds = %dec_label_pc_41422f, %dec_label_pc_414229
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %52 = and i32 %esi.1.reload, 7, !insn.addr !401
  %53 = icmp eq i32 %52, 0, !insn.addr !401
  br i1 %53, label %dec_label_pc_4142ad, label %dec_label_pc_414248, !insn.addr !402

dec_label_pc_414248:                              ; preds = %dec_label_pc_414240
  %54 = and i32 %esi.1.reload, 8, !insn.addr !403
  %55 = icmp ne i32 %54, 0, !insn.addr !403
  %56 = icmp eq i1 %55, false, !insn.addr !404
  br i1 %56, label %dec_label_pc_414306, label %dec_label_pc_414252, !insn.addr !404

dec_label_pc_414252:                              ; preds = %dec_label_pc_414248
  %57 = add i32 %esi.1.reload, -12, !insn.addr !405
  %58 = inttoptr i32 %57 to i128*, !insn.addr !405
  %59 = load i128, i128* %58, align 4, !insn.addr !405
  %60 = call i128 @__asm_movdqa.8(i128 %59), !insn.addr !405
  store i128 %60, i128* %xmm1.0.reg2mem, !insn.addr !406
  store i32 %ecx.1.reload, i32* %ecx.2.reg2mem, !insn.addr !406
  store i32 %57, i32* %esi.2.reg2mem, !insn.addr !406
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !406
  br label %dec_label_pc_41425c, !insn.addr !406

dec_label_pc_41425c:                              ; preds = %dec_label_pc_41425c, %dec_label_pc_414252
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %xmm1.0.reload = load i128, i128* %xmm1.0.reg2mem
  %61 = add i32 %esi.2.reload, 16, !insn.addr !407
  %62 = inttoptr i32 %61 to i128*, !insn.addr !407
  %63 = load i128, i128* %62, align 4, !insn.addr !407
  %64 = call i128 @__asm_movdqa.8(i128 %63), !insn.addr !407
  %65 = add i32 %ecx.2.reload, -48, !insn.addr !408
  %66 = add i32 %esi.2.reload, 32, !insn.addr !409
  %67 = inttoptr i32 %66 to i128*, !insn.addr !409
  %68 = load i128, i128* %67, align 4, !insn.addr !409
  %69 = call i128 @__asm_movdqa.8(i128 %68), !insn.addr !409
  %70 = add i32 %esi.2.reload, 48, !insn.addr !410
  %71 = inttoptr i32 %70 to i128*, !insn.addr !410
  %72 = load i128, i128* %71, align 4, !insn.addr !410
  %73 = call i128 @__asm_movdqa.8(i128 %72), !insn.addr !410
  %74 = icmp ult i32 %65, 48, !insn.addr !411
  %75 = call i128 @__asm_movdqa.8(i128 %64), !insn.addr !412
  %76 = call i128 @__asm_palignr(i128 %64, i128 %xmm1.0.reload, i32 12), !insn.addr !413
  %77 = inttoptr i32 %edi.2.reload to i128*, !insn.addr !414
  %78 = load i128, i128* %77, align 4, !insn.addr !414
  call void @__asm_movdqa(i128 %78, i128 %76), !insn.addr !414
  %79 = call i128 @__asm_movdqa.8(i128 %69), !insn.addr !415
  %80 = call i128 @__asm_palignr(i128 %69, i128 %75, i32 12), !insn.addr !416
  %81 = add i32 %edi.2.reload, 16, !insn.addr !417
  %82 = inttoptr i32 %81 to i128*, !insn.addr !417
  %83 = load i128, i128* %82, align 4, !insn.addr !417
  call void @__asm_movdqa(i128 %83, i128 %80), !insn.addr !417
  %84 = call i128 @__asm_movdqa.8(i128 %73), !insn.addr !418
  %85 = call i128 @__asm_palignr(i128 %73, i128 %79, i32 12), !insn.addr !419
  %86 = add i32 %edi.2.reload, 32, !insn.addr !420
  %87 = inttoptr i32 %86 to i128*, !insn.addr !420
  %88 = load i128, i128* %87, align 4, !insn.addr !420
  call void @__asm_movdqa(i128 %88, i128 %85), !insn.addr !420
  %89 = add i32 %edi.2.reload, 48, !insn.addr !421
  %90 = icmp eq i1 %74, false, !insn.addr !422
  store i128 %84, i128* %xmm1.0.reg2mem, !insn.addr !422
  store i32 %65, i32* %ecx.2.reg2mem, !insn.addr !422
  store i32 %70, i32* %esi.2.reg2mem, !insn.addr !422
  store i32 %89, i32* %edi.2.reg2mem, !insn.addr !422
  br i1 %90, label %dec_label_pc_41425c, label %dec_label_pc_4142a5, !insn.addr !422

dec_label_pc_4142a5:                              ; preds = %dec_label_pc_41425c
  %91 = add i32 %esi.2.reload, 60, !insn.addr !423
  store i32 %65, i32* %ecx.5.ph.reg2mem, !insn.addr !424
  store i32 %91, i32* %esi.5.ph.reg2mem, !insn.addr !424
  store i32 %89, i32* %edi.5.ph.reg2mem, !insn.addr !424
  br label %dec_label_pc_41435c.preheader, !insn.addr !424

dec_label_pc_4142ad:                              ; preds = %dec_label_pc_414240
  %92 = add i32 %esi.1.reload, -8, !insn.addr !425
  %93 = inttoptr i32 %92 to i128*, !insn.addr !425
  %94 = load i128, i128* %93, align 4, !insn.addr !425
  %95 = call i128 @__asm_movdqa.8(i128 %94), !insn.addr !425
  store i128 %95, i128* %xmm1.1.reg2mem, !insn.addr !426
  store i32 %ecx.1.reload, i32* %ecx.3.reg2mem, !insn.addr !426
  store i32 %92, i32* %esi.3.reg2mem, !insn.addr !426
  store i32 %edi.1.reload, i32* %edi.3.reg2mem, !insn.addr !426
  br label %dec_label_pc_4142b8, !insn.addr !426

dec_label_pc_4142b8:                              ; preds = %dec_label_pc_4142b8, %dec_label_pc_4142ad
  %edi.3.reload = load i32, i32* %edi.3.reg2mem
  %esi.3.reload = load i32, i32* %esi.3.reg2mem
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %xmm1.1.reload = load i128, i128* %xmm1.1.reg2mem
  %96 = add i32 %esi.3.reload, 16, !insn.addr !427
  %97 = inttoptr i32 %96 to i128*, !insn.addr !427
  %98 = load i128, i128* %97, align 4, !insn.addr !427
  %99 = call i128 @__asm_movdqa.8(i128 %98), !insn.addr !427
  %100 = add i32 %ecx.3.reload, -48, !insn.addr !428
  %101 = add i32 %esi.3.reload, 32, !insn.addr !429
  %102 = inttoptr i32 %101 to i128*, !insn.addr !429
  %103 = load i128, i128* %102, align 4, !insn.addr !429
  %104 = call i128 @__asm_movdqa.8(i128 %103), !insn.addr !429
  %105 = add i32 %esi.3.reload, 48, !insn.addr !430
  %106 = inttoptr i32 %105 to i128*, !insn.addr !430
  %107 = load i128, i128* %106, align 4, !insn.addr !430
  %108 = call i128 @__asm_movdqa.8(i128 %107), !insn.addr !430
  %109 = icmp ult i32 %100, 48, !insn.addr !431
  %110 = call i128 @__asm_movdqa.8(i128 %99), !insn.addr !432
  %111 = call i128 @__asm_palignr(i128 %99, i128 %xmm1.1.reload, i32 8), !insn.addr !433
  %112 = inttoptr i32 %edi.3.reload to i128*, !insn.addr !434
  %113 = load i128, i128* %112, align 4, !insn.addr !434
  call void @__asm_movdqa(i128 %113, i128 %111), !insn.addr !434
  %114 = call i128 @__asm_movdqa.8(i128 %104), !insn.addr !435
  %115 = call i128 @__asm_palignr(i128 %104, i128 %110, i32 8), !insn.addr !436
  %116 = add i32 %edi.3.reload, 16, !insn.addr !437
  %117 = inttoptr i32 %116 to i128*, !insn.addr !437
  %118 = load i128, i128* %117, align 4, !insn.addr !437
  call void @__asm_movdqa(i128 %118, i128 %115), !insn.addr !437
  %119 = call i128 @__asm_movdqa.8(i128 %108), !insn.addr !438
  %120 = call i128 @__asm_palignr(i128 %108, i128 %114, i32 8), !insn.addr !439
  %121 = add i32 %edi.3.reload, 32, !insn.addr !440
  %122 = inttoptr i32 %121 to i128*, !insn.addr !440
  %123 = load i128, i128* %122, align 4, !insn.addr !440
  call void @__asm_movdqa(i128 %123, i128 %120), !insn.addr !440
  %124 = add i32 %edi.3.reload, 48, !insn.addr !441
  %125 = icmp eq i1 %109, false, !insn.addr !442
  store i128 %119, i128* %xmm1.1.reg2mem, !insn.addr !442
  store i32 %100, i32* %ecx.3.reg2mem, !insn.addr !442
  store i32 %105, i32* %esi.3.reg2mem, !insn.addr !442
  store i32 %124, i32* %edi.3.reg2mem, !insn.addr !442
  br i1 %125, label %dec_label_pc_4142b8, label %dec_label_pc_414301, !insn.addr !442

dec_label_pc_414301:                              ; preds = %dec_label_pc_4142b8
  %126 = add i32 %esi.3.reload, 56, !insn.addr !443
  store i32 %100, i32* %ecx.5.ph.reg2mem, !insn.addr !444
  store i32 %126, i32* %esi.5.ph.reg2mem, !insn.addr !444
  store i32 %124, i32* %edi.5.ph.reg2mem, !insn.addr !444
  br label %dec_label_pc_41435c.preheader, !insn.addr !444

dec_label_pc_414306:                              ; preds = %dec_label_pc_414248
  %127 = add i32 %esi.1.reload, -4, !insn.addr !445
  %128 = inttoptr i32 %127 to i128*, !insn.addr !445
  %129 = load i128, i128* %128, align 4, !insn.addr !445
  %130 = call i128 @__asm_movdqa.8(i128 %129), !insn.addr !445
  store i128 %130, i128* %xmm1.2.reg2mem, !insn.addr !446
  store i32 %ecx.1.reload, i32* %ecx.4.reg2mem, !insn.addr !446
  store i32 %127, i32* %esi.4.reg2mem, !insn.addr !446
  store i32 %edi.1.reload, i32* %edi.4.reg2mem, !insn.addr !446
  br label %dec_label_pc_414310, !insn.addr !446

dec_label_pc_414310:                              ; preds = %dec_label_pc_414310, %dec_label_pc_414306
  %edi.4.reload = load i32, i32* %edi.4.reg2mem
  %esi.4.reload = load i32, i32* %esi.4.reg2mem
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %xmm1.2.reload = load i128, i128* %xmm1.2.reg2mem
  %131 = add i32 %esi.4.reload, 16, !insn.addr !447
  %132 = inttoptr i32 %131 to i128*, !insn.addr !447
  %133 = load i128, i128* %132, align 4, !insn.addr !447
  %134 = call i128 @__asm_movdqa.8(i128 %133), !insn.addr !447
  %135 = add i32 %ecx.4.reload, -48, !insn.addr !448
  %136 = add i32 %esi.4.reload, 32, !insn.addr !449
  %137 = inttoptr i32 %136 to i128*, !insn.addr !449
  %138 = load i128, i128* %137, align 4, !insn.addr !449
  %139 = call i128 @__asm_movdqa.8(i128 %138), !insn.addr !449
  %140 = add i32 %esi.4.reload, 48, !insn.addr !450
  %141 = inttoptr i32 %140 to i128*, !insn.addr !450
  %142 = load i128, i128* %141, align 4, !insn.addr !450
  %143 = call i128 @__asm_movdqa.8(i128 %142), !insn.addr !450
  %144 = icmp ult i32 %135, 48, !insn.addr !451
  %145 = call i128 @__asm_movdqa.8(i128 %134), !insn.addr !452
  %146 = call i128 @__asm_palignr(i128 %134, i128 %xmm1.2.reload, i32 4), !insn.addr !453
  %147 = inttoptr i32 %edi.4.reload to i128*, !insn.addr !454
  %148 = load i128, i128* %147, align 4, !insn.addr !454
  call void @__asm_movdqa(i128 %148, i128 %146), !insn.addr !454
  %149 = call i128 @__asm_movdqa.8(i128 %139), !insn.addr !455
  %150 = call i128 @__asm_palignr(i128 %139, i128 %145, i32 4), !insn.addr !456
  %151 = add i32 %edi.4.reload, 16, !insn.addr !457
  %152 = inttoptr i32 %151 to i128*, !insn.addr !457
  %153 = load i128, i128* %152, align 4, !insn.addr !457
  call void @__asm_movdqa(i128 %153, i128 %150), !insn.addr !457
  %154 = call i128 @__asm_movdqa.8(i128 %143), !insn.addr !458
  %155 = call i128 @__asm_palignr(i128 %143, i128 %149, i32 4), !insn.addr !459
  %156 = add i32 %edi.4.reload, 32, !insn.addr !460
  %157 = inttoptr i32 %156 to i128*, !insn.addr !460
  %158 = load i128, i128* %157, align 4, !insn.addr !460
  call void @__asm_movdqa(i128 %158, i128 %155), !insn.addr !460
  %159 = add i32 %edi.4.reload, 48, !insn.addr !461
  %160 = icmp eq i1 %144, false, !insn.addr !462
  store i128 %154, i128* %xmm1.2.reg2mem, !insn.addr !462
  store i32 %135, i32* %ecx.4.reg2mem, !insn.addr !462
  store i32 %140, i32* %esi.4.reg2mem, !insn.addr !462
  store i32 %159, i32* %edi.4.reg2mem, !insn.addr !462
  br i1 %160, label %dec_label_pc_414310, label %dec_label_pc_414359, !insn.addr !462

dec_label_pc_414359:                              ; preds = %dec_label_pc_414310
  %161 = add i32 %esi.4.reload, 52, !insn.addr !463
  store i32 %135, i32* %ecx.5.ph.reg2mem, !insn.addr !463
  store i32 %161, i32* %esi.5.ph.reg2mem, !insn.addr !463
  store i32 %159, i32* %edi.5.ph.reg2mem, !insn.addr !463
  br label %dec_label_pc_41435c.preheader, !insn.addr !463

dec_label_pc_41435c.preheader:                    ; preds = %dec_label_pc_4142a5, %dec_label_pc_414301, %dec_label_pc_414359
  %edi.5.ph.reload = load i32, i32* %edi.5.ph.reg2mem
  %esi.5.ph.reload = load i32, i32* %esi.5.ph.reg2mem
  %ecx.5.ph.reload = load i32, i32* %ecx.5.ph.reg2mem
  %162 = icmp ult i32 %ecx.5.ph.reload, 16, !insn.addr !464
  store i32 %edi.5.ph.reload, i32* %edi.548.reg2mem, !insn.addr !465
  store i32 %esi.5.ph.reload, i32* %esi.547.reg2mem, !insn.addr !465
  store i32 %ecx.5.ph.reload, i32* %ecx.546.reg2mem, !insn.addr !465
  store i32 %ecx.5.ph.reload, i32* %ecx.5.lcssa.reg2mem, !insn.addr !465
  store i32 %esi.5.ph.reload, i32* %esi.5.lcssa.reg2mem, !insn.addr !465
  store i32 %edi.5.ph.reload, i32* %edi.5.lcssa.reg2mem, !insn.addr !465
  br i1 %162, label %dec_label_pc_414374, label %dec_label_pc_414361, !insn.addr !465

dec_label_pc_414361:                              ; preds = %dec_label_pc_41435c.preheader, %dec_label_pc_414361
  %ecx.546.reload = load i32, i32* %ecx.546.reg2mem
  %esi.547.reload = load i32, i32* %esi.547.reg2mem
  %edi.548.reload = load i32, i32* %edi.548.reg2mem
  %163 = inttoptr i32 %esi.547.reload to i128*, !insn.addr !466
  %164 = load i128, i128* %163, align 4, !insn.addr !466
  %165 = call i128 @__asm_movdqu.5(i128 %164), !insn.addr !466
  %166 = add i32 %ecx.546.reload, -16, !insn.addr !467
  %167 = add i32 %esi.547.reload, 16, !insn.addr !468
  %168 = inttoptr i32 %edi.548.reload to i128*, !insn.addr !469
  %169 = load i128, i128* %168, align 4, !insn.addr !469
  call void @__asm_movdqa(i128 %169, i128 %165), !insn.addr !469
  %170 = add i32 %edi.548.reload, 16, !insn.addr !470
  %171 = icmp ult i32 %166, 16, !insn.addr !464
  store i32 %170, i32* %edi.548.reg2mem, !insn.addr !465
  store i32 %167, i32* %esi.547.reg2mem, !insn.addr !465
  store i32 %166, i32* %ecx.546.reg2mem, !insn.addr !465
  br i1 %171, label %dec_label_pc_41435c.dec_label_pc_414374_crit_edge, label %dec_label_pc_414361, !insn.addr !465

dec_label_pc_41435c.dec_label_pc_414374_crit_edge: ; preds = %dec_label_pc_414361
  %172 = and i32 %ecx.5.ph.reload, 15
  store i32 %172, i32* %ecx.5.lcssa.reg2mem
  store i32 %167, i32* %esi.5.lcssa.reg2mem
  store i32 %170, i32* %edi.5.lcssa.reg2mem
  br label %dec_label_pc_414374

dec_label_pc_414374:                              ; preds = %dec_label_pc_41435c.dec_label_pc_414374_crit_edge, %dec_label_pc_41435c.preheader
  %edi.5.lcssa.reload = load i32, i32* %edi.5.lcssa.reg2mem
  %esi.5.lcssa.reload = load i32, i32* %esi.5.lcssa.reg2mem
  %ecx.5.lcssa.reload = load i32, i32* %ecx.5.lcssa.reg2mem
  %173 = and i32 %ecx.5.lcssa.reload, 4, !insn.addr !471
  %174 = icmp ne i32 %173, 0, !insn.addr !471
  %175 = icmp eq i1 %174, false, !insn.addr !472
  store i32 %ecx.5.lcssa.reload, i32* %ecx.6.reg2mem, !insn.addr !472
  store i32 %esi.5.lcssa.reload, i32* %esi.6.reg2mem, !insn.addr !472
  store i32 %edi.5.lcssa.reload, i32* %edi.6.reg2mem, !insn.addr !472
  br i1 %175, label %dec_label_pc_414387, label %dec_label_pc_41437a, !insn.addr !472

dec_label_pc_41437a:                              ; preds = %dec_label_pc_414374
  %176 = inttoptr i32 %esi.5.lcssa.reload to i32*, !insn.addr !473
  %177 = load i32, i32* %176, align 4, !insn.addr !473
  %178 = add i32 %ecx.5.lcssa.reload, -4, !insn.addr !474
  %179 = add i32 %esi.5.lcssa.reload, 4, !insn.addr !475
  %180 = inttoptr i32 %edi.5.lcssa.reload to i32*, !insn.addr !476
  store i32 %177, i32* %180, align 4, !insn.addr !476
  %181 = add i32 %edi.5.lcssa.reload, 4, !insn.addr !477
  store i32 %178, i32* %ecx.6.reg2mem, !insn.addr !477
  store i32 %179, i32* %esi.6.reg2mem, !insn.addr !477
  store i32 %181, i32* %edi.6.reg2mem, !insn.addr !477
  br label %dec_label_pc_414387, !insn.addr !477

dec_label_pc_414387:                              ; preds = %dec_label_pc_41437a, %dec_label_pc_414374
  %edi.6.reload = load i32, i32* %edi.6.reg2mem
  %esi.6.reload = load i32, i32* %esi.6.reg2mem
  %ecx.6.reload = load i32, i32* %ecx.6.reg2mem
  store i32 %ecx.6.reload, i32* %ecx.7.reg2mem
  store i32 %esi.6.reload, i32* %esi.7.reg2mem
  store i32 %edi.6.reload, i32* %edi.7.reg2mem
  br label %dec_label_pc_41439e

dec_label_pc_41438d:                              ; preds = %dec_label_pc_41439e
  %182 = inttoptr i32 %esi.7.reload to i64*, !insn.addr !478
  %183 = load i64, i64* %182, align 4, !insn.addr !478
  %184 = call i128 @__asm_movq(i64 %183), !insn.addr !478
  %185 = add i32 %ecx.7.reload, -8, !insn.addr !479
  %186 = add i32 %esi.7.reload, 8, !insn.addr !480
  %187 = inttoptr i32 %edi.7.reload to i64*, !insn.addr !481
  %188 = load i64, i64* %187, align 4, !insn.addr !481
  call void @__asm_movq.7(i64 %188, i128 %184), !insn.addr !481
  %189 = add i32 %edi.7.reload, 8, !insn.addr !482
  store i32 %185, i32* %ecx.7.reg2mem, !insn.addr !482
  store i32 %186, i32* %esi.7.reg2mem, !insn.addr !482
  store i32 %189, i32* %edi.7.reg2mem, !insn.addr !482
  br label %dec_label_pc_41439e, !insn.addr !482

dec_label_pc_41439e:                              ; preds = %dec_label_pc_414387, %dec_label_pc_41438d
  %edi.7.reload = load i32, i32* %edi.7.reg2mem
  %esi.7.reload = load i32, i32* %esi.7.reg2mem
  %ecx.7.reload = load i32, i32* %ecx.7.reg2mem
  store i32 %ecx.7.reload, i32* @2, align 4, !insn.addr !483
  store i32 %esi.7.reload, i32* %esi.10.reg2mem, !insn.addr !484
  store i32 %edi.7.reload, i32* %edi.10.reg2mem, !insn.addr !484
  store i32 %esi.7.reload, i32* %esi.11.reg2mem, !insn.addr !484
  store i32 %edi.7.reload, i32* %edi.11.reg2mem, !insn.addr !484
  store i32 %esi.7.reload, i32* %esi.12.reg2mem, !insn.addr !484
  store i32 %edi.7.reload, i32* %edi.12.reg2mem, !insn.addr !484
  switch i32 %ecx.7.reload, label %dec_label_pc_41438d [
    i32 0, label %dec_label_pc_4143f4
    i32 1, label %dec_label_pc_4143fc
    i32 2, label %dec_label_pc_414408
    i32 3, label %dec_label_pc_41441c
  ], !insn.addr !484

dec_label_pc_4143a7:                              ; preds = %dec_label_pc_4141b1, %dec_label_pc_4141fe, %dec_label_pc_4141f0
  %190 = and i32 %2, 3, !insn.addr !485
  %191 = icmp eq i32 %190, 0, !insn.addr !485
  store i32 %count, i32* %ecx.8.reg2mem, !insn.addr !486
  store i32 %1, i32* %esi.8.reg2mem, !insn.addr !486
  store i32 %2, i32* %edi.8.reg2mem, !insn.addr !486
  store i32 %count, i32* %ecx.9.reg2mem, !insn.addr !486
  store i32 %1, i32* %esi.9.reg2mem, !insn.addr !486
  store i32 %2, i32* %edi.9.reg2mem, !insn.addr !486
  br i1 %191, label %dec_label_pc_4143c2, label %dec_label_pc_4143af, !insn.addr !486

dec_label_pc_4143af:                              ; preds = %dec_label_pc_4143a7, %dec_label_pc_4143af
  %edi.8.reload = load i32, i32* %edi.8.reg2mem
  %esi.8.reload = load i32, i32* %esi.8.reg2mem
  %ecx.8.reload = load i32, i32* %ecx.8.reg2mem
  %192 = inttoptr i32 %esi.8.reload to i8*, !insn.addr !487
  %193 = load i8, i8* %192, align 1, !insn.addr !487
  %194 = inttoptr i32 %edi.8.reload to i8*, !insn.addr !488
  store i8 %193, i8* %194, align 1, !insn.addr !488
  %195 = add i32 %ecx.8.reload, -1, !insn.addr !489
  %196 = add i32 %esi.8.reload, 1, !insn.addr !490
  %197 = add i32 %edi.8.reload, 1, !insn.addr !491
  %198 = and i32 %197, 3, !insn.addr !492
  %199 = icmp eq i32 %198, 0, !insn.addr !492
  %200 = icmp eq i1 %199, false, !insn.addr !493
  store i32 %195, i32* %ecx.8.reg2mem, !insn.addr !493
  store i32 %196, i32* %esi.8.reg2mem, !insn.addr !493
  store i32 %197, i32* %edi.8.reg2mem, !insn.addr !493
  store i32 %195, i32* %ecx.9.reg2mem, !insn.addr !493
  store i32 %196, i32* %esi.9.reg2mem, !insn.addr !493
  store i32 %197, i32* %edi.9.reg2mem, !insn.addr !493
  br i1 %200, label %dec_label_pc_4143af, label %dec_label_pc_4143c2, !insn.addr !493

dec_label_pc_4143c2:                              ; preds = %dec_label_pc_4143af, %dec_label_pc_4143a7, %dec_label_pc_41420a
  %edi.9.reload = load i32, i32* %edi.9.reg2mem
  %esi.9.reload = load i32, i32* %esi.9.reg2mem
  %ecx.9.reload = load i32, i32* %ecx.9.reg2mem
  %201 = udiv i32 %ecx.9.reload, 4, !insn.addr !494
  %202 = inttoptr i32 %esi.9.reload to i8*, !insn.addr !495
  %203 = inttoptr i32 %edi.9.reload to i8*, !insn.addr !495
  call void @__asm_rep_movsd_memcpy(i8* %203, i8* %202, i32 %201), !insn.addr !495
  %204 = select i1 %0, i32 -4, i32 4, !insn.addr !495
  %205 = mul i32 %201, %204, !insn.addr !495
  %206 = add i32 %edi.9.reload, %205, !insn.addr !495
  %207 = and i32 %ecx.9.reload, 3, !insn.addr !496
  store i32 %207, i32* @3, align 4, !insn.addr !497
  store i32 %206, i32* %esi.10.reg2mem, !insn.addr !497
  store i32 %206, i32* %edi.10.reg2mem, !insn.addr !497
  store i32 %206, i32* %esi.11.reg2mem, !insn.addr !497
  store i32 %206, i32* %edi.11.reg2mem, !insn.addr !497
  store i32 %206, i32* %esi.12.reg2mem, !insn.addr !497
  store i32 %206, i32* %edi.12.reg2mem, !insn.addr !497
  switch i32 %207, label %dec_label_pc_41467b3 [
    i32 0, label %dec_label_pc_4143f4
    i32 1, label %dec_label_pc_4143fc
    i32 2, label %dec_label_pc_414408
    i32 3, label %dec_label_pc_41441c
  ], !insn.addr !497

dec_label_pc_4143f4:                              ; preds = %dec_label_pc_41439e, %dec_label_pc_41469d, %dec_label_pc_4145b5, %dec_label_pc_414476, %dec_label_pc_41464d, %dec_label_pc_41467b, %dec_label_pc_414696, %dec_label_pc_4145b1, %dec_label_pc_4143c2
  ret void, !insn.addr !498

dec_label_pc_4143fc:                              ; preds = %dec_label_pc_41439e, %dec_label_pc_4143c2
  %edi.10.reload = load i32, i32* %edi.10.reg2mem
  %esi.10.reload = load i32, i32* %esi.10.reg2mem
  %208 = inttoptr i32 %esi.10.reload to i8*, !insn.addr !499
  %209 = load i8, i8* %208, align 1, !insn.addr !499
  %210 = inttoptr i32 %edi.10.reload to i8*, !insn.addr !500
  store i8 %209, i8* %210, align 1, !insn.addr !500
  ret void, !insn.addr !501

dec_label_pc_414408:                              ; preds = %dec_label_pc_41439e, %dec_label_pc_4143c2
  %edi.11.reload = load i32, i32* %edi.11.reg2mem
  %esi.11.reload = load i32, i32* %esi.11.reg2mem
  %211 = inttoptr i32 %esi.11.reload to i8*, !insn.addr !502
  %212 = load i8, i8* %211, align 1, !insn.addr !502
  %213 = inttoptr i32 %edi.11.reload to i8*, !insn.addr !503
  store i8 %212, i8* %213, align 1, !insn.addr !503
  %214 = add i32 %esi.11.reload, 1, !insn.addr !504
  %215 = inttoptr i32 %214 to i8*, !insn.addr !504
  %216 = load i8, i8* %215, align 1, !insn.addr !504
  %217 = add i32 %edi.11.reload, 1, !insn.addr !505
  %218 = inttoptr i32 %217 to i8*, !insn.addr !505
  store i8 %216, i8* %218, align 1, !insn.addr !505
  ret void, !insn.addr !506

dec_label_pc_41441c:                              ; preds = %dec_label_pc_41439e, %dec_label_pc_4143c2
  %edi.12.reload = load i32, i32* %edi.12.reg2mem
  %esi.12.reload = load i32, i32* %esi.12.reg2mem
  %219 = inttoptr i32 %esi.12.reload to i8*, !insn.addr !507
  %220 = load i8, i8* %219, align 1, !insn.addr !507
  %221 = inttoptr i32 %edi.12.reload to i8*, !insn.addr !508
  store i8 %220, i8* %221, align 1, !insn.addr !508
  %222 = add i32 %esi.12.reload, 1, !insn.addr !509
  %223 = inttoptr i32 %222 to i8*, !insn.addr !509
  %224 = load i8, i8* %223, align 1, !insn.addr !509
  %225 = add i32 %edi.12.reload, 1, !insn.addr !510
  %226 = inttoptr i32 %225 to i8*, !insn.addr !510
  store i8 %224, i8* %226, align 1, !insn.addr !510
  %227 = add i32 %esi.12.reload, 2, !insn.addr !511
  %228 = inttoptr i32 %227 to i8*, !insn.addr !511
  %229 = load i8, i8* %228, align 1, !insn.addr !511
  %230 = add i32 %edi.12.reload, 2, !insn.addr !512
  %231 = inttoptr i32 %230 to i8*, !insn.addr !512
  store i8 %229, i8* %231, align 1, !insn.addr !512
  ret void, !insn.addr !513

dec_label_pc_414434:                              ; preds = %dec_label_pc_414180
  %232 = add i32 %2, %count, !insn.addr !514
  %233 = icmp ult i32 %count, 32, !insn.addr !515
  store i32 %count, i32* %ecx.15.reg2mem, !insn.addr !516
  store i32 %3, i32* %esi.19.reg2mem, !insn.addr !516
  store i32 %232, i32* %edi.19.reg2mem, !insn.addr !516
  br i1 %233, label %dec_label_pc_414594, label %dec_label_pc_414443, !insn.addr !516

dec_label_pc_414443:                              ; preds = %dec_label_pc_414434
  %234 = load i32, i32* @__isa_enabled, align 4, !insn.addr !517
  %235 = and i32 %234, 2, !insn.addr !517
  %236 = icmp eq i32 %235, 0, !insn.addr !517
  br i1 %236, label %dec_label_pc_414451, label %dec_label_pc_4144e5, !insn.addr !518

dec_label_pc_414451:                              ; preds = %dec_label_pc_414443
  %237 = and i32 %232, 3, !insn.addr !519
  %238 = icmp eq i32 %237, 0, !insn.addr !519
  store i32 %237, i32* %edx.0.reg2mem, !insn.addr !520
  store i32 %3, i32* %esi.13.reg2mem, !insn.addr !520
  store i32 %232, i32* %edi.13.reg2mem, !insn.addr !520
  store i32 %count, i32* %ecx.10.reg2mem, !insn.addr !520
  store i32 %3, i32* %esi.14.reg2mem, !insn.addr !520
  store i32 %232, i32* %edi.14.reg2mem, !insn.addr !520
  br i1 %238, label %dec_label_pc_414476, label %dec_label_pc_414460, !insn.addr !520

dec_label_pc_414460:                              ; preds = %dec_label_pc_414451, %dec_label_pc_414460
  %edi.13.reload = load i32, i32* %edi.13.reg2mem
  %esi.13.reload = load i32, i32* %esi.13.reg2mem
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %239 = add i32 %esi.13.reload, -1, !insn.addr !521
  %240 = inttoptr i32 %239 to i8*, !insn.addr !521
  %241 = load i8, i8* %240, align 1, !insn.addr !521
  %242 = add i32 %edi.13.reload, -1, !insn.addr !522
  %243 = inttoptr i32 %242 to i8*, !insn.addr !522
  store i8 %241, i8* %243, align 1, !insn.addr !522
  %244 = add i32 %edx.0.reload, -1, !insn.addr !523
  %245 = icmp eq i32 %244, 0, !insn.addr !523
  %246 = icmp eq i1 %245, false, !insn.addr !524
  store i32 %244, i32* %edx.0.reg2mem, !insn.addr !524
  store i32 %239, i32* %esi.13.reg2mem, !insn.addr !524
  store i32 %242, i32* %edi.13.reg2mem, !insn.addr !524
  br i1 %246, label %dec_label_pc_414460, label %dec_label_pc_414476.loopexit, !insn.addr !524

dec_label_pc_414476.loopexit:                     ; preds = %dec_label_pc_414460
  %247 = sub i32 %count, %237, !insn.addr !525
  store i32 %247, i32* %ecx.10.reg2mem
  store i32 %239, i32* %esi.14.reg2mem
  store i32 %242, i32* %edi.14.reg2mem
  br label %dec_label_pc_414476

dec_label_pc_414476:                              ; preds = %dec_label_pc_414476.loopexit, %dec_label_pc_414451
  %edi.14.reload = load i32, i32* %edi.14.reg2mem
  %esi.14.reload = load i32, i32* %esi.14.reg2mem
  %ecx.10.reload = load i32, i32* %ecx.10.reg2mem
  %248 = udiv i32 %ecx.10.reload, 4, !insn.addr !526
  %249 = and i32 %ecx.10.reload, 3, !insn.addr !527
  %250 = add i32 %esi.14.reload, -4, !insn.addr !528
  %251 = add i32 %edi.14.reload, -4, !insn.addr !529
  %252 = inttoptr i32 %250 to i8*, !insn.addr !530
  %253 = inttoptr i32 %251 to i8*, !insn.addr !530
  call void @__asm_rep_movsd_memcpy(i8* %253, i8* %252, i32 %248), !insn.addr !530
  store i32 %249, i32* @4, align 4, !insn.addr !531
  br label %dec_label_pc_4143f4

dec_label_pc_4144e5:                              ; preds = %dec_label_pc_414443
  %254 = and i32 %232, 15, !insn.addr !532
  %255 = icmp eq i32 %254, 0, !insn.addr !532
  store i32 %count, i32* %ecx.11.reg2mem, !insn.addr !533
  store i32 %3, i32* %esi.15.reg2mem, !insn.addr !533
  store i32 %232, i32* %edi.15.reg2mem, !insn.addr !533
  store i32 %count, i32* %ecx.12.ph.reg2mem, !insn.addr !533
  store i32 %3, i32* %esi.16.ph.reg2mem, !insn.addr !533
  store i32 %232, i32* %edi.16.ph.reg2mem, !insn.addr !533
  br i1 %255, label %dec_label_pc_4144fc.preheader, label %dec_label_pc_4144ed, !insn.addr !533

dec_label_pc_4144ed:                              ; preds = %dec_label_pc_4144e5, %dec_label_pc_4144ed
  %edi.15.reload = load i32, i32* %edi.15.reg2mem
  %esi.15.reload = load i32, i32* %esi.15.reg2mem
  %ecx.11.reload = load i32, i32* %ecx.11.reg2mem
  %256 = add i32 %ecx.11.reload, -1, !insn.addr !534
  %257 = add i32 %esi.15.reload, -1, !insn.addr !535
  %258 = add i32 %edi.15.reload, -1, !insn.addr !536
  %259 = inttoptr i32 %257 to i8*, !insn.addr !537
  %260 = load i8, i8* %259, align 1, !insn.addr !537
  %261 = inttoptr i32 %258 to i8*, !insn.addr !538
  store i8 %260, i8* %261, align 1, !insn.addr !538
  %262 = and i32 %258, 15, !insn.addr !539
  %263 = icmp eq i32 %262, 0, !insn.addr !539
  %264 = icmp eq i1 %263, false, !insn.addr !540
  store i32 %256, i32* %ecx.11.reg2mem, !insn.addr !540
  store i32 %257, i32* %esi.15.reg2mem, !insn.addr !540
  store i32 %258, i32* %edi.15.reg2mem, !insn.addr !540
  store i32 %256, i32* %ecx.12.ph.reg2mem, !insn.addr !540
  store i32 %257, i32* %esi.16.ph.reg2mem, !insn.addr !540
  store i32 %258, i32* %edi.16.ph.reg2mem, !insn.addr !540
  br i1 %264, label %dec_label_pc_4144ed, label %dec_label_pc_4144fc.preheader, !insn.addr !540

dec_label_pc_4144fc.preheader:                    ; preds = %dec_label_pc_4144ed, %dec_label_pc_4144e5
  %edi.16.ph.reload = load i32, i32* %edi.16.ph.reg2mem
  %esi.16.ph.reload = load i32, i32* %esi.16.ph.reg2mem
  %ecx.12.ph.reload = load i32, i32* %ecx.12.ph.reg2mem
  store i32 %ecx.12.ph.reload, i32* %ecx.12.reg2mem
  store i32 %esi.16.ph.reload, i32* %esi.16.reg2mem
  store i32 %edi.16.ph.reload, i32* %edi.16.reg2mem
  br label %dec_label_pc_4144fc

dec_label_pc_4144fc:                              ; preds = %dec_label_pc_4144fc.preheader, %dec_label_pc_414504
  %edi.16.reload = load i32, i32* %edi.16.reg2mem
  %esi.16.reload = load i32, i32* %esi.16.reg2mem
  %ecx.12.reload = load i32, i32* %ecx.12.reg2mem
  %265 = icmp ult i32 %ecx.12.reload, 128, !insn.addr !541
  store i32 %ecx.12.reload, i32* %ecx.13.reg2mem, !insn.addr !542
  store i32 %esi.16.reload, i32* %esi.17.reg2mem, !insn.addr !542
  store i32 %edi.16.reload, i32* %edi.17.reg2mem, !insn.addr !542
  br i1 %265, label %dec_label_pc_41456c, label %dec_label_pc_414504, !insn.addr !542

dec_label_pc_414504:                              ; preds = %dec_label_pc_4144fc
  %266 = add i32 %esi.16.reload, -128, !insn.addr !543
  %267 = add i32 %edi.16.reload, -128, !insn.addr !544
  %268 = inttoptr i32 %266 to i128*, !insn.addr !545
  %269 = load i128, i128* %268, align 4, !insn.addr !545
  %270 = call i128 @__asm_movdqu.5(i128 %269), !insn.addr !545
  %271 = add i32 %esi.16.reload, -112, !insn.addr !546
  %272 = inttoptr i32 %271 to i128*, !insn.addr !546
  %273 = load i128, i128* %272, align 4, !insn.addr !546
  %274 = call i128 @__asm_movdqu.5(i128 %273), !insn.addr !546
  %275 = add i32 %esi.16.reload, -96, !insn.addr !547
  %276 = inttoptr i32 %275 to i128*, !insn.addr !547
  %277 = load i128, i128* %276, align 4, !insn.addr !547
  %278 = call i128 @__asm_movdqu.5(i128 %277), !insn.addr !547
  %279 = add i32 %esi.16.reload, -80, !insn.addr !548
  %280 = inttoptr i32 %279 to i128*, !insn.addr !548
  %281 = load i128, i128* %280, align 4, !insn.addr !548
  %282 = call i128 @__asm_movdqu.5(i128 %281), !insn.addr !548
  %283 = add i32 %esi.16.reload, -64, !insn.addr !549
  %284 = inttoptr i32 %283 to i128*, !insn.addr !549
  %285 = load i128, i128* %284, align 4, !insn.addr !549
  %286 = call i128 @__asm_movdqu.5(i128 %285), !insn.addr !549
  %287 = add i32 %esi.16.reload, -48, !insn.addr !550
  %288 = inttoptr i32 %287 to i128*, !insn.addr !550
  %289 = load i128, i128* %288, align 4, !insn.addr !550
  %290 = call i128 @__asm_movdqu.5(i128 %289), !insn.addr !550
  %291 = add i32 %esi.16.reload, -32, !insn.addr !551
  %292 = inttoptr i32 %291 to i128*, !insn.addr !551
  %293 = load i128, i128* %292, align 4, !insn.addr !551
  %294 = call i128 @__asm_movdqu.5(i128 %293), !insn.addr !551
  %295 = add i32 %esi.16.reload, -16, !insn.addr !552
  %296 = inttoptr i32 %295 to i128*, !insn.addr !552
  %297 = load i128, i128* %296, align 4, !insn.addr !552
  %298 = call i128 @__asm_movdqu.5(i128 %297), !insn.addr !552
  %299 = inttoptr i32 %267 to i128*, !insn.addr !553
  %300 = load i128, i128* %299, align 4, !insn.addr !553
  call void @__asm_movdqu(i128 %300, i128 %270), !insn.addr !553
  %301 = add i32 %edi.16.reload, -112, !insn.addr !554
  %302 = inttoptr i32 %301 to i128*, !insn.addr !554
  %303 = load i128, i128* %302, align 4, !insn.addr !554
  call void @__asm_movdqu(i128 %303, i128 %274), !insn.addr !554
  %304 = add i32 %edi.16.reload, -96, !insn.addr !555
  %305 = inttoptr i32 %304 to i128*, !insn.addr !555
  %306 = load i128, i128* %305, align 4, !insn.addr !555
  call void @__asm_movdqu(i128 %306, i128 %278), !insn.addr !555
  %307 = add i32 %edi.16.reload, -80, !insn.addr !556
  %308 = inttoptr i32 %307 to i128*, !insn.addr !556
  %309 = load i128, i128* %308, align 4, !insn.addr !556
  call void @__asm_movdqu(i128 %309, i128 %282), !insn.addr !556
  %310 = add i32 %edi.16.reload, -64, !insn.addr !557
  %311 = inttoptr i32 %310 to i128*, !insn.addr !557
  %312 = load i128, i128* %311, align 4, !insn.addr !557
  call void @__asm_movdqu(i128 %312, i128 %286), !insn.addr !557
  %313 = add i32 %edi.16.reload, -48, !insn.addr !558
  %314 = inttoptr i32 %313 to i128*, !insn.addr !558
  %315 = load i128, i128* %314, align 4, !insn.addr !558
  call void @__asm_movdqu(i128 %315, i128 %290), !insn.addr !558
  %316 = add i32 %edi.16.reload, -32, !insn.addr !559
  %317 = inttoptr i32 %316 to i128*, !insn.addr !559
  %318 = load i128, i128* %317, align 4, !insn.addr !559
  call void @__asm_movdqu(i128 %318, i128 %294), !insn.addr !559
  %319 = add i32 %edi.16.reload, -16, !insn.addr !560
  %320 = inttoptr i32 %319 to i128*, !insn.addr !560
  %321 = load i128, i128* %320, align 4, !insn.addr !560
  call void @__asm_movdqu(i128 %321, i128 %298), !insn.addr !560
  %322 = add i32 %ecx.12.reload, -128, !insn.addr !561
  %323 = icmp ult i32 %322, 128, !insn.addr !562
  %324 = icmp eq i1 %323, false, !insn.addr !563
  store i32 %322, i32* %ecx.12.reg2mem, !insn.addr !563
  store i32 %266, i32* %esi.16.reg2mem, !insn.addr !563
  store i32 %267, i32* %edi.16.reg2mem, !insn.addr !563
  store i32 %322, i32* %ecx.13.reg2mem, !insn.addr !563
  store i32 %266, i32* %esi.17.reg2mem, !insn.addr !563
  store i32 %267, i32* %edi.17.reg2mem, !insn.addr !563
  br i1 %324, label %dec_label_pc_4144fc, label %dec_label_pc_41456c, !insn.addr !563

dec_label_pc_41456c:                              ; preds = %dec_label_pc_414504, %dec_label_pc_4144fc
  %edi.17.reload = load i32, i32* %edi.17.reg2mem
  %esi.17.reload = load i32, i32* %esi.17.reg2mem
  %ecx.13.reload = load i32, i32* %ecx.13.reg2mem
  %325 = icmp ult i32 %ecx.13.reload, 32, !insn.addr !564
  store i32 %ecx.13.reload, i32* %ecx.14.reg2mem, !insn.addr !565
  store i32 %esi.17.reload, i32* %esi.18.reg2mem, !insn.addr !565
  store i32 %edi.17.reload, i32* %edi.18.reg2mem, !insn.addr !565
  store i32 %ecx.13.reload, i32* %ecx.15.reg2mem, !insn.addr !565
  store i32 %esi.17.reload, i32* %esi.19.reg2mem, !insn.addr !565
  store i32 %edi.17.reload, i32* %edi.19.reg2mem, !insn.addr !565
  br i1 %325, label %dec_label_pc_414594, label %dec_label_pc_414571, !insn.addr !565

dec_label_pc_414571:                              ; preds = %dec_label_pc_41456c, %dec_label_pc_414571
  %edi.18.reload = load i32, i32* %edi.18.reg2mem
  %esi.18.reload = load i32, i32* %esi.18.reg2mem
  %ecx.14.reload = load i32, i32* %ecx.14.reg2mem
  %326 = add i32 %esi.18.reload, -32, !insn.addr !566
  %327 = add i32 %edi.18.reload, -32, !insn.addr !567
  %328 = inttoptr i32 %326 to i128*, !insn.addr !568
  %329 = load i128, i128* %328, align 4, !insn.addr !568
  %330 = call i128 @__asm_movdqu.5(i128 %329), !insn.addr !568
  %331 = add i32 %esi.18.reload, -16, !insn.addr !569
  %332 = inttoptr i32 %331 to i128*, !insn.addr !569
  %333 = load i128, i128* %332, align 4, !insn.addr !569
  %334 = call i128 @__asm_movdqu.5(i128 %333), !insn.addr !569
  %335 = inttoptr i32 %327 to i128*, !insn.addr !570
  %336 = load i128, i128* %335, align 4, !insn.addr !570
  call void @__asm_movdqu(i128 %336, i128 %330), !insn.addr !570
  %337 = add i32 %edi.18.reload, -16, !insn.addr !571
  %338 = inttoptr i32 %337 to i128*, !insn.addr !571
  %339 = load i128, i128* %338, align 4, !insn.addr !571
  call void @__asm_movdqu(i128 %339, i128 %334), !insn.addr !571
  %340 = add i32 %ecx.14.reload, -32, !insn.addr !572
  %341 = icmp ult i32 %340, 32, !insn.addr !573
  %342 = icmp eq i1 %341, false, !insn.addr !574
  store i32 %340, i32* %ecx.14.reg2mem, !insn.addr !574
  store i32 %326, i32* %esi.18.reg2mem, !insn.addr !574
  store i32 %327, i32* %edi.18.reg2mem, !insn.addr !574
  store i32 %340, i32* %ecx.15.reg2mem, !insn.addr !574
  store i32 %326, i32* %esi.19.reg2mem, !insn.addr !574
  store i32 %327, i32* %edi.19.reg2mem, !insn.addr !574
  br i1 %342, label %dec_label_pc_414571, label %dec_label_pc_414594, !insn.addr !574

dec_label_pc_414594:                              ; preds = %dec_label_pc_414571, %dec_label_pc_41456c, %dec_label_pc_414434
  %edi.19.reload = load i32, i32* %edi.19.reg2mem
  %esi.19.reload = load i32, i32* %esi.19.reg2mem
  %ecx.15.reload = load i32, i32* %ecx.15.reg2mem
  %343 = icmp ult i32 %ecx.15.reload, 4, !insn.addr !575
  store i32 %ecx.15.reload, i32* %ecx.16.reg2mem, !insn.addr !576
  store i32 %esi.19.reload, i32* %esi.20.reg2mem, !insn.addr !576
  store i32 %edi.19.reload, i32* %edi.20.reg2mem, !insn.addr !576
  store i32 %ecx.15.reload, i32* %ecx.17.reg2mem, !insn.addr !576
  store i32 %esi.19.reload, i32* %esi.21.reg2mem, !insn.addr !576
  store i32 %edi.19.reload, i32* %edi.21.reg2mem, !insn.addr !576
  br i1 %343, label %dec_label_pc_4145b1, label %dec_label_pc_41459c, !insn.addr !576

dec_label_pc_41459c:                              ; preds = %dec_label_pc_414594, %dec_label_pc_41459c
  %edi.20.reload = load i32, i32* %edi.20.reg2mem
  %esi.20.reload = load i32, i32* %esi.20.reg2mem
  %ecx.16.reload = load i32, i32* %ecx.16.reg2mem
  %344 = add i32 %edi.20.reload, -4, !insn.addr !577
  %345 = add i32 %esi.20.reload, -4, !insn.addr !578
  %346 = inttoptr i32 %345 to i32*, !insn.addr !579
  %347 = load i32, i32* %346, align 4, !insn.addr !579
  %348 = inttoptr i32 %344 to i32*, !insn.addr !580
  store i32 %347, i32* %348, align 4, !insn.addr !580
  %349 = add i32 %ecx.16.reload, -4, !insn.addr !581
  %350 = icmp ult i32 %349, 4, !insn.addr !582
  %351 = icmp eq i1 %350, false, !insn.addr !583
  store i32 %349, i32* %ecx.16.reg2mem, !insn.addr !583
  store i32 %345, i32* %esi.20.reg2mem, !insn.addr !583
  store i32 %344, i32* %edi.20.reg2mem, !insn.addr !583
  store i32 %349, i32* %ecx.17.reg2mem, !insn.addr !583
  store i32 %345, i32* %esi.21.reg2mem, !insn.addr !583
  store i32 %344, i32* %edi.21.reg2mem, !insn.addr !583
  br i1 %351, label %dec_label_pc_41459c, label %dec_label_pc_4145b1, !insn.addr !583

dec_label_pc_4145b1:                              ; preds = %dec_label_pc_41459c, %dec_label_pc_414594
  %edi.21.reload = load i32, i32* %edi.21.reg2mem
  %esi.21.reload = load i32, i32* %esi.21.reg2mem
  %ecx.17.reload = load i32, i32* %ecx.17.reg2mem
  %352 = icmp eq i32 %ecx.17.reload, 0, !insn.addr !584
  store i32 %ecx.17.reload, i32* %ecx.18.reg2mem, !insn.addr !585
  store i32 %esi.21.reload, i32* %esi.22.reg2mem, !insn.addr !585
  store i32 %edi.21.reload, i32* %edi.22.reg2mem, !insn.addr !585
  br i1 %352, label %dec_label_pc_4143f4, label %dec_label_pc_4145b5, !insn.addr !585

dec_label_pc_4145b5:                              ; preds = %dec_label_pc_4145b1, %dec_label_pc_4145b5
  %edi.22.reload = load i32, i32* %edi.22.reg2mem
  %esi.22.reload = load i32, i32* %esi.22.reg2mem
  %ecx.18.reload = load i32, i32* %ecx.18.reg2mem
  %353 = add i32 %edi.22.reload, -1, !insn.addr !586
  %354 = add i32 %esi.22.reload, -1, !insn.addr !587
  %355 = inttoptr i32 %354 to i8*, !insn.addr !588
  %356 = load i8, i8* %355, align 1, !insn.addr !588
  %357 = inttoptr i32 %353 to i8*, !insn.addr !589
  store i8 %356, i8* %357, align 1, !insn.addr !589
  %358 = add i32 %ecx.18.reload, -1, !insn.addr !590
  %359 = icmp eq i32 %358, 0, !insn.addr !590
  %360 = icmp eq i1 %359, false, !insn.addr !591
  store i32 %358, i32* %ecx.18.reg2mem, !insn.addr !591
  store i32 %354, i32* %esi.22.reg2mem, !insn.addr !591
  store i32 %353, i32* %edi.22.reg2mem, !insn.addr !591
  br i1 %360, label %dec_label_pc_4145b5, label %dec_label_pc_4143f4, !insn.addr !591

dec_label_pc_4145d0:                              ; preds = %dec_label_pc_4141e2
  %361 = and i32 %1, 15, !insn.addr !592
  %362 = icmp eq i32 %361, 0, !insn.addr !593
  %363 = icmp eq i1 %362, false, !insn.addr !594
  store i32 %count, i32* %ecx.19.reg2mem, !insn.addr !594
  store i32 %1, i32* %esi.23.reg2mem, !insn.addr !594
  store i32 %2, i32* %edi.23.reg2mem, !insn.addr !594
  br i1 %363, label %dec_label_pc_4146c0, label %dec_label_pc_4145dd, !insn.addr !594

dec_label_pc_4145dd:                              ; preds = %dec_label_pc_4146e1, %dec_label_pc_4146dc, %dec_label_pc_4145d0
  %edi.23.reload = load i32, i32* %edi.23.reg2mem
  %esi.23.reload = load i32, i32* %esi.23.reg2mem
  %ecx.19.reload = load i32, i32* %ecx.19.reg2mem
  %364 = udiv i32 %ecx.19.reload, 128, !insn.addr !595
  %365 = icmp ult i32 %ecx.19.reload, 128
  store i32 %364, i32* %edx.1.reg2mem, !insn.addr !596
  store i32 %esi.23.reload, i32* %esi.24.reg2mem, !insn.addr !596
  store i32 %edi.23.reload, i32* %edi.24.reg2mem, !insn.addr !596
  store i32 %esi.23.reload, i32* %esi.25.reg2mem, !insn.addr !596
  store i32 %edi.23.reload, i32* %edi.25.reg2mem, !insn.addr !596
  br i1 %365, label %dec_label_pc_41464d, label %dec_label_pc_4145f0, !insn.addr !596

dec_label_pc_4145f0:                              ; preds = %dec_label_pc_4145dd, %dec_label_pc_4145f0
  %edi.24.reload = load i32, i32* %edi.24.reg2mem
  %esi.24.reload = load i32, i32* %esi.24.reg2mem
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %366 = inttoptr i32 %esi.24.reload to i128*, !insn.addr !597
  %367 = load i128, i128* %366, align 4, !insn.addr !597
  %368 = call i128 @__asm_movdqa.8(i128 %367), !insn.addr !597
  %369 = add i32 %esi.24.reload, 16, !insn.addr !598
  %370 = inttoptr i32 %369 to i128*, !insn.addr !598
  %371 = load i128, i128* %370, align 4, !insn.addr !598
  %372 = call i128 @__asm_movdqa.8(i128 %371), !insn.addr !598
  %373 = add i32 %esi.24.reload, 32, !insn.addr !599
  %374 = inttoptr i32 %373 to i128*, !insn.addr !599
  %375 = load i128, i128* %374, align 4, !insn.addr !599
  %376 = call i128 @__asm_movdqa.8(i128 %375), !insn.addr !599
  %377 = add i32 %esi.24.reload, 48, !insn.addr !600
  %378 = inttoptr i32 %377 to i128*, !insn.addr !600
  %379 = load i128, i128* %378, align 4, !insn.addr !600
  %380 = call i128 @__asm_movdqa.8(i128 %379), !insn.addr !600
  %381 = inttoptr i32 %edi.24.reload to i128*, !insn.addr !601
  %382 = load i128, i128* %381, align 4, !insn.addr !601
  call void @__asm_movdqa(i128 %382, i128 %368), !insn.addr !601
  %383 = add i32 %edi.24.reload, 16, !insn.addr !602
  %384 = inttoptr i32 %383 to i128*, !insn.addr !602
  %385 = load i128, i128* %384, align 4, !insn.addr !602
  call void @__asm_movdqa(i128 %385, i128 %372), !insn.addr !602
  %386 = add i32 %edi.24.reload, 32, !insn.addr !603
  %387 = inttoptr i32 %386 to i128*, !insn.addr !603
  %388 = load i128, i128* %387, align 4, !insn.addr !603
  call void @__asm_movdqa(i128 %388, i128 %376), !insn.addr !603
  %389 = add i32 %edi.24.reload, 48, !insn.addr !604
  %390 = inttoptr i32 %389 to i128*, !insn.addr !604
  %391 = load i128, i128* %390, align 4, !insn.addr !604
  call void @__asm_movdqa(i128 %391, i128 %380), !insn.addr !604
  %392 = add i32 %esi.24.reload, 64, !insn.addr !605
  %393 = inttoptr i32 %392 to i128*, !insn.addr !605
  %394 = load i128, i128* %393, align 4, !insn.addr !605
  %395 = call i128 @__asm_movdqa.8(i128 %394), !insn.addr !605
  %396 = add i32 %esi.24.reload, 80, !insn.addr !606
  %397 = inttoptr i32 %396 to i128*, !insn.addr !606
  %398 = load i128, i128* %397, align 4, !insn.addr !606
  %399 = call i128 @__asm_movdqa.8(i128 %398), !insn.addr !606
  %400 = add i32 %esi.24.reload, 96, !insn.addr !607
  %401 = inttoptr i32 %400 to i128*, !insn.addr !607
  %402 = load i128, i128* %401, align 4, !insn.addr !607
  %403 = call i128 @__asm_movdqa.8(i128 %402), !insn.addr !607
  %404 = add i32 %esi.24.reload, 112, !insn.addr !608
  %405 = inttoptr i32 %404 to i128*, !insn.addr !608
  %406 = load i128, i128* %405, align 4, !insn.addr !608
  %407 = call i128 @__asm_movdqa.8(i128 %406), !insn.addr !608
  %408 = add i32 %edi.24.reload, 64, !insn.addr !609
  %409 = inttoptr i32 %408 to i128*, !insn.addr !609
  %410 = load i128, i128* %409, align 4, !insn.addr !609
  call void @__asm_movdqa(i128 %410, i128 %395), !insn.addr !609
  %411 = add i32 %edi.24.reload, 80, !insn.addr !610
  %412 = inttoptr i32 %411 to i128*, !insn.addr !610
  %413 = load i128, i128* %412, align 4, !insn.addr !610
  call void @__asm_movdqa(i128 %413, i128 %399), !insn.addr !610
  %414 = add i32 %edi.24.reload, 96, !insn.addr !611
  %415 = inttoptr i32 %414 to i128*, !insn.addr !611
  %416 = load i128, i128* %415, align 4, !insn.addr !611
  call void @__asm_movdqa(i128 %416, i128 %403), !insn.addr !611
  %417 = add i32 %edi.24.reload, 112, !insn.addr !612
  %418 = inttoptr i32 %417 to i128*, !insn.addr !612
  %419 = load i128, i128* %418, align 4, !insn.addr !612
  call void @__asm_movdqa(i128 %419, i128 %407), !insn.addr !612
  %420 = add i32 %esi.24.reload, 128, !insn.addr !613
  %421 = add i32 %edi.24.reload, 128, !insn.addr !614
  %422 = add i32 %edx.1.reload, -1, !insn.addr !615
  %423 = icmp eq i32 %422, 0, !insn.addr !615
  %424 = icmp eq i1 %423, false, !insn.addr !616
  store i32 %422, i32* %edx.1.reg2mem, !insn.addr !616
  store i32 %420, i32* %esi.24.reg2mem, !insn.addr !616
  store i32 %421, i32* %edi.24.reg2mem, !insn.addr !616
  store i32 %420, i32* %esi.25.reg2mem, !insn.addr !616
  store i32 %421, i32* %edi.25.reg2mem, !insn.addr !616
  br i1 %424, label %dec_label_pc_4145f0, label %dec_label_pc_41464d, !insn.addr !616

dec_label_pc_41464d:                              ; preds = %dec_label_pc_4145f0, %dec_label_pc_4145dd
  %425 = and i32 %ecx.19.reload, 127, !insn.addr !617
  %edi.25.reload = load i32, i32* %edi.25.reg2mem
  %esi.25.reload = load i32, i32* %esi.25.reg2mem
  %426 = icmp eq i32 %425, 0, !insn.addr !618
  store i32 %edi.25.reload, i32* %edi.256.reg2mem, !insn.addr !619
  store i32 %esi.25.reload, i32* %esi.255.reg2mem, !insn.addr !619
  store i32 %425, i32* %ecx.204.reg2mem, !insn.addr !619
  br i1 %426, label %dec_label_pc_4143f4, label %dec_label_pc_414651, !insn.addr !619

dec_label_pc_414651:                              ; preds = %dec_label_pc_4141b1, %dec_label_pc_41464d
  %ecx.204.reload = load i32, i32* %ecx.204.reg2mem
  %esi.255.reload = load i32, i32* %esi.255.reg2mem
  %edi.256.reload = load i32, i32* %edi.256.reg2mem
  %427 = udiv i32 %ecx.204.reload, 32, !insn.addr !620
  %428 = icmp ult i32 %ecx.204.reload, 32
  store i32 %427, i32* %edx.2.reg2mem, !insn.addr !621
  store i32 %esi.255.reload, i32* %esi.26.reg2mem, !insn.addr !621
  store i32 %edi.256.reload, i32* %edi.26.reg2mem, !insn.addr !621
  store i32 %ecx.204.reload, i32* %ecx.21.reg2mem, !insn.addr !621
  store i32 %esi.255.reload, i32* %esi.27.reg2mem, !insn.addr !621
  store i32 %edi.256.reload, i32* %edi.27.reg2mem, !insn.addr !621
  br i1 %428, label %dec_label_pc_41467b, label %dec_label_pc_414660, !insn.addr !621

dec_label_pc_414660:                              ; preds = %dec_label_pc_414651, %dec_label_pc_414660
  %edi.26.reload = load i32, i32* %edi.26.reg2mem
  %esi.26.reload = load i32, i32* %esi.26.reg2mem
  %edx.2.reload = load i32, i32* %edx.2.reg2mem
  %429 = inttoptr i32 %esi.26.reload to i128*, !insn.addr !622
  %430 = load i128, i128* %429, align 4, !insn.addr !622
  %431 = call i128 @__asm_movdqu.5(i128 %430), !insn.addr !622
  %432 = add i32 %esi.26.reload, 16, !insn.addr !623
  %433 = inttoptr i32 %432 to i128*, !insn.addr !623
  %434 = load i128, i128* %433, align 4, !insn.addr !623
  %435 = call i128 @__asm_movdqu.5(i128 %434), !insn.addr !623
  %436 = inttoptr i32 %edi.26.reload to i128*, !insn.addr !624
  %437 = load i128, i128* %436, align 4, !insn.addr !624
  call void @__asm_movdqu(i128 %437, i128 %431), !insn.addr !624
  %438 = add i32 %edi.26.reload, 16, !insn.addr !625
  %439 = inttoptr i32 %438 to i128*, !insn.addr !625
  %440 = load i128, i128* %439, align 4, !insn.addr !625
  call void @__asm_movdqu(i128 %440, i128 %435), !insn.addr !625
  %441 = add i32 %esi.26.reload, 32, !insn.addr !626
  %442 = add i32 %edi.26.reload, 32, !insn.addr !627
  %443 = add i32 %edx.2.reload, -1, !insn.addr !628
  %444 = icmp eq i32 %443, 0, !insn.addr !628
  %445 = icmp eq i1 %444, false, !insn.addr !629
  store i32 %443, i32* %edx.2.reg2mem, !insn.addr !629
  store i32 %441, i32* %esi.26.reg2mem, !insn.addr !629
  store i32 %442, i32* %edi.26.reg2mem, !insn.addr !629
  store i32 %ecx.204.reload, i32* %ecx.21.reg2mem, !insn.addr !629
  store i32 %441, i32* %esi.27.reg2mem, !insn.addr !629
  store i32 %442, i32* %edi.27.reg2mem, !insn.addr !629
  br i1 %445, label %dec_label_pc_414660, label %dec_label_pc_41467b, !insn.addr !629

dec_label_pc_41467b3:                             ; preds = %dec_label_pc_4143c2
  unreachable

dec_label_pc_41467b:                              ; preds = %dec_label_pc_414660, %dec_label_pc_414651, %dec_label_pc_4141a0
  %ecx.21.reload = load i32, i32* %ecx.21.reg2mem
  %446 = and i32 %ecx.21.reload, 31, !insn.addr !630
  %447 = icmp eq i32 %446, 0, !insn.addr !630
  br i1 %447, label %dec_label_pc_4143f4, label %dec_label_pc_414680, !insn.addr !631

dec_label_pc_414680:                              ; preds = %dec_label_pc_41467b
  %edi.27.reload = load i32, i32* %edi.27.reg2mem
  %esi.27.reload = load i32, i32* %esi.27.reg2mem
  %448 = udiv i32 %446, 4, !insn.addr !632
  %449 = icmp ult i32 %446, 4
  store i32 %448, i32* %ecx.22.reg2mem, !insn.addr !633
  store i32 %esi.27.reload, i32* %esi.28.reg2mem, !insn.addr !633
  store i32 %edi.27.reload, i32* %edi.28.reg2mem, !insn.addr !633
  store i32 %esi.27.reload, i32* %esi.29.reg2mem, !insn.addr !633
  store i32 %edi.27.reload, i32* %edi.29.reg2mem, !insn.addr !633
  br i1 %449, label %dec_label_pc_414696, label %dec_label_pc_414687, !insn.addr !633

dec_label_pc_414687:                              ; preds = %dec_label_pc_414680, %dec_label_pc_414687
  %edi.28.reload = load i32, i32* %edi.28.reg2mem
  %esi.28.reload = load i32, i32* %esi.28.reg2mem
  %ecx.22.reload = load i32, i32* %ecx.22.reg2mem
  %450 = inttoptr i32 %esi.28.reload to i32*, !insn.addr !634
  %451 = load i32, i32* %450, align 4, !insn.addr !634
  %452 = inttoptr i32 %edi.28.reload to i32*, !insn.addr !635
  store i32 %451, i32* %452, align 4, !insn.addr !635
  %453 = add i32 %edi.28.reload, 4, !insn.addr !636
  %454 = add i32 %esi.28.reload, 4, !insn.addr !637
  %455 = add i32 %ecx.22.reload, -1, !insn.addr !638
  %456 = icmp eq i32 %455, 0, !insn.addr !638
  %457 = icmp eq i1 %456, false, !insn.addr !639
  store i32 %455, i32* %ecx.22.reg2mem, !insn.addr !639
  store i32 %454, i32* %esi.28.reg2mem, !insn.addr !639
  store i32 %453, i32* %edi.28.reg2mem, !insn.addr !639
  store i32 %454, i32* %esi.29.reg2mem, !insn.addr !639
  store i32 %453, i32* %edi.29.reg2mem, !insn.addr !639
  br i1 %457, label %dec_label_pc_414687, label %dec_label_pc_414696, !insn.addr !639

dec_label_pc_414696:                              ; preds = %dec_label_pc_414687, %dec_label_pc_414680
  %edi.29.reload = load i32, i32* %edi.29.reg2mem
  %esi.29.reload = load i32, i32* %esi.29.reg2mem
  %458 = and i32 %ecx.21.reload, 3, !insn.addr !640
  %459 = icmp eq i32 %458, 0, !insn.addr !640
  store i32 %458, i32* %ecx.23.reg2mem, !insn.addr !641
  store i32 %esi.29.reload, i32* %esi.30.reg2mem, !insn.addr !641
  store i32 %edi.29.reload, i32* %edi.30.reg2mem, !insn.addr !641
  br i1 %459, label %dec_label_pc_4143f4, label %dec_label_pc_41469d, !insn.addr !641

dec_label_pc_41469d:                              ; preds = %dec_label_pc_414696, %dec_label_pc_41469d
  %edi.30.reload = load i32, i32* %edi.30.reg2mem
  %esi.30.reload = load i32, i32* %esi.30.reg2mem
  %ecx.23.reload = load i32, i32* %ecx.23.reg2mem
  %460 = inttoptr i32 %esi.30.reload to i8*, !insn.addr !642
  %461 = load i8, i8* %460, align 1, !insn.addr !642
  %462 = inttoptr i32 %edi.30.reload to i8*, !insn.addr !643
  store i8 %461, i8* %462, align 1, !insn.addr !643
  %463 = add i32 %esi.30.reload, 1, !insn.addr !644
  %464 = add i32 %edi.30.reload, 1, !insn.addr !645
  %465 = add i32 %ecx.23.reload, -1, !insn.addr !646
  %466 = icmp eq i32 %465, 0, !insn.addr !646
  %467 = icmp eq i1 %466, false, !insn.addr !647
  store i32 %465, i32* %ecx.23.reg2mem, !insn.addr !647
  store i32 %463, i32* %esi.30.reg2mem, !insn.addr !647
  store i32 %464, i32* %edi.30.reg2mem, !insn.addr !647
  br i1 %467, label %dec_label_pc_41469d, label %dec_label_pc_4143f4, !insn.addr !647

dec_label_pc_4146c0:                              ; preds = %dec_label_pc_4145d0
  %468 = sub nsw i32 16, %361, !insn.addr !648
  %469 = and i32 %468, 3, !insn.addr !649
  %470 = icmp eq i32 %469, 0, !insn.addr !649
  store i32 %469, i32* %ecx.24.reg2mem, !insn.addr !650
  store i32 %1, i32* %esi.31.reg2mem, !insn.addr !650
  store i32 %2, i32* %edi.31.reg2mem, !insn.addr !650
  store i32 %1, i32* %esi.32.reg2mem, !insn.addr !650
  store i32 %2, i32* %edi.32.reg2mem, !insn.addr !650
  br i1 %470, label %dec_label_pc_4146dc, label %dec_label_pc_4146d3, !insn.addr !650

dec_label_pc_4146d3:                              ; preds = %dec_label_pc_4146c0, %dec_label_pc_4146d3
  %edi.31.reload = load i32, i32* %edi.31.reg2mem
  %esi.31.reload = load i32, i32* %esi.31.reg2mem
  %ecx.24.reload = load i32, i32* %ecx.24.reg2mem
  %471 = inttoptr i32 %esi.31.reload to i8*, !insn.addr !651
  %472 = load i8, i8* %471, align 1, !insn.addr !651
  %473 = inttoptr i32 %edi.31.reload to i8*, !insn.addr !652
  store i8 %472, i8* %473, align 1, !insn.addr !652
  %474 = add i32 %esi.31.reload, 1, !insn.addr !653
  %475 = add i32 %edi.31.reload, 1, !insn.addr !654
  %476 = add i32 %ecx.24.reload, -1, !insn.addr !655
  %477 = icmp eq i32 %476, 0, !insn.addr !655
  %478 = icmp eq i1 %477, false, !insn.addr !656
  store i32 %476, i32* %ecx.24.reg2mem, !insn.addr !656
  store i32 %474, i32* %esi.31.reg2mem, !insn.addr !656
  store i32 %475, i32* %edi.31.reg2mem, !insn.addr !656
  store i32 %474, i32* %esi.32.reg2mem, !insn.addr !656
  store i32 %475, i32* %edi.32.reg2mem, !insn.addr !656
  br i1 %478, label %dec_label_pc_4146d3, label %dec_label_pc_4146dc, !insn.addr !656

dec_label_pc_4146dc:                              ; preds = %dec_label_pc_4146d3, %dec_label_pc_4146c0
  %479 = sub i32 %count, %468, !insn.addr !657
  %edi.32.reload = load i32, i32* %edi.32.reg2mem
  %esi.32.reload = load i32, i32* %esi.32.reg2mem
  %480 = udiv i32 %468, 4, !insn.addr !658
  %481 = icmp ult i32 %468, 4
  store i32 %479, i32* %ecx.19.reg2mem, !insn.addr !659
  store i32 %esi.32.reload, i32* %esi.23.reg2mem, !insn.addr !659
  store i32 %edi.32.reload, i32* %edi.23.reg2mem, !insn.addr !659
  store i32 %480, i32* %eax.9.reg2mem, !insn.addr !659
  store i32 %esi.32.reload, i32* %esi.33.reg2mem, !insn.addr !659
  store i32 %edi.32.reload, i32* %edi.33.reg2mem, !insn.addr !659
  br i1 %481, label %dec_label_pc_4145dd, label %dec_label_pc_4146e1, !insn.addr !659

dec_label_pc_4146e1:                              ; preds = %dec_label_pc_4146dc, %dec_label_pc_4146e1
  %edi.33.reload = load i32, i32* %edi.33.reg2mem
  %esi.33.reload = load i32, i32* %esi.33.reg2mem
  %eax.9.reload = load i32, i32* %eax.9.reg2mem
  %482 = inttoptr i32 %esi.33.reload to i32*, !insn.addr !660
  %483 = load i32, i32* %482, align 4, !insn.addr !660
  %484 = inttoptr i32 %edi.33.reload to i32*, !insn.addr !661
  store i32 %483, i32* %484, align 4, !insn.addr !661
  %485 = add i32 %esi.33.reload, 4, !insn.addr !662
  %486 = add i32 %edi.33.reload, 4, !insn.addr !663
  %487 = add i32 %eax.9.reload, -1, !insn.addr !664
  %488 = icmp eq i32 %487, 0, !insn.addr !664
  %489 = icmp eq i1 %488, false, !insn.addr !665
  store i32 %479, i32* %ecx.19.reg2mem, !insn.addr !665
  store i32 %485, i32* %esi.23.reg2mem, !insn.addr !665
  store i32 %486, i32* %edi.23.reg2mem, !insn.addr !665
  store i32 %487, i32* %eax.9.reg2mem, !insn.addr !665
  store i32 %485, i32* %esi.33.reg2mem, !insn.addr !665
  store i32 %486, i32* %edi.33.reg2mem, !insn.addr !665
  br i1 %489, label %dec_label_pc_4146e1, label %dec_label_pc_4145dd, !insn.addr !665
}

declare i8* @"std::bad_exception::`scalar deleting destructor'"(i32*) local_unnamed_addr

declare i8* @"std::exception::`scalar deleting destructor'"(i32*) local_unnamed_addr

define i8* @"std::exception::what"(i32* %this) local_unnamed_addr {
dec_label_pc_415b9b:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 4, !insn.addr !666
  %2 = inttoptr i32 %1 to i32*, !insn.addr !666
  %3 = load i32, i32* %2, align 4, !insn.addr !666
  %4 = icmp eq i32 %3, 0, !insn.addr !667
  %5 = icmp eq i1 %4, false, !insn.addr !668
  %6 = inttoptr i32 %3 to i8*
  %7 = select i1 %5, i8* %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_47123c, i32 0, i32 0), !insn.addr !669
  ret i8* %7, !insn.addr !669
}

define void @memmove(i8* %dst, i8* %src, i32 %count) local_unnamed_addr {
dec_label_pc_415e80:
  %edi.33.reg2mem = alloca i32, !insn.addr !670
  %esi.33.reg2mem = alloca i32, !insn.addr !670
  %eax.9.reg2mem = alloca i32, !insn.addr !670
  %edi.32.reg2mem = alloca i32, !insn.addr !670
  %esi.32.reg2mem = alloca i32, !insn.addr !670
  %edi.31.reg2mem = alloca i32, !insn.addr !670
  %esi.31.reg2mem = alloca i32, !insn.addr !670
  %ecx.24.reg2mem = alloca i32, !insn.addr !670
  %edi.30.reg2mem = alloca i32, !insn.addr !670
  %esi.30.reg2mem = alloca i32, !insn.addr !670
  %ecx.23.reg2mem = alloca i32, !insn.addr !670
  %edi.29.reg2mem = alloca i32, !insn.addr !670
  %esi.29.reg2mem = alloca i32, !insn.addr !670
  %edi.28.reg2mem = alloca i32, !insn.addr !670
  %esi.28.reg2mem = alloca i32, !insn.addr !670
  %ecx.22.reg2mem = alloca i32, !insn.addr !670
  %edi.27.reg2mem = alloca i32, !insn.addr !670
  %esi.27.reg2mem = alloca i32, !insn.addr !670
  %ecx.21.reg2mem = alloca i32, !insn.addr !670
  %edi.26.reg2mem = alloca i32, !insn.addr !670
  %esi.26.reg2mem = alloca i32, !insn.addr !670
  %edx.2.reg2mem = alloca i32, !insn.addr !670
  %ecx.204.reg2mem = alloca i32, !insn.addr !670
  %esi.255.reg2mem = alloca i32, !insn.addr !670
  %edi.256.reg2mem = alloca i32, !insn.addr !670
  %edi.25.reg2mem = alloca i32, !insn.addr !670
  %esi.25.reg2mem = alloca i32, !insn.addr !670
  %edi.24.reg2mem = alloca i32, !insn.addr !670
  %esi.24.reg2mem = alloca i32, !insn.addr !670
  %edx.1.reg2mem = alloca i32, !insn.addr !670
  %edi.23.reg2mem = alloca i32, !insn.addr !670
  %esi.23.reg2mem = alloca i32, !insn.addr !670
  %ecx.19.reg2mem = alloca i32, !insn.addr !670
  %edi.22.reg2mem = alloca i32, !insn.addr !670
  %esi.22.reg2mem = alloca i32, !insn.addr !670
  %ecx.18.reg2mem = alloca i32, !insn.addr !670
  %edi.21.reg2mem = alloca i32, !insn.addr !670
  %esi.21.reg2mem = alloca i32, !insn.addr !670
  %ecx.17.reg2mem = alloca i32, !insn.addr !670
  %edi.20.reg2mem = alloca i32, !insn.addr !670
  %esi.20.reg2mem = alloca i32, !insn.addr !670
  %ecx.16.reg2mem = alloca i32, !insn.addr !670
  %edi.19.reg2mem = alloca i32, !insn.addr !670
  %esi.19.reg2mem = alloca i32, !insn.addr !670
  %ecx.15.reg2mem = alloca i32, !insn.addr !670
  %edi.18.reg2mem = alloca i32, !insn.addr !670
  %esi.18.reg2mem = alloca i32, !insn.addr !670
  %ecx.14.reg2mem = alloca i32, !insn.addr !670
  %edi.17.reg2mem = alloca i32, !insn.addr !670
  %esi.17.reg2mem = alloca i32, !insn.addr !670
  %ecx.13.reg2mem = alloca i32, !insn.addr !670
  %edi.16.reg2mem = alloca i32, !insn.addr !670
  %esi.16.reg2mem = alloca i32, !insn.addr !670
  %ecx.12.reg2mem = alloca i32, !insn.addr !670
  %edi.16.ph.reg2mem = alloca i32, !insn.addr !670
  %esi.16.ph.reg2mem = alloca i32, !insn.addr !670
  %ecx.12.ph.reg2mem = alloca i32, !insn.addr !670
  %edi.15.reg2mem = alloca i32, !insn.addr !670
  %esi.15.reg2mem = alloca i32, !insn.addr !670
  %ecx.11.reg2mem = alloca i32, !insn.addr !670
  %edi.14.reg2mem = alloca i32, !insn.addr !670
  %esi.14.reg2mem = alloca i32, !insn.addr !670
  %ecx.10.reg2mem = alloca i32, !insn.addr !670
  %edi.13.reg2mem = alloca i32, !insn.addr !670
  %esi.13.reg2mem = alloca i32, !insn.addr !670
  %edx.0.reg2mem = alloca i32, !insn.addr !670
  %edi.12.reg2mem = alloca i32, !insn.addr !670
  %esi.12.reg2mem = alloca i32, !insn.addr !670
  %edi.11.reg2mem = alloca i32, !insn.addr !670
  %esi.11.reg2mem = alloca i32, !insn.addr !670
  %edi.10.reg2mem = alloca i32, !insn.addr !670
  %esi.10.reg2mem = alloca i32, !insn.addr !670
  %edi.9.reg2mem = alloca i32, !insn.addr !670
  %esi.9.reg2mem = alloca i32, !insn.addr !670
  %ecx.9.reg2mem = alloca i32, !insn.addr !670
  %edi.8.reg2mem = alloca i32, !insn.addr !670
  %esi.8.reg2mem = alloca i32, !insn.addr !670
  %ecx.8.reg2mem = alloca i32, !insn.addr !670
  %edi.7.reg2mem = alloca i32, !insn.addr !670
  %esi.7.reg2mem = alloca i32, !insn.addr !670
  %ecx.7.reg2mem = alloca i32, !insn.addr !670
  %edi.6.reg2mem = alloca i32, !insn.addr !670
  %esi.6.reg2mem = alloca i32, !insn.addr !670
  %ecx.6.reg2mem = alloca i32, !insn.addr !670
  %edi.5.lcssa.reg2mem = alloca i32, !insn.addr !670
  %esi.5.lcssa.reg2mem = alloca i32, !insn.addr !670
  %ecx.5.lcssa.reg2mem = alloca i32, !insn.addr !670
  %ecx.546.reg2mem = alloca i32, !insn.addr !670
  %esi.547.reg2mem = alloca i32, !insn.addr !670
  %edi.548.reg2mem = alloca i32, !insn.addr !670
  %edi.5.ph.reg2mem = alloca i32, !insn.addr !670
  %esi.5.ph.reg2mem = alloca i32, !insn.addr !670
  %ecx.5.ph.reg2mem = alloca i32, !insn.addr !670
  %edi.4.reg2mem = alloca i32, !insn.addr !670
  %esi.4.reg2mem = alloca i32, !insn.addr !670
  %ecx.4.reg2mem = alloca i32, !insn.addr !670
  %xmm1.2.reg2mem = alloca i128, !insn.addr !670
  %edi.3.reg2mem = alloca i32, !insn.addr !670
  %esi.3.reg2mem = alloca i32, !insn.addr !670
  %ecx.3.reg2mem = alloca i32, !insn.addr !670
  %xmm1.1.reg2mem = alloca i128, !insn.addr !670
  %edi.2.reg2mem = alloca i32, !insn.addr !670
  %esi.2.reg2mem = alloca i32, !insn.addr !670
  %ecx.2.reg2mem = alloca i32, !insn.addr !670
  %xmm1.0.reg2mem = alloca i128, !insn.addr !670
  %edi.1.reg2mem = alloca i32, !insn.addr !670
  %esi.1.reg2mem = alloca i32, !insn.addr !670
  %ecx.1.reg2mem = alloca i32, !insn.addr !670
  %edi.0.reg2mem = alloca i32, !insn.addr !670
  %esi.0.reg2mem = alloca i32, !insn.addr !670
  %ecx.0.reg2mem = alloca i32, !insn.addr !670
  %0 = call i1 @__decompiler_undefined_function_6()
  %1 = ptrtoint i8* %src to i32
  %2 = ptrtoint i8* %dst to i32
  %3 = add i32 %1, %count, !insn.addr !671
  %4 = icmp ugt i8* %dst, %src
  %5 = icmp ugt i32 %3, %2, !insn.addr !672
  %or.cond = icmp eq i1 %4, %5
  br i1 %or.cond, label %dec_label_pc_416134, label %dec_label_pc_415ea0, !insn.addr !673

dec_label_pc_415ea0:                              ; preds = %dec_label_pc_415e80
  %6 = icmp ult i32 %count, 32, !insn.addr !674
  store i32 %count, i32* %ecx.21.reg2mem, !insn.addr !675
  store i32 %1, i32* %esi.27.reg2mem, !insn.addr !675
  store i32 %2, i32* %edi.27.reg2mem, !insn.addr !675
  br i1 %6, label %dec_label_pc_41637b, label %dec_label_pc_415ea9, !insn.addr !675

dec_label_pc_415ea9:                              ; preds = %dec_label_pc_415ea0
  %7 = icmp ult i32 %count, 128, !insn.addr !676
  %8 = icmp eq i1 %7, false, !insn.addr !677
  br i1 %8, label %dec_label_pc_415ec4, label %dec_label_pc_415eb1, !insn.addr !677

dec_label_pc_415eb1:                              ; preds = %dec_label_pc_415ea9
  %9 = load i32, i32* @__isa_enabled, align 4, !insn.addr !678
  %10 = and i32 %9, 2, !insn.addr !678
  %11 = icmp eq i32 %10, 0, !insn.addr !678
  store i32 %2, i32* %edi.256.reg2mem, !insn.addr !679
  store i32 %1, i32* %esi.255.reg2mem, !insn.addr !679
  store i32 %count, i32* %ecx.204.reg2mem, !insn.addr !679
  br i1 %11, label %dec_label_pc_4160a7, label %dec_label_pc_416351, !insn.addr !679

dec_label_pc_415ec4:                              ; preds = %dec_label_pc_415ea9
  %12 = load i32, i32* @__favor, align 4, !insn.addr !680
  %13 = and i32 %12, 2, !insn.addr !680
  %14 = icmp ne i32 %13, 0, !insn.addr !680
  %15 = icmp eq i1 %14, false, !insn.addr !681
  br i1 %15, label %dec_label_pc_415ed7, label %dec_label_pc_415ece, !insn.addr !681

dec_label_pc_415ece:                              ; preds = %dec_label_pc_415ec4
  call void @__asm_rep_movsb_memcpy(i8* %dst, i8* %src, i32 %count), !insn.addr !682
  ret void, !insn.addr !683

dec_label_pc_415ed7:                              ; preds = %dec_label_pc_415ec4
  %16 = xor i32 %1, %2, !insn.addr !684
  %17 = and i32 %16, 15, !insn.addr !685
  %18 = icmp eq i32 %17, 0, !insn.addr !685
  %19 = icmp eq i1 %18, false, !insn.addr !686
  br i1 %19, label %dec_label_pc_415ef0, label %dec_label_pc_415ee2, !insn.addr !686

dec_label_pc_415ee2:                              ; preds = %dec_label_pc_415ed7
  %20 = load i32, i32* @__isa_enabled, align 4, !insn.addr !687
  %21 = and i32 %20, 2, !insn.addr !687
  %22 = icmp eq i32 %21, 0, !insn.addr !687
  br i1 %22, label %dec_label_pc_415ef0, label %dec_label_pc_4162d0, !insn.addr !688

dec_label_pc_415ef0:                              ; preds = %dec_label_pc_415ee2, %dec_label_pc_415ed7
  %23 = and i32 %12, 1, !insn.addr !689
  %24 = icmp ne i32 %23, 0, !insn.addr !689
  %25 = icmp eq i1 %24, false, !insn.addr !690
  br i1 %25, label %dec_label_pc_4160a7, label %dec_label_pc_415efe, !insn.addr !690

dec_label_pc_415efe:                              ; preds = %dec_label_pc_415ef0
  %26 = and i32 %2, 3, !insn.addr !691
  %27 = icmp eq i32 %26, 0, !insn.addr !691
  %28 = icmp eq i1 %27, false, !insn.addr !692
  br i1 %28, label %dec_label_pc_4160a7, label %dec_label_pc_415f0a, !insn.addr !692

dec_label_pc_415f0a:                              ; preds = %dec_label_pc_415efe
  %29 = and i32 %1, 3, !insn.addr !693
  %30 = icmp eq i32 %29, 0, !insn.addr !693
  %31 = icmp eq i1 %30, false, !insn.addr !694
  store i32 %count, i32* %ecx.9.reg2mem, !insn.addr !694
  store i32 %1, i32* %esi.9.reg2mem, !insn.addr !694
  store i32 %2, i32* %edi.9.reg2mem, !insn.addr !694
  br i1 %31, label %dec_label_pc_4160c2, label %dec_label_pc_415f16, !insn.addr !694

dec_label_pc_415f16:                              ; preds = %dec_label_pc_415f0a
  %32 = and i32 %2, 4, !insn.addr !695
  %33 = icmp ne i32 %32, 0, !insn.addr !695
  %34 = icmp eq i1 %33, false, !insn.addr !696
  store i32 %count, i32* %ecx.0.reg2mem, !insn.addr !696
  store i32 %1, i32* %esi.0.reg2mem, !insn.addr !696
  store i32 %2, i32* %edi.0.reg2mem, !insn.addr !696
  br i1 %34, label %dec_label_pc_415f29, label %dec_label_pc_415f1c, !insn.addr !696

dec_label_pc_415f1c:                              ; preds = %dec_label_pc_415f16
  %35 = bitcast i8* %src to i32*, !insn.addr !697
  %36 = load i32, i32* %35, align 4, !insn.addr !697
  %37 = add i32 %count, -4, !insn.addr !698
  %38 = add i32 %1, 4, !insn.addr !699
  %39 = bitcast i8* %dst to i32*, !insn.addr !700
  store i32 %36, i32* %39, align 4, !insn.addr !700
  %40 = add i32 %2, 4, !insn.addr !701
  store i32 %37, i32* %ecx.0.reg2mem, !insn.addr !701
  store i32 %38, i32* %esi.0.reg2mem, !insn.addr !701
  store i32 %40, i32* %edi.0.reg2mem, !insn.addr !701
  br label %dec_label_pc_415f29, !insn.addr !701

dec_label_pc_415f29:                              ; preds = %dec_label_pc_415f1c, %dec_label_pc_415f16
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %41 = and i32 %edi.0.reload, 8, !insn.addr !702
  %42 = icmp ne i32 %41, 0, !insn.addr !702
  %43 = icmp eq i1 %42, false, !insn.addr !703
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !703
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !703
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !703
  br i1 %43, label %dec_label_pc_415f40, label %dec_label_pc_415f2f, !insn.addr !703

dec_label_pc_415f2f:                              ; preds = %dec_label_pc_415f29
  %44 = inttoptr i32 %esi.0.reload to i64*, !insn.addr !704
  %45 = load i64, i64* %44, align 4, !insn.addr !704
  %46 = call i128 @__asm_movq(i64 %45), !insn.addr !704
  %47 = add i32 %ecx.0.reload, -8, !insn.addr !705
  %48 = add i32 %esi.0.reload, 8, !insn.addr !706
  %49 = inttoptr i32 %edi.0.reload to i64*, !insn.addr !707
  %50 = load i64, i64* %49, align 4, !insn.addr !707
  call void @__asm_movq.7(i64 %50, i128 %46), !insn.addr !707
  %51 = add i32 %edi.0.reload, 8, !insn.addr !708
  store i32 %47, i32* %ecx.1.reg2mem, !insn.addr !708
  store i32 %48, i32* %esi.1.reg2mem, !insn.addr !708
  store i32 %51, i32* %edi.1.reg2mem, !insn.addr !708
  br label %dec_label_pc_415f40, !insn.addr !708

dec_label_pc_415f40:                              ; preds = %dec_label_pc_415f2f, %dec_label_pc_415f29
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %52 = and i32 %esi.1.reload, 7, !insn.addr !709
  %53 = icmp eq i32 %52, 0, !insn.addr !709
  br i1 %53, label %dec_label_pc_415fad, label %dec_label_pc_415f48, !insn.addr !710

dec_label_pc_415f48:                              ; preds = %dec_label_pc_415f40
  %54 = and i32 %esi.1.reload, 8, !insn.addr !711
  %55 = icmp ne i32 %54, 0, !insn.addr !711
  %56 = icmp eq i1 %55, false, !insn.addr !712
  br i1 %56, label %dec_label_pc_416006, label %dec_label_pc_415f52, !insn.addr !712

dec_label_pc_415f52:                              ; preds = %dec_label_pc_415f48
  %57 = add i32 %esi.1.reload, -12, !insn.addr !713
  %58 = inttoptr i32 %57 to i128*, !insn.addr !713
  %59 = load i128, i128* %58, align 4, !insn.addr !713
  %60 = call i128 @__asm_movdqa.8(i128 %59), !insn.addr !713
  store i128 %60, i128* %xmm1.0.reg2mem, !insn.addr !714
  store i32 %ecx.1.reload, i32* %ecx.2.reg2mem, !insn.addr !714
  store i32 %57, i32* %esi.2.reg2mem, !insn.addr !714
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !714
  br label %dec_label_pc_415f5c, !insn.addr !714

dec_label_pc_415f5c:                              ; preds = %dec_label_pc_415f5c, %dec_label_pc_415f52
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %xmm1.0.reload = load i128, i128* %xmm1.0.reg2mem
  %61 = add i32 %esi.2.reload, 16, !insn.addr !715
  %62 = inttoptr i32 %61 to i128*, !insn.addr !715
  %63 = load i128, i128* %62, align 4, !insn.addr !715
  %64 = call i128 @__asm_movdqa.8(i128 %63), !insn.addr !715
  %65 = add i32 %ecx.2.reload, -48, !insn.addr !716
  %66 = add i32 %esi.2.reload, 32, !insn.addr !717
  %67 = inttoptr i32 %66 to i128*, !insn.addr !717
  %68 = load i128, i128* %67, align 4, !insn.addr !717
  %69 = call i128 @__asm_movdqa.8(i128 %68), !insn.addr !717
  %70 = add i32 %esi.2.reload, 48, !insn.addr !718
  %71 = inttoptr i32 %70 to i128*, !insn.addr !718
  %72 = load i128, i128* %71, align 4, !insn.addr !718
  %73 = call i128 @__asm_movdqa.8(i128 %72), !insn.addr !718
  %74 = icmp ult i32 %65, 48, !insn.addr !719
  %75 = call i128 @__asm_movdqa.8(i128 %64), !insn.addr !720
  %76 = call i128 @__asm_palignr(i128 %64, i128 %xmm1.0.reload, i32 12), !insn.addr !721
  %77 = inttoptr i32 %edi.2.reload to i128*, !insn.addr !722
  %78 = load i128, i128* %77, align 4, !insn.addr !722
  call void @__asm_movdqa(i128 %78, i128 %76), !insn.addr !722
  %79 = call i128 @__asm_movdqa.8(i128 %69), !insn.addr !723
  %80 = call i128 @__asm_palignr(i128 %69, i128 %75, i32 12), !insn.addr !724
  %81 = add i32 %edi.2.reload, 16, !insn.addr !725
  %82 = inttoptr i32 %81 to i128*, !insn.addr !725
  %83 = load i128, i128* %82, align 4, !insn.addr !725
  call void @__asm_movdqa(i128 %83, i128 %80), !insn.addr !725
  %84 = call i128 @__asm_movdqa.8(i128 %73), !insn.addr !726
  %85 = call i128 @__asm_palignr(i128 %73, i128 %79, i32 12), !insn.addr !727
  %86 = add i32 %edi.2.reload, 32, !insn.addr !728
  %87 = inttoptr i32 %86 to i128*, !insn.addr !728
  %88 = load i128, i128* %87, align 4, !insn.addr !728
  call void @__asm_movdqa(i128 %88, i128 %85), !insn.addr !728
  %89 = add i32 %edi.2.reload, 48, !insn.addr !729
  %90 = icmp eq i1 %74, false, !insn.addr !730
  store i128 %84, i128* %xmm1.0.reg2mem, !insn.addr !730
  store i32 %65, i32* %ecx.2.reg2mem, !insn.addr !730
  store i32 %70, i32* %esi.2.reg2mem, !insn.addr !730
  store i32 %89, i32* %edi.2.reg2mem, !insn.addr !730
  br i1 %90, label %dec_label_pc_415f5c, label %dec_label_pc_415fa5, !insn.addr !730

dec_label_pc_415fa5:                              ; preds = %dec_label_pc_415f5c
  %91 = add i32 %esi.2.reload, 60, !insn.addr !731
  store i32 %65, i32* %ecx.5.ph.reg2mem, !insn.addr !732
  store i32 %91, i32* %esi.5.ph.reg2mem, !insn.addr !732
  store i32 %89, i32* %edi.5.ph.reg2mem, !insn.addr !732
  br label %dec_label_pc_41605c.preheader, !insn.addr !732

dec_label_pc_415fad:                              ; preds = %dec_label_pc_415f40
  %92 = add i32 %esi.1.reload, -8, !insn.addr !733
  %93 = inttoptr i32 %92 to i128*, !insn.addr !733
  %94 = load i128, i128* %93, align 4, !insn.addr !733
  %95 = call i128 @__asm_movdqa.8(i128 %94), !insn.addr !733
  store i128 %95, i128* %xmm1.1.reg2mem, !insn.addr !734
  store i32 %ecx.1.reload, i32* %ecx.3.reg2mem, !insn.addr !734
  store i32 %92, i32* %esi.3.reg2mem, !insn.addr !734
  store i32 %edi.1.reload, i32* %edi.3.reg2mem, !insn.addr !734
  br label %dec_label_pc_415fb8, !insn.addr !734

dec_label_pc_415fb8:                              ; preds = %dec_label_pc_415fb8, %dec_label_pc_415fad
  %edi.3.reload = load i32, i32* %edi.3.reg2mem
  %esi.3.reload = load i32, i32* %esi.3.reg2mem
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %xmm1.1.reload = load i128, i128* %xmm1.1.reg2mem
  %96 = add i32 %esi.3.reload, 16, !insn.addr !735
  %97 = inttoptr i32 %96 to i128*, !insn.addr !735
  %98 = load i128, i128* %97, align 4, !insn.addr !735
  %99 = call i128 @__asm_movdqa.8(i128 %98), !insn.addr !735
  %100 = add i32 %ecx.3.reload, -48, !insn.addr !736
  %101 = add i32 %esi.3.reload, 32, !insn.addr !737
  %102 = inttoptr i32 %101 to i128*, !insn.addr !737
  %103 = load i128, i128* %102, align 4, !insn.addr !737
  %104 = call i128 @__asm_movdqa.8(i128 %103), !insn.addr !737
  %105 = add i32 %esi.3.reload, 48, !insn.addr !738
  %106 = inttoptr i32 %105 to i128*, !insn.addr !738
  %107 = load i128, i128* %106, align 4, !insn.addr !738
  %108 = call i128 @__asm_movdqa.8(i128 %107), !insn.addr !738
  %109 = icmp ult i32 %100, 48, !insn.addr !739
  %110 = call i128 @__asm_movdqa.8(i128 %99), !insn.addr !740
  %111 = call i128 @__asm_palignr(i128 %99, i128 %xmm1.1.reload, i32 8), !insn.addr !741
  %112 = inttoptr i32 %edi.3.reload to i128*, !insn.addr !742
  %113 = load i128, i128* %112, align 4, !insn.addr !742
  call void @__asm_movdqa(i128 %113, i128 %111), !insn.addr !742
  %114 = call i128 @__asm_movdqa.8(i128 %104), !insn.addr !743
  %115 = call i128 @__asm_palignr(i128 %104, i128 %110, i32 8), !insn.addr !744
  %116 = add i32 %edi.3.reload, 16, !insn.addr !745
  %117 = inttoptr i32 %116 to i128*, !insn.addr !745
  %118 = load i128, i128* %117, align 4, !insn.addr !745
  call void @__asm_movdqa(i128 %118, i128 %115), !insn.addr !745
  %119 = call i128 @__asm_movdqa.8(i128 %108), !insn.addr !746
  %120 = call i128 @__asm_palignr(i128 %108, i128 %114, i32 8), !insn.addr !747
  %121 = add i32 %edi.3.reload, 32, !insn.addr !748
  %122 = inttoptr i32 %121 to i128*, !insn.addr !748
  %123 = load i128, i128* %122, align 4, !insn.addr !748
  call void @__asm_movdqa(i128 %123, i128 %120), !insn.addr !748
  %124 = add i32 %edi.3.reload, 48, !insn.addr !749
  %125 = icmp eq i1 %109, false, !insn.addr !750
  store i128 %119, i128* %xmm1.1.reg2mem, !insn.addr !750
  store i32 %100, i32* %ecx.3.reg2mem, !insn.addr !750
  store i32 %105, i32* %esi.3.reg2mem, !insn.addr !750
  store i32 %124, i32* %edi.3.reg2mem, !insn.addr !750
  br i1 %125, label %dec_label_pc_415fb8, label %dec_label_pc_416001, !insn.addr !750

dec_label_pc_416001:                              ; preds = %dec_label_pc_415fb8
  %126 = add i32 %esi.3.reload, 56, !insn.addr !751
  store i32 %100, i32* %ecx.5.ph.reg2mem, !insn.addr !752
  store i32 %126, i32* %esi.5.ph.reg2mem, !insn.addr !752
  store i32 %124, i32* %edi.5.ph.reg2mem, !insn.addr !752
  br label %dec_label_pc_41605c.preheader, !insn.addr !752

dec_label_pc_416006:                              ; preds = %dec_label_pc_415f48
  %127 = add i32 %esi.1.reload, -4, !insn.addr !753
  %128 = inttoptr i32 %127 to i128*, !insn.addr !753
  %129 = load i128, i128* %128, align 4, !insn.addr !753
  %130 = call i128 @__asm_movdqa.8(i128 %129), !insn.addr !753
  store i128 %130, i128* %xmm1.2.reg2mem, !insn.addr !754
  store i32 %ecx.1.reload, i32* %ecx.4.reg2mem, !insn.addr !754
  store i32 %127, i32* %esi.4.reg2mem, !insn.addr !754
  store i32 %edi.1.reload, i32* %edi.4.reg2mem, !insn.addr !754
  br label %dec_label_pc_416010, !insn.addr !754

dec_label_pc_416010:                              ; preds = %dec_label_pc_416010, %dec_label_pc_416006
  %edi.4.reload = load i32, i32* %edi.4.reg2mem
  %esi.4.reload = load i32, i32* %esi.4.reg2mem
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %xmm1.2.reload = load i128, i128* %xmm1.2.reg2mem
  %131 = add i32 %esi.4.reload, 16, !insn.addr !755
  %132 = inttoptr i32 %131 to i128*, !insn.addr !755
  %133 = load i128, i128* %132, align 4, !insn.addr !755
  %134 = call i128 @__asm_movdqa.8(i128 %133), !insn.addr !755
  %135 = add i32 %ecx.4.reload, -48, !insn.addr !756
  %136 = add i32 %esi.4.reload, 32, !insn.addr !757
  %137 = inttoptr i32 %136 to i128*, !insn.addr !757
  %138 = load i128, i128* %137, align 4, !insn.addr !757
  %139 = call i128 @__asm_movdqa.8(i128 %138), !insn.addr !757
  %140 = add i32 %esi.4.reload, 48, !insn.addr !758
  %141 = inttoptr i32 %140 to i128*, !insn.addr !758
  %142 = load i128, i128* %141, align 4, !insn.addr !758
  %143 = call i128 @__asm_movdqa.8(i128 %142), !insn.addr !758
  %144 = icmp ult i32 %135, 48, !insn.addr !759
  %145 = call i128 @__asm_movdqa.8(i128 %134), !insn.addr !760
  %146 = call i128 @__asm_palignr(i128 %134, i128 %xmm1.2.reload, i32 4), !insn.addr !761
  %147 = inttoptr i32 %edi.4.reload to i128*, !insn.addr !762
  %148 = load i128, i128* %147, align 4, !insn.addr !762
  call void @__asm_movdqa(i128 %148, i128 %146), !insn.addr !762
  %149 = call i128 @__asm_movdqa.8(i128 %139), !insn.addr !763
  %150 = call i128 @__asm_palignr(i128 %139, i128 %145, i32 4), !insn.addr !764
  %151 = add i32 %edi.4.reload, 16, !insn.addr !765
  %152 = inttoptr i32 %151 to i128*, !insn.addr !765
  %153 = load i128, i128* %152, align 4, !insn.addr !765
  call void @__asm_movdqa(i128 %153, i128 %150), !insn.addr !765
  %154 = call i128 @__asm_movdqa.8(i128 %143), !insn.addr !766
  %155 = call i128 @__asm_palignr(i128 %143, i128 %149, i32 4), !insn.addr !767
  %156 = add i32 %edi.4.reload, 32, !insn.addr !768
  %157 = inttoptr i32 %156 to i128*, !insn.addr !768
  %158 = load i128, i128* %157, align 4, !insn.addr !768
  call void @__asm_movdqa(i128 %158, i128 %155), !insn.addr !768
  %159 = add i32 %edi.4.reload, 48, !insn.addr !769
  %160 = icmp eq i1 %144, false, !insn.addr !770
  store i128 %154, i128* %xmm1.2.reg2mem, !insn.addr !770
  store i32 %135, i32* %ecx.4.reg2mem, !insn.addr !770
  store i32 %140, i32* %esi.4.reg2mem, !insn.addr !770
  store i32 %159, i32* %edi.4.reg2mem, !insn.addr !770
  br i1 %160, label %dec_label_pc_416010, label %dec_label_pc_416059, !insn.addr !770

dec_label_pc_416059:                              ; preds = %dec_label_pc_416010
  %161 = add i32 %esi.4.reload, 52, !insn.addr !771
  store i32 %135, i32* %ecx.5.ph.reg2mem, !insn.addr !771
  store i32 %161, i32* %esi.5.ph.reg2mem, !insn.addr !771
  store i32 %159, i32* %edi.5.ph.reg2mem, !insn.addr !771
  br label %dec_label_pc_41605c.preheader, !insn.addr !771

dec_label_pc_41605c.preheader:                    ; preds = %dec_label_pc_415fa5, %dec_label_pc_416001, %dec_label_pc_416059
  %edi.5.ph.reload = load i32, i32* %edi.5.ph.reg2mem
  %esi.5.ph.reload = load i32, i32* %esi.5.ph.reg2mem
  %ecx.5.ph.reload = load i32, i32* %ecx.5.ph.reg2mem
  %162 = icmp ult i32 %ecx.5.ph.reload, 16, !insn.addr !772
  store i32 %edi.5.ph.reload, i32* %edi.548.reg2mem, !insn.addr !773
  store i32 %esi.5.ph.reload, i32* %esi.547.reg2mem, !insn.addr !773
  store i32 %ecx.5.ph.reload, i32* %ecx.546.reg2mem, !insn.addr !773
  store i32 %ecx.5.ph.reload, i32* %ecx.5.lcssa.reg2mem, !insn.addr !773
  store i32 %esi.5.ph.reload, i32* %esi.5.lcssa.reg2mem, !insn.addr !773
  store i32 %edi.5.ph.reload, i32* %edi.5.lcssa.reg2mem, !insn.addr !773
  br i1 %162, label %dec_label_pc_416074, label %dec_label_pc_416061, !insn.addr !773

dec_label_pc_416061:                              ; preds = %dec_label_pc_41605c.preheader, %dec_label_pc_416061
  %ecx.546.reload = load i32, i32* %ecx.546.reg2mem
  %esi.547.reload = load i32, i32* %esi.547.reg2mem
  %edi.548.reload = load i32, i32* %edi.548.reg2mem
  %163 = inttoptr i32 %esi.547.reload to i128*, !insn.addr !774
  %164 = load i128, i128* %163, align 4, !insn.addr !774
  %165 = call i128 @__asm_movdqu.5(i128 %164), !insn.addr !774
  %166 = add i32 %ecx.546.reload, -16, !insn.addr !775
  %167 = add i32 %esi.547.reload, 16, !insn.addr !776
  %168 = inttoptr i32 %edi.548.reload to i128*, !insn.addr !777
  %169 = load i128, i128* %168, align 4, !insn.addr !777
  call void @__asm_movdqa(i128 %169, i128 %165), !insn.addr !777
  %170 = add i32 %edi.548.reload, 16, !insn.addr !778
  %171 = icmp ult i32 %166, 16, !insn.addr !772
  store i32 %170, i32* %edi.548.reg2mem, !insn.addr !773
  store i32 %167, i32* %esi.547.reg2mem, !insn.addr !773
  store i32 %166, i32* %ecx.546.reg2mem, !insn.addr !773
  br i1 %171, label %dec_label_pc_41605c.dec_label_pc_416074_crit_edge, label %dec_label_pc_416061, !insn.addr !773

dec_label_pc_41605c.dec_label_pc_416074_crit_edge: ; preds = %dec_label_pc_416061
  %172 = and i32 %ecx.5.ph.reload, 15
  store i32 %172, i32* %ecx.5.lcssa.reg2mem
  store i32 %167, i32* %esi.5.lcssa.reg2mem
  store i32 %170, i32* %edi.5.lcssa.reg2mem
  br label %dec_label_pc_416074

dec_label_pc_416074:                              ; preds = %dec_label_pc_41605c.dec_label_pc_416074_crit_edge, %dec_label_pc_41605c.preheader
  %edi.5.lcssa.reload = load i32, i32* %edi.5.lcssa.reg2mem
  %esi.5.lcssa.reload = load i32, i32* %esi.5.lcssa.reg2mem
  %ecx.5.lcssa.reload = load i32, i32* %ecx.5.lcssa.reg2mem
  %173 = and i32 %ecx.5.lcssa.reload, 4, !insn.addr !779
  %174 = icmp ne i32 %173, 0, !insn.addr !779
  %175 = icmp eq i1 %174, false, !insn.addr !780
  store i32 %ecx.5.lcssa.reload, i32* %ecx.6.reg2mem, !insn.addr !780
  store i32 %esi.5.lcssa.reload, i32* %esi.6.reg2mem, !insn.addr !780
  store i32 %edi.5.lcssa.reload, i32* %edi.6.reg2mem, !insn.addr !780
  br i1 %175, label %dec_label_pc_416087, label %dec_label_pc_41607a, !insn.addr !780

dec_label_pc_41607a:                              ; preds = %dec_label_pc_416074
  %176 = inttoptr i32 %esi.5.lcssa.reload to i32*, !insn.addr !781
  %177 = load i32, i32* %176, align 4, !insn.addr !781
  %178 = add i32 %ecx.5.lcssa.reload, -4, !insn.addr !782
  %179 = add i32 %esi.5.lcssa.reload, 4, !insn.addr !783
  %180 = inttoptr i32 %edi.5.lcssa.reload to i32*, !insn.addr !784
  store i32 %177, i32* %180, align 4, !insn.addr !784
  %181 = add i32 %edi.5.lcssa.reload, 4, !insn.addr !785
  store i32 %178, i32* %ecx.6.reg2mem, !insn.addr !785
  store i32 %179, i32* %esi.6.reg2mem, !insn.addr !785
  store i32 %181, i32* %edi.6.reg2mem, !insn.addr !785
  br label %dec_label_pc_416087, !insn.addr !785

dec_label_pc_416087:                              ; preds = %dec_label_pc_41607a, %dec_label_pc_416074
  %edi.6.reload = load i32, i32* %edi.6.reg2mem
  %esi.6.reload = load i32, i32* %esi.6.reg2mem
  %ecx.6.reload = load i32, i32* %ecx.6.reg2mem
  store i32 %ecx.6.reload, i32* %ecx.7.reg2mem
  store i32 %esi.6.reload, i32* %esi.7.reg2mem
  store i32 %edi.6.reload, i32* %edi.7.reg2mem
  br label %dec_label_pc_41609e

dec_label_pc_41608d:                              ; preds = %dec_label_pc_41609e
  %182 = inttoptr i32 %esi.7.reload to i64*, !insn.addr !786
  %183 = load i64, i64* %182, align 4, !insn.addr !786
  %184 = call i128 @__asm_movq(i64 %183), !insn.addr !786
  %185 = add i32 %ecx.7.reload, -8, !insn.addr !787
  %186 = add i32 %esi.7.reload, 8, !insn.addr !788
  %187 = inttoptr i32 %edi.7.reload to i64*, !insn.addr !789
  %188 = load i64, i64* %187, align 4, !insn.addr !789
  call void @__asm_movq.7(i64 %188, i128 %184), !insn.addr !789
  %189 = add i32 %edi.7.reload, 8, !insn.addr !790
  store i32 %185, i32* %ecx.7.reg2mem, !insn.addr !790
  store i32 %186, i32* %esi.7.reg2mem, !insn.addr !790
  store i32 %189, i32* %edi.7.reg2mem, !insn.addr !790
  br label %dec_label_pc_41609e, !insn.addr !790

dec_label_pc_41609e:                              ; preds = %dec_label_pc_416087, %dec_label_pc_41608d
  %edi.7.reload = load i32, i32* %edi.7.reg2mem
  %esi.7.reload = load i32, i32* %esi.7.reg2mem
  %ecx.7.reload = load i32, i32* %ecx.7.reg2mem
  store i32 %ecx.7.reload, i32* @5, align 4, !insn.addr !791
  store i32 %esi.7.reload, i32* %esi.10.reg2mem, !insn.addr !792
  store i32 %edi.7.reload, i32* %edi.10.reg2mem, !insn.addr !792
  store i32 %esi.7.reload, i32* %esi.11.reg2mem, !insn.addr !792
  store i32 %edi.7.reload, i32* %edi.11.reg2mem, !insn.addr !792
  store i32 %esi.7.reload, i32* %esi.12.reg2mem, !insn.addr !792
  store i32 %edi.7.reload, i32* %edi.12.reg2mem, !insn.addr !792
  switch i32 %ecx.7.reload, label %dec_label_pc_41608d [
    i32 0, label %dec_label_pc_4160f4
    i32 1, label %dec_label_pc_4160fc
    i32 2, label %dec_label_pc_416108
    i32 3, label %dec_label_pc_41611c
  ], !insn.addr !792

dec_label_pc_4160a7:                              ; preds = %dec_label_pc_415eb1, %dec_label_pc_415efe, %dec_label_pc_415ef0
  %190 = and i32 %2, 3, !insn.addr !793
  %191 = icmp eq i32 %190, 0, !insn.addr !793
  store i32 %count, i32* %ecx.8.reg2mem, !insn.addr !794
  store i32 %1, i32* %esi.8.reg2mem, !insn.addr !794
  store i32 %2, i32* %edi.8.reg2mem, !insn.addr !794
  store i32 %count, i32* %ecx.9.reg2mem, !insn.addr !794
  store i32 %1, i32* %esi.9.reg2mem, !insn.addr !794
  store i32 %2, i32* %edi.9.reg2mem, !insn.addr !794
  br i1 %191, label %dec_label_pc_4160c2, label %dec_label_pc_4160af, !insn.addr !794

dec_label_pc_4160af:                              ; preds = %dec_label_pc_4160a7, %dec_label_pc_4160af
  %edi.8.reload = load i32, i32* %edi.8.reg2mem
  %esi.8.reload = load i32, i32* %esi.8.reg2mem
  %ecx.8.reload = load i32, i32* %ecx.8.reg2mem
  %192 = inttoptr i32 %esi.8.reload to i8*, !insn.addr !795
  %193 = load i8, i8* %192, align 1, !insn.addr !795
  %194 = inttoptr i32 %edi.8.reload to i8*, !insn.addr !796
  store i8 %193, i8* %194, align 1, !insn.addr !796
  %195 = add i32 %ecx.8.reload, -1, !insn.addr !797
  %196 = add i32 %esi.8.reload, 1, !insn.addr !798
  %197 = add i32 %edi.8.reload, 1, !insn.addr !799
  %198 = and i32 %197, 3, !insn.addr !800
  %199 = icmp eq i32 %198, 0, !insn.addr !800
  %200 = icmp eq i1 %199, false, !insn.addr !801
  store i32 %195, i32* %ecx.8.reg2mem, !insn.addr !801
  store i32 %196, i32* %esi.8.reg2mem, !insn.addr !801
  store i32 %197, i32* %edi.8.reg2mem, !insn.addr !801
  store i32 %195, i32* %ecx.9.reg2mem, !insn.addr !801
  store i32 %196, i32* %esi.9.reg2mem, !insn.addr !801
  store i32 %197, i32* %edi.9.reg2mem, !insn.addr !801
  br i1 %200, label %dec_label_pc_4160af, label %dec_label_pc_4160c2, !insn.addr !801

dec_label_pc_4160c2:                              ; preds = %dec_label_pc_4160af, %dec_label_pc_4160a7, %dec_label_pc_415f0a
  %edi.9.reload = load i32, i32* %edi.9.reg2mem
  %esi.9.reload = load i32, i32* %esi.9.reg2mem
  %ecx.9.reload = load i32, i32* %ecx.9.reg2mem
  %201 = udiv i32 %ecx.9.reload, 4, !insn.addr !802
  %202 = inttoptr i32 %esi.9.reload to i8*, !insn.addr !803
  %203 = inttoptr i32 %edi.9.reload to i8*, !insn.addr !803
  call void @__asm_rep_movsd_memcpy(i8* %203, i8* %202, i32 %201), !insn.addr !803
  %204 = select i1 %0, i32 -4, i32 4, !insn.addr !803
  %205 = mul i32 %201, %204, !insn.addr !803
  %206 = add i32 %edi.9.reload, %205, !insn.addr !803
  %207 = and i32 %ecx.9.reload, 3, !insn.addr !804
  store i32 %207, i32* @6, align 4, !insn.addr !805
  store i32 %206, i32* %esi.10.reg2mem, !insn.addr !805
  store i32 %206, i32* %edi.10.reg2mem, !insn.addr !805
  store i32 %206, i32* %esi.11.reg2mem, !insn.addr !805
  store i32 %206, i32* %edi.11.reg2mem, !insn.addr !805
  store i32 %206, i32* %esi.12.reg2mem, !insn.addr !805
  store i32 %206, i32* %edi.12.reg2mem, !insn.addr !805
  switch i32 %207, label %dec_label_pc_41637b3 [
    i32 0, label %dec_label_pc_4160f4
    i32 1, label %dec_label_pc_4160fc
    i32 2, label %dec_label_pc_416108
    i32 3, label %dec_label_pc_41611c
  ], !insn.addr !805

dec_label_pc_4160f4:                              ; preds = %dec_label_pc_41609e, %dec_label_pc_41639d, %dec_label_pc_4162b5, %dec_label_pc_416176, %dec_label_pc_41634d, %dec_label_pc_41637b, %dec_label_pc_416396, %dec_label_pc_4162b1, %dec_label_pc_4160c2
  ret void, !insn.addr !806

dec_label_pc_4160fc:                              ; preds = %dec_label_pc_41609e, %dec_label_pc_4160c2
  %edi.10.reload = load i32, i32* %edi.10.reg2mem
  %esi.10.reload = load i32, i32* %esi.10.reg2mem
  %208 = inttoptr i32 %esi.10.reload to i8*, !insn.addr !807
  %209 = load i8, i8* %208, align 1, !insn.addr !807
  %210 = inttoptr i32 %edi.10.reload to i8*, !insn.addr !808
  store i8 %209, i8* %210, align 1, !insn.addr !808
  ret void, !insn.addr !809

dec_label_pc_416108:                              ; preds = %dec_label_pc_41609e, %dec_label_pc_4160c2
  %edi.11.reload = load i32, i32* %edi.11.reg2mem
  %esi.11.reload = load i32, i32* %esi.11.reg2mem
  %211 = inttoptr i32 %esi.11.reload to i8*, !insn.addr !810
  %212 = load i8, i8* %211, align 1, !insn.addr !810
  %213 = inttoptr i32 %edi.11.reload to i8*, !insn.addr !811
  store i8 %212, i8* %213, align 1, !insn.addr !811
  %214 = add i32 %esi.11.reload, 1, !insn.addr !812
  %215 = inttoptr i32 %214 to i8*, !insn.addr !812
  %216 = load i8, i8* %215, align 1, !insn.addr !812
  %217 = add i32 %edi.11.reload, 1, !insn.addr !813
  %218 = inttoptr i32 %217 to i8*, !insn.addr !813
  store i8 %216, i8* %218, align 1, !insn.addr !813
  ret void, !insn.addr !814

dec_label_pc_41611c:                              ; preds = %dec_label_pc_41609e, %dec_label_pc_4160c2
  %edi.12.reload = load i32, i32* %edi.12.reg2mem
  %esi.12.reload = load i32, i32* %esi.12.reg2mem
  %219 = inttoptr i32 %esi.12.reload to i8*, !insn.addr !815
  %220 = load i8, i8* %219, align 1, !insn.addr !815
  %221 = inttoptr i32 %edi.12.reload to i8*, !insn.addr !816
  store i8 %220, i8* %221, align 1, !insn.addr !816
  %222 = add i32 %esi.12.reload, 1, !insn.addr !817
  %223 = inttoptr i32 %222 to i8*, !insn.addr !817
  %224 = load i8, i8* %223, align 1, !insn.addr !817
  %225 = add i32 %edi.12.reload, 1, !insn.addr !818
  %226 = inttoptr i32 %225 to i8*, !insn.addr !818
  store i8 %224, i8* %226, align 1, !insn.addr !818
  %227 = add i32 %esi.12.reload, 2, !insn.addr !819
  %228 = inttoptr i32 %227 to i8*, !insn.addr !819
  %229 = load i8, i8* %228, align 1, !insn.addr !819
  %230 = add i32 %edi.12.reload, 2, !insn.addr !820
  %231 = inttoptr i32 %230 to i8*, !insn.addr !820
  store i8 %229, i8* %231, align 1, !insn.addr !820
  ret void, !insn.addr !821

dec_label_pc_416134:                              ; preds = %dec_label_pc_415e80
  %232 = add i32 %2, %count, !insn.addr !822
  %233 = icmp ult i32 %count, 32, !insn.addr !823
  store i32 %count, i32* %ecx.15.reg2mem, !insn.addr !824
  store i32 %3, i32* %esi.19.reg2mem, !insn.addr !824
  store i32 %232, i32* %edi.19.reg2mem, !insn.addr !824
  br i1 %233, label %dec_label_pc_416294, label %dec_label_pc_416143, !insn.addr !824

dec_label_pc_416143:                              ; preds = %dec_label_pc_416134
  %234 = load i32, i32* @__isa_enabled, align 4, !insn.addr !825
  %235 = and i32 %234, 2, !insn.addr !825
  %236 = icmp eq i32 %235, 0, !insn.addr !825
  br i1 %236, label %dec_label_pc_416151, label %dec_label_pc_4161e5, !insn.addr !826

dec_label_pc_416151:                              ; preds = %dec_label_pc_416143
  %237 = and i32 %232, 3, !insn.addr !827
  %238 = icmp eq i32 %237, 0, !insn.addr !827
  store i32 %237, i32* %edx.0.reg2mem, !insn.addr !828
  store i32 %3, i32* %esi.13.reg2mem, !insn.addr !828
  store i32 %232, i32* %edi.13.reg2mem, !insn.addr !828
  store i32 %count, i32* %ecx.10.reg2mem, !insn.addr !828
  store i32 %3, i32* %esi.14.reg2mem, !insn.addr !828
  store i32 %232, i32* %edi.14.reg2mem, !insn.addr !828
  br i1 %238, label %dec_label_pc_416176, label %dec_label_pc_416160, !insn.addr !828

dec_label_pc_416160:                              ; preds = %dec_label_pc_416151, %dec_label_pc_416160
  %edi.13.reload = load i32, i32* %edi.13.reg2mem
  %esi.13.reload = load i32, i32* %esi.13.reg2mem
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %239 = add i32 %esi.13.reload, -1, !insn.addr !829
  %240 = inttoptr i32 %239 to i8*, !insn.addr !829
  %241 = load i8, i8* %240, align 1, !insn.addr !829
  %242 = add i32 %edi.13.reload, -1, !insn.addr !830
  %243 = inttoptr i32 %242 to i8*, !insn.addr !830
  store i8 %241, i8* %243, align 1, !insn.addr !830
  %244 = add i32 %edx.0.reload, -1, !insn.addr !831
  %245 = icmp eq i32 %244, 0, !insn.addr !831
  %246 = icmp eq i1 %245, false, !insn.addr !832
  store i32 %244, i32* %edx.0.reg2mem, !insn.addr !832
  store i32 %239, i32* %esi.13.reg2mem, !insn.addr !832
  store i32 %242, i32* %edi.13.reg2mem, !insn.addr !832
  br i1 %246, label %dec_label_pc_416160, label %dec_label_pc_416176.loopexit, !insn.addr !832

dec_label_pc_416176.loopexit:                     ; preds = %dec_label_pc_416160
  %247 = sub i32 %count, %237, !insn.addr !833
  store i32 %247, i32* %ecx.10.reg2mem
  store i32 %239, i32* %esi.14.reg2mem
  store i32 %242, i32* %edi.14.reg2mem
  br label %dec_label_pc_416176

dec_label_pc_416176:                              ; preds = %dec_label_pc_416176.loopexit, %dec_label_pc_416151
  %edi.14.reload = load i32, i32* %edi.14.reg2mem
  %esi.14.reload = load i32, i32* %esi.14.reg2mem
  %ecx.10.reload = load i32, i32* %ecx.10.reg2mem
  %248 = udiv i32 %ecx.10.reload, 4, !insn.addr !834
  %249 = and i32 %ecx.10.reload, 3, !insn.addr !835
  %250 = add i32 %esi.14.reload, -4, !insn.addr !836
  %251 = add i32 %edi.14.reload, -4, !insn.addr !837
  %252 = inttoptr i32 %250 to i8*, !insn.addr !838
  %253 = inttoptr i32 %251 to i8*, !insn.addr !838
  call void @__asm_rep_movsd_memcpy(i8* %253, i8* %252, i32 %248), !insn.addr !838
  store i32 %249, i32* @7, align 4, !insn.addr !839
  br label %dec_label_pc_4160f4

dec_label_pc_4161e5:                              ; preds = %dec_label_pc_416143
  %254 = and i32 %232, 15, !insn.addr !840
  %255 = icmp eq i32 %254, 0, !insn.addr !840
  store i32 %count, i32* %ecx.11.reg2mem, !insn.addr !841
  store i32 %3, i32* %esi.15.reg2mem, !insn.addr !841
  store i32 %232, i32* %edi.15.reg2mem, !insn.addr !841
  store i32 %count, i32* %ecx.12.ph.reg2mem, !insn.addr !841
  store i32 %3, i32* %esi.16.ph.reg2mem, !insn.addr !841
  store i32 %232, i32* %edi.16.ph.reg2mem, !insn.addr !841
  br i1 %255, label %dec_label_pc_4161fc.preheader, label %dec_label_pc_4161ed, !insn.addr !841

dec_label_pc_4161ed:                              ; preds = %dec_label_pc_4161e5, %dec_label_pc_4161ed
  %edi.15.reload = load i32, i32* %edi.15.reg2mem
  %esi.15.reload = load i32, i32* %esi.15.reg2mem
  %ecx.11.reload = load i32, i32* %ecx.11.reg2mem
  %256 = add i32 %ecx.11.reload, -1, !insn.addr !842
  %257 = add i32 %esi.15.reload, -1, !insn.addr !843
  %258 = add i32 %edi.15.reload, -1, !insn.addr !844
  %259 = inttoptr i32 %257 to i8*, !insn.addr !845
  %260 = load i8, i8* %259, align 1, !insn.addr !845
  %261 = inttoptr i32 %258 to i8*, !insn.addr !846
  store i8 %260, i8* %261, align 1, !insn.addr !846
  %262 = and i32 %258, 15, !insn.addr !847
  %263 = icmp eq i32 %262, 0, !insn.addr !847
  %264 = icmp eq i1 %263, false, !insn.addr !848
  store i32 %256, i32* %ecx.11.reg2mem, !insn.addr !848
  store i32 %257, i32* %esi.15.reg2mem, !insn.addr !848
  store i32 %258, i32* %edi.15.reg2mem, !insn.addr !848
  store i32 %256, i32* %ecx.12.ph.reg2mem, !insn.addr !848
  store i32 %257, i32* %esi.16.ph.reg2mem, !insn.addr !848
  store i32 %258, i32* %edi.16.ph.reg2mem, !insn.addr !848
  br i1 %264, label %dec_label_pc_4161ed, label %dec_label_pc_4161fc.preheader, !insn.addr !848

dec_label_pc_4161fc.preheader:                    ; preds = %dec_label_pc_4161ed, %dec_label_pc_4161e5
  %edi.16.ph.reload = load i32, i32* %edi.16.ph.reg2mem
  %esi.16.ph.reload = load i32, i32* %esi.16.ph.reg2mem
  %ecx.12.ph.reload = load i32, i32* %ecx.12.ph.reg2mem
  store i32 %ecx.12.ph.reload, i32* %ecx.12.reg2mem
  store i32 %esi.16.ph.reload, i32* %esi.16.reg2mem
  store i32 %edi.16.ph.reload, i32* %edi.16.reg2mem
  br label %dec_label_pc_4161fc

dec_label_pc_4161fc:                              ; preds = %dec_label_pc_4161fc.preheader, %dec_label_pc_416204
  %edi.16.reload = load i32, i32* %edi.16.reg2mem
  %esi.16.reload = load i32, i32* %esi.16.reg2mem
  %ecx.12.reload = load i32, i32* %ecx.12.reg2mem
  %265 = icmp ult i32 %ecx.12.reload, 128, !insn.addr !849
  store i32 %ecx.12.reload, i32* %ecx.13.reg2mem, !insn.addr !850
  store i32 %esi.16.reload, i32* %esi.17.reg2mem, !insn.addr !850
  store i32 %edi.16.reload, i32* %edi.17.reg2mem, !insn.addr !850
  br i1 %265, label %dec_label_pc_41626c, label %dec_label_pc_416204, !insn.addr !850

dec_label_pc_416204:                              ; preds = %dec_label_pc_4161fc
  %266 = add i32 %esi.16.reload, -128, !insn.addr !851
  %267 = add i32 %edi.16.reload, -128, !insn.addr !852
  %268 = inttoptr i32 %266 to i128*, !insn.addr !853
  %269 = load i128, i128* %268, align 4, !insn.addr !853
  %270 = call i128 @__asm_movdqu.5(i128 %269), !insn.addr !853
  %271 = add i32 %esi.16.reload, -112, !insn.addr !854
  %272 = inttoptr i32 %271 to i128*, !insn.addr !854
  %273 = load i128, i128* %272, align 4, !insn.addr !854
  %274 = call i128 @__asm_movdqu.5(i128 %273), !insn.addr !854
  %275 = add i32 %esi.16.reload, -96, !insn.addr !855
  %276 = inttoptr i32 %275 to i128*, !insn.addr !855
  %277 = load i128, i128* %276, align 4, !insn.addr !855
  %278 = call i128 @__asm_movdqu.5(i128 %277), !insn.addr !855
  %279 = add i32 %esi.16.reload, -80, !insn.addr !856
  %280 = inttoptr i32 %279 to i128*, !insn.addr !856
  %281 = load i128, i128* %280, align 4, !insn.addr !856
  %282 = call i128 @__asm_movdqu.5(i128 %281), !insn.addr !856
  %283 = add i32 %esi.16.reload, -64, !insn.addr !857
  %284 = inttoptr i32 %283 to i128*, !insn.addr !857
  %285 = load i128, i128* %284, align 4, !insn.addr !857
  %286 = call i128 @__asm_movdqu.5(i128 %285), !insn.addr !857
  %287 = add i32 %esi.16.reload, -48, !insn.addr !858
  %288 = inttoptr i32 %287 to i128*, !insn.addr !858
  %289 = load i128, i128* %288, align 4, !insn.addr !858
  %290 = call i128 @__asm_movdqu.5(i128 %289), !insn.addr !858
  %291 = add i32 %esi.16.reload, -32, !insn.addr !859
  %292 = inttoptr i32 %291 to i128*, !insn.addr !859
  %293 = load i128, i128* %292, align 4, !insn.addr !859
  %294 = call i128 @__asm_movdqu.5(i128 %293), !insn.addr !859
  %295 = add i32 %esi.16.reload, -16, !insn.addr !860
  %296 = inttoptr i32 %295 to i128*, !insn.addr !860
  %297 = load i128, i128* %296, align 4, !insn.addr !860
  %298 = call i128 @__asm_movdqu.5(i128 %297), !insn.addr !860
  %299 = inttoptr i32 %267 to i128*, !insn.addr !861
  %300 = load i128, i128* %299, align 4, !insn.addr !861
  call void @__asm_movdqu(i128 %300, i128 %270), !insn.addr !861
  %301 = add i32 %edi.16.reload, -112, !insn.addr !862
  %302 = inttoptr i32 %301 to i128*, !insn.addr !862
  %303 = load i128, i128* %302, align 4, !insn.addr !862
  call void @__asm_movdqu(i128 %303, i128 %274), !insn.addr !862
  %304 = add i32 %edi.16.reload, -96, !insn.addr !863
  %305 = inttoptr i32 %304 to i128*, !insn.addr !863
  %306 = load i128, i128* %305, align 4, !insn.addr !863
  call void @__asm_movdqu(i128 %306, i128 %278), !insn.addr !863
  %307 = add i32 %edi.16.reload, -80, !insn.addr !864
  %308 = inttoptr i32 %307 to i128*, !insn.addr !864
  %309 = load i128, i128* %308, align 4, !insn.addr !864
  call void @__asm_movdqu(i128 %309, i128 %282), !insn.addr !864
  %310 = add i32 %edi.16.reload, -64, !insn.addr !865
  %311 = inttoptr i32 %310 to i128*, !insn.addr !865
  %312 = load i128, i128* %311, align 4, !insn.addr !865
  call void @__asm_movdqu(i128 %312, i128 %286), !insn.addr !865
  %313 = add i32 %edi.16.reload, -48, !insn.addr !866
  %314 = inttoptr i32 %313 to i128*, !insn.addr !866
  %315 = load i128, i128* %314, align 4, !insn.addr !866
  call void @__asm_movdqu(i128 %315, i128 %290), !insn.addr !866
  %316 = add i32 %edi.16.reload, -32, !insn.addr !867
  %317 = inttoptr i32 %316 to i128*, !insn.addr !867
  %318 = load i128, i128* %317, align 4, !insn.addr !867
  call void @__asm_movdqu(i128 %318, i128 %294), !insn.addr !867
  %319 = add i32 %edi.16.reload, -16, !insn.addr !868
  %320 = inttoptr i32 %319 to i128*, !insn.addr !868
  %321 = load i128, i128* %320, align 4, !insn.addr !868
  call void @__asm_movdqu(i128 %321, i128 %298), !insn.addr !868
  %322 = add i32 %ecx.12.reload, -128, !insn.addr !869
  %323 = icmp ult i32 %322, 128, !insn.addr !870
  %324 = icmp eq i1 %323, false, !insn.addr !871
  store i32 %322, i32* %ecx.12.reg2mem, !insn.addr !871
  store i32 %266, i32* %esi.16.reg2mem, !insn.addr !871
  store i32 %267, i32* %edi.16.reg2mem, !insn.addr !871
  store i32 %322, i32* %ecx.13.reg2mem, !insn.addr !871
  store i32 %266, i32* %esi.17.reg2mem, !insn.addr !871
  store i32 %267, i32* %edi.17.reg2mem, !insn.addr !871
  br i1 %324, label %dec_label_pc_4161fc, label %dec_label_pc_41626c, !insn.addr !871

dec_label_pc_41626c:                              ; preds = %dec_label_pc_416204, %dec_label_pc_4161fc
  %edi.17.reload = load i32, i32* %edi.17.reg2mem
  %esi.17.reload = load i32, i32* %esi.17.reg2mem
  %ecx.13.reload = load i32, i32* %ecx.13.reg2mem
  %325 = icmp ult i32 %ecx.13.reload, 32, !insn.addr !872
  store i32 %ecx.13.reload, i32* %ecx.14.reg2mem, !insn.addr !873
  store i32 %esi.17.reload, i32* %esi.18.reg2mem, !insn.addr !873
  store i32 %edi.17.reload, i32* %edi.18.reg2mem, !insn.addr !873
  store i32 %ecx.13.reload, i32* %ecx.15.reg2mem, !insn.addr !873
  store i32 %esi.17.reload, i32* %esi.19.reg2mem, !insn.addr !873
  store i32 %edi.17.reload, i32* %edi.19.reg2mem, !insn.addr !873
  br i1 %325, label %dec_label_pc_416294, label %dec_label_pc_416271, !insn.addr !873

dec_label_pc_416271:                              ; preds = %dec_label_pc_41626c, %dec_label_pc_416271
  %edi.18.reload = load i32, i32* %edi.18.reg2mem
  %esi.18.reload = load i32, i32* %esi.18.reg2mem
  %ecx.14.reload = load i32, i32* %ecx.14.reg2mem
  %326 = add i32 %esi.18.reload, -32, !insn.addr !874
  %327 = add i32 %edi.18.reload, -32, !insn.addr !875
  %328 = inttoptr i32 %326 to i128*, !insn.addr !876
  %329 = load i128, i128* %328, align 4, !insn.addr !876
  %330 = call i128 @__asm_movdqu.5(i128 %329), !insn.addr !876
  %331 = add i32 %esi.18.reload, -16, !insn.addr !877
  %332 = inttoptr i32 %331 to i128*, !insn.addr !877
  %333 = load i128, i128* %332, align 4, !insn.addr !877
  %334 = call i128 @__asm_movdqu.5(i128 %333), !insn.addr !877
  %335 = inttoptr i32 %327 to i128*, !insn.addr !878
  %336 = load i128, i128* %335, align 4, !insn.addr !878
  call void @__asm_movdqu(i128 %336, i128 %330), !insn.addr !878
  %337 = add i32 %edi.18.reload, -16, !insn.addr !879
  %338 = inttoptr i32 %337 to i128*, !insn.addr !879
  %339 = load i128, i128* %338, align 4, !insn.addr !879
  call void @__asm_movdqu(i128 %339, i128 %334), !insn.addr !879
  %340 = add i32 %ecx.14.reload, -32, !insn.addr !880
  %341 = icmp ult i32 %340, 32, !insn.addr !881
  %342 = icmp eq i1 %341, false, !insn.addr !882
  store i32 %340, i32* %ecx.14.reg2mem, !insn.addr !882
  store i32 %326, i32* %esi.18.reg2mem, !insn.addr !882
  store i32 %327, i32* %edi.18.reg2mem, !insn.addr !882
  store i32 %340, i32* %ecx.15.reg2mem, !insn.addr !882
  store i32 %326, i32* %esi.19.reg2mem, !insn.addr !882
  store i32 %327, i32* %edi.19.reg2mem, !insn.addr !882
  br i1 %342, label %dec_label_pc_416271, label %dec_label_pc_416294, !insn.addr !882

dec_label_pc_416294:                              ; preds = %dec_label_pc_416271, %dec_label_pc_41626c, %dec_label_pc_416134
  %edi.19.reload = load i32, i32* %edi.19.reg2mem
  %esi.19.reload = load i32, i32* %esi.19.reg2mem
  %ecx.15.reload = load i32, i32* %ecx.15.reg2mem
  %343 = icmp ult i32 %ecx.15.reload, 4, !insn.addr !883
  store i32 %ecx.15.reload, i32* %ecx.16.reg2mem, !insn.addr !884
  store i32 %esi.19.reload, i32* %esi.20.reg2mem, !insn.addr !884
  store i32 %edi.19.reload, i32* %edi.20.reg2mem, !insn.addr !884
  store i32 %ecx.15.reload, i32* %ecx.17.reg2mem, !insn.addr !884
  store i32 %esi.19.reload, i32* %esi.21.reg2mem, !insn.addr !884
  store i32 %edi.19.reload, i32* %edi.21.reg2mem, !insn.addr !884
  br i1 %343, label %dec_label_pc_4162b1, label %dec_label_pc_41629c, !insn.addr !884

dec_label_pc_41629c:                              ; preds = %dec_label_pc_416294, %dec_label_pc_41629c
  %edi.20.reload = load i32, i32* %edi.20.reg2mem
  %esi.20.reload = load i32, i32* %esi.20.reg2mem
  %ecx.16.reload = load i32, i32* %ecx.16.reg2mem
  %344 = add i32 %edi.20.reload, -4, !insn.addr !885
  %345 = add i32 %esi.20.reload, -4, !insn.addr !886
  %346 = inttoptr i32 %345 to i32*, !insn.addr !887
  %347 = load i32, i32* %346, align 4, !insn.addr !887
  %348 = inttoptr i32 %344 to i32*, !insn.addr !888
  store i32 %347, i32* %348, align 4, !insn.addr !888
  %349 = add i32 %ecx.16.reload, -4, !insn.addr !889
  %350 = icmp ult i32 %349, 4, !insn.addr !890
  %351 = icmp eq i1 %350, false, !insn.addr !891
  store i32 %349, i32* %ecx.16.reg2mem, !insn.addr !891
  store i32 %345, i32* %esi.20.reg2mem, !insn.addr !891
  store i32 %344, i32* %edi.20.reg2mem, !insn.addr !891
  store i32 %349, i32* %ecx.17.reg2mem, !insn.addr !891
  store i32 %345, i32* %esi.21.reg2mem, !insn.addr !891
  store i32 %344, i32* %edi.21.reg2mem, !insn.addr !891
  br i1 %351, label %dec_label_pc_41629c, label %dec_label_pc_4162b1, !insn.addr !891

dec_label_pc_4162b1:                              ; preds = %dec_label_pc_41629c, %dec_label_pc_416294
  %edi.21.reload = load i32, i32* %edi.21.reg2mem
  %esi.21.reload = load i32, i32* %esi.21.reg2mem
  %ecx.17.reload = load i32, i32* %ecx.17.reg2mem
  %352 = icmp eq i32 %ecx.17.reload, 0, !insn.addr !892
  store i32 %ecx.17.reload, i32* %ecx.18.reg2mem, !insn.addr !893
  store i32 %esi.21.reload, i32* %esi.22.reg2mem, !insn.addr !893
  store i32 %edi.21.reload, i32* %edi.22.reg2mem, !insn.addr !893
  br i1 %352, label %dec_label_pc_4160f4, label %dec_label_pc_4162b5, !insn.addr !893

dec_label_pc_4162b5:                              ; preds = %dec_label_pc_4162b1, %dec_label_pc_4162b5
  %edi.22.reload = load i32, i32* %edi.22.reg2mem
  %esi.22.reload = load i32, i32* %esi.22.reg2mem
  %ecx.18.reload = load i32, i32* %ecx.18.reg2mem
  %353 = add i32 %edi.22.reload, -1, !insn.addr !894
  %354 = add i32 %esi.22.reload, -1, !insn.addr !895
  %355 = inttoptr i32 %354 to i8*, !insn.addr !896
  %356 = load i8, i8* %355, align 1, !insn.addr !896
  %357 = inttoptr i32 %353 to i8*, !insn.addr !897
  store i8 %356, i8* %357, align 1, !insn.addr !897
  %358 = add i32 %ecx.18.reload, -1, !insn.addr !898
  %359 = icmp eq i32 %358, 0, !insn.addr !898
  %360 = icmp eq i1 %359, false, !insn.addr !899
  store i32 %358, i32* %ecx.18.reg2mem, !insn.addr !899
  store i32 %354, i32* %esi.22.reg2mem, !insn.addr !899
  store i32 %353, i32* %edi.22.reg2mem, !insn.addr !899
  br i1 %360, label %dec_label_pc_4162b5, label %dec_label_pc_4160f4, !insn.addr !899

dec_label_pc_4162d0:                              ; preds = %dec_label_pc_415ee2
  %361 = and i32 %1, 15, !insn.addr !900
  %362 = icmp eq i32 %361, 0, !insn.addr !901
  %363 = icmp eq i1 %362, false, !insn.addr !902
  store i32 %count, i32* %ecx.19.reg2mem, !insn.addr !902
  store i32 %1, i32* %esi.23.reg2mem, !insn.addr !902
  store i32 %2, i32* %edi.23.reg2mem, !insn.addr !902
  br i1 %363, label %dec_label_pc_4163c0, label %dec_label_pc_4162dd, !insn.addr !902

dec_label_pc_4162dd:                              ; preds = %dec_label_pc_4163e1, %dec_label_pc_4163dc, %dec_label_pc_4162d0
  %edi.23.reload = load i32, i32* %edi.23.reg2mem
  %esi.23.reload = load i32, i32* %esi.23.reg2mem
  %ecx.19.reload = load i32, i32* %ecx.19.reg2mem
  %364 = udiv i32 %ecx.19.reload, 128, !insn.addr !903
  %365 = icmp ult i32 %ecx.19.reload, 128
  store i32 %364, i32* %edx.1.reg2mem, !insn.addr !904
  store i32 %esi.23.reload, i32* %esi.24.reg2mem, !insn.addr !904
  store i32 %edi.23.reload, i32* %edi.24.reg2mem, !insn.addr !904
  store i32 %esi.23.reload, i32* %esi.25.reg2mem, !insn.addr !904
  store i32 %edi.23.reload, i32* %edi.25.reg2mem, !insn.addr !904
  br i1 %365, label %dec_label_pc_41634d, label %dec_label_pc_4162f0, !insn.addr !904

dec_label_pc_4162f0:                              ; preds = %dec_label_pc_4162dd, %dec_label_pc_4162f0
  %edi.24.reload = load i32, i32* %edi.24.reg2mem
  %esi.24.reload = load i32, i32* %esi.24.reg2mem
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %366 = inttoptr i32 %esi.24.reload to i128*, !insn.addr !905
  %367 = load i128, i128* %366, align 4, !insn.addr !905
  %368 = call i128 @__asm_movdqa.8(i128 %367), !insn.addr !905
  %369 = add i32 %esi.24.reload, 16, !insn.addr !906
  %370 = inttoptr i32 %369 to i128*, !insn.addr !906
  %371 = load i128, i128* %370, align 4, !insn.addr !906
  %372 = call i128 @__asm_movdqa.8(i128 %371), !insn.addr !906
  %373 = add i32 %esi.24.reload, 32, !insn.addr !907
  %374 = inttoptr i32 %373 to i128*, !insn.addr !907
  %375 = load i128, i128* %374, align 4, !insn.addr !907
  %376 = call i128 @__asm_movdqa.8(i128 %375), !insn.addr !907
  %377 = add i32 %esi.24.reload, 48, !insn.addr !908
  %378 = inttoptr i32 %377 to i128*, !insn.addr !908
  %379 = load i128, i128* %378, align 4, !insn.addr !908
  %380 = call i128 @__asm_movdqa.8(i128 %379), !insn.addr !908
  %381 = inttoptr i32 %edi.24.reload to i128*, !insn.addr !909
  %382 = load i128, i128* %381, align 4, !insn.addr !909
  call void @__asm_movdqa(i128 %382, i128 %368), !insn.addr !909
  %383 = add i32 %edi.24.reload, 16, !insn.addr !910
  %384 = inttoptr i32 %383 to i128*, !insn.addr !910
  %385 = load i128, i128* %384, align 4, !insn.addr !910
  call void @__asm_movdqa(i128 %385, i128 %372), !insn.addr !910
  %386 = add i32 %edi.24.reload, 32, !insn.addr !911
  %387 = inttoptr i32 %386 to i128*, !insn.addr !911
  %388 = load i128, i128* %387, align 4, !insn.addr !911
  call void @__asm_movdqa(i128 %388, i128 %376), !insn.addr !911
  %389 = add i32 %edi.24.reload, 48, !insn.addr !912
  %390 = inttoptr i32 %389 to i128*, !insn.addr !912
  %391 = load i128, i128* %390, align 4, !insn.addr !912
  call void @__asm_movdqa(i128 %391, i128 %380), !insn.addr !912
  %392 = add i32 %esi.24.reload, 64, !insn.addr !913
  %393 = inttoptr i32 %392 to i128*, !insn.addr !913
  %394 = load i128, i128* %393, align 4, !insn.addr !913
  %395 = call i128 @__asm_movdqa.8(i128 %394), !insn.addr !913
  %396 = add i32 %esi.24.reload, 80, !insn.addr !914
  %397 = inttoptr i32 %396 to i128*, !insn.addr !914
  %398 = load i128, i128* %397, align 4, !insn.addr !914
  %399 = call i128 @__asm_movdqa.8(i128 %398), !insn.addr !914
  %400 = add i32 %esi.24.reload, 96, !insn.addr !915
  %401 = inttoptr i32 %400 to i128*, !insn.addr !915
  %402 = load i128, i128* %401, align 4, !insn.addr !915
  %403 = call i128 @__asm_movdqa.8(i128 %402), !insn.addr !915
  %404 = add i32 %esi.24.reload, 112, !insn.addr !916
  %405 = inttoptr i32 %404 to i128*, !insn.addr !916
  %406 = load i128, i128* %405, align 4, !insn.addr !916
  %407 = call i128 @__asm_movdqa.8(i128 %406), !insn.addr !916
  %408 = add i32 %edi.24.reload, 64, !insn.addr !917
  %409 = inttoptr i32 %408 to i128*, !insn.addr !917
  %410 = load i128, i128* %409, align 4, !insn.addr !917
  call void @__asm_movdqa(i128 %410, i128 %395), !insn.addr !917
  %411 = add i32 %edi.24.reload, 80, !insn.addr !918
  %412 = inttoptr i32 %411 to i128*, !insn.addr !918
  %413 = load i128, i128* %412, align 4, !insn.addr !918
  call void @__asm_movdqa(i128 %413, i128 %399), !insn.addr !918
  %414 = add i32 %edi.24.reload, 96, !insn.addr !919
  %415 = inttoptr i32 %414 to i128*, !insn.addr !919
  %416 = load i128, i128* %415, align 4, !insn.addr !919
  call void @__asm_movdqa(i128 %416, i128 %403), !insn.addr !919
  %417 = add i32 %edi.24.reload, 112, !insn.addr !920
  %418 = inttoptr i32 %417 to i128*, !insn.addr !920
  %419 = load i128, i128* %418, align 4, !insn.addr !920
  call void @__asm_movdqa(i128 %419, i128 %407), !insn.addr !920
  %420 = add i32 %esi.24.reload, 128, !insn.addr !921
  %421 = add i32 %edi.24.reload, 128, !insn.addr !922
  %422 = add i32 %edx.1.reload, -1, !insn.addr !923
  %423 = icmp eq i32 %422, 0, !insn.addr !923
  %424 = icmp eq i1 %423, false, !insn.addr !924
  store i32 %422, i32* %edx.1.reg2mem, !insn.addr !924
  store i32 %420, i32* %esi.24.reg2mem, !insn.addr !924
  store i32 %421, i32* %edi.24.reg2mem, !insn.addr !924
  store i32 %420, i32* %esi.25.reg2mem, !insn.addr !924
  store i32 %421, i32* %edi.25.reg2mem, !insn.addr !924
  br i1 %424, label %dec_label_pc_4162f0, label %dec_label_pc_41634d, !insn.addr !924

dec_label_pc_41634d:                              ; preds = %dec_label_pc_4162f0, %dec_label_pc_4162dd
  %425 = and i32 %ecx.19.reload, 127, !insn.addr !925
  %edi.25.reload = load i32, i32* %edi.25.reg2mem
  %esi.25.reload = load i32, i32* %esi.25.reg2mem
  %426 = icmp eq i32 %425, 0, !insn.addr !926
  store i32 %edi.25.reload, i32* %edi.256.reg2mem, !insn.addr !927
  store i32 %esi.25.reload, i32* %esi.255.reg2mem, !insn.addr !927
  store i32 %425, i32* %ecx.204.reg2mem, !insn.addr !927
  br i1 %426, label %dec_label_pc_4160f4, label %dec_label_pc_416351, !insn.addr !927

dec_label_pc_416351:                              ; preds = %dec_label_pc_415eb1, %dec_label_pc_41634d
  %ecx.204.reload = load i32, i32* %ecx.204.reg2mem
  %esi.255.reload = load i32, i32* %esi.255.reg2mem
  %edi.256.reload = load i32, i32* %edi.256.reg2mem
  %427 = udiv i32 %ecx.204.reload, 32, !insn.addr !928
  %428 = icmp ult i32 %ecx.204.reload, 32
  store i32 %427, i32* %edx.2.reg2mem, !insn.addr !929
  store i32 %esi.255.reload, i32* %esi.26.reg2mem, !insn.addr !929
  store i32 %edi.256.reload, i32* %edi.26.reg2mem, !insn.addr !929
  store i32 %ecx.204.reload, i32* %ecx.21.reg2mem, !insn.addr !929
  store i32 %esi.255.reload, i32* %esi.27.reg2mem, !insn.addr !929
  store i32 %edi.256.reload, i32* %edi.27.reg2mem, !insn.addr !929
  br i1 %428, label %dec_label_pc_41637b, label %dec_label_pc_416360, !insn.addr !929

dec_label_pc_416360:                              ; preds = %dec_label_pc_416351, %dec_label_pc_416360
  %edi.26.reload = load i32, i32* %edi.26.reg2mem
  %esi.26.reload = load i32, i32* %esi.26.reg2mem
  %edx.2.reload = load i32, i32* %edx.2.reg2mem
  %429 = inttoptr i32 %esi.26.reload to i128*, !insn.addr !930
  %430 = load i128, i128* %429, align 4, !insn.addr !930
  %431 = call i128 @__asm_movdqu.5(i128 %430), !insn.addr !930
  %432 = add i32 %esi.26.reload, 16, !insn.addr !931
  %433 = inttoptr i32 %432 to i128*, !insn.addr !931
  %434 = load i128, i128* %433, align 4, !insn.addr !931
  %435 = call i128 @__asm_movdqu.5(i128 %434), !insn.addr !931
  %436 = inttoptr i32 %edi.26.reload to i128*, !insn.addr !932
  %437 = load i128, i128* %436, align 4, !insn.addr !932
  call void @__asm_movdqu(i128 %437, i128 %431), !insn.addr !932
  %438 = add i32 %edi.26.reload, 16, !insn.addr !933
  %439 = inttoptr i32 %438 to i128*, !insn.addr !933
  %440 = load i128, i128* %439, align 4, !insn.addr !933
  call void @__asm_movdqu(i128 %440, i128 %435), !insn.addr !933
  %441 = add i32 %esi.26.reload, 32, !insn.addr !934
  %442 = add i32 %edi.26.reload, 32, !insn.addr !935
  %443 = add i32 %edx.2.reload, -1, !insn.addr !936
  %444 = icmp eq i32 %443, 0, !insn.addr !936
  %445 = icmp eq i1 %444, false, !insn.addr !937
  store i32 %443, i32* %edx.2.reg2mem, !insn.addr !937
  store i32 %441, i32* %esi.26.reg2mem, !insn.addr !937
  store i32 %442, i32* %edi.26.reg2mem, !insn.addr !937
  store i32 %ecx.204.reload, i32* %ecx.21.reg2mem, !insn.addr !937
  store i32 %441, i32* %esi.27.reg2mem, !insn.addr !937
  store i32 %442, i32* %edi.27.reg2mem, !insn.addr !937
  br i1 %445, label %dec_label_pc_416360, label %dec_label_pc_41637b, !insn.addr !937

dec_label_pc_41637b3:                             ; preds = %dec_label_pc_4160c2
  unreachable

dec_label_pc_41637b:                              ; preds = %dec_label_pc_416360, %dec_label_pc_416351, %dec_label_pc_415ea0
  %ecx.21.reload = load i32, i32* %ecx.21.reg2mem
  %446 = and i32 %ecx.21.reload, 31, !insn.addr !938
  %447 = icmp eq i32 %446, 0, !insn.addr !938
  br i1 %447, label %dec_label_pc_4160f4, label %dec_label_pc_416380, !insn.addr !939

dec_label_pc_416380:                              ; preds = %dec_label_pc_41637b
  %edi.27.reload = load i32, i32* %edi.27.reg2mem
  %esi.27.reload = load i32, i32* %esi.27.reg2mem
  %448 = udiv i32 %446, 4, !insn.addr !940
  %449 = icmp ult i32 %446, 4
  store i32 %448, i32* %ecx.22.reg2mem, !insn.addr !941
  store i32 %esi.27.reload, i32* %esi.28.reg2mem, !insn.addr !941
  store i32 %edi.27.reload, i32* %edi.28.reg2mem, !insn.addr !941
  store i32 %esi.27.reload, i32* %esi.29.reg2mem, !insn.addr !941
  store i32 %edi.27.reload, i32* %edi.29.reg2mem, !insn.addr !941
  br i1 %449, label %dec_label_pc_416396, label %dec_label_pc_416387, !insn.addr !941

dec_label_pc_416387:                              ; preds = %dec_label_pc_416380, %dec_label_pc_416387
  %edi.28.reload = load i32, i32* %edi.28.reg2mem
  %esi.28.reload = load i32, i32* %esi.28.reg2mem
  %ecx.22.reload = load i32, i32* %ecx.22.reg2mem
  %450 = inttoptr i32 %esi.28.reload to i32*, !insn.addr !942
  %451 = load i32, i32* %450, align 4, !insn.addr !942
  %452 = inttoptr i32 %edi.28.reload to i32*, !insn.addr !943
  store i32 %451, i32* %452, align 4, !insn.addr !943
  %453 = add i32 %edi.28.reload, 4, !insn.addr !944
  %454 = add i32 %esi.28.reload, 4, !insn.addr !945
  %455 = add i32 %ecx.22.reload, -1, !insn.addr !946
  %456 = icmp eq i32 %455, 0, !insn.addr !946
  %457 = icmp eq i1 %456, false, !insn.addr !947
  store i32 %455, i32* %ecx.22.reg2mem, !insn.addr !947
  store i32 %454, i32* %esi.28.reg2mem, !insn.addr !947
  store i32 %453, i32* %edi.28.reg2mem, !insn.addr !947
  store i32 %454, i32* %esi.29.reg2mem, !insn.addr !947
  store i32 %453, i32* %edi.29.reg2mem, !insn.addr !947
  br i1 %457, label %dec_label_pc_416387, label %dec_label_pc_416396, !insn.addr !947

dec_label_pc_416396:                              ; preds = %dec_label_pc_416387, %dec_label_pc_416380
  %edi.29.reload = load i32, i32* %edi.29.reg2mem
  %esi.29.reload = load i32, i32* %esi.29.reg2mem
  %458 = and i32 %ecx.21.reload, 3, !insn.addr !948
  %459 = icmp eq i32 %458, 0, !insn.addr !948
  store i32 %458, i32* %ecx.23.reg2mem, !insn.addr !949
  store i32 %esi.29.reload, i32* %esi.30.reg2mem, !insn.addr !949
  store i32 %edi.29.reload, i32* %edi.30.reg2mem, !insn.addr !949
  br i1 %459, label %dec_label_pc_4160f4, label %dec_label_pc_41639d, !insn.addr !949

dec_label_pc_41639d:                              ; preds = %dec_label_pc_416396, %dec_label_pc_41639d
  %edi.30.reload = load i32, i32* %edi.30.reg2mem
  %esi.30.reload = load i32, i32* %esi.30.reg2mem
  %ecx.23.reload = load i32, i32* %ecx.23.reg2mem
  %460 = inttoptr i32 %esi.30.reload to i8*, !insn.addr !950
  %461 = load i8, i8* %460, align 1, !insn.addr !950
  %462 = inttoptr i32 %edi.30.reload to i8*, !insn.addr !951
  store i8 %461, i8* %462, align 1, !insn.addr !951
  %463 = add i32 %esi.30.reload, 1, !insn.addr !952
  %464 = add i32 %edi.30.reload, 1, !insn.addr !953
  %465 = add i32 %ecx.23.reload, -1, !insn.addr !954
  %466 = icmp eq i32 %465, 0, !insn.addr !954
  %467 = icmp eq i1 %466, false, !insn.addr !955
  store i32 %465, i32* %ecx.23.reg2mem, !insn.addr !955
  store i32 %463, i32* %esi.30.reg2mem, !insn.addr !955
  store i32 %464, i32* %edi.30.reg2mem, !insn.addr !955
  br i1 %467, label %dec_label_pc_41639d, label %dec_label_pc_4160f4, !insn.addr !955

dec_label_pc_4163c0:                              ; preds = %dec_label_pc_4162d0
  %468 = sub nsw i32 16, %361, !insn.addr !956
  %469 = and i32 %468, 3, !insn.addr !957
  %470 = icmp eq i32 %469, 0, !insn.addr !957
  store i32 %469, i32* %ecx.24.reg2mem, !insn.addr !958
  store i32 %1, i32* %esi.31.reg2mem, !insn.addr !958
  store i32 %2, i32* %edi.31.reg2mem, !insn.addr !958
  store i32 %1, i32* %esi.32.reg2mem, !insn.addr !958
  store i32 %2, i32* %edi.32.reg2mem, !insn.addr !958
  br i1 %470, label %dec_label_pc_4163dc, label %dec_label_pc_4163d3, !insn.addr !958

dec_label_pc_4163d3:                              ; preds = %dec_label_pc_4163c0, %dec_label_pc_4163d3
  %edi.31.reload = load i32, i32* %edi.31.reg2mem
  %esi.31.reload = load i32, i32* %esi.31.reg2mem
  %ecx.24.reload = load i32, i32* %ecx.24.reg2mem
  %471 = inttoptr i32 %esi.31.reload to i8*, !insn.addr !959
  %472 = load i8, i8* %471, align 1, !insn.addr !959
  %473 = inttoptr i32 %edi.31.reload to i8*, !insn.addr !960
  store i8 %472, i8* %473, align 1, !insn.addr !960
  %474 = add i32 %esi.31.reload, 1, !insn.addr !961
  %475 = add i32 %edi.31.reload, 1, !insn.addr !962
  %476 = add i32 %ecx.24.reload, -1, !insn.addr !963
  %477 = icmp eq i32 %476, 0, !insn.addr !963
  %478 = icmp eq i1 %477, false, !insn.addr !964
  store i32 %476, i32* %ecx.24.reg2mem, !insn.addr !964
  store i32 %474, i32* %esi.31.reg2mem, !insn.addr !964
  store i32 %475, i32* %edi.31.reg2mem, !insn.addr !964
  store i32 %474, i32* %esi.32.reg2mem, !insn.addr !964
  store i32 %475, i32* %edi.32.reg2mem, !insn.addr !964
  br i1 %478, label %dec_label_pc_4163d3, label %dec_label_pc_4163dc, !insn.addr !964

dec_label_pc_4163dc:                              ; preds = %dec_label_pc_4163d3, %dec_label_pc_4163c0
  %479 = sub i32 %count, %468, !insn.addr !965
  %edi.32.reload = load i32, i32* %edi.32.reg2mem
  %esi.32.reload = load i32, i32* %esi.32.reg2mem
  %480 = udiv i32 %468, 4, !insn.addr !966
  %481 = icmp ult i32 %468, 4
  store i32 %479, i32* %ecx.19.reg2mem, !insn.addr !967
  store i32 %esi.32.reload, i32* %esi.23.reg2mem, !insn.addr !967
  store i32 %edi.32.reload, i32* %edi.23.reg2mem, !insn.addr !967
  store i32 %480, i32* %eax.9.reg2mem, !insn.addr !967
  store i32 %esi.32.reload, i32* %esi.33.reg2mem, !insn.addr !967
  store i32 %edi.32.reload, i32* %edi.33.reg2mem, !insn.addr !967
  br i1 %481, label %dec_label_pc_4162dd, label %dec_label_pc_4163e1, !insn.addr !967

dec_label_pc_4163e1:                              ; preds = %dec_label_pc_4163dc, %dec_label_pc_4163e1
  %edi.33.reload = load i32, i32* %edi.33.reg2mem
  %esi.33.reload = load i32, i32* %esi.33.reg2mem
  %eax.9.reload = load i32, i32* %eax.9.reg2mem
  %482 = inttoptr i32 %esi.33.reload to i32*, !insn.addr !968
  %483 = load i32, i32* %482, align 4, !insn.addr !968
  %484 = inttoptr i32 %edi.33.reload to i32*, !insn.addr !969
  store i32 %483, i32* %484, align 4, !insn.addr !969
  %485 = add i32 %esi.33.reload, 4, !insn.addr !970
  %486 = add i32 %edi.33.reload, 4, !insn.addr !971
  %487 = add i32 %eax.9.reload, -1, !insn.addr !972
  %488 = icmp eq i32 %487, 0, !insn.addr !972
  %489 = icmp eq i1 %488, false, !insn.addr !973
  store i32 %479, i32* %ecx.19.reg2mem, !insn.addr !973
  store i32 %485, i32* %esi.23.reg2mem, !insn.addr !973
  store i32 %486, i32* %edi.23.reg2mem, !insn.addr !973
  store i32 %487, i32* %eax.9.reg2mem, !insn.addr !973
  store i32 %485, i32* %esi.33.reg2mem, !insn.addr !973
  store i32 %486, i32* %edi.33.reg2mem, !insn.addr !973
  br i1 %489, label %dec_label_pc_4163e1, label %dec_label_pc_4162dd, !insn.addr !973
}

declare i32* @__acrt_iob_func(i32) local_unnamed_addr

declare void @_lock_file(%_IO_FILE*) local_unnamed_addr

declare void @_unlock_file(%_IO_FILE*) local_unnamed_addr

define i32 @"__crt_seh_guarded_call<int>::operator()<<lambda_c29ee0499b841886b80d843682cc403a>,<lambda_0be4ab1c2a6918fda4e39227d83ea893> &,<lambda_5a3ed3da325c8ea037a470278c0f2d16> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_416c9a:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a0c8, i32 12), !insn.addr !974
  %2 = add i32 %0, -28, !insn.addr !975
  %3 = inttoptr i32 %2 to i32*, !insn.addr !975
  store i32 0, i32* %3, align 4, !insn.addr !975
  %4 = add i32 %0, 8, !insn.addr !976
  %5 = inttoptr i32 %4 to i32*, !insn.addr !976
  %6 = load i32, i32* %5, align 4, !insn.addr !976
  %7 = inttoptr i32 %6 to i32*, !insn.addr !977
  %8 = load i32, i32* %7, align 4, !insn.addr !977
  %9 = inttoptr i32 %8 to %_IO_FILE*, !insn.addr !977
  call void @_lock_file(%_IO_FILE* %9), !insn.addr !978
  %10 = add i32 %0, -4, !insn.addr !979
  %11 = inttoptr i32 %10 to i32*, !insn.addr !979
  store i32 0, i32* %11, align 4, !insn.addr !979
  %12 = call i32 @"<lambda_0be4ab1c2a6918fda4e39227d83ea893>::operator()"(i32* nonnull @80), !insn.addr !980
  store i32 %12, i32* %3, align 4, !insn.addr !981
  store i32 -2, i32* %11, align 4, !insn.addr !982
  %13 = call i32 @function_416ce9(), !insn.addr !983
  %14 = add i32 %0, -16, !insn.addr !984
  %15 = inttoptr i32 %14 to i32*, !insn.addr !984
  %16 = load i32, i32* %15, align 4, !insn.addr !984
  call void @__writefsdword(i32 0, i32 %16), !insn.addr !985
  ret i32 %12, !insn.addr !986
}

define i32 @function_416ce9() local_unnamed_addr {
dec_label_pc_416ce9:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !987
  %2 = inttoptr i32 %1 to i32*, !insn.addr !987
  %3 = load i32, i32* %2, align 4, !insn.addr !987
  %4 = inttoptr i32 %3 to i32*, !insn.addr !988
  %5 = load i32, i32* %4, align 4, !insn.addr !988
  %6 = inttoptr i32 %5 to %_IO_FILE*, !insn.addr !988
  call void @_unlock_file(%_IO_FILE* %6), !insn.addr !989
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !990
}

define i32 @"__crt_stdio_output::formatting_buffer::count<char>"(i32* %this) local_unnamed_addr {
dec_label_pc_4180d8:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 1028, !insn.addr !991
  %2 = inttoptr i32 %1 to i32*, !insn.addr !991
  %3 = load i32, i32* %2, align 4, !insn.addr !991
  %4 = icmp eq i32 %3, 0, !insn.addr !991
  %5 = icmp eq i1 %4, false, !insn.addr !992
  br i1 %5, label %dec_label_pc_4180e7, label %dec_label_pc_4180e1, !insn.addr !992

dec_label_pc_4180e1:                              ; preds = %dec_label_pc_4180d8
  ret i32 512, !insn.addr !993

dec_label_pc_4180e7:                              ; preds = %dec_label_pc_4180d8
  %6 = add i32 %0, 1024, !insn.addr !994
  %7 = inttoptr i32 %6 to i32*, !insn.addr !994
  %8 = load i32, i32* %7, align 4, !insn.addr !994
  %9 = udiv i32 %8, 2, !insn.addr !995
  ret i32 %9, !insn.addr !996
}

define i1 @"__crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>"(i32* %this, i32 %count) local_unnamed_addr {
dec_label_pc_418135:
  %eax.1.reg2mem = alloca i32, !insn.addr !997
  %esp.0.in.reg2mem = alloca i32*, !insn.addr !997
  %ebx.0.reg2mem = alloca i32, !insn.addr !997
  %eax.0.reg2mem = alloca i32, !insn.addr !997
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %1 = icmp ugt i32* %this, inttoptr (i32 2147483647 to i32*)
  br i1 %1, label %dec_label_pc_41814a, label %dec_label_pc_418159, !insn.addr !998

dec_label_pc_41814a:                              ; preds = %dec_label_pc_418135
  %2 = call i32* @_errno(), !insn.addr !999
  store i32 12, i32* %2, align 4, !insn.addr !1000
  store i32 0, i32* %eax.1.reg2mem, !insn.addr !1001
  br label %dec_label_pc_4181ac, !insn.addr !1001

dec_label_pc_418159:                              ; preds = %dec_label_pc_418135
  %3 = ptrtoint i32* %this to i32
  %4 = mul i32 %3, 2, !insn.addr !1002
  %5 = add i32 %0, 1028, !insn.addr !1003
  %6 = inttoptr i32 %5 to i32*, !insn.addr !1003
  %7 = load i32, i32* %6, align 4, !insn.addr !1003
  %8 = icmp eq i32 %7, 0, !insn.addr !1003
  %9 = icmp ult i32 %4, 1025
  %or.cond = icmp eq i1 %9, %8
  store i32 1, i32* %eax.1.reg2mem, !insn.addr !1004
  br i1 %or.cond, label %dec_label_pc_4181ac, label %dec_label_pc_41816e, !insn.addr !1004

dec_label_pc_41816e:                              ; preds = %dec_label_pc_418159
  %10 = add i32 %0, 1024, !insn.addr !1005
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1005
  %12 = load i32, i32* %11, align 4, !insn.addr !1005
  %13 = icmp ugt i32 %4, %12
  store i32 1, i32* %eax.1.reg2mem, !insn.addr !1006
  br i1 %13, label %dec_label_pc_41817a, label %dec_label_pc_4181ac, !insn.addr !1006

dec_label_pc_41817a:                              ; preds = %dec_label_pc_41816e
  store i32 %4, i32* %stack_var_-24, align 4, !insn.addr !1007
  %14 = call i32* @_malloc_base(i32 %4), !insn.addr !1008
  %15 = ptrtoint i32* %14 to i32, !insn.addr !1008
  store i32 %15, i32* %stack_var_-8, align 4, !insn.addr !1009
  %16 = icmp eq i32* %14, null, !insn.addr !1010
  store i32 %15, i32* %eax.0.reg2mem, !insn.addr !1011
  store i32 and (i32 ptrtoint (i32* @80 to i32), i32 -256), i32* %ebx.0.reg2mem, !insn.addr !1011
  store i32* %stack_var_-20, i32** %esp.0.in.reg2mem, !insn.addr !1011
  br i1 %16, label %dec_label_pc_4181a2, label %dec_label_pc_418188, !insn.addr !1011

dec_label_pc_418188:                              ; preds = %dec_label_pc_41817a
  %17 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !1012
  store i32 %17, i32* %stack_var_-24, align 4, !insn.addr !1012
  %18 = call i32 @function_402d5b(i32* nonnull %stack_var_-8), !insn.addr !1013
  %19 = load i32, i32* %stack_var_-8, align 4, !insn.addr !1014
  store i32 %4, i32* %11, align 4, !insn.addr !1015
  store i32 %19, i32* %eax.0.reg2mem, !insn.addr !1015
  store i32 or (i32 and (i32 ptrtoint (i32* @80 to i32), i32 -256), i32 1), i32* %ebx.0.reg2mem, !insn.addr !1015
  store i32* %stack_var_-24, i32** %esp.0.in.reg2mem, !insn.addr !1015
  br label %dec_label_pc_4181a2, !insn.addr !1015

dec_label_pc_4181a2:                              ; preds = %dec_label_pc_418188, %dec_label_pc_41817a
  %esp.0.in.reload = load i32*, i32** %esp.0.in.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %esp.0 = ptrtoint i32* %esp.0.in.reload to i32
  %20 = add i32 %esp.0, -4, !insn.addr !1016
  %21 = inttoptr i32 %20 to i32*, !insn.addr !1016
  store i32 %eax.0.reload, i32* %21, align 4, !insn.addr !1016
  call void @_free_base(i32* nonnull @80), !insn.addr !1017
  store i32 %ebx.0.reload, i32* %eax.1.reg2mem, !insn.addr !1018
  br label %dec_label_pc_4181ac, !insn.addr !1018

dec_label_pc_4181ac:                              ; preds = %dec_label_pc_41816e, %dec_label_pc_418159, %dec_label_pc_4181a2, %dec_label_pc_41814a
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %22 = and i32 %eax.1.reload, 1
  %23 = icmp ne i32 %22, 0, !insn.addr !1019
  ret i1 %23, !insn.addr !1019
}

define i1 @"__crt_stdio_output::is_wide_character_specifier<char>"(i64 %options, i8 %format_type, i32 %length) local_unnamed_addr {
dec_label_pc_41ae48:
  %merge.reg2mem = alloca i1, !insn.addr !1020
  store i1 true, i1* %merge.reg2mem
  store i1 true, i1* %merge.reg2mem
  switch i8 %format_type, label %dec_label_pc_41ae66 [
    i8 2, label %dec_label_pc_41ae75
    i8 3, label %dec_label_pc_41ae71
    i8 12, label %dec_label_pc_41ae71
    i8 13, label %dec_label_pc_41ae75
  ]

dec_label_pc_41ae66:                              ; preds = %dec_label_pc_41ae48
  %0 = trunc i64 %options to i8, !insn.addr !1021
  store i1 true, i1* %merge.reg2mem
  switch i8 %0, label %dec_label_pc_41ae71 [
    i8 115, label %dec_label_pc_41ae75
    i8 99, label %dec_label_pc_41ae75
  ]

dec_label_pc_41ae71:                              ; preds = %dec_label_pc_41ae66, %dec_label_pc_41ae48, %dec_label_pc_41ae48, %dec_label_pc_41ae75
  %merge.reload = load i1, i1* %merge.reg2mem
  ret i1 %merge.reload, !insn.addr !1022

dec_label_pc_41ae75:                              ; preds = %dec_label_pc_41ae66, %dec_label_pc_41ae66, %dec_label_pc_41ae48, %dec_label_pc_41ae48
  store i1 false, i1* %merge.reg2mem
  br label %dec_label_pc_41ae71
}

define i8* @"__crt_stdio_output::formatting_buffer::scratch_data<char>"(i32* %this) local_unnamed_addr {
dec_label_pc_41b247:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 1028, !insn.addr !1023
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1023
  %3 = load i32, i32* %2, align 4, !insn.addr !1023
  %4 = call i32 @function_403e4a(), !insn.addr !1024
  %5 = icmp eq i32 %3, 0, !insn.addr !1025
  %6 = icmp eq i1 %5, false, !insn.addr !1026
  %storemerge.v = select i1 %6, i32 %3, i32 %0
  %storemerge = add i32 %storemerge.v, %4
  %7 = inttoptr i32 %storemerge to i8*, !insn.addr !1027
  ret i8* %7, !insn.addr !1027
}

define void @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_integer_parse_into_buffer<unsigned int>"(i32* %this, i32 %number, i32 %radix, i1 %capital_hexits) local_unnamed_addr {
dec_label_pc_41b41e:
  %storemerge3.lcssa.reg2mem = alloca i32, !insn.addr !1028
  %ebx.05.reg2mem = alloca i32, !insn.addr !1028
  %.reg2mem = alloca i32, !insn.addr !1028
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 1092, !insn.addr !1029
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1029
  %3 = load i32, i32* %2, align 4, !insn.addr !1029
  %4 = icmp eq i32 %3, 0, !insn.addr !1030
  %5 = icmp eq i1 %4, false, !insn.addr !1031
  %6 = add i32 %0, 64
  %spec.select = select i1 %5, i32 %3, i32 %6
  %7 = call i32 @function_403e4a(), !insn.addr !1032
  %8 = add i32 %7, -1, !insn.addr !1033
  %9 = add i32 %8, %spec.select, !insn.addr !1034
  %10 = add i32 %0, 52, !insn.addr !1035
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1035
  store i32 %9, i32* %11, align 4
  %12 = add i32 %0, 40, !insn.addr !1036
  %13 = inttoptr i32 %12 to i32*, !insn.addr !1036
  %14 = load i32, i32* %13, align 4, !insn.addr !1036
  %15 = icmp eq i32 %14, 0, !insn.addr !1037
  %16 = icmp slt i32 %14, 0, !insn.addr !1037
  %17 = icmp eq i1 %16, false, !insn.addr !1038
  %18 = icmp eq i1 %15, false, !insn.addr !1038
  %19 = icmp ne i1 %17, %18, !insn.addr !1038
  %20 = icmp eq i32* %this, null, !insn.addr !1039
  %or.cond4 = icmp eq i1 %20, %19
  store i32 %9, i32* %storemerge3.lcssa.reg2mem, !insn.addr !1038
  br i1 %or.cond4, label %dec_label_pc_41b482, label %dec_label_pc_41b452.lr.ph, !insn.addr !1038

dec_label_pc_41b452.lr.ph:                        ; preds = %dec_label_pc_41b41e
  %21 = ptrtoint i32* %this to i32
  %22 = mul i32 %radix, 32
  %23 = xor i32 %22, 39
  store i32 %14, i32* %.reg2mem
  store i32 %21, i32* %ebx.05.reg2mem
  br label %dec_label_pc_41b452

dec_label_pc_41b452:                              ; preds = %dec_label_pc_41b452.lr.ph, %dec_label_pc_41b452
  %ebx.05.reload = load i32, i32* %ebx.05.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %24 = add i32 %.reload, -1, !insn.addr !1040
  store i32 %24, i32* %13, align 4, !insn.addr !1041
  %25 = udiv i32 %ebx.05.reload, %number, !insn.addr !1042
  %26 = urem i32 %ebx.05.reload, %number
  %27 = add i32 %26, 48, !insn.addr !1043
  %28 = trunc i32 %27 to i8
  %29 = icmp slt i8 %28, 58, !insn.addr !1044
  %30 = add i32 %27, %23
  %.pre = trunc i32 %30 to i8
  %.pre-phi = select i1 %29, i8 %28, i8 %.pre
  %31 = load i32, i32* %11, align 4, !insn.addr !1045
  %32 = inttoptr i32 %31 to i8*, !insn.addr !1046
  store i8 %.pre-phi, i8* %32, align 1, !insn.addr !1046
  %33 = load i32, i32* %11, align 4, !insn.addr !1047
  %34 = add i32 %33, -1, !insn.addr !1047
  store i32 %34, i32* %11, align 4
  %35 = load i32, i32* %13, align 4, !insn.addr !1036
  %36 = icmp eq i32 %35, 0, !insn.addr !1037
  %37 = icmp slt i32 %35, 0, !insn.addr !1037
  %38 = icmp eq i1 %37, false, !insn.addr !1038
  %39 = icmp eq i1 %36, false, !insn.addr !1038
  %40 = icmp ne i1 %38, %39, !insn.addr !1038
  %41 = icmp ult i32 %ebx.05.reload, %number, !insn.addr !1039
  %or.cond = icmp eq i1 %41, %40
  store i32 %35, i32* %.reg2mem, !insn.addr !1038
  store i32 %25, i32* %ebx.05.reg2mem, !insn.addr !1038
  store i32 %34, i32* %storemerge3.lcssa.reg2mem, !insn.addr !1038
  br i1 %or.cond, label %dec_label_pc_41b482, label %dec_label_pc_41b452, !insn.addr !1038

dec_label_pc_41b482:                              ; preds = %dec_label_pc_41b452, %dec_label_pc_41b41e
  %storemerge3.lcssa.reload = load i32, i32* %storemerge3.lcssa.reg2mem
  %42 = sub i32 %9, %storemerge3.lcssa.reload, !insn.addr !1048
  %43 = add i32 %0, 56, !insn.addr !1049
  %44 = inttoptr i32 %43 to i32*, !insn.addr !1049
  store i32 %42, i32* %44, align 4, !insn.addr !1049
  %45 = load i32, i32* %11, align 4, !insn.addr !1050
  %46 = add i32 %45, 1, !insn.addr !1050
  store i32 %46, i32* %11, align 4, !insn.addr !1050
  ret void, !insn.addr !1051
}

define void @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_integer_parse_into_buffer<unsigned __int64>"(i32* %this, i64 %number, i32 %radix, i1 %capital_hexits) local_unnamed_addr {
dec_label_pc_41bbac:
  %storemerge.lcssa.reg2mem = alloca i32, !insn.addr !1052
  %storemerge5.reg2mem = alloca i32, !insn.addr !1052
  %ebx.06.reg2mem = alloca i32, !insn.addr !1052
  %esp.07.reg2mem = alloca i32, !insn.addr !1052
  %edi.18.reg2mem = alloca i32, !insn.addr !1052
  %.reg2mem = alloca i32, !insn.addr !1052
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = ptrtoint i32* %this to i32
  %stack_var_-28 = alloca i32, align 4
  %2 = add i32 %0, 1092, !insn.addr !1053
  %3 = inttoptr i32 %2 to i32*, !insn.addr !1053
  %4 = load i32, i32* %3, align 4, !insn.addr !1053
  %5 = icmp eq i32 %4, 0, !insn.addr !1054
  %6 = icmp eq i1 %5, false, !insn.addr !1055
  %7 = add i32 %0, 64
  %spec.select = select i1 %6, i32 %4, i32 %7
  %8 = call i32 @function_403e4a(), !insn.addr !1056
  %9 = trunc i64 %number to i32, !insn.addr !1057
  %10 = add i32 %8, -1, !insn.addr !1058
  %11 = add i32 %10, %spec.select, !insn.addr !1059
  %12 = add i32 %0, 52, !insn.addr !1060
  %13 = inttoptr i32 %12 to i32*, !insn.addr !1060
  store i32 %11, i32* %13, align 4
  %14 = add i32 %0, 40, !insn.addr !1061
  %15 = inttoptr i32 %14 to i32*, !insn.addr !1061
  %16 = load i32, i32* %15, align 4, !insn.addr !1061
  %17 = icmp eq i32 %16, 0, !insn.addr !1062
  %18 = icmp slt i32 %16, 0, !insn.addr !1062
  %19 = icmp eq i1 %18, false, !insn.addr !1063
  %20 = icmp eq i1 %17, false, !insn.addr !1063
  %21 = icmp ne i1 %19, %20, !insn.addr !1063
  %22 = or i32 %9, %1, !insn.addr !1064
  %23 = icmp eq i32 %22, 0, !insn.addr !1064
  %or.cond4 = icmp eq i1 %23, %21
  store i32 %11, i32* %storemerge.lcssa.reg2mem, !insn.addr !1063
  br i1 %or.cond4, label %dec_label_pc_41bc28, label %dec_label_pc_41bbeb.lr.ph, !insn.addr !1063

dec_label_pc_41bbeb.lr.ph:                        ; preds = %dec_label_pc_41bbac
  %24 = ptrtoint i32* %stack_var_-28 to i32, !insn.addr !1065
  %25 = select i1 %capital_hexits, i32 199, i32 39
  store i32 %16, i32* %.reg2mem
  store i32 %1, i32* %edi.18.reg2mem
  store i32 %24, i32* %esp.07.reg2mem
  store i32 %9, i32* %ebx.06.reg2mem
  store i32 %11, i32* %storemerge5.reg2mem
  br label %dec_label_pc_41bbeb

dec_label_pc_41bbeb:                              ; preds = %dec_label_pc_41bbeb.lr.ph, %dec_label_pc_41bbeb
  %storemerge5.reload = load i32, i32* %storemerge5.reg2mem
  %ebx.06.reload = load i32, i32* %ebx.06.reg2mem
  %esp.07.reload = load i32, i32* %esp.07.reg2mem
  %edi.18.reload = load i32, i32* %edi.18.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %26 = add i32 %esp.07.reload, -4, !insn.addr !1066
  %27 = inttoptr i32 %26 to i32*, !insn.addr !1066
  store i32 %ebx.06.reload, i32* %27, align 4, !insn.addr !1066
  %28 = add i32 %esp.07.reload, -8, !insn.addr !1067
  %29 = inttoptr i32 %28 to i32*, !insn.addr !1067
  store i32 0, i32* %29, align 4, !insn.addr !1067
  %30 = add i32 %esp.07.reload, -12, !insn.addr !1068
  %31 = inttoptr i32 %30 to i32*, !insn.addr !1068
  store i32 %radix, i32* %31, align 4, !insn.addr !1068
  %32 = add i32 %.reload, -1, !insn.addr !1069
  %33 = add i32 %esp.07.reload, -16, !insn.addr !1070
  %34 = inttoptr i32 %33 to i32*, !insn.addr !1070
  store i32 %ebx.06.reload, i32* %34, align 4, !insn.addr !1070
  %35 = add i32 %esp.07.reload, -20, !insn.addr !1071
  %36 = inttoptr i32 %35 to i32*, !insn.addr !1071
  store i32 %edi.18.reload, i32* %36, align 4, !insn.addr !1071
  store i32 %32, i32* %15, align 4, !insn.addr !1072
  %37 = call i32 @function_401500(), !insn.addr !1073
  %38 = add i32 %storemerge5.reload, 48, !insn.addr !1074
  %39 = trunc i32 %38 to i8, !insn.addr !1075
  %40 = icmp slt i8 %39, 58, !insn.addr !1075
  %41 = select i1 %40, i32 0, i32 %25
  %.pn.in = add i32 %41, %38
  %42 = load i32, i32* %13, align 4, !insn.addr !1076
  %43 = trunc i32 %.pn.in to i8, !insn.addr !1077
  %44 = inttoptr i32 %42 to i8*, !insn.addr !1077
  store i8 %43, i8* %44, align 1, !insn.addr !1077
  %45 = load i32, i32* %13, align 4, !insn.addr !1078
  %46 = add i32 %45, -1, !insn.addr !1078
  store i32 %46, i32* %13, align 4
  %47 = load i32, i32* %15, align 4, !insn.addr !1061
  %48 = icmp eq i32 %47, 0, !insn.addr !1062
  %49 = icmp slt i32 %47, 0, !insn.addr !1062
  %50 = icmp eq i1 %49, false, !insn.addr !1063
  %51 = icmp eq i1 %48, false, !insn.addr !1063
  %52 = icmp ne i1 %50, %51, !insn.addr !1063
  %53 = or i32 %37, %.reload, !insn.addr !1064
  %54 = icmp eq i32 %53, 0, !insn.addr !1064
  %or.cond = icmp eq i1 %54, %52
  store i32 %47, i32* %.reg2mem, !insn.addr !1063
  store i32 %37, i32* %edi.18.reg2mem, !insn.addr !1063
  store i32 %33, i32* %esp.07.reg2mem, !insn.addr !1063
  store i32 %.reload, i32* %ebx.06.reg2mem, !insn.addr !1063
  store i32 %46, i32* %storemerge5.reg2mem, !insn.addr !1063
  store i32 %46, i32* %storemerge.lcssa.reg2mem, !insn.addr !1063
  br i1 %or.cond, label %dec_label_pc_41bc28, label %dec_label_pc_41bbeb, !insn.addr !1063

dec_label_pc_41bc28:                              ; preds = %dec_label_pc_41bbeb, %dec_label_pc_41bbac
  %storemerge.lcssa.reload = load i32, i32* %storemerge.lcssa.reg2mem
  %55 = sub i32 %11, %storemerge.lcssa.reload, !insn.addr !1079
  %56 = add i32 %0, 56, !insn.addr !1080
  %57 = inttoptr i32 %56 to i32*, !insn.addr !1080
  store i32 %55, i32* %57, align 4, !insn.addr !1080
  %58 = load i32, i32* %13, align 4, !insn.addr !1081
  %59 = add i32 %58, 1, !insn.addr !1081
  store i32 %59, i32* %13, align 4, !insn.addr !1081
  ret void, !insn.addr !1082
}

define void @"__crt_stdio_output::write_multiple_characters<__crt_stdio_output::stream_output_adapter<char>,char>"(i32* %adapter, i8 %c, i32 %count, i32* %count_written) local_unnamed_addr {
dec_label_pc_41c32c:
  %esi.0.reg2mem = alloca i32, !insn.addr !1083
  %esp.0.reg2mem = alloca i32, !insn.addr !1083
  %stack_var_-12 = alloca i32, align 4
  %0 = icmp slt i32 %count, 1, !insn.addr !1084
  br i1 %0, label %dec_label_pc_41c364, label %dec_label_pc_41c339, !insn.addr !1084

dec_label_pc_41c339:                              ; preds = %dec_label_pc_41c32c
  %1 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !1085
  %2 = sext i8 %c to i32, !insn.addr !1086
  store i32 %1, i32* %esp.0.reg2mem, !insn.addr !1087
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !1087
  br label %dec_label_pc_41c33d, !insn.addr !1087

dec_label_pc_41c33d:                              ; preds = %dec_label_pc_41c35d, %dec_label_pc_41c339
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %3 = add i32 %esp.0.reload, -4, !insn.addr !1086
  %4 = inttoptr i32 %3 to i32*, !insn.addr !1086
  store i32 %2, i32* %4, align 4, !insn.addr !1086
  %5 = call i32 @function_4040b6(), !insn.addr !1088
  %6 = trunc i32 %5 to i8, !insn.addr !1089
  %7 = icmp eq i8 %6, 0, !insn.addr !1089
  br i1 %7, label %dec_label_pc_41c358.thread, label %dec_label_pc_41c358, !insn.addr !1090

dec_label_pc_41c358.thread:                       ; preds = %dec_label_pc_41c33d
  store i32 -1, i32* %count_written, align 4
  br label %dec_label_pc_41c364

dec_label_pc_41c358:                              ; preds = %dec_label_pc_41c33d
  %8 = load i32, i32* %count_written, align 4, !insn.addr !1091
  %9 = add i32 %8, 1, !insn.addr !1091
  store i32 %9, i32* %count_written, align 4
  %10 = icmp eq i32 %9, -1, !insn.addr !1092
  br i1 %10, label %dec_label_pc_41c364, label %dec_label_pc_41c35d, !insn.addr !1093

dec_label_pc_41c35d:                              ; preds = %dec_label_pc_41c358
  %11 = add nuw nsw i32 %esi.0.reload, 1, !insn.addr !1094
  %12 = icmp slt i32 %11, %count, !insn.addr !1095
  store i32 %3, i32* %esp.0.reg2mem, !insn.addr !1095
  store i32 %11, i32* %esi.0.reg2mem, !insn.addr !1095
  br i1 %12, label %dec_label_pc_41c33d, label %dec_label_pc_41c364, !insn.addr !1095

dec_label_pc_41c364:                              ; preds = %dec_label_pc_41c358, %dec_label_pc_41c35d, %dec_label_pc_41c358.thread, %dec_label_pc_41c32c
  ret void, !insn.addr !1096
}

define void @"__crt_stdio_output::common_data<char>::common_data<char>"(i32* %this) local_unnamed_addr {
dec_label_pc_41c66d:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = inttoptr i32 %0 to i32*, !insn.addr !1097
  store i32 0, i32* %1, align 4, !insn.addr !1097
  %2 = add i32 %0, 4, !insn.addr !1098
  %3 = inttoptr i32 %2 to i32*, !insn.addr !1098
  store i32 0, i32* %3, align 4, !insn.addr !1098
  %4 = add i32 %0, 8, !insn.addr !1099
  %5 = inttoptr i32 %4 to i32*, !insn.addr !1099
  store i32 0, i32* %5, align 4, !insn.addr !1099
  %6 = add i32 %0, 12, !insn.addr !1100
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1100
  store i32 0, i32* %7, align 4, !insn.addr !1100
  %8 = add i32 %0, 16, !insn.addr !1101
  %9 = inttoptr i32 %8 to i32*, !insn.addr !1101
  store i32 0, i32* %9, align 4, !insn.addr !1101
  %10 = add i32 %0, 20, !insn.addr !1102
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1102
  store i32 0, i32* %11, align 4, !insn.addr !1102
  %12 = add i32 %0, 24, !insn.addr !1103
  %13 = inttoptr i32 %12 to i32*, !insn.addr !1103
  store i32 0, i32* %13, align 4, !insn.addr !1103
  %14 = add i32 %0, 28, !insn.addr !1104
  %15 = inttoptr i32 %14 to i32*, !insn.addr !1104
  store i32 0, i32* %15, align 4, !insn.addr !1104
  %16 = add i32 %0, 32, !insn.addr !1105
  %17 = inttoptr i32 %16 to i32*, !insn.addr !1105
  store i32 0, i32* %17, align 4, !insn.addr !1105
  %18 = add i32 %0, 36, !insn.addr !1106
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1106
  store i32 0, i32* %19, align 4, !insn.addr !1106
  %20 = add i32 %0, 40, !insn.addr !1107
  %21 = inttoptr i32 %20 to i32*, !insn.addr !1107
  store i32 0, i32* %21, align 4, !insn.addr !1107
  %22 = add i32 %0, 48, !insn.addr !1108
  %23 = inttoptr i32 %22 to i16*, !insn.addr !1108
  store i16 0, i16* %23, align 2, !insn.addr !1108
  %24 = add i32 %0, 56, !insn.addr !1109
  %25 = inttoptr i32 %24 to i32*, !insn.addr !1109
  store i32 0, i32* %25, align 4, !insn.addr !1109
  %26 = add i32 %0, 60, !insn.addr !1110
  %27 = inttoptr i32 %26 to i8*, !insn.addr !1110
  store i8 0, i8* %27, align 1, !insn.addr !1110
  %28 = add i32 %0, 1088, !insn.addr !1111
  %29 = inttoptr i32 %28 to i32*, !insn.addr !1111
  store i32 0, i32* %29, align 4, !insn.addr !1111
  %30 = add i32 %0, 1092, !insn.addr !1112
  %31 = inttoptr i32 %30 to i32*, !insn.addr !1112
  store i32 0, i32* %31, align 4, !insn.addr !1112
  ret void, !insn.addr !1113
}

define void @"__crt_stdio_output::output_adapter_data<char,__crt_stdio_output::stream_output_adapter<char> >::output_adapter_data<char,__crt_stdio_output::stream_output_adapter<char> >"(i32* %this, i32* %output_adapter, i64 %options, i8* %format, i32 %locale, i8* %arglist) local_unnamed_addr {
dec_label_pc_41c71f:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = ptrtoint i8* %arglist to i32
  %4 = ptrtoint i8* %format to i32
  %5 = trunc i64 %options to i32
  %6 = ptrtoint i32* %output_adapter to i32
  %7 = call i32 @function_403ffd(i32 %0, i32 %1), !insn.addr !1114
  %8 = load i32, i32* %this, align 4, !insn.addr !1115
  %9 = add i32 %2, 1096, !insn.addr !1116
  %10 = inttoptr i32 %9 to i32*, !insn.addr !1116
  store i32 %8, i32* %10, align 4, !insn.addr !1116
  %11 = inttoptr i32 %2 to i32*, !insn.addr !1117
  store i32 %6, i32* %11, align 4, !insn.addr !1117
  %12 = add i32 %2, 4, !insn.addr !1118
  %13 = inttoptr i32 %12 to i32*, !insn.addr !1118
  store i32 %5, i32* %13, align 4, !insn.addr !1118
  %14 = add i32 %2, 8, !insn.addr !1119
  %15 = inttoptr i32 %14 to i32*, !insn.addr !1119
  store i32 %locale, i32* %15, align 4, !insn.addr !1119
  %16 = add i32 %2, 16, !insn.addr !1120
  %17 = inttoptr i32 %16 to i32*, !insn.addr !1120
  store i32 %4, i32* %17, align 4, !insn.addr !1120
  %18 = add i32 %2, 20, !insn.addr !1121
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1121
  store i32 %3, i32* %19, align 4, !insn.addr !1121
  ret void, !insn.addr !1122
}

define void @"_LocaleUpdate::_LocaleUpdate"(i32* %this, i32 %locale) local_unnamed_addr {
dec_label_pc_41cb1b:
  %storemerge.reg2mem = alloca i32, !insn.addr !1123
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 12, !insn.addr !1124
  %2 = inttoptr i32 %1 to i8*, !insn.addr !1124
  store i8 0, i8* %2, align 1, !insn.addr !1124
  %3 = add i32 %0, 4, !insn.addr !1125
  %4 = icmp eq i32* %this, null, !insn.addr !1126
  br i1 %4, label %dec_label_pc_41cb3b, label %dec_label_pc_41cb32, !insn.addr !1127

dec_label_pc_41cb32:                              ; preds = %dec_label_pc_41cb1b
  %5 = ptrtoint i32* %this to i32
  %6 = load i32, i32* %this, align 4, !insn.addr !1128
  %7 = inttoptr i32 %3 to i32*, !insn.addr !1129
  store i32 %6, i32* %7, align 4, !insn.addr !1129
  %8 = add i32 %5, 4, !insn.addr !1130
  %9 = inttoptr i32 %8 to i32*, !insn.addr !1130
  %10 = load i32, i32* %9, align 4, !insn.addr !1130
  store i32 %10, i32* %storemerge.reg2mem, !insn.addr !1131
  br label %dec_label_pc_41cb50, !insn.addr !1131

dec_label_pc_41cb3b:                              ; preds = %dec_label_pc_41cb1b
  %11 = load i32, i32* @__acrt_locale_changed_data, align 4, !insn.addr !1132
  %12 = icmp eq i32 %11, 0, !insn.addr !1132
  %13 = icmp eq i1 %12, false, !insn.addr !1133
  br i1 %13, label %dec_label_pc_41cb55, label %dec_label_pc_41cb44, !insn.addr !1133

dec_label_pc_41cb44:                              ; preds = %dec_label_pc_41cb3b
  %14 = inttoptr i32 %3 to i32*, !insn.addr !1134
  store i32 ptrtoint (i32* @__acrt_initial_locale_data to i32), i32* %14, align 4, !insn.addr !1134
  %15 = load %__crt_multibyte_data*, %__crt_multibyte_data** @global_var_47b310, align 4, !insn.addr !1135
  %16 = ptrtoint %__crt_multibyte_data* %15 to i32, !insn.addr !1135
  store i32 %16, i32* %storemerge.reg2mem, !insn.addr !1135
  br label %dec_label_pc_41cb50, !insn.addr !1135

dec_label_pc_41cb50:                              ; preds = %dec_label_pc_41cb44, %dec_label_pc_41cb32
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %17 = add i32 %0, 8, !insn.addr !1136
  %18 = inttoptr i32 %17 to i32*, !insn.addr !1136
  store i32 %storemerge.reload, i32* %18, align 4, !insn.addr !1136
  br label %dec_label_pc_41cb96, !insn.addr !1137

dec_label_pc_41cb55:                              ; preds = %dec_label_pc_41cb3b
  %19 = call i32 @___acrt_getptd(), !insn.addr !1138
  %20 = inttoptr i32 %0 to i32*, !insn.addr !1139
  store i32 %19, i32* %20, align 4, !insn.addr !1139
  %21 = add i32 %0, 8, !insn.addr !1140
  %22 = add i32 %19, 76, !insn.addr !1141
  %23 = inttoptr i32 %22 to i32*, !insn.addr !1141
  %24 = load i32, i32* %23, align 4, !insn.addr !1141
  %25 = inttoptr i32 %3 to i32*, !insn.addr !1142
  store i32 %24, i32* %25, align 4, !insn.addr !1142
  %26 = add i32 %19, 72, !insn.addr !1143
  %27 = inttoptr i32 %26 to i32*, !insn.addr !1143
  %28 = load i32, i32* %27, align 4, !insn.addr !1143
  %29 = inttoptr i32 %21 to i32*, !insn.addr !1144
  store i32 %28, i32* %29, align 4, !insn.addr !1144
  %30 = call i32 @function_40308a(i32 %19, i32 %3), !insn.addr !1145
  %31 = call i32 @function_404377(i32 %28, i32 %21), !insn.addr !1146
  %32 = add i32 %28, 848, !insn.addr !1147
  %33 = inttoptr i32 %32 to i32*, !insn.addr !1147
  %34 = load i32, i32* %33, align 4, !insn.addr !1147
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0, !insn.addr !1148
  %37 = icmp eq i1 %36, false, !insn.addr !1149
  br i1 %37, label %dec_label_pc_41cb96, label %dec_label_pc_41cb89, !insn.addr !1149

dec_label_pc_41cb89:                              ; preds = %dec_label_pc_41cb55
  %38 = or i32 %34, 2, !insn.addr !1150
  store i32 %38, i32* %33, align 4, !insn.addr !1151
  store i8 1, i8* %2, align 1, !insn.addr !1152
  br label %dec_label_pc_41cb96, !insn.addr !1152

dec_label_pc_41cb96:                              ; preds = %dec_label_pc_41cb89, %dec_label_pc_41cb55, %dec_label_pc_41cb50
  ret void, !insn.addr !1153
}

declare void @"__crt_stdio_output::formatting_buffer::~formatting_buffer"(i32*) local_unnamed_addr

declare i32* @"__crt_unique_heap_ptr<char,__crt_internal_free_policy>::operator="(i32*, i32*) local_unnamed_addr

define i32 @"<lambda_0be4ab1c2a6918fda4e39227d83ea893>::operator()"(i32* %this) local_unnamed_addr {
dec_label_pc_41cdd0:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i8 @__decompiler_undefined_function_7()
  %locale_update_-1140 = alloca i32, align 4
  %stack_var_-1124 = alloca i32, align 4
  %processor_-1120 = alloca i32, align 4
  %4 = call i32 @__decompiler_undefined_function_0()
  %5 = call i32 @function_402f7c(i32 %2, i32 %0, i32 %1), !insn.addr !1154
  %6 = add i32 %2, 4, !insn.addr !1155
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1155
  %8 = load i32, i32* %7, align 4, !insn.addr !1155
  %9 = inttoptr i32 %8 to i32*, !insn.addr !1156
  %10 = load i32, i32* %9, align 4, !insn.addr !1156
  %11 = call i32 @function_403d78(i32 %10), !insn.addr !1157
  %12 = ptrtoint i32* %processor_-1120 to i32, !insn.addr !1158
  store i32 %12, i32* %stack_var_-1124, align 4, !insn.addr !1159
  %13 = add i32 %2, 16, !insn.addr !1160
  %14 = inttoptr i32 %13 to i32*, !insn.addr !1160
  %15 = load i32, i32* %14, align 4, !insn.addr !1160
  %16 = inttoptr i32 %15 to i32*, !insn.addr !1161
  %17 = load i32, i32* %16, align 4, !insn.addr !1161
  %18 = ptrtoint i32* %locale_update_-1140 to i32, !insn.addr !1162
  %19 = add i32 %2, 12, !insn.addr !1163
  %20 = inttoptr i32 %19 to i32*, !insn.addr !1163
  %21 = load i32, i32* %20, align 4, !insn.addr !1163
  %22 = inttoptr i32 %21 to i32*, !insn.addr !1164
  %23 = load i32, i32* %22, align 4, !insn.addr !1164
  %24 = add i32 %2, 8, !insn.addr !1165
  %25 = inttoptr i32 %24 to i32*, !insn.addr !1165
  %26 = load i32, i32* %25, align 4, !insn.addr !1165
  %27 = add i32 %26, 4, !insn.addr !1166
  %28 = inttoptr i32 %27 to i32*, !insn.addr !1166
  %29 = load i32, i32* %28, align 4, !insn.addr !1166
  %30 = inttoptr i32 %26 to i32*, !insn.addr !1167
  %31 = load i32, i32* %30, align 4, !insn.addr !1167
  %32 = ptrtoint i32* %stack_var_-1124 to i32, !insn.addr !1168
  %33 = call i32 @function_402d88(i32 %32, i32 %31, i32 %29, i32 %23, i32 %18, i32 %17, i32 ptrtoint (i32* @80 to i32)), !insn.addr !1169
  %34 = call i32 @function_4023c9(i32 0), !insn.addr !1170
  %35 = call i32 @function_403210(), !insn.addr !1171
  %36 = icmp eq i8 %3, 0, !insn.addr !1172
  br i1 %36, label %dec_label_pc_41ce71, label %dec_label_pc_41ce64, !insn.addr !1173

dec_label_pc_41ce64:                              ; preds = %dec_label_pc_41cdd0
  %37 = add i32 %4, 848, !insn.addr !1174
  %38 = inttoptr i32 %37 to i32*, !insn.addr !1174
  %39 = load i32, i32* %38, align 4, !insn.addr !1174
  %40 = and i32 %39, -3, !insn.addr !1174
  store i32 %40, i32* %38, align 4, !insn.addr !1174
  br label %dec_label_pc_41ce71, !insn.addr !1174

dec_label_pc_41ce71:                              ; preds = %dec_label_pc_41ce64, %dec_label_pc_41cdd0
  %sext = mul i32 %5, 16777216
  %41 = sdiv i32 %sext, 16777216, !insn.addr !1175
  %42 = call i32 @function_403e6d(i32 %41, i32 %2), !insn.addr !1176
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !1177
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !1178
}

define void @"__crt_stdio_output::crop_zeroes"(i8* %buffer, i32 %locale) local_unnamed_addr {
dec_label_pc_41d76e:
  %.reg2mem24 = alloca i32, !insn.addr !1179
  %.reg2mem = alloca i32, !insn.addr !1179
  %ecx.3.reg2mem = alloca i32, !insn.addr !1179
  %ecx.2.in.reg2mem = alloca i32, !insn.addr !1179
  %ecx.1.reg2mem = alloca i32, !insn.addr !1179
  %.pre-phi.reg2mem = alloca i8, !insn.addr !1179
  %edx.0.reg2mem = alloca i8, !insn.addr !1179
  %ecx.0.reg2mem = alloca i32, !insn.addr !1179
  %0 = load i8, i8* %buffer, align 1, !insn.addr !1180
  %1 = icmp eq i8 %0, 0, !insn.addr !1181
  br i1 %1, label %dec_label_pc_41d7cb, label %dec_label_pc_41d78e.preheader, !insn.addr !1182

dec_label_pc_41d78e.preheader:                    ; preds = %dec_label_pc_41d76e
  %2 = inttoptr i32 %locale to i32*, !insn.addr !1183
  %3 = load i32, i32* %2, align 4, !insn.addr !1183
  %4 = add i32 %3, 136, !insn.addr !1184
  %5 = inttoptr i32 %4 to i32*, !insn.addr !1184
  %6 = load i32, i32* %5, align 4, !insn.addr !1184
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1185
  %8 = load i32, i32* %7, align 4, !insn.addr !1185
  %9 = inttoptr i32 %8 to i8*, !insn.addr !1186
  %10 = load i8, i8* %9, align 1, !insn.addr !1186
  %11 = ptrtoint i8* %buffer to i32
  store i32 %11, i32* %ecx.0.reg2mem
  store i8 %0, i8* %edx.0.reg2mem
  br label %dec_label_pc_41d78e

dec_label_pc_41d78e:                              ; preds = %dec_label_pc_41d78e.preheader, %dec_label_pc_41d794
  %edx.0.reload = load i8, i8* %edx.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %12 = icmp eq i8 %10, %edx.0.reload, !insn.addr !1187
  store i8 %edx.0.reload, i8* %.pre-phi.reg2mem, !insn.addr !1188
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !1188
  br i1 %12, label %dec_label_pc_41d79d, label %dec_label_pc_41d794, !insn.addr !1188

dec_label_pc_41d794:                              ; preds = %dec_label_pc_41d78e
  %13 = add i32 %ecx.0.reload, 1, !insn.addr !1189
  %14 = inttoptr i32 %13 to i8*, !insn.addr !1190
  %15 = load i8, i8* %14, align 1, !insn.addr !1190
  %16 = icmp eq i8 %15, 0, !insn.addr !1191
  %17 = icmp eq i1 %16, false, !insn.addr !1192
  store i32 %13, i32* %ecx.0.reg2mem, !insn.addr !1192
  store i8 %15, i8* %edx.0.reg2mem, !insn.addr !1192
  store i8 %15, i8* %.pre-phi.reg2mem, !insn.addr !1192
  store i32 %13, i32* %ecx.1.reg2mem, !insn.addr !1192
  br i1 %17, label %dec_label_pc_41d78e, label %dec_label_pc_41d79d, !insn.addr !1192

dec_label_pc_41d79d:                              ; preds = %dec_label_pc_41d794, %dec_label_pc_41d78e
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %.pre-phi.reload = load i8, i8* %.pre-phi.reg2mem
  %18 = icmp eq i8 %.pre-phi.reload, 0, !insn.addr !1193
  store i32 %ecx.1.reload, i32* %ecx.2.in.reg2mem, !insn.addr !1194
  br i1 %18, label %dec_label_pc_41d7cb, label %dec_label_pc_41d7ad, !insn.addr !1194

dec_label_pc_41d7ad:                              ; preds = %dec_label_pc_41d79d, %dec_label_pc_41d7ad
  %ecx.2.in.reload = load i32, i32* %ecx.2.in.reg2mem
  %ecx.2 = add i32 %ecx.2.in.reload, 1
  %19 = inttoptr i32 %ecx.2 to i8*, !insn.addr !1195
  %20 = load i8, i8* %19, align 1, !insn.addr !1195
  store i32 %ecx.2, i32* %ecx.2.in.reg2mem
  switch i8 %20, label %dec_label_pc_41d7ad [
    i8 101, label %dec_label_pc_41d7b5.preheader
    i8 69, label %dec_label_pc_41d7b5.preheader
    i8 0, label %dec_label_pc_41d7b5.preheader
  ]

dec_label_pc_41d7b5.preheader:                    ; preds = %dec_label_pc_41d7ad, %dec_label_pc_41d7ad, %dec_label_pc_41d7ad
  store i32 %ecx.2, i32* %ecx.3.reg2mem
  br label %dec_label_pc_41d7b5

dec_label_pc_41d7b5:                              ; preds = %dec_label_pc_41d7b5.preheader, %dec_label_pc_41d7b5
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %21 = add i32 %ecx.3.reload, -1, !insn.addr !1196
  %22 = inttoptr i32 %21 to i8*, !insn.addr !1197
  %23 = load i8, i8* %22, align 1, !insn.addr !1197
  %24 = icmp eq i8 %23, 48, !insn.addr !1198
  store i32 %21, i32* %ecx.3.reg2mem, !insn.addr !1199
  br i1 %24, label %dec_label_pc_41d7b5, label %dec_label_pc_41d7bc, !insn.addr !1199

dec_label_pc_41d7bc:                              ; preds = %dec_label_pc_41d7b5
  %25 = icmp eq i8 %23, %10, !insn.addr !1200
  %26 = icmp eq i1 %25, false, !insn.addr !1201
  %27 = add i32 %ecx.3.reload, -2
  %spec.select = select i1 %26, i32 %21, i32 %27
  %28 = add i32 %spec.select, 1, !insn.addr !1202
  %29 = inttoptr i32 %28 to i8*, !insn.addr !1203
  store i8 %20, i8* %29, align 1, !insn.addr !1203
  %30 = icmp eq i8 %20, 0, !insn.addr !1204
  %31 = icmp eq i1 %30, false, !insn.addr !1205
  br i1 %31, label %dec_label_pc_41d7c1.dec_label_pc_41d7c1_crit_edge.lr.ph, label %dec_label_pc_41d7cb, !insn.addr !1205

dec_label_pc_41d7c1.dec_label_pc_41d7c1_crit_edge.lr.ph: ; preds = %dec_label_pc_41d7bc
  %32 = add i32 %ecx.2.in.reload, 2, !insn.addr !1206
  store i32 %32, i32* %.reg2mem
  store i32 %28, i32* %.reg2mem24
  br label %dec_label_pc_41d7c1.dec_label_pc_41d7c1_crit_edge

dec_label_pc_41d7c1.dec_label_pc_41d7c1_crit_edge: ; preds = %dec_label_pc_41d7c1.dec_label_pc_41d7c1_crit_edge.lr.ph, %dec_label_pc_41d7c1.dec_label_pc_41d7c1_crit_edge
  %.reload25 = load i32, i32* %.reg2mem24
  %.reload = load i32, i32* %.reg2mem
  %.phi.trans.insert = inttoptr i32 %.reload to i8*
  %.pre = load i8, i8* %.phi.trans.insert, align 1
  %33 = add i32 %.reload25, 1, !insn.addr !1202
  %34 = add i32 %.reload, 1, !insn.addr !1206
  %35 = inttoptr i32 %33 to i8*, !insn.addr !1203
  store i8 %.pre, i8* %35, align 1, !insn.addr !1203
  %36 = icmp eq i8 %.pre, 0, !insn.addr !1204
  %37 = icmp eq i1 %36, false, !insn.addr !1205
  store i32 %34, i32* %.reg2mem, !insn.addr !1205
  store i32 %33, i32* %.reg2mem24, !insn.addr !1205
  br i1 %37, label %dec_label_pc_41d7c1.dec_label_pc_41d7c1_crit_edge, label %dec_label_pc_41d7cb, !insn.addr !1205

dec_label_pc_41d7cb:                              ; preds = %dec_label_pc_41d7bc, %dec_label_pc_41d7c1.dec_label_pc_41d7c1_crit_edge, %dec_label_pc_41d76e, %dec_label_pc_41d79d
  ret void, !insn.addr !1207
}

define i32 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::find_next_state"(i32* %this, i8 %c, i32 %previous_state) local_unnamed_addr {
dec_label_pc_41d886:
  %storemerge.reg2mem = alloca i32, !insn.addr !1208
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = ptrtoint i32* %this to i32
  %2 = trunc i32 %1 to i8
  %3 = add i8 %2, -32, !insn.addr !1209
  %4 = icmp ult i8 %3, 91
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !1210
  br i1 %4, label %dec_label_pc_41d89d, label %dec_label_pc_41d8b1, !insn.addr !1210

dec_label_pc_41d89d:                              ; preds = %dec_label_pc_41d886
  %5 = call i32 @__asm_lfence(i8* getelementptr inbounds ([91 x i8], [91 x i8]* @standard_lookup_table, i32 0, i32 0), i32 %0), !insn.addr !1211
  %6 = add i32 %5, ptrtoint (%vtable_471258_type* @"std::bad_exception::`vftable'" to i32), !insn.addr !1212
  %7 = inttoptr i32 %6 to i8*, !insn.addr !1212
  %8 = load i8, i8* %7, align 1, !insn.addr !1212
  %9 = mul i8 %8, 8
  %10 = and i8 %9, 120
  %phitmp = zext i8 %10 to i32
  store i32 %phitmp, i32* %storemerge.reg2mem, !insn.addr !1213
  br label %dec_label_pc_41d8b1, !insn.addr !1213

dec_label_pc_41d8b1:                              ; preds = %dec_label_pc_41d886, %dec_label_pc_41d89d
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %11 = sext i8 %c to i32, !insn.addr !1214
  %12 = add i32 %11, ptrtoint ([91 x i8]* @standard_lookup_table to i32), !insn.addr !1215
  %13 = add i32 %12, %storemerge.reload, !insn.addr !1215
  %14 = inttoptr i32 %13 to i8*, !insn.addr !1215
  %15 = load i8, i8* %14, align 1, !insn.addr !1215
  %16 = udiv i8 %15, 16
  %17 = zext i8 %16 to i32, !insn.addr !1216
  ret i32 %17, !insn.addr !1217
}

define void @"__crt_stdio_output::force_decimal_point"(i8* %buffer, i32 %locale) local_unnamed_addr {
dec_label_pc_41dba2:
  %ebx.3.reg2mem = alloca i8, !insn.addr !1218
  %edx.3.in.reg2mem = alloca i32, !insn.addr !1218
  %ebx.2.reg2mem = alloca i8, !insn.addr !1218
  %edx.2.reg2mem = alloca i32, !insn.addr !1218
  %.pre-phi.reg2mem = alloca i8*, !insn.addr !1218
  %ebx.1.reg2mem = alloca i8, !insn.addr !1218
  %edx.1.reg2mem = alloca i32, !insn.addr !1218
  %.pre-phi8.reg2mem = alloca i8*, !insn.addr !1218
  %edx.0.reg2mem = alloca i32, !insn.addr !1218
  %0 = ptrtoint i8* %buffer to i32
  %1 = inttoptr i32 %locale to i32*, !insn.addr !1219
  %2 = load i32, i32* %1, align 4, !insn.addr !1219
  %3 = load i8, i8* %buffer, align 1, !insn.addr !1220
  %4 = zext i8 %3 to i32, !insn.addr !1220
  %5 = add i32 %2, 148, !insn.addr !1221
  %6 = inttoptr i32 %5 to i32*, !insn.addr !1221
  %7 = load i32, i32* %6, align 4, !insn.addr !1221
  %8 = add i32 %7, %4
  %9 = inttoptr i32 %8 to i8*
  %10 = load i8, i8* %9, align 1, !insn.addr !1222
  %11 = icmp eq i8 %10, 101, !insn.addr !1222
  store i8* %9, i8** %.pre-phi8.reg2mem, !insn.addr !1223
  store i32 %0, i32* %edx.1.reg2mem, !insn.addr !1223
  store i8 %3, i8* %ebx.1.reg2mem, !insn.addr !1223
  br i1 %11, label %dec_label_pc_41dbd2, label %dec_label_pc_41dbc2, !insn.addr !1223

dec_label_pc_41dbc2:                              ; preds = %dec_label_pc_41dba2
  %12 = inttoptr i32 %2 to i32*, !insn.addr !1224
  %13 = load i32, i32* %12, align 4, !insn.addr !1224
  store i32 %0, i32* %edx.0.reg2mem, !insn.addr !1224
  br label %dec_label_pc_41dbc5, !insn.addr !1224

dec_label_pc_41dbc5:                              ; preds = %dec_label_pc_41dbc5, %dec_label_pc_41dbc2
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %14 = add i32 %edx.0.reload, 1, !insn.addr !1225
  %15 = inttoptr i32 %14 to i8*, !insn.addr !1226
  %16 = load i8, i8* %15, align 1, !insn.addr !1226
  %17 = zext i8 %16 to i32, !insn.addr !1226
  %18 = mul i32 %17, 2, !insn.addr !1227
  %19 = add i32 %18, %13, !insn.addr !1227
  %20 = inttoptr i32 %19 to i8*, !insn.addr !1227
  %21 = load i8, i8* %20, align 1, !insn.addr !1227
  %22 = and i8 %21, 4, !insn.addr !1227
  %23 = icmp eq i8 %22, 0, !insn.addr !1227
  %24 = icmp eq i1 %23, false, !insn.addr !1228
  store i32 %14, i32* %edx.0.reg2mem, !insn.addr !1228
  br i1 %24, label %dec_label_pc_41dbc5, label %dec_label_pc_41dbd2.loopexit, !insn.addr !1228

dec_label_pc_41dbd2.loopexit:                     ; preds = %dec_label_pc_41dbc5
  %.pre5 = add i32 %7, %17, !insn.addr !1229
  %.pre7 = inttoptr i32 %.pre5 to i8*, !insn.addr !1229
  store i8* %.pre7, i8** %.pre-phi8.reg2mem
  store i32 %14, i32* %edx.1.reg2mem
  store i8 %16, i8* %ebx.1.reg2mem
  br label %dec_label_pc_41dbd2

dec_label_pc_41dbd2:                              ; preds = %dec_label_pc_41dbd2.loopexit, %dec_label_pc_41dba2
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %.pre-phi8.reload = load i8*, i8** %.pre-phi8.reg2mem
  %25 = load i8, i8* %.pre-phi8.reload, align 1, !insn.addr !1229
  %26 = icmp eq i8 %25, 120, !insn.addr !1229
  %27 = icmp eq i1 %26, false, !insn.addr !1230
  br i1 %27, label %dec_label_pc_41dbd2.dec_label_pc_41dbe0_crit_edge, label %dec_label_pc_41dbdb, !insn.addr !1230

dec_label_pc_41dbd2.dec_label_pc_41dbe0_crit_edge: ; preds = %dec_label_pc_41dbd2
  %ebx.1.reload = load i8, i8* %ebx.1.reg2mem
  %.pre = inttoptr i32 %edx.1.reload to i8*, !insn.addr !1231
  store i8* %.pre, i8** %.pre-phi.reg2mem
  store i32 %edx.1.reload, i32* %edx.2.reg2mem
  store i8 %ebx.1.reload, i8* %ebx.2.reg2mem
  br label %dec_label_pc_41dbe0

dec_label_pc_41dbdb:                              ; preds = %dec_label_pc_41dbd2
  %28 = add i32 %edx.1.reload, 2, !insn.addr !1232
  %29 = inttoptr i32 %28 to i8*
  %30 = load i8, i8* %29, align 1, !insn.addr !1233
  store i8* %29, i8** %.pre-phi.reg2mem, !insn.addr !1233
  store i32 %28, i32* %edx.2.reg2mem, !insn.addr !1233
  store i8 %30, i8* %ebx.2.reg2mem, !insn.addr !1233
  br label %dec_label_pc_41dbe0, !insn.addr !1233

dec_label_pc_41dbe0:                              ; preds = %dec_label_pc_41dbd2.dec_label_pc_41dbe0_crit_edge, %dec_label_pc_41dbdb
  %ebx.2.reload = load i8, i8* %ebx.2.reg2mem
  %edx.2.reload = load i32, i32* %edx.2.reg2mem
  %.pre-phi.reload = load i8*, i8** %.pre-phi.reg2mem
  %31 = add i32 %2, 136, !insn.addr !1234
  %32 = inttoptr i32 %31 to i32*, !insn.addr !1234
  %33 = load i32, i32* %32, align 4, !insn.addr !1234
  %34 = inttoptr i32 %33 to i32*, !insn.addr !1235
  %35 = load i32, i32* %34, align 4, !insn.addr !1235
  %36 = inttoptr i32 %35 to i8*, !insn.addr !1236
  %37 = load i8, i8* %36, align 1, !insn.addr !1236
  store i8 %37, i8* %.pre-phi.reload, align 1, !insn.addr !1231
  store i32 %edx.2.reload, i32* %edx.3.in.reg2mem, !insn.addr !1237
  store i8 %ebx.2.reload, i8* %ebx.3.reg2mem, !insn.addr !1237
  br label %dec_label_pc_41dbed, !insn.addr !1237

dec_label_pc_41dbed:                              ; preds = %dec_label_pc_41dbed, %dec_label_pc_41dbe0
  %ebx.3.reload = load i8, i8* %ebx.3.reg2mem
  %edx.3.in.reload = load i32, i32* %edx.3.in.reg2mem
  %edx.3 = add i32 %edx.3.in.reload, 1
  %38 = inttoptr i32 %edx.3 to i8*, !insn.addr !1238
  %39 = load i8, i8* %38, align 1, !insn.addr !1238
  store i8 %ebx.3.reload, i8* %38, align 1, !insn.addr !1239
  %40 = icmp eq i8 %ebx.3.reload, 0, !insn.addr !1240
  %41 = icmp eq i1 %40, false, !insn.addr !1241
  store i32 %edx.3, i32* %edx.3.in.reg2mem, !insn.addr !1241
  store i8 %39, i8* %ebx.3.reg2mem, !insn.addr !1241
  br i1 %41, label %dec_label_pc_41dbed, label %dec_label_pc_41dbfa, !insn.addr !1241

dec_label_pc_41dbfa:                              ; preds = %dec_label_pc_41dbed
  ret void, !insn.addr !1242
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::parse_int_from_format_string"(i32* %this, i32* %result) local_unnamed_addr {
dec_label_pc_41e4ae:
  %storemerge.reg2mem = alloca i32, !insn.addr !1243
  %eax.0.reg2mem = alloca i32, !insn.addr !1243
  %esi.0.reg2mem = alloca i32, !insn.addr !1243
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i8, align 1
  %1 = trunc i32 %0 to i8, !insn.addr !1244
  store i8 %1, i8* %stack_var_-8, align 1, !insn.addr !1244
  %2 = add i32 %0, 12, !insn.addr !1245
  %3 = inttoptr i32 %2 to i32*, !insn.addr !1245
  %4 = load i32, i32* %3, align 4, !insn.addr !1245
  %5 = icmp eq i32 %4, 0, !insn.addr !1246
  %6 = icmp eq i1 %5, false, !insn.addr !1247
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !1247
  br i1 %6, label %dec_label_pc_41e4ca, label %dec_label_pc_41e4c0, !insn.addr !1247

dec_label_pc_41e4c0:                              ; preds = %dec_label_pc_41e4ae
  %7 = call i32* @_errno(), !insn.addr !1248
  %8 = ptrtoint i32* %7 to i32, !insn.addr !1248
  store i32 %8, i32* %3, align 4, !insn.addr !1249
  store i32 %8, i32* %esi.0.reg2mem, !insn.addr !1249
  br label %dec_label_pc_41e4ca, !insn.addr !1249

dec_label_pc_41e4ca:                              ; preds = %dec_label_pc_41e4c0, %dec_label_pc_41e4ae
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %9 = inttoptr i32 %esi.0.reload to i32*, !insn.addr !1250
  %10 = load i32, i32* %9, align 4, !insn.addr !1250
  store i32 0, i32* %9, align 4, !insn.addr !1251
  %11 = add i32 %0, 16, !insn.addr !1252
  %12 = inttoptr i32 %11 to i32*, !insn.addr !1252
  %13 = load i32, i32* %12, align 4, !insn.addr !1252
  store i8 0, i8* %stack_var_-8, align 1, !insn.addr !1253
  %14 = add i32 %13, -1, !insn.addr !1254
  %15 = bitcast i8* %stack_var_-8 to i8**
  %16 = inttoptr i32 %14 to i8*, !insn.addr !1255
  %17 = call i32 @strtol(i8* %16, i8** nonnull %15, i32 10), !insn.addr !1256
  store i32 %17, i32* %this, align 4, !insn.addr !1257
  %18 = load i32, i32* %3, align 4, !insn.addr !1258
  %19 = icmp eq i32 %18, 0, !insn.addr !1259
  %20 = icmp eq i1 %19, false, !insn.addr !1260
  store i32 %18, i32* %eax.0.reg2mem, !insn.addr !1260
  br i1 %20, label %dec_label_pc_41e4fa, label %dec_label_pc_41e4f2, !insn.addr !1260

dec_label_pc_41e4f2:                              ; preds = %dec_label_pc_41e4ca
  %21 = call i32* @_errno(), !insn.addr !1261
  %22 = ptrtoint i32* %21 to i32, !insn.addr !1261
  store i32 %22, i32* %3, align 4, !insn.addr !1262
  store i32 %22, i32* %eax.0.reg2mem, !insn.addr !1262
  br label %dec_label_pc_41e4fa, !insn.addr !1262

dec_label_pc_41e4fa:                              ; preds = %dec_label_pc_41e4f2, %dec_label_pc_41e4ca
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %23 = inttoptr i32 %eax.0.reload to i32*, !insn.addr !1263
  %24 = load i32, i32* %23, align 4, !insn.addr !1263
  %25 = icmp eq i32 %24, 34, !insn.addr !1263
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !1264
  br i1 %25, label %dec_label_pc_41e510, label %dec_label_pc_41e4ff, !insn.addr !1264

dec_label_pc_41e4ff:                              ; preds = %dec_label_pc_41e4fa
  %26 = load i8, i8* %stack_var_-8, align 1, !insn.addr !1265
  %27 = sext i8 %26 to i32, !insn.addr !1265
  %28 = load i32, i32* %12, align 4, !insn.addr !1266
  %29 = icmp ugt i32 %28, %27, !insn.addr !1266
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !1267
  br i1 %29, label %dec_label_pc_41e510, label %dec_label_pc_41e507, !insn.addr !1267

dec_label_pc_41e507:                              ; preds = %dec_label_pc_41e4ff
  store i32 %27, i32* %12, align 4, !insn.addr !1268
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !1269
  br label %dec_label_pc_41e510, !insn.addr !1269

dec_label_pc_41e510:                              ; preds = %dec_label_pc_41e4fa, %dec_label_pc_41e4ff, %dec_label_pc_41e507
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %30 = load i32, i32* %9, align 4, !insn.addr !1270
  %31 = icmp eq i32 %30, 0, !insn.addr !1270
  %32 = icmp eq i1 %31, false, !insn.addr !1271
  %33 = icmp eq i32 %10, 0, !insn.addr !1272
  %or.cond = or i1 %33, %32
  br i1 %or.cond, label %dec_label_pc_41e51b, label %dec_label_pc_41e519, !insn.addr !1271

dec_label_pc_41e519:                              ; preds = %dec_label_pc_41e510
  store i32 %10, i32* %9, align 4, !insn.addr !1273
  br label %dec_label_pc_41e51b, !insn.addr !1273

dec_label_pc_41e51b:                              ; preds = %dec_label_pc_41e519, %dec_label_pc_41e510
  %34 = icmp ne i32 %storemerge.reload, 0, !insn.addr !1274
  ret i1 %34, !insn.addr !1274
}

define i32 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::process"(i32* %this) local_unnamed_addr {
dec_label_pc_41ed4d:
  %.pre-phi12.reg2mem = alloca i32*, !insn.addr !1275
  %esp.0.lcssa.reg2mem = alloca i32, !insn.addr !1275
  %eax.0.reg2mem = alloca i32, !insn.addr !1275
  %esp.03.reg2mem = alloca i32, !insn.addr !1275
  %esp.15.reg2mem = alloca i32, !insn.addr !1275
  %storemerge.reg2mem = alloca i32, !insn.addr !1275
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %3 = call i32 @function_402bee(i32 %0, i32 %1), !insn.addr !1276
  %4 = trunc i32 %3 to i8, !insn.addr !1277
  %5 = icmp eq i8 %4, 0, !insn.addr !1277
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !1278
  br i1 %5, label %dec_label_pc_41ed80, label %dec_label_pc_41ed62, !insn.addr !1278

dec_label_pc_41ed62:                              ; preds = %dec_label_pc_41ed4d
  %6 = add i32 %2, 16, !insn.addr !1279
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1279
  %8 = load i32, i32* %7, align 4, !insn.addr !1279
  %9 = icmp eq i32 %8, 0, !insn.addr !1279
  %10 = icmp eq i1 %9, false, !insn.addr !1280
  br i1 %10, label %dec_label_pc_41ee26.preheader, label %dec_label_pc_41ed6d, !insn.addr !1280

dec_label_pc_41ee26.preheader:                    ; preds = %dec_label_pc_41ed62
  %11 = add i32 %2, 1104, !insn.addr !1281
  %12 = inttoptr i32 %11 to i32*, !insn.addr !1281
  %13 = load i32, i32* %12, align 4, !insn.addr !1281
  %14 = add i32 %13, 1, !insn.addr !1281
  store i32 %14, i32* %12, align 4, !insn.addr !1281
  %15 = icmp eq i32 %14, 2, !insn.addr !1282
  %16 = icmp eq i1 %15, false, !insn.addr !1283
  br i1 %16, label %dec_label_pc_41ed83.lr.ph, label %dec_label_pc_41ee26.preheader.dec_label_pc_41ee39_crit_edge, !insn.addr !1283

dec_label_pc_41ee26.preheader.dec_label_pc_41ee39_crit_edge: ; preds = %dec_label_pc_41ee26.preheader
  %.pre = add i32 %2, 24, !insn.addr !1284
  %.pre11 = inttoptr i32 %.pre to i32*, !insn.addr !1284
  store i32* %.pre11, i32** %.pre-phi12.reg2mem
  br label %dec_label_pc_41ee39

dec_label_pc_41ed83.lr.ph:                        ; preds = %dec_label_pc_41ee26.preheader
  %17 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !1285
  %18 = add i32 %2, 56, !insn.addr !1286
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1286
  %20 = add i32 %2, 28, !insn.addr !1287
  %21 = inttoptr i32 %20 to i32*, !insn.addr !1287
  %22 = add i32 %2, 49, !insn.addr !1288
  %23 = inttoptr i32 %22 to i8*, !insn.addr !1288
  %24 = add i32 %2, 24
  %25 = inttoptr i32 %24 to i32*
  %26 = add i32 %2, 40
  %27 = inttoptr i32 %26 to i32*
  %28 = add i32 %2, 36
  %29 = inttoptr i32 %28 to i32*
  %30 = add i32 %2, 48
  %31 = inttoptr i32 %30 to i8*
  %32 = add i32 %2, 32
  %33 = inttoptr i32 %32 to i32*
  %34 = add i32 %2, 44
  %35 = inttoptr i32 %34 to i32*
  %36 = add i32 %2, 60
  %37 = inttoptr i32 %36 to i8*
  store i32 %17, i32* %esp.15.reg2mem
  br label %dec_label_pc_41ed83

dec_label_pc_41ed6d:                              ; preds = %dec_label_pc_41ed9a, %dec_label_pc_41ed62
  %38 = call i32* @_errno(), !insn.addr !1289
  store i32 22, i32* %38, align 4, !insn.addr !1290
  call void @_invalid_parameter_noinfo(), !insn.addr !1291
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !1291
  br label %dec_label_pc_41ed80, !insn.addr !1291

dec_label_pc_41ed80:                              ; preds = %dec_label_pc_41edb6, %dec_label_pc_41ee0b, %dec_label_pc_41ed4d, %dec_label_pc_41ed6d, %dec_label_pc_41ee39
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !1292

dec_label_pc_41ed83:                              ; preds = %dec_label_pc_41ed83.lr.ph, %dec_label_pc_41ee26.loopexit
  %esp.15.reload = load i32, i32* %esp.15.reg2mem
  store i32 0, i32* %19, align 4, !insn.addr !1286
  store i32 0, i32* %21, align 4, !insn.addr !1287
  %39 = load i32, i32* %7, align 4, !insn.addr !1293
  %40 = inttoptr i32 %39 to i8*, !insn.addr !1294
  %41 = load i8, i8* %40, align 1, !insn.addr !1294
  store i8 %41, i8* %23, align 1, !insn.addr !1288
  %42 = icmp eq i8 %41, 0, !insn.addr !1295
  %43 = icmp eq i1 %42, false, !insn.addr !1296
  %44 = load i32, i32* %7, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %7, align 4
  store i32 %esp.15.reload, i32* %esp.03.reg2mem, !insn.addr !1296
  store i32 %esp.15.reload, i32* %esp.0.lcssa.reg2mem, !insn.addr !1296
  br i1 %43, label %dec_label_pc_41ed8e, label %dec_label_pc_41ee26.loopexit, !insn.addr !1296

dec_label_pc_41ed8e:                              ; preds = %dec_label_pc_41ed83, %dec_label_pc_41ee13.backedge
  %esp.03.reload = load i32, i32* %esp.03.reg2mem
  %46 = load i32, i32* %25, align 4, !insn.addr !1297
  %47 = icmp slt i32 %46, 0, !insn.addr !1298
  store i32 %esp.03.reload, i32* %esp.0.lcssa.reg2mem, !insn.addr !1298
  br i1 %47, label %dec_label_pc_41ee26.loopexit, label %dec_label_pc_41ed9a, !insn.addr !1298

dec_label_pc_41ed9a:                              ; preds = %dec_label_pc_41ed8e
  %48 = load i32, i32* %21, align 4, !insn.addr !1299
  %49 = add i32 %esp.03.reload, -4, !insn.addr !1299
  %50 = inttoptr i32 %49 to i32*, !insn.addr !1299
  store i32 %48, i32* %50, align 4, !insn.addr !1299
  %51 = load i8, i8* %23, align 1, !insn.addr !1300
  %52 = zext i8 %51 to i32, !insn.addr !1300
  %53 = add i32 %esp.03.reload, -8, !insn.addr !1301
  %54 = inttoptr i32 %53 to i32*, !insn.addr !1301
  store i32 %52, i32* %54, align 4, !insn.addr !1301
  %55 = call i32 @function_401942(), !insn.addr !1302
  store i32 %55, i32* %21, align 4, !insn.addr !1303
  %56 = icmp eq i32 %55, 8, !insn.addr !1304
  br i1 %56, label %dec_label_pc_41ed6d, label %dec_label_pc_41edb6, !insn.addr !1305

dec_label_pc_41edb6:                              ; preds = %dec_label_pc_41ed9a
  store i32 %55, i32* @0, align 4, !insn.addr !1306
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !1306
  switch i32 %55, label %dec_label_pc_41ed80 [
    i32 0, label %dec_label_pc_41edbd
    i32 1, label %dec_label_pc_41edc6
    i32 2, label %dec_label_pc_41eddb
    i32 3, label %dec_label_pc_41ede4
    i32 4, label %dec_label_pc_41eded
    i32 5, label %dec_label_pc_41edf2
    i32 6, label %dec_label_pc_41edfb
    i32 7, label %dec_label_pc_41ee04
  ], !insn.addr !1306

dec_label_pc_41edbd:                              ; preds = %dec_label_pc_41edb6
  %57 = call i32 @function_403be3(), !insn.addr !1307
  store i32 %57, i32* %eax.0.reg2mem, !insn.addr !1308
  br label %dec_label_pc_41ee0b, !insn.addr !1308

dec_label_pc_41edc6:                              ; preds = %dec_label_pc_41edb6
  store i32 -1, i32* %27, align 4, !insn.addr !1309
  store i32 0, i32* %29, align 4, !insn.addr !1310
  store i8 0, i8* %31, align 1, !insn.addr !1311
  store i32 0, i32* %33, align 4, !insn.addr !1312
  store i32 0, i32* %35, align 4, !insn.addr !1313
  store i8 0, i8* %37, align 1, !insn.addr !1314
  br label %dec_label_pc_41ee13.backedge, !insn.addr !1315

dec_label_pc_41eddb:                              ; preds = %dec_label_pc_41edb6
  %58 = call i32 @function_4039ae(), !insn.addr !1316
  store i32 %58, i32* %eax.0.reg2mem, !insn.addr !1317
  br label %dec_label_pc_41ee0b, !insn.addr !1317

dec_label_pc_41ede4:                              ; preds = %dec_label_pc_41edb6
  %59 = call i32 @function_40212b(), !insn.addr !1318
  store i32 %59, i32* %eax.0.reg2mem, !insn.addr !1319
  br label %dec_label_pc_41ee0b, !insn.addr !1319

dec_label_pc_41eded:                              ; preds = %dec_label_pc_41edb6
  store i32 0, i32* %27, align 4, !insn.addr !1320
  br label %dec_label_pc_41ee13.backedge, !insn.addr !1321

dec_label_pc_41edf2:                              ; preds = %dec_label_pc_41edb6
  %60 = call i32 @function_40169f(), !insn.addr !1322
  store i32 %60, i32* %eax.0.reg2mem, !insn.addr !1323
  br label %dec_label_pc_41ee0b, !insn.addr !1323

dec_label_pc_41edfb:                              ; preds = %dec_label_pc_41edb6
  %61 = call i32 @function_40202c(), !insn.addr !1324
  store i32 %61, i32* %eax.0.reg2mem, !insn.addr !1325
  br label %dec_label_pc_41ee0b, !insn.addr !1325

dec_label_pc_41ee04:                              ; preds = %dec_label_pc_41edb6
  %62 = call i32 @function_401f5f(), !insn.addr !1326
  store i32 %62, i32* %eax.0.reg2mem, !insn.addr !1326
  br label %dec_label_pc_41ee0b, !insn.addr !1326

dec_label_pc_41ee0b:                              ; preds = %dec_label_pc_41ee04, %dec_label_pc_41edfb, %dec_label_pc_41edf2, %dec_label_pc_41ede4, %dec_label_pc_41eddb, %dec_label_pc_41edbd
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %63 = trunc i32 %eax.0.reload to i8, !insn.addr !1327
  %64 = icmp eq i8 %63, 0, !insn.addr !1327
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !1328
  br i1 %64, label %dec_label_pc_41ed80, label %dec_label_pc_41ee13.backedge, !insn.addr !1328

dec_label_pc_41ee13.backedge:                     ; preds = %dec_label_pc_41ee0b, %dec_label_pc_41edc6, %dec_label_pc_41eded
  %65 = load i32, i32* %7, align 4, !insn.addr !1293
  %66 = inttoptr i32 %65 to i8*, !insn.addr !1294
  %67 = load i8, i8* %66, align 1, !insn.addr !1294
  store i8 %67, i8* %23, align 1, !insn.addr !1288
  %68 = icmp eq i8 %67, 0, !insn.addr !1295
  %69 = icmp eq i1 %68, false, !insn.addr !1296
  %70 = load i32, i32* %7, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %7, align 4
  store i32 %53, i32* %esp.03.reg2mem, !insn.addr !1296
  store i32 %53, i32* %esp.0.lcssa.reg2mem, !insn.addr !1296
  br i1 %69, label %dec_label_pc_41ed8e, label %dec_label_pc_41ee26.loopexit, !insn.addr !1296

dec_label_pc_41ee26.loopexit:                     ; preds = %dec_label_pc_41ee13.backedge, %dec_label_pc_41ed8e, %dec_label_pc_41ed83
  %esp.0.lcssa.reload = load i32, i32* %esp.0.lcssa.reg2mem
  %72 = load i32, i32* %12, align 4, !insn.addr !1281
  %73 = add i32 %72, 1, !insn.addr !1281
  store i32 %73, i32* %12, align 4, !insn.addr !1281
  %74 = icmp eq i32 %73, 2, !insn.addr !1282
  %75 = icmp eq i1 %74, false, !insn.addr !1283
  store i32 %esp.0.lcssa.reload, i32* %esp.15.reg2mem, !insn.addr !1283
  store i32* %25, i32** %.pre-phi12.reg2mem, !insn.addr !1283
  br i1 %75, label %dec_label_pc_41ed83, label %dec_label_pc_41ee39, !insn.addr !1283

dec_label_pc_41ee39:                              ; preds = %dec_label_pc_41ee26.loopexit, %dec_label_pc_41ee26.preheader.dec_label_pc_41ee39_crit_edge
  %.pre-phi12.reload = load i32*, i32** %.pre-phi12.reg2mem
  %76 = load i32, i32* %.pre-phi12.reload, align 4, !insn.addr !1284
  store i32 %76, i32* %storemerge.reg2mem, !insn.addr !1329
  br label %dec_label_pc_41ed80, !insn.addr !1329
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_flag"(i32* %this) local_unnamed_addr {
dec_label_pc_41ff23:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 49, !insn.addr !1330
  %2 = inttoptr i32 %1 to i8*, !insn.addr !1330
  %3 = load i8, i8* %2, align 1, !insn.addr !1330
  switch i8 %3, label %dec_label_pc_41ff3c [
    i8 32, label %dec_label_pc_41ff59
    i8 35, label %dec_label_pc_41ff53
    i8 43, label %dec_label_pc_41ff4d
    i8 45, label %dec_label_pc_41ff47
  ]

dec_label_pc_41ff3c:                              ; preds = %dec_label_pc_41ff23
  %4 = icmp eq i8 %3, 48, !insn.addr !1331
  %5 = icmp eq i1 %4, false, !insn.addr !1332
  br i1 %5, label %dec_label_pc_41ff5d, label %dec_label_pc_41ff41, !insn.addr !1332

dec_label_pc_41ff41:                              ; preds = %dec_label_pc_41ff3c
  %6 = add i32 %0, 32, !insn.addr !1333
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1333
  %8 = load i32, i32* %7, align 4, !insn.addr !1333
  %9 = or i32 %8, 8, !insn.addr !1333
  store i32 %9, i32* %7, align 4, !insn.addr !1333
  br label %dec_label_pc_41ff5d, !insn.addr !1334

dec_label_pc_41ff47:                              ; preds = %dec_label_pc_41ff23
  %10 = add i32 %0, 32, !insn.addr !1335
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1335
  %12 = load i32, i32* %11, align 4, !insn.addr !1335
  %13 = or i32 %12, 4, !insn.addr !1335
  store i32 %13, i32* %11, align 4, !insn.addr !1335
  br label %dec_label_pc_41ff5d, !insn.addr !1336

dec_label_pc_41ff4d:                              ; preds = %dec_label_pc_41ff23
  %14 = add i32 %0, 32, !insn.addr !1337
  %15 = inttoptr i32 %14 to i32*, !insn.addr !1337
  %16 = load i32, i32* %15, align 4, !insn.addr !1337
  %17 = or i32 %16, 1, !insn.addr !1337
  store i32 %17, i32* %15, align 4, !insn.addr !1337
  br label %dec_label_pc_41ff5d, !insn.addr !1338

dec_label_pc_41ff53:                              ; preds = %dec_label_pc_41ff23
  %18 = add i32 %0, 32, !insn.addr !1339
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1339
  %20 = load i32, i32* %19, align 4, !insn.addr !1339
  %21 = or i32 %20, 32, !insn.addr !1339
  store i32 %21, i32* %19, align 4, !insn.addr !1339
  br label %dec_label_pc_41ff5d, !insn.addr !1340

dec_label_pc_41ff59:                              ; preds = %dec_label_pc_41ff23
  %22 = add i32 %0, 32, !insn.addr !1341
  %23 = inttoptr i32 %22 to i32*, !insn.addr !1341
  %24 = load i32, i32* %23, align 4, !insn.addr !1341
  %25 = or i32 %24, 2, !insn.addr !1341
  store i32 %25, i32* %23, align 4, !insn.addr !1341
  br label %dec_label_pc_41ff5d, !insn.addr !1341

dec_label_pc_41ff5d:                              ; preds = %dec_label_pc_41ff59, %dec_label_pc_41ff53, %dec_label_pc_41ff4d, %dec_label_pc_41ff47, %dec_label_pc_41ff41, %dec_label_pc_41ff3c
  ret i1 true, !insn.addr !1342
}

declare i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_normal"(i32*) local_unnamed_addr

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_precision"(i32* %this) local_unnamed_addr {
dec_label_pc_420be2:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 49, !insn.addr !1343
  %2 = inttoptr i32 %1 to i8*, !insn.addr !1343
  %3 = load i8, i8* %2, align 1, !insn.addr !1343
  %4 = icmp eq i8 %3, 42, !insn.addr !1343
  %5 = add i32 %0, 40, !insn.addr !1344
  br i1 %4, label %dec_label_pc_420bf2, label %dec_label_pc_420beb, !insn.addr !1345

dec_label_pc_420beb:                              ; preds = %dec_label_pc_420be2
  %6 = call i32 @function_404237(i32 %5), !insn.addr !1346
  %7 = and i32 %6, 1
  %8 = icmp ne i32 %7, 0, !insn.addr !1347
  ret i1 %8, !insn.addr !1347

dec_label_pc_420bf2:                              ; preds = %dec_label_pc_420be2
  %9 = add i32 %0, 20, !insn.addr !1348
  %10 = inttoptr i32 %9 to i32*, !insn.addr !1348
  %11 = load i32, i32* %10, align 4, !insn.addr !1348
  %12 = add i32 %11, 4, !insn.addr !1348
  store i32 %12, i32* %10, align 4, !insn.addr !1348
  %13 = inttoptr i32 %11 to i32*, !insn.addr !1349
  %14 = load i32, i32* %13, align 4, !insn.addr !1349
  %15 = inttoptr i32 %5 to i32*, !insn.addr !1350
  %16 = icmp slt i32 %14, 0, !insn.addr !1351
  %17 = icmp eq i1 %16, false, !insn.addr !1352
  %spec.store.select = select i1 %17, i32 %14, i32 -1
  store i32 %spec.store.select, i32* %15, align 4
  ret i1 true, !insn.addr !1353
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_size"(i32* %this) local_unnamed_addr {
dec_label_pc_42114b:
  %storemerge.reg2mem = alloca i32, !insn.addr !1354
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 49, !insn.addr !1354
  %2 = inttoptr i32 %1 to i8*, !insn.addr !1354
  %3 = load i8, i8* %2, align 1, !insn.addr !1354
  %4 = icmp eq i8 %3, 70, !insn.addr !1355
  %5 = icmp eq i1 %4, false, !insn.addr !1356
  br i1 %5, label %dec_label_pc_42116c, label %dec_label_pc_421152, !insn.addr !1356

dec_label_pc_421152:                              ; preds = %dec_label_pc_42114b
  %6 = and i32 %0, 8, !insn.addr !1357
  %7 = icmp eq i32 %6, 0, !insn.addr !1358
  %8 = icmp eq i1 %7, false, !insn.addr !1359
  br i1 %8, label %dec_label_pc_421296, label %dec_label_pc_421160, !insn.addr !1359

dec_label_pc_421160:                              ; preds = %dec_label_pc_421152
  %9 = add i32 %0, 28, !insn.addr !1360
  %10 = inttoptr i32 %9 to i32*, !insn.addr !1360
  store i32 7, i32* %10, align 4, !insn.addr !1360
  %11 = call i32 @function_401f5f(), !insn.addr !1361
  %12 = and i32 %11, 1
  %13 = icmp ne i32 %12, 0, !insn.addr !1361
  ret i1 %13, !insn.addr !1361

dec_label_pc_42116c:                              ; preds = %dec_label_pc_42114b
  %14 = icmp eq i8 %3, 78, !insn.addr !1362
  %15 = icmp eq i1 %14, false, !insn.addr !1363
  br i1 %15, label %dec_label_pc_421196, label %dec_label_pc_421170, !insn.addr !1363

dec_label_pc_421170:                              ; preds = %dec_label_pc_42116c
  %16 = and i32 %0, 8, !insn.addr !1364
  %17 = icmp eq i32 %16, 0, !insn.addr !1365
  %18 = icmp eq i1 %17, false, !insn.addr !1366
  br i1 %18, label %dec_label_pc_421296, label %dec_label_pc_421180, !insn.addr !1366

dec_label_pc_421180:                              ; preds = %dec_label_pc_421170
  %19 = add i32 %0, 28, !insn.addr !1367
  %20 = inttoptr i32 %19 to i32*, !insn.addr !1367
  store i32 8, i32* %20, align 4, !insn.addr !1367
  br label %dec_label_pc_421183, !insn.addr !1367

dec_label_pc_421183:                              ; preds = %dec_label_pc_421196, %dec_label_pc_421180
  %21 = call i32* @_errno(), !insn.addr !1368
  store i32 22, i32* %21, align 4, !insn.addr !1369
  call void @_invalid_parameter_noinfo(), !insn.addr !1370
  ret i1 false, !insn.addr !1371

dec_label_pc_421196:                              ; preds = %dec_label_pc_42116c
  %22 = add i32 %0, 44, !insn.addr !1372
  %23 = inttoptr i32 %22 to i32*, !insn.addr !1372
  %24 = load i32, i32* %23, align 4, !insn.addr !1372
  %25 = icmp eq i32 %24, 0, !insn.addr !1372
  %26 = icmp eq i1 %25, false, !insn.addr !1373
  br i1 %26, label %dec_label_pc_421183, label %dec_label_pc_42119c, !insn.addr !1373

dec_label_pc_42119c:                              ; preds = %dec_label_pc_421196
  %27 = icmp sgt i8 %3, 106, !insn.addr !1374
  br i1 %27, label %dec_label_pc_421255, label %dec_label_pc_4211a4, !insn.addr !1374

dec_label_pc_4211a4:                              ; preds = %dec_label_pc_42119c
  switch i8 %3, label %dec_label_pc_4211b6 [
    i8 106, label %dec_label_pc_42124c
    i8 73, label %dec_label_pc_4211f1
    i8 76, label %dec_label_pc_4211e5
    i8 84, label %dec_label_pc_4211d9
  ]

dec_label_pc_4211b6:                              ; preds = %dec_label_pc_4211a4
  %28 = icmp eq i8 %3, 104, !insn.addr !1375
  %29 = icmp eq i1 %28, false, !insn.addr !1376
  br i1 %29, label %dec_label_pc_421296, label %dec_label_pc_4211be, !insn.addr !1376

dec_label_pc_4211be:                              ; preds = %dec_label_pc_4211b6
  %30 = add i32 %0, 16, !insn.addr !1377
  %31 = inttoptr i32 %30 to i32*, !insn.addr !1377
  %32 = load i32, i32* %31, align 4, !insn.addr !1377
  %33 = inttoptr i32 %32 to i8*, !insn.addr !1378
  %34 = load i8, i8* %33, align 1, !insn.addr !1378
  %35 = icmp eq i8 %34, 104, !insn.addr !1378
  %36 = icmp eq i1 %35, false, !insn.addr !1379
  store i32 2, i32* %storemerge.reg2mem, !insn.addr !1379
  br i1 %36, label %dec_label_pc_421293, label %dec_label_pc_4211c6, !insn.addr !1379

dec_label_pc_4211c6:                              ; preds = %dec_label_pc_4211be
  %37 = add i32 %32, 1, !insn.addr !1380
  store i32 %37, i32* %31, align 4, !insn.addr !1381
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !1382
  br label %dec_label_pc_421293, !insn.addr !1382

dec_label_pc_4211d9:                              ; preds = %dec_label_pc_4211a4
  store i32 13, i32* %23, align 4, !insn.addr !1383
  br label %dec_label_pc_421296, !insn.addr !1384

dec_label_pc_4211e5:                              ; preds = %dec_label_pc_4211a4
  store i32 8, i32* %23, align 4, !insn.addr !1385
  br label %dec_label_pc_421296, !insn.addr !1386

dec_label_pc_4211f1:                              ; preds = %dec_label_pc_4211a4
  %38 = add i32 %0, 16, !insn.addr !1387
  %39 = inttoptr i32 %38 to i32*, !insn.addr !1387
  %40 = load i32, i32* %39, align 4, !insn.addr !1387
  %41 = inttoptr i32 %40 to i8*, !insn.addr !1388
  %42 = load i8, i8* %41, align 1, !insn.addr !1388
  %43 = icmp eq i8 %42, 51, !insn.addr !1389
  %44 = icmp eq i1 %43, false, !insn.addr !1390
  br i1 %44, label %dec_label_pc_421212, label %dec_label_pc_4211fa, !insn.addr !1390

dec_label_pc_4211fa:                              ; preds = %dec_label_pc_4211f1
  %45 = add i32 %40, 1, !insn.addr !1391
  %46 = inttoptr i32 %45 to i8*, !insn.addr !1391
  %47 = load i8, i8* %46, align 1, !insn.addr !1391
  %48 = icmp eq i8 %47, 50, !insn.addr !1391
  %49 = icmp eq i1 %48, false, !insn.addr !1392
  br i1 %49, label %dec_label_pc_421212, label %dec_label_pc_421200, !insn.addr !1392

dec_label_pc_421200:                              ; preds = %dec_label_pc_4211fa
  %50 = add i32 %40, 2, !insn.addr !1393
  store i32 10, i32* %23, align 4, !insn.addr !1394
  store i32 %50, i32* %39, align 4, !insn.addr !1395
  br label %dec_label_pc_421296, !insn.addr !1396

dec_label_pc_421212:                              ; preds = %dec_label_pc_4211fa, %dec_label_pc_4211f1
  %51 = icmp eq i8 %42, 54, !insn.addr !1397
  %52 = icmp eq i1 %51, false, !insn.addr !1398
  br i1 %52, label %dec_label_pc_42122b, label %dec_label_pc_421216, !insn.addr !1398

dec_label_pc_421216:                              ; preds = %dec_label_pc_421212
  %53 = add i32 %40, 1, !insn.addr !1399
  %54 = inttoptr i32 %53 to i8*, !insn.addr !1399
  %55 = load i8, i8* %54, align 1, !insn.addr !1399
  %56 = icmp eq i8 %55, 52, !insn.addr !1399
  %57 = icmp eq i1 %56, false, !insn.addr !1400
  br i1 %57, label %dec_label_pc_42122b, label %dec_label_pc_42121c, !insn.addr !1400

dec_label_pc_42121c:                              ; preds = %dec_label_pc_421216
  %58 = add i32 %40, 2, !insn.addr !1401
  store i32 11, i32* %23, align 4, !insn.addr !1402
  store i32 %58, i32* %39, align 4, !insn.addr !1403
  br label %dec_label_pc_421296, !insn.addr !1404

dec_label_pc_42122b:                              ; preds = %dec_label_pc_421216, %dec_label_pc_421212
  switch i8 %42, label %dec_label_pc_42123f [
    i8 100, label %dec_label_pc_421243
    i8 105, label %dec_label_pc_421243
    i8 111, label %dec_label_pc_421243
    i8 117, label %dec_label_pc_421243
    i8 120, label %dec_label_pc_421243
  ]

dec_label_pc_42123f:                              ; preds = %dec_label_pc_42122b
  %59 = icmp eq i8 %42, 88, !insn.addr !1405
  %60 = icmp eq i1 %59, false, !insn.addr !1406
  br i1 %60, label %dec_label_pc_421296, label %dec_label_pc_421243, !insn.addr !1406

dec_label_pc_421243:                              ; preds = %dec_label_pc_42122b, %dec_label_pc_42122b, %dec_label_pc_42122b, %dec_label_pc_42122b, %dec_label_pc_42122b, %dec_label_pc_42123f
  store i32 9, i32* %23, align 4, !insn.addr !1407
  br label %dec_label_pc_421296, !insn.addr !1408

dec_label_pc_42124c:                              ; preds = %dec_label_pc_4211a4
  store i32 5, i32* %23, align 4, !insn.addr !1409
  br label %dec_label_pc_421296, !insn.addr !1410

dec_label_pc_421255:                              ; preds = %dec_label_pc_42119c
  switch i8 %3, label %dec_label_pc_421261 [
    i8 108, label %dec_label_pc_421280
    i8 116, label %dec_label_pc_421277
    i8 119, label %dec_label_pc_42126e
  ]

dec_label_pc_421261:                              ; preds = %dec_label_pc_421255
  %61 = icmp eq i8 %3, 122, !insn.addr !1411
  %62 = icmp eq i1 %61, false, !insn.addr !1412
  br i1 %62, label %dec_label_pc_421296, label %dec_label_pc_421265, !insn.addr !1412

dec_label_pc_421265:                              ; preds = %dec_label_pc_421261
  store i32 6, i32* %23, align 4, !insn.addr !1413
  br label %dec_label_pc_421296, !insn.addr !1414

dec_label_pc_42126e:                              ; preds = %dec_label_pc_421255
  store i32 12, i32* %23, align 4, !insn.addr !1415
  br label %dec_label_pc_421296, !insn.addr !1416

dec_label_pc_421277:                              ; preds = %dec_label_pc_421255
  store i32 7, i32* %23, align 4, !insn.addr !1417
  br label %dec_label_pc_421296, !insn.addr !1418

dec_label_pc_421280:                              ; preds = %dec_label_pc_421255
  %63 = add i32 %0, 16, !insn.addr !1419
  %64 = inttoptr i32 %63 to i32*, !insn.addr !1419
  %65 = load i32, i32* %64, align 4, !insn.addr !1419
  %66 = inttoptr i32 %65 to i8*, !insn.addr !1420
  %67 = load i8, i8* %66, align 1, !insn.addr !1420
  %68 = icmp eq i8 %67, 108, !insn.addr !1420
  %69 = icmp eq i1 %68, false, !insn.addr !1421
  store i32 3, i32* %storemerge.reg2mem, !insn.addr !1421
  br i1 %69, label %dec_label_pc_421293, label %dec_label_pc_421288, !insn.addr !1421

dec_label_pc_421288:                              ; preds = %dec_label_pc_421280
  %70 = add i32 %65, 1, !insn.addr !1422
  store i32 %70, i32* %64, align 4, !insn.addr !1423
  store i32 4, i32* %storemerge.reg2mem, !insn.addr !1424
  br label %dec_label_pc_421293, !insn.addr !1424

dec_label_pc_421293:                              ; preds = %dec_label_pc_421288, %dec_label_pc_4211be, %dec_label_pc_421280, %dec_label_pc_4211c6
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  store i32 %storemerge.reload, i32* %23, align 4, !insn.addr !1425
  br label %dec_label_pc_421296, !insn.addr !1425

dec_label_pc_421296:                              ; preds = %dec_label_pc_421293, %dec_label_pc_421277, %dec_label_pc_42126e, %dec_label_pc_421265, %dec_label_pc_421261, %dec_label_pc_42124c, %dec_label_pc_421243, %dec_label_pc_42123f, %dec_label_pc_42121c, %dec_label_pc_421200, %dec_label_pc_4211e5, %dec_label_pc_4211d9, %dec_label_pc_4211b6, %dec_label_pc_421170, %dec_label_pc_421152
  ret i1 true, !insn.addr !1426
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_type"(i32* %this) local_unnamed_addr {
dec_label_pc_422862:
  %storemerge.reg2mem = alloca i1, !insn.addr !1427
  %.pre-phi12.reg2mem = alloca i32*, !insn.addr !1427
  %.pre-phi16.reg2mem = alloca i32*, !insn.addr !1427
  %.pre-phi20.reg2mem = alloca i32*, !insn.addr !1427
  %.pre-phi24.reg2mem = alloca i32*, !insn.addr !1427
  %stack_var_-12.1.reg2mem = alloca i32, !insn.addr !1427
  %eax.5.reg2mem = alloca i8, !insn.addr !1427
  %storemerge1.reg2mem = alloca i8, !insn.addr !1427
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !1427
  %storemerge3.reg2mem = alloca i32, !insn.addr !1427
  %storemerge6.reg2mem = alloca i32, !insn.addr !1427
  %storemerge7.reg2mem = alloca i32, !insn.addr !1427
  %esp.0.reg2mem = alloca i32, !insn.addr !1427
  %eax.0.reg2mem = alloca i32, !insn.addr !1427
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %prefix_-4 = alloca [3 x i8], align 1
  %4 = trunc i32 %1 to i8, !insn.addr !1428
  %5 = insertvalue [3 x i8] undef, i8 %4, 0, !insn.addr !1428
  store [3 x i8] %5, [3 x i8]* %prefix_-4, align 1, !insn.addr !1428
  store i32 88, i32* %stack_var_-24, align 4, !insn.addr !1429
  %6 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !1430
  %7 = add i32 %3, 49, !insn.addr !1431
  %8 = inttoptr i32 %7 to i8*, !insn.addr !1431
  %9 = load i8, i8* %8, align 1, !insn.addr !1431
  %10 = icmp sgt i8 %9, 100, !insn.addr !1432
  br i1 %10, label %dec_label_pc_4228e7, label %dec_label_pc_42287b, !insn.addr !1432

dec_label_pc_42287b:                              ; preds = %dec_label_pc_422862
  %11 = icmp eq i8 %9, 100, !insn.addr !1433
  br i1 %11, label %dec_label_pc_422914, label %dec_label_pc_422881, !insn.addr !1434

dec_label_pc_422881:                              ; preds = %dec_label_pc_42287b
  %12 = icmp sgt i8 %9, 88, !insn.addr !1435
  br i1 %12, label %dec_label_pc_4228c4, label %dec_label_pc_422885, !insn.addr !1435

dec_label_pc_422885:                              ; preds = %dec_label_pc_422881
  store i32 1, i32* %storemerge7.reg2mem
  store i32 16, i32* %storemerge6.reg2mem
  switch i8 %9, label %dec_label_pc_422895 [
    i8 88, label %dec_label_pc_42291b
    i8 65, label %dec_label_pc_422924
    i8 67, label %dec_label_pc_4228d4
  ]

dec_label_pc_422895:                              ; preds = %dec_label_pc_422885
  %13 = icmp slt i8 %9, 69, !insn.addr !1436
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1436
  br i1 %13, label %dec_label_pc_422a90, label %dec_label_pc_42289a, !insn.addr !1436

dec_label_pc_42289a:                              ; preds = %dec_label_pc_422895
  %14 = icmp slt i8 %9, 72, !insn.addr !1437
  br i1 %14, label %dec_label_pc_422924, label %dec_label_pc_4228a3, !insn.addr !1437

dec_label_pc_4228a3:                              ; preds = %dec_label_pc_42289a
  %15 = icmp eq i8 %9, 83, !insn.addr !1438
  %16 = icmp eq i1 %15, false, !insn.addr !1439
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1439
  br i1 %16, label %dec_label_pc_422a90, label %dec_label_pc_4228a8, !insn.addr !1439

dec_label_pc_4228a8:                              ; preds = %dec_label_pc_422939, %dec_label_pc_4228a3
  %17 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix_-4, i32 0, i32 0, !insn.addr !1440
  %18 = load i8, i8* %17, align 1, !insn.addr !1440
  %19 = call i32 @function_401a64(i32 %0, i32 %2, i32 %3, i32 %3, i8 %18), !insn.addr !1440
  store i32 %19, i32* %eax.0.reg2mem, !insn.addr !1440
  store i32 %6, i32* %esp.0.reg2mem, !insn.addr !1440
  br label %dec_label_pc_4228af, !insn.addr !1440

dec_label_pc_4228af:                              ; preds = %dec_label_pc_42292d, %dec_label_pc_422924, %dec_label_pc_42291b, %dec_label_pc_42290b, %dec_label_pc_422902, %dec_label_pc_4228de, %dec_label_pc_4228d4, %dec_label_pc_4228a8
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %20 = trunc i32 %eax.0.reload to i8, !insn.addr !1441
  %21 = icmp eq i8 %20, 0, !insn.addr !1441
  %22 = icmp eq i1 %21, false, !insn.addr !1442
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1442
  br i1 %22, label %dec_label_pc_422957, label %dec_label_pc_422a90, !insn.addr !1442

dec_label_pc_4228c4:                              ; preds = %dec_label_pc_422881
  switch i8 %9, label %dec_label_pc_4228ce [
    i8 90, label %dec_label_pc_4228de
    i8 97, label %dec_label_pc_422924
  ]

dec_label_pc_4228ce:                              ; preds = %dec_label_pc_4228c4
  %23 = icmp eq i8 %9, 99, !insn.addr !1443
  %24 = icmp eq i1 %23, false, !insn.addr !1444
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1444
  br i1 %24, label %dec_label_pc_422a90, label %dec_label_pc_4228d4, !insn.addr !1444

dec_label_pc_4228d4:                              ; preds = %dec_label_pc_422885, %dec_label_pc_4228ce
  store i32 0, i32* %stack_var_-24, align 4, !insn.addr !1445
  %25 = ptrtoint i32* %stack_var_-24 to i32, !insn.addr !1445
  %26 = call i32 @function_401974(i32 0), !insn.addr !1446
  store i32 %26, i32* %eax.0.reg2mem, !insn.addr !1447
  store i32 %25, i32* %esp.0.reg2mem, !insn.addr !1447
  br label %dec_label_pc_4228af, !insn.addr !1447

dec_label_pc_4228de:                              ; preds = %dec_label_pc_4228c4
  %27 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix_-4, i32 0, i32 0, !insn.addr !1448
  %28 = load i8, i8* %27, align 1, !insn.addr !1448
  %29 = call i32 @function_40180c(i32 %0, i32 %2, i32 %3, i32 %3, i8 %28), !insn.addr !1448
  store i32 %29, i32* %eax.0.reg2mem, !insn.addr !1449
  store i32 %6, i32* %esp.0.reg2mem, !insn.addr !1449
  br label %dec_label_pc_4228af, !insn.addr !1449

dec_label_pc_4228e7:                              ; preds = %dec_label_pc_422862
  %30 = icmp sgt i8 %9, 112, !insn.addr !1450
  br i1 %30, label %dec_label_pc_422939, label %dec_label_pc_4228ec, !insn.addr !1450

dec_label_pc_4228ec:                              ; preds = %dec_label_pc_4228e7
  %31 = icmp eq i8 %9, 112, !insn.addr !1451
  br i1 %31, label %dec_label_pc_42292d, label %dec_label_pc_4228ee, !insn.addr !1452

dec_label_pc_4228ee:                              ; preds = %dec_label_pc_4228ec
  %32 = icmp slt i8 %9, 104, !insn.addr !1453
  br i1 %32, label %dec_label_pc_422924, label %dec_label_pc_4228f3, !insn.addr !1453

dec_label_pc_4228f3:                              ; preds = %dec_label_pc_4228ee
  switch i8 %9, label %dec_label_pc_4228fd [
    i8 105, label %dec_label_pc_422914
    i8 110, label %dec_label_pc_42290b
  ]

dec_label_pc_4228fd:                              ; preds = %dec_label_pc_4228f3
  %33 = icmp eq i8 %9, 111, !insn.addr !1454
  %34 = icmp eq i1 %33, false, !insn.addr !1455
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1455
  br i1 %34, label %dec_label_pc_422a90, label %dec_label_pc_422902, !insn.addr !1455

dec_label_pc_422902:                              ; preds = %dec_label_pc_4228fd
  %35 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix_-4, i32 0, i32 0, !insn.addr !1456
  %36 = load i8, i8* %35, align 1, !insn.addr !1456
  %37 = call i32 @function_401d75(i32 %0, i32 %2, i32 %3, i32 %3, i8 %36), !insn.addr !1456
  store i32 %37, i32* %eax.0.reg2mem, !insn.addr !1457
  store i32 %6, i32* %esp.0.reg2mem, !insn.addr !1457
  br label %dec_label_pc_4228af, !insn.addr !1457

dec_label_pc_42290b:                              ; preds = %dec_label_pc_4228f3
  %38 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix_-4, i32 0, i32 0, !insn.addr !1458
  %39 = load i8, i8* %38, align 1, !insn.addr !1458
  %40 = call i32 @function_4030d0(i32 %0, i32 %2, i32 %3, i32 %3, i8 %39), !insn.addr !1458
  store i32 %40, i32* %eax.0.reg2mem, !insn.addr !1459
  store i32 %6, i32* %esp.0.reg2mem, !insn.addr !1459
  br label %dec_label_pc_4228af, !insn.addr !1459

dec_label_pc_422914:                              ; preds = %dec_label_pc_4228f3, %dec_label_pc_42287b
  %41 = add i32 %3, 32, !insn.addr !1460
  %42 = inttoptr i32 %41 to i32*, !insn.addr !1460
  %43 = load i32, i32* %42, align 4, !insn.addr !1460
  %44 = or i32 %43, 16, !insn.addr !1460
  store i32 %44, i32* %42, align 4, !insn.addr !1460
  store i32 0, i32* %storemerge7.reg2mem, !insn.addr !1460
  store i32 10, i32* %storemerge6.reg2mem, !insn.addr !1460
  br label %dec_label_pc_42291b, !insn.addr !1460

dec_label_pc_42291b:                              ; preds = %dec_label_pc_422948, %dec_label_pc_422939, %dec_label_pc_422914, %dec_label_pc_422885
  %storemerge6.reload = load i32, i32* %storemerge6.reg2mem
  %storemerge7.reload = load i32, i32* %storemerge7.reg2mem
  store i32 %storemerge7.reload, i32* %stack_var_-24, align 4
  store i32 %storemerge6.reload, i32* %stack_var_-28, align 4
  %storemerge4 = ptrtoint i32* %stack_var_-28 to i32
  %45 = call i32 @function_4034f9(i32 %storemerge6.reload, i32 %storemerge7.reload), !insn.addr !1461
  store i32 %45, i32* %eax.0.reg2mem, !insn.addr !1462
  store i32 %storemerge4, i32* %esp.0.reg2mem, !insn.addr !1462
  br label %dec_label_pc_4228af, !insn.addr !1462

dec_label_pc_422924:                              ; preds = %dec_label_pc_4228c4, %dec_label_pc_422885, %dec_label_pc_4228ee, %dec_label_pc_42289a
  %46 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix_-4, i32 0, i32 0, !insn.addr !1463
  %47 = load i8, i8* %46, align 1, !insn.addr !1463
  %48 = call i32 @function_402991(i32 %0, i32 %2, i32 %3, i32 %3, i8 %47), !insn.addr !1463
  store i32 %48, i32* %eax.0.reg2mem, !insn.addr !1464
  store i32 %6, i32* %esp.0.reg2mem, !insn.addr !1464
  br label %dec_label_pc_4228af, !insn.addr !1464

dec_label_pc_42292d:                              ; preds = %dec_label_pc_4228ec
  %49 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix_-4, i32 0, i32 0, !insn.addr !1465
  %50 = load i8, i8* %49, align 1, !insn.addr !1465
  %51 = call i32 @function_4010c3(i32 %0, i32 %2, i32 %3, i32 %3, i8 %50), !insn.addr !1465
  store i32 %51, i32* %eax.0.reg2mem, !insn.addr !1466
  store i32 %6, i32* %esp.0.reg2mem, !insn.addr !1466
  br label %dec_label_pc_4228af, !insn.addr !1466

dec_label_pc_422939:                              ; preds = %dec_label_pc_4228e7
  store i32 0, i32* %storemerge7.reg2mem
  store i32 10, i32* %storemerge6.reg2mem
  switch i8 %9, label %dec_label_pc_422948 [
    i8 115, label %dec_label_pc_4228a8
    i8 117, label %dec_label_pc_42291b
  ]

dec_label_pc_422948:                              ; preds = %dec_label_pc_422939
  %52 = icmp eq i8 %9, 120, !insn.addr !1467
  %53 = icmp eq i1 %52, false, !insn.addr !1468
  store i32 0, i32* %storemerge7.reg2mem, !insn.addr !1468
  store i32 16, i32* %storemerge6.reg2mem, !insn.addr !1468
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1468
  br i1 %53, label %dec_label_pc_422a90, label %dec_label_pc_42291b, !insn.addr !1468

dec_label_pc_422957:                              ; preds = %dec_label_pc_4228af
  %54 = add i32 %3, 48, !insn.addr !1469
  %55 = inttoptr i32 %54 to i8*, !insn.addr !1469
  %56 = load i8, i8* %55, align 1, !insn.addr !1469
  %57 = icmp eq i8 %56, 0, !insn.addr !1469
  %58 = icmp eq i1 %57, false, !insn.addr !1470
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1470
  br i1 %58, label %dec_label_pc_422a90, label %dec_label_pc_422960, !insn.addr !1470

dec_label_pc_422960:                              ; preds = %dec_label_pc_422957
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  store i32 0, i32* %stack_var_-8, align 4, !insn.addr !1471
  %59 = add i32 %3, 32, !insn.addr !1472
  %60 = inttoptr i32 %59 to i32*, !insn.addr !1472
  %61 = load i32, i32* %60, align 4, !insn.addr !1472
  %62 = and i32 %61, 16
  %63 = icmp eq i32 %62, 0, !insn.addr !1473
  store i32 0, i32* %stack_var_-12.0.reg2mem, !insn.addr !1474
  br i1 %63, label %dec_label_pc_4229aa, label %dec_label_pc_42297b, !insn.addr !1474

dec_label_pc_42297b:                              ; preds = %dec_label_pc_422960
  %64 = and i32 %61, 64
  %65 = icmp eq i32 %64, 0, !insn.addr !1475
  store i32 45, i32* %storemerge3.reg2mem, !insn.addr !1476
  br i1 %65, label %dec_label_pc_42298a, label %dec_label_pc_422992, !insn.addr !1476

dec_label_pc_42298a:                              ; preds = %dec_label_pc_42297b
  %66 = and i32 %61, 1
  %67 = icmp eq i32 %66, 0, !insn.addr !1477
  store i32 43, i32* %storemerge3.reg2mem, !insn.addr !1478
  br i1 %67, label %dec_label_pc_422999, label %dec_label_pc_422992, !insn.addr !1478

dec_label_pc_422992:                              ; preds = %dec_label_pc_42298a, %dec_label_pc_42297b
  %storemerge3.reload = load i32, i32* %storemerge3.reg2mem
  store i32 %storemerge3.reload, i32* %stack_var_-8, align 4
  store i32 1, i32* %stack_var_-12.0.reg2mem, !insn.addr !1479
  br label %dec_label_pc_4229aa, !insn.addr !1479

dec_label_pc_422999:                              ; preds = %dec_label_pc_42298a
  %68 = and i32 %61, 2
  %69 = icmp eq i32 %68, 0, !insn.addr !1480
  store i32 0, i32* %stack_var_-12.0.reg2mem, !insn.addr !1481
  br i1 %69, label %dec_label_pc_4229aa, label %dec_label_pc_4229a1, !insn.addr !1481

dec_label_pc_4229a1:                              ; preds = %dec_label_pc_422999
  store i32 32, i32* %stack_var_-8, align 4, !insn.addr !1482
  store i32 1, i32* %stack_var_-12.0.reg2mem, !insn.addr !1483
  br label %dec_label_pc_4229aa, !insn.addr !1483

dec_label_pc_4229aa:                              ; preds = %dec_label_pc_4229a1, %dec_label_pc_422999, %dec_label_pc_422992, %dec_label_pc_422960
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  %70 = load i8, i8* %8, align 1, !insn.addr !1484
  store i8 0, i8* %storemerge1.reg2mem
  switch i8 %70, label %dec_label_pc_4229d6 [
    i8 97, label %dec_label_pc_4229d4
    i8 65, label %dec_label_pc_4229d4
  ]

dec_label_pc_4229d4:                              ; preds = %dec_label_pc_4229aa, %dec_label_pc_4229aa
  store i8 1, i8* %storemerge1.reg2mem, !insn.addr !1485
  br label %dec_label_pc_4229d6, !insn.addr !1485

dec_label_pc_4229d6:                              ; preds = %dec_label_pc_4229aa, %dec_label_pc_4229d4
  %71 = icmp ne i8 %70, 120, !insn.addr !1486
  %72 = icmp eq i8 %70, 88, !insn.addr !1487
  %73 = icmp eq i1 %72, false, !insn.addr !1488
  %or.cond = icmp eq i1 %71, %73
  %74 = and i32 %61, 32
  %75 = icmp eq i32 %74, 0, !insn.addr !1489
  %or.cond26 = or i1 %75, %or.cond
  %not.or.cond26 = icmp ne i1 %or.cond26, true
  %storemerge2 = zext i1 %not.or.cond26 to i8
  %storemerge1.reload = load i8, i8* %storemerge1.reg2mem
  %76 = or i8 %storemerge1.reload, %storemerge2
  %77 = icmp eq i8 %76, 0
  store i32 %stack_var_-12.0.reload, i32* %stack_var_-12.1.reg2mem, !insn.addr !1490
  br i1 %77, label %dec_label_pc_4229fe, label %dec_label_pc_4229de, !insn.addr !1490

dec_label_pc_4229de:                              ; preds = %dec_label_pc_4229d6
  %78 = ptrtoint [3 x i8]* %prefix_-4 to i32, !insn.addr !1491
  %79 = add i32 %stack_var_-12.0.reload, %78
  %80 = add i32 %79, -4, !insn.addr !1492
  %81 = inttoptr i32 %80 to i8*, !insn.addr !1492
  store i8 48, i8* %81, align 1, !insn.addr !1492
  store i8 120, i8* %eax.5.reg2mem
  switch i8 %70, label %dec_label_pc_4229f4 [
    i8 88, label %dec_label_pc_4229f1
    i8 65, label %dec_label_pc_4229f1
  ]

dec_label_pc_4229f1:                              ; preds = %dec_label_pc_4229de, %dec_label_pc_4229de
  %82 = add i32 %esp.0.reload, -4, !insn.addr !1493
  %83 = inttoptr i32 %82 to i32*, !insn.addr !1493
  store i32 88, i32* %83, align 4, !insn.addr !1493
  store i8 88, i8* %eax.5.reg2mem, !insn.addr !1494
  br label %dec_label_pc_4229f4, !insn.addr !1494

dec_label_pc_4229f4:                              ; preds = %dec_label_pc_4229de, %dec_label_pc_4229f1
  %eax.5.reload = load i8, i8* %eax.5.reg2mem
  %84 = add i32 %79, -3, !insn.addr !1495
  %85 = inttoptr i32 %84 to i8*, !insn.addr !1495
  store i8 %eax.5.reload, i8* %85, align 1, !insn.addr !1495
  %86 = or i32 %stack_var_-12.0.reload, 2, !insn.addr !1496
  store i32 %86, i32* %stack_var_-12.1.reg2mem, !insn.addr !1497
  br label %dec_label_pc_4229fe, !insn.addr !1497

dec_label_pc_4229fe:                              ; preds = %dec_label_pc_4229d6, %dec_label_pc_4229f4
  %stack_var_-12.1.reload = load i32, i32* %stack_var_-12.1.reg2mem
  %87 = add i32 %3, 36, !insn.addr !1498
  %88 = inttoptr i32 %87 to i32*, !insn.addr !1498
  %89 = load i32, i32* %88, align 4, !insn.addr !1498
  %90 = add i32 %3, 24, !insn.addr !1499
  %91 = add i32 %3, 56, !insn.addr !1500
  %92 = inttoptr i32 %91 to i32*, !insn.addr !1500
  %93 = load i32, i32* %92, align 4, !insn.addr !1500
  %94 = sub i32 %89, %93, !insn.addr !1500
  %95 = sub i32 %94, %stack_var_-12.1.reload, !insn.addr !1501
  %96 = inttoptr i32 %59 to i8*, !insn.addr !1502
  %97 = load i8, i8* %96, align 1, !insn.addr !1502
  %98 = and i8 %97, 12, !insn.addr !1502
  %99 = icmp eq i8 %98, 0, !insn.addr !1502
  %100 = icmp eq i1 %99, false, !insn.addr !1503
  br i1 %100, label %dec_label_pc_4229fe.dec_label_pc_422a26_crit_edge, label %dec_label_pc_422a16, !insn.addr !1503

dec_label_pc_4229fe.dec_label_pc_422a26_crit_edge: ; preds = %dec_label_pc_4229fe
  %101 = add i32 %esp.0.reload, -4, !insn.addr !1504
  %102 = inttoptr i32 %101 to i32*, !insn.addr !1504
  %.pre = add i32 %esp.0.reload, -8, !insn.addr !1505
  %.pre11 = inttoptr i32 %.pre to i32*, !insn.addr !1505
  %.pre13 = add i32 %esp.0.reload, -12, !insn.addr !1506
  %.pre15 = inttoptr i32 %.pre13 to i32*, !insn.addr !1506
  %.pre17 = add i32 %esp.0.reload, -16, !insn.addr !1507
  %.pre19 = inttoptr i32 %.pre17 to i32*, !insn.addr !1507
  %.pre21 = add i32 %esp.0.reload, -20, !insn.addr !1508
  %.pre23 = inttoptr i32 %.pre21 to i32*, !insn.addr !1508
  store i32* %.pre23, i32** %.pre-phi24.reg2mem
  store i32* %.pre19, i32** %.pre-phi20.reg2mem
  store i32* %.pre15, i32** %.pre-phi16.reg2mem
  store i32* %.pre11, i32** %.pre-phi12.reg2mem
  br label %dec_label_pc_422a26

dec_label_pc_422a16:                              ; preds = %dec_label_pc_4229fe
  %103 = add i32 %3, 1096, !insn.addr !1509
  %104 = add i32 %esp.0.reload, -8
  %105 = inttoptr i32 %104 to i32*
  store i32 %90, i32* %105, align 4, !insn.addr !1510
  %106 = add i32 %esp.0.reload, -12
  %107 = inttoptr i32 %106 to i32*
  store i32 %95, i32* %107, align 4, !insn.addr !1511
  %108 = add i32 %esp.0.reload, -16
  %109 = inttoptr i32 %108 to i32*
  store i32 32, i32* %109, align 4, !insn.addr !1512
  %110 = add i32 %esp.0.reload, -20
  %111 = inttoptr i32 %110 to i32*
  store i32 %103, i32* %111, align 4, !insn.addr !1513
  %112 = call i32 @function_402c20(), !insn.addr !1514
  store i32* %111, i32** %.pre-phi24.reg2mem, !insn.addr !1515
  store i32* %109, i32** %.pre-phi20.reg2mem, !insn.addr !1515
  store i32* %107, i32** %.pre-phi16.reg2mem, !insn.addr !1515
  store i32* %105, i32** %.pre-phi12.reg2mem, !insn.addr !1515
  br label %dec_label_pc_422a26, !insn.addr !1515

dec_label_pc_422a26:                              ; preds = %dec_label_pc_4229fe.dec_label_pc_422a26_crit_edge, %dec_label_pc_422a16
  %.pre-phi12.reload = load i32*, i32** %.pre-phi12.reg2mem
  %.pre-phi16.reload = load i32*, i32** %.pre-phi16.reg2mem
  %.pre-phi20.reload = load i32*, i32** %.pre-phi20.reg2mem
  %.pre-phi24.reload = load i32*, i32** %.pre-phi24.reg2mem
  %113 = add i32 %3, 12, !insn.addr !1516
  store i32 %113, i32* %.pre-phi12.reload, align 4, !insn.addr !1505
  store i32 %90, i32* %.pre-phi16.reload, align 4, !insn.addr !1506
  store i32 %stack_var_-12.1.reload, i32* %.pre-phi20.reload, align 4, !insn.addr !1507
  %114 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !1508
  store i32 %114, i32* %.pre-phi24.reload, align 4, !insn.addr !1508
  %115 = call i32 @function_404147(), !insn.addr !1517
  %116 = load i32, i32* %60, align 4, !insn.addr !1518
  %117 = and i32 %116, 8
  %118 = icmp eq i32 %117, 0, !insn.addr !1519
  br i1 %118, label %dec_label_pc_422a62, label %dec_label_pc_422a47, !insn.addr !1520

dec_label_pc_422a47:                              ; preds = %dec_label_pc_422a26
  %119 = and i32 %116, 4
  %120 = icmp eq i32 %119, 0, !insn.addr !1521
  %121 = icmp eq i1 %120, false, !insn.addr !1522
  br i1 %121, label %dec_label_pc_422a62, label %dec_label_pc_422a4f, !insn.addr !1522

dec_label_pc_422a4f:                              ; preds = %dec_label_pc_422a47
  %122 = add i32 %esp.0.reload, -24, !insn.addr !1523
  %123 = inttoptr i32 %122 to i32*, !insn.addr !1523
  store i32 %90, i32* %123, align 4, !insn.addr !1523
  %124 = add i32 %esp.0.reload, -28, !insn.addr !1524
  %125 = inttoptr i32 %124 to i32*, !insn.addr !1524
  store i32 %95, i32* %125, align 4, !insn.addr !1524
  %126 = add i32 %3, 1096, !insn.addr !1525
  %127 = add i32 %esp.0.reload, -32, !insn.addr !1526
  %128 = inttoptr i32 %127 to i32*, !insn.addr !1526
  store i32 48, i32* %128, align 4, !insn.addr !1526
  %129 = add i32 %esp.0.reload, -36, !insn.addr !1527
  %130 = inttoptr i32 %129 to i32*, !insn.addr !1527
  store i32 %126, i32* %130, align 4, !insn.addr !1527
  %131 = call i32 @function_402c20(), !insn.addr !1528
  br label %dec_label_pc_422a62, !insn.addr !1529

dec_label_pc_422a62:                              ; preds = %dec_label_pc_422a4f, %dec_label_pc_422a47, %dec_label_pc_422a26
  %132 = add i32 %esp.0.reload, -24, !insn.addr !1530
  %133 = inttoptr i32 %132 to i32*, !insn.addr !1530
  store i32 0, i32* %133, align 4, !insn.addr !1530
  %134 = call i32 @function_4034c2(), !insn.addr !1531
  %135 = inttoptr i32 %90 to i32*, !insn.addr !1532
  %136 = load i32, i32* %135, align 4, !insn.addr !1532
  %137 = icmp slt i32 %136, 0, !insn.addr !1532
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1533
  br i1 %137, label %dec_label_pc_422a90, label %dec_label_pc_422a70, !insn.addr !1533

dec_label_pc_422a70:                              ; preds = %dec_label_pc_422a62
  %138 = load i32, i32* %60, align 4, !insn.addr !1534
  %139 = and i32 %138, 4
  %140 = icmp eq i32 %139, 0, !insn.addr !1535
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1536
  br i1 %140, label %dec_label_pc_422a90, label %dec_label_pc_422a7a, !insn.addr !1536

dec_label_pc_422a7a:                              ; preds = %dec_label_pc_422a70
  %141 = add i32 %esp.0.reload, -28, !insn.addr !1537
  %142 = inttoptr i32 %141 to i32*, !insn.addr !1537
  store i32 %90, i32* %142, align 4, !insn.addr !1537
  %143 = add i32 %esp.0.reload, -32, !insn.addr !1538
  %144 = inttoptr i32 %143 to i32*, !insn.addr !1538
  store i32 %95, i32* %144, align 4, !insn.addr !1538
  %145 = add i32 %3, 1096, !insn.addr !1539
  %146 = add i32 %esp.0.reload, -36, !insn.addr !1540
  %147 = inttoptr i32 %146 to i32*, !insn.addr !1540
  store i32 32, i32* %147, align 4, !insn.addr !1540
  %148 = add i32 %esp.0.reload, -40, !insn.addr !1541
  %149 = inttoptr i32 %148 to i32*, !insn.addr !1541
  store i32 %145, i32* %149, align 4, !insn.addr !1541
  %150 = call i32 @function_402c20(), !insn.addr !1542
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1543
  br label %dec_label_pc_422a90, !insn.addr !1543

dec_label_pc_422a90:                              ; preds = %dec_label_pc_422957, %dec_label_pc_422a7a, %dec_label_pc_422a70, %dec_label_pc_422a62, %dec_label_pc_422895, %dec_label_pc_4228a3, %dec_label_pc_4228af, %dec_label_pc_4228ce, %dec_label_pc_4228fd, %dec_label_pc_422948
  %storemerge.reload = load i1, i1* %storemerge.reg2mem
  ret i1 %storemerge.reload, !insn.addr !1544
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::state_case_width"(i32* %this) local_unnamed_addr {
dec_label_pc_42460c:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 49, !insn.addr !1545
  %2 = inttoptr i32 %1 to i8*, !insn.addr !1545
  %3 = load i8, i8* %2, align 1, !insn.addr !1545
  %4 = icmp eq i8 %3, 42, !insn.addr !1545
  %5 = add i32 %0, 36, !insn.addr !1546
  br i1 %4, label %dec_label_pc_42461c, label %dec_label_pc_424615, !insn.addr !1547

dec_label_pc_424615:                              ; preds = %dec_label_pc_42460c
  %6 = call i32 @function_404237(i32 %5), !insn.addr !1548
  %7 = and i32 %6, 1
  %8 = icmp ne i32 %7, 0, !insn.addr !1549
  ret i1 %8, !insn.addr !1549

dec_label_pc_42461c:                              ; preds = %dec_label_pc_42460c
  %9 = add i32 %0, 20, !insn.addr !1550
  %10 = inttoptr i32 %9 to i32*, !insn.addr !1550
  %11 = load i32, i32* %10, align 4, !insn.addr !1550
  %12 = add i32 %11, 4, !insn.addr !1550
  store i32 %12, i32* %10, align 4, !insn.addr !1550
  %13 = inttoptr i32 %11 to i32*, !insn.addr !1551
  %14 = load i32, i32* %13, align 4, !insn.addr !1551
  %15 = inttoptr i32 %5 to i32*, !insn.addr !1552
  store i32 %14, i32* %15, align 4, !insn.addr !1552
  %16 = icmp slt i32 %14, 0, !insn.addr !1553
  %17 = icmp eq i1 %16, false, !insn.addr !1554
  br i1 %17, label %dec_label_pc_424634, label %dec_label_pc_42462c, !insn.addr !1554

dec_label_pc_42462c:                              ; preds = %dec_label_pc_42461c
  %18 = add i32 %0, 32, !insn.addr !1555
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1555
  %20 = load i32, i32* %19, align 4, !insn.addr !1555
  %21 = or i32 %20, 4, !insn.addr !1555
  store i32 %21, i32* %19, align 4, !insn.addr !1555
  %22 = sub i32 0, %14, !insn.addr !1556
  store i32 %22, i32* %15, align 4, !insn.addr !1557
  br label %dec_label_pc_424634, !insn.addr !1557

dec_label_pc_424634:                              ; preds = %dec_label_pc_42462c, %dec_label_pc_42461c
  ret i1 true, !insn.addr !1558
}

define i32 @"__crt_stdio_output::to_integer_size"(i32 %length) local_unnamed_addr {
dec_label_pc_4248dd:
  %stack_var_-8.0.reg2mem = alloca i32, !insn.addr !1559
  %merge.reg2mem = alloca i32, !insn.addr !1559
  store i32 %length, i32* @1, align 4, !insn.addr !1560
  store i32 1, i32* %merge.reg2mem, !insn.addr !1561
  store i32 2, i32* %stack_var_-8.0.reg2mem, !insn.addr !1561
  switch i32 %length, label %dec_label_pc_42490a [
    i32 0, label %dec_label_pc_424902
    i32 1, label %dec_label_pc_4248f8
    i32 2, label %dec_label_pc_4248ff
    i32 3, label %dec_label_pc_424902
    i32 4, label %dec_label_pc_424906
    i32 5, label %dec_label_pc_424906
    i32 6, label %dec_label_pc_424902
    i32 7, label %dec_label_pc_424902
    i32 9, label %dec_label_pc_424902
    i32 10, label %dec_label_pc_424902
    i32 11, label %dec_label_pc_424906
  ], !insn.addr !1561

dec_label_pc_4248f8:                              ; preds = %dec_label_pc_4248ff, %dec_label_pc_42490a, %dec_label_pc_4248dd
  %merge.reload = load i32, i32* %merge.reg2mem
  ret i32 %merge.reload, !insn.addr !1562

dec_label_pc_4248ff:                              ; preds = %dec_label_pc_4248dd, %dec_label_pc_424906, %dec_label_pc_424902
  %stack_var_-8.0.reload = load i32, i32* %stack_var_-8.0.reg2mem
  store i32 %stack_var_-8.0.reload, i32* %merge.reg2mem
  br label %dec_label_pc_4248f8

dec_label_pc_424902:                              ; preds = %dec_label_pc_4248dd, %dec_label_pc_4248dd, %dec_label_pc_4248dd, %dec_label_pc_4248dd, %dec_label_pc_4248dd, %dec_label_pc_4248dd
  store i32 4, i32* %stack_var_-8.0.reg2mem, !insn.addr !1563
  br label %dec_label_pc_4248ff, !insn.addr !1563

dec_label_pc_424906:                              ; preds = %dec_label_pc_4248dd, %dec_label_pc_4248dd, %dec_label_pc_4248dd
  store i32 8, i32* %stack_var_-8.0.reg2mem, !insn.addr !1564
  br label %dec_label_pc_4248ff, !insn.addr !1564

dec_label_pc_42490a:                              ; preds = %dec_label_pc_4248dd
  store i32 0, i32* %merge.reg2mem
  br label %dec_label_pc_4248f8
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_Z"(i32* %this) local_unnamed_addr {
dec_label_pc_424b54:
  %ecx.1.reg2mem = alloca i32, !insn.addr !1565
  %ecx.0.reg2mem = alloca i32, !insn.addr !1565
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 20, !insn.addr !1566
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1566
  %3 = load i32, i32* %2, align 4, !insn.addr !1566
  %4 = add i32 %3, 4, !insn.addr !1566
  store i32 %4, i32* %2, align 4, !insn.addr !1566
  %5 = inttoptr i32 %3 to i32*, !insn.addr !1567
  %6 = load i32, i32* %5, align 4, !insn.addr !1567
  %7 = icmp eq i32 %6, 0, !insn.addr !1568
  br i1 %7, label %dec_label_pc_424b97, label %dec_label_pc_424b69, !insn.addr !1569

dec_label_pc_424b69:                              ; preds = %dec_label_pc_424b54
  %8 = add i32 %6, 4, !insn.addr !1570
  %9 = inttoptr i32 %8 to i32*, !insn.addr !1570
  %10 = load i32, i32* %9, align 4, !insn.addr !1570
  %11 = icmp eq i32 %10, 0, !insn.addr !1571
  br i1 %11, label %dec_label_pc_424b97, label %dec_label_pc_424b70, !insn.addr !1572

dec_label_pc_424b70:                              ; preds = %dec_label_pc_424b69
  %12 = call i32 @function_4032a6(), !insn.addr !1573
  %13 = add i32 %0, 52, !insn.addr !1574
  %14 = inttoptr i32 %13 to i32*, !insn.addr !1574
  store i32 %10, i32* %14, align 4, !insn.addr !1574
  %15 = inttoptr i32 %6 to i16*, !insn.addr !1575
  %16 = load i16, i16* %15, align 2, !insn.addr !1575
  %17 = zext i16 %16 to i32, !insn.addr !1575
  %18 = trunc i32 %12 to i8, !insn.addr !1576
  %19 = icmp eq i8 %18, 0, !insn.addr !1576
  store i32 %17, i32* %ecx.0.reg2mem, !insn.addr !1577
  br i1 %19, label %dec_label_pc_424ba1, label %dec_label_pc_424b8f, !insn.addr !1577

dec_label_pc_424b8f:                              ; preds = %dec_label_pc_424b70
  %20 = add i32 %0, 60, !insn.addr !1578
  %21 = inttoptr i32 %20 to i8*, !insn.addr !1578
  store i8 1, i8* %21, align 1, !insn.addr !1578
  %22 = udiv i32 %17, 2, !insn.addr !1579
  store i32 %22, i32* %ecx.1.reg2mem, !insn.addr !1580
  br label %dec_label_pc_424ba5, !insn.addr !1580

dec_label_pc_424b97:                              ; preds = %dec_label_pc_424b69, %dec_label_pc_424b54
  %23 = add i32 %0, 52, !insn.addr !1581
  %24 = inttoptr i32 %23 to i32*, !insn.addr !1581
  store i32 ptrtoint ([7 x i8]* @global_var_471368 to i32), i32* %24, align 4, !insn.addr !1581
  store i32 6, i32* %ecx.0.reg2mem, !insn.addr !1582
  br label %dec_label_pc_424ba1, !insn.addr !1582

dec_label_pc_424ba1:                              ; preds = %dec_label_pc_424b97, %dec_label_pc_424b70
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %25 = add i32 %0, 60, !insn.addr !1583
  %26 = inttoptr i32 %25 to i8*, !insn.addr !1583
  store i8 0, i8* %26, align 1, !insn.addr !1583
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !1583
  br label %dec_label_pc_424ba5, !insn.addr !1583

dec_label_pc_424ba5:                              ; preds = %dec_label_pc_424ba1, %dec_label_pc_424b8f
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %27 = add i32 %0, 56, !insn.addr !1584
  %28 = inttoptr i32 %27 to i32*, !insn.addr !1584
  store i32 %ecx.1.reload, i32* %28, align 4, !insn.addr !1584
  ret i1 true, !insn.addr !1585
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_a"(i32* %this) local_unnamed_addr {
dec_label_pc_425509:
  %edx.1.reg2mem = alloca i32, !insn.addr !1586
  %edx.0.reg2mem = alloca i32, !insn.addr !1586
  %.pn.in.reg2mem = alloca i8, !insn.addr !1586
  %storemerge.reg2mem = alloca i32, !insn.addr !1586
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %1 = add i32 %0, 32, !insn.addr !1587
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1587
  %3 = load i32, i32* %2, align 4, !insn.addr !1587
  %4 = or i32 %3, 16, !insn.addr !1587
  store i32 %4, i32* %2, align 4, !insn.addr !1587
  %5 = add i32 %0, 40, !insn.addr !1588
  %6 = inttoptr i32 %5 to i32*, !insn.addr !1588
  %7 = load i32, i32* %6, align 4, !insn.addr !1588
  %8 = icmp slt i32 %7, 0, !insn.addr !1589
  %9 = icmp eq i1 %8, false, !insn.addr !1590
  br i1 %9, label %dec_label_pc_425539, label %dec_label_pc_425522, !insn.addr !1590

dec_label_pc_425522:                              ; preds = %dec_label_pc_425509
  %10 = add i32 %0, 49, !insn.addr !1591
  %11 = inttoptr i32 %10 to i8*, !insn.addr !1591
  %12 = load i8, i8* %11, align 1, !insn.addr !1591
  store i32 6, i32* %storemerge.reg2mem
  switch i8 %12, label %dec_label_pc_425533 [
    i8 97, label %dec_label_pc_425531
    i8 65, label %dec_label_pc_425531
  ]

dec_label_pc_425531:                              ; preds = %dec_label_pc_425522, %dec_label_pc_425522
  store i32 13, i32* %storemerge.reg2mem, !insn.addr !1592
  br label %dec_label_pc_425533, !insn.addr !1592

dec_label_pc_425533:                              ; preds = %dec_label_pc_425522, %dec_label_pc_425531
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  store i32 %storemerge.reload, i32* %6, align 4, !insn.addr !1593
  br label %dec_label_pc_42554f, !insn.addr !1594

dec_label_pc_425539:                              ; preds = %dec_label_pc_425509
  %13 = icmp eq i32 %7, 0, !insn.addr !1589
  %14 = icmp eq i1 %13, false, !insn.addr !1595
  br i1 %14, label %dec_label_pc_42554f, label %dec_label_pc_42553b, !insn.addr !1595

dec_label_pc_42553b:                              ; preds = %dec_label_pc_425539
  %15 = add i32 %0, 49, !insn.addr !1596
  %16 = inttoptr i32 %15 to i8*, !insn.addr !1596
  %17 = load i8, i8* %16, align 1, !insn.addr !1596
  %18 = icmp ne i8 %17, 103, !insn.addr !1597
  %19 = icmp eq i8 %17, 71, !insn.addr !1598
  %20 = icmp eq i1 %19, false, !insn.addr !1599
  %or.cond = icmp eq i1 %18, %20
  br i1 %or.cond, label %dec_label_pc_42554f, label %dec_label_pc_42554a, !insn.addr !1600

dec_label_pc_42554a:                              ; preds = %dec_label_pc_42553b
  store i32 1, i32* %6, align 4, !insn.addr !1601
  br label %dec_label_pc_42554f, !insn.addr !1602

dec_label_pc_42554f:                              ; preds = %dec_label_pc_42553b, %dec_label_pc_42554a, %dec_label_pc_425539, %dec_label_pc_425533
  %21 = call i32 @function_403580(), !insn.addr !1603
  %22 = trunc i32 %21 to i8, !insn.addr !1604
  %23 = icmp eq i8 %22, 0, !insn.addr !1604
  %24 = icmp eq i1 %23, false, !insn.addr !1605
  br i1 %24, label %dec_label_pc_425572, label %dec_label_pc_425563, !insn.addr !1605

dec_label_pc_425563:                              ; preds = %dec_label_pc_42554f
  %25 = call i32 @function_403e4a(), !insn.addr !1606
  %26 = add i32 %25, -349, !insn.addr !1607
  store i32 %26, i32* %6, align 4, !insn.addr !1608
  br label %dec_label_pc_425572, !insn.addr !1608

dec_label_pc_425572:                              ; preds = %dec_label_pc_425563, %dec_label_pc_42554f
  %27 = add i32 %0, 64, !insn.addr !1609
  %28 = add i32 %0, 1092, !insn.addr !1610
  %29 = inttoptr i32 %28 to i32*, !insn.addr !1610
  %30 = load i32, i32* %29, align 4, !insn.addr !1610
  %31 = icmp eq i32 %30, 0, !insn.addr !1611
  %32 = icmp eq i1 %31, false, !insn.addr !1612
  %spec.select = select i1 %32, i32 %30, i32 %27
  %33 = add i32 %0, 52, !insn.addr !1613
  %34 = inttoptr i32 %33 to i32*, !insn.addr !1613
  store i32 %spec.select, i32* %34, align 4, !insn.addr !1613
  %35 = add i32 %0, 20, !insn.addr !1614
  %36 = inttoptr i32 %35 to i32*, !insn.addr !1614
  %37 = load i32, i32* %36, align 4, !insn.addr !1614
  %38 = add i32 %37, 8, !insn.addr !1614
  store i32 %38, i32* %36, align 4, !insn.addr !1614
  %39 = inttoptr i32 %37 to i32*, !insn.addr !1615
  %40 = load i32, i32* %39, align 4, !insn.addr !1615
  store i32 %40, i32* %stack_var_-12, align 4, !insn.addr !1616
  %41 = call i32 @function_403e4a(), !insn.addr !1617
  %42 = load i32, i32* %29, align 4, !insn.addr !1618
  %43 = icmp eq i32 %42, 0, !insn.addr !1619
  %44 = icmp eq i1 %43, false, !insn.addr !1620
  %ebx.0 = select i1 %44, i32 %42, i32 %27
  %45 = add i32 %0, 8, !insn.addr !1621
  %46 = inttoptr i32 %45 to i32*, !insn.addr !1621
  %47 = load i32, i32* %46, align 4, !insn.addr !1621
  %48 = add i32 %0, 49, !insn.addr !1622
  %49 = inttoptr i32 %48 to i8*, !insn.addr !1622
  %50 = load i8, i8* %49, align 1, !insn.addr !1622
  %51 = sext i8 %50 to i32, !insn.addr !1622
  %52 = add i32 %0, 4, !insn.addr !1623
  %53 = inttoptr i32 %52 to i32*, !insn.addr !1623
  %54 = load i32, i32* %53, align 4, !insn.addr !1623
  %55 = load i32, i32* %6, align 4, !insn.addr !1624
  %56 = call i32 @function_402441(i32 %41, i32 %51, i32 %55, i32 %41, i32 %54, i32 %47), !insn.addr !1625
  %57 = call i32 @function_403e4a(), !insn.addr !1626
  %58 = call i32 @function_402ed2(i32* nonnull %stack_var_-12, i32 %ebx.0, i32 %57), !insn.addr !1627
  %59 = load i32, i32* %2, align 4, !insn.addr !1628
  %60 = and i32 %59, 32
  %61 = icmp eq i32 %60, 0, !insn.addr !1629
  br i1 %61, label %dec_label_pc_4255f6, label %dec_label_pc_4255e3, !insn.addr !1630

dec_label_pc_4255e3:                              ; preds = %dec_label_pc_425572
  %62 = load i32, i32* %6, align 4, !insn.addr !1631
  %63 = icmp eq i32 %62, 0, !insn.addr !1631
  %64 = icmp eq i1 %63, false, !insn.addr !1632
  br i1 %64, label %dec_label_pc_4255f6, label %dec_label_pc_4255e9, !insn.addr !1632

dec_label_pc_4255e9:                              ; preds = %dec_label_pc_4255e3
  %65 = load i32, i32* %46, align 4, !insn.addr !1633
  %66 = load i32, i32* %34, align 4, !insn.addr !1634
  %67 = call i32 @function_401b5e(i32 %66, i32 %65), !insn.addr !1635
  br label %dec_label_pc_4255f6, !insn.addr !1636

dec_label_pc_4255f6:                              ; preds = %dec_label_pc_4255e9, %dec_label_pc_4255e3, %dec_label_pc_425572
  %68 = load i8, i8* %49, align 1, !insn.addr !1637
  %69 = icmp ne i8 %68, 103, !insn.addr !1638
  %70 = icmp eq i8 %68, 71, !insn.addr !1639
  %71 = icmp eq i1 %70, false, !insn.addr !1640
  %or.cond3 = icmp eq i1 %69, %71
  br i1 %or.cond3, label %dec_label_pc_425618, label %dec_label_pc_425601, !insn.addr !1641

dec_label_pc_425601:                              ; preds = %dec_label_pc_4255f6
  %72 = load i32, i32* %2, align 4, !insn.addr !1642
  %73 = and i32 %72, 32
  %74 = icmp eq i32 %73, 0, !insn.addr !1643
  %75 = icmp eq i1 %74, false, !insn.addr !1644
  br i1 %75, label %dec_label_pc_425618, label %dec_label_pc_42560b, !insn.addr !1644

dec_label_pc_42560b:                              ; preds = %dec_label_pc_425601
  %76 = load i32, i32* %46, align 4, !insn.addr !1645
  %77 = load i32, i32* %34, align 4, !insn.addr !1646
  %78 = call i32 @function_403f8f(i32 %77, i32 %76), !insn.addr !1647
  br label %dec_label_pc_425618, !insn.addr !1648

dec_label_pc_425618:                              ; preds = %dec_label_pc_4255f6, %dec_label_pc_42560b, %dec_label_pc_425601
  %79 = load i32, i32* %34, align 4, !insn.addr !1649
  %80 = inttoptr i32 %79 to i8*, !insn.addr !1650
  %81 = load i8, i8* %80, align 1, !insn.addr !1650
  %82 = icmp eq i8 %81, 45, !insn.addr !1651
  %83 = icmp eq i1 %82, false, !insn.addr !1652
  store i8 %81, i8* %.pn.in.reg2mem, !insn.addr !1652
  store i32 %79, i32* %edx.0.reg2mem, !insn.addr !1652
  br i1 %83, label %dec_label_pc_42562b, label %dec_label_pc_425621, !insn.addr !1652

dec_label_pc_425621:                              ; preds = %dec_label_pc_425618
  %84 = load i32, i32* %2, align 4, !insn.addr !1653
  %85 = or i32 %84, 64, !insn.addr !1653
  store i32 %85, i32* %2, align 4, !insn.addr !1653
  %86 = add i32 %79, 1, !insn.addr !1654
  store i32 %86, i32* %34, align 4, !insn.addr !1655
  %87 = inttoptr i32 %86 to i8*, !insn.addr !1656
  %88 = load i8, i8* %87, align 1, !insn.addr !1656
  store i8 %88, i8* %.pn.in.reg2mem, !insn.addr !1656
  store i32 %86, i32* %edx.0.reg2mem, !insn.addr !1656
  br label %dec_label_pc_42562b, !insn.addr !1656

dec_label_pc_42562b:                              ; preds = %dec_label_pc_425621, %dec_label_pc_425618
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %.pn.in.reload = load i8, i8* %.pn.in.reg2mem
  switch i8 %.pn.in.reload, label %dec_label_pc_425637 [
    i8 105, label %dec_label_pc_42563b
    i8 73, label %dec_label_pc_42563b
    i8 110, label %dec_label_pc_42563b
  ]

dec_label_pc_425637:                              ; preds = %dec_label_pc_42562b
  %89 = icmp eq i8 %.pn.in.reload, 78, !insn.addr !1657
  %90 = icmp eq i1 %89, false, !insn.addr !1658
  br i1 %90, label %dec_label_pc_425643, label %dec_label_pc_42563b, !insn.addr !1658

dec_label_pc_42563b:                              ; preds = %dec_label_pc_42562b, %dec_label_pc_42562b, %dec_label_pc_42562b, %dec_label_pc_425637
  %91 = load i32, i32* %2, align 4, !insn.addr !1659
  %92 = and i32 %91, -9, !insn.addr !1659
  store i32 %92, i32* %2, align 4, !insn.addr !1659
  store i8 115, i8* %49, align 1, !insn.addr !1660
  br label %dec_label_pc_425643, !insn.addr !1660

dec_label_pc_425643:                              ; preds = %dec_label_pc_42563b, %dec_label_pc_425637
  store i32 %edx.0.reload, i32* %edx.1.reg2mem, !insn.addr !1661
  br label %dec_label_pc_425646, !insn.addr !1661

dec_label_pc_425646:                              ; preds = %dec_label_pc_425646, %dec_label_pc_425643
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %93 = inttoptr i32 %edx.1.reload to i8*, !insn.addr !1662
  %94 = load i8, i8* %93, align 1, !insn.addr !1662
  %95 = add i32 %edx.1.reload, 1, !insn.addr !1663
  %96 = icmp eq i8 %94, 0, !insn.addr !1664
  %97 = icmp eq i1 %96, false, !insn.addr !1665
  store i32 %95, i32* %edx.1.reg2mem, !insn.addr !1665
  br i1 %97, label %dec_label_pc_425646, label %dec_label_pc_42564d, !insn.addr !1665

dec_label_pc_42564d:                              ; preds = %dec_label_pc_425646
  %98 = sub i32 %edx.1.reload, %edx.0.reload, !insn.addr !1666
  %99 = add i32 %0, 56, !insn.addr !1667
  %100 = inttoptr i32 %99 to i32*, !insn.addr !1667
  store i32 %98, i32* %100, align 4, !insn.addr !1667
  ret i1 true, !insn.addr !1668
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_c_tchar"(i32* %this, i8 %__formal) local_unnamed_addr {
dec_label_pc_4268c3:
  %.pre-phi4.reg2mem = alloca i32*, !insn.addr !1669
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 64, !insn.addr !1670
  %2 = call i32 @function_4032a6(), !insn.addr !1671
  %3 = trunc i32 %2 to i8, !insn.addr !1672
  %4 = icmp eq i8 %3, 0, !insn.addr !1672
  br i1 %4, label %dec_label_pc_42691e, label %dec_label_pc_4268e5, !insn.addr !1673

dec_label_pc_4268e5:                              ; preds = %dec_label_pc_4268c3
  %5 = add i32 %0, 20, !insn.addr !1674
  %6 = inttoptr i32 %5 to i32*, !insn.addr !1674
  %7 = load i32, i32* %6, align 4, !insn.addr !1674
  %8 = add i32 %7, 4, !insn.addr !1674
  store i32 %8, i32* %6, align 4, !insn.addr !1674
  %9 = add i32 %0, 1092
  %10 = inttoptr i32 %9 to i32*
  %11 = load i32, i32* %10, align 4, !insn.addr !1675
  %12 = icmp eq i32 %11, 0, !insn.addr !1676
  %13 = icmp eq i1 %12, false, !insn.addr !1677
  %spec.select = select i1 %13, i32 %11, i32 %1
  %14 = call i32 @function_403e4a(), !insn.addr !1678
  %15 = add i32 %0, 56, !insn.addr !1679
  %16 = inttoptr i32 %spec.select to i8*, !insn.addr !1680
  %17 = inttoptr i32 %15 to i32*, !insn.addr !1681
  %18 = call i32 @wctomb_s(i32* %17, i8* %16, i32 %14, i16 ptrtoint (i32* @80 to i16)), !insn.addr !1681
  %19 = icmp eq i32 %18, 0, !insn.addr !1682
  store i32* %10, i32** %.pre-phi4.reg2mem, !insn.addr !1683
  br i1 %19, label %dec_label_pc_42693d, label %dec_label_pc_426918, !insn.addr !1683

dec_label_pc_426918:                              ; preds = %dec_label_pc_4268e5
  %20 = add i32 %0, 48, !insn.addr !1684
  %21 = inttoptr i32 %20 to i8*, !insn.addr !1684
  store i8 1, i8* %21, align 1, !insn.addr !1684
  store i32* %10, i32** %.pre-phi4.reg2mem, !insn.addr !1685
  br label %dec_label_pc_42693d, !insn.addr !1685

dec_label_pc_42691e:                              ; preds = %dec_label_pc_4268c3
  %22 = add i32 %0, 1092
  %23 = inttoptr i32 %22 to i32*
  %24 = load i32, i32* %23, align 4, !insn.addr !1686
  %25 = icmp eq i32 %24, 0, !insn.addr !1687
  %26 = icmp eq i1 %25, false, !insn.addr !1688
  %spec.select2 = select i1 %26, i32 %24, i32 %1
  %27 = add i32 %0, 20, !insn.addr !1689
  %28 = inttoptr i32 %27 to i32*, !insn.addr !1689
  %29 = load i32, i32* %28, align 4, !insn.addr !1689
  %30 = add i32 %29, 4, !insn.addr !1689
  store i32 %30, i32* %28, align 4, !insn.addr !1689
  %31 = inttoptr i32 %29 to i8*, !insn.addr !1690
  %32 = load i8, i8* %31, align 1, !insn.addr !1690
  %33 = inttoptr i32 %spec.select2 to i8*, !insn.addr !1691
  store i8 %32, i8* %33, align 1, !insn.addr !1691
  %34 = add i32 %0, 56, !insn.addr !1692
  %35 = inttoptr i32 %34 to i32*, !insn.addr !1692
  store i32 1, i32* %35, align 4, !insn.addr !1692
  store i32* %23, i32** %.pre-phi4.reg2mem, !insn.addr !1692
  br label %dec_label_pc_42693d, !insn.addr !1692

dec_label_pc_42693d:                              ; preds = %dec_label_pc_42691e, %dec_label_pc_426918, %dec_label_pc_4268e5
  %.pre-phi4.reload = load i32*, i32** %.pre-phi4.reg2mem
  %36 = load i32, i32* %.pre-phi4.reload, align 4, !insn.addr !1693
  %37 = icmp eq i32 %36, 0, !insn.addr !1694
  %spec.select3 = select i1 %37, i32 %1, i32 %36
  %38 = add i32 %0, 52, !insn.addr !1695
  %39 = inttoptr i32 %38 to i32*, !insn.addr !1695
  store i32 %spec.select3, i32* %39, align 4, !insn.addr !1695
  ret i1 true, !insn.addr !1696
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_integer"(i32* %this, i32 %radix, i1 %capital_hexits) local_unnamed_addr {
dec_label_pc_4274ba:
  %storemerge.reg2mem = alloca i1, !insn.addr !1697
  %esp.0.in.reg2mem = alloca i32*, !insn.addr !1697
  %edi.1.reg2mem = alloca i32, !insn.addr !1697
  %ebx.1.reg2mem = alloca i32, !insn.addr !1697
  %ecx.0.reg2mem = alloca i32, !insn.addr !1697
  %edi.0.reg2mem = alloca i32, !insn.addr !1697
  %ebx.0.reg2mem = alloca i32, !insn.addr !1697
  %eax.0.reg2mem = alloca i32, !insn.addr !1697
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %1 = add i32 %0, 44, !insn.addr !1698
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1698
  %3 = load i32, i32* %2, align 4, !insn.addr !1698
  store i32 %3, i32* %stack_var_-24, align 4, !insn.addr !1698
  %4 = call i32 @"?to_integer_size@__crt_stdio_output@@YAIW4length_modifier@1@@Z"(i32 %3), !insn.addr !1699
  switch i32 %4, label %dec_label_pc_4274e8 [
    i32 1, label %dec_label_pc_427550
    i32 2, label %dec_label_pc_427533
    i32 4, label %dec_label_pc_427516
    i32 8, label %dec_label_pc_4274ff
  ]

dec_label_pc_4274e8:                              ; preds = %dec_label_pc_4274ba
  %5 = call i32* @_errno(), !insn.addr !1700
  store i32 22, i32* %5, align 4, !insn.addr !1701
  call void @_invalid_parameter_noinfo(), !insn.addr !1702
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !1703
  br label %dec_label_pc_427604, !insn.addr !1703

dec_label_pc_4274ff:                              ; preds = %dec_label_pc_4274ba
  %6 = add i32 %0, 20, !insn.addr !1704
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1704
  %8 = load i32, i32* %7, align 4, !insn.addr !1704
  %9 = add i32 %8, 8, !insn.addr !1704
  store i32 %9, i32* %7, align 4, !insn.addr !1704
  %10 = inttoptr i32 %8 to i32*, !insn.addr !1705
  %11 = load i32, i32* %10, align 4, !insn.addr !1705
  %12 = add i32 %8, 4, !insn.addr !1706
  %13 = inttoptr i32 %12 to i32*, !insn.addr !1706
  %14 = load i32, i32* %13, align 4, !insn.addr !1706
  store i32 %14, i32* %ebx.0.reg2mem, !insn.addr !1707
  store i32 %11, i32* %edi.0.reg2mem, !insn.addr !1707
  br label %dec_label_pc_427570, !insn.addr !1707

dec_label_pc_427516:                              ; preds = %dec_label_pc_4274ba
  %15 = add i32 %0, 32, !insn.addr !1708
  %16 = inttoptr i32 %15 to i32*, !insn.addr !1708
  %17 = load i32, i32* %16, align 4, !insn.addr !1708
  %18 = add i32 %0, 20, !insn.addr !1709
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1709
  %20 = load i32, i32* %19, align 4, !insn.addr !1709
  %21 = add i32 %20, 4, !insn.addr !1709
  store i32 %21, i32* %19, align 4, !insn.addr !1709
  %22 = and i32 %17, 16
  %23 = icmp eq i32 %22, 0, !insn.addr !1710
  %24 = inttoptr i32 %20 to i32*
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %eax.0.reg2mem, !insn.addr !1711
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !1711
  store i32 %25, i32* %edi.0.reg2mem, !insn.addr !1711
  br i1 %23, label %dec_label_pc_427570, label %dec_label_pc_42756b, !insn.addr !1711

dec_label_pc_427533:                              ; preds = %dec_label_pc_4274ba
  %26 = add i32 %0, 32, !insn.addr !1712
  %27 = inttoptr i32 %26 to i32*, !insn.addr !1712
  %28 = load i32, i32* %27, align 4, !insn.addr !1712
  %29 = add i32 %0, 20, !insn.addr !1713
  %30 = inttoptr i32 %29 to i32*, !insn.addr !1713
  %31 = load i32, i32* %30, align 4, !insn.addr !1713
  %32 = add i32 %31, 4, !insn.addr !1713
  store i32 %32, i32* %30, align 4, !insn.addr !1713
  %33 = and i32 %28, 16
  %34 = icmp eq i32 %33, 0, !insn.addr !1714
  %35 = inttoptr i32 %31 to i16*
  %36 = load i16, i16* %35, align 2
  br i1 %34, label %dec_label_pc_42754a, label %dec_label_pc_427544, !insn.addr !1715

dec_label_pc_427544:                              ; preds = %dec_label_pc_427533
  %37 = sext i16 %36 to i32, !insn.addr !1716
  store i32 %37, i32* %eax.0.reg2mem, !insn.addr !1717
  br label %dec_label_pc_42756b, !insn.addr !1717

dec_label_pc_42754a:                              ; preds = %dec_label_pc_427533
  %38 = zext i16 %36 to i32, !insn.addr !1718
  store i32 %38, i32* %eax.0.reg2mem, !insn.addr !1719
  br label %dec_label_pc_42756b, !insn.addr !1719

dec_label_pc_427550:                              ; preds = %dec_label_pc_4274ba
  %39 = add i32 %0, 32, !insn.addr !1720
  %40 = inttoptr i32 %39 to i32*, !insn.addr !1720
  %41 = load i32, i32* %40, align 4, !insn.addr !1720
  %42 = add i32 %0, 20, !insn.addr !1721
  %43 = inttoptr i32 %42 to i32*, !insn.addr !1721
  %44 = load i32, i32* %43, align 4, !insn.addr !1721
  %45 = add i32 %44, 4, !insn.addr !1721
  store i32 %45, i32* %43, align 4, !insn.addr !1721
  %46 = and i32 %41, 16
  %47 = icmp eq i32 %46, 0, !insn.addr !1722
  %48 = inttoptr i32 %44 to i8*
  %49 = load i8, i8* %48, align 1
  br i1 %47, label %dec_label_pc_427567, label %dec_label_pc_427561, !insn.addr !1723

dec_label_pc_427561:                              ; preds = %dec_label_pc_427550
  %50 = sext i8 %49 to i32, !insn.addr !1724
  store i32 %50, i32* %eax.0.reg2mem, !insn.addr !1725
  br label %dec_label_pc_42756b, !insn.addr !1725

dec_label_pc_427567:                              ; preds = %dec_label_pc_427550
  %51 = zext i8 %49 to i32, !insn.addr !1726
  store i32 %51, i32* %eax.0.reg2mem, !insn.addr !1726
  br label %dec_label_pc_42756b, !insn.addr !1726

dec_label_pc_42756b:                              ; preds = %dec_label_pc_427516, %dec_label_pc_427567, %dec_label_pc_427561, %dec_label_pc_42754a, %dec_label_pc_427544
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %52 = ashr i32 %eax.0.reload, 31, !insn.addr !1727
  store i32 %52, i32* %ebx.0.reg2mem, !insn.addr !1728
  store i32 %eax.0.reload, i32* %edi.0.reg2mem, !insn.addr !1728
  br label %dec_label_pc_427570, !insn.addr !1728

dec_label_pc_427570:                              ; preds = %dec_label_pc_427516, %dec_label_pc_42756b, %dec_label_pc_4274ff
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %53 = add i32 %0, 32, !insn.addr !1729
  %54 = inttoptr i32 %53 to i32*, !insn.addr !1729
  %55 = load i32, i32* %54, align 4, !insn.addr !1729
  %56 = and i32 %55, 16
  %57 = icmp eq i32 %56, 0, !insn.addr !1730
  store i32 %55, i32* %ecx.0.reg2mem, !insn.addr !1731
  store i32 %ebx.0.reload, i32* %ebx.1.reg2mem, !insn.addr !1731
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !1731
  br i1 %57, label %dec_label_pc_427593, label %dec_label_pc_42757c, !insn.addr !1731

dec_label_pc_42757c:                              ; preds = %dec_label_pc_427570
  %58 = icmp eq i32 %ebx.0.reload, 0, !insn.addr !1732
  %59 = icmp slt i32 %ebx.0.reload, 0, !insn.addr !1732
  %60 = icmp eq i1 %59, false, !insn.addr !1733
  %61 = icmp eq i1 %58, false, !insn.addr !1733
  %62 = icmp eq i1 %60, %61, !insn.addr !1733
  %or.cond = or i1 %60, %62
  store i32 %55, i32* %ecx.0.reg2mem, !insn.addr !1733
  store i32 %ebx.0.reload, i32* %ebx.1.reg2mem, !insn.addr !1733
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !1733
  br i1 %or.cond, label %dec_label_pc_427593, label %dec_label_pc_427586, !insn.addr !1733

dec_label_pc_427586:                              ; preds = %dec_label_pc_42757c
  %63 = sub i32 0, %edi.0.reload, !insn.addr !1734
  %64 = icmp ne i32 %edi.0.reload, 0, !insn.addr !1734
  %65 = zext i1 %64 to i32, !insn.addr !1735
  %66 = add i32 %ebx.0.reload, %65, !insn.addr !1735
  %67 = sub i32 0, %66, !insn.addr !1736
  %68 = or i32 %55, 64, !insn.addr !1737
  store i32 %68, i32* %54, align 4, !insn.addr !1738
  store i32 %68, i32* %ecx.0.reg2mem, !insn.addr !1738
  store i32 %67, i32* %ebx.1.reg2mem, !insn.addr !1738
  store i32 %63, i32* %edi.1.reg2mem, !insn.addr !1738
  br label %dec_label_pc_427593, !insn.addr !1738

dec_label_pc_427593:                              ; preds = %dec_label_pc_427586, %dec_label_pc_42757c, %dec_label_pc_427570
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %ebx.1.reload = load i32, i32* %ebx.1.reg2mem
  %69 = add i32 %0, 40, !insn.addr !1739
  %70 = inttoptr i32 %69 to i32*, !insn.addr !1739
  %71 = load i32, i32* %70, align 4, !insn.addr !1739
  %72 = icmp slt i32 %71, 0, !insn.addr !1739
  %73 = icmp eq i1 %72, false, !insn.addr !1740
  br i1 %73, label %dec_label_pc_4275a2, label %dec_label_pc_427599, !insn.addr !1740

dec_label_pc_427599:                              ; preds = %dec_label_pc_427593
  store i32 1, i32* %70, align 4, !insn.addr !1741
  store i32* %stack_var_-20, i32** %esp.0.in.reg2mem, !insn.addr !1742
  br label %dec_label_pc_4275b3, !insn.addr !1742

dec_label_pc_4275a2:                              ; preds = %dec_label_pc_427593
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  store i32 %71, i32* %stack_var_-24, align 4, !insn.addr !1743
  %74 = and i32 %ecx.0.reload, -9, !insn.addr !1744
  store i32 %74, i32* %54, align 4, !insn.addr !1745
  %75 = call i32 @function_403580(), !insn.addr !1746
  store i32* %stack_var_-24, i32** %esp.0.in.reg2mem, !insn.addr !1746
  br label %dec_label_pc_4275b3, !insn.addr !1746

dec_label_pc_4275b3:                              ; preds = %dec_label_pc_4275a2, %dec_label_pc_427599
  %esp.0.in.reload = load i32*, i32** %esp.0.in.reg2mem
  %76 = or i32 %edi.1.reload, %ebx.1.reload, !insn.addr !1747
  %77 = icmp eq i32 %76, 0, !insn.addr !1747
  %78 = icmp eq i1 %77, false, !insn.addr !1748
  br i1 %78, label %dec_label_pc_4275bd, label %dec_label_pc_4275b9, !insn.addr !1748

dec_label_pc_4275b9:                              ; preds = %dec_label_pc_4275b3
  %79 = load i32, i32* %54, align 4, !insn.addr !1749
  %80 = and i32 %79, -33, !insn.addr !1749
  store i32 %80, i32* %54, align 4, !insn.addr !1749
  br label %dec_label_pc_4275bd, !insn.addr !1749

dec_label_pc_4275bd:                              ; preds = %dec_label_pc_4275b9, %dec_label_pc_4275b3
  %81 = ptrtoint i32* %this to i32
  %esp.0 = ptrtoint i32* %esp.0.in.reload to i32
  %82 = icmp eq i32 %4, 8, !insn.addr !1750
  %83 = add i32 %esp.0, -4, !insn.addr !1751
  %84 = inttoptr i32 %83 to i32*, !insn.addr !1751
  store i32 %radix, i32* %84, align 4, !insn.addr !1751
  %85 = add i32 %0, 60, !insn.addr !1752
  %86 = inttoptr i32 %85 to i8*, !insn.addr !1752
  store i8 0, i8* %86, align 1, !insn.addr !1752
  %87 = add i32 %esp.0, -8, !insn.addr !1753
  %88 = inttoptr i32 %87 to i32*, !insn.addr !1753
  store i32 %81, i32* %88, align 4, !insn.addr !1753
  %89 = icmp eq i1 %82, false, !insn.addr !1754
  %90 = add i32 %esp.0, -12
  %91 = inttoptr i32 %90 to i32*
  br i1 %89, label %dec_label_pc_4275d8, label %dec_label_pc_4275cf, !insn.addr !1754

dec_label_pc_4275cf:                              ; preds = %dec_label_pc_4275bd
  store i32 %ebx.1.reload, i32* %91, align 4, !insn.addr !1755
  %92 = add i32 %esp.0, -16, !insn.addr !1756
  %93 = inttoptr i32 %92 to i32*, !insn.addr !1756
  store i32 %edi.1.reload, i32* %93, align 4, !insn.addr !1756
  %94 = call i32 @function_402fea(), !insn.addr !1757
  br label %dec_label_pc_4275de, !insn.addr !1758

dec_label_pc_4275d8:                              ; preds = %dec_label_pc_4275bd
  store i32 %edi.1.reload, i32* %91, align 4, !insn.addr !1759
  %95 = call i32 @function_402cb1(), !insn.addr !1760
  br label %dec_label_pc_4275de, !insn.addr !1760

dec_label_pc_4275de:                              ; preds = %dec_label_pc_4275d8, %dec_label_pc_4275cf
  %96 = load i32, i32* %54, align 4, !insn.addr !1761
  %97 = trunc i32 %96 to i8
  %98 = icmp sgt i8 %97, -1, !insn.addr !1762
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1763
  br i1 %98, label %dec_label_pc_427604, label %dec_label_pc_4275e8, !insn.addr !1763

dec_label_pc_4275e8:                              ; preds = %dec_label_pc_4275de
  %99 = add i32 %0, 56, !insn.addr !1764
  %100 = inttoptr i32 %99 to i32*, !insn.addr !1764
  %101 = load i32, i32* %100, align 4, !insn.addr !1764
  %102 = icmp eq i32 %101, 0, !insn.addr !1764
  %.pre = add i32 %0, 52
  %.pre1 = inttoptr i32 %.pre to i32*
  %.pre3 = load i32, i32* %.pre1, align 4
  br i1 %102, label %dec_label_pc_4275f6, label %dec_label_pc_4275ee, !insn.addr !1765

dec_label_pc_4275ee:                              ; preds = %dec_label_pc_4275e8
  %103 = inttoptr i32 %.pre3 to i8*, !insn.addr !1766
  %104 = load i8, i8* %103, align 1, !insn.addr !1766
  %105 = icmp eq i8 %104, 48, !insn.addr !1766
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1767
  br i1 %105, label %dec_label_pc_427604, label %dec_label_pc_4275f6, !insn.addr !1767

dec_label_pc_4275f6:                              ; preds = %dec_label_pc_4275e8, %dec_label_pc_4275ee
  %106 = add i32 %.pre3, -1, !insn.addr !1768
  store i32 %106, i32* %.pre1, align 4, !insn.addr !1768
  %107 = inttoptr i32 %106 to i8*, !insn.addr !1769
  store i8 48, i8* %107, align 1, !insn.addr !1769
  %108 = load i32, i32* %100, align 4, !insn.addr !1770
  %109 = add i32 %108, 1, !insn.addr !1770
  store i32 %109, i32* %100, align 4, !insn.addr !1770
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1770
  br label %dec_label_pc_427604, !insn.addr !1770

dec_label_pc_427604:                              ; preds = %dec_label_pc_4275de, %dec_label_pc_4275ee, %dec_label_pc_4275f6, %dec_label_pc_4274e8
  %storemerge.reload = load i1, i1* %storemerge.reg2mem
  ret i1 %storemerge.reload, !insn.addr !1771
}

declare i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_n"(i32*) local_unnamed_addr

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_o"(i32* %this) local_unnamed_addr {
dec_label_pc_428dc2:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 32, !insn.addr !1772
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1772
  %3 = load i32, i32* %2, align 4, !insn.addr !1772
  %4 = and i32 %3, 32
  %5 = icmp eq i32 %4, 0, !insn.addr !1773
  br i1 %5, label %dec_label_pc_428dd7, label %dec_label_pc_428dce, !insn.addr !1774

dec_label_pc_428dce:                              ; preds = %dec_label_pc_428dc2
  %6 = or i32 %3, 128, !insn.addr !1775
  store i32 %6, i32* %2, align 4, !insn.addr !1776
  br label %dec_label_pc_428dd7, !insn.addr !1776

dec_label_pc_428dd7:                              ; preds = %dec_label_pc_428dce, %dec_label_pc_428dc2
  %7 = call i32 @function_4034f9(i32 8, i32 0), !insn.addr !1777
  %8 = and i32 %7, 1
  %9 = icmp ne i32 %8, 0, !insn.addr !1778
  ret i1 %9, !insn.addr !1778
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_p"(i32* %this) local_unnamed_addr {
dec_label_pc_428f7a:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 40, !insn.addr !1779
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1779
  store i32 8, i32* %2, align 4, !insn.addr !1779
  %3 = add i32 %0, 44, !insn.addr !1780
  %4 = inttoptr i32 %3 to i32*, !insn.addr !1780
  store i32 10, i32* %4, align 4, !insn.addr !1780
  %5 = call i32 @function_4034f9(i32 16, i32 1), !insn.addr !1781
  %6 = and i32 %5, 1
  %7 = icmp ne i32 %6, 0, !insn.addr !1782
  ret i1 %7, !insn.addr !1782
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_s"(i32* %this) local_unnamed_addr {
dec_label_pc_4291d0:
  %storemerge.reg2mem = alloca i32, !insn.addr !1783
  %edi.1.reg2mem = alloca i32, !insn.addr !1783
  %edi.0.reg2mem = alloca i32, !insn.addr !1783
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 20, !insn.addr !1784
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1784
  %3 = load i32, i32* %2, align 4, !insn.addr !1784
  %4 = add i32 %3, 4, !insn.addr !1784
  store i32 %4, i32* %2, align 4, !insn.addr !1784
  %5 = add i32 %0, 40, !insn.addr !1785
  %6 = inttoptr i32 %5 to i32*, !insn.addr !1785
  %7 = load i32, i32* %6, align 4, !insn.addr !1785
  %8 = inttoptr i32 %3 to i32*, !insn.addr !1786
  %9 = load i32, i32* %8, align 4, !insn.addr !1786
  %10 = add i32 %0, 52, !insn.addr !1787
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1787
  store i32 %9, i32* %11, align 4, !insn.addr !1787
  %12 = icmp eq i32 %7, -1, !insn.addr !1788
  %13 = icmp eq i1 %12, false, !insn.addr !1789
  %spec.select = select i1 %13, i32 %7, i32 2147483647
  %14 = call i32 @function_4032a6(), !insn.addr !1790
  %15 = trunc i32 %14 to i8, !insn.addr !1791
  %16 = icmp eq i8 %15, 0, !insn.addr !1791
  %17 = icmp eq i32 %9, 0
  %18 = icmp eq i1 %17, false
  br i1 %16, label %dec_label_pc_429223, label %dec_label_pc_42920a, !insn.addr !1792

dec_label_pc_42920a:                              ; preds = %dec_label_pc_4291d0
  store i32 %9, i32* %edi.0.reg2mem, !insn.addr !1793
  br i1 %18, label %dec_label_pc_429216, label %dec_label_pc_42920e, !insn.addr !1793

dec_label_pc_42920e:                              ; preds = %dec_label_pc_42920a
  store i32 ptrtoint ([7 x i16]* @global_var_471358 to i32), i32* %11, align 4, !insn.addr !1794
  store i32 ptrtoint ([7 x i16]* @global_var_471358 to i32), i32* %edi.0.reg2mem, !insn.addr !1794
  br label %dec_label_pc_429216, !insn.addr !1794

dec_label_pc_429216:                              ; preds = %dec_label_pc_42920e, %dec_label_pc_42920a
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %19 = add i32 %0, 60, !insn.addr !1795
  %20 = inttoptr i32 %19 to i8*, !insn.addr !1795
  store i8 1, i8* %20, align 1, !insn.addr !1795
  %21 = inttoptr i32 %edi.0.reload to i16*
  %22 = call i32 @wcsnlen(i16* %21, i32 %spec.select), !insn.addr !1796
  store i32 %22, i32* %storemerge.reg2mem, !insn.addr !1797
  br label %dec_label_pc_429236, !insn.addr !1797

dec_label_pc_429223:                              ; preds = %dec_label_pc_4291d0
  store i32 %9, i32* %edi.1.reg2mem, !insn.addr !1798
  br i1 %18, label %dec_label_pc_42922f, label %dec_label_pc_429227, !insn.addr !1798

dec_label_pc_429227:                              ; preds = %dec_label_pc_429223
  store i32 ptrtoint ([7 x i8]* @global_var_471368 to i32), i32* %11, align 4, !insn.addr !1799
  store i32 ptrtoint ([7 x i8]* @global_var_471368 to i32), i32* %edi.1.reg2mem, !insn.addr !1799
  br label %dec_label_pc_42922f, !insn.addr !1799

dec_label_pc_42922f:                              ; preds = %dec_label_pc_429227, %dec_label_pc_429223
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %23 = inttoptr i32 %edi.1.reload to i8*, !insn.addr !1800
  %24 = call i32 @strnlen(i8* %23, i32 %spec.select), !insn.addr !1801
  store i32 %24, i32* %storemerge.reg2mem, !insn.addr !1801
  br label %dec_label_pc_429236, !insn.addr !1801

dec_label_pc_429236:                              ; preds = %dec_label_pc_42922f, %dec_label_pc_429216
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %25 = add i32 %0, 56, !insn.addr !1802
  %26 = inttoptr i32 %25 to i32*, !insn.addr !1802
  store i32 %storemerge.reload, i32* %26, align 4, !insn.addr !1802
  ret i1 true, !insn.addr !1803
}

declare i1 @"__crt_stdio_output::stream_output_adapter<char>::validate"(i32*) local_unnamed_addr

define i1 @"__crt_stdio_output::stream_output_adapter<char>::write_character_without_count_update"(i32* %this, i8 %c) local_unnamed_addr {
dec_label_pc_42b210:
  %storemerge.reg2mem = alloca i1, !insn.addr !1804
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 12, !insn.addr !1805
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1805
  %3 = load i32, i32* %2, align 4, !insn.addr !1805
  %4 = and i32 %3, 4096
  %5 = icmp eq i32 %4, 0, !insn.addr !1806
  br i1 %5, label %dec_label_pc_42b22e, label %dec_label_pc_42b222, !insn.addr !1807

dec_label_pc_42b222:                              ; preds = %dec_label_pc_42b210
  %6 = add i32 %0, 4, !insn.addr !1808
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1808
  %8 = load i32, i32* %7, align 4, !insn.addr !1808
  %9 = icmp eq i32 %8, 0, !insn.addr !1808
  %10 = icmp eq i1 %9, false, !insn.addr !1809
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !1809
  br i1 %10, label %dec_label_pc_42b22e, label %dec_label_pc_42b242, !insn.addr !1809

dec_label_pc_42b22e:                              ; preds = %dec_label_pc_42b222, %dec_label_pc_42b210
  %11 = ptrtoint i32* %this to i32
  %sext = mul i32 %11, 16777216
  %12 = sdiv i32 %sext, 16777216, !insn.addr !1810
  %13 = call i32 @_fputc_nolock(i32 %12, i32 %0), !insn.addr !1811
  %14 = icmp eq i32 %13, -1, !insn.addr !1812
  %15 = icmp eq i1 %14, false, !insn.addr !1813
  store i1 %15, i1* %storemerge.reg2mem, !insn.addr !1813
  br label %dec_label_pc_42b242, !insn.addr !1813

dec_label_pc_42b242:                              ; preds = %dec_label_pc_42b222, %dec_label_pc_42b22e
  %storemerge.reload = load i1, i1* %storemerge.reg2mem
  ret i1 %storemerge.reload, !insn.addr !1814
}

define i1 @"__crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::write_stored_string_tchar"(i32* %this, i8 %__formal) local_unnamed_addr {
dec_label_pc_42b43a:
  %edi.0.reg2mem = alloca i32, !insn.addr !1815
  %esp.0.reg2mem = alloca i32, !insn.addr !1815
  %ebx.0.reg2mem = alloca i32, !insn.addr !1815
  %0 = call i32 @__decompiler_undefined_function_0()
  %local_buffer_-16 = alloca [6 x i8], align 1
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %1 = add i32 %0, 60, !insn.addr !1816
  %2 = inttoptr i32 %1 to i8*, !insn.addr !1816
  %3 = load i8, i8* %2, align 1, !insn.addr !1816
  %4 = icmp eq i8 %3, 0, !insn.addr !1816
  br i1 %4, label %dec_label_pc_42b4b5, label %dec_label_pc_42b457, !insn.addr !1817

dec_label_pc_42b457:                              ; preds = %dec_label_pc_42b43a
  %5 = add i32 %0, 56, !insn.addr !1818
  %6 = inttoptr i32 %5 to i32*, !insn.addr !1818
  %7 = load i32, i32* %6, align 4, !insn.addr !1818
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %dec_label_pc_42b4b5, label %dec_label_pc_42b45e, !insn.addr !1819

dec_label_pc_42b45e:                              ; preds = %dec_label_pc_42b457
  %9 = ptrtoint i32* %stack_var_-32 to i32, !insn.addr !1820
  %10 = add i32 %0, 52, !insn.addr !1821
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1821
  %12 = load i32, i32* %11, align 4, !insn.addr !1821
  %13 = ptrtoint [6 x i8]* %local_buffer_-16 to i32, !insn.addr !1822
  %14 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !1823
  %15 = add i32 %0, 12
  %16 = add i32 %0, 24
  store i32 0, i32* %ebx.0.reg2mem
  store i32 %9, i32* %esp.0.reg2mem
  store i32 %12, i32* %edi.0.reg2mem
  br label %dec_label_pc_42b467

dec_label_pc_42b467:                              ; preds = %dec_label_pc_42b45e, %dec_label_pc_42b48d
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %17 = inttoptr i32 %edi.0.reload to i16*, !insn.addr !1824
  %18 = load i16, i16* %17, align 2, !insn.addr !1824
  %19 = zext i16 %18 to i32, !insn.addr !1824
  store i32 0, i32* %stack_var_-20, align 4, !insn.addr !1825
  %20 = add i32 %esp.0.reload, -4, !insn.addr !1826
  %21 = inttoptr i32 %20 to i32*, !insn.addr !1826
  store i32 %19, i32* %21, align 4, !insn.addr !1826
  %22 = add i32 %esp.0.reload, -8, !insn.addr !1827
  %23 = inttoptr i32 %22 to i32*, !insn.addr !1827
  store i32 6, i32* %23, align 4, !insn.addr !1827
  %24 = add i32 %esp.0.reload, -12, !insn.addr !1822
  %25 = inttoptr i32 %24 to i32*, !insn.addr !1822
  store i32 %13, i32* %25, align 4, !insn.addr !1822
  %26 = add i32 %esp.0.reload, -16, !insn.addr !1823
  %27 = inttoptr i32 %26 to i32*, !insn.addr !1823
  store i32 %14, i32* %27, align 4, !insn.addr !1823
  %28 = load i32, i32* %stack_var_-20, align 4, !insn.addr !1828
  %29 = inttoptr i32 %28 to i32*, !insn.addr !1828
  %30 = call i32 @wctomb_s(i32* %29, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i16 ptrtoint (i32* @80 to i16)), !insn.addr !1828
  %31 = icmp eq i32 %30, 0, !insn.addr !1829
  %32 = icmp eq i1 %31, false, !insn.addr !1830
  %33 = load i32, i32* %stack_var_-20, align 4, !insn.addr !1831
  %34 = icmp eq i32 %33, %30, !insn.addr !1831
  %or.cond = or i1 %32, %34
  br i1 %or.cond, label %dec_label_pc_42b4af, label %dec_label_pc_42b48d, !insn.addr !1830

dec_label_pc_42b48d:                              ; preds = %dec_label_pc_42b467
  %35 = add i32 %edi.0.reload, 2, !insn.addr !1832
  store i32 %15, i32* %21, align 4, !insn.addr !1833
  store i32 %16, i32* %23, align 4, !insn.addr !1834
  %36 = load i32, i32* %stack_var_-20, align 4, !insn.addr !1835
  store i32 %36, i32* %25, align 4, !insn.addr !1835
  store i32 %13, i32* %27, align 4, !insn.addr !1836
  %37 = call i32 @function_404147(), !insn.addr !1837
  %38 = add i32 %ebx.0.reload, 1, !insn.addr !1838
  %39 = load i32, i32* %6, align 4, !insn.addr !1839
  %40 = icmp eq i32 %38, %39, !insn.addr !1839
  %41 = icmp eq i1 %40, false, !insn.addr !1840
  store i32 %38, i32* %ebx.0.reg2mem, !insn.addr !1840
  store i32 %26, i32* %esp.0.reg2mem, !insn.addr !1840
  store i32 %35, i32* %edi.0.reg2mem, !insn.addr !1840
  br i1 %41, label %dec_label_pc_42b467, label %dec_label_pc_42b4ce, !insn.addr !1840

dec_label_pc_42b4af:                              ; preds = %dec_label_pc_42b467
  %42 = inttoptr i32 %16 to i32*, !insn.addr !1841
  store i32 -1, i32* %42, align 4, !insn.addr !1841
  br label %dec_label_pc_42b4ce, !insn.addr !1842

dec_label_pc_42b4b5:                              ; preds = %dec_label_pc_42b457, %dec_label_pc_42b43a
  %43 = call i32 @function_404147(), !insn.addr !1843
  br label %dec_label_pc_42b4ce, !insn.addr !1843

dec_label_pc_42b4ce:                              ; preds = %dec_label_pc_42b48d, %dec_label_pc_42b4b5, %dec_label_pc_42b4af
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !1844
  ret i1 false, !insn.addr !1845
}

define void @"__crt_stdio_output::stream_output_adapter<char>::write_string"(i32* %this, i8* %string, i32 %length, i32* %count_written, i32* %status) local_unnamed_addr {
dec_label_pc_42bbc4:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = add i32 %1, 12, !insn.addr !1846
  %3 = inttoptr i32 %2 to i32*, !insn.addr !1846
  %4 = load i32, i32* %3, align 4, !insn.addr !1846
  %5 = and i32 %4, 4096
  %6 = icmp eq i32 %5, 0, !insn.addr !1847
  br i1 %6, label %dec_label_pc_42bbea, label %dec_label_pc_42bbd6, !insn.addr !1848

dec_label_pc_42bbd6:                              ; preds = %dec_label_pc_42bbc4
  %7 = add i32 %1, 4, !insn.addr !1849
  %8 = inttoptr i32 %7 to i32*, !insn.addr !1849
  %9 = load i32, i32* %8, align 4, !insn.addr !1849
  %10 = icmp eq i32 %9, 0, !insn.addr !1849
  %11 = icmp eq i1 %10, false, !insn.addr !1850
  br i1 %11, label %dec_label_pc_42bbea, label %dec_label_pc_42bbde, !insn.addr !1850

dec_label_pc_42bbde:                              ; preds = %dec_label_pc_42bbd6
  %12 = ptrtoint i32* %this to i32
  %13 = bitcast i8* %string to i32*
  %14 = load i32, i32* %13, align 4, !insn.addr !1851
  %15 = add i32 %14, %12, !insn.addr !1851
  store i32 %15, i32* %13, align 4, !insn.addr !1851
  ret void, !insn.addr !1852

dec_label_pc_42bbea:                              ; preds = %dec_label_pc_42bbd6, %dec_label_pc_42bbc4
  %16 = call i32 @function_401852(i32 %0), !insn.addr !1853
  ret void, !insn.addr !1853
}

define void @"__crt_stdio_output::output_adapter_common<char,__crt_stdio_output::stream_output_adapter<char> >::write_string_impl"(i32* %this, i8* %string, i32 %length, i32* %count_written, i32* %status) local_unnamed_addr {
dec_label_pc_42bd3f:
  %esp.2.reg2mem = alloca i32, !insn.addr !1854
  %storemerge.reg2mem = alloca i32, !insn.addr !1854
  %esp.1.reg2mem = alloca i32, !insn.addr !1854
  %eax.0.reg2mem = alloca i32, !insn.addr !1854
  %esp.0.reg2mem = alloca i32, !insn.addr !1854
  %ebx.0.reg2mem = alloca i32, !insn.addr !1854
  %esi.0.reg2mem = alloca i32, !insn.addr !1854
  %stack_var_-28 = alloca i32, align 4
  %0 = load i32, i32* %count_written, align 4, !insn.addr !1855
  %1 = icmp eq i32 %0, 0, !insn.addr !1856
  %2 = icmp eq i1 %1, false, !insn.addr !1857
  store i32 %0, i32* %esi.0.reg2mem, !insn.addr !1857
  br i1 %2, label %dec_label_pc_42bd63, label %dec_label_pc_42bd57, !insn.addr !1857

dec_label_pc_42bd57:                              ; preds = %dec_label_pc_42bd3f
  %3 = call i32* @_errno(), !insn.addr !1858
  %4 = ptrtoint i32* %3 to i32, !insn.addr !1858
  store i32 %4, i32* %count_written, align 4, !insn.addr !1859
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !1859
  br label %dec_label_pc_42bd63, !insn.addr !1859

dec_label_pc_42bd63:                              ; preds = %dec_label_pc_42bd57, %dec_label_pc_42bd3f
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %5 = inttoptr i32 %esi.0.reload to i32*, !insn.addr !1860
  %6 = load i32, i32* %5, align 4, !insn.addr !1860
  store i32 0, i32* %5, align 4, !insn.addr !1861
  %7 = icmp eq i8* %string, null, !insn.addr !1862
  br i1 %7, label %dec_label_pc_42bdcc, label %dec_label_pc_42bd7a, !insn.addr !1863

dec_label_pc_42bd7a:                              ; preds = %dec_label_pc_42bd63
  %8 = ptrtoint i32* %this to i32
  %9 = ptrtoint i8* %string to i32, !insn.addr !1864
  %10 = add i32 %9, %8, !insn.addr !1865
  %11 = ptrtoint i32* %stack_var_-28 to i32, !insn.addr !1866
  %12 = inttoptr i32 %length to i32*
  store i32 %8, i32* %ebx.0.reg2mem, !insn.addr !1867
  store i32 %11, i32* %esp.0.reg2mem, !insn.addr !1867
  br label %dec_label_pc_42bd7e, !insn.addr !1867

dec_label_pc_42bd7e:                              ; preds = %dec_label_pc_42bdba, %dec_label_pc_42bd7a
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %13 = inttoptr i32 %ebx.0.reload to i8*, !insn.addr !1868
  %14 = load i8, i8* %13, align 1, !insn.addr !1868
  %15 = zext i8 %14 to i32, !insn.addr !1868
  %16 = add i32 %esp.0.reload, -4, !insn.addr !1869
  %17 = inttoptr i32 %16 to i32*, !insn.addr !1869
  store i32 %15, i32* %17, align 4, !insn.addr !1869
  %18 = call i32 @function_4040b6(), !insn.addr !1870
  %19 = trunc i32 %18 to i8, !insn.addr !1871
  %20 = icmp eq i8 %19, 0, !insn.addr !1871
  %21 = icmp eq i1 %20, false, !insn.addr !1872
  store i32 %16, i32* %esp.1.reg2mem, !insn.addr !1872
  br i1 %21, label %dec_label_pc_42bdb3, label %dec_label_pc_42bd8d, !insn.addr !1872

dec_label_pc_42bd8d:                              ; preds = %dec_label_pc_42bd7e
  %22 = load i32, i32* %count_written, align 4, !insn.addr !1873
  %23 = icmp eq i32 %22, 0, !insn.addr !1874
  %24 = icmp eq i1 %23, false, !insn.addr !1875
  store i32 %22, i32* %eax.0.reg2mem, !insn.addr !1875
  br i1 %24, label %dec_label_pc_42bda0, label %dec_label_pc_42bd96, !insn.addr !1875

dec_label_pc_42bd96:                              ; preds = %dec_label_pc_42bd8d
  %25 = call i32* @_errno(), !insn.addr !1876
  %26 = ptrtoint i32* %25 to i32, !insn.addr !1876
  store i32 %26, i32* %count_written, align 4, !insn.addr !1877
  store i32 %26, i32* %eax.0.reg2mem, !insn.addr !1877
  br label %dec_label_pc_42bda0, !insn.addr !1877

dec_label_pc_42bda0:                              ; preds = %dec_label_pc_42bd96, %dec_label_pc_42bd8d
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %27 = inttoptr i32 %eax.0.reload to i32*, !insn.addr !1878
  %28 = load i32, i32* %27, align 4, !insn.addr !1878
  %29 = icmp eq i32 %28, 42, !insn.addr !1878
  %30 = icmp eq i1 %29, false, !insn.addr !1879
  br i1 %30, label %dec_label_pc_42bdc5, label %dec_label_pc_42bda5, !insn.addr !1879

dec_label_pc_42bda5:                              ; preds = %dec_label_pc_42bda0
  %31 = add i32 %esp.0.reload, -8, !insn.addr !1880
  %32 = inttoptr i32 %31 to i32*, !insn.addr !1880
  store i32 63, i32* %32, align 4, !insn.addr !1880
  %33 = call i32 @function_4040b6(), !insn.addr !1881
  %34 = trunc i32 %33 to i8, !insn.addr !1882
  %35 = icmp eq i8 %34, 0, !insn.addr !1882
  store i32 %31, i32* %esp.1.reg2mem, !insn.addr !1883
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !1883
  store i32 %31, i32* %esp.2.reg2mem, !insn.addr !1883
  br i1 %35, label %dec_label_pc_42bdba, label %dec_label_pc_42bdb3, !insn.addr !1883

dec_label_pc_42bdb3:                              ; preds = %dec_label_pc_42bda5, %dec_label_pc_42bd7e
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %36 = load i32, i32* %12, align 4, !insn.addr !1884
  %37 = add i32 %36, 1, !insn.addr !1884
  store i32 %37, i32* %storemerge.reg2mem, !insn.addr !1885
  store i32 %esp.1.reload, i32* %esp.2.reg2mem, !insn.addr !1885
  br label %dec_label_pc_42bdba, !insn.addr !1885

dec_label_pc_42bdba:                              ; preds = %dec_label_pc_42bda5, %dec_label_pc_42bdb3
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  store i32 %storemerge.reload, i32* %12, align 4
  %38 = add i32 %ebx.0.reload, 1, !insn.addr !1886
  %39 = icmp eq i32 %38, %10, !insn.addr !1887
  %40 = icmp eq i1 %39, false, !insn.addr !1888
  store i32 %38, i32* %ebx.0.reg2mem, !insn.addr !1888
  store i32 %esp.2.reload, i32* %esp.0.reg2mem, !insn.addr !1888
  br i1 %40, label %dec_label_pc_42bd7e, label %dec_label_pc_42bdcc, !insn.addr !1888

dec_label_pc_42bdc5:                              ; preds = %dec_label_pc_42bda0
  store i32 -1, i32* %12, align 4, !insn.addr !1889
  br label %dec_label_pc_42bdcc, !insn.addr !1889

dec_label_pc_42bdcc:                              ; preds = %dec_label_pc_42bdba, %dec_label_pc_42bdc5, %dec_label_pc_42bd63
  %41 = load i32, i32* %5, align 4, !insn.addr !1890
  %42 = icmp eq i32 %41, 0, !insn.addr !1890
  %43 = icmp eq i1 %42, false, !insn.addr !1891
  %44 = icmp eq i32 %6, 0, !insn.addr !1892
  %or.cond = or i1 %44, %43
  br i1 %or.cond, label %dec_label_pc_42bdd7, label %dec_label_pc_42bdd5, !insn.addr !1891

dec_label_pc_42bdd5:                              ; preds = %dec_label_pc_42bdcc
  store i32 %6, i32* %5, align 4, !insn.addr !1893
  br label %dec_label_pc_42bdd7, !insn.addr !1893

dec_label_pc_42bdd7:                              ; preds = %dec_label_pc_42bdd5, %dec_label_pc_42bdcc
  ret void, !insn.addr !1894
}

define i32 @__acrt_locale_get_ctype_array_value(i16* %_Locale_pctype_array, i32 %_Char_value, i32 %_Mask) local_unnamed_addr {
dec_label_pc_42beff:
  %0 = add i32 %_Char_value, 1, !insn.addr !1895
  %1 = icmp ult i32 %0, 257
  br i1 %1, label %dec_label_pc_42bf11, label %dec_label_pc_42bf1d, !insn.addr !1896

dec_label_pc_42bf11:                              ; preds = %dec_label_pc_42beff
  %2 = ptrtoint i16* %_Locale_pctype_array to i32, !insn.addr !1897
  %3 = mul i32 %_Char_value, 2, !insn.addr !1898
  %4 = add i32 %3, %2, !insn.addr !1898
  %5 = inttoptr i32 %4 to i16*, !insn.addr !1898
  %6 = load i16, i16* %5, align 2, !insn.addr !1898
  %7 = zext i16 %6 to i32, !insn.addr !1898
  %8 = and i32 %7, %_Mask, !insn.addr !1899
  ret i32 %8, !insn.addr !1900

dec_label_pc_42bf1d:                              ; preds = %dec_label_pc_42beff
  ret i32 0, !insn.addr !1901
}

define i32 @__stdio_common_vfprintf(i64 %options, i32 %stream, i8* %format, i32 %locale, i8* %arglist) local_unnamed_addr {
dec_label_pc_42bf29:
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_-28 = alloca i8*, align 4
  %stack_var_-12 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  store i8* %format, i8** %stack_var_-12, align 4, !insn.addr !1902
  %0 = icmp eq i8* %format, null, !insn.addr !1903
  %1 = icmp eq i32 %locale, 0, !insn.addr !1904
  %or.cond = or i1 %0, %1
  br i1 %or.cond, label %dec_label_pc_42bf59, label %dec_label_pc_42bf72, !insn.addr !1905

dec_label_pc_42bf59:                              ; preds = %dec_label_pc_42bf29
  %2 = call i32* @_errno(), !insn.addr !1906
  store i32 22, i32* %2, align 4, !insn.addr !1907
  call void @_invalid_parameter_noinfo(), !insn.addr !1908
  ret i32 -1, !insn.addr !1909

dec_label_pc_42bf72:                              ; preds = %dec_label_pc_42bf29
  store i8* %format, i8** %stack_var_-28, align 4, !insn.addr !1910
  %3 = ptrtoint i8** %stack_var_-12 to i32, !insn.addr !1911
  store i32 %3, i32* %stack_var_-60, align 4, !insn.addr !1911
  store i8* %format, i8** %stack_var_-32, align 4, !insn.addr !1912
  %4 = ptrtoint i8** %stack_var_-32 to i32, !insn.addr !1913
  %5 = bitcast i8** %stack_var_-28 to i32*, !insn.addr !1914
  %6 = bitcast i8** %stack_var_-12 to i32*, !insn.addr !1914
  %7 = call i32 @"__crt_seh_guarded_call<int>::operator()<<lambda_c29ee0499b841886b80d843682cc403a>,<lambda_0be4ab1c2a6918fda4e39227d83ea893> &,<lambda_5a3ed3da325c8ea037a470278c0f2d16> >"(i32 %4, i32* nonnull %stack_var_-60, i32* nonnull %5, i32* nonnull %6), !insn.addr !1914
  ret i32 %7, !insn.addr !1915
}

define i64 @"__crt_strtox::divide"(%"__crt_strtox::big_integer"* %numerator, %"__crt_strtox::big_integer"* %denominator) local_unnamed_addr {
dec_label_pc_437c90:
  %merge.reg2mem = alloca i64, !insn.addr !1916
  %ecx.5.reg2mem = alloca i32, !insn.addr !1916
  %edx.4.reg2mem = alloca i32, !insn.addr !1916
  %eax.9.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-32.2.reg2mem = alloca i64, !insn.addr !1916
  %stack_var_-12.2.off0.reg2mem = alloca i32, !insn.addr !1916
  %.reg2mem127 = alloca i32, !insn.addr !1916
  %ebx.12.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-12.1.off0.reg2mem = alloca i32, !insn.addr !1916
  %.pre-phi.reg2mem = alloca i32, !insn.addr !1916
  %ebx.11.reg2mem = alloca i32, !insn.addr !1916
  %edi.9.reg2mem = alloca i32, !insn.addr !1916
  %esi.8.in.reg2mem = alloca i32, !insn.addr !1916
  %ebx.9.reg2mem = alloca i32, !insn.addr !1916
  %edx.3.reg2mem = alloca i32, !insn.addr !1916
  %edi.6.reg2mem = alloca i32, !insn.addr !1916
  %esi.5.reg2mem = alloca i32, !insn.addr !1916
  %ebx.7.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-24.1.reg2mem = alloca i32, !insn.addr !1916
  %uu_num_-40.2.in.in.reg2mem = alloca i32, !insn.addr !1916
  %esp.5.reg2mem = alloca i32, !insn.addr !1916
  %uu_quo_-72.3.reg2mem = alloca i64, !insn.addr !1916
  %stack_var_-8.1.off0.reg2mem = alloca i32, !insn.addr !1916
  %uu_quo_-68.3.off0.reg2mem = alloca i32, !insn.addr !1916
  %.reg2mem = alloca i32, !insn.addr !1916
  %edi.54792.reg2mem = alloca i32, !insn.addr !1916
  %ebx.44693.reg2mem = alloca i32, !insn.addr !1916
  %uu_quo_-68.1.off04494.reg2mem = alloca i32, !insn.addr !1916
  %uu_num_-40.1.off04395.reg2mem = alloca i32, !insn.addr !1916
  %uu_quo_-68.0.off081.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-8.0.off082.reg2mem = alloca i32, !insn.addr !1916
  %uu_quo_-72.083.reg2mem = alloca i64, !insn.addr !1916
  %esp.384.reg2mem = alloca i32, !insn.addr !1916
  %edi.485.reg2mem = alloca i32, !insn.addr !1916
  %edx.2.reg2mem = alloca i32, !insn.addr !1916
  %ecx.3.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-24.0.reg2mem = alloca i32, !insn.addr !1916
  %storemerge12.reg2mem = alloca i32, !insn.addr !1916
  %esp.2.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-80.0.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-64.0.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-60.0.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-28.1.in.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-12.0.off0.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-36.1.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-52.0.reg2mem = alloca i32, !insn.addr !1916
  %edx.1.reg2mem = alloca i32, !insn.addr !1916
  %esi.1.reg2mem = alloca i32, !insn.addr !1916
  %ecx.1.reg2mem = alloca i32, !insn.addr !1916
  %eax.0.reg2mem = alloca i32, !insn.addr !1916
  %edi.0.reg2mem = alloca i32, !insn.addr !1916
  %esi.0.reg2mem = alloca i32, !insn.addr !1916
  %esp.0.reg2mem = alloca i32, !insn.addr !1916
  %ebx.0.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-32.0.in.reg2mem = alloca i32, !insn.addr !1916
  %stack_var_-540 = alloca i32, align 4
  %stack_var_-556 = alloca i32, align 4
  %0 = getelementptr inbounds %"__crt_strtox::big_integer", %"__crt_strtox::big_integer"* %numerator, i32 0, i32 0
  %1 = load i32, i32* %0, align 4, !insn.addr !1917
  %2 = icmp eq i32 %1, 0, !insn.addr !1918
  store i64 0, i64* %merge.reg2mem, !insn.addr !1919
  br i1 %2, label %dec_label_pc_438111, label %dec_label_pc_437cab, !insn.addr !1919

dec_label_pc_437cab:                              ; preds = %dec_label_pc_437c90
  %3 = getelementptr inbounds %"__crt_strtox::big_integer", %"__crt_strtox::big_integer"* %denominator, i32 0, i32 0
  %4 = load i32, i32* %3, align 4, !insn.addr !1920
  %5 = icmp eq i32 %4, 0, !insn.addr !1921
  store i64 0, i64* %merge.reg2mem, !insn.addr !1922
  br i1 %5, label %dec_label_pc_438111, label %dec_label_pc_437cbb, !insn.addr !1922

dec_label_pc_437cbb:                              ; preds = %dec_label_pc_437cab
  %6 = ptrtoint %"__crt_strtox::big_integer"* %numerator to i32
  %7 = ptrtoint i32* %stack_var_-556 to i32, !insn.addr !1923
  %8 = ptrtoint %"__crt_strtox::big_integer"* %denominator to i32, !insn.addr !1924
  %9 = add i32 %4, -1, !insn.addr !1925
  %10 = add i32 %1, -1, !insn.addr !1926
  %11 = icmp eq i32 %9, 0, !insn.addr !1927
  %12 = icmp eq i1 %11, false, !insn.addr !1928
  br i1 %12, label %dec_label_pc_437df7, label %dec_label_pc_437ccc, !insn.addr !1928

dec_label_pc_437ccc:                              ; preds = %dec_label_pc_437cbb
  %13 = add i32 %8, 4, !insn.addr !1929
  %14 = inttoptr i32 %13 to i32*, !insn.addr !1929
  %15 = load i32, i32* %14, align 4, !insn.addr !1929
  %16 = icmp eq i32 %15, 1, !insn.addr !1930
  %17 = icmp eq i1 %16, false, !insn.addr !1931
  br i1 %17, label %dec_label_pc_437d06, label %dec_label_pc_437cd7, !insn.addr !1931

dec_label_pc_437cd7:                              ; preds = %dec_label_pc_437ccc
  %18 = add i32 %6, 4, !insn.addr !1932
  %19 = inttoptr i32 %18 to i32*, !insn.addr !1932
  %20 = load i32, i32* %19, align 4, !insn.addr !1932
  %21 = bitcast i32* %stack_var_-540 to i8*
  %22 = inttoptr i32 %18 to i8*, !insn.addr !1933
  store i32 %9, i32* %0, align 4, !insn.addr !1934
  %23 = call i32 @memcpy_s_1(i8* %22, i32 460, i8* nonnull %21, i32 %9), !insn.addr !1935
  %24 = sext i32 %20 to i64, !insn.addr !1936
  ret i64 %24, !insn.addr !1936

dec_label_pc_437d06:                              ; preds = %dec_label_pc_437ccc
  %25 = icmp eq i32 %10, 0, !insn.addr !1937
  %26 = icmp eq i1 %25, false, !insn.addr !1938
  br i1 %26, label %dec_label_pc_437d62, label %dec_label_pc_437d0a, !insn.addr !1938

dec_label_pc_437d0a:                              ; preds = %dec_label_pc_437d06
  %27 = add i32 %6, 4, !insn.addr !1939
  %28 = inttoptr i32 %27 to i32*, !insn.addr !1939
  %29 = load i32, i32* %28, align 4, !insn.addr !1939
  %30 = bitcast i32* %stack_var_-540 to i8*
  %31 = inttoptr i32 %27 to i8*, !insn.addr !1940
  store i32 %10, i32* %0, align 4, !insn.addr !1941
  %32 = call i32 @memcpy_s_1(i8* %31, i32 460, i8* nonnull %30, i32 %10), !insn.addr !1942
  %33 = udiv i32 %29, %15
  %34 = urem i32 %29, %15, !insn.addr !1943
  %35 = icmp ne i32 %34, 0, !insn.addr !1944
  store i32 %34, i32* %28, align 4, !insn.addr !1945
  %36 = zext i1 %35 to i32, !insn.addr !1946
  store i32 %36, i32* %0, align 4, !insn.addr !1947
  %37 = sext i32 %33 to i64, !insn.addr !1948
  ret i64 %37, !insn.addr !1948

dec_label_pc_437d62:                              ; preds = %dec_label_pc_437d06
  %38 = mul i32 %10, 4, !insn.addr !1949
  %39 = add i32 %6, 4
  %40 = add i32 %38, %39, !insn.addr !1950
  store i32 %40, i32* %stack_var_-32.0.in.reg2mem, !insn.addr !1951
  store i32 %6, i32* %ebx.0.reg2mem, !insn.addr !1951
  store i32 %7, i32* %esp.0.reg2mem, !insn.addr !1951
  store i32 %1, i32* %esi.0.reg2mem, !insn.addr !1951
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !1951
  br label %dec_label_pc_437d70, !insn.addr !1951

dec_label_pc_437d70:                              ; preds = %dec_label_pc_437d70, %dec_label_pc_437d62
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %stack_var_-32.0.in.reload = load i32, i32* %stack_var_-32.0.in.reg2mem
  %41 = add i32 %esp.0.reload, -4, !insn.addr !1952
  %42 = inttoptr i32 %41 to i32*, !insn.addr !1952
  store i32 %ebx.0.reload, i32* %42, align 4, !insn.addr !1952
  %43 = add i32 %esp.0.reload, -8, !insn.addr !1953
  %44 = inttoptr i32 %43 to i32*, !insn.addr !1953
  store i32 0, i32* %44, align 4, !insn.addr !1953
  %45 = add i32 %esp.0.reload, -12, !insn.addr !1954
  %46 = inttoptr i32 %45 to i32*, !insn.addr !1954
  store i32 %15, i32* %46, align 4, !insn.addr !1954
  %47 = inttoptr i32 %stack_var_-32.0.in.reload to i32*, !insn.addr !1955
  %48 = load i32, i32* %47, align 4, !insn.addr !1955
  %49 = add i32 %esp.0.reload, -16, !insn.addr !1956
  %50 = inttoptr i32 %49 to i32*, !insn.addr !1956
  store i32 %edi.0.reload, i32* %50, align 4, !insn.addr !1956
  %51 = add i32 %esp.0.reload, -20
  %52 = inttoptr i32 %51 to i32*
  store i32 %48, i32* %52, align 4, !insn.addr !1957
  %53 = call i32 @function_401500(), !insn.addr !1958
  %54 = load i32, i32* %52, align 4, !insn.addr !1959
  %55 = add i32 %stack_var_-32.0.in.reload, -4, !insn.addr !1960
  %56 = add i32 %esi.0.reload, -1, !insn.addr !1961
  %57 = icmp eq i32 %56, 0, !insn.addr !1961
  %58 = icmp eq i1 %57, false, !insn.addr !1962
  store i32 %55, i32* %stack_var_-32.0.in.reg2mem, !insn.addr !1962
  store i32 %54, i32* %ebx.0.reg2mem, !insn.addr !1962
  store i32 %49, i32* %esp.0.reg2mem, !insn.addr !1962
  store i32 %56, i32* %esi.0.reg2mem, !insn.addr !1962
  store i32 %stack_var_-32.0.in.reload, i32* %edi.0.reg2mem, !insn.addr !1962
  br i1 %58, label %dec_label_pc_437d70, label %dec_label_pc_437dad, !insn.addr !1962

dec_label_pc_437dad:                              ; preds = %dec_label_pc_437d70
  %phitmp16 = sext i32 %53 to i64
  store i32 0, i32* %52, align 4, !insn.addr !1963
  %59 = add i32 %esp.0.reload, -24, !insn.addr !1964
  %60 = inttoptr i32 %59 to i32*, !insn.addr !1964
  %61 = ptrtoint i32* %stack_var_-540 to i32, !insn.addr !1964
  store i32 %61, i32* %60, align 4, !insn.addr !1964
  store i32 0, i32* %0, align 4, !insn.addr !1965
  %62 = add i32 %esp.0.reload, -28, !insn.addr !1966
  %63 = inttoptr i32 %62 to i32*, !insn.addr !1966
  store i32 460, i32* %63, align 4, !insn.addr !1966
  %64 = add i32 %esp.0.reload, -32, !insn.addr !1967
  %65 = inttoptr i32 %64 to i32*, !insn.addr !1967
  store i32 %39, i32* %65, align 4, !insn.addr !1967
  %66 = call i32 @memcpy_s_1(i8* null, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !1968
  %67 = icmp eq i32 %ebx.0.reload, 0, !insn.addr !1969
  %68 = inttoptr i32 %39 to i32*, !insn.addr !1970
  store i32 %stack_var_-32.0.in.reload, i32* %68, align 4, !insn.addr !1970
  %69 = add i32 %6, 8, !insn.addr !1971
  %70 = inttoptr i32 %69 to i32*, !insn.addr !1971
  store i32 %ebx.0.reload, i32* %70, align 4, !insn.addr !1971
  %71 = select i1 %67, i32 1, i32 2, !insn.addr !1972
  store i32 %71, i32* %0, align 4, !insn.addr !1973
  ret i64 %phitmp16, !insn.addr !1974

dec_label_pc_437df7:                              ; preds = %dec_label_pc_437cbb
  %72 = icmp ult i32 %10, %9
  store i64 0, i64* %merge.reg2mem, !insn.addr !1975
  br i1 %72, label %dec_label_pc_438111, label %dec_label_pc_437dff, !insn.addr !1975

dec_label_pc_437dff:                              ; preds = %dec_label_pc_437df7
  %73 = sub i32 %10, %9, !insn.addr !1976
  %74 = icmp slt i32 %10, %73, !insn.addr !1977
  br i1 %74, label %dec_label_pc_437e2b, label %dec_label_pc_437e09, !insn.addr !1977

dec_label_pc_437e09:                              ; preds = %dec_label_pc_437dff
  %75 = mul i32 %9, 4, !insn.addr !1978
  %76 = mul i32 %10, 4, !insn.addr !1979
  %77 = add i32 %6, 4, !insn.addr !1980
  %78 = add i32 %77, %76, !insn.addr !1980
  %79 = add i32 %8, 4, !insn.addr !1978
  %80 = add i32 %79, %75, !insn.addr !1981
  store i32 %10, i32* %eax.0.reg2mem, !insn.addr !1981
  store i32 %78, i32* %ecx.1.reg2mem, !insn.addr !1981
  store i32 %80, i32* %esi.1.reg2mem, !insn.addr !1981
  br label %dec_label_pc_437e16, !insn.addr !1981

dec_label_pc_437e16:                              ; preds = %dec_label_pc_437e1c, %dec_label_pc_437e09
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %81 = inttoptr i32 %esi.1.reload to i32*, !insn.addr !1982
  %82 = load i32, i32* %81, align 4, !insn.addr !1982
  %83 = inttoptr i32 %ecx.1.reload to i32*, !insn.addr !1983
  %84 = load i32, i32* %83, align 4, !insn.addr !1983
  %85 = icmp eq i32 %82, %84, !insn.addr !1983
  %86 = icmp eq i1 %85, false, !insn.addr !1984
  br i1 %86, label %dec_label_pc_437e29, label %dec_label_pc_437e1c, !insn.addr !1984

dec_label_pc_437e1c:                              ; preds = %dec_label_pc_437e16
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %87 = add i32 %eax.0.reload, -1, !insn.addr !1985
  %88 = add i32 %esi.1.reload, -4, !insn.addr !1986
  %89 = add i32 %ecx.1.reload, -4, !insn.addr !1987
  %90 = icmp slt i32 %87, %73, !insn.addr !1988
  store i32 %87, i32* %eax.0.reg2mem, !insn.addr !1988
  store i32 %89, i32* %ecx.1.reg2mem, !insn.addr !1988
  store i32 %88, i32* %esi.1.reg2mem, !insn.addr !1988
  br i1 %90, label %dec_label_pc_437e2b, label %dec_label_pc_437e16, !insn.addr !1988

dec_label_pc_437e29:                              ; preds = %dec_label_pc_437e16
  %91 = icmp ult i32 %82, %84, !insn.addr !1983
  %92 = icmp eq i1 %91, false, !insn.addr !1989
  store i32 %73, i32* %edx.1.reg2mem, !insn.addr !1989
  br i1 %92, label %dec_label_pc_437e2c, label %dec_label_pc_437e2b, !insn.addr !1989

dec_label_pc_437e2b:                              ; preds = %dec_label_pc_437e1c, %dec_label_pc_437e29, %dec_label_pc_437dff
  %93 = add i32 %73, 1, !insn.addr !1990
  store i32 %93, i32* %edx.1.reg2mem, !insn.addr !1990
  br label %dec_label_pc_437e2c, !insn.addr !1990

dec_label_pc_437e2c:                              ; preds = %dec_label_pc_437e2b, %dec_label_pc_437e29
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %94 = icmp eq i32 %edx.1.reload, 0, !insn.addr !1991
  store i64 0, i64* %merge.reg2mem, !insn.addr !1992
  br i1 %94, label %dec_label_pc_438111, label %dec_label_pc_437e34, !insn.addr !1992

dec_label_pc_437e34:                              ; preds = %dec_label_pc_437e2c
  %95 = mul i32 %4, 4, !insn.addr !1993
  %96 = add i32 %95, %8
  %97 = inttoptr i32 %96 to i32*, !insn.addr !1993
  %98 = load i32, i32* %97, align 4, !insn.addr !1993
  %99 = add i32 %96, -4, !insn.addr !1994
  %100 = inttoptr i32 %99 to i32*, !insn.addr !1994
  %101 = load i32, i32* %100, align 4, !insn.addr !1994
  %102 = call i32 @llvm.ctlz.i32(i32 %98, i1 false), !range !1995, !insn.addr !1996
  %103 = sub nsw i32 32, %102, !insn.addr !1997
  %104 = icmp eq i32 %102, 0, !insn.addr !1998
  store i32 %98, i32* %stack_var_-52.0.reg2mem, !insn.addr !1999
  store i32 %101, i32* %stack_var_-36.1.reg2mem, !insn.addr !1999
  br i1 %104, label %dec_label_pc_437e92, label %dec_label_pc_437e6b, !insn.addr !1999

dec_label_pc_437e6b:                              ; preds = %dec_label_pc_437e34
  %105 = and i32 %103, 31, !insn.addr !2000
  %106 = lshr i32 %101, %105
  %107 = and i32 %102, 31, !insn.addr !2001
  %108 = shl i32 %101, %107
  %109 = shl i32 %98, %107
  %110 = or i32 %106, %109, !insn.addr !2002
  %111 = icmp ult i32 %4, 3
  store i32 %110, i32* %stack_var_-52.0.reg2mem, !insn.addr !2003
  store i32 %108, i32* %stack_var_-36.1.reg2mem, !insn.addr !2003
  br i1 %111, label %dec_label_pc_437e92, label %dec_label_pc_437e83, !insn.addr !2003

dec_label_pc_437e83:                              ; preds = %dec_label_pc_437e6b
  %112 = add i32 %96, -8, !insn.addr !2004
  %113 = inttoptr i32 %112 to i32*, !insn.addr !2004
  %114 = load i32, i32* %113, align 4, !insn.addr !2004
  %115 = lshr i32 %114, %105
  %116 = or i32 %115, %108, !insn.addr !2005
  store i32 %110, i32* %stack_var_-52.0.reg2mem, !insn.addr !2005
  store i32 %116, i32* %stack_var_-36.1.reg2mem, !insn.addr !2005
  br label %dec_label_pc_437e92, !insn.addr !2005

dec_label_pc_437e92:                              ; preds = %dec_label_pc_437e83, %dec_label_pc_437e6b, %dec_label_pc_437e34
  %117 = add i32 %edx.1.reload, -1, !insn.addr !2006
  %118 = icmp slt i32 %117, 0, !insn.addr !2006
  store i32 %1, i32* %.reg2mem127, !insn.addr !2007
  store i32 %10, i32* %stack_var_-12.2.off0.reg2mem, !insn.addr !2007
  store i64 0, i64* %stack_var_-32.2.reg2mem, !insn.addr !2007
  br i1 %118, label %dec_label_pc_4380d5, label %dec_label_pc_437ea7, !insn.addr !2007

dec_label_pc_437ea7:                              ; preds = %dec_label_pc_437e92
  %stack_var_-36.1.reload = load i32, i32* %stack_var_-36.1.reg2mem
  %stack_var_-52.0.reload = load i32, i32* %stack_var_-52.0.reg2mem
  %119 = add i32 %117, %4, !insn.addr !2008
  %120 = add i32 %6, 4, !insn.addr !2009
  %121 = mul i32 %117, 4, !insn.addr !2010
  %122 = add i32 %120, %121, !insn.addr !2010
  %123 = add i32 %6, -4, !insn.addr !2011
  %124 = mul i32 %119, 4, !insn.addr !2012
  %125 = add i32 %123, %124, !insn.addr !2012
  %126 = and i32 %103, 31
  %127 = and i32 %102, 31
  %128 = add i32 %6, -8
  store i32 %10, i32* %stack_var_-12.0.off0.reg2mem, !insn.addr !2013
  store i32 %117, i32* %stack_var_-28.1.in.reg2mem, !insn.addr !2013
  store i32 %119, i32* %stack_var_-60.0.reg2mem, !insn.addr !2013
  store i32 %122, i32* %stack_var_-64.0.reg2mem, !insn.addr !2013
  store i32 %125, i32* %stack_var_-80.0.reg2mem, !insn.addr !2013
  store i32 %7, i32* %esp.2.reg2mem, !insn.addr !2013
  br label %dec_label_pc_437ec2, !insn.addr !2013

dec_label_pc_437ec2:                              ; preds = %dec_label_pc_43809f, %dec_label_pc_437ea7
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %stack_var_-80.0.reload = load i32, i32* %stack_var_-80.0.reg2mem
  %stack_var_-64.0.reload = load i32, i32* %stack_var_-64.0.reg2mem
  %stack_var_-60.0.reload = load i32, i32* %stack_var_-60.0.reg2mem
  %stack_var_-28.1.in.reload = load i32, i32* %stack_var_-28.1.in.reg2mem
  %stack_var_-12.0.off0.reload = load i32, i32* %stack_var_-12.0.off0.reg2mem
  %129 = icmp ugt i32 %stack_var_-60.0.reload, %stack_var_-12.0.off0.reload
  store i32 0, i32* %storemerge12.reg2mem, !insn.addr !2014
  br i1 %129, label %dec_label_pc_437ece, label %dec_label_pc_437ec7, !insn.addr !2014

dec_label_pc_437ec7:                              ; preds = %dec_label_pc_437ec2
  %130 = add i32 %stack_var_-80.0.reload, 8, !insn.addr !2015
  %131 = inttoptr i32 %130 to i32*, !insn.addr !2015
  %132 = load i32, i32* %131, align 4, !insn.addr !2015
  store i32 %132, i32* %storemerge12.reg2mem, !insn.addr !2016
  br label %dec_label_pc_437ece, !insn.addr !2016

dec_label_pc_437ece:                              ; preds = %dec_label_pc_437ec2, %dec_label_pc_437ec7
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %133 = add i32 %stack_var_-80.0.reload, 4, !insn.addr !2017
  %134 = inttoptr i32 %133 to i32*, !insn.addr !2017
  %135 = load i32, i32* %134, align 4, !insn.addr !2017
  %136 = inttoptr i32 %stack_var_-80.0.reload to i32*, !insn.addr !2018
  %137 = load i32, i32* %136, align 4, !insn.addr !2018
  store i32 %137, i32* %stack_var_-24.0.reg2mem, !insn.addr !2019
  store i32 %137, i32* %ecx.3.reg2mem, !insn.addr !2019
  store i32 %135, i32* %edx.2.reg2mem, !insn.addr !2019
  br i1 %104, label %dec_label_pc_437f30, label %dec_label_pc_437ee7, !insn.addr !2019

dec_label_pc_437ee7:                              ; preds = %dec_label_pc_437ece
  %138 = lshr i32 %137, %126
  %139 = call i32 @function_402e69(), !insn.addr !2020
  %140 = or i32 %139, %138, !insn.addr !2021
  %141 = shl i32 %137, %127
  %142 = icmp ult i32 %stack_var_-60.0.reload, 3, !insn.addr !2022
  store i32 %141, i32* %stack_var_-24.0.reg2mem, !insn.addr !2023
  store i32 %102, i32* %ecx.3.reg2mem, !insn.addr !2023
  store i32 %140, i32* %edx.2.reg2mem, !insn.addr !2023
  br i1 %142, label %dec_label_pc_437f30, label %dec_label_pc_437f19, !insn.addr !2023

dec_label_pc_437f19:                              ; preds = %dec_label_pc_437ee7
  %143 = add i32 %stack_var_-28.1.in.reload, %4, !insn.addr !2024
  %144 = mul i32 %143, 4, !insn.addr !2025
  %145 = add i32 %128, %144, !insn.addr !2025
  %146 = inttoptr i32 %145 to i32*, !insn.addr !2025
  %147 = load i32, i32* %146, align 4, !insn.addr !2025
  %148 = lshr i32 %147, %126
  %149 = or i32 %148, %141, !insn.addr !2026
  store i32 %149, i32* %stack_var_-24.0.reg2mem, !insn.addr !2027
  store i32 %103, i32* %ecx.3.reg2mem, !insn.addr !2027
  store i32 %140, i32* %edx.2.reg2mem, !insn.addr !2027
  br label %dec_label_pc_437f30, !insn.addr !2027

dec_label_pc_437f30:                              ; preds = %dec_label_pc_437f19, %dec_label_pc_437ee7, %dec_label_pc_437ece
  %edx.2.reload = load i32, i32* %edx.2.reg2mem
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %stack_var_-24.0.reload = load i32, i32* %stack_var_-24.0.reg2mem
  %150 = add i32 %esp.2.reload, -4, !insn.addr !2028
  %151 = inttoptr i32 %150 to i32*, !insn.addr !2028
  store i32 %6, i32* %151, align 4, !insn.addr !2028
  %152 = add i32 %esp.2.reload, -8, !insn.addr !2029
  %153 = inttoptr i32 %152 to i32*, !insn.addr !2029
  store i32 0, i32* %153, align 4, !insn.addr !2029
  %154 = add i32 %esp.2.reload, -12, !insn.addr !2030
  %155 = inttoptr i32 %154 to i32*, !insn.addr !2030
  store i32 %stack_var_-52.0.reload, i32* %155, align 4, !insn.addr !2030
  %156 = add i32 %esp.2.reload, -16, !insn.addr !2031
  %157 = inttoptr i32 %156 to i32*, !insn.addr !2031
  store i32 %storemerge12.reload, i32* %157, align 4, !insn.addr !2031
  %158 = add i32 %esp.2.reload, -20, !insn.addr !2032
  %159 = inttoptr i32 %158 to i32*, !insn.addr !2032
  store i32 %edx.2.reload, i32* %159, align 4, !insn.addr !2032
  %160 = call i32 @function_401500(), !insn.addr !2033
  %161 = sext i32 %160 to i64, !insn.addr !2034
  %162 = icmp eq i32 %edx.2.reload, 0, !insn.addr !2035
  %163 = icmp eq i1 %162, false, !insn.addr !2036
  store i32 %ecx.3.reload, i32* %edi.485.reg2mem, !insn.addr !2036
  store i32 %156, i32* %esp.384.reg2mem, !insn.addr !2036
  store i64 %161, i64* %uu_quo_-72.083.reg2mem, !insn.addr !2036
  store i32 %160, i32* %stack_var_-8.0.off082.reg2mem, !insn.addr !2036
  store i32 %edx.2.reload, i32* %uu_quo_-68.0.off081.reg2mem, !insn.addr !2036
  br i1 %163, label %dec_label_pc_437f8c, label %dec_label_pc_437f97.preheader, !insn.addr !2036

dec_label_pc_437f8c:                              ; preds = %dec_label_pc_437f30
  store i32 0, i32* %159, align 4, !insn.addr !2037
  %164 = add i32 %esp.2.reload, -24, !insn.addr !2038
  %165 = inttoptr i32 %164 to i32*, !insn.addr !2038
  store i32 %stack_var_-52.0.reload, i32* %165, align 4, !insn.addr !2038
  %166 = add i32 %160, 1, !insn.addr !2039
  %167 = icmp eq i32 %160, -1, !insn.addr !2039
  %168 = zext i1 %167 to i32, !insn.addr !2040
  %169 = add i32 %edx.2.reload, -1, !insn.addr !2040
  %170 = add i32 %169, %168, !insn.addr !2040
  %171 = add i32 %esp.2.reload, -28, !insn.addr !2041
  %172 = inttoptr i32 %171 to i32*, !insn.addr !2041
  store i32 %170, i32* %172, align 4, !insn.addr !2041
  %173 = add i32 %esp.2.reload, -32, !insn.addr !2042
  %174 = inttoptr i32 %173 to i32*, !insn.addr !2042
  store i32 %166, i32* %174, align 4, !insn.addr !2042
  %175 = call i32 @function_401d89(), !insn.addr !2043
  %176 = add i32 %175, %ecx.3.reload, !insn.addr !2044
  %177 = icmp ult i32 %176, %ecx.3.reload, !insn.addr !2044
  %178 = sext i1 %177 to i32, !insn.addr !2045
  %179 = icmp eq i32 %edx.2.reload, %178, !insn.addr !2046
  store i32 %176, i32* %edi.485.reg2mem, !insn.addr !2047
  store i32 %173, i32* %esp.384.reg2mem, !insn.addr !2047
  store i64 -1, i64* %uu_quo_-72.083.reg2mem, !insn.addr !2047
  store i32 -1, i32* %stack_var_-8.0.off082.reg2mem, !insn.addr !2047
  store i32 0, i32* %uu_quo_-68.0.off081.reg2mem, !insn.addr !2047
  store i32 0, i32* %uu_quo_-68.3.off0.reg2mem, !insn.addr !2047
  store i32 -1, i32* %stack_var_-8.1.off0.reg2mem, !insn.addr !2047
  store i64 -1, i64* %uu_quo_-72.3.reg2mem, !insn.addr !2047
  store i32 %173, i32* %esp.5.reg2mem, !insn.addr !2047
  br i1 %179, label %dec_label_pc_437f97.preheader, label %dec_label_pc_437fe0, !insn.addr !2047

dec_label_pc_437f97.preheader:                    ; preds = %dec_label_pc_437f30, %dec_label_pc_437f8c
  %uu_quo_-68.0.off081.reload = load i32, i32* %uu_quo_-68.0.off081.reg2mem
  %stack_var_-8.0.off082.reload = load i32, i32* %stack_var_-8.0.off082.reg2mem
  %uu_quo_-72.083.reload = load i64, i64* %uu_quo_-72.083.reg2mem
  %esp.384.reload = load i32, i32* %esp.384.reg2mem
  %edi.485.reload = load i32, i32* %edi.485.reg2mem
  %180 = add i32 %esp.384.reload, -4, !insn.addr !2048
  %181 = inttoptr i32 %180 to i32*, !insn.addr !2048
  store i32 %uu_quo_-68.0.off081.reload, i32* %181, align 4, !insn.addr !2048
  %182 = add i32 %esp.384.reload, -8, !insn.addr !2049
  %183 = inttoptr i32 %182 to i32*, !insn.addr !2049
  store i32 %stack_var_-8.0.off082.reload, i32* %183, align 4, !insn.addr !2049
  %184 = add i32 %esp.384.reload, -12, !insn.addr !2050
  %185 = inttoptr i32 %184 to i32*, !insn.addr !2050
  store i32 0, i32* %185, align 4, !insn.addr !2050
  %186 = add i32 %esp.384.reload, -16, !insn.addr !2051
  %187 = inttoptr i32 %186 to i32*, !insn.addr !2051
  store i32 %stack_var_-36.1.reload, i32* %187, align 4, !insn.addr !2051
  %188 = call i32 @function_401d89(), !insn.addr !2052
  %189 = icmp ult i32 %edx.2.reload, %edi.485.reload, !insn.addr !2053
  store i32 %uu_quo_-68.0.off081.reload, i32* %uu_quo_-68.3.off0.reg2mem, !insn.addr !2054
  store i32 %stack_var_-8.0.off082.reload, i32* %stack_var_-8.1.off0.reg2mem, !insn.addr !2054
  store i64 %uu_quo_-72.083.reload, i64* %uu_quo_-72.3.reg2mem, !insn.addr !2054
  store i32 %186, i32* %esp.5.reg2mem, !insn.addr !2054
  br i1 %189, label %dec_label_pc_437fe0, label %dec_label_pc_437fb1.preheader, !insn.addr !2054

dec_label_pc_437fb1.preheader:                    ; preds = %dec_label_pc_437f97.preheader
  %190 = icmp ugt i32 %edx.2.reload, %edi.485.reload
  %191 = icmp ugt i32 %188, %stack_var_-24.0.reload
  %or.cond91 = or i1 %191, %190
  store i32 0, i32* %uu_num_-40.1.off04395.reg2mem, !insn.addr !2055
  store i32 %uu_quo_-68.0.off081.reload, i32* %uu_quo_-68.1.off04494.reg2mem, !insn.addr !2055
  store i32 %stack_var_-8.0.off082.reload, i32* %ebx.44693.reg2mem, !insn.addr !2055
  store i32 %edi.485.reload, i32* %edi.54792.reg2mem, !insn.addr !2055
  store i32 %186, i32* %.reg2mem, !insn.addr !2055
  store i32 %uu_quo_-68.0.off081.reload, i32* %uu_quo_-68.3.off0.reg2mem, !insn.addr !2055
  store i32 %stack_var_-8.0.off082.reload, i32* %stack_var_-8.1.off0.reg2mem, !insn.addr !2055
  store i64 %uu_quo_-72.083.reload, i64* %uu_quo_-72.3.reg2mem, !insn.addr !2055
  store i32 %186, i32* %esp.5.reg2mem, !insn.addr !2055
  br i1 %or.cond91, label %dec_label_pc_437fb8, label %dec_label_pc_437fe0, !insn.addr !2055

dec_label_pc_437f97:                              ; preds = %dec_label_pc_437fb8
  %192 = add i32 %.reload, -4, !insn.addr !2048
  %193 = inttoptr i32 %192 to i32*, !insn.addr !2048
  store i32 %209, i32* %193, align 4, !insn.addr !2048
  %194 = add i32 %.reload, -8, !insn.addr !2049
  %195 = inttoptr i32 %194 to i32*, !insn.addr !2049
  store i32 %204, i32* %195, align 4, !insn.addr !2049
  %196 = add i32 %.reload, -12, !insn.addr !2050
  %197 = inttoptr i32 %196 to i32*, !insn.addr !2050
  store i32 0, i32* %197, align 4, !insn.addr !2050
  %198 = add i32 %.reload, -16, !insn.addr !2051
  %199 = inttoptr i32 %198 to i32*, !insn.addr !2051
  store i32 %stack_var_-36.1.reload, i32* %199, align 4, !insn.addr !2051
  %200 = call i32 @function_401d89(), !insn.addr !2052
  %201 = icmp ult i32 %edx.2.reload, %210, !insn.addr !2053
  store i32 %209, i32* %uu_quo_-68.3.off0.reg2mem, !insn.addr !2054
  store i32 %204, i32* %stack_var_-8.1.off0.reg2mem, !insn.addr !2054
  store i64 %206, i64* %uu_quo_-72.3.reg2mem, !insn.addr !2054
  store i32 %198, i32* %esp.5.reg2mem, !insn.addr !2054
  br i1 %201, label %dec_label_pc_437fe0, label %dec_label_pc_437fb1, !insn.addr !2054

dec_label_pc_437fb1:                              ; preds = %dec_label_pc_437f97
  %202 = icmp ugt i32 %edx.2.reload, %210
  %203 = icmp ugt i32 %200, %stack_var_-24.0.reload
  %or.cond = or i1 %203, %202
  store i32 %213, i32* %uu_num_-40.1.off04395.reg2mem, !insn.addr !2055
  store i32 %209, i32* %uu_quo_-68.1.off04494.reg2mem, !insn.addr !2055
  store i32 %204, i32* %ebx.44693.reg2mem, !insn.addr !2055
  store i32 %210, i32* %edi.54792.reg2mem, !insn.addr !2055
  store i32 %198, i32* %.reg2mem, !insn.addr !2055
  store i32 %209, i32* %uu_quo_-68.3.off0.reg2mem, !insn.addr !2055
  store i32 %204, i32* %stack_var_-8.1.off0.reg2mem, !insn.addr !2055
  store i64 %206, i64* %uu_quo_-72.3.reg2mem, !insn.addr !2055
  store i32 %198, i32* %esp.5.reg2mem, !insn.addr !2055
  br i1 %or.cond, label %dec_label_pc_437fb8, label %dec_label_pc_437fe0, !insn.addr !2055

dec_label_pc_437fb8:                              ; preds = %dec_label_pc_437fb1.preheader, %dec_label_pc_437fb1
  %.reload = load i32, i32* %.reg2mem
  %edi.54792.reload = load i32, i32* %edi.54792.reg2mem
  %ebx.44693.reload = load i32, i32* %ebx.44693.reg2mem
  %uu_quo_-68.1.off04494.reload = load i32, i32* %uu_quo_-68.1.off04494.reg2mem
  %uu_num_-40.1.off04395.reload = load i32, i32* %uu_num_-40.1.off04395.reg2mem
  %204 = add i32 %ebx.44693.reload, -1, !insn.addr !2056
  %205 = icmp ne i32 %ebx.44693.reload, 0, !insn.addr !2056
  %206 = sext i32 %204 to i64, !insn.addr !2057
  %207 = zext i1 %205 to i32, !insn.addr !2058
  %208 = add i32 %uu_quo_-68.1.off04494.reload, -1, !insn.addr !2058
  %209 = add i32 %208, %207, !insn.addr !2058
  %210 = add i32 %edi.54792.reload, %stack_var_-52.0.reload, !insn.addr !2059
  %211 = icmp ult i32 %210, %edi.54792.reload, !insn.addr !2059
  %212 = zext i1 %211 to i32, !insn.addr !2060
  %213 = add i32 %uu_num_-40.1.off04395.reload, %212, !insn.addr !2060
  %214 = icmp eq i32 %213, 0, !insn.addr !2060
  %215 = icmp eq i1 %214, false, !insn.addr !2061
  store i32 %209, i32* %uu_quo_-68.3.off0.reg2mem, !insn.addr !2061
  store i32 %204, i32* %stack_var_-8.1.off0.reg2mem, !insn.addr !2061
  store i64 %206, i64* %uu_quo_-72.3.reg2mem, !insn.addr !2061
  store i32 %.reload, i32* %esp.5.reg2mem, !insn.addr !2061
  br i1 %215, label %dec_label_pc_437fe0, label %dec_label_pc_437f97, !insn.addr !2061

dec_label_pc_437fe0:                              ; preds = %dec_label_pc_437fb1.preheader, %dec_label_pc_437fb8, %dec_label_pc_437fb1, %dec_label_pc_437f97, %dec_label_pc_437f97.preheader, %dec_label_pc_437f8c
  %esp.5.reload = load i32, i32* %esp.5.reg2mem
  %stack_var_-8.1.off0.reload = load i32, i32* %stack_var_-8.1.off0.reg2mem
  %uu_quo_-68.3.off0.reload = load i32, i32* %uu_quo_-68.3.off0.reg2mem
  %216 = or i32 %stack_var_-8.1.off0.reload, %uu_quo_-68.3.off0.reload
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %dec_label_pc_437fe0.dec_label_pc_43809f_crit_edge, label %dec_label_pc_438006.preheader, !insn.addr !2062

dec_label_pc_437fe0.dec_label_pc_43809f_crit_edge: ; preds = %dec_label_pc_437fe0
  %.pre80 = add i32 %stack_var_-60.0.reload, -1, !insn.addr !2063
  store i32 %.pre80, i32* %.pre-phi.reg2mem
  store i32 %stack_var_-12.0.off0.reload, i32* %stack_var_-12.1.off0.reg2mem
  store i32 %stack_var_-8.1.off0.reload, i32* %ebx.12.reg2mem
  br label %dec_label_pc_43809f

dec_label_pc_438006.preheader:                    ; preds = %dec_label_pc_437fe0
  %uu_quo_-72.3.reload = load i64, i64* %uu_quo_-72.3.reg2mem
  %218 = and i64 %uu_quo_-72.3.reload, 4294967295, !insn.addr !2064
  store i32 %8, i32* %uu_num_-40.2.in.in.reg2mem
  store i32 %4, i32* %stack_var_-24.1.reg2mem
  store i32 %stack_var_-64.0.reload, i32* %ebx.7.reg2mem
  store i32 0, i32* %esi.5.reg2mem
  store i32 0, i32* %edi.6.reg2mem
  br label %dec_label_pc_438006

dec_label_pc_438006:                              ; preds = %dec_label_pc_438006.preheader, %dec_label_pc_438006
  %edi.6.reload = load i32, i32* %edi.6.reg2mem
  %esi.5.reload = load i32, i32* %esi.5.reg2mem
  %ebx.7.reload = load i32, i32* %ebx.7.reg2mem
  %stack_var_-24.1.reload = load i32, i32* %stack_var_-24.1.reg2mem
  %uu_num_-40.2.in.in.reload = load i32, i32* %uu_num_-40.2.in.in.reg2mem
  %uu_num_-40.2.in = add i32 %uu_num_-40.2.in.in.reload, 4
  %219 = inttoptr i32 %uu_num_-40.2.in to i32*, !insn.addr !2065
  %220 = load i32, i32* %219, align 4, !insn.addr !2065
  %221 = mul i32 %220, %uu_quo_-68.3.off0.reload, !insn.addr !2066
  %222 = zext i32 %220 to i64, !insn.addr !2064
  %223 = mul nuw i64 %218, %222, !insn.addr !2064
  %224 = trunc i64 %223 to i32, !insn.addr !2064
  %225 = udiv i64 %223, 4294967296, !insn.addr !2064
  %226 = trunc i64 %225 to i32, !insn.addr !2064
  %227 = add i32 %edi.6.reload, %224, !insn.addr !2067
  %228 = icmp ult i32 %227, %edi.6.reload, !insn.addr !2067
  %229 = inttoptr i32 %ebx.7.reload to i32*, !insn.addr !2068
  %230 = load i32, i32* %229, align 4, !insn.addr !2068
  %231 = zext i1 %228 to i32, !insn.addr !2069
  %232 = add i32 %221, %esi.5.reload, !insn.addr !2070
  %233 = add i32 %232, %226, !insn.addr !2069
  %234 = add i32 %233, %231, !insn.addr !2069
  %235 = icmp ult i32 %230, %227, !insn.addr !2071
  %236 = icmp eq i32 %234, -1
  %narrow = icmp eq i1 %235, %236
  %esi.6 = zext i1 %narrow to i32
  %237 = zext i1 %235 to i32
  %edi.7 = add i32 %234, %237
  %238 = sub i32 %230, %227, !insn.addr !2072
  store i32 %238, i32* %229, align 4, !insn.addr !2073
  %239 = add i32 %ebx.7.reload, 4, !insn.addr !2074
  %240 = add i32 %stack_var_-24.1.reload, -1, !insn.addr !2075
  %241 = icmp eq i32 %240, 0, !insn.addr !2075
  %242 = icmp eq i1 %241, false, !insn.addr !2076
  store i32 %uu_num_-40.2.in, i32* %uu_num_-40.2.in.in.reg2mem, !insn.addr !2076
  store i32 %240, i32* %stack_var_-24.1.reg2mem, !insn.addr !2076
  store i32 %239, i32* %ebx.7.reg2mem, !insn.addr !2076
  store i32 %esi.6, i32* %esi.5.reg2mem, !insn.addr !2076
  store i32 %edi.7, i32* %edi.6.reg2mem, !insn.addr !2076
  br i1 %242, label %dec_label_pc_438006, label %dec_label_pc_43804c, !insn.addr !2076

dec_label_pc_43804c:                              ; preds = %dec_label_pc_438006
  %243 = icmp ult i32 %storemerge12.reload, %edi.7, !insn.addr !2077
  %244 = or i1 %narrow, %243
  %245 = icmp eq i1 %244, false
  store i32 %stack_var_-64.0.reload, i32* %edx.3.reg2mem, !insn.addr !2078
  store i32 0, i32* %ebx.9.reg2mem, !insn.addr !2078
  store i32 %8, i32* %esi.8.in.reg2mem, !insn.addr !2078
  store i32 %4, i32* %edi.9.reg2mem, !insn.addr !2078
  store i32 %stack_var_-8.1.off0.reload, i32* %ebx.11.reg2mem, !insn.addr !2078
  br i1 %245, label %dec_label_pc_438098, label %dec_label_pc_438070, !insn.addr !2078

dec_label_pc_438070:                              ; preds = %dec_label_pc_43804c, %dec_label_pc_438070
  %edi.9.reload = load i32, i32* %edi.9.reg2mem
  %esi.8.in.reload = load i32, i32* %esi.8.in.reg2mem
  %ebx.9.reload = load i32, i32* %ebx.9.reg2mem
  %edx.3.reload = load i32, i32* %edx.3.reg2mem
  %esi.8 = add i32 %esi.8.in.reload, 4
  %246 = inttoptr i32 %edx.3.reload to i32*, !insn.addr !2079
  %247 = load i32, i32* %246, align 4, !insn.addr !2079
  %248 = add i32 %edx.3.reload, 4, !insn.addr !2080
  %249 = inttoptr i32 %esi.8 to i32*, !insn.addr !2081
  %250 = load i32, i32* %249, align 4, !insn.addr !2081
  %251 = add i32 %250, %247, !insn.addr !2081
  %252 = icmp ult i32 %251, %247, !insn.addr !2081
  %253 = zext i1 %252 to i32, !insn.addr !2082
  %254 = add i32 %251, %ebx.9.reload, !insn.addr !2083
  %255 = icmp ult i32 %254, %251, !insn.addr !2083
  store i32 %254, i32* %246, align 4, !insn.addr !2084
  %256 = zext i1 %255 to i32, !insn.addr !2085
  %257 = add nuw nsw i32 %256, %253, !insn.addr !2085
  %258 = add i32 %edi.9.reload, -1, !insn.addr !2086
  %259 = icmp eq i32 %258, 0, !insn.addr !2086
  %260 = icmp eq i1 %259, false, !insn.addr !2087
  store i32 %248, i32* %edx.3.reg2mem, !insn.addr !2087
  store i32 %257, i32* %ebx.9.reg2mem, !insn.addr !2087
  store i32 %esi.8, i32* %esi.8.in.reg2mem, !insn.addr !2087
  store i32 %258, i32* %edi.9.reg2mem, !insn.addr !2087
  br i1 %260, label %dec_label_pc_438070, label %dec_label_pc_438091, !insn.addr !2087

dec_label_pc_438091:                              ; preds = %dec_label_pc_438070
  %261 = add i32 %stack_var_-8.1.off0.reload, -1, !insn.addr !2088
  store i32 %261, i32* %ebx.11.reg2mem, !insn.addr !2089
  br label %dec_label_pc_438098, !insn.addr !2089

dec_label_pc_438098:                              ; preds = %dec_label_pc_43804c, %dec_label_pc_438091
  %ebx.11.reload = load i32, i32* %ebx.11.reg2mem
  %262 = add i32 %stack_var_-60.0.reload, -1
  store i32 %262, i32* %.pre-phi.reg2mem, !insn.addr !2090
  store i32 %262, i32* %stack_var_-12.1.off0.reg2mem, !insn.addr !2090
  store i32 %ebx.11.reload, i32* %ebx.12.reg2mem, !insn.addr !2090
  br label %dec_label_pc_43809f, !insn.addr !2090

dec_label_pc_43809f:                              ; preds = %dec_label_pc_437fe0.dec_label_pc_43809f_crit_edge, %dec_label_pc_438098
  %stack_var_-12.1.off0.reload = load i32, i32* %stack_var_-12.1.off0.reg2mem
  %.pre-phi.reload = load i32, i32* %.pre-phi.reg2mem
  %263 = add i32 %stack_var_-64.0.reload, -4, !insn.addr !2091
  %264 = add i32 %stack_var_-28.1.in.reload, -1, !insn.addr !2092
  %265 = add i32 %stack_var_-80.0.reload, -4, !insn.addr !2093
  %266 = icmp slt i32 %264, 0, !insn.addr !2094
  %267 = icmp eq i1 %266, false, !insn.addr !2095
  store i32 %stack_var_-12.1.off0.reload, i32* %stack_var_-12.0.off0.reg2mem, !insn.addr !2095
  store i32 %264, i32* %stack_var_-28.1.in.reg2mem, !insn.addr !2095
  store i32 %.pre-phi.reload, i32* %stack_var_-60.0.reg2mem, !insn.addr !2095
  store i32 %263, i32* %stack_var_-64.0.reg2mem, !insn.addr !2095
  store i32 %265, i32* %stack_var_-80.0.reg2mem, !insn.addr !2095
  store i32 %esp.5.reload, i32* %esp.2.reg2mem, !insn.addr !2095
  br i1 %267, label %dec_label_pc_437ec2, label %dec_label_pc_4380d5.loopexit, !insn.addr !2095

dec_label_pc_4380d5.loopexit:                     ; preds = %dec_label_pc_43809f
  %ebx.12.reload = load i32, i32* %ebx.12.reg2mem
  %268 = sext i32 %ebx.12.reload to i64, !insn.addr !2096
  %.pre = load i32, i32* %0, align 4
  store i32 %.pre, i32* %.reg2mem127
  store i32 %stack_var_-12.1.off0.reload, i32* %stack_var_-12.2.off0.reg2mem
  store i64 %268, i64* %stack_var_-32.2.reg2mem
  br label %dec_label_pc_4380d5

dec_label_pc_4380d5:                              ; preds = %dec_label_pc_4380d5.loopexit, %dec_label_pc_437e92
  %stack_var_-32.2.reload = load i64, i64* %stack_var_-32.2.reg2mem
  %stack_var_-12.2.off0.reload = load i32, i32* %stack_var_-12.2.off0.reg2mem
  %.reload128 = load i32, i32* %.reg2mem127, !insn.addr !2097
  %269 = add i32 %stack_var_-12.2.off0.reload, 1, !insn.addr !2098
  %270 = icmp ult i32 %269, %.reload128, !insn.addr !2097
  %271 = icmp eq i1 %270, false, !insn.addr !2099
  br i1 %271, label %dec_label_pc_4380fe, label %dec_label_pc_4380e2, !insn.addr !2099

dec_label_pc_4380e2:                              ; preds = %dec_label_pc_4380d5
  %272 = add i32 %6, 4, !insn.addr !2100
  %273 = mul i32 %269, 4, !insn.addr !2101
  %274 = add i32 %272, %273, !insn.addr !2101
  store i32 %269, i32* %eax.9.reg2mem, !insn.addr !2102
  store i32 %274, i32* %edx.4.reg2mem, !insn.addr !2102
  br label %dec_label_pc_4380f0, !insn.addr !2102

dec_label_pc_4380f0:                              ; preds = %dec_label_pc_4380f0, %dec_label_pc_4380e2
  %edx.4.reload = load i32, i32* %edx.4.reg2mem
  %eax.9.reload = load i32, i32* %eax.9.reg2mem
  %275 = inttoptr i32 %edx.4.reload to i32*, !insn.addr !2103
  store i32 0, i32* %275, align 4, !insn.addr !2103
  %276 = add i32 %edx.4.reload, 4, !insn.addr !2104
  %277 = add i32 %eax.9.reload, 1, !insn.addr !2105
  %278 = load i32, i32* %0, align 4, !insn.addr !2106
  %279 = icmp ult i32 %277, %278, !insn.addr !2106
  store i32 %277, i32* %eax.9.reg2mem, !insn.addr !2107
  store i32 %276, i32* %edx.4.reg2mem, !insn.addr !2107
  br i1 %279, label %dec_label_pc_4380f0, label %dec_label_pc_4380fe, !insn.addr !2107

dec_label_pc_4380fe:                              ; preds = %dec_label_pc_4380f0, %dec_label_pc_4380d5
  store i32 %269, i32* %0, align 4, !insn.addr !2108
  %280 = icmp eq i32 %269, 0, !insn.addr !2109
  store i32 %269, i32* %ecx.5.reg2mem, !insn.addr !2110
  store i64 %stack_var_-32.2.reload, i64* %merge.reg2mem, !insn.addr !2110
  br i1 %280, label %dec_label_pc_438111, label %dec_label_pc_438104, !insn.addr !2110

dec_label_pc_438104:                              ; preds = %dec_label_pc_4380fe, %dec_label_pc_43810a
  %ecx.5.reload = load i32, i32* %ecx.5.reg2mem
  %281 = mul i32 %ecx.5.reload, 4, !insn.addr !2111
  %282 = add i32 %281, %6, !insn.addr !2111
  %283 = inttoptr i32 %282 to i32*, !insn.addr !2111
  %284 = load i32, i32* %283, align 4, !insn.addr !2111
  %285 = icmp eq i32 %284, 0, !insn.addr !2111
  %286 = icmp eq i1 %285, false, !insn.addr !2112
  store i64 %stack_var_-32.2.reload, i64* %merge.reg2mem, !insn.addr !2112
  br i1 %286, label %dec_label_pc_438111, label %dec_label_pc_43810a, !insn.addr !2112

dec_label_pc_43810a:                              ; preds = %dec_label_pc_438104
  %287 = add i32 %ecx.5.reload, -1, !insn.addr !2113
  %288 = icmp eq i32 %287, 0, !insn.addr !2113
  store i32 %287, i32* %0, align 4, !insn.addr !2114
  %289 = icmp eq i1 %288, false, !insn.addr !2115
  store i32 %287, i32* %ecx.5.reg2mem, !insn.addr !2115
  store i64 %stack_var_-32.2.reload, i64* %merge.reg2mem, !insn.addr !2115
  br i1 %289, label %dec_label_pc_438104, label %dec_label_pc_438111, !insn.addr !2115

dec_label_pc_438111:                              ; preds = %dec_label_pc_43810a, %dec_label_pc_438104, %dec_label_pc_437c90, %dec_label_pc_437cab, %dec_label_pc_437e2c, %dec_label_pc_437df7, %dec_label_pc_4380fe
  %merge.reload = load i64, i64* %merge.reg2mem
  ret i64 %merge.reload, !insn.addr !2116
}

define i32 @_ischartype_l(i32 %_C, i32 %_Mask, i32 %_Locale) local_unnamed_addr {
dec_label_pc_43c6bb:
  %eax.0.reg2mem = alloca i32, !insn.addr !2117
  %0 = icmp eq i32 %_Locale, 0, !insn.addr !2118
  br i1 %0, label %dec_label_pc_43c6f8, label %dec_label_pc_43c6c8, !insn.addr !2119

dec_label_pc_43c6c8:                              ; preds = %dec_label_pc_43c6bb
  %1 = inttoptr i32 %_Locale to i32*, !insn.addr !2120
  %2 = load i32, i32* %1, align 4, !insn.addr !2120
  %3 = add i32 %_C, 1, !insn.addr !2121
  %4 = icmp ult i32 %3, 257
  br i1 %4, label %dec_label_pc_43c6d7, label %dec_label_pc_43c6e2, !insn.addr !2122

dec_label_pc_43c6d7:                              ; preds = %dec_label_pc_43c6c8
  %5 = inttoptr i32 %2 to i32*, !insn.addr !2123
  %6 = load i32, i32* %5, align 4, !insn.addr !2123
  %7 = mul i32 %_C, 2, !insn.addr !2124
  %8 = add i32 %6, %7, !insn.addr !2124
  %9 = inttoptr i32 %8 to i16*, !insn.addr !2124
  %10 = load i16, i16* %9, align 2, !insn.addr !2124
  %11 = zext i16 %10 to i32, !insn.addr !2124
  %12 = and i32 %11, %_Mask, !insn.addr !2125
  store i32 %12, i32* %eax.0.reg2mem, !insn.addr !2126
  br label %dec_label_pc_43c70c, !insn.addr !2126

dec_label_pc_43c6e2:                              ; preds = %dec_label_pc_43c6c8
  %13 = add i32 %2, 4, !insn.addr !2127
  %14 = inttoptr i32 %13 to i32*, !insn.addr !2127
  %15 = load i32, i32* %14, align 4, !insn.addr !2127
  %16 = icmp slt i32 %15, 2, !insn.addr !2128
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2128
  br i1 %16, label %dec_label_pc_43c70c, label %dec_label_pc_43c6e8, !insn.addr !2128

dec_label_pc_43c6e8:                              ; preds = %dec_label_pc_43c6e2
  %17 = call i32 @_isctype_l(i32 %_C, i32 %_Mask, i32 %_Locale), !insn.addr !2129
  store i32 %17, i32* %eax.0.reg2mem, !insn.addr !2130
  br label %dec_label_pc_43c70c, !insn.addr !2130

dec_label_pc_43c6f8:                              ; preds = %dec_label_pc_43c6bb
  %18 = call i16* @__pctype_func(), !insn.addr !2131
  %19 = call i32 @function_404322(), !insn.addr !2132
  store i32 %19, i32* %eax.0.reg2mem, !insn.addr !2132
  br label %dec_label_pc_43c70c, !insn.addr !2132

dec_label_pc_43c70c:                              ; preds = %dec_label_pc_43c6e8, %dec_label_pc_43c6f8, %dec_label_pc_43c6e2, %dec_label_pc_43c6d7
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !2133
}

declare i32 @memcpy_s_1(i8*, i32, i8*, i32) local_unnamed_addr

define i32 @_fclose_nolock(i32 %public_stream) local_unnamed_addr {
dec_label_pc_43d77e:
  %storemerge.reg2mem = alloca i32, !insn.addr !2134
  %edi.0.reg2mem = alloca i32, !insn.addr !2134
  %0 = icmp eq i32 %public_stream, 0, !insn.addr !2135
  %1 = icmp eq i1 %0, false, !insn.addr !2136
  br i1 %1, label %dec_label_pc_43d7a0, label %dec_label_pc_43d78b, !insn.addr !2136

dec_label_pc_43d78b:                              ; preds = %dec_label_pc_43d77e
  %2 = call i32* @_errno(), !insn.addr !2137
  store i32 22, i32* %2, align 4, !insn.addr !2138
  call void @_invalid_parameter_noinfo(), !insn.addr !2139
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !2140
  br label %dec_label_pc_43d7f2, !insn.addr !2140

dec_label_pc_43d7a0:                              ; preds = %dec_label_pc_43d77e
  %3 = add i32 %public_stream, 12, !insn.addr !2141
  %4 = inttoptr i32 %3 to i32*, !insn.addr !2141
  %5 = load i32, i32* %4, align 4, !insn.addr !2141
  %6 = and i32 %5, 8192
  %7 = icmp eq i32 %6, 0, !insn.addr !2142
  store i32 -1, i32* %edi.0.reg2mem, !insn.addr !2143
  br i1 %7, label %dec_label_pc_43d7e8, label %dec_label_pc_43d7af, !insn.addr !2143

dec_label_pc_43d7af:                              ; preds = %dec_label_pc_43d7a0
  %8 = call i32 @function_402f59(), !insn.addr !2144
  %9 = call i32 @___acrt_stdio_free_buffer_nolock(i32 %public_stream), !insn.addr !2145
  %10 = call i32 @_fileno(i32 %public_stream), !insn.addr !2146
  %11 = call i32 @_close(i32 %10), !insn.addr !2147
  %12 = icmp slt i32 %11, 0, !insn.addr !2148
  %13 = icmp eq i1 %12, false, !insn.addr !2149
  store i32 -1, i32* %edi.0.reg2mem, !insn.addr !2149
  br i1 %13, label %dec_label_pc_43d7d5, label %dec_label_pc_43d7e8, !insn.addr !2149

dec_label_pc_43d7d5:                              ; preds = %dec_label_pc_43d7af
  %14 = add i32 %public_stream, 28, !insn.addr !2150
  %15 = inttoptr i32 %14 to i32*, !insn.addr !2150
  %16 = load i32, i32* %15, align 4, !insn.addr !2150
  %17 = icmp eq i32 %16, 0, !insn.addr !2150
  store i32 %8, i32* %edi.0.reg2mem, !insn.addr !2151
  br i1 %17, label %dec_label_pc_43d7e8, label %dec_label_pc_43d7db, !insn.addr !2151

dec_label_pc_43d7db:                              ; preds = %dec_label_pc_43d7d5
  %18 = inttoptr i32 %16 to i32*, !insn.addr !2152
  call void @_free_base(i32* %18), !insn.addr !2152
  store i32 0, i32* %15, align 4, !insn.addr !2153
  store i32 %8, i32* %edi.0.reg2mem, !insn.addr !2154
  br label %dec_label_pc_43d7e8, !insn.addr !2154

dec_label_pc_43d7e8:                              ; preds = %dec_label_pc_43d7af, %dec_label_pc_43d7db, %dec_label_pc_43d7d5, %dec_label_pc_43d7a0
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %19 = call i32 @function_4045ed(i32 %public_stream), !insn.addr !2155
  store i32 %edi.0.reload, i32* %storemerge.reg2mem, !insn.addr !2156
  br label %dec_label_pc_43d7f2, !insn.addr !2156

dec_label_pc_43d7f2:                              ; preds = %dec_label_pc_43d7e8, %dec_label_pc_43d78b
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !2157
}

define i32 @fclose(i32 %public_stream) local_unnamed_addr {
dec_label_pc_43d812:
  %storemerge2.reg2mem = alloca i32, !insn.addr !2158
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a228, i32 16), !insn.addr !2159
  %2 = add i32 %0, 8, !insn.addr !2160
  %3 = inttoptr i32 %2 to i32*, !insn.addr !2160
  %4 = load i32, i32* %3, align 4, !insn.addr !2160
  %5 = add i32 %0, -32, !insn.addr !2161
  %6 = inttoptr i32 %5 to i32*, !insn.addr !2161
  store i32 %4, i32* %6, align 4, !insn.addr !2161
  %7 = icmp eq i32 %4, 0, !insn.addr !2162
  %8 = icmp eq i1 %7, false, !insn.addr !2163
  br i1 %8, label %dec_label_pc_43d83d, label %dec_label_pc_43d828, !insn.addr !2163

dec_label_pc_43d828:                              ; preds = %dec_label_pc_43d812
  %9 = call i32* @_errno(), !insn.addr !2164
  store i32 22, i32* %9, align 4, !insn.addr !2165
  call void @_invalid_parameter_noinfo(), !insn.addr !2166
  store i32 -1, i32* %storemerge2.reg2mem, !insn.addr !2166
  br label %dec_label_pc_43d879, !insn.addr !2166

dec_label_pc_43d83d:                              ; preds = %dec_label_pc_43d812
  %10 = add i32 %4, 12, !insn.addr !2167
  %11 = inttoptr i32 %10 to i32*, !insn.addr !2167
  %12 = load i32, i32* %11, align 4, !insn.addr !2167
  %13 = and i32 %12, 4096
  %14 = icmp eq i32 %13, 0, !insn.addr !2168
  br i1 %14, label %dec_label_pc_43d851, label %dec_label_pc_43d849, !insn.addr !2169

dec_label_pc_43d849:                              ; preds = %dec_label_pc_43d83d
  %15 = call i32 @function_4045ed(i32 %4), !insn.addr !2170
  store i32 -1, i32* %storemerge2.reg2mem, !insn.addr !2171
  br label %dec_label_pc_43d879, !insn.addr !2171

dec_label_pc_43d851:                              ; preds = %dec_label_pc_43d83d
  %16 = inttoptr i32 %4 to %_IO_FILE*, !insn.addr !2172
  %17 = add i32 %0, -28, !insn.addr !2173
  %18 = inttoptr i32 %17 to i32*, !insn.addr !2173
  store i32 0, i32* %18, align 4, !insn.addr !2173
  call void @_lock_file(%_IO_FILE* %16), !insn.addr !2174
  %19 = add i32 %0, -4, !insn.addr !2175
  %20 = inttoptr i32 %19 to i32*, !insn.addr !2175
  store i32 0, i32* %20, align 4, !insn.addr !2175
  %21 = call i32 @_fclose_nolock(i32 %4), !insn.addr !2176
  store i32 %21, i32* %18, align 4, !insn.addr !2177
  store i32 -2, i32* %20, align 4, !insn.addr !2178
  %22 = call i32 @function_43d88c(), !insn.addr !2179
  store i32 %21, i32* %storemerge2.reg2mem, !insn.addr !2180
  br label %dec_label_pc_43d879, !insn.addr !2180

dec_label_pc_43d879:                              ; preds = %dec_label_pc_43d828, %dec_label_pc_43d849, %dec_label_pc_43d851
  %storemerge2.reload = load i32, i32* %storemerge2.reg2mem
  %23 = add i32 %0, -16, !insn.addr !2181
  %24 = inttoptr i32 %23 to i32*, !insn.addr !2181
  %25 = load i32, i32* %24, align 4, !insn.addr !2181
  call void @__writefsdword(i32 0, i32 %25), !insn.addr !2182
  ret i32 %storemerge2.reload, !insn.addr !2183
}

define i32 @function_43d88c() local_unnamed_addr {
dec_label_pc_43d88c:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, -32, !insn.addr !2184
  %2 = inttoptr i32 %1 to i32*, !insn.addr !2184
  %3 = load i32, i32* %2, align 4, !insn.addr !2184
  %4 = inttoptr i32 %3 to %_IO_FILE*, !insn.addr !2184
  call void @_unlock_file(%_IO_FILE* %4), !insn.addr !2185
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !2186
}

declare %_IO_FILE* @fopen(i8*, i8*) local_unnamed_addr

define i8* @"common_getenv<char>"(i8* %name) local_unnamed_addr {
dec_label_pc_43df2f:
  %storemerge.reg2mem = alloca i8*, !insn.addr !2187
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a288, i32 12), !insn.addr !2188
  %2 = add i32 %0, 8, !insn.addr !2189
  %3 = inttoptr i32 %2 to i32*, !insn.addr !2189
  %4 = load i32, i32* %3, align 4, !insn.addr !2189
  %5 = icmp eq i32 %4, 0, !insn.addr !2190
  %6 = icmp eq i1 %5, false, !insn.addr !2191
  br i1 %6, label %dec_label_pc_43df56, label %dec_label_pc_43df42, !insn.addr !2191

dec_label_pc_43df42:                              ; preds = %dec_label_pc_43df56, %dec_label_pc_43df2f
  %7 = call i32* @_errno(), !insn.addr !2192
  store i32 22, i32* %7, align 4, !insn.addr !2193
  call void @_invalid_parameter_noinfo(), !insn.addr !2194
  store i8* null, i8** %storemerge.reg2mem, !insn.addr !2195
  br label %dec_label_pc_43df92, !insn.addr !2195

dec_label_pc_43df56:                              ; preds = %dec_label_pc_43df2f
  %8 = inttoptr i32 %4 to i8*, !insn.addr !2196
  %9 = call i32 @strnlen(i8* %8, i32 32767), !insn.addr !2197
  %10 = icmp ult i32 %9, 32767, !insn.addr !2198
  %11 = icmp eq i1 %10, false, !insn.addr !2199
  br i1 %11, label %dec_label_pc_43df42, label %dec_label_pc_43df68, !insn.addr !2199

dec_label_pc_43df68:                              ; preds = %dec_label_pc_43df56
  %12 = add i32 %0, -28, !insn.addr !2200
  %13 = inttoptr i32 %12 to i32*, !insn.addr !2200
  store i32 0, i32* %13, align 4, !insn.addr !2200
  %14 = call i32 @function_40452a(i32 11), !insn.addr !2201
  %15 = add i32 %0, -4, !insn.addr !2202
  %16 = inttoptr i32 %15 to i32*, !insn.addr !2202
  store i32 0, i32* %16, align 4, !insn.addr !2202
  %17 = call i8* @"common_getenv_nolock<char>"(i8* %8), !insn.addr !2203
  %18 = ptrtoint i8* %17 to i32, !insn.addr !2203
  store i32 %18, i32* %13, align 4, !insn.addr !2204
  store i32 -2, i32* %16, align 4, !insn.addr !2205
  %19 = call i32 @function_43dfa5(), !insn.addr !2206
  store i8* %17, i8** %storemerge.reg2mem, !insn.addr !2207
  br label %dec_label_pc_43df92, !insn.addr !2207

dec_label_pc_43df92:                              ; preds = %dec_label_pc_43df68, %dec_label_pc_43df42
  %storemerge.reload = load i8*, i8** %storemerge.reg2mem
  %20 = add i32 %0, -16, !insn.addr !2208
  %21 = inttoptr i32 %20 to i32*, !insn.addr !2208
  %22 = load i32, i32* %21, align 4, !insn.addr !2208
  call void @__writefsdword(i32 0, i32 %22), !insn.addr !2209
  ret i8* %storemerge.reload, !insn.addr !2210
}

define i32 @function_43dfa5() local_unnamed_addr {
dec_label_pc_43dfa5:
  %0 = call i32 @function_4017d5(i32 11), !insn.addr !2211
  ret i32 %0, !insn.addr !2212
}

define i8* @"common_getenv_nolock<char>"(i8* %name) local_unnamed_addr {
dec_label_pc_43e06b:
  %storemerge.reg2mem = alloca i8*, !insn.addr !2213
  %edx.0.reg2mem = alloca i32, !insn.addr !2213
  %edi.05.reg2mem = alloca i32, !insn.addr !2213
  %.reg2mem10 = alloca i32*, !insn.addr !2213
  %.reg2mem = alloca i32, !insn.addr !2213
  %esi.0.reg2mem = alloca i32, !insn.addr !2213
  %stack_var_-16 = alloca i32, align 4
  %0 = call i32 @function_4010e1(), !insn.addr !2214
  %1 = icmp eq i32 %0, 0, !insn.addr !2215
  %2 = icmp eq i8* %name, null, !insn.addr !2216
  %or.cond = or i1 %2, %1
  store i8* null, i8** %storemerge.reg2mem, !insn.addr !2217
  br i1 %or.cond, label %dec_label_pc_43e0cd, label %dec_label_pc_43e084, !insn.addr !2217

dec_label_pc_43e084:                              ; preds = %dec_label_pc_43e06b
  %3 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !2218
  %4 = ptrtoint i8* %name to i32, !insn.addr !2219
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !2220
  br label %dec_label_pc_43e08a, !insn.addr !2220

dec_label_pc_43e08a:                              ; preds = %dec_label_pc_43e08a, %dec_label_pc_43e084
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %5 = inttoptr i32 %esi.0.reload to i8*, !insn.addr !2221
  %6 = load i8, i8* %5, align 1, !insn.addr !2221
  %7 = add i32 %esi.0.reload, 1, !insn.addr !2222
  %8 = icmp eq i8 %6, 0, !insn.addr !2223
  %9 = icmp eq i1 %8, false, !insn.addr !2224
  store i32 %7, i32* %esi.0.reg2mem, !insn.addr !2224
  br i1 %9, label %dec_label_pc_43e08a, label %dec_label_pc_43e091, !insn.addr !2224

dec_label_pc_43e091:                              ; preds = %dec_label_pc_43e08a
  %10 = inttoptr i32 %0 to i32*, !insn.addr !2225
  %11 = load i32, i32* %10, align 4, !insn.addr !2225
  %12 = icmp eq i32 %11, 0, !insn.addr !2226
  %13 = icmp eq i1 %12, false, !insn.addr !2227
  store i8* null, i8** %storemerge.reg2mem, !insn.addr !2227
  br i1 %13, label %dec_label_pc_43e095.lr.ph, label %dec_label_pc_43e0cd, !insn.addr !2227

dec_label_pc_43e095.lr.ph:                        ; preds = %dec_label_pc_43e091
  %14 = sub i32 %esi.0.reload, %4, !insn.addr !2228
  %15 = add i32 %3, -4
  %16 = inttoptr i32 %15 to i32*
  %17 = add i32 %3, -8
  %18 = inttoptr i32 %17 to i32*
  %19 = add i32 %3, -12
  %20 = inttoptr i32 %19 to i32*
  store i32 %11, i32* %.reg2mem
  store i32* %10, i32** %.reg2mem10
  store i32 %0, i32* %edi.05.reg2mem
  br label %dec_label_pc_43e095

dec_label_pc_43e095:                              ; preds = %dec_label_pc_43e095.lr.ph, %dec_label_pc_43e0c2
  %edi.05.reload = load i32, i32* %edi.05.reg2mem
  %.reload11 = load i32*, i32** %.reg2mem10
  %.reload = load i32, i32* %.reg2mem
  store i32 %.reload, i32* %edx.0.reg2mem, !insn.addr !2229
  br label %dec_label_pc_43e09d, !insn.addr !2229

dec_label_pc_43e09d:                              ; preds = %dec_label_pc_43e09d, %dec_label_pc_43e095
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %21 = inttoptr i32 %edx.0.reload to i8*, !insn.addr !2230
  %22 = load i8, i8* %21, align 1, !insn.addr !2230
  %23 = add i32 %edx.0.reload, 1, !insn.addr !2231
  %24 = icmp eq i8 %22, 0, !insn.addr !2232
  %25 = icmp eq i1 %24, false, !insn.addr !2233
  store i32 %23, i32* %edx.0.reg2mem, !insn.addr !2233
  br i1 %25, label %dec_label_pc_43e09d, label %dec_label_pc_43e0a4, !insn.addr !2233

dec_label_pc_43e0a4:                              ; preds = %dec_label_pc_43e09d
  %26 = sub i32 %edx.0.reload, %.reload, !insn.addr !2234
  %27 = icmp ugt i32 %26, %14
  br i1 %27, label %dec_label_pc_43e0ab, label %dec_label_pc_43e0c2, !insn.addr !2235

dec_label_pc_43e0ab:                              ; preds = %dec_label_pc_43e0a4
  %28 = add i32 %.reload, %14, !insn.addr !2236
  %29 = inttoptr i32 %28 to i8*, !insn.addr !2236
  %30 = load i8, i8* %29, align 1, !insn.addr !2236
  %31 = icmp eq i8 %30, 61, !insn.addr !2236
  %32 = icmp eq i1 %31, false, !insn.addr !2237
  br i1 %32, label %dec_label_pc_43e0c2, label %dec_label_pc_43e0b1, !insn.addr !2237

dec_label_pc_43e0b1:                              ; preds = %dec_label_pc_43e0ab
  store i32 %14, i32* %16, align 4, !insn.addr !2238
  store i32 %4, i32* %18, align 4, !insn.addr !2239
  store i32 %.reload, i32* %20, align 4, !insn.addr !2240
  %33 = call i32 @_strnicoll(i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2241
  %34 = icmp eq i32 %33, 0, !insn.addr !2242
  br i1 %34, label %dec_label_pc_43e0d1, label %dec_label_pc_43e0c2, !insn.addr !2243

dec_label_pc_43e0c2:                              ; preds = %dec_label_pc_43e0a4, %dec_label_pc_43e0b1, %dec_label_pc_43e0ab
  %35 = add i32 %edi.05.reload, 4, !insn.addr !2244
  %36 = inttoptr i32 %35 to i32*, !insn.addr !2225
  %37 = load i32, i32* %36, align 4, !insn.addr !2225
  %38 = icmp eq i32 %37, 0, !insn.addr !2226
  %39 = icmp eq i1 %38, false, !insn.addr !2227
  store i32 %37, i32* %.reg2mem, !insn.addr !2227
  store i32* %36, i32** %.reg2mem10, !insn.addr !2227
  store i32 %35, i32* %edi.05.reg2mem, !insn.addr !2227
  store i8* null, i8** %storemerge.reg2mem, !insn.addr !2227
  br i1 %39, label %dec_label_pc_43e095, label %dec_label_pc_43e0cd, !insn.addr !2227

dec_label_pc_43e0cd:                              ; preds = %dec_label_pc_43e0c2, %dec_label_pc_43e091, %dec_label_pc_43e06b, %dec_label_pc_43e0d1
  %storemerge.reload = load i8*, i8** %storemerge.reg2mem
  ret i8* %storemerge.reload, !insn.addr !2245

dec_label_pc_43e0d1:                              ; preds = %dec_label_pc_43e0b1
  %40 = load i32, i32* %.reload11, align 4, !insn.addr !2246
  %41 = add i32 %14, 1, !insn.addr !2247
  %42 = add i32 %41, %40, !insn.addr !2248
  %phitmp = inttoptr i32 %42 to i8*
  store i8* %phitmp, i8** %storemerge.reg2mem, !insn.addr !2249
  br label %dec_label_pc_43e0cd, !insn.addr !2249
}

define i8* @getenv(i8* %name) local_unnamed_addr {
dec_label_pc_43e66f:
  %0 = call i8* @"common_getenv<char>"(i8* bitcast (i32* @80 to i8*)), !insn.addr !2250
  ret i8* %0, !insn.addr !2250
}

declare i8* @strcat(i8*, i8*) local_unnamed_addr

declare i32 @strlen(i8*) local_unnamed_addr

declare i8* @strncat(i8*, i8*, i32) local_unnamed_addr

define i32 @_query_app_type() local_unnamed_addr {
dec_label_pc_43ee23:
  %0 = load i32, i32* @__acrt_app_type, align 4, !insn.addr !2251
  ret i32 %0, !insn.addr !2252
}

define i8** @"common_get_or_create_environment_nolock<char>"() local_unnamed_addr {
dec_label_pc_43f8ec:
  %eax.0.reg2mem = alloca i32, !insn.addr !2253
  %0 = load i32, i32* @_environ_table, align 4, !insn.addr !2253
  %1 = icmp eq i32 %0, 0, !insn.addr !2254
  %2 = icmp eq i1 %1, false, !insn.addr !2255
  store i32 %0, i32* %eax.0.reg2mem, !insn.addr !2255
  br i1 %2, label %dec_label_pc_43f917, label %dec_label_pc_43f8f5, !insn.addr !2255

dec_label_pc_43f8f5:                              ; preds = %dec_label_pc_43f8ec
  %3 = load i32, i32* @_wenviron_table, align 4, !insn.addr !2256
  %4 = icmp eq i32 %3, %0, !insn.addr !2256
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2257
  br i1 %4, label %dec_label_pc_43f917, label %dec_label_pc_43f8fd, !insn.addr !2257

dec_label_pc_43f8fd:                              ; preds = %dec_label_pc_43f8f5
  %5 = call i32 @"common_initialize_environment_nolock<char>"(), !insn.addr !2258
  %6 = icmp eq i32 %5, 0, !insn.addr !2259
  br i1 %6, label %dec_label_pc_43f90f, label %dec_label_pc_43f906, !insn.addr !2260

dec_label_pc_43f906:                              ; preds = %dec_label_pc_43f8fd
  %7 = call i32 @"initialize_environment_by_cloning_nolock<char>"(), !insn.addr !2261
  %8 = icmp eq i32 %7, 0, !insn.addr !2262
  %9 = icmp eq i1 %8, false, !insn.addr !2263
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2263
  br i1 %9, label %dec_label_pc_43f917, label %dec_label_pc_43f90f, !insn.addr !2263

dec_label_pc_43f90f:                              ; preds = %dec_label_pc_43f906, %dec_label_pc_43f8fd
  %10 = load i32, i32* @_environ_table, align 4, !insn.addr !2264
  %11 = inttoptr i32 %10 to i8**, !insn.addr !2265
  ret i8** %11, !insn.addr !2265

dec_label_pc_43f917:                              ; preds = %dec_label_pc_43f8f5, %dec_label_pc_43f906, %dec_label_pc_43f8ec
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %12 = inttoptr i32 %eax.0.reload to i8**, !insn.addr !2266
  ret i8** %12, !insn.addr !2266
}

define i32 @"common_initialize_environment_nolock<char>"() local_unnamed_addr {
dec_label_pc_43f95a:
  %edi.1.reg2mem = alloca i32, !insn.addr !2267
  %edi.0.reg2mem = alloca i32, !insn.addr !2267
  %0 = load i32, i32* @_environ_table, align 4, !insn.addr !2267
  %1 = icmp eq i32 %0, 0, !insn.addr !2267
  br i1 %1, label %dec_label_pc_43f966, label %dec_label_pc_43f963, !insn.addr !2268

dec_label_pc_43f963:                              ; preds = %dec_label_pc_43f95a
  ret i32 0, !insn.addr !2269

dec_label_pc_43f966:                              ; preds = %dec_label_pc_43f95a
  %2 = call i32 @function_40333c(), !insn.addr !2270
  %3 = call i32 @function_403dfa(), !insn.addr !2271
  %4 = icmp eq i32 %3, 0, !insn.addr !2272
  %5 = icmp eq i1 %4, false, !insn.addr !2273
  store i32 -1, i32* %edi.1.reg2mem, !insn.addr !2273
  br i1 %5, label %dec_label_pc_43f97d, label %dec_label_pc_43f9a1, !insn.addr !2273

dec_label_pc_43f97d:                              ; preds = %dec_label_pc_43f966
  %6 = inttoptr i32 %3 to i8*, !insn.addr !2274
  %7 = call i8** @"create_environment<char>"(i8* %6), !insn.addr !2275
  %8 = icmp eq i8** %7, null, !insn.addr !2276
  %9 = icmp eq i1 %8, false, !insn.addr !2277
  store i32 -1, i32* %edi.0.reg2mem, !insn.addr !2277
  br i1 %9, label %dec_label_pc_43f98d, label %dec_label_pc_43f999, !insn.addr !2277

dec_label_pc_43f98d:                              ; preds = %dec_label_pc_43f97d
  %10 = ptrtoint i8** %7 to i32, !insn.addr !2275
  store i32 %10, i32* bitcast (i8*** @__dcrt_initial_narrow_environment to i32*), align 4, !insn.addr !2278
  store i32 %10, i32* @_environ_table, align 4, !insn.addr !2279
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !2279
  br label %dec_label_pc_43f999, !insn.addr !2279

dec_label_pc_43f999:                              ; preds = %dec_label_pc_43f97d, %dec_label_pc_43f98d
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  call void @_free_base(i32* null), !insn.addr !2280
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !2281
  br label %dec_label_pc_43f9a1, !insn.addr !2281

dec_label_pc_43f9a1:                              ; preds = %dec_label_pc_43f966, %dec_label_pc_43f999
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %11 = inttoptr i32 %3 to i32*
  call void @_free_base(i32* %11), !insn.addr !2282
  ret i32 %edi.1.reload, !insn.addr !2283
}

define i8** @"create_environment<char>"(i8* %environment_block) local_unnamed_addr {
dec_label_pc_43fabe:
  %edi.0.reg2mem = alloca i8**, !insn.addr !2284
  %stack_var_-8.18.reg2mem = alloca i32, !insn.addr !2284
  %ebx.010.reg2mem = alloca i32, !insn.addr !2284
  %.reg2mem23 = alloca i8, !insn.addr !2284
  %stack_var_-8.0.reg2mem = alloca i32, !insn.addr !2284
  %ecx.1.reg2mem = alloca i32, !insn.addr !2284
  %edx.1.lcssa.reg2mem = alloca i32, !insn.addr !2284
  %ecx.0.reg2mem = alloca i32, !insn.addr !2284
  %edx.111.reg2mem = alloca i32, !insn.addr !2284
  %esi.012.reg2mem = alloca i32, !insn.addr !2284
  %.reg2mem = alloca i8, !insn.addr !2284
  %0 = ptrtoint i8* %environment_block to i32
  %stack_var_-24 = alloca i32, align 4
  %1 = load i8, i8* %environment_block, align 1, !insn.addr !2285
  %2 = icmp eq i8 %1, 0, !insn.addr !2286
  %3 = icmp eq i1 %2, false, !insn.addr !2287
  store i8 %1, i8* %.reg2mem, !insn.addr !2287
  store i32 %0, i32* %esi.012.reg2mem, !insn.addr !2287
  store i32 0, i32* %edx.111.reg2mem, !insn.addr !2287
  store i32 1, i32* %edx.1.lcssa.reg2mem, !insn.addr !2287
  br i1 %3, label %dec_label_pc_43fad3, label %dec_label_pc_43faef, !insn.addr !2287

dec_label_pc_43fad3:                              ; preds = %dec_label_pc_43fabe, %dec_label_pc_43fae4
  %edx.111.reload = load i32, i32* %edx.111.reg2mem
  %esi.012.reload = load i32, i32* %esi.012.reg2mem
  %.reload = load i8, i8* %.reg2mem
  %4 = icmp ne i8 %.reload, 61, !insn.addr !2288
  store i32 %esi.012.reload, i32* %ecx.0.reg2mem, !insn.addr !2289
  br label %dec_label_pc_43fadd, !insn.addr !2289

dec_label_pc_43fadd:                              ; preds = %dec_label_pc_43fadd, %dec_label_pc_43fad3
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %5 = inttoptr i32 %ecx.0.reload to i8*, !insn.addr !2290
  %6 = load i8, i8* %5, align 1, !insn.addr !2290
  %7 = add i32 %ecx.0.reload, 1, !insn.addr !2291
  %8 = icmp eq i8 %6, 0, !insn.addr !2292
  %9 = icmp eq i1 %8, false, !insn.addr !2293
  store i32 %7, i32* %ecx.0.reg2mem, !insn.addr !2293
  br i1 %9, label %dec_label_pc_43fadd, label %dec_label_pc_43fae4, !insn.addr !2293

dec_label_pc_43fae4:                              ; preds = %dec_label_pc_43fadd
  %10 = zext i1 %4 to i32
  %spec.select = add i32 %edx.111.reload, %10
  %11 = inttoptr i32 %7 to i8*, !insn.addr !2294
  %12 = load i8, i8* %11, align 1, !insn.addr !2294
  %13 = icmp eq i8 %12, 0, !insn.addr !2286
  %14 = icmp eq i1 %13, false, !insn.addr !2287
  store i8 %12, i8* %.reg2mem, !insn.addr !2287
  store i32 %7, i32* %esi.012.reg2mem, !insn.addr !2287
  store i32 %spec.select, i32* %edx.111.reg2mem, !insn.addr !2287
  br i1 %14, label %dec_label_pc_43fad3, label %dec_label_pc_43faeb.dec_label_pc_43faef_crit_edge, !insn.addr !2287

dec_label_pc_43faeb.dec_label_pc_43faef_crit_edge: ; preds = %dec_label_pc_43fae4
  %phitmp20 = add i32 %spec.select, 1
  store i32 %phitmp20, i32* %edx.1.lcssa.reg2mem
  br label %dec_label_pc_43faef

dec_label_pc_43faef:                              ; preds = %dec_label_pc_43faeb.dec_label_pc_43faef_crit_edge, %dec_label_pc_43fabe
  %edx.1.lcssa.reload = load i32, i32* %edx.1.lcssa.reg2mem
  %15 = call i32* @_calloc_base(i32 %edx.1.lcssa.reload, i32 4), !insn.addr !2295
  %16 = ptrtoint i32* %stack_var_-24 to i32, !insn.addr !2296
  %17 = icmp eq i32* %15, null, !insn.addr !2297
  store i8** null, i8*** %edi.0.reg2mem, !insn.addr !2298
  br i1 %17, label %dec_label_pc_43fb72, label %dec_label_pc_43fb59.preheader, !insn.addr !2298

dec_label_pc_43fb59.preheader:                    ; preds = %dec_label_pc_43faef
  %18 = load i8, i8* %environment_block, align 1, !insn.addr !2299
  %19 = icmp eq i8 %18, 0, !insn.addr !2300
  %20 = icmp eq i1 %19, false, !insn.addr !2301
  br i1 %20, label %dec_label_pc_43fb0c.preheader.lr.ph, label %dec_label_pc_43fb72.loopexit, !insn.addr !2301

dec_label_pc_43fb0c.preheader.lr.ph:              ; preds = %dec_label_pc_43fb59.preheader
  %21 = ptrtoint i32* %15 to i32, !insn.addr !2295
  %22 = add i32 %16, -4
  %23 = inttoptr i32 %22 to i32*
  %24 = add i32 %16, -8
  %25 = inttoptr i32 %24 to i32*
  %26 = add i32 %16, -12
  %27 = inttoptr i32 %26 to i32*
  store i8 %18, i8* %.reg2mem23
  store i32 %0, i32* %ebx.010.reg2mem
  store i32 %21, i32* %stack_var_-8.18.reg2mem
  br label %dec_label_pc_43fb0c.preheader

dec_label_pc_43fb0c:                              ; preds = %dec_label_pc_43fb0c.preheader, %dec_label_pc_43fb0c
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %28 = inttoptr i32 %ecx.1.reload to i8*, !insn.addr !2302
  %29 = load i8, i8* %28, align 1, !insn.addr !2302
  %30 = add i32 %ecx.1.reload, 1, !insn.addr !2303
  %31 = icmp eq i8 %29, 0, !insn.addr !2304
  %32 = icmp eq i1 %31, false, !insn.addr !2305
  store i32 %30, i32* %ecx.1.reg2mem, !insn.addr !2305
  br i1 %32, label %dec_label_pc_43fb0c, label %dec_label_pc_43fb13, !insn.addr !2305

dec_label_pc_43fb13:                              ; preds = %dec_label_pc_43fb0c
  %33 = icmp eq i8 %.reload24, 61, !insn.addr !2306
  store i32 %stack_var_-8.18.reload, i32* %stack_var_-8.0.reg2mem, !insn.addr !2307
  br i1 %33, label %dec_label_pc_43fb57, label %dec_label_pc_43fb20, !insn.addr !2307

dec_label_pc_43fb20:                              ; preds = %dec_label_pc_43fb13
  %34 = sub i32 %ecx.1.reload, %ebx.010.reload, !insn.addr !2308
  %35 = add i32 %34, 1, !insn.addr !2309
  store i32 1, i32* %23, align 4, !insn.addr !2310
  store i32 %35, i32* %25, align 4, !insn.addr !2311
  %36 = call i32* @_calloc_base(i32 %35, i32 ptrtoint (i32* @80 to i32)), !insn.addr !2312
  %37 = icmp eq i32* %36, null, !insn.addr !2313
  br i1 %37, label %dec_label_pc_43fb61, label %dec_label_pc_43fb30, !insn.addr !2314

dec_label_pc_43fb30:                              ; preds = %dec_label_pc_43fb20
  %38 = ptrtoint i32* %36 to i32, !insn.addr !2312
  store i32 %ebx.010.reload, i32* %23, align 4, !insn.addr !2315
  store i32 %35, i32* %25, align 4, !insn.addr !2316
  store i32 %38, i32* %27, align 4, !insn.addr !2317
  %39 = call i32 @strcpy_s(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*)), !insn.addr !2318
  %40 = icmp eq i32 %39, 0, !insn.addr !2319
  %41 = icmp eq i1 %40, false, !insn.addr !2320
  store i32 0, i32* %23, align 4
  br i1 %41, label %dec_label_pc_43fb81, label %dec_label_pc_43fb41, !insn.addr !2320

dec_label_pc_43fb41:                              ; preds = %dec_label_pc_43fb30
  %42 = inttoptr i32 %stack_var_-8.18.reload to i32*, !insn.addr !2321
  store i32 %38, i32* %42, align 4, !insn.addr !2321
  %43 = add i32 %stack_var_-8.18.reload, 4, !insn.addr !2322
  %44 = inttoptr i32 %43 to i32*, !insn.addr !2323
  call void @_free_base(i32* %44), !insn.addr !2323
  store i32 %43, i32* %stack_var_-8.0.reg2mem, !insn.addr !2324
  br label %dec_label_pc_43fb57, !insn.addr !2324

dec_label_pc_43fb57:                              ; preds = %dec_label_pc_43fb41, %dec_label_pc_43fb13
  %stack_var_-8.0.reload = load i32, i32* %stack_var_-8.0.reg2mem
  %45 = inttoptr i32 %30 to i8*, !insn.addr !2299
  %46 = load i8, i8* %45, align 1, !insn.addr !2299
  %47 = icmp eq i8 %46, 0, !insn.addr !2300
  %48 = icmp eq i1 %47, false, !insn.addr !2301
  store i8 %46, i8* %.reg2mem23, !insn.addr !2301
  store i32 %30, i32* %ebx.010.reg2mem, !insn.addr !2301
  store i32 %stack_var_-8.0.reload, i32* %stack_var_-8.18.reg2mem, !insn.addr !2301
  br i1 %48, label %dec_label_pc_43fb0c.preheader, label %dec_label_pc_43fb72.loopexit, !insn.addr !2301

dec_label_pc_43fb0c.preheader:                    ; preds = %dec_label_pc_43fb0c.preheader.lr.ph, %dec_label_pc_43fb57
  %stack_var_-8.18.reload = load i32, i32* %stack_var_-8.18.reg2mem
  %ebx.010.reload = load i32, i32* %ebx.010.reg2mem
  %.reload24 = load i8, i8* %.reg2mem23
  store i32 %ebx.010.reload, i32* %ecx.1.reg2mem
  br label %dec_label_pc_43fb0c

dec_label_pc_43fb61:                              ; preds = %dec_label_pc_43fb20
  store i32 %21, i32* %23, align 4, !insn.addr !2325
  call void @"free_environment<char>"(i8** bitcast (i32* @80 to i8**)), !insn.addr !2326
  store i32 0, i32* %25, align 4, !insn.addr !2327
  call void @_free_base(i32* nonnull @80), !insn.addr !2328
  store i8** null, i8*** %edi.0.reg2mem, !insn.addr !2329
  br label %dec_label_pc_43fb72, !insn.addr !2329

dec_label_pc_43fb72.loopexit:                     ; preds = %dec_label_pc_43fb57, %dec_label_pc_43fb59.preheader
  %phitmp = bitcast i32* %15 to i8**
  store i8** %phitmp, i8*** %edi.0.reg2mem
  br label %dec_label_pc_43fb72

dec_label_pc_43fb72:                              ; preds = %dec_label_pc_43fb72.loopexit, %dec_label_pc_43faef, %dec_label_pc_43fb61
  %edi.0.reload = load i8**, i8*** %edi.0.reg2mem
  %49 = add i32 %16, -4, !insn.addr !2330
  %50 = inttoptr i32 %49 to i32*, !insn.addr !2330
  store i32 0, i32* %50, align 4, !insn.addr !2330
  call void @_free_base(i32* nonnull @80), !insn.addr !2331
  ret i8** %edi.0.reload, !insn.addr !2332

dec_label_pc_43fb81:                              ; preds = %dec_label_pc_43fb30
  store i32 0, i32* %25, align 4, !insn.addr !2333
  store i32 0, i32* %27, align 4, !insn.addr !2334
  %51 = add i32 %16, -16, !insn.addr !2335
  %52 = inttoptr i32 %51 to i32*, !insn.addr !2335
  store i32 0, i32* %52, align 4, !insn.addr !2335
  %53 = add i32 %16, -20, !insn.addr !2336
  %54 = inttoptr i32 %53 to i32*, !insn.addr !2336
  store i32 0, i32* %54, align 4, !insn.addr !2336
  %55 = call i32 @__invoke_watson(), !insn.addr !2337
  %56 = call i32 @__asm_int3(), !insn.addr !2338
  %57 = call i32 @__asm_int3(), !insn.addr !2339
  %58 = call i32 @__asm_int3(), !insn.addr !2340
  %59 = call i32 @__asm_int3(), !insn.addr !2341
  %60 = call i32 @__asm_int3(), !insn.addr !2342
  %61 = call i32 @__asm_int3(), !insn.addr !2343
  %62 = call i32 @__asm_int3(), !insn.addr !2344
  %63 = call i32 @__asm_int3(), !insn.addr !2345
  %64 = call i32 @__asm_int3(), !insn.addr !2346
  %65 = call i32 @__asm_int3(), !insn.addr !2347
  %66 = call i32 @__asm_int3(), !insn.addr !2348
  %67 = call i32 @__asm_int3(), !insn.addr !2349
  %68 = call i32 @__asm_int3(), !insn.addr !2350
  %69 = call i32 @__asm_int3(), !insn.addr !2351
  %70 = call i32 @__asm_int3(), !insn.addr !2352
  %71 = call i32 @__asm_int3(), !insn.addr !2353
  %72 = call i32 @__asm_int3(), !insn.addr !2354
  %73 = call i32 @__asm_int3(), !insn.addr !2355
  %74 = call i32 @__asm_int3(), !insn.addr !2356
  %75 = call i32 @__asm_int3(), !insn.addr !2357
  %76 = call i32 @__asm_int3(), !insn.addr !2358
  %77 = call i32 @__asm_int3(), !insn.addr !2359
  %78 = call i32 @__asm_int3(), !insn.addr !2360
  %79 = call i32 @__asm_int3(), !insn.addr !2361
  %80 = call i32 @__asm_int3(), !insn.addr !2362
  %81 = call i32 @__asm_int3(), !insn.addr !2363
  %82 = call i32 @__asm_int3(), !insn.addr !2364
  %83 = call i32 @__asm_int3(), !insn.addr !2365
  %84 = call i32 @__asm_int3(), !insn.addr !2366
  %85 = call i32 @__asm_int3(), !insn.addr !2367
  %86 = call i32 @__asm_int3(), !insn.addr !2368
  %87 = call i32 @__asm_int3(), !insn.addr !2369
  %88 = call i32 @__asm_int3(), !insn.addr !2370
  %89 = call i32 @__asm_int3(), !insn.addr !2371
  %90 = call i32 @__asm_int3(), !insn.addr !2372
  %91 = call i32 @__asm_int3(), !insn.addr !2373
  %92 = call i32 @__asm_int3(), !insn.addr !2374
  %93 = call i32 @__asm_int3(), !insn.addr !2375
  %94 = call i32 @__asm_int3(), !insn.addr !2376
  %95 = call i32 @__asm_int3(), !insn.addr !2377
  %96 = call i32 @__asm_int3(), !insn.addr !2378
  %97 = call i32 @__asm_int3(), !insn.addr !2379
  %98 = call i32 @__asm_int3(), !insn.addr !2380
  %99 = call i32 @__asm_int3(), !insn.addr !2381
  %100 = call i32 @__asm_int3(), !insn.addr !2382
  %101 = call i32 @__asm_int3(), !insn.addr !2383
  %102 = call i32 @__asm_int3(), !insn.addr !2384
  %103 = call i32 @__asm_int3(), !insn.addr !2385
  %104 = call i32 @__asm_int3(), !insn.addr !2386
  %105 = call i32 @__asm_int3(), !insn.addr !2387
  %106 = call i32 @__asm_int3(), !insn.addr !2388
  %107 = call i32 @__asm_int3(), !insn.addr !2389
  %108 = call i32 @__asm_int3(), !insn.addr !2390
  %109 = inttoptr i32 %108 to i8**, !insn.addr !2390
  ret i8** %109, !insn.addr !2390
}

declare void @"free_environment<char>"(i8**) local_unnamed_addr

define i32 @"initialize_environment_by_cloning_nolock<char>"() local_unnamed_addr {
dec_label_pc_43fd90:
  %storemerge.reg2mem = alloca i32, !insn.addr !2391
  %edi.0.reg2mem = alloca i32, !insn.addr !2391
  %eax.0.reg2mem = alloca i32, !insn.addr !2391
  %stack_var_-12 = alloca i32, align 4
  %0 = load i32, i32* @_wenviron_table, align 4, !insn.addr !2392
  %1 = icmp eq i32 %0, 0, !insn.addr !2393
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !2394
  br i1 %1, label %dec_label_pc_43fe0f, label %dec_label_pc_43fd9f, !insn.addr !2394

dec_label_pc_43fd9f:                              ; preds = %dec_label_pc_43fd90
  %2 = inttoptr i32 %0 to i32*, !insn.addr !2395
  %3 = load i32, i32* %2, align 4, !insn.addr !2395
  %4 = icmp eq i32 %3, 0, !insn.addr !2396
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2397
  br i1 %4, label %dec_label_pc_43fe0f, label %dec_label_pc_43fda7.preheader, !insn.addr !2397

dec_label_pc_43fda7.preheader:                    ; preds = %dec_label_pc_43fd9f
  %5 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !2398
  %6 = add i32 %5, -4, !insn.addr !2399
  %7 = inttoptr i32 %6 to i32*
  %8 = add i32 %5, -8, !insn.addr !2400
  %9 = inttoptr i32 %8 to i32*, !insn.addr !2400
  %10 = add i32 %5, -12, !insn.addr !2401
  %11 = inttoptr i32 %10 to i32*, !insn.addr !2401
  %12 = add i32 %5, -16, !insn.addr !2402
  %13 = inttoptr i32 %12 to i32*, !insn.addr !2402
  %14 = add i32 %5, -20, !insn.addr !2403
  %15 = inttoptr i32 %14 to i32*, !insn.addr !2403
  %16 = add i32 %5, -24, !insn.addr !2404
  %17 = inttoptr i32 %16 to i32*, !insn.addr !2404
  %18 = add i32 %5, -28, !insn.addr !2405
  %19 = inttoptr i32 %18 to i32*, !insn.addr !2405
  %20 = add i32 %5, -32, !insn.addr !2406
  %21 = inttoptr i32 %20 to i32*, !insn.addr !2406
  store i32 %3, i32* %eax.0.reg2mem
  store i32 %0, i32* %edi.0.reg2mem
  br label %dec_label_pc_43fda7

dec_label_pc_43fda7:                              ; preds = %dec_label_pc_43fda7.preheader, %dec_label_pc_43fde8
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  store i32 0, i32* %7, align 4, !insn.addr !2399
  store i32 0, i32* %9, align 4, !insn.addr !2400
  store i32 0, i32* %11, align 4, !insn.addr !2401
  store i32 0, i32* %13, align 4, !insn.addr !2402
  store i32 -1, i32* %15, align 4, !insn.addr !2403
  store i32 %eax.0.reload, i32* %17, align 4, !insn.addr !2404
  store i32 0, i32* %19, align 4, !insn.addr !2405
  store i32 0, i32* %21, align 4, !insn.addr !2406
  %22 = call i32 @function_404601(), !insn.addr !2407
  %23 = icmp eq i32 %22, 0, !insn.addr !2408
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !2409
  br i1 %23, label %dec_label_pc_43fe0f, label %dec_label_pc_43fdbe, !insn.addr !2409

dec_label_pc_43fdbe:                              ; preds = %dec_label_pc_43fda7
  store i32 1, i32* %7, align 4, !insn.addr !2410
  store i32 %22, i32* %9, align 4, !insn.addr !2411
  %24 = call i32* @_calloc_base(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2412
  %25 = icmp eq i32* %24, null, !insn.addr !2413
  br i1 %25, label %dec_label_pc_43fe05, label %dec_label_pc_43fdce, !insn.addr !2414

dec_label_pc_43fdce:                              ; preds = %dec_label_pc_43fdbe
  %26 = ptrtoint i32* %24 to i32, !insn.addr !2412
  store i32 0, i32* %7, align 4, !insn.addr !2415
  store i32 0, i32* %9, align 4, !insn.addr !2416
  store i32 %22, i32* %11, align 4, !insn.addr !2417
  store i32 %26, i32* %13, align 4, !insn.addr !2418
  store i32 -1, i32* %15, align 4, !insn.addr !2419
  %27 = inttoptr i32 %edi.0.reload to i32*, !insn.addr !2420
  %28 = load i32, i32* %27, align 4, !insn.addr !2420
  store i32 %28, i32* %17, align 4, !insn.addr !2420
  store i32 0, i32* %19, align 4, !insn.addr !2421
  store i32 0, i32* %21, align 4, !insn.addr !2422
  %29 = call i32 @function_404601(), !insn.addr !2423
  %30 = icmp eq i32 %29, 0, !insn.addr !2424
  br i1 %30, label %dec_label_pc_43fe05, label %dec_label_pc_43fde8, !insn.addr !2425

dec_label_pc_43fde8:                              ; preds = %dec_label_pc_43fdce
  store i32 0, i32* %7, align 4, !insn.addr !2426
  store i32 %26, i32* %9, align 4, !insn.addr !2427
  %31 = call i32 @function_403c47(), !insn.addr !2428
  store i32 0, i32* %11, align 4, !insn.addr !2429
  call void @_free_base(i32* nonnull @80), !insn.addr !2430
  %32 = add i32 %edi.0.reload, 4, !insn.addr !2431
  %33 = inttoptr i32 %32 to i32*, !insn.addr !2432
  %34 = load i32, i32* %33, align 4, !insn.addr !2432
  %35 = icmp eq i32 %34, 0, !insn.addr !2433
  %36 = icmp eq i1 %35, false, !insn.addr !2434
  store i32 %34, i32* %eax.0.reg2mem, !insn.addr !2434
  store i32 %32, i32* %edi.0.reg2mem, !insn.addr !2434
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2434
  br i1 %36, label %dec_label_pc_43fda7, label %dec_label_pc_43fe0f, !insn.addr !2434

dec_label_pc_43fe05:                              ; preds = %dec_label_pc_43fdbe, %dec_label_pc_43fdce
  %37 = ptrtoint i32* %24 to i32, !insn.addr !2412
  store i32 %37, i32* %7, align 4, !insn.addr !2435
  call void @_free_base(i32* nonnull @80), !insn.addr !2436
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !2437
  br label %dec_label_pc_43fe0f, !insn.addr !2437

dec_label_pc_43fe0f:                              ; preds = %dec_label_pc_43fda7, %dec_label_pc_43fde8, %dec_label_pc_43fd90, %dec_label_pc_43fe05, %dec_label_pc_43fd9f
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !2438
}

define i8** @__dcrt_get_or_create_narrow_environment_nolock() local_unnamed_addr {
dec_label_pc_44019e:
  %0 = call i8** @"common_get_or_create_environment_nolock<char>"(), !insn.addr !2439
  ret i8** %0, !insn.addr !2439
}

define void @_initterm(i32** %first, i32** %last) local_unnamed_addr {
dec_label_pc_440234:
  %edi.0.reg2mem = alloca i32, !insn.addr !2440
  %esi.0.reg2mem = alloca i32, !insn.addr !2440
  %0 = ptrtoint i32** %last to i32
  %1 = ptrtoint i32** %first to i32
  %2 = sub i32 3, %1, !insn.addr !2441
  %3 = add i32 %2, %0, !insn.addr !2442
  %4 = udiv i32 %3, 4, !insn.addr !2443
  %5 = icmp ult i32** %last, %first, !insn.addr !2444
  %6 = icmp ult i32 %3, 4
  %7 = or i1 %5, %6, !insn.addr !2445
  store i32 %1, i32* %esi.0.reg2mem, !insn.addr !2446
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !2446
  br i1 %7, label %dec_label_pc_440274, label %dec_label_pc_440258, !insn.addr !2446

dec_label_pc_440258:                              ; preds = %dec_label_pc_440234, %dec_label_pc_44026c
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %8 = inttoptr i32 %esi.0.reload to i32*, !insn.addr !2447
  %9 = load i32, i32* %8, align 4, !insn.addr !2447
  %10 = icmp eq i32 %9, 0, !insn.addr !2448
  br i1 %10, label %dec_label_pc_44026c, label %dec_label_pc_440261, !insn.addr !2449

dec_label_pc_440261:                              ; preds = %dec_label_pc_440258
  %11 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2450
  br label %dec_label_pc_44026c, !insn.addr !2451

dec_label_pc_44026c:                              ; preds = %dec_label_pc_440261, %dec_label_pc_440258
  %12 = add i32 %esi.0.reload, 4, !insn.addr !2452
  %13 = add i32 %edi.0.reload, 1, !insn.addr !2453
  %14 = icmp eq i32 %13, %4, !insn.addr !2454
  %15 = icmp eq i1 %14, false, !insn.addr !2455
  store i32 %12, i32* %esi.0.reg2mem, !insn.addr !2455
  store i32 %13, i32* %edi.0.reg2mem, !insn.addr !2455
  br i1 %15, label %dec_label_pc_440258, label %dec_label_pc_440274, !insn.addr !2455

dec_label_pc_440274:                              ; preds = %dec_label_pc_44026c, %dec_label_pc_440234
  ret void, !insn.addr !2456
}

define void @"__crt_seh_guarded_call<void>::operator()<<lambda_03b1d95aef87969028cfba75ccab2455>,<lambda_6e4b09c48022b2350581041d5f6b0c4c> &,<lambda_22bdf7517842c4b3e53723af5aa32b9e> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_4402c9:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a368, i32 8), !insn.addr !2457
  %2 = add i32 %0, 8, !insn.addr !2458
  %3 = inttoptr i32 %2 to i32*, !insn.addr !2458
  %4 = load i32, i32* %3, align 4, !insn.addr !2458
  %5 = inttoptr i32 %4 to i32*, !insn.addr !2459
  %6 = load i32, i32* %5, align 4, !insn.addr !2459
  %7 = call i32 @function_40452a(i32 %6), !insn.addr !2460
  %8 = add i32 %0, -4, !insn.addr !2461
  %9 = inttoptr i32 %8 to i32*, !insn.addr !2461
  store i32 0, i32* %9, align 4, !insn.addr !2461
  call void @"<lambda_6e4b09c48022b2350581041d5f6b0c4c>::operator()"(i32* nonnull @80), !insn.addr !2462
  store i32 -2, i32* %9, align 4, !insn.addr !2463
  %10 = call i32 @function_44030a(), !insn.addr !2464
  %11 = add i32 %0, -16, !insn.addr !2465
  %12 = inttoptr i32 %11 to i32*, !insn.addr !2465
  %13 = load i32, i32* %12, align 4, !insn.addr !2465
  call void @__writefsdword(i32 0, i32 %13), !insn.addr !2466
  ret void, !insn.addr !2467
}

define i32 @function_44030a() local_unnamed_addr {
dec_label_pc_44030a:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !2468
  %2 = inttoptr i32 %1 to i32*, !insn.addr !2468
  %3 = load i32, i32* %2, align 4, !insn.addr !2468
  %4 = inttoptr i32 %3 to i32*, !insn.addr !2469
  %5 = load i32, i32* %4, align 4, !insn.addr !2469
  %6 = call i32 @function_4017d5(i32 %5), !insn.addr !2470
  ret i32 %6, !insn.addr !2471
}

define void @"<lambda_6e4b09c48022b2350581041d5f6b0c4c>::operator()"(i32* %this) local_unnamed_addr {
dec_label_pc_440445:
  %esp.02.reg2mem = alloca i32, !insn.addr !2472
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca %_onexit_table_t.711, align 8
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_47a348 to i32), i32* %stack_var_-8, align 4, !insn.addr !2473
  %2 = call i32 @function_401b4f(i32* nonnull @global_var_47a348, i32 8), !insn.addr !2474
  %3 = load i8, i8* bitcast (i1* @c_exit_complete to i8*), align 1, !insn.addr !2475
  %4 = icmp eq i8 %3, 0, !insn.addr !2475
  %5 = icmp eq i1 %4, false, !insn.addr !2476
  br i1 %5, label %dec_label_pc_4404f6, label %dec_label_pc_440460, !insn.addr !2476

dec_label_pc_440460:                              ; preds = %dec_label_pc_440445
  store i32 1, i32* @c_termination_complete, align 4, !insn.addr !2477
  %6 = add i32 %0, -4, !insn.addr !2478
  %7 = inttoptr i32 %6 to i32*, !insn.addr !2478
  store i32 0, i32* %7, align 4, !insn.addr !2478
  br i1 icmp ne (i32 ptrtoint (i32* @c_termination_complete to i32), i32 1), label %dec_label_pc_4404b3.thread, label %dec_label_pc_4404b3, !insn.addr !2479

dec_label_pc_4404b3.thread:                       ; preds = %dec_label_pc_440460
  %8 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !2473
  store i32 -2, i32* %7, align 4, !insn.addr !2480
  store i32 %8, i32* %esp.02.reg2mem
  br label %dec_label_pc_4404d1

dec_label_pc_4404b3:                              ; preds = %dec_label_pc_440460
  store %_onexit_table_t.711 { i32** bitcast (%_onexit_table_t.711* @__acrt_at_quick_exit_table to i32**), i32** undef, i32** undef }, %_onexit_table_t.711* %stack_var_-12, align 8, !insn.addr !2481
  %9 = ptrtoint %_onexit_table_t.711* %stack_var_-12 to i32, !insn.addr !2481
  %10 = call i32 @_execute_onexit_table(%_onexit_table_t* bitcast (i32* @80 to %_onexit_table_t*)), !insn.addr !2482
  %11 = bitcast %_onexit_table_t.711* %stack_var_-12 to i32*, !insn.addr !2483
  %12 = load i32, i32* %11, align 8, !insn.addr !2483
  %13 = or i32 %9, 4, !insn.addr !2483
  store i32 -2, i32* %7, align 4, !insn.addr !2480
  %14 = icmp eq i32 %12, 0, !insn.addr !2484
  %15 = icmp eq i1 %14, false, !insn.addr !2485
  store i32 %13, i32* %esp.02.reg2mem, !insn.addr !2485
  br i1 %15, label %dec_label_pc_4404d1, label %dec_label_pc_4404c0, !insn.addr !2485

dec_label_pc_4404c0:                              ; preds = %dec_label_pc_4404b3
  %16 = add nsw i32 %13, -4, !insn.addr !2486
  %17 = inttoptr i32 %16 to i32*, !insn.addr !2486
  store i32 ptrtoint ([1 x i32*]* @__xp_z to i32), i32* %17, align 8, !insn.addr !2486
  %18 = add i32 %13, -8, !insn.addr !2487
  %19 = inttoptr i32 %18 to i32*, !insn.addr !2487
  store i32 ptrtoint ([1 x i32*]* @__xp_a to i32), i32* %19, align 4, !insn.addr !2487
  call void @_initterm(i32** bitcast (i32* @80 to i32**), i32** bitcast (i32* @80 to i32**)), !insn.addr !2488
  store i32 %13, i32* %esp.02.reg2mem, !insn.addr !2489
  br label %dec_label_pc_4404d1, !insn.addr !2489

dec_label_pc_4404d1:                              ; preds = %dec_label_pc_4404b3.thread, %dec_label_pc_4404c0, %dec_label_pc_4404b3
  %esp.02.reload = load i32, i32* %esp.02.reg2mem
  %20 = add i32 %esp.02.reload, -4, !insn.addr !2490
  %21 = inttoptr i32 %20 to i32*, !insn.addr !2490
  store i32 ptrtoint ([1 x i32*]* @__xt_z to i32), i32* %21, align 4, !insn.addr !2490
  %22 = add i32 %esp.02.reload, -8, !insn.addr !2491
  %23 = inttoptr i32 %22 to i32*, !insn.addr !2491
  store i32 ptrtoint ([1 x i32*]* @__xt_a to i32), i32* %23, align 4, !insn.addr !2491
  call void @_initterm(i32** bitcast (i32* @80 to i32**), i32** bitcast (i32* @80 to i32**)), !insn.addr !2492
  %24 = add i32 %1, 4, !insn.addr !2493
  %25 = inttoptr i32 %24 to i32*, !insn.addr !2493
  %26 = load i32, i32* %25, align 4, !insn.addr !2493
  %27 = inttoptr i32 %26 to i32*, !insn.addr !2494
  %28 = load i32, i32* %27, align 4, !insn.addr !2494
  %29 = icmp eq i32 %28, 0, !insn.addr !2494
  %30 = icmp eq i1 %29, false, !insn.addr !2495
  br i1 %30, label %dec_label_pc_4404f6, label %dec_label_pc_4404e9, !insn.addr !2495

dec_label_pc_4404e9:                              ; preds = %dec_label_pc_4404d1
  store i8 1, i8* bitcast (i1* @c_exit_complete to i8*), align 1, !insn.addr !2496
  %31 = add i32 %1, 8, !insn.addr !2497
  %32 = inttoptr i32 %31 to i32*, !insn.addr !2497
  %33 = load i32, i32* %32, align 4, !insn.addr !2497
  %34 = inttoptr i32 %33 to i8*, !insn.addr !2498
  store i8 1, i8* %34, align 1, !insn.addr !2498
  br label %dec_label_pc_4404f6, !insn.addr !2498

dec_label_pc_4404f6:                              ; preds = %dec_label_pc_4404e9, %dec_label_pc_4404d1, %dec_label_pc_440445
  %35 = add i32 %0, -16, !insn.addr !2499
  %36 = inttoptr i32 %35 to i32*, !insn.addr !2499
  %37 = load i32, i32* %36, align 4, !insn.addr !2499
  call void @__writefsdword(i32 0, i32 %37), !insn.addr !2500
  ret void, !insn.addr !2501
}

define void @common_exit(i32 %return_code, i32 %cleanup_mode, i32 %return_mode) local_unnamed_addr {
dec_label_pc_4405b3:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %0 = icmp eq i32 %cleanup_mode, 0, !insn.addr !2502
  %1 = icmp eq i1 %0, false, !insn.addr !2503
  br i1 %1, label %dec_label_pc_4405d3, label %dec_label_pc_4405c1, !insn.addr !2503

dec_label_pc_4405c1:                              ; preds = %dec_label_pc_4405b3
  %2 = call i1 @is_managed_app(), !insn.addr !2504
  %3 = icmp eq i1 %2, false, !insn.addr !2505
  br i1 %3, label %dec_label_pc_4405d3, label %dec_label_pc_4405ca, !insn.addr !2506

dec_label_pc_4405ca:                              ; preds = %dec_label_pc_4405c1
  call void @try_cor_exit_process(i32 %return_code), !insn.addr !2507
  br label %dec_label_pc_4405d3, !insn.addr !2508

dec_label_pc_4405d3:                              ; preds = %dec_label_pc_4405ca, %dec_label_pc_4405c1, %dec_label_pc_4405b3
  %4 = ptrtoint i32* %stack_var_8 to i32, !insn.addr !2509
  store i32 %4, i32* %stack_var_-28, align 4, !insn.addr !2509
  store i32 2, i32* %stack_var_-12, align 4, !insn.addr !2510
  store i32 2, i32* %stack_var_-16, align 4, !insn.addr !2511
  %5 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !2512
  call void @"__crt_seh_guarded_call<void>::operator()<<lambda_03b1d95aef87969028cfba75ccab2455>,<lambda_6e4b09c48022b2350581041d5f6b0c4c> &,<lambda_22bdf7517842c4b3e53723af5aa32b9e> >"(i32 %5, i32* nonnull %stack_var_-28, i32* nonnull %stack_var_-12, i32* nonnull %stack_var_8), !insn.addr !2513
  br i1 %0, label %dec_label_pc_44060e, label %dec_label_pc_44060c, !insn.addr !2514

dec_label_pc_44060c:                              ; preds = %dec_label_pc_4405d3
  ret void, !insn.addr !2515

dec_label_pc_44060e:                              ; preds = %dec_label_pc_4405d3
  call void @exit_or_terminate_process(i32 %return_code), !insn.addr !2516
  unreachable, !insn.addr !2516
}

declare void @exit_or_terminate_process(i32) local_unnamed_addr

define i1 @is_managed_app() local_unnamed_addr {
dec_label_pc_44068b:
  %merge.reg2mem = alloca i1, !insn.addr !2517
  %0 = call i32* @GetModuleHandleW(i16* null), !insn.addr !2518
  %1 = icmp eq i32* %0, null, !insn.addr !2519
  br i1 %1, label %dec_label_pc_4406cb, label %dec_label_pc_440697, !insn.addr !2520

dec_label_pc_440697:                              ; preds = %dec_label_pc_44068b
  %2 = bitcast i32* %0 to i16*, !insn.addr !2521
  %3 = load i16, i16* %2, align 2, !insn.addr !2521
  %4 = icmp eq i16 %3, 23117, !insn.addr !2521
  %5 = icmp eq i1 %4, false, !insn.addr !2522
  br i1 %5, label %dec_label_pc_4406cb, label %dec_label_pc_4406a1, !insn.addr !2522

dec_label_pc_4406a1:                              ; preds = %dec_label_pc_440697
  %6 = ptrtoint i32* %0 to i32, !insn.addr !2518
  %7 = add i32 %6, 60, !insn.addr !2523
  %8 = inttoptr i32 %7 to i32*, !insn.addr !2523
  %9 = load i32, i32* %8, align 4, !insn.addr !2523
  %10 = add i32 %9, %6, !insn.addr !2524
  %11 = inttoptr i32 %10 to i32*, !insn.addr !2525
  %12 = load i32, i32* %11, align 4, !insn.addr !2525
  %13 = icmp eq i32 %12, 17744, !insn.addr !2525
  %14 = icmp eq i1 %13, false, !insn.addr !2526
  br i1 %14, label %dec_label_pc_4406cb, label %dec_label_pc_4406ae, !insn.addr !2526

dec_label_pc_4406ae:                              ; preds = %dec_label_pc_4406a1
  %15 = add i32 %10, 24, !insn.addr !2527
  %16 = inttoptr i32 %15 to i16*, !insn.addr !2527
  %17 = load i16, i16* %16, align 2, !insn.addr !2527
  %18 = icmp eq i16 %17, 267, !insn.addr !2527
  %19 = icmp eq i1 %18, false, !insn.addr !2528
  br i1 %19, label %dec_label_pc_4406cb, label %dec_label_pc_4406b9, !insn.addr !2528

dec_label_pc_4406b9:                              ; preds = %dec_label_pc_4406ae
  %20 = add i32 %10, 116, !insn.addr !2529
  %21 = inttoptr i32 %20 to i32*, !insn.addr !2529
  %22 = load i32, i32* %21, align 4, !insn.addr !2529
  %23 = icmp ult i32 %22, 15
  br i1 %23, label %dec_label_pc_4406cb, label %dec_label_pc_4406bf, !insn.addr !2530

dec_label_pc_4406bf:                              ; preds = %dec_label_pc_4406b9
  %24 = add i32 %10, 232, !insn.addr !2531
  %25 = inttoptr i32 %24 to i32*, !insn.addr !2531
  %26 = load i32, i32* %25, align 4, !insn.addr !2531
  %27 = icmp eq i32 %26, 0, !insn.addr !2531
  store i1 true, i1* %merge.reg2mem, !insn.addr !2532
  br i1 %27, label %dec_label_pc_4406cb, label %dec_label_pc_4406c8, !insn.addr !2532

dec_label_pc_4406c8:                              ; preds = %dec_label_pc_4406cb, %dec_label_pc_4406bf
  %merge.reload = load i1, i1* %merge.reg2mem
  ret i1 %merge.reload, !insn.addr !2533

dec_label_pc_4406cb:                              ; preds = %dec_label_pc_4406bf, %dec_label_pc_4406b9, %dec_label_pc_4406ae, %dec_label_pc_4406a1, %dec_label_pc_440697, %dec_label_pc_44068b
  store i1 false, i1* %merge.reg2mem
  br label %dec_label_pc_4406c8
}

define void @try_cor_exit_process(i32 %return_code) local_unnamed_addr {
dec_label_pc_440708:
  %esp.1.reg2mem = alloca i32, !insn.addr !2534
  %esp.0.in.reg2mem = alloca i32*, !insn.addr !2534
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %stack_var_-8, align 4, !insn.addr !2535
  %0 = bitcast i32* %stack_var_-8 to i32**
  store i32 0, i32* %stack_var_-20, align 4, !insn.addr !2536
  %1 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !2536
  %2 = call i1 @GetModuleHandleExW(i32 0, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @global_var_47248c, i32 0, i32 0), i32** nonnull %0), !insn.addr !2537
  %3 = icmp eq i1 %2, false, !insn.addr !2538
  store i32 %1, i32* %esp.1.reg2mem, !insn.addr !2539
  br i1 %3, label %dec_label_pc_44074a, label %dec_label_pc_440727, !insn.addr !2539

dec_label_pc_440727:                              ; preds = %dec_label_pc_440708
  %4 = load i32, i32* %stack_var_-8, align 4, !insn.addr !2540
  store i32 %4, i32* %stack_var_-32, align 4, !insn.addr !2540
  %5 = inttoptr i32 %4 to i32*, !insn.addr !2541
  %6 = call i32 ()* @GetProcAddress(i32* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_4724a8, i32 0, i32 0)), !insn.addr !2541
  %7 = icmp eq i32 ()* %6, null, !insn.addr !2542
  store i32* %stack_var_-32, i32** %esp.0.in.reg2mem, !insn.addr !2543
  br i1 %7, label %dec_label_pc_440749, label %dec_label_pc_44073c, !insn.addr !2543

dec_label_pc_44073c:                              ; preds = %dec_label_pc_440727
  store i32 %return_code, i32* %stack_var_-36, align 4, !insn.addr !2544
  %8 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2545
  store i32* %stack_var_-36, i32** %esp.0.in.reg2mem, !insn.addr !2546
  br label %dec_label_pc_440749, !insn.addr !2546

dec_label_pc_440749:                              ; preds = %dec_label_pc_44073c, %dec_label_pc_440727
  %esp.0.in.reload = load i32*, i32** %esp.0.in.reg2mem
  %esp.0 = ptrtoint i32* %esp.0.in.reload to i32
  %9 = add i32 %esp.0, 4, !insn.addr !2547
  store i32 %9, i32* %esp.1.reg2mem, !insn.addr !2547
  br label %dec_label_pc_44074a, !insn.addr !2547

dec_label_pc_44074a:                              ; preds = %dec_label_pc_440749, %dec_label_pc_440708
  %10 = load i32, i32* %stack_var_-8, align 4, !insn.addr !2548
  %11 = icmp eq i32 %10, 0, !insn.addr !2548
  br i1 %11, label %dec_label_pc_440759, label %dec_label_pc_440750, !insn.addr !2549

dec_label_pc_440750:                              ; preds = %dec_label_pc_44074a
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %12 = add i32 %esp.1.reload, -4, !insn.addr !2550
  %13 = inttoptr i32 %12 to i32*, !insn.addr !2550
  store i32 %10, i32* %13, align 4, !insn.addr !2550
  %14 = call i1 @FreeLibrary(i32* nonnull @80), !insn.addr !2551
  br label %dec_label_pc_440759, !insn.addr !2551

dec_label_pc_440759:                              ; preds = %dec_label_pc_440750, %dec_label_pc_44074a
  ret void, !insn.addr !2552
}

define void @_exit(i32 %return_code) local_unnamed_addr {
dec_label_pc_4407c0:
  call void @common_exit(i32 %return_code, i32 2, i32 0), !insn.addr !2553
  ret void, !insn.addr !2554
}

define void @__acrt_set_locale_changed() local_unnamed_addr {
dec_label_pc_4415fd:
  store i32 1, i32* @__acrt_locale_changed_data, align 4, !insn.addr !2555
  ret void, !insn.addr !2556
}

define i32 @"__crt_seh_guarded_call<int>::operator()<<lambda_69a2805e680e0e292e8ba93315fe43a8>,<lambda_f03950bc5685219e0bcd2087efbe011e> &,<lambda_03fcd07e894ec930e3f35da366ca99d6> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_443324:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a498, i32 12), !insn.addr !2557
  %2 = add i32 %0, -28, !insn.addr !2558
  %3 = inttoptr i32 %2 to i32*, !insn.addr !2558
  store i32 0, i32* %3, align 4, !insn.addr !2558
  %4 = add i32 %0, 8, !insn.addr !2559
  %5 = inttoptr i32 %4 to i32*, !insn.addr !2559
  %6 = load i32, i32* %5, align 4, !insn.addr !2559
  %7 = inttoptr i32 %6 to i32*, !insn.addr !2560
  %8 = load i32, i32* %7, align 4, !insn.addr !2560
  %9 = call i32 @function_40452a(i32 %8), !insn.addr !2561
  %10 = add i32 %0, -4, !insn.addr !2562
  %11 = inttoptr i32 %10 to i32*, !insn.addr !2562
  store i32 0, i32* %11, align 4, !insn.addr !2562
  %12 = call i32 @"<lambda_f03950bc5685219e0bcd2087efbe011e>::operator()"(i32* nonnull @80), !insn.addr !2563
  store i32 %12, i32* %3, align 4, !insn.addr !2564
  store i32 -2, i32* %11, align 4, !insn.addr !2565
  %13 = call i32 @function_443373(), !insn.addr !2566
  %14 = add i32 %0, -16, !insn.addr !2567
  %15 = inttoptr i32 %14 to i32*, !insn.addr !2567
  %16 = load i32, i32* %15, align 4, !insn.addr !2567
  call void @__writefsdword(i32 0, i32 %16), !insn.addr !2568
  ret i32 %12, !insn.addr !2569
}

define i32 @function_443373() local_unnamed_addr {
dec_label_pc_443373:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !2570
  %2 = inttoptr i32 %1 to i32*, !insn.addr !2570
  %3 = load i32, i32* %2, align 4, !insn.addr !2570
  %4 = inttoptr i32 %3 to i32*, !insn.addr !2571
  %5 = load i32, i32* %4, align 4, !insn.addr !2571
  %6 = call i32 @function_4017d5(i32 %5), !insn.addr !2572
  ret i32 %6, !insn.addr !2573
}

define i32 @"<lambda_f03950bc5685219e0bcd2087efbe011e>::operator()"(i32* %this) local_unnamed_addr {
dec_label_pc_44375f:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = icmp eq i32 %0, 0, !insn.addr !2574
  %spec.select = sext i1 %1 to i32
  ret i32 %spec.select, !insn.addr !2575
}

define i32 @_execute_onexit_table(%_onexit_table_t* %table) local_unnamed_addr {
dec_label_pc_4438c1:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %0 = ptrtoint i32* %stack_var_4 to i32, !insn.addr !2576
  store i32 %0, i32* %stack_var_-16, align 4, !insn.addr !2576
  store i32 2, i32* %stack_var_-12, align 4, !insn.addr !2577
  store i32 2, i32* %stack_var_-20, align 4, !insn.addr !2578
  %1 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !2579
  %2 = call i32 @"__crt_seh_guarded_call<int>::operator()<<lambda_69a2805e680e0e292e8ba93315fe43a8>,<lambda_f03950bc5685219e0bcd2087efbe011e> &,<lambda_03fcd07e894ec930e3f35da366ca99d6> >"(i32 %1, i32* nonnull %stack_var_-16, i32* nonnull %stack_var_-12, i32* inttoptr (i32 2 to i32*)), !insn.addr !2580
  ret i32 %2, !insn.addr !2581
}

declare i8* @"__crt_fast_encode_pointer<void *>"(i8*) local_unnamed_addr

declare i32 @strcpy_s(i8*, i32, i8*) local_unnamed_addr

define void @abort() local_unnamed_addr {
dec_label_pc_443de8:
  %esp.1.reg2mem = alloca i32, !insn.addr !2582
  %esp.0.reg2mem = alloca i32, !insn.addr !2582
  %stack_var_0 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %0 = call i32 @function_403d3c(), !insn.addr !2582
  %1 = icmp eq i32 %0, 0, !insn.addr !2583
  br i1 %1, label %dec_label_pc_443df9, label %dec_label_pc_443df1, !insn.addr !2584

dec_label_pc_443df1:                              ; preds = %dec_label_pc_443de8
  store i32 22, i32* %stack_var_-4, align 4, !insn.addr !2585
  %2 = call i32 @raise(i32 22), !insn.addr !2586
  %3 = ptrtoint i32* %stack_var_0 to i32, !insn.addr !2587
  store i32 %3, i32* %esp.0.reg2mem, !insn.addr !2587
  br label %dec_label_pc_443df9, !insn.addr !2587

dec_label_pc_443df9:                              ; preds = %dec_label_pc_443df1, %dec_label_pc_443de8
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %4 = load i8, i8* bitcast (i32* @__abort_behavior to i8*), align 4, !insn.addr !2588
  %5 = and i8 %4, 2, !insn.addr !2588
  %6 = icmp eq i8 %5, 0, !insn.addr !2588
  store i32 %esp.0.reload, i32* %esp.1.reg2mem, !insn.addr !2589
  br i1 %6, label %dec_label_pc_443e24, label %dec_label_pc_443e02, !insn.addr !2589

dec_label_pc_443e02:                              ; preds = %dec_label_pc_443df9
  store i32 23, i32* %stack_var_-4, align 4, !insn.addr !2590
  %7 = call i1 @IsProcessorFeaturePresent(i32 23), !insn.addr !2591
  %8 = icmp eq i1 %7, false, !insn.addr !2592
  br i1 %8, label %dec_label_pc_443e13, label %dec_label_pc_443e0e, !insn.addr !2593

dec_label_pc_443e0e:                              ; preds = %dec_label_pc_443e02
  call void @__asm_int(i32 41), !insn.addr !2594
  br label %dec_label_pc_443e13, !insn.addr !2594

dec_label_pc_443e13:                              ; preds = %dec_label_pc_443e0e, %dec_label_pc_443e02
  %9 = call i32 @function_403ea4(i32 3, i32 1073741845, i32 1), !insn.addr !2595
  %10 = ptrtoint i32* %stack_var_-4 to i32, !insn.addr !2596
  store i32 %10, i32* %esp.1.reg2mem, !insn.addr !2596
  br label %dec_label_pc_443e24, !insn.addr !2596

dec_label_pc_443e24:                              ; preds = %dec_label_pc_443e13, %dec_label_pc_443df9
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %11 = add i32 %esp.1.reload, -4, !insn.addr !2597
  %12 = inttoptr i32 %11 to i32*, !insn.addr !2597
  store i32 3, i32* %12, align 4, !insn.addr !2597
  call void @_exit(i32 ptrtoint (i32* @80 to i32)), !insn.addr !2598
  %13 = call i32 @__asm_int3(), !insn.addr !2599
  %14 = call i32 @__asm_int3(), !insn.addr !2600
  %15 = call i32 @__asm_int3(), !insn.addr !2601
  %16 = call i32 @__asm_int3(), !insn.addr !2602
  %17 = call i32 @__asm_int3(), !insn.addr !2603
  %18 = call i32 @__asm_int3(), !insn.addr !2604
  %19 = call i32 @__asm_int3(), !insn.addr !2605
  %20 = call i32 @__asm_int3(), !insn.addr !2606
  %21 = call i32 @__asm_int3(), !insn.addr !2607
  %22 = call i32 @__asm_int3(), !insn.addr !2608
  %23 = call i32 @__asm_int3(), !insn.addr !2609
  %24 = call i32 @__asm_int3(), !insn.addr !2610
  %25 = call i32 @__asm_int3(), !insn.addr !2611
  %26 = call i32 @__asm_int3(), !insn.addr !2612
  %27 = call i32 @__asm_int3(), !insn.addr !2613
  %28 = call i32 @__asm_int3(), !insn.addr !2614
  %29 = call i32 @__asm_int3(), !insn.addr !2615
  %30 = call i32 @__asm_int3(), !insn.addr !2616
  ret void, !insn.addr !2616
}

define i1 @"__crt_strtox::is_overflow_condition<unsigned long>"(i32 %flags, i32 %number) local_unnamed_addr {
dec_label_pc_443e4a:
  %merge.reg2mem = alloca i1, !insn.addr !2617
  %0 = and i32 %flags, 4
  %1 = icmp eq i32 %0, 0, !insn.addr !2618
  %2 = icmp eq i1 %1, false, !insn.addr !2619
  store i1 true, i1* %merge.reg2mem, !insn.addr !2619
  br i1 %2, label %dec_label_pc_443e6a, label %dec_label_pc_443e55, !insn.addr !2619

dec_label_pc_443e55:                              ; preds = %dec_label_pc_443e4a
  %3 = and i32 %flags, 1
  %4 = icmp eq i32 %3, 0, !insn.addr !2620
  br i1 %4, label %dec_label_pc_443e77, label %dec_label_pc_443e5b, !insn.addr !2621

dec_label_pc_443e5b:                              ; preds = %dec_label_pc_443e55
  %5 = and i32 %flags, 2
  %6 = icmp eq i32 %5, 0, !insn.addr !2622
  %7 = icmp sgt i32 %number, -1
  br i1 %6, label %dec_label_pc_443e6e, label %dec_label_pc_443e61, !insn.addr !2623

dec_label_pc_443e61:                              ; preds = %dec_label_pc_443e5b
  %8 = icmp eq i32 %number, -2147483648, !insn.addr !2624
  %9 = or i1 %7, %8, !insn.addr !2625
  store i1 true, i1* %merge.reg2mem, !insn.addr !2625
  br i1 %9, label %dec_label_pc_443e77, label %dec_label_pc_443e6a, !insn.addr !2625

dec_label_pc_443e6a:                              ; preds = %dec_label_pc_443e77, %dec_label_pc_443e6e, %dec_label_pc_443e61, %dec_label_pc_443e4a
  %merge.reload = load i1, i1* %merge.reg2mem
  ret i1 %merge.reload, !insn.addr !2626

dec_label_pc_443e6e:                              ; preds = %dec_label_pc_443e5b
  store i1 true, i1* %merge.reg2mem, !insn.addr !2627
  br i1 %7, label %dec_label_pc_443e77, label %dec_label_pc_443e6a, !insn.addr !2627

dec_label_pc_443e77:                              ; preds = %dec_label_pc_443e6e, %dec_label_pc_443e61, %dec_label_pc_443e55
  store i1 false, i1* %merge.reg2mem
  br label %dec_label_pc_443e6a
}

define i32 @"__crt_strtox::parse_integer<unsigned long,__crt_strtox::c_string_character_source<char> >"(i32 %locale, i32 %source, i32 %base, i1 %is_signed) local_unnamed_addr {
dec_label_pc_443ec9:
  %ebx.5.reg2mem = alloca i32, !insn.addr !2628
  %stack_var_8.4.reg2mem = alloca i32, !insn.addr !2628
  %esp.5.reg2mem = alloca i32, !insn.addr !2628
  %next_c_-16.1.reg2mem = alloca i8, !insn.addr !2628
  %.reg2mem = alloca i32, !insn.addr !2628
  %ecx.0.reg2mem = alloca i32, !insn.addr !2628
  %esp.4.reg2mem = alloca i32, !insn.addr !2628
  %ebx.4.reg2mem = alloca i32, !insn.addr !2628
  %edx.0.reg2mem = alloca i32, !insn.addr !2628
  %stack_var_8.3.reg2mem = alloca i32, !insn.addr !2628
  %c_-8.2.reg2mem = alloca i8, !insn.addr !2628
  %next_c_-16.0.reg2mem = alloca i8, !insn.addr !2628
  %esi.2.reg2mem = alloca i32, !insn.addr !2628
  %esp.3.reg2mem = alloca i32, !insn.addr !2628
  %ebx.3.reg2mem = alloca i32, !insn.addr !2628
  %stack_var_8.2.reg2mem = alloca i32, !insn.addr !2628
  %c_-8.1.reg2mem = alloca i8, !insn.addr !2628
  %eax.3.reg2mem = alloca i32, !insn.addr !2628
  %ebx.2.reg2mem = alloca i32, !insn.addr !2628
  %stack_var_8.1.reg2mem = alloca i32, !insn.addr !2628
  %stack_var_-12.1.reg2mem = alloca i8, !insn.addr !2628
  %c_-8.0.reg2mem = alloca i8, !insn.addr !2628
  %stack_var_-12.0.reg2mem = alloca i8, !insn.addr !2628
  %eax.0.reg2mem = alloca i32, !insn.addr !2628
  %ebx.0.reg2mem = alloca i32, !insn.addr !2628
  %stack_var_8.0.reg2mem = alloca i32, !insn.addr !2628
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i8 @__decompiler_undefined_function_7()
  %3 = call i8 @__decompiler_undefined_function_7()
  %locale_update_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %4 = call i32 @__decompiler_undefined_function_0()
  %5 = call i32 @function_402c2f(i32 %0, i32 %1), !insn.addr !2629
  %6 = trunc i32 %5 to i8, !insn.addr !2630
  %7 = icmp eq i8 %6, 0, !insn.addr !2630
  store i32 %source, i32* %stack_var_8.0.reg2mem, !insn.addr !2631
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !2631
  br i1 %7, label %dec_label_pc_443f02, label %dec_label_pc_443edf, !insn.addr !2631

dec_label_pc_443edf:                              ; preds = %dec_label_pc_443ec9
  %8 = icmp eq i1 %is_signed, false, !insn.addr !2632
  br i1 %8, label %dec_label_pc_443f14, label %dec_label_pc_443ef0, !insn.addr !2633

dec_label_pc_443ef0:                              ; preds = %dec_label_pc_443edf
  %9 = call i32* @_errno(), !insn.addr !2634
  store i32 22, i32* %9, align 4, !insn.addr !2635
  call void @_invalid_parameter_noinfo(), !insn.addr !2636
  store i32 %source, i32* %stack_var_8.0.reg2mem, !insn.addr !2636
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !2636
  br label %dec_label_pc_443f02, !insn.addr !2636

dec_label_pc_443f02:                              ; preds = %dec_label_pc_443ec9, %dec_label_pc_443ef0, %dec_label_pc_4440df, %dec_label_pc_4440d4
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %10 = icmp eq i32 %base, 0, !insn.addr !2637
  br i1 %10, label %dec_label_pc_443f0e, label %dec_label_pc_443f09, !insn.addr !2638

dec_label_pc_443f09:                              ; preds = %dec_label_pc_443f02
  %stack_var_8.0.reload = load i32, i32* %stack_var_8.0.reg2mem
  %11 = inttoptr i32 %base to i32*, !insn.addr !2639
  store i32 %stack_var_8.0.reload, i32* %11, align 4, !insn.addr !2639
  br label %dec_label_pc_443f0e, !insn.addr !2639

dec_label_pc_443f0e:                              ; preds = %dec_label_pc_443f09, %dec_label_pc_443f02
  ret i32 %ebx.0.reload, !insn.addr !2640

dec_label_pc_443f14:                              ; preds = %dec_label_pc_443edf
  store i32 %locale, i32* %stack_var_-60, align 4, !insn.addr !2641
  %12 = ptrtoint i32* %stack_var_-60 to i32, !insn.addr !2641
  %13 = call i32 @function_403d78(i32 %locale), !insn.addr !2642
  %14 = add i32 %12, -4, !insn.addr !2643
  %15 = inttoptr i32 %14 to i32*
  %16 = ptrtoint i32* %locale_update_-40 to i32, !insn.addr !2643
  %17 = add i32 %12, -8, !insn.addr !2644
  %18 = inttoptr i32 %17 to i32*, !insn.addr !2644
  %19 = add i32 %12, -12, !insn.addr !2645
  %20 = inttoptr i32 %19 to i32*, !insn.addr !2645
  store i32 %source, i32* %eax.0.reg2mem, !insn.addr !2646
  br label %dec_label_pc_443f30, !insn.addr !2646

dec_label_pc_443f30:                              ; preds = %dec_label_pc_443f30, %dec_label_pc_443f14
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %21 = inttoptr i32 %eax.0.reload to i8*, !insn.addr !2647
  %22 = load i8, i8* %21, align 1, !insn.addr !2647
  %23 = zext i8 %22 to i32, !insn.addr !2647
  %24 = add i32 %eax.0.reload, 1, !insn.addr !2648
  store i32 %16, i32* %15, align 4, !insn.addr !2643
  store i32 8, i32* %18, align 4, !insn.addr !2644
  store i32 %23, i32* %20, align 4, !insn.addr !2645
  %25 = sext i8 %22 to i32, !insn.addr !2649
  %26 = call i32 @_ischartype_l(i32 %25, i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2649
  %27 = icmp eq i32 %26, 0, !insn.addr !2650
  %28 = icmp eq i1 %27, false, !insn.addr !2651
  store i32 %24, i32* %eax.0.reg2mem, !insn.addr !2651
  br i1 %28, label %dec_label_pc_443f30, label %dec_label_pc_443f4f, !insn.addr !2651

dec_label_pc_443f4f:                              ; preds = %dec_label_pc_443f30
  %29 = icmp eq i8 %22, 45, !insn.addr !2652
  %30 = icmp eq i1 %29, false, !insn.addr !2653
  br i1 %30, label %dec_label_pc_443f63, label %dec_label_pc_443f5b, !insn.addr !2653

dec_label_pc_443f5b:                              ; preds = %dec_label_pc_443f4f
  %31 = or i8 %3, 2
  store i8 %31, i8* %stack_var_-12.0.reg2mem, !insn.addr !2654
  br label %dec_label_pc_443f68, !insn.addr !2654

dec_label_pc_443f63:                              ; preds = %dec_label_pc_443f4f
  %32 = icmp eq i8 %22, 43, !insn.addr !2655
  %33 = icmp eq i1 %32, false, !insn.addr !2656
  store i8 %22, i8* %c_-8.0.reg2mem, !insn.addr !2656
  store i32 %24, i32* %stack_var_8.1.reg2mem, !insn.addr !2656
  store i32 %23, i32* %ebx.2.reg2mem, !insn.addr !2656
  br i1 %33, label %dec_label_pc_443f82, label %dec_label_pc_443f68, !insn.addr !2656

dec_label_pc_443f68:                              ; preds = %dec_label_pc_443f63, %dec_label_pc_443f5b
  %stack_var_-12.0.reload = load i8, i8* %stack_var_-12.0.reg2mem
  %34 = inttoptr i32 %24 to i8*, !insn.addr !2657
  %35 = load i8, i8* %34, align 1, !insn.addr !2657
  %36 = zext i8 %35 to i32, !insn.addr !2657
  %37 = add i32 %eax.0.reload, 2, !insn.addr !2658
  store i8 %35, i8* %c_-8.0.reg2mem, !insn.addr !2659
  store i8 %stack_var_-12.0.reload, i8* %stack_var_-12.1.reg2mem, !insn.addr !2659
  store i32 %37, i32* %stack_var_8.1.reg2mem, !insn.addr !2659
  store i32 %36, i32* %ebx.2.reg2mem, !insn.addr !2659
  br label %dec_label_pc_443f82, !insn.addr !2659

dec_label_pc_443f82:                              ; preds = %dec_label_pc_443f68, %dec_label_pc_443f63
  %ebx.2.reload = load i32, i32* %ebx.2.reg2mem
  %stack_var_8.1.reload = load i32, i32* %stack_var_8.1.reg2mem
  %stack_var_-12.1.reload = load i8, i8* %stack_var_-12.1.reg2mem
  %c_-8.0.reload = load i8, i8* %c_-8.0.reg2mem
  %38 = trunc i32 %ebx.2.reload to i8
  %39 = add i8 %38, -48, !insn.addr !2660
  %40 = icmp ult i8 %39, 10
  br i1 %40, label %dec_label_pc_443f8a, label %dec_label_pc_443f92, !insn.addr !2661

dec_label_pc_443f8a:                              ; preds = %dec_label_pc_443f82
  %sext = mul i32 %ebx.2.reload, 16777216
  %41 = sdiv i32 %sext, 16777216, !insn.addr !2662
  %42 = add nsw i32 %41, -48, !insn.addr !2663
  store i32 %42, i32* %eax.3.reg2mem, !insn.addr !2664
  br label %dec_label_pc_443fb5, !insn.addr !2664

dec_label_pc_443f92:                              ; preds = %dec_label_pc_443f82
  %43 = add i8 %38, -97, !insn.addr !2665
  %44 = icmp ult i8 %43, 26
  br i1 %44, label %dec_label_pc_443f9a, label %dec_label_pc_443fa2, !insn.addr !2666

dec_label_pc_443f9a:                              ; preds = %dec_label_pc_443f92
  %sext6 = mul i32 %ebx.2.reload, 16777216
  %45 = sdiv i32 %sext6, 16777216, !insn.addr !2667
  %46 = add nsw i32 %45, -87, !insn.addr !2668
  store i32 %46, i32* %eax.3.reg2mem, !insn.addr !2669
  br label %dec_label_pc_443fb5, !insn.addr !2669

dec_label_pc_443fa2:                              ; preds = %dec_label_pc_443f92
  %47 = add i8 %38, -65, !insn.addr !2670
  %48 = icmp ult i8 %47, 26
  br i1 %48, label %dec_label_pc_443faa, label %dec_label_pc_443fbd, !insn.addr !2671

dec_label_pc_443faa:                              ; preds = %dec_label_pc_443fa2
  %sext7 = mul i32 %ebx.2.reload, 16777216
  %49 = sdiv i32 %sext7, 16777216, !insn.addr !2672
  %50 = add nsw i32 %49, -55, !insn.addr !2673
  store i32 %50, i32* %eax.3.reg2mem, !insn.addr !2674
  br label %dec_label_pc_443fb5, !insn.addr !2674

dec_label_pc_443fb5:                              ; preds = %dec_label_pc_443faa, %dec_label_pc_443f9a, %dec_label_pc_443f8a
  %eax.3.reload = load i32, i32* %eax.3.reg2mem
  %51 = icmp eq i32 %eax.3.reload, 0, !insn.addr !2675
  br i1 %51, label %dec_label_pc_443fc2, label %dec_label_pc_443fbd, !insn.addr !2676

dec_label_pc_443fbd:                              ; preds = %dec_label_pc_443fa2, %dec_label_pc_443fb5
  store i32 10, i32* %15, align 4, !insn.addr !2677
  store i8 %c_-8.0.reload, i8* %c_-8.1.reg2mem, !insn.addr !2678
  store i32 %stack_var_8.1.reload, i32* %stack_var_8.2.reg2mem, !insn.addr !2678
  store i32 %ebx.2.reload, i32* %ebx.3.reg2mem, !insn.addr !2678
  store i32 %12, i32* %esp.3.reg2mem, !insn.addr !2678
  store i32 10, i32* %esi.2.reg2mem, !insn.addr !2678
  br label %dec_label_pc_443ffa, !insn.addr !2678

dec_label_pc_443fc2:                              ; preds = %dec_label_pc_443fb5
  %52 = inttoptr i32 %stack_var_8.1.reload to i8*, !insn.addr !2679
  %53 = load i8, i8* %52, align 1, !insn.addr !2679
  %54 = add i32 %stack_var_8.1.reload, 1, !insn.addr !2680
  switch i8 %53, label %dec_label_pc_443fda [
    i8 120, label %dec_label_pc_443ff1
    i8 88, label %dec_label_pc_443ff1
  ]

dec_label_pc_443fda:                              ; preds = %dec_label_pc_443fc2
  %55 = sext i8 %53 to i32, !insn.addr !2681
  store i32 %55, i32* %15, align 4, !insn.addr !2681
  %56 = call i32 @function_402243(i32 %55), !insn.addr !2682
  store i8 %c_-8.0.reload, i8* %c_-8.1.reg2mem, !insn.addr !2683
  store i32 %54, i32* %stack_var_8.2.reg2mem, !insn.addr !2683
  store i32 %ebx.2.reload, i32* %ebx.3.reg2mem, !insn.addr !2683
  store i32 %14, i32* %esp.3.reg2mem, !insn.addr !2683
  store i32 8, i32* %esi.2.reg2mem, !insn.addr !2683
  br label %dec_label_pc_443ffa, !insn.addr !2683

dec_label_pc_443ff1:                              ; preds = %dec_label_pc_443fc2, %dec_label_pc_443fc2
  store i32 16, i32* %15, align 4, !insn.addr !2684
  %57 = inttoptr i32 %54 to i8*, !insn.addr !2685
  %58 = load i8, i8* %57, align 1, !insn.addr !2685
  %59 = zext i8 %58 to i32, !insn.addr !2685
  %60 = add i32 %stack_var_8.1.reload, 2, !insn.addr !2686
  store i8 %58, i8* %c_-8.1.reg2mem, !insn.addr !2687
  store i32 %60, i32* %stack_var_8.2.reg2mem, !insn.addr !2687
  store i32 %59, i32* %ebx.3.reg2mem, !insn.addr !2687
  store i32 %12, i32* %esp.3.reg2mem, !insn.addr !2687
  store i32 16, i32* %esi.2.reg2mem, !insn.addr !2687
  br label %dec_label_pc_443ffa, !insn.addr !2687

dec_label_pc_443ffa:                              ; preds = %dec_label_pc_443ff1, %dec_label_pc_443fda, %dec_label_pc_443fbd
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %ebx.3.reload = load i32, i32* %ebx.3.reg2mem
  %stack_var_8.2.reload = load i32, i32* %stack_var_8.2.reg2mem
  %c_-8.1.reload = load i8, i8* %c_-8.1.reg2mem
  %61 = udiv i32 -1, %esi.2.reload, !insn.addr !2688
  %62 = urem i32 -1, %esi.2.reload
  %63 = sext i8 %stack_var_-12.1.reload to i32, !insn.addr !2689
  %64 = trunc i32 %61 to i8, !insn.addr !2690
  store i8 0, i8* %next_c_-16.0.reg2mem, !insn.addr !2690
  store i8 %c_-8.1.reload, i8* %c_-8.2.reg2mem, !insn.addr !2690
  store i32 %stack_var_8.2.reload, i32* %stack_var_8.3.reg2mem, !insn.addr !2690
  store i32 %63, i32* %edx.0.reg2mem, !insn.addr !2690
  store i32 %ebx.3.reload, i32* %ebx.4.reg2mem, !insn.addr !2690
  store i32 %esp.3.reload, i32* %esp.4.reg2mem, !insn.addr !2690
  br label %dec_label_pc_44400a, !insn.addr !2690

dec_label_pc_44400a:                              ; preds = %dec_label_pc_444065, %dec_label_pc_443ffa
  %esp.4.reload = load i32, i32* %esp.4.reg2mem
  %ebx.4.reload = load i32, i32* %ebx.4.reg2mem
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %stack_var_8.3.reload = load i32, i32* %stack_var_8.3.reg2mem
  %c_-8.2.reload = load i8, i8* %c_-8.2.reg2mem
  %next_c_-16.0.reload = load i8, i8* %next_c_-16.0.reg2mem
  %65 = trunc i32 %ebx.4.reload to i8
  %66 = add i8 %65, -48, !insn.addr !2691
  %67 = icmp ult i8 %66, 10
  br i1 %67, label %dec_label_pc_444012, label %dec_label_pc_44401a, !insn.addr !2692

dec_label_pc_444012:                              ; preds = %dec_label_pc_44400a
  %sext3 = mul i32 %ebx.4.reload, 16777216
  %68 = sdiv i32 %sext3, 16777216, !insn.addr !2693
  %69 = add nsw i32 %68, -48, !insn.addr !2694
  store i32 %69, i32* %ecx.0.reg2mem, !insn.addr !2695
  br label %dec_label_pc_44403d, !insn.addr !2695

dec_label_pc_44401a:                              ; preds = %dec_label_pc_44400a
  %70 = add i8 %65, -97, !insn.addr !2696
  %71 = icmp ult i8 %70, 26
  br i1 %71, label %dec_label_pc_444022, label %dec_label_pc_44402a, !insn.addr !2697

dec_label_pc_444022:                              ; preds = %dec_label_pc_44401a
  %sext4 = mul i32 %ebx.4.reload, 16777216
  %72 = sdiv i32 %sext4, 16777216, !insn.addr !2698
  %73 = add nsw i32 %72, -87, !insn.addr !2699
  store i32 %73, i32* %ecx.0.reg2mem, !insn.addr !2700
  br label %dec_label_pc_44403d, !insn.addr !2700

dec_label_pc_44402a:                              ; preds = %dec_label_pc_44401a
  %74 = add i8 %65, -65, !insn.addr !2701
  %75 = icmp ult i8 %74, 26
  br i1 %75, label %dec_label_pc_444032, label %dec_label_pc_444073, !insn.addr !2702

dec_label_pc_444032:                              ; preds = %dec_label_pc_44402a
  %sext5 = mul i32 %ebx.4.reload, 16777216
  %76 = sdiv i32 %sext5, 16777216, !insn.addr !2703
  %77 = add nsw i32 %76, -55, !insn.addr !2704
  store i32 %77, i32* %ecx.0.reg2mem, !insn.addr !2705
  br label %dec_label_pc_44403d, !insn.addr !2705

dec_label_pc_44403d:                              ; preds = %dec_label_pc_444032, %dec_label_pc_444022, %dec_label_pc_444012
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %78 = icmp eq i32 %ecx.0.reload, -1, !insn.addr !2706
  %79 = icmp ult i32 %ecx.0.reload, %esi.2.reload, !insn.addr !2707
  %80 = icmp eq i1 %79, false, !insn.addr !2708
  %or.cond = or i1 %78, %80
  br i1 %or.cond, label %dec_label_pc_444073, label %dec_label_pc_444046, !insn.addr !2709

dec_label_pc_444046:                              ; preds = %dec_label_pc_44403d
  %81 = icmp ult i8 %next_c_-16.0.reload, %64, !insn.addr !2710
  br i1 %81, label %dec_label_pc_44405b, label %dec_label_pc_444050, !insn.addr !2711

dec_label_pc_444050:                              ; preds = %dec_label_pc_444046
  %82 = icmp eq i8 %next_c_-16.0.reload, %64, !insn.addr !2710
  %83 = icmp eq i1 %82, false, !insn.addr !2712
  %84 = icmp ugt i32 %ecx.0.reload, %62
  %or.cond11 = or i1 %83, %84
  br i1 %or.cond11, label %dec_label_pc_444057, label %dec_label_pc_44405b, !insn.addr !2712

dec_label_pc_444057:                              ; preds = %dec_label_pc_444050
  %85 = add i32 %esp.4.reload, -4, !insn.addr !2713
  %86 = inttoptr i32 %85 to i32*
  store i32 12, i32* %86, align 4, !insn.addr !2713
  store i32 12, i32* %.reg2mem, !insn.addr !2714
  store i8 %next_c_-16.0.reload, i8* %next_c_-16.1.reg2mem, !insn.addr !2714
  store i32 %85, i32* %esp.5.reg2mem, !insn.addr !2714
  br label %dec_label_pc_444065, !insn.addr !2714

dec_label_pc_44405b:                              ; preds = %dec_label_pc_444050, %dec_label_pc_444046
  %87 = sext i8 %next_c_-16.0.reload to i32, !insn.addr !2715
  %88 = mul nsw i32 %esi.2.reload, %87, !insn.addr !2716
  %89 = add i32 %esp.4.reload, -4, !insn.addr !2717
  %90 = inttoptr i32 %89 to i32*
  store i32 8, i32* %90, align 4, !insn.addr !2717
  %91 = add nsw i32 %ecx.0.reload, %88, !insn.addr !2718
  %92 = trunc i32 %91 to i8, !insn.addr !2719
  store i32 8, i32* %.reg2mem, !insn.addr !2719
  store i8 %92, i8* %next_c_-16.1.reg2mem, !insn.addr !2719
  store i32 %89, i32* %esp.5.reg2mem, !insn.addr !2719
  br label %dec_label_pc_444065, !insn.addr !2719

dec_label_pc_444065:                              ; preds = %dec_label_pc_44405b, %dec_label_pc_444057
  %esp.5.reload = load i32, i32* %esp.5.reg2mem
  %next_c_-16.1.reload = load i8, i8* %next_c_-16.1.reg2mem
  %.reload = load i32, i32* %.reg2mem, !insn.addr !2720
  %93 = inttoptr i32 %stack_var_8.3.reload to i8*, !insn.addr !2721
  %94 = load i8, i8* %93, align 1, !insn.addr !2721
  %95 = zext i8 %94 to i32, !insn.addr !2721
  %96 = add i32 %stack_var_8.3.reload, 1, !insn.addr !2722
  %97 = add i32 %esp.5.reload, 4, !insn.addr !2720
  %98 = or i32 %.reload, %edx.0.reload, !insn.addr !2723
  store i8 %next_c_-16.1.reload, i8* %next_c_-16.0.reg2mem, !insn.addr !2724
  store i8 %94, i8* %c_-8.2.reg2mem, !insn.addr !2724
  store i32 %96, i32* %stack_var_8.3.reg2mem, !insn.addr !2724
  store i32 %98, i32* %edx.0.reg2mem, !insn.addr !2724
  store i32 %95, i32* %ebx.4.reg2mem, !insn.addr !2724
  store i32 %97, i32* %esp.4.reg2mem, !insn.addr !2724
  br label %dec_label_pc_44400a, !insn.addr !2724

dec_label_pc_444073:                              ; preds = %dec_label_pc_44402a, %dec_label_pc_44403d
  %99 = sext i8 %c_-8.2.reload to i32, !insn.addr !2725
  %100 = add i32 %esp.4.reload, -4, !insn.addr !2725
  %101 = inttoptr i32 %100 to i32*, !insn.addr !2725
  store i32 %99, i32* %101, align 4, !insn.addr !2725
  %102 = call i32 @function_402243(i32 %edx.0.reload), !insn.addr !2726
  %103 = and i32 %edx.0.reload, 8
  %104 = icmp eq i32 %103, 0, !insn.addr !2727
  %105 = icmp eq i1 %104, false, !insn.addr !2728
  store i32 %source, i32* %stack_var_8.4.reg2mem, !insn.addr !2728
  store i32 0, i32* %ebx.5.reg2mem, !insn.addr !2728
  br i1 %105, label %dec_label_pc_444093, label %dec_label_pc_4440d4, !insn.addr !2728

dec_label_pc_444093:                              ; preds = %dec_label_pc_444073
  %106 = sext i8 %next_c_-16.0.reload to i32, !insn.addr !2729
  %107 = add i32 %esp.4.reload, -8, !insn.addr !2730
  %108 = inttoptr i32 %107 to i32*, !insn.addr !2730
  store i32 %106, i32* %108, align 4, !insn.addr !2730
  %109 = add i32 %esp.4.reload, -12, !insn.addr !2731
  %110 = inttoptr i32 %109 to i32*, !insn.addr !2731
  store i32 %edx.0.reload, i32* %110, align 4, !insn.addr !2731
  %111 = call i32 @function_4015c3(), !insn.addr !2732
  %112 = trunc i32 %111 to i8, !insn.addr !2733
  %113 = icmp eq i8 %112, 0, !insn.addr !2733
  br i1 %113, label %dec_label_pc_4440cb, label %dec_label_pc_4440a3, !insn.addr !2734

dec_label_pc_4440a3:                              ; preds = %dec_label_pc_444093
  %114 = call i32* @_errno(), !insn.addr !2735
  store i32 34, i32* %114, align 4, !insn.addr !2736
  %115 = and i32 %edx.0.reload, 1
  %116 = icmp eq i32 %115, 0, !insn.addr !2737
  %117 = icmp eq i1 %116, false, !insn.addr !2738
  store i32 %stack_var_8.3.reload, i32* %stack_var_8.4.reg2mem, !insn.addr !2738
  store i32 -1, i32* %ebx.5.reg2mem, !insn.addr !2738
  br i1 %117, label %dec_label_pc_4440b8, label %dec_label_pc_4440d4, !insn.addr !2738

dec_label_pc_4440b8:                              ; preds = %dec_label_pc_4440a3
  %118 = and i32 %edx.0.reload, 2
  %119 = icmp eq i32 %118, 0, !insn.addr !2739
  %. = select i1 %119, i32 2147483647, i32 -2147483648
  store i32 %stack_var_8.3.reload, i32* %stack_var_8.4.reg2mem, !insn.addr !2740
  store i32 %., i32* %ebx.5.reg2mem, !insn.addr !2740
  br label %dec_label_pc_4440d4, !insn.addr !2740

dec_label_pc_4440cb:                              ; preds = %dec_label_pc_444093
  %120 = and i32 %edx.0.reload, 2
  %121 = icmp eq i32 %120, 0, !insn.addr !2741
  %122 = sub nsw i32 0, %106
  %spec.select = select i1 %121, i32 %106, i32 %122
  store i32 %stack_var_8.3.reload, i32* %stack_var_8.4.reg2mem
  store i32 %spec.select, i32* %ebx.5.reg2mem
  br label %dec_label_pc_4440d4

dec_label_pc_4440d4:                              ; preds = %dec_label_pc_4440cb, %dec_label_pc_4440a3, %dec_label_pc_4440b8, %dec_label_pc_444073
  %ebx.5.reload = load i32, i32* %ebx.5.reg2mem
  %stack_var_8.4.reload = load i32, i32* %stack_var_8.4.reg2mem
  %123 = icmp eq i8 %2, 0, !insn.addr !2742
  store i32 %stack_var_8.4.reload, i32* %stack_var_8.0.reg2mem, !insn.addr !2743
  store i32 %ebx.5.reload, i32* %ebx.0.reg2mem, !insn.addr !2743
  br i1 %123, label %dec_label_pc_443f02, label %dec_label_pc_4440df, !insn.addr !2743

dec_label_pc_4440df:                              ; preds = %dec_label_pc_4440d4
  %124 = add i32 %4, 848, !insn.addr !2744
  %125 = inttoptr i32 %124 to i32*, !insn.addr !2744
  %126 = load i32, i32* %125, align 4, !insn.addr !2744
  %127 = and i32 %126, -3, !insn.addr !2744
  store i32 %127, i32* %125, align 4, !insn.addr !2744
  store i32 %stack_var_8.4.reload, i32* %stack_var_8.0.reg2mem, !insn.addr !2745
  store i32 %ebx.5.reload, i32* %ebx.0.reg2mem, !insn.addr !2745
  br label %dec_label_pc_443f02, !insn.addr !2745
}

define void @"__crt_strtox::c_string_character_source<char>::unget"(i32* %this, i8 %c) local_unnamed_addr {
dec_label_pc_44565e:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = ptrtoint i32* %this to i32
  %2 = add i32 %0, -1, !insn.addr !2746
  %3 = inttoptr i32 %0 to i32*, !insn.addr !2747
  store i32 %2, i32* %3, align 4, !insn.addr !2747
  %4 = trunc i32 %1 to i8, !insn.addr !2748
  %5 = icmp eq i8 %4, 0, !insn.addr !2748
  br i1 %5, label %dec_label_pc_445683, label %dec_label_pc_44566f, !insn.addr !2749

dec_label_pc_44566f:                              ; preds = %dec_label_pc_44565e
  %6 = inttoptr i32 %2 to i8*, !insn.addr !2750
  %7 = load i8, i8* %6, align 1, !insn.addr !2750
  %8 = icmp eq i8 %7, %4, !insn.addr !2750
  br i1 %8, label %dec_label_pc_445683, label %dec_label_pc_445673, !insn.addr !2751

dec_label_pc_445673:                              ; preds = %dec_label_pc_44566f
  %9 = call i32* @_errno(), !insn.addr !2752
  store i32 22, i32* %9, align 4, !insn.addr !2753
  call void @_invalid_parameter_noinfo(), !insn.addr !2754
  br label %dec_label_pc_445683, !insn.addr !2754

dec_label_pc_445683:                              ; preds = %dec_label_pc_445673, %dec_label_pc_44566f, %dec_label_pc_44565e
  ret void, !insn.addr !2755
}

declare i1 @"__crt_strtox::c_string_character_source<char>::validate"(i32*) local_unnamed_addr

declare i32 @wcsncmp(i16*, i16*, i32) local_unnamed_addr

define void @__acrt_call_reportfault(i32 %debugger_hook_code, i32 %_exception_code, i32 %_exception_flags) local_unnamed_addr {
dec_label_pc_445b0a:
  %ContextRecord_-724 = alloca i32, align 4
  %ExceptionRecord_-804 = alloca i32, align 4
  %stack_var_-812 = alloca i32, align 4
  %0 = icmp eq i32 %_exception_code, -1, !insn.addr !2756
  br i1 %0, label %dec_label_pc_445b2f, label %dec_label_pc_445b26, !insn.addr !2757

dec_label_pc_445b26:                              ; preds = %dec_label_pc_445b0a
  %1 = call i32 @function_40381e(i32 %_exception_code), !insn.addr !2758
  br label %dec_label_pc_445b2f, !insn.addr !2759

dec_label_pc_445b2f:                              ; preds = %dec_label_pc_445b26, %dec_label_pc_445b0a
  %2 = bitcast i32* %ExceptionRecord_-804 to i8*, !insn.addr !2760
  call void @memset(i8* nonnull %2, i8 0, i32 80), !insn.addr !2760
  %3 = bitcast i32* %ContextRecord_-724 to i8*
  call void @memset(i8* nonnull %3, i8 0, i32 716), !insn.addr !2761
  %4 = ptrtoint i32* %ExceptionRecord_-804 to i32, !insn.addr !2762
  store i32 %4, i32* %stack_var_-812, align 4, !insn.addr !2762
  store i32 65537, i32* %ContextRecord_-724, align 4, !insn.addr !2763
  store i32 %_exception_flags, i32* %ExceptionRecord_-804, align 4, !insn.addr !2764
  %5 = call i1 @IsDebuggerPresent(), !insn.addr !2765
  %6 = call i32 (%_EXCEPTION_POINTERS*)* @SetUnhandledExceptionFilter(i32 (%_EXCEPTION_POINTERS*)* null), !insn.addr !2766
  %7 = bitcast i32* %stack_var_-812 to %_EXCEPTION_POINTERS*
  %8 = call i32 @UnhandledExceptionFilter(%_EXCEPTION_POINTERS* nonnull %7), !insn.addr !2767
  %9 = icmp eq i32 %8, 0, !insn.addr !2768
  %10 = icmp eq i1 %9, false, !insn.addr !2769
  br i1 %10, label %dec_label_pc_445c36, label %dec_label_pc_445c23, !insn.addr !2769

dec_label_pc_445c23:                              ; preds = %dec_label_pc_445b2f
  %11 = icmp eq i1 %5, false, !insn.addr !2770
  %12 = icmp eq i1 %11, false, !insn.addr !2771
  %or.cond = or i1 %0, %12
  br i1 %or.cond, label %dec_label_pc_445c36, label %dec_label_pc_445c2d, !insn.addr !2771

dec_label_pc_445c2d:                              ; preds = %dec_label_pc_445c23
  %13 = call i32 @function_40381e(i32 %_exception_code), !insn.addr !2772
  br label %dec_label_pc_445c36, !insn.addr !2773

dec_label_pc_445c36:                              ; preds = %dec_label_pc_445c2d, %dec_label_pc_445c23, %dec_label_pc_445b2f
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !2774
  ret void, !insn.addr !2775
}

declare void @_invalid_parameter_noinfo() local_unnamed_addr

define void @_invoke_watson(i16* %expression, i16* %function_name, i16* %file_name, i32 %line_number, i32 %reserved) local_unnamed_addr {
dec_label_pc_445d84:
  %0 = call i1 @IsProcessorFeaturePresent(i32 23), !insn.addr !2776
  %1 = icmp eq i1 %0, false, !insn.addr !2777
  br i1 %1, label %dec_label_pc_445d95, label %dec_label_pc_445d90, !insn.addr !2778

dec_label_pc_445d90:                              ; preds = %dec_label_pc_445d84
  call void @__asm_int(i32 41), !insn.addr !2779
  br label %dec_label_pc_445d95, !insn.addr !2779

dec_label_pc_445d95:                              ; preds = %dec_label_pc_445d90, %dec_label_pc_445d84
  %2 = call i32 @function_403ea4(i32 2, i32 -1073740777, i32 1), !insn.addr !2780
  %3 = call i32* @GetCurrentProcess(), !insn.addr !2781
  %4 = call i1 @TerminateProcess(i32* %3, i32 ptrtoint (i32* @80 to i32)), !insn.addr !2782
  ret void, !insn.addr !2783
}

declare void @__acrt_errno_map_os_error(i32) local_unnamed_addr

declare i32* @__doserrno() local_unnamed_addr

declare i32* @_errno() local_unnamed_addr

declare i32* @_calloc_base(i32, i32) local_unnamed_addr

declare void @_free_base(i32*) local_unnamed_addr

declare i32* @try_get_AreFileApisANSI() local_unnamed_addr

declare i32* @try_get_CompareStringEx() local_unnamed_addr

declare i32* @try_get_LCMapStringEx() local_unnamed_addr

declare i32* @try_get_LocaleNameToLCID() local_unnamed_addr

define i32 @try_get_first_available_module_2(i32* %first, i32* %last) local_unnamed_addr {
dec_label_pc_4466c3:
  %storemerge1.reg2mem = alloca i32, !insn.addr !2784
  %esp.3.reg2mem = alloca i32, !insn.addr !2784
  %esp.2.reg2mem = alloca i32, !insn.addr !2784
  %esi.0.reg2mem = alloca i32, !insn.addr !2784
  %esp.1.reg2mem = alloca i32, !insn.addr !2784
  %esp.03.reg2mem = alloca i32, !insn.addr !2784
  %esp.44.reg2mem = alloca i32, !insn.addr !2784
  %storemerge5.reg2mem = alloca i32, !insn.addr !2784
  %stack_var_-20 = alloca i32, align 4
  %0 = icmp eq i32* %first, %last, !insn.addr !2785
  %1 = icmp eq i1 %0, false, !insn.addr !2786
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !2786
  br i1 %1, label %dec_label_pc_4466d4.lr.ph, label %dec_label_pc_446781, !insn.addr !2786

dec_label_pc_4466d4.lr.ph:                        ; preds = %dec_label_pc_4466c3
  %2 = ptrtoint i32* %last to i32
  %3 = ptrtoint i32* %first to i32
  %4 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !2787
  store i32 %3, i32* %storemerge5.reg2mem
  store i32 %4, i32* %esp.44.reg2mem
  br label %dec_label_pc_4466d4

dec_label_pc_4466d4:                              ; preds = %dec_label_pc_4466d4.lr.ph, %dec_label_pc_446773
  %esp.44.reload = load i32, i32* %esp.44.reg2mem
  %storemerge5.reload = load i32, i32* %storemerge5.reg2mem
  %5 = inttoptr i32 %storemerge5.reload to i32*, !insn.addr !2788
  %6 = load i32, i32* %5, align 4, !insn.addr !2788
  %7 = mul i32 %6, 4, !insn.addr !2789
  %8 = add i32 %7, ptrtoint (i32* @module_handles to i32), !insn.addr !2789
  %9 = inttoptr i32 %8 to i32*, !insn.addr !2790
  %10 = load i32, i32* %9, align 4, !insn.addr !2790
  store i32 %esp.44.reload, i32* %esp.3.reg2mem
  store i32 %10, i32* %storemerge1.reg2mem
  switch i32 %10, label %dec_label_pc_446781 [
    i32 0, label %dec_label_pc_4466f2
    i32 -1, label %dec_label_pc_446773
  ]

dec_label_pc_4466f2:                              ; preds = %dec_label_pc_4466d4
  %11 = add i32 %7, ptrtoint ([20 x i16*]* @module_names to i32), !insn.addr !2791
  %12 = inttoptr i32 %11 to i32*, !insn.addr !2791
  %13 = load i32, i32* %12, align 4, !insn.addr !2791
  %14 = add i32 %esp.44.reload, -4, !insn.addr !2792
  %15 = inttoptr i32 %14 to i32*, !insn.addr !2792
  store i32 2048, i32* %15, align 4, !insn.addr !2792
  %16 = add i32 %esp.44.reload, -8, !insn.addr !2793
  %17 = inttoptr i32 %16 to i32*, !insn.addr !2793
  store i32 0, i32* %17, align 4, !insn.addr !2793
  %18 = add i32 %esp.44.reload, -12, !insn.addr !2794
  %19 = inttoptr i32 %18 to i32*, !insn.addr !2794
  store i32 %13, i32* %19, align 4, !insn.addr !2794
  %20 = inttoptr i32 %8 to i16*, !insn.addr !2795
  %21 = call i32* @LoadLibraryExW(i16* %20, i32* nonnull @80, i32 ptrtoint (i32* @80 to i32)), !insn.addr !2795
  %22 = ptrtoint i32* %21 to i32, !insn.addr !2795
  %23 = icmp eq i32* %21, null, !insn.addr !2796
  %24 = icmp eq i1 %23, false, !insn.addr !2797
  store i32 %18, i32* %esp.1.reg2mem, !insn.addr !2797
  store i32 %22, i32* %esi.0.reg2mem, !insn.addr !2797
  br i1 %24, label %dec_label_pc_44675d, label %dec_label_pc_44670d, !insn.addr !2797

dec_label_pc_44670d:                              ; preds = %dec_label_pc_4466f2
  %25 = call i32 @GetLastError(), !insn.addr !2798
  %26 = icmp eq i32 %25, 87, !insn.addr !2799
  %27 = icmp eq i1 %26, false, !insn.addr !2800
  store i32 %18, i32* %esp.03.reg2mem, !insn.addr !2800
  br i1 %27, label %dec_label_pc_446753, label %dec_label_pc_446718, !insn.addr !2800

dec_label_pc_446718:                              ; preds = %dec_label_pc_44670d
  %28 = add i32 %esp.44.reload, -16, !insn.addr !2801
  %29 = inttoptr i32 %28 to i32*, !insn.addr !2801
  store i32 7, i32* %29, align 4, !insn.addr !2801
  %30 = add i32 %esp.44.reload, -20, !insn.addr !2802
  %31 = inttoptr i32 %30 to i32*, !insn.addr !2802
  store i32 ptrtoint ([8 x i16]* @global_var_471180 to i32), i32* %31, align 4, !insn.addr !2802
  %32 = add i32 %esp.44.reload, -24, !insn.addr !2803
  %33 = inttoptr i32 %32 to i32*, !insn.addr !2803
  store i32 %13, i32* %33, align 4, !insn.addr !2803
  %34 = call i32 @wcsncmp(i16* bitcast (i32* @80 to i16*), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2804
  %35 = icmp eq i32 %34, 0, !insn.addr !2805
  store i32 %18, i32* %esp.03.reg2mem, !insn.addr !2806
  br i1 %35, label %dec_label_pc_446753, label %dec_label_pc_44672c, !insn.addr !2806

dec_label_pc_44672c:                              ; preds = %dec_label_pc_446718
  store i32 7, i32* %29, align 4, !insn.addr !2807
  store i32 ptrtoint ([8 x i16]* @global_var_472e0c to i32), i32* %31, align 4, !insn.addr !2808
  store i32 %13, i32* %33, align 4, !insn.addr !2809
  %36 = call i32 @wcsncmp(i16* bitcast (i32* @80 to i16*), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2810
  %37 = icmp eq i32 %36, 0, !insn.addr !2811
  store i32 %18, i32* %esp.03.reg2mem, !insn.addr !2812
  br i1 %37, label %dec_label_pc_446753, label %dec_label_pc_44674f, !insn.addr !2812

dec_label_pc_44674f:                              ; preds = %dec_label_pc_44672c
  store i32 %22, i32* %29, align 4, !insn.addr !2813
  store i32 %22, i32* %31, align 4, !insn.addr !2814
  store i32 %13, i32* %33, align 4, !insn.addr !2815
  %38 = call i32* @LoadLibraryExW(i16* bitcast (i32* @80 to i16*), i32* nonnull @80, i32 ptrtoint (i32* @80 to i32)), !insn.addr !2816
  %39 = ptrtoint i32* %38 to i32, !insn.addr !2816
  %40 = icmp eq i32* %38, null, !insn.addr !2817
  %41 = icmp eq i1 %40, false, !insn.addr !2818
  store i32 %32, i32* %esp.03.reg2mem, !insn.addr !2818
  store i32 %32, i32* %esp.1.reg2mem, !insn.addr !2818
  store i32 %39, i32* %esi.0.reg2mem, !insn.addr !2818
  br i1 %41, label %dec_label_pc_44675d, label %dec_label_pc_446753, !insn.addr !2818

dec_label_pc_446753:                              ; preds = %dec_label_pc_44672c, %dec_label_pc_446718, %dec_label_pc_44670d, %dec_label_pc_44674f
  %esp.03.reload = load i32, i32* %esp.03.reg2mem
  store i32 -1, i32* %9, align 4, !insn.addr !2819
  store i32 %esp.03.reload, i32* %esp.3.reg2mem, !insn.addr !2820
  br label %dec_label_pc_446773, !insn.addr !2820

dec_label_pc_44675d:                              ; preds = %dec_label_pc_44674f, %dec_label_pc_4466f2
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %42 = load i32, i32* %9, align 4, !insn.addr !2821
  store i32 %esi.0.reload, i32* %9, align 4, !insn.addr !2821
  %43 = icmp eq i32 %42, 0, !insn.addr !2822
  store i32 %esp.1.reload, i32* %esp.2.reg2mem, !insn.addr !2823
  br i1 %43, label %dec_label_pc_44676f, label %dec_label_pc_446768, !insn.addr !2823

dec_label_pc_446768:                              ; preds = %dec_label_pc_44675d
  %44 = add i32 %esp.1.reload, -4, !insn.addr !2824
  %45 = inttoptr i32 %44 to i32*, !insn.addr !2824
  store i32 %esi.0.reload, i32* %45, align 4, !insn.addr !2824
  %46 = call i1 @FreeLibrary(i32* nonnull @80), !insn.addr !2825
  store i32 %44, i32* %esp.2.reg2mem, !insn.addr !2825
  br label %dec_label_pc_44676f, !insn.addr !2825

dec_label_pc_44676f:                              ; preds = %dec_label_pc_446768, %dec_label_pc_44675d
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %47 = icmp eq i32 %esi.0.reload, 0, !insn.addr !2826
  %48 = icmp eq i1 %47, false, !insn.addr !2827
  store i32 %esp.2.reload, i32* %esp.3.reg2mem, !insn.addr !2827
  store i32 %esi.0.reload, i32* %storemerge1.reg2mem, !insn.addr !2827
  br i1 %48, label %dec_label_pc_446781, label %dec_label_pc_446773, !insn.addr !2827

dec_label_pc_446773:                              ; preds = %dec_label_pc_4466d4, %dec_label_pc_44676f, %dec_label_pc_446753
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %49 = add i32 %storemerge5.reload, 4, !insn.addr !2828
  %50 = icmp eq i32 %49, %2, !insn.addr !2785
  %51 = icmp eq i1 %50, false, !insn.addr !2786
  store i32 %49, i32* %storemerge5.reg2mem, !insn.addr !2786
  store i32 %esp.3.reload, i32* %esp.44.reg2mem, !insn.addr !2786
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !2786
  br i1 %51, label %dec_label_pc_4466d4, label %dec_label_pc_446781, !insn.addr !2786

dec_label_pc_446781:                              ; preds = %dec_label_pc_446773, %dec_label_pc_44676f, %dec_label_pc_4466d4, %dec_label_pc_4466c3
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  ret i32 %storemerge1.reload, !insn.addr !2829
}

define i8* @try_get_function_2(i32 %id, i8* %name, i32* %first_module_id, i32* %last_module_id) local_unnamed_addr {
dec_label_pc_4467bb:
  %eax.0.reg2mem = alloca i32, !insn.addr !2830
  %edi.0.reg2mem = alloca i32, !insn.addr !2830
  %esp.0.in.reg2mem = alloca i32*, !insn.addr !2830
  %storemerge3.reg2mem = alloca i32, !insn.addr !2830
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %0 = mul i32 %id, 4, !insn.addr !2831
  %1 = add i32 %0, ptrtoint (i32* @encoded_function_pointers to i32), !insn.addr !2831
  %2 = inttoptr i32 %1 to i32*, !insn.addr !2832
  %3 = load i32, i32* %2, align 4, !insn.addr !2832
  %4 = load i32, i32* @__security_cookie, align 4, !insn.addr !2833
  %5 = xor i32 %4, %3, !insn.addr !2834
  %6 = and i32 %4, 31, !insn.addr !2835
  %7 = icmp eq i32 %6, 0, !insn.addr !2836
  store i32 %5, i32* %storemerge3.reg2mem, !insn.addr !2836
  br i1 %7, label %13, label %8, !insn.addr !2836

; <label>:8:                                      ; preds = %dec_label_pc_4467bb
  %9 = lshr i32 %5, %6, !insn.addr !2836
  %10 = sub nsw i32 32, %6, !insn.addr !2836
  %11 = shl i32 %5, %10, !insn.addr !2836
  %12 = or i32 %11, %9, !insn.addr !2836
  store i32 %12, i32* %storemerge3.reg2mem, !insn.addr !2836
  br label %13, !insn.addr !2836

; <label>:13:                                     ; preds = %dec_label_pc_4467bb, %8
  %storemerge3.reload = load i32, i32* %storemerge3.reg2mem
  %14 = icmp eq i32 %storemerge3.reload, -1, !insn.addr !2837
  %15 = icmp eq i1 %14, false, !insn.addr !2838
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2838
  br i1 %15, label %dec_label_pc_4467e9, label %dec_label_pc_44683a, !insn.addr !2838

dec_label_pc_4467e9:                              ; preds = %13
  %16 = icmp eq i32 %storemerge3.reload, 0, !insn.addr !2839
  store i32 %storemerge3.reload, i32* %eax.0.reg2mem, !insn.addr !2840
  br i1 %16, label %dec_label_pc_4467f1, label %dec_label_pc_44683a, !insn.addr !2840

dec_label_pc_4467f1:                              ; preds = %dec_label_pc_4467e9
  %17 = ptrtoint i32* %first_module_id to i32
  store i32 %17, i32* %stack_var_-24, align 4, !insn.addr !2841
  %18 = call i32 @try_get_first_available_module_2(i32* %first_module_id, i32* %last_module_id), !insn.addr !2842
  %19 = icmp eq i32 %18, 0, !insn.addr !2843
  store i32* %stack_var_-16, i32** %esp.0.in.reg2mem, !insn.addr !2844
  br i1 %19, label %dec_label_pc_446820, label %dec_label_pc_446803, !insn.addr !2844

dec_label_pc_446803:                              ; preds = %dec_label_pc_4467f1
  store i32 %18, i32* %stack_var_-24, align 4, !insn.addr !2845
  %20 = inttoptr i32 %18 to i32*, !insn.addr !2846
  %21 = call i32 ()* @GetProcAddress(i32* %20, i8* %name), !insn.addr !2846
  %22 = icmp eq i32 ()* %21, null, !insn.addr !2847
  store i32* %stack_var_-24, i32** %esp.0.in.reg2mem, !insn.addr !2848
  br i1 %22, label %dec_label_pc_446820, label %dec_label_pc_446813, !insn.addr !2848

dec_label_pc_446813:                              ; preds = %dec_label_pc_446803
  %23 = ptrtoint i32 ()* %21 to i32, !insn.addr !2846
  %24 = call i32 @function_40314d(i32 %23), !insn.addr !2849
  store i32 %24, i32* %2, align 4, !insn.addr !2850
  store i32 %23, i32* %eax.0.reg2mem, !insn.addr !2851
  br label %dec_label_pc_44683a, !insn.addr !2851

dec_label_pc_446820:                              ; preds = %dec_label_pc_446803, %dec_label_pc_4467f1
  %esp.0.in.reload = load i32*, i32** %esp.0.in.reg2mem
  %esp.0 = ptrtoint i32* %esp.0.in.reload to i32
  %25 = load i32, i32* @__security_cookie, align 4, !insn.addr !2852
  %26 = add i32 %esp.0, -4, !insn.addr !2853
  %27 = inttoptr i32 %26 to i32*, !insn.addr !2853
  store i32 32, i32* %27, align 4, !insn.addr !2853
  %28 = sub i32 0, %25, !insn.addr !2854
  %29 = and i32 %28, 31, !insn.addr !2855
  %30 = icmp eq i32 %29, 0, !insn.addr !2855
  store i32 -1, i32* %edi.0.reg2mem, !insn.addr !2855
  br i1 %30, label %36, label %31, !insn.addr !2855

; <label>:31:                                     ; preds = %dec_label_pc_446820
  %32 = lshr i32 -1, %29, !insn.addr !2855
  %33 = sub nsw i32 32, %29, !insn.addr !2855
  %34 = shl i32 -1, %33, !insn.addr !2855
  %35 = or i32 %34, %32, !insn.addr !2855
  store i32 %35, i32* %edi.0.reg2mem, !insn.addr !2855
  br label %36, !insn.addr !2855

; <label>:36:                                     ; preds = %dec_label_pc_446820, %31
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %37 = load i32, i32* @__security_cookie, align 4, !insn.addr !2856
  %38 = xor i32 %37, %edi.0.reload, !insn.addr !2856
  store i32 %38, i32* %2, align 4, !insn.addr !2857
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2858
  br label %dec_label_pc_44683a, !insn.addr !2858

dec_label_pc_44683a:                              ; preds = %dec_label_pc_446813, %36, %dec_label_pc_4467e9, %13
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %39 = inttoptr i32 %eax.0.reload to i8*, !insn.addr !2859
  ret i8* %39, !insn.addr !2859
}

define i32 @__acrt_AreFileApisANSI() local_unnamed_addr {
dec_label_pc_446ab0:
  %0 = call i32* @try_get_AreFileApisANSI(), !insn.addr !2860
  %1 = icmp eq i32* %0, null, !insn.addr !2861
  br i1 %1, label %dec_label_pc_446aca, label %dec_label_pc_446abe, !insn.addr !2862

dec_label_pc_446abe:                              ; preds = %dec_label_pc_446ab0
  %2 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2863
  ret i32 %2, !insn.addr !2864

dec_label_pc_446aca:                              ; preds = %dec_label_pc_446ab0
  ret i32 1, !insn.addr !2865
}

define i32 @__acrt_CompareStringEx(i16* %locale_name, i32 %flags, i16* %string1, i32 %string1_count, i16* %string2, i32 %string2_count, i32 %version, i8* %reserved, i32 %param) local_unnamed_addr {
dec_label_pc_446ad6:
  %storemerge.reg2mem = alloca i32, !insn.addr !2866
  %0 = call i32* @try_get_CompareStringEx(), !insn.addr !2867
  %1 = icmp eq i32* %0, null, !insn.addr !2868
  br i1 %1, label %dec_label_pc_446b0e, label %dec_label_pc_446ae7, !insn.addr !2869

dec_label_pc_446ae7:                              ; preds = %dec_label_pc_446ad6
  %2 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2870
  store i32 %2, i32* %storemerge.reg2mem, !insn.addr !2871
  br label %dec_label_pc_446b2e, !insn.addr !2871

dec_label_pc_446b0e:                              ; preds = %dec_label_pc_446ad6
  %3 = ptrtoint i16* %locale_name to i32
  %4 = call i32 @function_402b53(i32 %3, i32 0, i32 %flags), !insn.addr !2872
  %5 = call i32 @CompareStringW(i32 %4, i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2873
  store i32 %5, i32* %storemerge.reg2mem, !insn.addr !2873
  br label %dec_label_pc_446b2e, !insn.addr !2873

dec_label_pc_446b2e:                              ; preds = %dec_label_pc_446b0e, %dec_label_pc_446ae7
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !2874
}

define i8* @__acrt_FlsGetValue(i32 %fls_index) local_unnamed_addr {
dec_label_pc_446c4f:
  %0 = call i8* @try_get_function_2(i32 5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_4711d0, i32 0, i32 0), i32* nonnull @global_var_472e94, i32* nonnull @global_var_472e9c), !insn.addr !2875
  %1 = icmp eq i8* %0, null, !insn.addr !2876
  br i1 %1, label %dec_label_pc_446c86, label %dec_label_pc_446c74, !insn.addr !2877

dec_label_pc_446c74:                              ; preds = %dec_label_pc_446c4f
  %2 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2878
  %3 = inttoptr i32 %2 to i8*, !insn.addr !2879
  ret i8* %3, !insn.addr !2879

dec_label_pc_446c86:                              ; preds = %dec_label_pc_446c4f
  %4 = call i32* @TlsGetValue(i32 ptrtoint (i32* @80 to i32)), !insn.addr !2880
  %5 = bitcast i32* %4 to i8*, !insn.addr !2880
  ret i8* %5, !insn.addr !2880
}

define i32 @__acrt_FlsSetValue(i32 %fls_index, i8* %fls_data) local_unnamed_addr {
dec_label_pc_446c9d:
  %0 = call i8* @try_get_function_2(i32 6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_4711ec, i32 0, i32 0), i32* nonnull @global_var_472ea0, i32* nonnull @global_var_472ea8), !insn.addr !2881
  %1 = icmp eq i8* %0, null, !insn.addr !2882
  br i1 %1, label %dec_label_pc_446cd7, label %dec_label_pc_446cc2, !insn.addr !2883

dec_label_pc_446cc2:                              ; preds = %dec_label_pc_446c9d
  %2 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2884
  ret i32 %2, !insn.addr !2885

dec_label_pc_446cd7:                              ; preds = %dec_label_pc_446c9d
  %3 = call i1 @TlsSetValue(i32 ptrtoint (i32* @80 to i32), i32* nonnull @80), !insn.addr !2886
  %4 = sext i1 %3 to i32, !insn.addr !2886
  ret i32 %4, !insn.addr !2886
}

define i32 @__acrt_LCMapStringEx(i16* %locale_name, i32 %flags, i16* %source, i32 %source_count, i16* %destination, i32 %destination_count, i32 %version, i8* %reserved, i32 %sort_handle) local_unnamed_addr {
dec_label_pc_44701a:
  %storemerge.reg2mem = alloca i32, !insn.addr !2887
  %0 = call i32* @try_get_LCMapStringEx(), !insn.addr !2888
  %1 = icmp eq i32* %0, null, !insn.addr !2889
  br i1 %1, label %dec_label_pc_447052, label %dec_label_pc_44702b, !insn.addr !2890

dec_label_pc_44702b:                              ; preds = %dec_label_pc_44701a
  %2 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2891
  store i32 %2, i32* %storemerge.reg2mem, !insn.addr !2892
  br label %dec_label_pc_447072, !insn.addr !2892

dec_label_pc_447052:                              ; preds = %dec_label_pc_44701a
  %3 = ptrtoint i16* %locale_name to i32
  %4 = call i32 @function_402b53(i32 %3, i32 0, i32 %flags), !insn.addr !2893
  %5 = call i32 @LCMapStringW(i32 %4, i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32), i16* bitcast (i32* @80 to i16*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2894
  store i32 %5, i32* %storemerge.reg2mem, !insn.addr !2894
  br label %dec_label_pc_447072, !insn.addr !2894

dec_label_pc_447072:                              ; preds = %dec_label_pc_447052, %dec_label_pc_44702b
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !2895
}

define i32 @__acrt_LocaleNameToLCID(i16* %name, i32 %flags) local_unnamed_addr {
dec_label_pc_44708e:
  %storemerge.reg2mem = alloca i32, !insn.addr !2896
  %0 = call i32* @try_get_LocaleNameToLCID(), !insn.addr !2897
  %1 = icmp eq i32* %0, null, !insn.addr !2898
  br i1 %1, label %dec_label_pc_4470b1, label %dec_label_pc_44709f, !insn.addr !2899

dec_label_pc_44709f:                              ; preds = %dec_label_pc_44708e
  %2 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !2900
  store i32 %2, i32* %storemerge.reg2mem, !insn.addr !2901
  br label %dec_label_pc_4470ba, !insn.addr !2901

dec_label_pc_4470b1:                              ; preds = %dec_label_pc_44708e
  %3 = ptrtoint i16* %name to i32
  %4 = call i32 @function_401091(i32 %3), !insn.addr !2902
  store i32 %4, i32* %storemerge.reg2mem, !insn.addr !2903
  br label %dec_label_pc_4470ba, !insn.addr !2903

dec_label_pc_4470ba:                              ; preds = %dec_label_pc_4470b1, %dec_label_pc_44709f
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !2904
}

define i32 @__acrt_stdio_flush_nolock(i32 %public_stream) local_unnamed_addr {
dec_label_pc_447c34:
  %storemerge.reg2mem = alloca i32, !insn.addr !2905
  %0 = add i32 %public_stream, 12, !insn.addr !2906
  %1 = inttoptr i32 %0 to i32*, !insn.addr !2907
  %2 = load i32, i32* %1, align 4, !insn.addr !2907
  %3 = and i32 %2, 3
  %4 = icmp eq i32 %3, 2, !insn.addr !2908
  %5 = icmp eq i1 %4, false, !insn.addr !2909
  %6 = and i32 %2, 192
  %7 = icmp eq i32 %6, 0, !insn.addr !2910
  %or.cond = or i1 %7, %5
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2909
  br i1 %or.cond, label %dec_label_pc_447c95, label %dec_label_pc_447c51, !insn.addr !2909

dec_label_pc_447c51:                              ; preds = %dec_label_pc_447c34
  %8 = inttoptr i32 %public_stream to i32*, !insn.addr !2911
  %9 = load i32, i32* %8, align 4, !insn.addr !2911
  %10 = add i32 %public_stream, 4, !insn.addr !2912
  %11 = inttoptr i32 %10 to i32*, !insn.addr !2912
  %12 = load i32, i32* %11, align 4, !insn.addr !2912
  %13 = sub i32 %9, %12, !insn.addr !2913
  store i32 %12, i32* %8, align 4, !insn.addr !2914
  %14 = add i32 %public_stream, 8, !insn.addr !2915
  %15 = inttoptr i32 %14 to i32*, !insn.addr !2915
  store i32 0, i32* %15, align 4, !insn.addr !2915
  %16 = icmp slt i32 %13, 1
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2916
  br i1 %16, label %dec_label_pc_447c95, label %dec_label_pc_447c62, !insn.addr !2916

dec_label_pc_447c62:                              ; preds = %dec_label_pc_447c51
  %17 = call i32 @_fileno(i32 %public_stream), !insn.addr !2917
  %18 = call i32 @_write(i32 %17, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !2918
  %19 = icmp eq i32 %13, %18, !insn.addr !2919
  %20 = load i32, i32* %1, align 4
  br i1 %19, label %dec_label_pc_447c83, label %dec_label_pc_447c78, !insn.addr !2920

dec_label_pc_447c78:                              ; preds = %dec_label_pc_447c62
  %21 = or i32 %20, 16, !insn.addr !2921
  store i32 %21, i32* %1, align 4, !insn.addr !2921
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !2922
  br label %dec_label_pc_447c95, !insn.addr !2922

dec_label_pc_447c83:                              ; preds = %dec_label_pc_447c62
  %22 = and i32 %20, 4
  %23 = icmp eq i32 %22, 0, !insn.addr !2923
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2924
  br i1 %23, label %dec_label_pc_447c95, label %dec_label_pc_447c8d, !insn.addr !2924

dec_label_pc_447c8d:                              ; preds = %dec_label_pc_447c83
  %24 = and i32 %20, -3, !insn.addr !2925
  store i32 %24, i32* %1, align 4, !insn.addr !2925
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2925
  br label %dec_label_pc_447c95, !insn.addr !2925

dec_label_pc_447c95:                              ; preds = %dec_label_pc_447c34, %dec_label_pc_447c51, %dec_label_pc_447c83, %dec_label_pc_447c8d, %dec_label_pc_447c78
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !2926
}

define void @__acrt_stdio_free_buffer_nolock(i32 %public_stream) local_unnamed_addr {
dec_label_pc_447daa:
  %0 = add i32 %public_stream, 12, !insn.addr !2927
  %1 = inttoptr i32 %0 to i32*, !insn.addr !2928
  %2 = load i32, i32* %1, align 4, !insn.addr !2928
  %3 = and i32 %2, 8256
  %4 = icmp eq i32 %3, 8256
  br i1 %4, label %dec_label_pc_447dcb, label %dec_label_pc_447de6, !insn.addr !2929

dec_label_pc_447dcb:                              ; preds = %dec_label_pc_447daa
  %5 = add i32 %public_stream, 4, !insn.addr !2930
  %6 = inttoptr i32 %5 to i32*, !insn.addr !2930
  %7 = load i32, i32* %6, align 4, !insn.addr !2930
  %8 = inttoptr i32 %7 to i32*, !insn.addr !2931
  call void @_free_base(i32* %8), !insn.addr !2931
  %9 = load i32, i32* %1, align 4, !insn.addr !2932
  %10 = and i32 %9, -321, !insn.addr !2932
  store i32 %10, i32* %1, align 4, !insn.addr !2932
  store i32 0, i32* %6, align 4, !insn.addr !2933
  %11 = inttoptr i32 %public_stream to i32*, !insn.addr !2934
  store i32 0, i32* %11, align 4, !insn.addr !2934
  %12 = add i32 %public_stream, 8, !insn.addr !2935
  %13 = inttoptr i32 %12 to i32*, !insn.addr !2935
  store i32 0, i32* %13, align 4, !insn.addr !2935
  br label %dec_label_pc_447de6, !insn.addr !2935

dec_label_pc_447de6:                              ; preds = %dec_label_pc_447daa, %dec_label_pc_447dcb
  ret void, !insn.addr !2936
}

declare i32* @_malloc_base(i32) local_unnamed_addr

define i32 @"__crt_strtox::make_c_string_character_source<char,char * *>"(i8* %string, i8** %end) local_unnamed_addr {
dec_label_pc_4480f8:
  %0 = ptrtoint i8** %end to i32
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = bitcast i8* %string to i32*, !insn.addr !2937
  store i32 %0, i32* %2, align 4, !insn.addr !2937
  %3 = icmp eq i32 %1, 0, !insn.addr !2938
  br i1 %3, label %dec_label_pc_448111, label %dec_label_pc_44810f, !insn.addr !2939

dec_label_pc_44810f:                              ; preds = %dec_label_pc_4480f8
  %4 = inttoptr i32 %1 to i32*, !insn.addr !2940
  store i32 %0, i32* %4, align 4, !insn.addr !2940
  br label %dec_label_pc_448111, !insn.addr !2940

dec_label_pc_448111:                              ; preds = %dec_label_pc_44810f, %dec_label_pc_4480f8
  %5 = ptrtoint i8* %string to i32
  %6 = add i32 %5, 4, !insn.addr !2941
  %7 = inttoptr i32 %6 to i32*, !insn.addr !2941
  ret i32 %5, !insn.addr !2942
}

define i32 @strtol(i8* %string, i8** %end_ptr, i32 %base) local_unnamed_addr {
dec_label_pc_448736:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %2 = ptrtoint i8* %string to i32, !insn.addr !2943
  %3 = ptrtoint i8** %end_ptr to i32, !insn.addr !2943
  %4 = call i32 @function_403909(i32* nonnull %stack_var_-24, i32 %2, i32 %3, i32 %1, i32 %1, i32 %base, i32 1, i32 %1, i32 %0), !insn.addr !2943
  %5 = call i32 @function_4043a9(i32 0), !insn.addr !2944
  ret i32 %5, !insn.addr !2945
}

define i32 @_mbtowc_l(i16* %pwc, i8* %s, i32 %n, i32 %plocinfo) local_unnamed_addr {
dec_label_pc_448972:
  %eax.0.reg2mem = alloca i32, !insn.addr !2946
  %esi.3.reg2mem = alloca i32, !insn.addr !2946
  %esi.2.reg2mem = alloca i32, !insn.addr !2946
  %esi.1.reg2mem = alloca i32, !insn.addr !2946
  %.pn.reg2mem = alloca i32, !insn.addr !2946
  %0 = call i8 @__decompiler_undefined_function_7()
  %stack_var_-40 = alloca %_Mbstatet.712, align 8
  %_loc_update_-16 = alloca i32, align 4
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = icmp eq i8* %s, null, !insn.addr !2947
  %4 = icmp eq i32 %n, 0, !insn.addr !2948
  %or.cond = or i1 %3, %4
  br i1 %or.cond, label %dec_label_pc_448aa0, label %dec_label_pc_448992, !insn.addr !2949

dec_label_pc_448992:                              ; preds = %dec_label_pc_448972
  %5 = load i8, i8* %s, align 1, !insn.addr !2950
  %6 = icmp eq i8 %5, 0, !insn.addr !2950
  %7 = icmp eq i1 %6, false, !insn.addr !2951
  br i1 %7, label %dec_label_pc_4489ac, label %dec_label_pc_448997, !insn.addr !2951

dec_label_pc_448997:                              ; preds = %dec_label_pc_448992
  %8 = icmp eq i16* %pwc, null, !insn.addr !2952
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2953
  br i1 %8, label %dec_label_pc_448ab0, label %dec_label_pc_4489a2, !insn.addr !2953

dec_label_pc_4489a2:                              ; preds = %dec_label_pc_448997
  store i16 0, i16* %pwc, align 2, !insn.addr !2954
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !2955
  br label %dec_label_pc_448ab0, !insn.addr !2955

dec_label_pc_4489ac:                              ; preds = %dec_label_pc_448992
  %9 = ptrtoint i8* %s to i32
  %10 = call i32 @function_403d78(i32 %plocinfo), !insn.addr !2956
  %11 = add i32 %1, 8, !insn.addr !2957
  %12 = inttoptr i32 %11 to i32*, !insn.addr !2957
  %13 = load i32, i32* %12, align 4, !insn.addr !2957
  %14 = icmp eq i32 %13, 65001, !insn.addr !2957
  %15 = icmp eq i1 %14, false, !insn.addr !2958
  br i1 %15, label %dec_label_pc_4489e5, label %dec_label_pc_4489c4, !insn.addr !2958

dec_label_pc_4489c4:                              ; preds = %dec_label_pc_4489ac
  %16 = ptrtoint i16* %pwc to i32
  store %_Mbstatet.712 { i32 ptrtoint (%_Mbstatet.712* @internal_state to i32), i16 undef, i16 undef }, %_Mbstatet.712* %stack_var_-40, align 8, !insn.addr !2959
  %17 = getelementptr inbounds %_Mbstatet.712, %_Mbstatet.712* %stack_var_-40, i32 0, i32 0, !insn.addr !2960
  %18 = load i32, i32* %17, align 8, !insn.addr !2960
  %19 = inttoptr i32 %18 to %_Mbstatet.712*, !insn.addr !2960
  %20 = call i32 @function_402c9d(i32 %16, i32 %9, i32 %n, %_Mbstatet.712* %19), !insn.addr !2960
  %21 = icmp slt i32 %20, 0, !insn.addr !2961
  %22 = icmp eq i1 %21, false, !insn.addr !2962
  store i32 %20, i32* %esi.3.reg2mem, !insn.addr !2962
  br i1 %22, label %dec_label_pc_448a8b, label %dec_label_pc_448a88, !insn.addr !2962

dec_label_pc_4489e5:                              ; preds = %dec_label_pc_4489ac
  %23 = add i32 %1, 168, !insn.addr !2963
  %24 = inttoptr i32 %23 to i32*, !insn.addr !2963
  %25 = load i32, i32* %24, align 4, !insn.addr !2963
  %26 = icmp eq i32 %25, 0, !insn.addr !2963
  %27 = icmp eq i1 %26, false, !insn.addr !2964
  br i1 %27, label %dec_label_pc_448a03, label %dec_label_pc_4489ee, !insn.addr !2964

dec_label_pc_4489ee:                              ; preds = %dec_label_pc_4489e5
  %28 = icmp eq i16* %pwc, null, !insn.addr !2965
  store i32 1, i32* %esi.3.reg2mem, !insn.addr !2966
  br i1 %28, label %dec_label_pc_448a8b, label %dec_label_pc_4489f5, !insn.addr !2966

dec_label_pc_4489f5:                              ; preds = %dec_label_pc_4489ee
  %29 = load i8, i8* %s, align 1, !insn.addr !2967
  %30 = zext i8 %29 to i16, !insn.addr !2968
  store i16 %30, i16* %pwc, align 2, !insn.addr !2968
  store i32 1, i32* %esi.3.reg2mem, !insn.addr !2968
  br label %dec_label_pc_448a8b, !insn.addr !2968

dec_label_pc_448a03:                              ; preds = %dec_label_pc_4489e5
  %31 = ptrtoint i32* %_loc_update_-16 to i32, !insn.addr !2969
  %32 = insertvalue %_Mbstatet.712 undef, i32 %31, 0, !insn.addr !2969
  store %_Mbstatet.712 %32, %_Mbstatet.712* %stack_var_-40, align 8, !insn.addr !2969
  %33 = load i8, i8* %s, align 1, !insn.addr !2970
  %34 = zext i8 %33 to i32, !insn.addr !2970
  %35 = getelementptr inbounds %_Mbstatet.712, %_Mbstatet.712* %stack_var_-40, i32 0, i32 0, !insn.addr !2971
  %36 = load i32, i32* %35, align 8, !insn.addr !2971
  %37 = call i32 @_isleadbyte_l(i32 %34, i32 %36), !insn.addr !2971
  %38 = icmp eq i32 %37, 0, !insn.addr !2972
  br i1 %38, label %dec_label_pc_448a58, label %dec_label_pc_448a16, !insn.addr !2973

dec_label_pc_448a16:                              ; preds = %dec_label_pc_448a03
  %39 = load i32, i32* %_loc_update_-16, align 4, !insn.addr !2974
  %40 = add i32 %39, 4
  %41 = inttoptr i32 %40 to i32*
  %42 = load i32, i32* %41, align 4, !insn.addr !2975
  %43 = icmp slt i32 %42, 2, !insn.addr !2976
  %44 = icmp sgt i32 %42, %n, !insn.addr !2977
  %or.cond9 = or i1 %43, %44
  store i32 %42, i32* %.pn.reg2mem, !insn.addr !2976
  store i32 %39, i32* %esi.1.reg2mem, !insn.addr !2976
  br i1 %or.cond9, label %dec_label_pc_448a4b, label %dec_label_pc_448a24, !insn.addr !2976

dec_label_pc_448a24:                              ; preds = %dec_label_pc_448a16
  %45 = icmp eq i16* %pwc, null, !insn.addr !2978
  %46 = icmp eq i1 %45, false, !insn.addr !2979
  %47 = zext i1 %46 to i32, !insn.addr !2979
  %48 = insertvalue %_Mbstatet.712 undef, i32 %47, 0, !insn.addr !2980
  store %_Mbstatet.712 %48, %_Mbstatet.712* %stack_var_-40, align 8, !insn.addr !2980
  %49 = call i32 @function_401712(), !insn.addr !2981
  %50 = load i32, i32* %_loc_update_-16, align 4, !insn.addr !2982
  %51 = icmp eq i32 %49, 0, !insn.addr !2983
  %52 = icmp eq i1 %51, false, !insn.addr !2984
  store i32 %50, i32* %esi.2.reg2mem, !insn.addr !2984
  br i1 %52, label %dec_label_pc_448a53, label %dec_label_pc_448a24.dec_label_pc_448a48_crit_edge, !insn.addr !2984

dec_label_pc_448a24.dec_label_pc_448a48_crit_edge: ; preds = %dec_label_pc_448a24
  %.pre = add i32 %50, 4, !insn.addr !2985
  %.pre6 = inttoptr i32 %.pre to i32*, !insn.addr !2985
  %.pre8 = load i32, i32* %.pre6, align 4
  store i32 %.pre8, i32* %.pn.reg2mem
  store i32 %50, i32* %esi.1.reg2mem
  br label %dec_label_pc_448a4b

dec_label_pc_448a4b:                              ; preds = %dec_label_pc_448a16, %dec_label_pc_448a24.dec_label_pc_448a48_crit_edge
  %.pn.reload = load i32, i32* %.pn.reg2mem
  %cf.0 = icmp ugt i32 %.pn.reload, %n
  br i1 %cf.0, label %dec_label_pc_448a7d, label %dec_label_pc_448a4d, !insn.addr !2986

dec_label_pc_448a4d:                              ; preds = %dec_label_pc_448a4b
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %53 = add i32 %9, 1, !insn.addr !2987
  %54 = inttoptr i32 %53 to i8*, !insn.addr !2987
  %55 = load i8, i8* %54, align 1, !insn.addr !2987
  %56 = icmp eq i8 %55, 0, !insn.addr !2987
  store i32 %esi.1.reload, i32* %esi.2.reg2mem, !insn.addr !2988
  br i1 %56, label %dec_label_pc_448a7d, label %dec_label_pc_448a53, !insn.addr !2988

dec_label_pc_448a53:                              ; preds = %dec_label_pc_448a4d, %dec_label_pc_448a24
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %57 = add i32 %esi.2.reload, 4, !insn.addr !2989
  %58 = inttoptr i32 %57 to i32*, !insn.addr !2989
  %59 = load i32, i32* %58, align 4, !insn.addr !2989
  store i32 %59, i32* %esi.3.reg2mem, !insn.addr !2990
  br label %dec_label_pc_448a8b, !insn.addr !2990

dec_label_pc_448a58:                              ; preds = %dec_label_pc_448a03
  %60 = icmp eq i16* %pwc, null, !insn.addr !2991
  %61 = icmp eq i1 %60, false, !insn.addr !2992
  %62 = zext i1 %61 to i32, !insn.addr !2992
  %63 = insertvalue %_Mbstatet.712 undef, i32 %62, 0, !insn.addr !2993
  store %_Mbstatet.712 %63, %_Mbstatet.712* %stack_var_-40, align 8, !insn.addr !2993
  %64 = call i32 @function_401712(), !insn.addr !2994
  %65 = icmp eq i32 %64, 0, !insn.addr !2995
  %66 = icmp eq i1 %65, false, !insn.addr !2996
  store i32 1, i32* %esi.3.reg2mem, !insn.addr !2996
  br i1 %66, label %dec_label_pc_448a8b, label %dec_label_pc_448a7d, !insn.addr !2996

dec_label_pc_448a7d:                              ; preds = %dec_label_pc_448a58, %dec_label_pc_448a4d, %dec_label_pc_448a4b
  %67 = call i32* @_errno(), !insn.addr !2997
  store i32 42, i32* %67, align 4, !insn.addr !2998
  br label %dec_label_pc_448a88, !insn.addr !2998

dec_label_pc_448a88:                              ; preds = %dec_label_pc_4489c4, %dec_label_pc_448a7d
  store i32 -1, i32* %esi.3.reg2mem, !insn.addr !2999
  br label %dec_label_pc_448a8b, !insn.addr !2999

dec_label_pc_448a8b:                              ; preds = %dec_label_pc_4489ee, %dec_label_pc_4489f5, %dec_label_pc_448a88, %dec_label_pc_448a58, %dec_label_pc_448a53, %dec_label_pc_4489c4
  %esi.3.reload = load i32, i32* %esi.3.reg2mem
  %68 = icmp eq i8 %0, 0, !insn.addr !3000
  store i32 %esi.3.reload, i32* %eax.0.reg2mem, !insn.addr !3001
  br i1 %68, label %dec_label_pc_448ab0, label %dec_label_pc_448a91, !insn.addr !3001

dec_label_pc_448a91:                              ; preds = %dec_label_pc_448a8b
  %69 = add i32 %2, 848, !insn.addr !3002
  %70 = inttoptr i32 %69 to i32*, !insn.addr !3002
  %71 = load i32, i32* %70, align 4, !insn.addr !3002
  %72 = and i32 %71, -3, !insn.addr !3002
  store i32 %72, i32* %70, align 4, !insn.addr !3002
  store i32 %esi.3.reload, i32* %eax.0.reg2mem, !insn.addr !3002
  br label %dec_label_pc_448ab0, !insn.addr !3002

dec_label_pc_448aa0:                              ; preds = %dec_label_pc_448972
  store i32 0, i32* getelementptr inbounds (%_Mbstatet.712, %_Mbstatet.712* @internal_state, i32 0, i32 0), align 8, !insn.addr !3003
  store i32 0, i32* @global_var_47d2a0, align 4, !insn.addr !3004
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !3004
  br label %dec_label_pc_448ab0, !insn.addr !3004

dec_label_pc_448ab0:                              ; preds = %dec_label_pc_448997, %dec_label_pc_4489a2, %dec_label_pc_448aa0, %dec_label_pc_448a8b, %dec_label_pc_448a91
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !3005
}

define i32 @mbtowc(i16* %pwc, i8* %s, i32 %n) local_unnamed_addr {
dec_label_pc_448b04:
  %0 = call i32 @_mbtowc_l(i16* %pwc, i8* %s, i32 %n, i32 0), !insn.addr !3006
  ret i32 %0, !insn.addr !3007
}

define i32 @_wctomb_s_l(i32* %return_value, i8* %destination, i32 %destination_count, i16 %wchar, i32 %locale) local_unnamed_addr {
dec_label_pc_448b89:
  %eax.0.reg2mem = alloca i32, !insn.addr !3008
  %esi.0.reg2mem = alloca i32, !insn.addr !3008
  %0 = ptrtoint i8* %destination to i32
  %1 = call i8 @__decompiler_undefined_function_7()
  %2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %3 = call i32 @__decompiler_undefined_function_0()
  %4 = icmp eq i8* %destination, null, !insn.addr !3009
  %5 = icmp ult i32 %0, %destination_count
  %or.cond = icmp eq i1 %4, %5
  %6 = icmp eq i32* %return_value, null
  br i1 %or.cond, label %dec_label_pc_448b9e, label %dec_label_pc_448bae, !insn.addr !3010

dec_label_pc_448b9e:                              ; preds = %dec_label_pc_448b89
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !3011
  br i1 %6, label %dec_label_pc_448c68, label %dec_label_pc_448ba5, !insn.addr !3011

dec_label_pc_448ba5:                              ; preds = %dec_label_pc_448b9e
  %7 = load i32, i32* %return_value, align 4, !insn.addr !3012
  %8 = and i32 %7, %0, !insn.addr !3012
  store i32 %8, i32* %return_value, align 4, !insn.addr !3012
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !3012
  br label %dec_label_pc_448c68, !insn.addr !3012

dec_label_pc_448bae:                              ; preds = %dec_label_pc_448b89
  br i1 %6, label %dec_label_pc_448bb9, label %dec_label_pc_448bb6, !insn.addr !3013

dec_label_pc_448bb6:                              ; preds = %dec_label_pc_448bae
  store i32 -1, i32* %return_value, align 4, !insn.addr !3014
  br label %dec_label_pc_448bb9, !insn.addr !3014

dec_label_pc_448bb9:                              ; preds = %dec_label_pc_448bb6, %dec_label_pc_448bae
  %9 = icmp sgt i32 %destination_count, -1
  br i1 %9, label %dec_label_pc_448bd7, label %dec_label_pc_448bc3, !insn.addr !3015

dec_label_pc_448bc3:                              ; preds = %dec_label_pc_448bb9
  %10 = call i32* @_errno(), !insn.addr !3016
  store i32 22, i32* %stack_var_-44, align 4, !insn.addr !3017
  store i32 22, i32* %10, align 4, !insn.addr !3018
  call void @_invalid_parameter_noinfo(), !insn.addr !3019
  store i32 22, i32* %eax.0.reg2mem, !insn.addr !3020
  br label %dec_label_pc_448c68, !insn.addr !3020

dec_label_pc_448bd7:                              ; preds = %dec_label_pc_448bb9
  store i32 %locale, i32* %stack_var_-44, align 4, !insn.addr !3021
  %11 = call i32 @function_403d78(i32 %locale), !insn.addr !3022
  %12 = add i32 %2, 8, !insn.addr !3023
  %13 = inttoptr i32 %12 to i32*, !insn.addr !3023
  %14 = load i32, i32* %13, align 4, !insn.addr !3023
  %15 = icmp eq i32 %14, 65001, !insn.addr !3024
  %16 = icmp eq i1 %15, false, !insn.addr !3025
  br i1 %16, label %dec_label_pc_448c1e, label %dec_label_pc_448bf2, !insn.addr !3025

dec_label_pc_448bf2:                              ; preds = %dec_label_pc_448bd7
  %17 = call i32 @function_401221(), !insn.addr !3026
  br i1 %6, label %dec_label_pc_448c10, label %dec_label_pc_448c0e, !insn.addr !3027

dec_label_pc_448c0e:                              ; preds = %dec_label_pc_448bf2
  store i32 %17, i32* %return_value, align 4, !insn.addr !3028
  br label %dec_label_pc_448c10, !insn.addr !3028

dec_label_pc_448c10:                              ; preds = %dec_label_pc_448c0e, %dec_label_pc_448bf2
  %18 = icmp slt i32 %17, 5, !insn.addr !3029
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !3029
  br i1 %18, label %dec_label_pc_448c54, label %dec_label_pc_448c15, !insn.addr !3029

dec_label_pc_448c15:                              ; preds = %dec_label_pc_448c10
  %19 = call i32* @_errno(), !insn.addr !3030
  %20 = load i32, i32* %19, align 4, !insn.addr !3031
  store i32 %20, i32* %esi.0.reg2mem, !insn.addr !3032
  br label %dec_label_pc_448c54, !insn.addr !3032

dec_label_pc_448c1e:                              ; preds = %dec_label_pc_448bd7
  %21 = add i32 %2, 168, !insn.addr !3033
  %22 = inttoptr i32 %21 to i32*, !insn.addr !3033
  %23 = load i32, i32* %22, align 4, !insn.addr !3033
  %24 = icmp eq i32 %23, 0, !insn.addr !3033
  %25 = icmp eq i1 %24, false, !insn.addr !3034
  br i1 %25, label %dec_label_pc_448c82, label %dec_label_pc_448c26, !insn.addr !3034

dec_label_pc_448c26:                              ; preds = %dec_label_pc_448c1e
  %26 = icmp ult i16 %wchar, 256
  br i1 %26, label %dec_label_pc_448c6b, label %dec_label_pc_448c34, !insn.addr !3035

dec_label_pc_448c34:                              ; preds = %dec_label_pc_448c26
  %27 = icmp eq i32 %destination_count, 0
  %or.cond4 = or i1 %4, %27
  br i1 %or.cond4, label %dec_label_pc_448c4a, label %dec_label_pc_448c3d, !insn.addr !3036

dec_label_pc_448c3d:                              ; preds = %dec_label_pc_448c34
  call void @memset(i8* nonnull %destination, i8 0, i32 %destination_count), !insn.addr !3037
  br label %dec_label_pc_448c4a, !insn.addr !3038

dec_label_pc_448c4a:                              ; preds = %dec_label_pc_448caf, %dec_label_pc_448c3d, %dec_label_pc_448c34
  %28 = ptrtoint i32* %stack_var_-44 to i32, !insn.addr !3021
  %29 = call i32* @_errno(), !insn.addr !3039
  %30 = add i32 %28, -4, !insn.addr !3040
  %31 = inttoptr i32 %30 to i32*, !insn.addr !3040
  store i32 42, i32* %31, align 4, !insn.addr !3040
  store i32 42, i32* %29, align 4, !insn.addr !3041
  store i32 42, i32* %esi.0.reg2mem, !insn.addr !3041
  br label %dec_label_pc_448c54, !insn.addr !3041

dec_label_pc_448c54:                              ; preds = %dec_label_pc_448cd0, %dec_label_pc_448cab, %dec_label_pc_448ca7, %dec_label_pc_448c7a, %dec_label_pc_448c76, %dec_label_pc_448c4a, %dec_label_pc_448c15, %dec_label_pc_448c10
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %32 = icmp eq i8 %1, 0, !insn.addr !3042
  store i32 %esi.0.reload, i32* %eax.0.reg2mem, !insn.addr !3043
  br i1 %32, label %dec_label_pc_448c68, label %dec_label_pc_448c5a, !insn.addr !3043

dec_label_pc_448c5a:                              ; preds = %dec_label_pc_448c54
  %33 = add i32 %3, 848, !insn.addr !3044
  %34 = inttoptr i32 %33 to i32*, !insn.addr !3044
  %35 = load i32, i32* %34, align 4, !insn.addr !3044
  %36 = and i32 %35, -3, !insn.addr !3044
  store i32 %36, i32* %34, align 4, !insn.addr !3044
  store i32 %esi.0.reload, i32* %eax.0.reg2mem, !insn.addr !3044
  br label %dec_label_pc_448c68, !insn.addr !3044

dec_label_pc_448c68:                              ; preds = %dec_label_pc_448bc3, %dec_label_pc_448c54, %dec_label_pc_448c5a, %dec_label_pc_448b9e, %dec_label_pc_448ba5
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !3045

dec_label_pc_448c6b:                              ; preds = %dec_label_pc_448c26
  br i1 %4, label %dec_label_pc_448c76, label %dec_label_pc_448c6f, !insn.addr !3046

dec_label_pc_448c6f:                              ; preds = %dec_label_pc_448c6b
  %37 = icmp eq i32 %destination_count, 0
  br i1 %37, label %dec_label_pc_448cd0, label %dec_label_pc_448c74, !insn.addr !3047

dec_label_pc_448c74:                              ; preds = %dec_label_pc_448c6f
  %38 = trunc i16 %wchar to i8, !insn.addr !3048
  store i8 %38, i8* %destination, align 1, !insn.addr !3049
  br label %dec_label_pc_448c76, !insn.addr !3049

dec_label_pc_448c76:                              ; preds = %dec_label_pc_448c74, %dec_label_pc_448c6b
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !3050
  br i1 %6, label %dec_label_pc_448c54, label %dec_label_pc_448c7a, !insn.addr !3050

dec_label_pc_448c7a:                              ; preds = %dec_label_pc_448c76
  store i32 1, i32* %return_value, align 4, !insn.addr !3051
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !3052
  br label %dec_label_pc_448c54, !insn.addr !3052

dec_label_pc_448c82:                              ; preds = %dec_label_pc_448c1e
  %39 = call i32 @function_404601(), !insn.addr !3053
  %40 = icmp eq i32 %39, 0, !insn.addr !3054
  br i1 %40, label %dec_label_pc_448caf, label %dec_label_pc_448ca7, !insn.addr !3055

dec_label_pc_448ca7:                              ; preds = %dec_label_pc_448c82
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !3056
  br i1 %6, label %dec_label_pc_448c54, label %dec_label_pc_448cab, !insn.addr !3056

dec_label_pc_448cab:                              ; preds = %dec_label_pc_448ca7
  store i32 %39, i32* %return_value, align 4, !insn.addr !3057
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !3058
  br label %dec_label_pc_448c54, !insn.addr !3058

dec_label_pc_448caf:                              ; preds = %dec_label_pc_448c82
  %41 = call i32 @GetLastError(), !insn.addr !3059
  %42 = icmp eq i32 %41, 122, !insn.addr !3060
  %43 = icmp eq i1 %42, false, !insn.addr !3061
  br i1 %43, label %dec_label_pc_448c4a, label %dec_label_pc_448cba, !insn.addr !3061

dec_label_pc_448cba:                              ; preds = %dec_label_pc_448caf
  %44 = icmp eq i32 %destination_count, 0
  %or.cond5 = or i1 %4, %44
  br i1 %or.cond5, label %dec_label_pc_448cd0, label %dec_label_pc_448cc3, !insn.addr !3062

dec_label_pc_448cc3:                              ; preds = %dec_label_pc_448cba
  call void @memset(i8* nonnull %destination, i8 0, i32 %destination_count), !insn.addr !3063
  br label %dec_label_pc_448cd0, !insn.addr !3064

dec_label_pc_448cd0:                              ; preds = %dec_label_pc_448c6f, %dec_label_pc_448cc3, %dec_label_pc_448cba
  %45 = call i32* @_errno(), !insn.addr !3065
  store i32 34, i32* %45, align 4, !insn.addr !3066
  call void @_invalid_parameter_noinfo(), !insn.addr !3067
  store i32 34, i32* %esi.0.reg2mem, !insn.addr !3068
  br label %dec_label_pc_448c54, !insn.addr !3068
}

define i32 @wctomb_s(i32* %return_value, i8* %destination, i32 %destination_count, i16 %wchar) local_unnamed_addr {
dec_label_pc_448d78:
  %0 = call i32 @_wctomb_s_l(i32* %return_value, i8* %destination, i32 %destination_count, i16 %wchar, i32 0), !insn.addr !3069
  ret i32 %0, !insn.addr !3070
}

define i32 @strnlen(i8* %string, i32 %maximum_count) local_unnamed_addr {
dec_label_pc_4497be:
  %ecx.8.reg2mem = alloca i32, !insn.addr !3071
  %ecx.7.reg2mem = alloca i32, !insn.addr !3071
  %ecx.6.reg2mem = alloca i32, !insn.addr !3071
  %ecx.5.lcssa.reg2mem = alloca i32, !insn.addr !3071
  %ecx.53.reg2mem = alloca i32, !insn.addr !3071
  %ecx.4.reg2mem = alloca i32, !insn.addr !3071
  %ecx.3.reg2mem = alloca i32, !insn.addr !3071
  %eax.3.reg2mem = alloca i32, !insn.addr !3071
  %eax.2.reg2mem = alloca i32, !insn.addr !3071
  %ecx.2.lcssa.reg2mem = alloca i32, !insn.addr !3071
  %ecx.25.reg2mem = alloca i32, !insn.addr !3071
  %ecx.1.reg2mem = alloca i32, !insn.addr !3071
  %ecx.0.reg2mem = alloca i32, !insn.addr !3071
  %eax.1.reg2mem = alloca i32, !insn.addr !3071
  %eax.0.reg2mem = alloca i32, !insn.addr !3071
  %0 = call i256 @__decompiler_undefined_function_21()
  %1 = call i128 @__decompiler_undefined_function_5()
  %2 = load i32, i32* @__isa_available, align 4, !insn.addr !3072
  %3 = icmp slt i32 %2, 5, !insn.addr !3073
  br i1 %3, label %dec_label_pc_449849, label %dec_label_pc_4497cf, !insn.addr !3073

dec_label_pc_4497cf:                              ; preds = %dec_label_pc_4497be
  %4 = ptrtoint i8* %string to i32, !insn.addr !3074
  %5 = and i32 %4, 31, !insn.addr !3075
  %6 = sub nsw i32 32, %5, !insn.addr !3076
  %7 = icmp eq i32 %5, 0, !insn.addr !3077
  %8 = select i1 %7, i32 0, i32 %6, !insn.addr !3078
  %9 = icmp ugt i32 %8, %maximum_count, !insn.addr !3079
  %10 = icmp eq i1 %9, false, !insn.addr !3080
  %spec.select = select i1 %10, i32 %8, i32 %maximum_count
  %11 = add i32 %spec.select, %4, !insn.addr !3081
  %12 = icmp eq i32 %spec.select, 0, !insn.addr !3082
  store i32 %4, i32* %eax.0.reg2mem, !insn.addr !3083
  store i32 %4, i32* %eax.1.reg2mem, !insn.addr !3083
  br i1 %12, label %dec_label_pc_4497fe, label %dec_label_pc_4497f4, !insn.addr !3083

dec_label_pc_4497f4:                              ; preds = %dec_label_pc_4497cf, %dec_label_pc_4497f9
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %13 = inttoptr i32 %eax.0.reload to i8*, !insn.addr !3084
  %14 = load i8, i8* %13, align 1, !insn.addr !3084
  %15 = icmp eq i8 %14, 0, !insn.addr !3084
  store i32 %eax.0.reload, i32* %eax.1.reg2mem, !insn.addr !3085
  br i1 %15, label %dec_label_pc_4497fe, label %dec_label_pc_4497f9, !insn.addr !3085

dec_label_pc_4497f9:                              ; preds = %dec_label_pc_4497f4
  %16 = add i32 %eax.0.reload, 1, !insn.addr !3086
  %17 = icmp eq i32 %16, %11, !insn.addr !3087
  %18 = icmp eq i1 %17, false, !insn.addr !3088
  store i32 %16, i32* %eax.0.reg2mem, !insn.addr !3088
  store i32 %16, i32* %eax.1.reg2mem, !insn.addr !3088
  br i1 %18, label %dec_label_pc_4497f4, label %dec_label_pc_4497fe, !insn.addr !3088

dec_label_pc_4497fe:                              ; preds = %dec_label_pc_4497f9, %dec_label_pc_4497f4, %dec_label_pc_4497cf
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %19 = sub i32 %eax.1.reload, %4, !insn.addr !3089
  %20 = icmp eq i32 %19, %spec.select, !insn.addr !3090
  %21 = icmp eq i1 %20, false, !insn.addr !3091
  store i32 %19, i32* %ecx.8.reg2mem, !insn.addr !3091
  br i1 %21, label %dec_label_pc_4498da, label %dec_label_pc_44980a, !insn.addr !3091

dec_label_pc_44980a:                              ; preds = %dec_label_pc_4497fe
  %22 = sub i32 %maximum_count, %spec.select, !insn.addr !3092
  %23 = and i32 %22, -32, !insn.addr !3093
  %24 = add i32 %eax.1.reload, %23, !insn.addr !3094
  %25 = call i128 @__asm_vpxor(i128 %1, i128 %1), !insn.addr !3095
  %26 = icmp eq i32 %23, 0, !insn.addr !3096
  store i32 %eax.1.reload, i32* %ecx.0.reg2mem, !insn.addr !3097
  store i32 %eax.1.reload, i32* %ecx.1.reg2mem, !insn.addr !3097
  br i1 %26, label %dec_label_pc_44982e, label %dec_label_pc_44981b, !insn.addr !3097

dec_label_pc_44981b:                              ; preds = %dec_label_pc_44980a, %dec_label_pc_449827
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %27 = inttoptr i32 %ecx.0.reload to i256*, !insn.addr !3098
  %28 = load i256, i256* %27, align 4, !insn.addr !3098
  %29 = call i256 @__asm_vpcmpeqb(i256 %0, i256 %28), !insn.addr !3098
  %30 = call i32 @__asm_vpmovmskb(i256 %29), !insn.addr !3099
  %31 = icmp eq i32 %30, 0, !insn.addr !3100
  %32 = icmp eq i1 %31, false, !insn.addr !3101
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !3101
  br i1 %32, label %dec_label_pc_44982e, label %dec_label_pc_449827, !insn.addr !3101

dec_label_pc_449827:                              ; preds = %dec_label_pc_44981b
  %33 = add i32 %ecx.0.reload, 32, !insn.addr !3102
  %34 = icmp eq i32 %33, %24, !insn.addr !3103
  %35 = icmp eq i1 %34, false, !insn.addr !3104
  store i32 %33, i32* %ecx.0.reg2mem, !insn.addr !3104
  store i32 %33, i32* %ecx.1.reg2mem, !insn.addr !3104
  br i1 %35, label %dec_label_pc_44981b, label %dec_label_pc_44982e, !insn.addr !3104

dec_label_pc_44982e:                              ; preds = %dec_label_pc_449827, %dec_label_pc_44981b, %dec_label_pc_44980a
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %36 = add i32 %4, %maximum_count, !insn.addr !3105
  %37 = icmp eq i32 %ecx.1.reload, %36, !insn.addr !3106
  %38 = icmp eq i1 %37, false, !insn.addr !3107
  store i32 %ecx.1.reload, i32* %ecx.25.reg2mem, !insn.addr !3107
  store i32 %ecx.1.reload, i32* %ecx.2.lcssa.reg2mem, !insn.addr !3107
  br i1 %38, label %dec_label_pc_449835, label %dec_label_pc_44983f, !insn.addr !3107

dec_label_pc_449835:                              ; preds = %dec_label_pc_44982e, %dec_label_pc_44983a
  %ecx.25.reload = load i32, i32* %ecx.25.reg2mem
  %39 = inttoptr i32 %ecx.25.reload to i8*, !insn.addr !3108
  %40 = load i8, i8* %39, align 1, !insn.addr !3108
  %41 = icmp eq i8 %40, 0, !insn.addr !3108
  store i32 %ecx.25.reload, i32* %ecx.2.lcssa.reg2mem, !insn.addr !3109
  br i1 %41, label %dec_label_pc_44983f, label %dec_label_pc_44983a, !insn.addr !3109

dec_label_pc_44983a:                              ; preds = %dec_label_pc_449835
  %42 = add i32 %ecx.25.reload, 1, !insn.addr !3110
  %43 = icmp eq i32 %42, %36, !insn.addr !3106
  %44 = icmp eq i1 %43, false, !insn.addr !3107
  store i32 %42, i32* %ecx.25.reg2mem, !insn.addr !3107
  store i32 %42, i32* %ecx.2.lcssa.reg2mem, !insn.addr !3107
  br i1 %44, label %dec_label_pc_449835, label %dec_label_pc_44983f, !insn.addr !3107

dec_label_pc_44983f:                              ; preds = %dec_label_pc_44983a, %dec_label_pc_449835, %dec_label_pc_44982e
  %ecx.2.lcssa.reload = load i32, i32* %ecx.2.lcssa.reg2mem
  %45 = sub i32 %ecx.2.lcssa.reload, %4, !insn.addr !3111
  %46 = call i32 @__asm_vzeroupper(), !insn.addr !3112
  store i32 %45, i32* %ecx.8.reg2mem, !insn.addr !3113
  br label %dec_label_pc_4498da, !insn.addr !3113

dec_label_pc_449849:                              ; preds = %dec_label_pc_4497be
  %47 = icmp slt i32 %2, 1, !insn.addr !3114
  %48 = ptrtoint i8* %string to i32
  br i1 %47, label %dec_label_pc_4498c0, label %dec_label_pc_44984e, !insn.addr !3114

dec_label_pc_44984e:                              ; preds = %dec_label_pc_449849
  %49 = and i32 %48, 15, !insn.addr !3115
  %50 = sub nsw i32 16, %49, !insn.addr !3116
  %51 = icmp eq i32 %49, 0, !insn.addr !3117
  %52 = select i1 %51, i32 0, i32 %50, !insn.addr !3118
  %53 = icmp ugt i32 %52, %maximum_count, !insn.addr !3119
  %54 = icmp eq i1 %53, false, !insn.addr !3120
  %spec.select2 = select i1 %54, i32 %52, i32 %maximum_count
  %55 = add i32 %spec.select2, %48, !insn.addr !3121
  %56 = icmp eq i32 %spec.select2, 0, !insn.addr !3122
  store i32 %48, i32* %eax.2.reg2mem, !insn.addr !3123
  store i32 %48, i32* %eax.3.reg2mem, !insn.addr !3123
  br i1 %56, label %dec_label_pc_44987d, label %dec_label_pc_449873, !insn.addr !3123

dec_label_pc_449873:                              ; preds = %dec_label_pc_44984e, %dec_label_pc_449878
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  %57 = inttoptr i32 %eax.2.reload to i8*, !insn.addr !3124
  %58 = load i8, i8* %57, align 1, !insn.addr !3124
  %59 = icmp eq i8 %58, 0, !insn.addr !3124
  store i32 %eax.2.reload, i32* %eax.3.reg2mem, !insn.addr !3125
  br i1 %59, label %dec_label_pc_44987d, label %dec_label_pc_449878, !insn.addr !3125

dec_label_pc_449878:                              ; preds = %dec_label_pc_449873
  %60 = add i32 %eax.2.reload, 1, !insn.addr !3126
  %61 = icmp eq i32 %60, %55, !insn.addr !3127
  %62 = icmp eq i1 %61, false, !insn.addr !3128
  store i32 %60, i32* %eax.2.reg2mem, !insn.addr !3128
  store i32 %60, i32* %eax.3.reg2mem, !insn.addr !3128
  br i1 %62, label %dec_label_pc_449873, label %dec_label_pc_44987d, !insn.addr !3128

dec_label_pc_44987d:                              ; preds = %dec_label_pc_449878, %dec_label_pc_449873, %dec_label_pc_44984e
  %eax.3.reload = load i32, i32* %eax.3.reg2mem
  %63 = sub i32 %eax.3.reload, %48, !insn.addr !3129
  %64 = icmp eq i32 %63, %spec.select2, !insn.addr !3130
  %65 = icmp eq i1 %64, false, !insn.addr !3131
  store i32 %63, i32* %ecx.8.reg2mem, !insn.addr !3131
  br i1 %65, label %dec_label_pc_4498da, label %dec_label_pc_449885, !insn.addr !3131

dec_label_pc_449885:                              ; preds = %dec_label_pc_44987d
  %66 = sub i32 %maximum_count, %spec.select2, !insn.addr !3132
  %67 = and i32 %66, -16, !insn.addr !3133
  %68 = call i128 @__asm_xorps(i128 %1, i128 %1), !insn.addr !3134
  %69 = add i32 %eax.3.reload, %67, !insn.addr !3135
  %70 = icmp eq i32 %67, 0, !insn.addr !3136
  store i32 %eax.3.reload, i32* %ecx.3.reg2mem, !insn.addr !3137
  store i32 %eax.3.reload, i32* %ecx.4.reg2mem, !insn.addr !3137
  br i1 %70, label %dec_label_pc_4498ab, label %dec_label_pc_449895, !insn.addr !3137

dec_label_pc_449895:                              ; preds = %dec_label_pc_449885, %dec_label_pc_4498a4
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %71 = inttoptr i32 %ecx.3.reload to i128*, !insn.addr !3138
  %72 = load i128, i128* %71, align 4, !insn.addr !3138
  %73 = call i128 @__asm_movups.3(i128 %72), !insn.addr !3138
  %74 = call i128 @__asm_pcmpeqb(i128 %73, i128 %68), !insn.addr !3139
  %75 = call i32 @__asm_pmovmskb(i128 %74), !insn.addr !3140
  %76 = icmp eq i32 %75, 0, !insn.addr !3141
  %77 = icmp eq i1 %76, false, !insn.addr !3142
  store i32 %ecx.3.reload, i32* %ecx.4.reg2mem, !insn.addr !3142
  br i1 %77, label %dec_label_pc_4498ab, label %dec_label_pc_4498a4, !insn.addr !3142

dec_label_pc_4498a4:                              ; preds = %dec_label_pc_449895
  %78 = add i32 %ecx.3.reload, 16, !insn.addr !3143
  %79 = icmp eq i32 %78, %69, !insn.addr !3144
  %80 = icmp eq i1 %79, false, !insn.addr !3145
  store i32 %78, i32* %ecx.3.reg2mem, !insn.addr !3145
  store i32 %78, i32* %ecx.4.reg2mem, !insn.addr !3145
  br i1 %80, label %dec_label_pc_449895, label %dec_label_pc_4498ab, !insn.addr !3145

dec_label_pc_4498ab:                              ; preds = %dec_label_pc_4498a4, %dec_label_pc_449895, %dec_label_pc_449885
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %81 = add i32 %48, %maximum_count, !insn.addr !3146
  %82 = icmp eq i32 %ecx.4.reload, %81, !insn.addr !3147
  %83 = icmp eq i1 %82, false, !insn.addr !3148
  store i32 %ecx.4.reload, i32* %ecx.53.reg2mem, !insn.addr !3148
  store i32 %ecx.4.reload, i32* %ecx.5.lcssa.reg2mem, !insn.addr !3148
  br i1 %83, label %dec_label_pc_4498b2, label %dec_label_pc_4498bc, !insn.addr !3148

dec_label_pc_4498b2:                              ; preds = %dec_label_pc_4498ab, %dec_label_pc_4498b7
  %ecx.53.reload = load i32, i32* %ecx.53.reg2mem
  %84 = inttoptr i32 %ecx.53.reload to i8*, !insn.addr !3149
  %85 = load i8, i8* %84, align 1, !insn.addr !3149
  %86 = icmp eq i8 %85, 0, !insn.addr !3149
  store i32 %ecx.53.reload, i32* %ecx.5.lcssa.reg2mem, !insn.addr !3150
  br i1 %86, label %dec_label_pc_4498bc, label %dec_label_pc_4498b7, !insn.addr !3150

dec_label_pc_4498b7:                              ; preds = %dec_label_pc_4498b2
  %87 = add i32 %ecx.53.reload, 1, !insn.addr !3151
  %88 = icmp eq i32 %87, %81, !insn.addr !3147
  %89 = icmp eq i1 %88, false, !insn.addr !3148
  store i32 %87, i32* %ecx.53.reg2mem, !insn.addr !3148
  store i32 %87, i32* %ecx.5.lcssa.reg2mem, !insn.addr !3148
  br i1 %89, label %dec_label_pc_4498b2, label %dec_label_pc_4498bc, !insn.addr !3148

dec_label_pc_4498bc:                              ; preds = %dec_label_pc_4498b7, %dec_label_pc_4498b2, %dec_label_pc_4498ab
  %ecx.5.lcssa.reload = load i32, i32* %ecx.5.lcssa.reg2mem
  %90 = sub i32 %ecx.5.lcssa.reload, %48, !insn.addr !3152
  store i32 %90, i32* %ecx.8.reg2mem, !insn.addr !3153
  br label %dec_label_pc_4498da, !insn.addr !3153

dec_label_pc_4498c0:                              ; preds = %dec_label_pc_449849
  %91 = add i32 %48, %maximum_count, !insn.addr !3154
  %92 = icmp eq i32 %maximum_count, 0, !insn.addr !3155
  store i32 %48, i32* %ecx.6.reg2mem, !insn.addr !3156
  store i32 %48, i32* %ecx.7.reg2mem, !insn.addr !3156
  br i1 %92, label %dec_label_pc_4498d8, label %dec_label_pc_4498ce, !insn.addr !3156

dec_label_pc_4498ce:                              ; preds = %dec_label_pc_4498c0, %dec_label_pc_4498d3
  %ecx.6.reload = load i32, i32* %ecx.6.reg2mem
  %93 = inttoptr i32 %ecx.6.reload to i8*, !insn.addr !3157
  %94 = load i8, i8* %93, align 1, !insn.addr !3157
  %95 = icmp eq i8 %94, 0, !insn.addr !3157
  store i32 %ecx.6.reload, i32* %ecx.7.reg2mem, !insn.addr !3158
  br i1 %95, label %dec_label_pc_4498d8, label %dec_label_pc_4498d3, !insn.addr !3158

dec_label_pc_4498d3:                              ; preds = %dec_label_pc_4498ce
  %96 = add i32 %ecx.6.reload, 1, !insn.addr !3159
  %97 = icmp eq i32 %96, %91, !insn.addr !3160
  %98 = icmp eq i1 %97, false, !insn.addr !3161
  store i32 %96, i32* %ecx.6.reg2mem, !insn.addr !3161
  store i32 %96, i32* %ecx.7.reg2mem, !insn.addr !3161
  br i1 %98, label %dec_label_pc_4498ce, label %dec_label_pc_4498d8, !insn.addr !3161

dec_label_pc_4498d8:                              ; preds = %dec_label_pc_4498d3, %dec_label_pc_4498ce, %dec_label_pc_4498c0
  %ecx.7.reload = load i32, i32* %ecx.7.reg2mem
  %99 = sub i32 %ecx.7.reload, %48, !insn.addr !3162
  store i32 %99, i32* %ecx.8.reg2mem, !insn.addr !3162
  br label %dec_label_pc_4498da, !insn.addr !3162

dec_label_pc_4498da:                              ; preds = %dec_label_pc_4498d8, %dec_label_pc_4498bc, %dec_label_pc_44987d, %dec_label_pc_44983f, %dec_label_pc_4497fe
  %ecx.8.reload = load i32, i32* %ecx.8.reg2mem
  ret i32 %ecx.8.reload, !insn.addr !3163
}

define i32 @wcsnlen(i16* %string, i32 %maximum_count) local_unnamed_addr {
dec_label_pc_449a9a:
  %ecx.9.reg2mem = alloca i32, !insn.addr !3164
  %storemerge.reg2mem = alloca i32, !insn.addr !3164
  %ecx.8.reg2mem = alloca i32, !insn.addr !3164
  %ecx.7.reg2mem = alloca i32, !insn.addr !3164
  %edi.4.reg2mem = alloca i32, !insn.addr !3164
  %edi.3.lcssa.reg2mem = alloca i32, !insn.addr !3164
  %edi.38.reg2mem = alloca i32, !insn.addr !3164
  %ecx.6.reg2mem = alloca i32, !insn.addr !3164
  %ecx.5.reg2mem = alloca i32, !insn.addr !3164
  %ecx.4.reg2mem = alloca i32, !insn.addr !3164
  %edi.2.reg2mem = alloca i32, !insn.addr !3164
  %edi.1.reg2mem = alloca i32, !insn.addr !3164
  %edi.0.lcssa.reg2mem = alloca i32, !insn.addr !3164
  %edi.010.reg2mem = alloca i32, !insn.addr !3164
  %ecx.3.reg2mem = alloca i32, !insn.addr !3164
  %ecx.2.reg2mem = alloca i32, !insn.addr !3164
  %esi.0.reg2mem = alloca i32, !insn.addr !3164
  %ecx.1.reg2mem = alloca i32, !insn.addr !3164
  %ecx.0.reg2mem = alloca i32, !insn.addr !3164
  %0 = call i256 @__decompiler_undefined_function_21()
  %1 = call i128 @__decompiler_undefined_function_5()
  %2 = load i32, i32* @__isa_available, align 4, !insn.addr !3165
  %3 = icmp slt i32 %2, 5, !insn.addr !3166
  br i1 %3, label %dec_label_pc_449b66, label %dec_label_pc_449aaf, !insn.addr !3166

dec_label_pc_449aaf:                              ; preds = %dec_label_pc_449a9a
  %4 = ptrtoint i16* %string to i32, !insn.addr !3167
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0, !insn.addr !3168
  br i1 %6, label %dec_label_pc_449ad8, label %dec_label_pc_449ab7, !insn.addr !3169

dec_label_pc_449ab7:                              ; preds = %dec_label_pc_449aaf
  %7 = mul i32 %maximum_count, 2, !insn.addr !3170
  %8 = add i32 %7, %4, !insn.addr !3170
  %9 = icmp eq i32 %7, 0, !insn.addr !3171
  store i32 %4, i32* %ecx.0.reg2mem, !insn.addr !3172
  store i32 %4, i32* %ecx.1.reg2mem, !insn.addr !3172
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !3172
  br i1 %9, label %dec_label_pc_449ad1, label %dec_label_pc_449ac5, !insn.addr !3172

dec_label_pc_449ac5:                              ; preds = %dec_label_pc_449ab7, %dec_label_pc_449aca
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %10 = inttoptr i32 %ecx.0.reload to i16*, !insn.addr !3173
  %11 = load i16, i16* %10, align 2, !insn.addr !3173
  %12 = icmp eq i16 %11, 0, !insn.addr !3173
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !3174
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !3174
  br i1 %12, label %dec_label_pc_449ad1, label %dec_label_pc_449aca, !insn.addr !3174

dec_label_pc_449aca:                              ; preds = %dec_label_pc_449ac5
  %13 = add i32 %ecx.0.reload, 2, !insn.addr !3175
  %14 = icmp eq i32 %13, %8, !insn.addr !3176
  %15 = icmp eq i1 %14, false, !insn.addr !3177
  store i32 %13, i32* %ecx.0.reg2mem, !insn.addr !3177
  store i32 %13, i32* %ecx.1.reg2mem, !insn.addr !3177
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !3177
  br i1 %15, label %dec_label_pc_449ac5, label %dec_label_pc_449ad1, !insn.addr !3177

dec_label_pc_449ad1:                              ; preds = %dec_label_pc_449aca, %dec_label_pc_449ac5, %dec_label_pc_449b92, %dec_label_pc_449b89, %dec_label_pc_449c10, %dec_label_pc_449c15, %dec_label_pc_449c04, %dec_label_pc_449b77, %dec_label_pc_449ab7
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %16 = sub i32 %ecx.1.reload, %esi.0.reload, !insn.addr !3178
  store i32 %16, i32* %storemerge.reg2mem, !insn.addr !3179
  br label %dec_label_pc_449c42, !insn.addr !3179

dec_label_pc_449ad8:                              ; preds = %dec_label_pc_449aaf
  %17 = and i32 %4, 31, !insn.addr !3180
  %18 = sub nsw i32 32, %17, !insn.addr !3181
  %19 = icmp eq i32 %17, 0, !insn.addr !3182
  %.op = udiv i32 %18, 2
  %20 = select i1 %19, i32 0, i32 %.op, !insn.addr !3183
  %21 = icmp ugt i32 %20, %maximum_count, !insn.addr !3184
  %22 = icmp eq i1 %21, false, !insn.addr !3185
  %spec.select = select i1 %22, i32 %20, i32 %maximum_count
  %23 = mul i32 %spec.select, 2, !insn.addr !3186
  %24 = add i32 %23, %4, !insn.addr !3186
  %25 = icmp eq i32 %23, 0, !insn.addr !3187
  store i32 %4, i32* %ecx.2.reg2mem, !insn.addr !3188
  store i32 %4, i32* %ecx.3.reg2mem, !insn.addr !3188
  br i1 %25, label %dec_label_pc_449b0b, label %dec_label_pc_449aff, !insn.addr !3188

dec_label_pc_449aff:                              ; preds = %dec_label_pc_449ad8, %dec_label_pc_449b04
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %26 = inttoptr i32 %ecx.2.reload to i16*, !insn.addr !3189
  %27 = load i16, i16* %26, align 2, !insn.addr !3189
  %28 = icmp eq i16 %27, 0, !insn.addr !3189
  store i32 %ecx.2.reload, i32* %ecx.3.reg2mem, !insn.addr !3190
  br i1 %28, label %dec_label_pc_449b0b, label %dec_label_pc_449b04, !insn.addr !3190

dec_label_pc_449b04:                              ; preds = %dec_label_pc_449aff
  %29 = add i32 %ecx.2.reload, 2, !insn.addr !3191
  %30 = icmp eq i32 %29, %24, !insn.addr !3192
  %31 = icmp eq i1 %30, false, !insn.addr !3193
  store i32 %29, i32* %ecx.2.reg2mem, !insn.addr !3193
  store i32 %29, i32* %ecx.3.reg2mem, !insn.addr !3193
  br i1 %31, label %dec_label_pc_449aff, label %dec_label_pc_449b0b, !insn.addr !3193

dec_label_pc_449b0b:                              ; preds = %dec_label_pc_449b04, %dec_label_pc_449aff, %dec_label_pc_449ad8
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %32 = sub i32 %ecx.3.reload, %4, !insn.addr !3194
  %33 = sdiv i32 %32, 2, !insn.addr !3195
  %34 = icmp eq i32 %33, %spec.select, !insn.addr !3196
  %35 = icmp eq i1 %34, false, !insn.addr !3197
  store i32 %33, i32* %ecx.9.reg2mem, !insn.addr !3197
  br i1 %35, label %dec_label_pc_449c44, label %dec_label_pc_449b17, !insn.addr !3197

dec_label_pc_449b17:                              ; preds = %dec_label_pc_449b0b
  %36 = and i32 %32, -2, !insn.addr !3198
  %37 = add i32 %36, %4, !insn.addr !3198
  %38 = sub i32 %maximum_count, %spec.select, !insn.addr !3199
  %39 = and i32 %38, 2147483616, !insn.addr !3200
  %40 = add i32 %33, %39, !insn.addr !3201
  %41 = call i128 @__asm_vpxor(i128 %1, i128 %1), !insn.addr !3202
  %42 = mul i32 %40, 2, !insn.addr !3203
  %43 = add i32 %42, %4, !insn.addr !3203
  %44 = icmp eq i32 %37, %43, !insn.addr !3204
  %45 = icmp eq i1 %44, false, !insn.addr !3205
  store i32 %37, i32* %edi.010.reg2mem, !insn.addr !3205
  store i32 %37, i32* %edi.0.lcssa.reg2mem, !insn.addr !3205
  br i1 %45, label %dec_label_pc_449b2d, label %dec_label_pc_449b40, !insn.addr !3205

dec_label_pc_449b2d:                              ; preds = %dec_label_pc_449b17, %dec_label_pc_449b39
  %edi.010.reload = load i32, i32* %edi.010.reg2mem
  %46 = inttoptr i32 %edi.010.reload to i256*, !insn.addr !3206
  %47 = load i256, i256* %46, align 4, !insn.addr !3206
  %48 = call i256 @__asm_vpcmpeqw(i256 %0, i256 %47), !insn.addr !3206
  %49 = call i32 @__asm_vpmovmskb(i256 %48), !insn.addr !3207
  %50 = icmp eq i32 %49, 0, !insn.addr !3208
  %51 = icmp eq i1 %50, false, !insn.addr !3209
  store i32 %edi.010.reload, i32* %edi.0.lcssa.reg2mem, !insn.addr !3209
  br i1 %51, label %dec_label_pc_449b40, label %dec_label_pc_449b39, !insn.addr !3209

dec_label_pc_449b39:                              ; preds = %dec_label_pc_449b2d
  %52 = add i32 %edi.010.reload, 32, !insn.addr !3210
  %53 = icmp eq i32 %52, %43, !insn.addr !3204
  %54 = icmp eq i1 %53, false, !insn.addr !3205
  store i32 %52, i32* %edi.010.reg2mem, !insn.addr !3205
  store i32 %52, i32* %edi.0.lcssa.reg2mem, !insn.addr !3205
  br i1 %54, label %dec_label_pc_449b2d, label %dec_label_pc_449b40, !insn.addr !3205

dec_label_pc_449b40:                              ; preds = %dec_label_pc_449b39, %dec_label_pc_449b2d, %dec_label_pc_449b17
  %edi.0.lcssa.reload = load i32, i32* %edi.0.lcssa.reg2mem
  %55 = mul i32 %maximum_count, 2, !insn.addr !3211
  %56 = add i32 %55, %4, !insn.addr !3211
  %57 = icmp eq i32 %edi.0.lcssa.reload, %56, !insn.addr !3212
  store i32 %edi.0.lcssa.reload, i32* %edi.1.reg2mem, !insn.addr !3213
  store i32 %56, i32* %edi.2.reg2mem, !insn.addr !3213
  br i1 %57, label %dec_label_pc_449b58, label %dec_label_pc_449b4c, !insn.addr !3213

dec_label_pc_449b4c:                              ; preds = %dec_label_pc_449b40, %dec_label_pc_449b51
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %58 = inttoptr i32 %edi.1.reload to i16*, !insn.addr !3214
  %59 = load i16, i16* %58, align 2, !insn.addr !3214
  %60 = icmp eq i16 %59, 0, !insn.addr !3214
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !3215
  br i1 %60, label %dec_label_pc_449b58, label %dec_label_pc_449b51, !insn.addr !3215

dec_label_pc_449b51:                              ; preds = %dec_label_pc_449b4c
  %61 = add i32 %edi.1.reload, 2, !insn.addr !3216
  %62 = icmp eq i32 %61, %56, !insn.addr !3217
  %63 = icmp eq i1 %62, false, !insn.addr !3218
  store i32 %61, i32* %edi.1.reg2mem, !insn.addr !3218
  store i32 %61, i32* %edi.2.reg2mem, !insn.addr !3218
  br i1 %63, label %dec_label_pc_449b4c, label %dec_label_pc_449b58, !insn.addr !3218

dec_label_pc_449b58:                              ; preds = %dec_label_pc_449b51, %dec_label_pc_449b4c, %dec_label_pc_449b40
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %64 = sub i32 %edi.2.reload, %4, !insn.addr !3219
  %65 = sdiv i32 %64, 2, !insn.addr !3220
  %66 = call i32 @__asm_vzeroupper(), !insn.addr !3221
  store i32 %65, i32* %ecx.9.reg2mem, !insn.addr !3222
  br label %dec_label_pc_449c44, !insn.addr !3222

dec_label_pc_449b66:                              ; preds = %dec_label_pc_449a9a
  %67 = icmp slt i32 %2, 1, !insn.addr !3223
  %68 = ptrtoint i16* %string to i32
  br i1 %67, label %dec_label_pc_449c23, label %dec_label_pc_449b6f, !insn.addr !3223

dec_label_pc_449b6f:                              ; preds = %dec_label_pc_449b66
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0, !insn.addr !3224
  br i1 %70, label %dec_label_pc_449b9e, label %dec_label_pc_449b77, !insn.addr !3225

dec_label_pc_449b77:                              ; preds = %dec_label_pc_449b6f
  %71 = mul i32 %maximum_count, 2, !insn.addr !3226
  %72 = add i32 %71, %68, !insn.addr !3226
  %73 = icmp eq i32 %71, 0, !insn.addr !3227
  store i32 %68, i32* %ecx.1.reg2mem, !insn.addr !3228
  store i32 %68, i32* %esi.0.reg2mem, !insn.addr !3228
  store i32 %68, i32* %ecx.4.reg2mem, !insn.addr !3228
  br i1 %73, label %dec_label_pc_449ad1, label %dec_label_pc_449b89, !insn.addr !3228

dec_label_pc_449b89:                              ; preds = %dec_label_pc_449b77, %dec_label_pc_449b92
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %74 = inttoptr i32 %ecx.4.reload to i16*, !insn.addr !3229
  %75 = load i16, i16* %74, align 2, !insn.addr !3229
  %76 = icmp eq i16 %75, 0, !insn.addr !3229
  store i32 %ecx.4.reload, i32* %ecx.1.reg2mem, !insn.addr !3230
  store i32 %68, i32* %esi.0.reg2mem, !insn.addr !3230
  br i1 %76, label %dec_label_pc_449ad1, label %dec_label_pc_449b92, !insn.addr !3230

dec_label_pc_449b92:                              ; preds = %dec_label_pc_449b89
  %77 = add i32 %ecx.4.reload, 2, !insn.addr !3231
  %78 = icmp eq i32 %77, %72, !insn.addr !3232
  %79 = icmp eq i1 %78, false, !insn.addr !3233
  store i32 %77, i32* %ecx.1.reg2mem, !insn.addr !3233
  store i32 %68, i32* %esi.0.reg2mem, !insn.addr !3233
  store i32 %77, i32* %ecx.4.reg2mem, !insn.addr !3233
  br i1 %79, label %dec_label_pc_449b89, label %dec_label_pc_449ad1, !insn.addr !3233

dec_label_pc_449b9e:                              ; preds = %dec_label_pc_449b6f
  %80 = and i32 %68, 15, !insn.addr !3234
  %81 = sub nsw i32 16, %80, !insn.addr !3235
  %82 = icmp eq i32 %80, 0, !insn.addr !3236
  %.op2 = udiv i32 %81, 2
  %83 = select i1 %82, i32 0, i32 %.op2, !insn.addr !3237
  %84 = icmp ugt i32 %83, %maximum_count, !insn.addr !3238
  %85 = icmp eq i1 %84, false, !insn.addr !3239
  %spec.select3 = select i1 %85, i32 %83, i32 %maximum_count
  %86 = mul i32 %spec.select3, 2, !insn.addr !3240
  %87 = add i32 %86, %68, !insn.addr !3240
  %88 = icmp eq i32 %86, 0, !insn.addr !3241
  store i32 %68, i32* %ecx.5.reg2mem, !insn.addr !3242
  store i32 %68, i32* %ecx.6.reg2mem, !insn.addr !3242
  br i1 %88, label %dec_label_pc_449bd1, label %dec_label_pc_449bc5, !insn.addr !3242

dec_label_pc_449bc5:                              ; preds = %dec_label_pc_449b9e, %dec_label_pc_449bca
  %ecx.5.reload = load i32, i32* %ecx.5.reg2mem
  %89 = inttoptr i32 %ecx.5.reload to i16*, !insn.addr !3243
  %90 = load i16, i16* %89, align 2, !insn.addr !3243
  %91 = icmp eq i16 %90, 0, !insn.addr !3243
  store i32 %ecx.5.reload, i32* %ecx.6.reg2mem, !insn.addr !3244
  br i1 %91, label %dec_label_pc_449bd1, label %dec_label_pc_449bca, !insn.addr !3244

dec_label_pc_449bca:                              ; preds = %dec_label_pc_449bc5
  %92 = add i32 %ecx.5.reload, 2, !insn.addr !3245
  %93 = icmp eq i32 %92, %87, !insn.addr !3246
  %94 = icmp eq i1 %93, false, !insn.addr !3247
  store i32 %92, i32* %ecx.5.reg2mem, !insn.addr !3247
  store i32 %92, i32* %ecx.6.reg2mem, !insn.addr !3247
  br i1 %94, label %dec_label_pc_449bc5, label %dec_label_pc_449bd1, !insn.addr !3247

dec_label_pc_449bd1:                              ; preds = %dec_label_pc_449bca, %dec_label_pc_449bc5, %dec_label_pc_449b9e
  %ecx.6.reload = load i32, i32* %ecx.6.reg2mem
  %95 = sub i32 %ecx.6.reload, %68, !insn.addr !3248
  %96 = sdiv i32 %95, 2, !insn.addr !3249
  %97 = icmp eq i32 %96, %spec.select3, !insn.addr !3250
  %98 = icmp eq i1 %97, false, !insn.addr !3251
  store i32 %96, i32* %ecx.9.reg2mem, !insn.addr !3251
  br i1 %98, label %dec_label_pc_449c44, label %dec_label_pc_449bd9, !insn.addr !3251

dec_label_pc_449bd9:                              ; preds = %dec_label_pc_449bd1
  %99 = and i32 %95, -2, !insn.addr !3252
  %100 = add i32 %99, %68, !insn.addr !3252
  %101 = sub i32 %maximum_count, %spec.select3, !insn.addr !3253
  %102 = call i128 @__asm_xorps(i128 %1, i128 %1), !insn.addr !3254
  %103 = and i32 %101, 2147483632, !insn.addr !3255
  %104 = add i32 %96, %103, !insn.addr !3256
  %105 = mul i32 %104, 2, !insn.addr !3257
  %106 = add i32 %105, %68, !insn.addr !3257
  %107 = icmp eq i32 %100, %106, !insn.addr !3258
  %108 = icmp eq i1 %107, false, !insn.addr !3259
  store i32 %100, i32* %edi.38.reg2mem, !insn.addr !3259
  store i32 %100, i32* %edi.3.lcssa.reg2mem, !insn.addr !3259
  br i1 %108, label %dec_label_pc_449bee, label %dec_label_pc_449c04, !insn.addr !3259

dec_label_pc_449bee:                              ; preds = %dec_label_pc_449bd9, %dec_label_pc_449bfd
  %edi.38.reload = load i32, i32* %edi.38.reg2mem
  %109 = inttoptr i32 %edi.38.reload to i128*, !insn.addr !3260
  %110 = load i128, i128* %109, align 4, !insn.addr !3260
  %111 = call i128 @__asm_movups.3(i128 %110), !insn.addr !3260
  %112 = call i128 @__asm_pcmpeqw(i128 %111, i128 %102), !insn.addr !3261
  %113 = call i32 @__asm_pmovmskb(i128 %112), !insn.addr !3262
  %114 = icmp eq i32 %113, 0, !insn.addr !3263
  %115 = icmp eq i1 %114, false, !insn.addr !3264
  store i32 %edi.38.reload, i32* %edi.3.lcssa.reg2mem, !insn.addr !3264
  br i1 %115, label %dec_label_pc_449c04, label %dec_label_pc_449bfd, !insn.addr !3264

dec_label_pc_449bfd:                              ; preds = %dec_label_pc_449bee
  %116 = add i32 %edi.38.reload, 16, !insn.addr !3265
  %117 = icmp eq i32 %116, %106, !insn.addr !3258
  %118 = icmp eq i1 %117, false, !insn.addr !3259
  store i32 %116, i32* %edi.38.reg2mem, !insn.addr !3259
  store i32 %116, i32* %edi.3.lcssa.reg2mem, !insn.addr !3259
  br i1 %118, label %dec_label_pc_449bee, label %dec_label_pc_449c04, !insn.addr !3259

dec_label_pc_449c04:                              ; preds = %dec_label_pc_449bfd, %dec_label_pc_449bee, %dec_label_pc_449bd9
  %edi.3.lcssa.reload = load i32, i32* %edi.3.lcssa.reg2mem
  %119 = mul i32 %maximum_count, 2, !insn.addr !3266
  %120 = add i32 %119, %68, !insn.addr !3266
  %121 = icmp eq i32 %edi.3.lcssa.reload, %120, !insn.addr !3267
  store i32 %120, i32* %ecx.1.reg2mem, !insn.addr !3268
  store i32 %68, i32* %esi.0.reg2mem, !insn.addr !3268
  store i32 %edi.3.lcssa.reload, i32* %edi.4.reg2mem, !insn.addr !3268
  br i1 %121, label %dec_label_pc_449ad1, label %dec_label_pc_449c10, !insn.addr !3268

dec_label_pc_449c10:                              ; preds = %dec_label_pc_449c04, %dec_label_pc_449c15
  %edi.4.reload = load i32, i32* %edi.4.reg2mem
  %122 = inttoptr i32 %edi.4.reload to i16*, !insn.addr !3269
  %123 = load i16, i16* %122, align 2, !insn.addr !3269
  %124 = icmp eq i16 %123, 0, !insn.addr !3269
  store i32 %edi.4.reload, i32* %ecx.1.reg2mem, !insn.addr !3270
  store i32 %68, i32* %esi.0.reg2mem, !insn.addr !3270
  br i1 %124, label %dec_label_pc_449ad1, label %dec_label_pc_449c15, !insn.addr !3270

dec_label_pc_449c15:                              ; preds = %dec_label_pc_449c10
  %125 = add i32 %edi.4.reload, 2, !insn.addr !3271
  %126 = icmp eq i32 %125, %120, !insn.addr !3272
  %127 = icmp eq i1 %126, false, !insn.addr !3273
  store i32 %125, i32* %ecx.1.reg2mem, !insn.addr !3273
  store i32 %68, i32* %esi.0.reg2mem, !insn.addr !3273
  store i32 %125, i32* %edi.4.reg2mem, !insn.addr !3273
  br i1 %127, label %dec_label_pc_449c10, label %dec_label_pc_449ad1, !insn.addr !3273

dec_label_pc_449c23:                              ; preds = %dec_label_pc_449b66
  %128 = mul i32 %maximum_count, 2, !insn.addr !3274
  %129 = add i32 %128, %68, !insn.addr !3274
  %130 = icmp eq i32 %128, 0, !insn.addr !3275
  store i32 %68, i32* %ecx.7.reg2mem, !insn.addr !3276
  store i32 %68, i32* %ecx.8.reg2mem, !insn.addr !3276
  br i1 %130, label %dec_label_pc_449c40, label %dec_label_pc_449c34, !insn.addr !3276

dec_label_pc_449c34:                              ; preds = %dec_label_pc_449c23, %dec_label_pc_449c39
  %ecx.7.reload = load i32, i32* %ecx.7.reg2mem
  %131 = inttoptr i32 %ecx.7.reload to i16*, !insn.addr !3277
  %132 = load i16, i16* %131, align 2, !insn.addr !3277
  %133 = icmp eq i16 %132, 0, !insn.addr !3277
  store i32 %ecx.7.reload, i32* %ecx.8.reg2mem, !insn.addr !3278
  br i1 %133, label %dec_label_pc_449c40, label %dec_label_pc_449c39, !insn.addr !3278

dec_label_pc_449c39:                              ; preds = %dec_label_pc_449c34
  %134 = add i32 %ecx.7.reload, 2, !insn.addr !3279
  %135 = icmp eq i32 %134, %129, !insn.addr !3280
  %136 = icmp eq i1 %135, false, !insn.addr !3281
  store i32 %134, i32* %ecx.7.reg2mem, !insn.addr !3281
  store i32 %134, i32* %ecx.8.reg2mem, !insn.addr !3281
  br i1 %136, label %dec_label_pc_449c34, label %dec_label_pc_449c40, !insn.addr !3281

dec_label_pc_449c40:                              ; preds = %dec_label_pc_449c39, %dec_label_pc_449c34, %dec_label_pc_449c23
  %ecx.8.reload = load i32, i32* %ecx.8.reg2mem
  %137 = sub i32 %ecx.8.reload, %68, !insn.addr !3282
  store i32 %137, i32* %storemerge.reg2mem, !insn.addr !3282
  br label %dec_label_pc_449c42, !insn.addr !3282

dec_label_pc_449c42:                              ; preds = %dec_label_pc_449c40, %dec_label_pc_449ad1
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %138 = sdiv i32 %storemerge.reload, 2, !insn.addr !3283
  store i32 %138, i32* %ecx.9.reg2mem, !insn.addr !3283
  br label %dec_label_pc_449c44, !insn.addr !3283

dec_label_pc_449c44:                              ; preds = %dec_label_pc_449c42, %dec_label_pc_449bd1, %dec_label_pc_449b58, %dec_label_pc_449b0b
  %ecx.9.reload = load i32, i32* %ecx.9.reg2mem
  ret i32 %ecx.9.reload, !insn.addr !3284
}

define void @"__crt_seh_guarded_call<void>::operator()<<lambda_15ade71b0218206bbe3333a0c9b79046>,<lambda_da44e0f8b0f19ba52fefafb335991732> &,<lambda_207f2d024fc103971653565357d6cd41> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_449ccc:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a598, i32 8), !insn.addr !3285
  %2 = add i32 %0, 8, !insn.addr !3286
  %3 = inttoptr i32 %2 to i32*, !insn.addr !3286
  %4 = load i32, i32* %3, align 4, !insn.addr !3286
  %5 = inttoptr i32 %4 to i32*, !insn.addr !3287
  %6 = load i32, i32* %5, align 4, !insn.addr !3287
  %7 = call i32 @function_40452a(i32 %6), !insn.addr !3288
  %8 = add i32 %0, -4, !insn.addr !3289
  %9 = inttoptr i32 %8 to i32*, !insn.addr !3289
  store i32 0, i32* %9, align 4, !insn.addr !3289
  %10 = add i32 %0, 12, !insn.addr !3290
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3290
  %12 = load i32, i32* %11, align 4, !insn.addr !3290
  %13 = inttoptr i32 %12 to i32*, !insn.addr !3291
  %14 = load i32, i32* %13, align 4, !insn.addr !3291
  %15 = inttoptr i32 %14 to i32*, !insn.addr !3292
  %16 = load i32, i32* %15, align 4, !insn.addr !3292
  %17 = add i32 %16, 72, !insn.addr !3293
  %18 = inttoptr i32 %17 to i32*, !insn.addr !3293
  %19 = load i32, i32* %18, align 4, !insn.addr !3293
  %20 = inttoptr i32 %19 to i32*, !insn.addr !3294
  %21 = load i32, i32* %20, align 4, !insn.addr !3294
  %22 = add i32 %21, 1, !insn.addr !3294
  store i32 %22, i32* %20, align 4, !insn.addr !3294
  store i32 -2, i32* %9, align 4, !insn.addr !3295
  %23 = call i32 @function_449d12(), !insn.addr !3296
  %24 = add i32 %0, -16, !insn.addr !3297
  %25 = inttoptr i32 %24 to i32*, !insn.addr !3297
  %26 = load i32, i32* %25, align 4, !insn.addr !3297
  call void @__writefsdword(i32 0, i32 %26), !insn.addr !3298
  ret void, !insn.addr !3299
}

define i32 @function_449d12() local_unnamed_addr {
dec_label_pc_449d12:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !3300
  %2 = inttoptr i32 %1 to i32*, !insn.addr !3300
  %3 = load i32, i32* %2, align 4, !insn.addr !3300
  %4 = inttoptr i32 %3 to i32*, !insn.addr !3301
  %5 = load i32, i32* %4, align 4, !insn.addr !3301
  %6 = call i32 @function_4017d5(i32 %5), !insn.addr !3302
  ret i32 %6, !insn.addr !3303
}

define void @"__crt_seh_guarded_call<void>::operator()<<lambda_a7e850c220f1c8d1e6efeecdedd162c6>,<lambda_46720907175c18b6c9d2717bc0d2d362> &,<lambda_9048902d66e8d99359bc9897bbb930a8> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_449e21:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a5b8, i32 8), !insn.addr !3304
  %2 = add i32 %0, 8, !insn.addr !3305
  %3 = inttoptr i32 %2 to i32*, !insn.addr !3305
  %4 = load i32, i32* %3, align 4, !insn.addr !3305
  %5 = inttoptr i32 %4 to i32*, !insn.addr !3306
  %6 = load i32, i32* %5, align 4, !insn.addr !3306
  %7 = call i32 @function_40452a(i32 %6), !insn.addr !3307
  %8 = add i32 %0, -4, !insn.addr !3308
  %9 = inttoptr i32 %8 to i32*, !insn.addr !3308
  store i32 0, i32* %9, align 4, !insn.addr !3308
  %10 = add i32 %0, 12, !insn.addr !3309
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3309
  %12 = load i32, i32* %11, align 4, !insn.addr !3309
  %13 = add i32 %12, 4, !insn.addr !3310
  %14 = inttoptr i32 %13 to i32*, !insn.addr !3310
  %15 = load i32, i32* %14, align 4, !insn.addr !3310
  %16 = inttoptr i32 %15 to i32*, !insn.addr !3311
  %17 = load i32, i32* %16, align 4, !insn.addr !3311
  %18 = inttoptr i32 %17 to i32*, !insn.addr !3312
  %19 = load i32, i32* %18, align 4, !insn.addr !3312
  %20 = inttoptr i32 %12 to i32*, !insn.addr !3313
  %21 = load i32, i32* %20, align 4, !insn.addr !3313
  %22 = inttoptr i32 %21 to i32*, !insn.addr !3314
  %23 = load i32, i32* %22, align 4, !insn.addr !3314
  call void @replace_current_thread_locale_nolock(i32 %23, i32 %19), !insn.addr !3315
  store i32 -2, i32* %9, align 4, !insn.addr !3316
  %24 = call i32 @function_449e6f(), !insn.addr !3317
  %25 = add i32 %0, -16, !insn.addr !3318
  %26 = inttoptr i32 %25 to i32*, !insn.addr !3318
  %27 = load i32, i32* %26, align 4, !insn.addr !3318
  call void @__writefsdword(i32 0, i32 %27), !insn.addr !3319
  ret void, !insn.addr !3320
}

define i32 @function_449e6f() local_unnamed_addr {
dec_label_pc_449e6f:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !3321
  %2 = inttoptr i32 %1 to i32*, !insn.addr !3321
  %3 = load i32, i32* %2, align 4, !insn.addr !3321
  %4 = inttoptr i32 %3 to i32*, !insn.addr !3322
  %5 = load i32, i32* %4, align 4, !insn.addr !3322
  %6 = call i32 @function_4017d5(i32 %5), !insn.addr !3323
  ret i32 %6, !insn.addr !3324
}

define void @construct_ptd(i32 %ptd, i32 %locale_data) local_unnamed_addr {
dec_label_pc_44a15f:
  %stack_var_8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %ptd, i32* %stack_var_4, align 4
  %stack_var_-24 = alloca i32, align 4
  %0 = add i32 %ptd, 24, !insn.addr !3325
  %1 = inttoptr i32 %0 to i32*, !insn.addr !3325
  store i32 1, i32* %1, align 4, !insn.addr !3325
  %2 = load i32, i32* %stack_var_4, align 4, !insn.addr !3326
  %3 = inttoptr i32 %2 to i32*, !insn.addr !3327
  store i32 ptrtoint (i32* @__acrt_exception_action_table to i32), i32* %3, align 4, !insn.addr !3327
  %4 = load i32, i32* %stack_var_4, align 4, !insn.addr !3328
  %5 = add i32 %4, 848, !insn.addr !3329
  %6 = inttoptr i32 %5 to i32*, !insn.addr !3329
  store i32 1, i32* %6, align 4, !insn.addr !3329
  %7 = load i32, i32* %stack_var_4, align 4, !insn.addr !3330
  %8 = add i32 %7, 72, !insn.addr !3331
  %9 = inttoptr i32 %8 to i32*, !insn.addr !3331
  store i32 ptrtoint (%__crt_multibyte_data* @__acrt_initial_multibyte_data to i32), i32* %9, align 4, !insn.addr !3331
  %10 = load i32, i32* %stack_var_4, align 4, !insn.addr !3332
  %11 = add i32 %10, 108, !insn.addr !3333
  %12 = inttoptr i32 %11 to i16*, !insn.addr !3333
  store i16 67, i16* %12, align 2, !insn.addr !3333
  %13 = load i32, i32* %stack_var_4, align 4, !insn.addr !3334
  %14 = add i32 %13, 370, !insn.addr !3335
  %15 = inttoptr i32 %14 to i16*, !insn.addr !3335
  store i16 67, i16* %15, align 2, !insn.addr !3335
  %16 = load i32, i32* %stack_var_4, align 4, !insn.addr !3336
  %17 = add i32 %16, 844, !insn.addr !3337
  %18 = inttoptr i32 %17 to i32*, !insn.addr !3337
  store i32 0, i32* %18, align 4, !insn.addr !3337
  %19 = ptrtoint i32* %stack_var_4 to i32, !insn.addr !3338
  store i32 %19, i32* %stack_var_-20, align 4, !insn.addr !3338
  store i32 5, i32* %stack_var_-12, align 4, !insn.addr !3339
  store i32 5, i32* %stack_var_-24, align 4, !insn.addr !3340
  %20 = ptrtoint i32* %stack_var_-24 to i32, !insn.addr !3341
  call void @"__crt_seh_guarded_call<void>::operator()<<lambda_15ade71b0218206bbe3333a0c9b79046>,<lambda_da44e0f8b0f19ba52fefafb335991732> &,<lambda_207f2d024fc103971653565357d6cd41> >"(i32 %20, i32* nonnull %stack_var_-20, i32* nonnull %stack_var_-12, i32* inttoptr (i32 5 to i32*)), !insn.addr !3342
  store i32 %19, i32* %stack_var_-16, align 4, !insn.addr !3343
  %21 = ptrtoint i32* %stack_var_8 to i32, !insn.addr !3344
  store i32 %21, i32* %stack_var_-12, align 4, !insn.addr !3344
  store i32 4, i32* %stack_var_-24, align 4, !insn.addr !3345
  store i32 4, i32* %stack_var_-20, align 4, !insn.addr !3346
  %22 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !3347
  call void @"__crt_seh_guarded_call<void>::operator()<<lambda_a7e850c220f1c8d1e6efeecdedd162c6>,<lambda_46720907175c18b6c9d2717bc0d2d362> &,<lambda_9048902d66e8d99359bc9897bbb930a8> >"(i32 %22, i32* nonnull %stack_var_-16, i32* nonnull %stack_var_-24, i32* nonnull @80), !insn.addr !3348
  ret void, !insn.addr !3349
}

define void @replace_current_thread_locale_nolock(i32 %ptd, i32 %new_locale_info) local_unnamed_addr {
dec_label_pc_44a511:
  %0 = add i32 %ptd, 76, !insn.addr !3350
  %1 = inttoptr i32 %0 to i32*, !insn.addr !3350
  %2 = load i32, i32* %1, align 4, !insn.addr !3350
  %3 = icmp eq i32 %2, 0, !insn.addr !3350
  br i1 %3, label %dec_label_pc_44a548, label %dec_label_pc_44a520, !insn.addr !3351

dec_label_pc_44a520:                              ; preds = %dec_label_pc_44a511
  %4 = call i32 @function_403a3f(i32 %2), !insn.addr !3352
  %5 = load i32, i32* %1, align 4, !insn.addr !3353
  %6 = load i32, i32* @__acrt_current_locale_data, align 4, !insn.addr !3354
  %7 = icmp eq i32 %5, %6, !insn.addr !3354
  %8 = icmp eq i32 %5, ptrtoint (i32* @__acrt_initial_locale_data to i32), !insn.addr !3355
  %or.cond = or i1 %8, %7
  br i1 %or.cond, label %dec_label_pc_44a548, label %dec_label_pc_44a53b, !insn.addr !3356

dec_label_pc_44a53b:                              ; preds = %dec_label_pc_44a520
  %9 = add i32 %5, 12, !insn.addr !3357
  %10 = inttoptr i32 %9 to i32*, !insn.addr !3357
  %11 = load i32, i32* %10, align 4, !insn.addr !3357
  %12 = icmp eq i32 %11, 0, !insn.addr !3357
  %13 = icmp eq i1 %12, false, !insn.addr !3358
  br i1 %13, label %dec_label_pc_44a548, label %dec_label_pc_44a541, !insn.addr !3358

dec_label_pc_44a541:                              ; preds = %dec_label_pc_44a53b
  %14 = call i32 @function_4047ff(i32 %5), !insn.addr !3359
  br label %dec_label_pc_44a548, !insn.addr !3360

dec_label_pc_44a548:                              ; preds = %dec_label_pc_44a541, %dec_label_pc_44a53b, %dec_label_pc_44a520, %dec_label_pc_44a511
  store i32 %new_locale_info, i32* %1, align 4, !insn.addr !3361
  %15 = icmp eq i32 %new_locale_info, 0, !insn.addr !3362
  br i1 %15, label %dec_label_pc_44a55a, label %dec_label_pc_44a553, !insn.addr !3363

dec_label_pc_44a553:                              ; preds = %dec_label_pc_44a548
  %16 = call i32 @function_4022c0(i32 %new_locale_info), !insn.addr !3364
  br label %dec_label_pc_44a55a, !insn.addr !3365

dec_label_pc_44a55a:                              ; preds = %dec_label_pc_44a553, %dec_label_pc_44a548
  ret void, !insn.addr !3366
}

define i32 @__acrt_getptd() local_unnamed_addr {
dec_label_pc_44a5c1:
  %esp.4.reg2mem = alloca i32, !insn.addr !3367
  %ebx.2.reg2mem = alloca i32, !insn.addr !3367
  %edi.0.reg2mem = alloca i32, !insn.addr !3367
  %esp.3.reg2mem = alloca i32, !insn.addr !3367
  %storemerge.reg2mem = alloca i32, !insn.addr !3367
  %esp.2.reg2mem = alloca i32, !insn.addr !3367
  %eax.0.reg2mem = alloca i32, !insn.addr !3367
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %0 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !3368
  %1 = call i32 @GetLastError(), !insn.addr !3369
  %2 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3370
  %3 = icmp eq i32 %2, -1, !insn.addr !3371
  store i32 -1, i32* %eax.0.reg2mem, !insn.addr !3372
  store i32 %0, i32* %esp.2.reg2mem, !insn.addr !3372
  br i1 %3, label %dec_label_pc_44a5f4, label %dec_label_pc_44a5d8, !insn.addr !3372

dec_label_pc_44a5d8:                              ; preds = %dec_label_pc_44a5c1
  store i32 %2, i32* %stack_var_-16, align 4, !insn.addr !3373
  %4 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !3373
  %5 = call i32 @"___acrt_FlsGetValue@4"(i32 %2), !insn.addr !3374
  %6 = icmp eq i32 %5, 0, !insn.addr !3375
  br i1 %6, label %dec_label_pc_44a5ef, label %dec_label_pc_44a5e4, !insn.addr !3376

dec_label_pc_44a5e4:                              ; preds = %dec_label_pc_44a5d8
  %7 = icmp eq i32 %5, -1, !insn.addr !3377
  %8 = icmp eq i1 %7, false, !insn.addr !3378
  store i32 %4, i32* %esp.3.reg2mem, !insn.addr !3378
  store i32 %5, i32* %edi.0.reg2mem, !insn.addr !3378
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !3378
  store i32 %4, i32* %esp.4.reg2mem, !insn.addr !3378
  br i1 %8, label %dec_label_pc_44a661, label %dec_label_pc_44a663, !insn.addr !3378

dec_label_pc_44a5ef:                              ; preds = %dec_label_pc_44a5d8
  %9 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3379
  store i32 %9, i32* %eax.0.reg2mem, !insn.addr !3379
  store i32 %4, i32* %esp.2.reg2mem, !insn.addr !3379
  br label %dec_label_pc_44a5f4, !insn.addr !3379

dec_label_pc_44a5f4:                              ; preds = %dec_label_pc_44a5ef, %dec_label_pc_44a5c1
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %10 = add i32 %esp.2.reload, -4, !insn.addr !3380
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3380
  store i32 -1, i32* %11, align 4, !insn.addr !3380
  %12 = add i32 %esp.2.reload, -8, !insn.addr !3381
  %13 = inttoptr i32 %12 to i32*, !insn.addr !3381
  store i32 %eax.0.reload, i32* %13, align 4, !insn.addr !3381
  %14 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3382
  %15 = icmp eq i32 %14, 0, !insn.addr !3383
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !3384
  store i32 %12, i32* %esp.4.reg2mem, !insn.addr !3384
  br i1 %15, label %dec_label_pc_44a663, label %dec_label_pc_44a600, !insn.addr !3384

dec_label_pc_44a600:                              ; preds = %dec_label_pc_44a5f4
  %16 = add i32 %esp.2.reload, -12, !insn.addr !3385
  %17 = inttoptr i32 %16 to i32*, !insn.addr !3385
  store i32 868, i32* %17, align 4, !insn.addr !3385
  %18 = add i32 %esp.2.reload, -16, !insn.addr !3386
  %19 = inttoptr i32 %18 to i32*, !insn.addr !3386
  store i32 1, i32* %19, align 4, !insn.addr !3386
  %20 = call i32* @_calloc_base(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3387
  %21 = icmp eq i32* %20, null, !insn.addr !3388
  %22 = icmp eq i1 %21, false, !insn.addr !3389
  br i1 %22, label %dec_label_pc_44a62b, label %dec_label_pc_44a614, !insn.addr !3389

dec_label_pc_44a614:                              ; preds = %dec_label_pc_44a600
  store i32 0, i32* %17, align 4, !insn.addr !3390
  %23 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3391
  store i32 %23, i32* %19, align 4, !insn.addr !3391
  %24 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3392
  %25 = add i32 %esp.2.reload, -20, !insn.addr !3393
  %26 = inttoptr i32 %25 to i32*, !insn.addr !3393
  store i32 0, i32* %26, align 4, !insn.addr !3393
  store i32 %25, i32* %storemerge.reg2mem, !insn.addr !3393
  br label %dec_label_pc_44a623, !insn.addr !3393

dec_label_pc_44a623:                              ; preds = %dec_label_pc_44a63b, %dec_label_pc_44a614
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  call void @_free_base(i32* nonnull @80), !insn.addr !3394
  %27 = add i32 %storemerge.reload, 4, !insn.addr !3395
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !3396
  store i32 %27, i32* %esp.4.reg2mem, !insn.addr !3396
  br label %dec_label_pc_44a663, !insn.addr !3396

dec_label_pc_44a62b:                              ; preds = %dec_label_pc_44a600
  %28 = ptrtoint i32* %20 to i32, !insn.addr !3387
  store i32 %28, i32* %17, align 4, !insn.addr !3397
  %29 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3398
  store i32 %29, i32* %19, align 4, !insn.addr !3398
  %30 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3399
  %31 = icmp eq i32 %30, 0, !insn.addr !3400
  %32 = icmp eq i1 %31, false, !insn.addr !3401
  %33 = add i32 %esp.2.reload, -20
  %34 = inttoptr i32 %33 to i32*
  br i1 %32, label %dec_label_pc_44a64c, label %dec_label_pc_44a63b, !insn.addr !3401

dec_label_pc_44a63b:                              ; preds = %dec_label_pc_44a62b
  store i32 0, i32* %34, align 4, !insn.addr !3402
  %35 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3403
  %36 = add i32 %esp.2.reload, -24, !insn.addr !3403
  %37 = inttoptr i32 %36 to i32*, !insn.addr !3403
  store i32 %35, i32* %37, align 4, !insn.addr !3403
  %38 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3404
  %39 = add i32 %esp.2.reload, -28, !insn.addr !3405
  %40 = inttoptr i32 %39 to i32*, !insn.addr !3405
  store i32 %28, i32* %40, align 4, !insn.addr !3405
  store i32 %39, i32* %storemerge.reg2mem, !insn.addr !3406
  br label %dec_label_pc_44a623, !insn.addr !3406

dec_label_pc_44a64c:                              ; preds = %dec_label_pc_44a62b
  store i32 ptrtoint (i32* @__acrt_current_locale_data to i32), i32* %34, align 4, !insn.addr !3407
  %41 = add i32 %esp.2.reload, -24, !insn.addr !3408
  %42 = inttoptr i32 %41 to i32*, !insn.addr !3408
  store i32 %28, i32* %42, align 4, !insn.addr !3408
  call void @construct_ptd(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3409
  %43 = add i32 %esp.2.reload, -28, !insn.addr !3410
  %44 = inttoptr i32 %43 to i32*, !insn.addr !3410
  store i32 0, i32* %44, align 4, !insn.addr !3410
  call void @_free_base(i32* nonnull @80), !insn.addr !3411
  store i32 %18, i32* %esp.3.reg2mem, !insn.addr !3412
  store i32 %28, i32* %edi.0.reg2mem, !insn.addr !3412
  br label %dec_label_pc_44a661, !insn.addr !3412

dec_label_pc_44a661:                              ; preds = %dec_label_pc_44a64c, %dec_label_pc_44a5e4
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  store i32 %edi.0.reload, i32* %ebx.2.reg2mem, !insn.addr !3413
  store i32 %esp.3.reload, i32* %esp.4.reg2mem, !insn.addr !3413
  br label %dec_label_pc_44a663, !insn.addr !3413

dec_label_pc_44a663:                              ; preds = %dec_label_pc_44a623, %dec_label_pc_44a5f4, %dec_label_pc_44a5e4, %dec_label_pc_44a661
  %esp.4.reload = load i32, i32* %esp.4.reg2mem
  %ebx.2.reload = load i32, i32* %ebx.2.reg2mem
  %45 = add i32 %esp.4.reload, -4, !insn.addr !3414
  %46 = inttoptr i32 %45 to i32*, !insn.addr !3414
  store i32 %1, i32* %46, align 4, !insn.addr !3414
  call void @SetLastError(i32 ptrtoint (i32* @80 to i32)), !insn.addr !3415
  %cond = icmp eq i32 %ebx.2.reload, 0
  br i1 %cond, label %dec_label_pc_44a678, label %dec_label_pc_44a672

dec_label_pc_44a672:                              ; preds = %dec_label_pc_44a663
  ret i32 %ebx.2.reload, !insn.addr !3416

dec_label_pc_44a678:                              ; preds = %dec_label_pc_44a663
  call void @abort(), !insn.addr !3417
  %47 = call i32 @__asm_int3(), !insn.addr !3418
  %48 = call i32 @__asm_int3(), !insn.addr !3419
  %49 = call i32 @__asm_int3(), !insn.addr !3420
  %50 = call i32 @__asm_int3(), !insn.addr !3421
  %51 = call i32 @__asm_int3(), !insn.addr !3422
  %52 = call i32 @__asm_int3(), !insn.addr !3423
  %53 = call i32 @__asm_int3(), !insn.addr !3424
  %54 = call i32 @__asm_int3(), !insn.addr !3425
  %55 = call i32 @__asm_int3(), !insn.addr !3426
  %56 = call i32 @__asm_int3(), !insn.addr !3427
  %57 = call i32 @__asm_int3(), !insn.addr !3428
  %58 = call i32 @__asm_int3(), !insn.addr !3429
  %59 = call i32 @__asm_int3(), !insn.addr !3430
  %60 = call i32 @__asm_int3(), !insn.addr !3431
  %61 = call i32 @__asm_int3(), !insn.addr !3432
  %62 = call i32 @__asm_int3(), !insn.addr !3433
  %63 = call i32 @__asm_int3(), !insn.addr !3434
  %64 = call i32 @__asm_int3(), !insn.addr !3435
  %65 = call i32 @__asm_int3(), !insn.addr !3436
  %66 = call i32 @__asm_int3(), !insn.addr !3437
  %67 = call i32 @__asm_int3(), !insn.addr !3438
  %68 = call i32 @__asm_int3(), !insn.addr !3439
  %69 = call i32 @__asm_int3(), !insn.addr !3440
  %70 = call i32 @__asm_int3(), !insn.addr !3441
  %71 = call i32 @__asm_int3(), !insn.addr !3442
  %72 = call i32 @__asm_int3(), !insn.addr !3443
  %73 = call i32 @__asm_int3(), !insn.addr !3444
  %74 = call i32 @__asm_int3(), !insn.addr !3445
  %75 = call i32 @__asm_int3(), !insn.addr !3446
  %76 = call i32 @__asm_int3(), !insn.addr !3447
  %77 = call i32 @__asm_int3(), !insn.addr !3448
  %78 = call i32 @__asm_int3(), !insn.addr !3449
  %79 = call i32 @__asm_int3(), !insn.addr !3450
  %80 = call i32 @__asm_int3(), !insn.addr !3451
  %81 = call i32 @__asm_int3(), !insn.addr !3452
  %82 = call i32 @__asm_int3(), !insn.addr !3453
  %83 = call i32 @__asm_int3(), !insn.addr !3454
  %84 = call i32 @__asm_int3(), !insn.addr !3455
  %85 = call i32 @__asm_int3(), !insn.addr !3456
  %86 = call i32 @__asm_int3(), !insn.addr !3457
  %87 = call i32 @__asm_int3(), !insn.addr !3458
  %88 = call i32 @__asm_int3(), !insn.addr !3459
  %89 = call i32 @__asm_int3(), !insn.addr !3460
  %90 = call i32 @__asm_int3(), !insn.addr !3461
  %91 = call i32 @__asm_int3(), !insn.addr !3462
  %92 = call i32 @__asm_int3(), !insn.addr !3463
  %93 = call i32 @__asm_int3(), !insn.addr !3464
  %94 = call i32 @__asm_int3(), !insn.addr !3465
  ret i32 %94, !insn.addr !3465
}

define i32 @__acrt_getptd_head() local_unnamed_addr {
dec_label_pc_44a6ad:
  %esi.01.reg2mem = alloca i32, !insn.addr !3466
  %esp.0.in.reg2mem = alloca i32*, !insn.addr !3466
  %eax.0.reg2mem = alloca i32, !insn.addr !3466
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %0 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3466
  %1 = icmp eq i32 %0, -1, !insn.addr !3467
  store i32 -1, i32* %eax.0.reg2mem, !insn.addr !3468
  store i32* %stack_var_-4, i32** %esp.0.in.reg2mem, !insn.addr !3468
  br i1 %1, label %dec_label_pc_44a6d0, label %dec_label_pc_44a6b8, !insn.addr !3468

dec_label_pc_44a6b8:                              ; preds = %dec_label_pc_44a6ad
  store i32 %0, i32* %stack_var_-8, align 4, !insn.addr !3469
  %2 = call i32 @"___acrt_FlsGetValue@4"(i32 %0), !insn.addr !3470
  store i32 %2, i32* %esi.01.reg2mem
  switch i32 %2, label %dec_label_pc_44a73d [
    i32 0, label %dec_label_pc_44a6cb
    i32 -1, label %dec_label_pc_44a741
  ]

dec_label_pc_44a6cb:                              ; preds = %dec_label_pc_44a6b8
  %3 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3471
  store i32 %3, i32* %eax.0.reg2mem, !insn.addr !3471
  store i32* %stack_var_-8, i32** %esp.0.in.reg2mem, !insn.addr !3471
  br label %dec_label_pc_44a6d0, !insn.addr !3471

dec_label_pc_44a6d0:                              ; preds = %dec_label_pc_44a6cb, %dec_label_pc_44a6ad
  %esp.0.in.reload = load i32*, i32** %esp.0.in.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %esp.0 = ptrtoint i32* %esp.0.in.reload to i32
  %4 = add i32 %esp.0, -4, !insn.addr !3472
  %5 = inttoptr i32 %4 to i32*, !insn.addr !3472
  store i32 -1, i32* %5, align 4, !insn.addr !3472
  %6 = add i32 %esp.0, -8, !insn.addr !3473
  %7 = inttoptr i32 %6 to i32*, !insn.addr !3473
  store i32 %eax.0.reload, i32* %7, align 4, !insn.addr !3473
  %8 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3474
  %9 = icmp eq i32 %8, 0, !insn.addr !3475
  br i1 %9, label %dec_label_pc_44a741, label %dec_label_pc_44a6dc, !insn.addr !3476

dec_label_pc_44a6dc:                              ; preds = %dec_label_pc_44a6d0
  %10 = add i32 %esp.0, -12, !insn.addr !3477
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3477
  store i32 868, i32* %11, align 4, !insn.addr !3477
  %12 = add i32 %esp.0, -16, !insn.addr !3478
  %13 = inttoptr i32 %12 to i32*, !insn.addr !3478
  store i32 1, i32* %13, align 4, !insn.addr !3478
  %14 = call i32* @_calloc_base(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3479
  %15 = ptrtoint i32* %14 to i32, !insn.addr !3479
  %16 = icmp eq i32* %14, null, !insn.addr !3480
  %17 = icmp eq i1 %16, false, !insn.addr !3481
  store i32 %15, i32* %11, align 4
  %18 = load i32, i32* @__acrt_flsindex, align 4
  store i32 %18, i32* %13, align 4
  %19 = call i32 @"___acrt_FlsSetValue@8"()
  br i1 %17, label %dec_label_pc_44a705, label %dec_label_pc_44a6f0, !insn.addr !3481

dec_label_pc_44a6f0:                              ; preds = %dec_label_pc_44a6dc
  %20 = add i32 %esp.0, -20, !insn.addr !3482
  %21 = inttoptr i32 %20 to i32*, !insn.addr !3482
  store i32 %15, i32* %21, align 4, !insn.addr !3482
  br label %dec_label_pc_44a6fd, !insn.addr !3482

dec_label_pc_44a6fd:                              ; preds = %dec_label_pc_44a715, %dec_label_pc_44a6f0
  call void @_free_base(i32* nonnull @80), !insn.addr !3483
  br label %dec_label_pc_44a741, !insn.addr !3484

dec_label_pc_44a705:                              ; preds = %dec_label_pc_44a6dc
  %22 = icmp eq i32 %19, 0, !insn.addr !3485
  %23 = icmp eq i1 %22, false, !insn.addr !3486
  %24 = add i32 %esp.0, -20
  %25 = inttoptr i32 %24 to i32*
  br i1 %23, label %dec_label_pc_44a739, label %dec_label_pc_44a715, !insn.addr !3486

dec_label_pc_44a715:                              ; preds = %dec_label_pc_44a705
  store i32 %19, i32* %25, align 4, !insn.addr !3487
  %26 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3488
  %27 = add i32 %esp.0, -24, !insn.addr !3488
  %28 = inttoptr i32 %27 to i32*, !insn.addr !3488
  store i32 %26, i32* %28, align 4, !insn.addr !3488
  %29 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3489
  %30 = add i32 %esp.0, -28, !insn.addr !3490
  %31 = inttoptr i32 %30 to i32*, !insn.addr !3490
  store i32 %15, i32* %31, align 4, !insn.addr !3490
  br label %dec_label_pc_44a6fd, !insn.addr !3491

dec_label_pc_44a739:                              ; preds = %dec_label_pc_44a705
  store i32 ptrtoint (i32* @__acrt_current_locale_data to i32), i32* %25, align 4, !insn.addr !3492
  %32 = add i32 %esp.0, -24, !insn.addr !3493
  %33 = inttoptr i32 %32 to i32*, !insn.addr !3493
  store i32 %15, i32* %33, align 4, !insn.addr !3493
  call void @construct_ptd(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3494
  %34 = add i32 %esp.0, -28, !insn.addr !3495
  %35 = inttoptr i32 %34 to i32*, !insn.addr !3495
  store i32 0, i32* %35, align 4, !insn.addr !3495
  call void @_free_base(i32* nonnull @80), !insn.addr !3496
  store i32 %15, i32* %esi.01.reg2mem
  br label %dec_label_pc_44a73d

dec_label_pc_44a73d:                              ; preds = %dec_label_pc_44a739, %dec_label_pc_44a6b8
  %esi.01.reload = load i32, i32* %esi.01.reg2mem
  ret i32 %esi.01.reload, !insn.addr !3497

dec_label_pc_44a741:                              ; preds = %dec_label_pc_44a6b8, %dec_label_pc_44a6fd, %dec_label_pc_44a6d0
  call void @abort(), !insn.addr !3498
  %36 = call i32 @__asm_int3(), !insn.addr !3499
  %37 = call i32 @__asm_int3(), !insn.addr !3500
  %38 = call i32 @__asm_int3(), !insn.addr !3501
  %39 = call i32 @__asm_int3(), !insn.addr !3502
  %40 = call i32 @__asm_int3(), !insn.addr !3503
  %41 = call i32 @__asm_int3(), !insn.addr !3504
  %42 = call i32 @__asm_int3(), !insn.addr !3505
  %43 = call i32 @__asm_int3(), !insn.addr !3506
  %44 = call i32 @__asm_int3(), !insn.addr !3507
  %45 = call i32 @__asm_int3(), !insn.addr !3508
  %46 = call i32 @__asm_int3(), !insn.addr !3509
  %47 = call i32 @__asm_int3(), !insn.addr !3510
  %48 = call i32 @__asm_int3(), !insn.addr !3511
  %49 = call i32 @__asm_int3(), !insn.addr !3512
  %50 = call i32 @__asm_int3(), !insn.addr !3513
  %51 = call i32 @__asm_int3(), !insn.addr !3514
  %52 = call i32 @__asm_int3(), !insn.addr !3515
  %53 = call i32 @__asm_int3(), !insn.addr !3516
  %54 = call i32 @__asm_int3(), !insn.addr !3517
  %55 = call i32 @__asm_int3(), !insn.addr !3518
  %56 = call i32 @__asm_int3(), !insn.addr !3519
  %57 = call i32 @__asm_int3(), !insn.addr !3520
  %58 = call i32 @__asm_int3(), !insn.addr !3521
  %59 = call i32 @__asm_int3(), !insn.addr !3522
  %60 = call i32 @__asm_int3(), !insn.addr !3523
  %61 = call i32 @__asm_int3(), !insn.addr !3524
  %62 = call i32 @__asm_int3(), !insn.addr !3525
  %63 = call i32 @__asm_int3(), !insn.addr !3526
  %64 = call i32 @__asm_int3(), !insn.addr !3527
  %65 = call i32 @__asm_int3(), !insn.addr !3528
  %66 = call i32 @__asm_int3(), !insn.addr !3529
  %67 = call i32 @__asm_int3(), !insn.addr !3530
  %68 = call i32 @__asm_int3(), !insn.addr !3531
  %69 = call i32 @__asm_int3(), !insn.addr !3532
  %70 = call i32 @__asm_int3(), !insn.addr !3533
  %71 = call i32 @__asm_int3(), !insn.addr !3534
  %72 = call i32 @__asm_int3(), !insn.addr !3535
  %73 = call i32 @__asm_int3(), !insn.addr !3536
  %74 = call i32 @__asm_int3(), !insn.addr !3537
  ret i32 %74, !insn.addr !3537
}

define i32 @__acrt_getptd_noexit() local_unnamed_addr {
dec_label_pc_44a76d:
  %esp.4.reg2mem = alloca i32, !insn.addr !3538
  %ebx.2.reg2mem = alloca i32, !insn.addr !3538
  %edi.0.reg2mem = alloca i32, !insn.addr !3538
  %esp.3.reg2mem = alloca i32, !insn.addr !3538
  %storemerge.reg2mem = alloca i32, !insn.addr !3538
  %esp.2.reg2mem = alloca i32, !insn.addr !3538
  %eax.0.reg2mem = alloca i32, !insn.addr !3538
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %0 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !3539
  %1 = call i32 @GetLastError(), !insn.addr !3540
  %2 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3541
  %3 = icmp eq i32 %2, -1, !insn.addr !3542
  store i32 -1, i32* %eax.0.reg2mem, !insn.addr !3543
  store i32 %0, i32* %esp.2.reg2mem, !insn.addr !3543
  br i1 %3, label %dec_label_pc_44a7a0, label %dec_label_pc_44a784, !insn.addr !3543

dec_label_pc_44a784:                              ; preds = %dec_label_pc_44a76d
  store i32 %2, i32* %stack_var_-16, align 4, !insn.addr !3544
  %4 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !3544
  %5 = call i32 @"___acrt_FlsGetValue@4"(i32 %2), !insn.addr !3545
  %6 = icmp eq i32 %5, 0, !insn.addr !3546
  br i1 %6, label %dec_label_pc_44a79b, label %dec_label_pc_44a790, !insn.addr !3547

dec_label_pc_44a790:                              ; preds = %dec_label_pc_44a784
  %7 = icmp eq i32 %5, -1, !insn.addr !3548
  %8 = icmp eq i1 %7, false, !insn.addr !3549
  store i32 %4, i32* %esp.3.reg2mem, !insn.addr !3549
  store i32 %5, i32* %edi.0.reg2mem, !insn.addr !3549
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !3549
  store i32 %4, i32* %esp.4.reg2mem, !insn.addr !3549
  br i1 %8, label %dec_label_pc_44a80d, label %dec_label_pc_44a80f, !insn.addr !3549

dec_label_pc_44a79b:                              ; preds = %dec_label_pc_44a784
  %9 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3550
  store i32 %9, i32* %eax.0.reg2mem, !insn.addr !3550
  store i32 %4, i32* %esp.2.reg2mem, !insn.addr !3550
  br label %dec_label_pc_44a7a0, !insn.addr !3550

dec_label_pc_44a7a0:                              ; preds = %dec_label_pc_44a79b, %dec_label_pc_44a76d
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %10 = add i32 %esp.2.reload, -4, !insn.addr !3551
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3551
  store i32 -1, i32* %11, align 4, !insn.addr !3551
  %12 = add i32 %esp.2.reload, -8, !insn.addr !3552
  %13 = inttoptr i32 %12 to i32*, !insn.addr !3552
  store i32 %eax.0.reload, i32* %13, align 4, !insn.addr !3552
  %14 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3553
  %15 = icmp eq i32 %14, 0, !insn.addr !3554
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !3555
  store i32 %12, i32* %esp.4.reg2mem, !insn.addr !3555
  br i1 %15, label %dec_label_pc_44a80f, label %dec_label_pc_44a7ac, !insn.addr !3555

dec_label_pc_44a7ac:                              ; preds = %dec_label_pc_44a7a0
  %16 = add i32 %esp.2.reload, -12, !insn.addr !3556
  %17 = inttoptr i32 %16 to i32*, !insn.addr !3556
  store i32 868, i32* %17, align 4, !insn.addr !3556
  %18 = add i32 %esp.2.reload, -16, !insn.addr !3557
  %19 = inttoptr i32 %18 to i32*, !insn.addr !3557
  store i32 1, i32* %19, align 4, !insn.addr !3557
  %20 = call i32* @_calloc_base(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3558
  %21 = icmp eq i32* %20, null, !insn.addr !3559
  %22 = icmp eq i1 %21, false, !insn.addr !3560
  br i1 %22, label %dec_label_pc_44a7d7, label %dec_label_pc_44a7c0, !insn.addr !3560

dec_label_pc_44a7c0:                              ; preds = %dec_label_pc_44a7ac
  store i32 0, i32* %17, align 4, !insn.addr !3561
  %23 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3562
  store i32 %23, i32* %19, align 4, !insn.addr !3562
  %24 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3563
  %25 = add i32 %esp.2.reload, -20, !insn.addr !3564
  %26 = inttoptr i32 %25 to i32*, !insn.addr !3564
  store i32 0, i32* %26, align 4, !insn.addr !3564
  store i32 %25, i32* %storemerge.reg2mem, !insn.addr !3564
  br label %dec_label_pc_44a7cf, !insn.addr !3564

dec_label_pc_44a7cf:                              ; preds = %dec_label_pc_44a7e7, %dec_label_pc_44a7c0
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  call void @_free_base(i32* nonnull @80), !insn.addr !3565
  %27 = add i32 %storemerge.reload, 4, !insn.addr !3566
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !3567
  store i32 %27, i32* %esp.4.reg2mem, !insn.addr !3567
  br label %dec_label_pc_44a80f, !insn.addr !3567

dec_label_pc_44a7d7:                              ; preds = %dec_label_pc_44a7ac
  %28 = ptrtoint i32* %20 to i32, !insn.addr !3558
  store i32 %28, i32* %17, align 4, !insn.addr !3568
  %29 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3569
  store i32 %29, i32* %19, align 4, !insn.addr !3569
  %30 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3570
  %31 = icmp eq i32 %30, 0, !insn.addr !3571
  %32 = icmp eq i1 %31, false, !insn.addr !3572
  %33 = add i32 %esp.2.reload, -20
  %34 = inttoptr i32 %33 to i32*
  br i1 %32, label %dec_label_pc_44a7f8, label %dec_label_pc_44a7e7, !insn.addr !3572

dec_label_pc_44a7e7:                              ; preds = %dec_label_pc_44a7d7
  store i32 0, i32* %34, align 4, !insn.addr !3573
  %35 = load i32, i32* @__acrt_flsindex, align 4, !insn.addr !3574
  %36 = add i32 %esp.2.reload, -24, !insn.addr !3574
  %37 = inttoptr i32 %36 to i32*, !insn.addr !3574
  store i32 %35, i32* %37, align 4, !insn.addr !3574
  %38 = call i32 @"___acrt_FlsSetValue@8"(), !insn.addr !3575
  %39 = add i32 %esp.2.reload, -28, !insn.addr !3576
  %40 = inttoptr i32 %39 to i32*, !insn.addr !3576
  store i32 %28, i32* %40, align 4, !insn.addr !3576
  store i32 %39, i32* %storemerge.reg2mem, !insn.addr !3577
  br label %dec_label_pc_44a7cf, !insn.addr !3577

dec_label_pc_44a7f8:                              ; preds = %dec_label_pc_44a7d7
  store i32 ptrtoint (i32* @__acrt_current_locale_data to i32), i32* %34, align 4, !insn.addr !3578
  %41 = add i32 %esp.2.reload, -24, !insn.addr !3579
  %42 = inttoptr i32 %41 to i32*, !insn.addr !3579
  store i32 %28, i32* %42, align 4, !insn.addr !3579
  call void @construct_ptd(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3580
  %43 = add i32 %esp.2.reload, -28, !insn.addr !3581
  %44 = inttoptr i32 %43 to i32*, !insn.addr !3581
  store i32 0, i32* %44, align 4, !insn.addr !3581
  call void @_free_base(i32* nonnull @80), !insn.addr !3582
  store i32 %18, i32* %esp.3.reg2mem, !insn.addr !3583
  store i32 %28, i32* %edi.0.reg2mem, !insn.addr !3583
  br label %dec_label_pc_44a80d, !insn.addr !3583

dec_label_pc_44a80d:                              ; preds = %dec_label_pc_44a7f8, %dec_label_pc_44a790
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  store i32 %edi.0.reload, i32* %ebx.2.reg2mem, !insn.addr !3584
  store i32 %esp.3.reload, i32* %esp.4.reg2mem, !insn.addr !3584
  br label %dec_label_pc_44a80f, !insn.addr !3584

dec_label_pc_44a80f:                              ; preds = %dec_label_pc_44a7cf, %dec_label_pc_44a7a0, %dec_label_pc_44a790, %dec_label_pc_44a80d
  %esp.4.reload = load i32, i32* %esp.4.reg2mem
  %ebx.2.reload = load i32, i32* %ebx.2.reg2mem
  %45 = add i32 %esp.4.reload, -4, !insn.addr !3585
  %46 = inttoptr i32 %45 to i32*, !insn.addr !3585
  store i32 %1, i32* %46, align 4, !insn.addr !3585
  call void @SetLastError(i32 ptrtoint (i32* @80 to i32)), !insn.addr !3586
  ret i32 %ebx.2.reload, !insn.addr !3587
}

declare void @__acrt_update_locale_info(i32, i32) local_unnamed_addr

declare void @__acrt_update_multibyte_info(i32, %__crt_multibyte_data**) local_unnamed_addr

define i32 @__acrt_fp_classify(double* %value) local_unnamed_addr {
dec_label_pc_44a925:
  %eax.0.reg2mem = alloca i32, !insn.addr !3588
  %0 = ptrtoint double* %value to i32
  %1 = add i32 %0, 4, !insn.addr !3589
  %2 = inttoptr i32 %1 to i32*, !insn.addr !3589
  %3 = load i32, i32* %2, align 4, !insn.addr !3589
  %4 = and i32 %3, 2146435072, !insn.addr !3590
  %5 = icmp eq i32 %4, 2146435072, !insn.addr !3591
  %6 = icmp eq i1 %5, false, !insn.addr !3592
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !3592
  br i1 %6, label %dec_label_pc_44a983, label %dec_label_pc_44a946, !insn.addr !3592

dec_label_pc_44a946:                              ; preds = %dec_label_pc_44a925
  %7 = bitcast double* %value to i32*, !insn.addr !3593
  %8 = load i32, i32* %7, align 4, !insn.addr !3593
  %9 = and i32 %3, 1048575, !insn.addr !3594
  %10 = or i32 %9, %8, !insn.addr !3595
  %11 = icmp eq i32 %10, 0, !insn.addr !3595
  %12 = icmp eq i1 %11, false, !insn.addr !3596
  br i1 %12, label %dec_label_pc_44a957, label %dec_label_pc_44a954, !insn.addr !3596

dec_label_pc_44a954:                              ; preds = %dec_label_pc_44a946
  %13 = add i32 %10, 1, !insn.addr !3597
  store i32 %13, i32* %eax.0.reg2mem, !insn.addr !3598
  br label %dec_label_pc_44a983, !insn.addr !3598

dec_label_pc_44a957:                              ; preds = %dec_label_pc_44a946
  %14 = icmp sgt i32 %3, 0, !insn.addr !3599
  br i1 %14, label %dec_label_pc_44a973, label %dec_label_pc_44a960, !insn.addr !3599

dec_label_pc_44a960:                              ; preds = %dec_label_pc_44a957
  %15 = icmp eq i32 %3, 0, !insn.addr !3600
  %16 = icmp eq i32 %8, 0, !insn.addr !3601
  %17 = icmp eq i32 %9, 524288, !insn.addr !3602
  %18 = icmp eq i1 %16, %17
  %19 = icmp ne i1 %18, true
  %20 = or i1 %15, %19
  store i32 4, i32* %eax.0.reg2mem, !insn.addr !3600
  br i1 %20, label %dec_label_pc_44a973, label %dec_label_pc_44a983, !insn.addr !3600

dec_label_pc_44a973:                              ; preds = %dec_label_pc_44a960, %dec_label_pc_44a957
  %21 = and i32 %3, 524288, !insn.addr !3603
  %22 = icmp eq i32 %21, 0, !insn.addr !3604
  %. = select i1 %22, i32 3, i32 2
  store i32 %., i32* %eax.0.reg2mem, !insn.addr !3605
  br label %dec_label_pc_44a983, !insn.addr !3605

dec_label_pc_44a983:                              ; preds = %dec_label_pc_44a925, %dec_label_pc_44a973, %dec_label_pc_44a960, %dec_label_pc_44a954
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !3606
}

define i32 @fp_format_a(double* %argument, i8* %result_buffer, i32 %result_buffer_count, i8* %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i1 %capitals, i32 %min_exponent_digits, i32 %locale) local_unnamed_addr {
dec_label_pc_44a9be:
  %edi.7.reg2mem = alloca i32, !insn.addr !3607
  %edi.6.reg2mem = alloca i32, !insn.addr !3607
  %ebx.370.reg2mem = alloca i32, !insn.addr !3607
  %esp.672.reg2mem = alloca i32, !insn.addr !3607
  %esi.874.reg2mem = alloca i32, !insn.addr !3607
  %edi.576.reg2mem = alloca i32, !insn.addr !3607
  %edi.57577.reg2mem = alloca i32, !insn.addr !3607
  %esi.87378.reg2mem = alloca i32, !insn.addr !3607
  %esp.67179.reg2mem = alloca i32, !insn.addr !3607
  %ebx.36980.reg2mem = alloca i32, !insn.addr !3607
  %ebx.222.reg2mem = alloca i32, !insn.addr !3607
  %esp.523.reg2mem = alloca i32, !insn.addr !3607
  %esi.724.reg2mem = alloca i32, !insn.addr !3607
  %edi.425.reg2mem = alloca i32, !insn.addr !3607
  %.pre-phi60.reg2mem = alloca i32*, !insn.addr !3607
  %.pre-phi62.reg2mem = alloca i8*, !insn.addr !3607
  %esi.6.reg2mem = alloca i32, !insn.addr !3607
  %ebx.1.reg2mem = alloca i8, !insn.addr !3607
  %ecx.3.reg2mem = alloca i32, !insn.addr !3607
  %.pre-phi66.reg2mem = alloca i32*, !insn.addr !3607
  %stack_var_-16.2.reg2mem = alloca i32, !insn.addr !3607
  %edi.3.reg2mem = alloca i32, !insn.addr !3607
  %stack_var_-16.1.reg2mem = alloca i32, !insn.addr !3607
  %.lcssa26.reg2mem = alloca i8, !insn.addr !3607
  %.lcssa27.reg2mem = alloca i8*, !insn.addr !3607
  %eax.5.lcssa.reg2mem = alloca i32, !insn.addr !3607
  %eax.5.in.lcssa.reg2mem = alloca i32, !insn.addr !3607
  %eax.530.reg2mem = alloca i32, !insn.addr !3607
  %.reg2mem = alloca i8*, !insn.addr !3607
  %esi.267.reg2mem = alloca i32, !insn.addr !3607
  %edi.268.reg2mem = alloca i32, !insn.addr !3607
  %stack_var_-12.037.reg2mem = alloca i32, !insn.addr !3607
  %esi.138.reg2mem = alloca i32, !insn.addr !3607
  %edi.139.reg2mem = alloca i32, !insn.addr !3607
  %storemerge12.reg2mem = alloca i32, !insn.addr !3607
  %ecx.1.reg2mem = alloca i32, !insn.addr !3607
  %stack_var_-20.1.reg2mem = alloca i32, !insn.addr !3607
  %stack_var_-20.0.reg2mem = alloca i32, !insn.addr !3607
  %esi.0.reg2mem = alloca i32, !insn.addr !3607
  %.pre-phi.reg2mem = alloca i32, !insn.addr !3607
  %0 = call i8 @__decompiler_undefined_function_7()
  %1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-76 = alloca i32, align 4
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = icmp slt i32 %precision, 0, !insn.addr !3608
  %4 = icmp eq i1 %3, false, !insn.addr !3609
  %spec.select = select i1 %4, i32 %precision, i32 0
  store i32 %locale, i32* %stack_var_-76, align 4, !insn.addr !3610
  store i8 0, i8* %result_buffer, align 1, !insn.addr !3611
  %5 = call i32 @function_403d78(i32 %locale), !insn.addr !3612
  %6 = add i32 %spec.select, 11, !insn.addr !3613
  %7 = icmp ult i32 %6, %result_buffer_count
  br i1 %7, label %dec_label_pc_44aa00, label %dec_label_pc_44a9ec, !insn.addr !3614

dec_label_pc_44a9ec:                              ; preds = %dec_label_pc_44a9be
  %8 = call i32* @_errno(), !insn.addr !3615
  store i32 34, i32* %8, align 4, !insn.addr !3616
  call void @_invalid_parameter_noinfo(), !insn.addr !3617
  store i32 34, i32* %edi.7.reg2mem, !insn.addr !3618
  br label %dec_label_pc_44acc0, !insn.addr !3618

dec_label_pc_44aa00:                              ; preds = %dec_label_pc_44a9be
  %9 = ptrtoint double* %argument to i32, !insn.addr !3619
  %10 = add i32 %9, 4, !insn.addr !3620
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3620
  %12 = load i32, i32* %11, align 4, !insn.addr !3620
  %13 = and i32 %12, 2146435072
  %14 = icmp eq i32 %13, 2146435072, !insn.addr !3621
  %15 = icmp eq i1 %14, false, !insn.addr !3622
  br i1 %15, label %dec_label_pc_44aa69, label %dec_label_pc_44aa19, !insn.addr !3622

dec_label_pc_44aa19:                              ; preds = %dec_label_pc_44aa00
  %16 = call i32 @fp_format_e(double* %argument, i8* nonnull %result_buffer, i32 %result_buffer_count, i8* %scratch_buffer, i32 %scratch_buffer_count, i32 %spec.select, i1 false, i32 %min_exponent_digits, i32 0), !insn.addr !3623
  %17 = icmp eq i32 %16, 0, !insn.addr !3624
  br i1 %17, label %dec_label_pc_44aa42, label %dec_label_pc_44aa3a, !insn.addr !3625

dec_label_pc_44aa3a:                              ; preds = %dec_label_pc_44aa19
  store i8 0, i8* %result_buffer, align 1, !insn.addr !3626
  store i32 %16, i32* %edi.7.reg2mem, !insn.addr !3627
  br label %dec_label_pc_44acc0, !insn.addr !3627

dec_label_pc_44aa42:                              ; preds = %dec_label_pc_44aa19
  %18 = call i32 @function_40174e(), !insn.addr !3628
  %19 = icmp eq i32 %18, 0, !insn.addr !3629
  store i32 0, i32* %edi.7.reg2mem, !insn.addr !3630
  br i1 %19, label %dec_label_pc_44acc0, label %dec_label_pc_44aa50, !insn.addr !3630

dec_label_pc_44aa50:                              ; preds = %dec_label_pc_44aa42
  %20 = select i1 %capitals, i8 16, i8 112, !insn.addr !3631
  %21 = inttoptr i32 %18 to i8*, !insn.addr !3631
  store i8 %20, i8* %21, align 1, !insn.addr !3631
  %22 = add i32 %18, 3, !insn.addr !3632
  %23 = inttoptr i32 %22 to i8*, !insn.addr !3632
  store i8 0, i8* %23, align 1, !insn.addr !3632
  store i32 0, i32* %edi.7.reg2mem, !insn.addr !3632
  br label %dec_label_pc_44acc0, !insn.addr !3632

dec_label_pc_44aa69:                              ; preds = %dec_label_pc_44aa00
  %24 = ptrtoint i8* %result_buffer to i32, !insn.addr !3633
  %25 = icmp slt i32 %12, 0, !insn.addr !3634
  store i32 %13, i32* %.pre-phi.reg2mem, !insn.addr !3635
  store i32 %24, i32* %esi.0.reg2mem, !insn.addr !3635
  br i1 %25, label %dec_label_pc_44aa75, label %dec_label_pc_44aa7c, !insn.addr !3635

dec_label_pc_44aa75:                              ; preds = %dec_label_pc_44aa69
  store i8 45, i8* %result_buffer, align 1, !insn.addr !3636
  %26 = add i32 %24, 1, !insn.addr !3637
  %27 = load i32, i32* %11, align 4, !insn.addr !3638
  %.pre = and i32 %27, 2146435072, !insn.addr !3639
  store i32 %.pre, i32* %.pre-phi.reg2mem, !insn.addr !3638
  store i32 %26, i32* %esi.0.reg2mem, !insn.addr !3638
  br label %dec_label_pc_44aa7c, !insn.addr !3638

dec_label_pc_44aa7c:                              ; preds = %dec_label_pc_44aa69, %dec_label_pc_44aa75
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %.pre-phi.reload = load i32, i32* %.pre-phi.reg2mem
  %28 = icmp eq i32 %.pre-phi.reload, 0, !insn.addr !3640
  %29 = icmp eq i1 %28, false, !insn.addr !3641
  %30 = inttoptr i32 %esi.0.reload to i8*
  br i1 %29, label %dec_label_pc_44aaca, label %dec_label_pc_44aaac, !insn.addr !3641

dec_label_pc_44aaac:                              ; preds = %dec_label_pc_44aa7c
  store i8 48, i8* %30, align 1, !insn.addr !3642
  %31 = load i32, i32* %11, align 4, !insn.addr !3643
  %32 = bitcast double* %argument to i32*, !insn.addr !3644
  %33 = load i32, i32* %32, align 4, !insn.addr !3644
  %34 = and i32 %31, 1048575, !insn.addr !3645
  %35 = or i32 %33, %34, !insn.addr !3646
  %36 = icmp eq i32 %35, 0, !insn.addr !3646
  %37 = icmp eq i1 %36, false, !insn.addr !3647
  store i32 1022, i32* %stack_var_-20.0.reg2mem, !insn.addr !3647
  store i32 %35, i32* %stack_var_-20.1.reg2mem, !insn.addr !3647
  store i32 %35, i32* %ecx.1.reg2mem, !insn.addr !3647
  br i1 %37, label %dec_label_pc_44aacd, label %dec_label_pc_44aacf, !insn.addr !3647

dec_label_pc_44aaca:                              ; preds = %dec_label_pc_44aa7c
  store i8 49, i8* %30, align 1, !insn.addr !3648
  store i32 1023, i32* %stack_var_-20.0.reg2mem, !insn.addr !3648
  br label %dec_label_pc_44aacd, !insn.addr !3648

dec_label_pc_44aacd:                              ; preds = %dec_label_pc_44aaac, %dec_label_pc_44aaca
  %stack_var_-20.0.reload = load i32, i32* %stack_var_-20.0.reg2mem
  store i32 %stack_var_-20.0.reload, i32* %stack_var_-20.1.reg2mem, !insn.addr !3649
  store i32 0, i32* %ecx.1.reg2mem, !insn.addr !3649
  br label %dec_label_pc_44aacf, !insn.addr !3649

dec_label_pc_44aacf:                              ; preds = %dec_label_pc_44aaac, %dec_label_pc_44aacd
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %stack_var_-20.1.reload = load i32, i32* %stack_var_-20.1.reg2mem
  %38 = icmp eq i32 %spec.select, 0, !insn.addr !3650
  %39 = icmp eq i1 %38, false, !insn.addr !3651
  br i1 %39, label %dec_label_pc_44aadd, label %dec_label_pc_44aad9, !insn.addr !3651

dec_label_pc_44aad9:                              ; preds = %dec_label_pc_44aacf
  %40 = and i32 %ecx.1.reload, 255, !insn.addr !3652
  store i32 %40, i32* %storemerge12.reg2mem, !insn.addr !3653
  br label %dec_label_pc_44aaea, !insn.addr !3653

dec_label_pc_44aadd:                              ; preds = %dec_label_pc_44aacf
  %41 = add i32 %1, 136, !insn.addr !3654
  %42 = inttoptr i32 %41 to i32*, !insn.addr !3654
  %43 = load i32, i32* %42, align 4, !insn.addr !3654
  %44 = inttoptr i32 %43 to i32*, !insn.addr !3655
  %45 = load i32, i32* %44, align 4, !insn.addr !3655
  %46 = inttoptr i32 %45 to i8*, !insn.addr !3656
  %47 = load i8, i8* %46, align 1, !insn.addr !3656
  %48 = zext i8 %47 to i32, !insn.addr !3656
  store i32 %48, i32* %storemerge12.reg2mem, !insn.addr !3656
  br label %dec_label_pc_44aaea, !insn.addr !3656

dec_label_pc_44aaea:                              ; preds = %dec_label_pc_44aadd, %dec_label_pc_44aad9
  %49 = add i32 %esi.0.reload, 1, !insn.addr !3657
  %50 = sext i1 %capitals to i8, !insn.addr !3658
  %51 = mul i8 %50, 32
  %52 = ptrtoint i32* %stack_var_-76 to i32, !insn.addr !3659
  %53 = add i32 %esi.0.reload, 2, !insn.addr !3660
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %54 = trunc i32 %storemerge12.reload to i8, !insn.addr !3661
  %55 = inttoptr i32 %49 to i8*, !insn.addr !3661
  store i8 %54, i8* %55, align 1, !insn.addr !3661
  %56 = load i32, i32* %11, align 4, !insn.addr !3662
  %57 = and i32 %56, 1048575, !insn.addr !3663
  %58 = icmp eq i32 %57, 0, !insn.addr !3663
  br i1 %58, label %dec_label_pc_44aaf9, label %dec_label_pc_44ab01, !insn.addr !3664

dec_label_pc_44aaf9:                              ; preds = %dec_label_pc_44aaea
  %59 = bitcast double* %argument to i32*, !insn.addr !3665
  %60 = load i32, i32* %59, align 4, !insn.addr !3665
  %61 = icmp ugt i32 %60, %ecx.1.reload
  store i32 %53, i32* %stack_var_-16.1.reg2mem, !insn.addr !3666
  store i32 %spec.select, i32* %edi.3.reg2mem, !insn.addr !3666
  br i1 %61, label %dec_label_pc_44ab01, label %dec_label_pc_44abc5, !insn.addr !3666

dec_label_pc_44ab01:                              ; preds = %dec_label_pc_44aaf9, %dec_label_pc_44aaea
  %62 = xor i8 %51, 39, !insn.addr !3667
  %63 = icmp slt i32 %spec.select, 1
  store i32 %spec.select, i32* %edi.268.reg2mem, !insn.addr !3668
  store i32 %53, i32* %esi.267.reg2mem, !insn.addr !3668
  br i1 %63, label %dec_label_pc_44ab70, label %dec_label_pc_44ab18.lr.ph, !insn.addr !3668

dec_label_pc_44ab18.lr.ph:                        ; preds = %dec_label_pc_44ab01
  %64 = add i32 %52, -4
  %65 = inttoptr i32 %64 to i32*
  %66 = zext i8 %62 to i32
  store i32 %precision, i32* %edi.139.reg2mem
  store i32 %53, i32* %esi.138.reg2mem
  store i32 48, i32* %stack_var_-12.037.reg2mem
  br label %dec_label_pc_44ab18

dec_label_pc_44ab18:                              ; preds = %dec_label_pc_44ab18, %dec_label_pc_44ab18.lr.ph
  %stack_var_-12.037.reload = load i32, i32* %stack_var_-12.037.reg2mem
  %esi.138.reload = load i32, i32* %esi.138.reg2mem
  %edi.139.reload = load i32, i32* %edi.139.reg2mem
  %67 = call i32 @function_401730(), !insn.addr !3669
  store i32 48, i32* %65, align 4, !insn.addr !3670
  %68 = add i32 %67, 48, !insn.addr !3671
  %69 = and i32 %68, 65534, !insn.addr !3671
  %70 = icmp ult i32 %69, 58
  %71 = select i1 %70, i32 0, i32 %66
  %eax.3 = add i32 %71, %68
  %72 = trunc i32 %eax.3 to i8, !insn.addr !3672
  %73 = inttoptr i32 %esi.138.reload to i8*, !insn.addr !3672
  store i8 %72, i8* %73, align 1, !insn.addr !3672
  %74 = add i32 %esi.138.reload, 1, !insn.addr !3673
  %sext = mul i32 %stack_var_-12.037.reload, 65536
  %75 = sdiv i32 %sext, 65536, !insn.addr !3674
  %76 = add nsw i32 %75, -4, !insn.addr !3675
  %77 = add nsw i32 %edi.139.reload, -1, !insn.addr !3676
  %78 = trunc i32 %76 to i16, !insn.addr !3677
  %79 = icmp slt i16 %78, 0, !insn.addr !3678
  %80 = icmp slt i32 %edi.139.reload, 2
  %or.cond = or i1 %80, %79
  store i32 %77, i32* %edi.139.reg2mem, !insn.addr !3679
  store i32 %74, i32* %esi.138.reg2mem, !insn.addr !3679
  store i32 %76, i32* %stack_var_-12.037.reg2mem, !insn.addr !3679
  br i1 %or.cond, label %dec_label_pc_44ab68, label %dec_label_pc_44ab18, !insn.addr !3679

dec_label_pc_44ab68:                              ; preds = %dec_label_pc_44ab18
  store i32 %77, i32* %edi.268.reg2mem, !insn.addr !3680
  store i32 %74, i32* %esi.267.reg2mem, !insn.addr !3680
  store i32 %74, i32* %stack_var_-16.1.reg2mem, !insn.addr !3680
  store i32 %77, i32* %edi.3.reg2mem, !insn.addr !3680
  br i1 %79, label %dec_label_pc_44abc5, label %dec_label_pc_44ab70, !insn.addr !3680

dec_label_pc_44ab70:                              ; preds = %dec_label_pc_44ab01, %dec_label_pc_44ab68
  %esi.267.reload = load i32, i32* %esi.267.reg2mem
  %edi.268.reload = load i32, i32* %edi.268.reg2mem
  %81 = call i32 @function_401730(), !insn.addr !3681
  %82 = trunc i32 %81 to i16, !insn.addr !3682
  %83 = icmp ult i16 %82, 9
  store i32 %esi.267.reload, i32* %stack_var_-16.1.reg2mem, !insn.addr !3683
  store i32 %edi.268.reload, i32* %edi.3.reg2mem, !insn.addr !3683
  br i1 %83, label %dec_label_pc_44abc5, label %dec_label_pc_44ab90, !insn.addr !3683

dec_label_pc_44ab90:                              ; preds = %dec_label_pc_44ab70
  %84 = add i32 %52, -4, !insn.addr !3684
  %85 = inttoptr i32 %84 to i32*, !insn.addr !3684
  store i32 48, i32* %85, align 4, !insn.addr !3684
  %eax.528 = add i32 %esi.267.reload, -1
  %86 = inttoptr i32 %eax.528 to i8*, !insn.addr !3685
  %87 = load i8, i8* %86, align 1, !insn.addr !3685
  %88 = icmp ne i8 %87, 102, !insn.addr !3686
  %89 = icmp eq i8 %87, 70, !insn.addr !3687
  %90 = icmp eq i1 %89, false, !insn.addr !3688
  %or.cond1729 = icmp eq i1 %88, %90
  store i8* %86, i8** %.reg2mem, !insn.addr !3689
  store i32 %eax.528, i32* %eax.530.reg2mem, !insn.addr !3689
  store i32 %esi.267.reload, i32* %eax.5.in.lcssa.reg2mem, !insn.addr !3689
  store i32 %eax.528, i32* %eax.5.lcssa.reg2mem, !insn.addr !3689
  store i8* %86, i8** %.lcssa27.reg2mem, !insn.addr !3689
  store i8 %87, i8* %.lcssa26.reg2mem, !insn.addr !3689
  br i1 %or.cond1729, label %dec_label_pc_44aba7, label %dec_label_pc_44aba2, !insn.addr !3689

dec_label_pc_44aba2:                              ; preds = %dec_label_pc_44ab90, %dec_label_pc_44aba2
  %eax.530.reload = load i32, i32* %eax.530.reg2mem
  %.reload = load i8*, i8** %.reg2mem
  store i8 48, i8* %.reload, align 1, !insn.addr !3690
  %eax.5 = add i32 %eax.530.reload, -1
  %91 = inttoptr i32 %eax.5 to i8*
  %92 = load i8, i8* %91, align 1, !insn.addr !3685
  %93 = icmp ne i8 %92, 102, !insn.addr !3686
  %94 = icmp eq i8 %92, 70, !insn.addr !3687
  %95 = icmp eq i1 %94, false, !insn.addr !3688
  %or.cond17 = icmp eq i1 %93, %95
  store i8* %91, i8** %.reg2mem, !insn.addr !3689
  store i32 %eax.5, i32* %eax.530.reg2mem, !insn.addr !3689
  store i32 %eax.530.reload, i32* %eax.5.in.lcssa.reg2mem, !insn.addr !3689
  store i32 %eax.5, i32* %eax.5.lcssa.reg2mem, !insn.addr !3689
  store i8* %91, i8** %.lcssa27.reg2mem, !insn.addr !3689
  store i8 %92, i8* %.lcssa26.reg2mem, !insn.addr !3689
  br i1 %or.cond17, label %dec_label_pc_44aba7, label %dec_label_pc_44aba2, !insn.addr !3689

dec_label_pc_44aba7:                              ; preds = %dec_label_pc_44aba2, %dec_label_pc_44ab90
  %eax.5.lcssa.reload = load i32, i32* %eax.5.lcssa.reg2mem
  %96 = icmp eq i32 %eax.5.lcssa.reload, %49, !insn.addr !3691
  br i1 %96, label %dec_label_pc_44abc2, label %dec_label_pc_44abaf, !insn.addr !3692

dec_label_pc_44abaf:                              ; preds = %dec_label_pc_44aba7
  %.lcssa26.reload = load i8, i8* %.lcssa26.reg2mem
  %.lcssa27.reload = load i8*, i8** %.lcssa27.reg2mem
  %97 = icmp eq i8 %.lcssa26.reload, 57, !insn.addr !3693
  %98 = icmp eq i1 %97, false, !insn.addr !3694
  %99 = add i8 %.lcssa26.reload, 1
  %100 = add nsw i8 %62, 58
  %storemerge = select i1 %98, i8 %99, i8 %100
  store i8 %storemerge, i8* %.lcssa27.reload, align 1, !insn.addr !3695
  store i32 %esi.267.reload, i32* %stack_var_-16.1.reg2mem, !insn.addr !3696
  store i32 %edi.268.reload, i32* %edi.3.reg2mem, !insn.addr !3696
  br label %dec_label_pc_44abc5, !insn.addr !3696

dec_label_pc_44abc2:                              ; preds = %dec_label_pc_44aba7
  %eax.5.in.lcssa.reload = load i32, i32* %eax.5.in.lcssa.reg2mem
  %101 = add i32 %eax.5.in.lcssa.reload, -2, !insn.addr !3697
  %102 = inttoptr i32 %101 to i8*, !insn.addr !3697
  %103 = load i8, i8* %102, align 1, !insn.addr !3697
  %104 = add i8 %103, 1, !insn.addr !3697
  store i8 %104, i8* %102, align 1, !insn.addr !3697
  store i32 %esi.267.reload, i32* %stack_var_-16.1.reg2mem, !insn.addr !3697
  store i32 %edi.268.reload, i32* %edi.3.reg2mem, !insn.addr !3697
  br label %dec_label_pc_44abc5, !insn.addr !3697

dec_label_pc_44abc5:                              ; preds = %dec_label_pc_44aaf9, %dec_label_pc_44abc2, %dec_label_pc_44abaf, %dec_label_pc_44ab70, %dec_label_pc_44ab68
  %edi.3.reload = load i32, i32* %edi.3.reg2mem
  %stack_var_-16.1.reload = load i32, i32* %stack_var_-16.1.reg2mem
  %105 = icmp slt i32 %edi.3.reload, 1
  store i32 %stack_var_-16.1.reload, i32* %stack_var_-16.2.reg2mem, !insn.addr !3698
  br i1 %105, label %dec_label_pc_44abdc, label %dec_label_pc_44abc9, !insn.addr !3698

dec_label_pc_44abc9:                              ; preds = %dec_label_pc_44abc5
  %106 = add i32 %52, -4, !insn.addr !3699
  %107 = inttoptr i32 %106 to i32*, !insn.addr !3699
  store i32 %edi.3.reload, i32* %107, align 4, !insn.addr !3699
  %108 = add i32 %52, -8, !insn.addr !3700
  %109 = inttoptr i32 %108 to i32*, !insn.addr !3700
  store i32 48, i32* %109, align 4, !insn.addr !3701
  %110 = add i32 %52, -12, !insn.addr !3702
  %111 = inttoptr i32 %110 to i32*, !insn.addr !3702
  store i32 %stack_var_-16.1.reload, i32* %111, align 4, !insn.addr !3702
  call void @memset(i8* bitcast (i32* @80 to i8*), i8 ptrtoint (i32* @80 to i8), i32 ptrtoint (i32* @80 to i32)), !insn.addr !3703
  %112 = add i32 %edi.3.reload, %stack_var_-16.1.reload, !insn.addr !3704
  store i32 %112, i32* %stack_var_-16.2.reg2mem, !insn.addr !3705
  br label %dec_label_pc_44abdc, !insn.addr !3705

dec_label_pc_44abdc:                              ; preds = %dec_label_pc_44abc9, %dec_label_pc_44abc5
  %stack_var_-16.2.reload = load i32, i32* %stack_var_-16.2.reg2mem
  %113 = load i8, i8* %55, align 1, !insn.addr !3706
  %114 = icmp eq i8 %113, 0, !insn.addr !3706
  %115 = icmp eq i1 %114, false, !insn.addr !3707
  %spec.select18 = select i1 %115, i32 %stack_var_-16.2.reload, i32 %49
  %116 = xor i8 %51, 32, !insn.addr !3708
  %117 = add i8 %116, 80, !insn.addr !3709
  %118 = inttoptr i32 %spec.select18 to i8*, !insn.addr !3710
  store i8 %117, i8* %118, align 1, !insn.addr !3710
  %119 = call i32 @function_401730(), !insn.addr !3711
  %120 = and i32 %119, 2047, !insn.addr !3712
  %121 = sub i32 %120, %stack_var_-20.1.reload, !insn.addr !3713
  %122 = icmp ult i32 %120, %stack_var_-20.1.reload, !insn.addr !3713
  br i1 %122, label %dec_label_pc_44ac23, label %dec_label_pc_44abdc.dec_label_pc_44ac3d_crit_edge, !insn.addr !3714

dec_label_pc_44abdc.dec_label_pc_44ac3d_crit_edge: ; preds = %dec_label_pc_44abdc
  %.pre63 = add i32 %52, -4
  %.pre65 = inttoptr i32 %.pre63 to i32*
  store i32* %.pre65, i32** %.pre-phi66.reg2mem
  store i32 %121, i32* %ecx.3.reg2mem
  store i8 43, i8* %ebx.1.reg2mem
  store i32 0, i32* %esi.6.reg2mem
  br label %dec_label_pc_44ac3d

dec_label_pc_44ac23:                              ; preds = %dec_label_pc_44abdc
  %123 = sub i32 0, %121, !insn.addr !3715
  %124 = icmp eq i32 %121, 0, !insn.addr !3715
  %125 = add i32 %52, -4
  %126 = inttoptr i32 %125 to i32*
  store i32 45, i32* %126, align 4, !insn.addr !3716
  %127 = zext i1 %124 to i32, !insn.addr !3717
  store i32* %126, i32** %.pre-phi66.reg2mem, !insn.addr !3718
  store i32 %123, i32* %ecx.3.reg2mem, !insn.addr !3718
  store i8 45, i8* %ebx.1.reg2mem, !insn.addr !3718
  store i32 %127, i32* %esi.6.reg2mem, !insn.addr !3718
  br label %dec_label_pc_44ac3d, !insn.addr !3718

dec_label_pc_44ac3d:                              ; preds = %dec_label_pc_44abdc.dec_label_pc_44ac3d_crit_edge, %dec_label_pc_44ac23
  %128 = add i32 %spec.select18, 2, !insn.addr !3719
  %esi.6.reload = load i32, i32* %esi.6.reg2mem
  %ebx.1.reload = load i8, i8* %ebx.1.reg2mem
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %.pre-phi66.reload = load i32*, i32** %.pre-phi66.reg2mem
  %129 = add i32 %spec.select18, 1, !insn.addr !3720
  %130 = inttoptr i32 %129 to i8*, !insn.addr !3720
  store i8 %ebx.1.reload, i8* %130, align 1, !insn.addr !3720
  store i32 48, i32* %.pre-phi66.reload, align 4, !insn.addr !3721
  %131 = inttoptr i32 %128 to i8*
  store i8 48, i8* %131, align 1, !insn.addr !3722
  %132 = icmp eq i32 %esi.6.reload, 0, !insn.addr !3723
  %133 = icmp ult i32 %ecx.3.reload, 1000, !insn.addr !3724
  %or.cond20 = icmp eq i1 %133, %132
  br i1 %or.cond20, label %dec_label_pc_44ac6d, label %dec_label_pc_44ac65.thread, !insn.addr !3723

dec_label_pc_44ac65.thread:                       ; preds = %dec_label_pc_44ac3d
  store i32 1000, i32* %.pre-phi66.reload, align 4, !insn.addr !3725
  %134 = add i32 %52, -8, !insn.addr !3726
  %135 = inttoptr i32 %134 to i32*, !insn.addr !3726
  store i32 0, i32* %135, align 4, !insn.addr !3726
  %136 = add i32 %52, -12, !insn.addr !3727
  %137 = inttoptr i32 %136 to i32*, !insn.addr !3727
  store i32 1000, i32* %137, align 4, !insn.addr !3727
  %138 = add i32 %52, -16, !insn.addr !3728
  %139 = inttoptr i32 %138 to i32*, !insn.addr !3728
  store i32 %esi.6.reload, i32* %139, align 4, !insn.addr !3728
  %140 = add i32 %52, -20, !insn.addr !3729
  %141 = inttoptr i32 %140 to i32*, !insn.addr !3729
  store i32 %ecx.3.reload, i32* %141, align 4, !insn.addr !3729
  %142 = call i32 @function_4040c5(), !insn.addr !3730
  %143 = load i32, i32* %141, align 4, !insn.addr !3731
  %144 = trunc i32 %142 to i8
  %145 = add i8 %144, 48, !insn.addr !3732
  store i8 %145, i8* %131, align 1, !insn.addr !3732
  %146 = add i32 %spec.select18, 3, !insn.addr !3733
  %.pre61 = inttoptr i32 %146 to i8*, !insn.addr !3734
  store i8* %.pre61, i8** %.pre-phi62.reg2mem
  store i32* %141, i32** %.pre-phi60.reg2mem
  store i32 %146, i32* %edi.425.reg2mem
  store i32 1000, i32* %esi.724.reg2mem
  store i32 %138, i32* %esp.523.reg2mem
  store i32 %143, i32* %ebx.222.reg2mem
  br label %dec_label_pc_44ac90

dec_label_pc_44ac6d:                              ; preds = %dec_label_pc_44ac3d
  %147 = icmp ult i32 %ecx.3.reload, 100, !insn.addr !3735
  store i8* %131, i8** %.pre-phi62.reg2mem, !insn.addr !3736
  store i32* %.pre-phi66.reload, i32** %.pre-phi60.reg2mem, !insn.addr !3736
  store i32 %128, i32* %edi.425.reg2mem, !insn.addr !3736
  store i32 0, i32* %esi.724.reg2mem, !insn.addr !3736
  store i32 %52, i32* %esp.523.reg2mem, !insn.addr !3736
  store i32 1000, i32* %ebx.222.reg2mem, !insn.addr !3736
  store i32 1000, i32* %ebx.36980.reg2mem, !insn.addr !3736
  store i32 %52, i32* %esp.67179.reg2mem, !insn.addr !3736
  store i32 0, i32* %esi.87378.reg2mem, !insn.addr !3736
  store i32 %128, i32* %edi.57577.reg2mem, !insn.addr !3736
  br i1 %147, label %dec_label_pc_44ac98, label %dec_label_pc_44ac90, !insn.addr !3736

dec_label_pc_44ac90:                              ; preds = %dec_label_pc_44ac6d, %dec_label_pc_44ac65.thread
  %ebx.222.reload = load i32, i32* %ebx.222.reg2mem
  %esp.523.reload = load i32, i32* %esp.523.reg2mem
  %esi.724.reload = load i32, i32* %esi.724.reg2mem
  %edi.425.reload = load i32, i32* %edi.425.reg2mem
  %.pre-phi60.reload = load i32*, i32** %.pre-phi60.reg2mem
  %.pre-phi62.reload = load i8*, i8** %.pre-phi62.reg2mem
  store i32 %ebx.222.reload, i32* %.pre-phi60.reload, align 4, !insn.addr !3737
  %148 = add i32 %esp.523.reload, -8, !insn.addr !3738
  %149 = inttoptr i32 %148 to i32*, !insn.addr !3738
  store i32 0, i32* %149, align 4, !insn.addr !3738
  %150 = add i32 %esp.523.reload, -12, !insn.addr !3739
  %151 = inttoptr i32 %150 to i32*, !insn.addr !3739
  store i32 100, i32* %151, align 4, !insn.addr !3739
  %152 = add i32 %esp.523.reload, -16, !insn.addr !3740
  %153 = inttoptr i32 %152 to i32*, !insn.addr !3740
  store i32 %esi.724.reload, i32* %153, align 4, !insn.addr !3740
  %154 = add i32 %esp.523.reload, -20, !insn.addr !3741
  %155 = inttoptr i32 %154 to i32*, !insn.addr !3741
  store i32 %ecx.3.reload, i32* %155, align 4, !insn.addr !3741
  %156 = call i32 @function_4040c5(), !insn.addr !3742
  %157 = load i32, i32* %155, align 4, !insn.addr !3743
  %158 = trunc i32 %156 to i8
  %159 = add i8 %158, 48, !insn.addr !3734
  store i8 %159, i8* %.pre-phi62.reload, align 1, !insn.addr !3734
  %160 = add i32 %edi.425.reload, 1, !insn.addr !3744
  %161 = icmp eq i32 %160, %128, !insn.addr !3745
  %162 = icmp eq i1 %161, false, !insn.addr !3746
  store i32 %160, i32* %edi.576.reg2mem, !insn.addr !3746
  store i32 %ebx.222.reload, i32* %esi.874.reg2mem, !insn.addr !3746
  store i32 %152, i32* %esp.672.reg2mem, !insn.addr !3746
  store i32 %157, i32* %ebx.370.reg2mem, !insn.addr !3746
  br i1 %162, label %dec_label_pc_44ac9f, label %dec_label_pc_44ac94, !insn.addr !3746

dec_label_pc_44ac94:                              ; preds = %dec_label_pc_44ac90
  %163 = icmp slt i32 %ebx.222.reload, 0, !insn.addr !3747
  store i32 %157, i32* %ebx.36980.reg2mem, !insn.addr !3747
  store i32 %152, i32* %esp.67179.reg2mem, !insn.addr !3747
  store i32 %ebx.222.reload, i32* %esi.87378.reg2mem, !insn.addr !3747
  store i32 %160, i32* %edi.57577.reg2mem, !insn.addr !3747
  store i32 %160, i32* %edi.6.reg2mem, !insn.addr !3747
  br i1 %163, label %dec_label_pc_44acb6, label %dec_label_pc_44ac98, !insn.addr !3747

dec_label_pc_44ac98:                              ; preds = %dec_label_pc_44ac6d, %dec_label_pc_44ac94
  %edi.57577.reload = load i32, i32* %edi.57577.reg2mem
  %esi.87378.reload = load i32, i32* %esi.87378.reg2mem
  %esp.67179.reload = load i32, i32* %esp.67179.reg2mem
  %ebx.36980.reload = load i32, i32* %ebx.36980.reg2mem
  %164 = icmp eq i32 %esi.87378.reload, 0, !insn.addr !3748
  %165 = icmp ult i32 %ecx.3.reload, 10, !insn.addr !3749
  %or.cond15 = icmp eq i1 %165, %164
  store i32 %edi.57577.reload, i32* %edi.576.reg2mem, !insn.addr !3748
  store i32 %esi.87378.reload, i32* %esi.874.reg2mem, !insn.addr !3748
  store i32 %esp.67179.reload, i32* %esp.672.reg2mem, !insn.addr !3748
  store i32 %ebx.36980.reload, i32* %ebx.370.reg2mem, !insn.addr !3748
  store i32 %edi.57577.reload, i32* %edi.6.reg2mem, !insn.addr !3748
  br i1 %or.cond15, label %dec_label_pc_44acb6, label %dec_label_pc_44ac9f, !insn.addr !3748

dec_label_pc_44ac9f:                              ; preds = %dec_label_pc_44ac98, %dec_label_pc_44ac90
  %ebx.370.reload = load i32, i32* %ebx.370.reg2mem
  %esp.672.reload = load i32, i32* %esp.672.reg2mem
  %esi.874.reload = load i32, i32* %esi.874.reg2mem
  %edi.576.reload = load i32, i32* %edi.576.reg2mem
  %166 = add i32 %esp.672.reload, -4, !insn.addr !3750
  %167 = inttoptr i32 %166 to i32*, !insn.addr !3750
  store i32 %ebx.370.reload, i32* %167, align 4, !insn.addr !3750
  %168 = add i32 %esp.672.reload, -8, !insn.addr !3751
  %169 = inttoptr i32 %168 to i32*, !insn.addr !3751
  store i32 0, i32* %169, align 4, !insn.addr !3751
  %170 = add i32 %esp.672.reload, -12, !insn.addr !3752
  %171 = inttoptr i32 %170 to i32*, !insn.addr !3752
  store i32 10, i32* %171, align 4, !insn.addr !3752
  %172 = add i32 %esp.672.reload, -16, !insn.addr !3753
  %173 = inttoptr i32 %172 to i32*, !insn.addr !3753
  store i32 %esi.874.reload, i32* %173, align 4, !insn.addr !3753
  %174 = add i32 %esp.672.reload, -20, !insn.addr !3754
  %175 = inttoptr i32 %174 to i32*, !insn.addr !3754
  store i32 %ecx.3.reload, i32* %175, align 4, !insn.addr !3754
  %176 = call i32 @function_4040c5(), !insn.addr !3755
  %177 = trunc i32 %176 to i8
  %178 = add i8 %177, 48, !insn.addr !3756
  %179 = inttoptr i32 %edi.576.reload to i8*, !insn.addr !3756
  store i8 %178, i8* %179, align 1, !insn.addr !3756
  %180 = add i32 %edi.576.reload, 1, !insn.addr !3757
  store i32 %180, i32* %edi.6.reg2mem, !insn.addr !3758
  br label %dec_label_pc_44acb6, !insn.addr !3758

dec_label_pc_44acb6:                              ; preds = %dec_label_pc_44ac98, %dec_label_pc_44ac9f, %dec_label_pc_44ac94
  %edi.6.reload = load i32, i32* %edi.6.reg2mem
  %181 = trunc i32 %ecx.3.reload to i8
  %182 = add i8 %181, 48, !insn.addr !3759
  %183 = inttoptr i32 %edi.6.reload to i8*, !insn.addr !3759
  store i8 %182, i8* %183, align 1, !insn.addr !3759
  %184 = add i32 %edi.6.reload, 1, !insn.addr !3760
  %185 = inttoptr i32 %184 to i8*, !insn.addr !3760
  store i8 0, i8* %185, align 1, !insn.addr !3760
  store i32 0, i32* %edi.7.reg2mem, !insn.addr !3761
  br label %dec_label_pc_44acc0, !insn.addr !3761

dec_label_pc_44acc0:                              ; preds = %dec_label_pc_44aa42, %dec_label_pc_44aa50, %dec_label_pc_44acb6, %dec_label_pc_44aa3a, %dec_label_pc_44a9ec
  %edi.7.reload = load i32, i32* %edi.7.reg2mem
  %186 = icmp eq i8 %0, 0, !insn.addr !3762
  br i1 %186, label %dec_label_pc_44acd2, label %dec_label_pc_44acc8, !insn.addr !3763

dec_label_pc_44acc8:                              ; preds = %dec_label_pc_44acc0
  %187 = add i32 %2, 848, !insn.addr !3764
  %188 = inttoptr i32 %187 to i32*, !insn.addr !3764
  %189 = load i32, i32* %188, align 4, !insn.addr !3764
  %190 = and i32 %189, -3, !insn.addr !3764
  store i32 %190, i32* %188, align 4, !insn.addr !3764
  br label %dec_label_pc_44acd2, !insn.addr !3764

dec_label_pc_44acd2:                              ; preds = %dec_label_pc_44acc8, %dec_label_pc_44acc0
  ret i32 %edi.7.reload, !insn.addr !3765
}

define i32 @fp_format_e(double* %argument, i8* %result_buffer, i32 %result_buffer_count, i8* %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i1 %capitals, i32 %min_exponent_digits, i32 %locale) local_unnamed_addr {
dec_label_pc_44ad9d:
  %eax.1.reg2mem = alloca i32, !insn.addr !3766
  %ecx.0.reg2mem = alloca %_strflt*, !insn.addr !3766
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %2 = add i32 %precision, 1, !insn.addr !3767
  %3 = add i32 %precision, 3, !insn.addr !3768
  %4 = icmp ult i32 %3, %scratch_buffer_count, !insn.addr !3769
  %spec.select = select i1 %4, i32 %3, i32 %scratch_buffer_count
  %5 = ptrtoint i8* %scratch_buffer to i32
  %6 = ptrtoint double* %argument to i32, !insn.addr !3770
  %7 = add i32 %6, 4, !insn.addr !3771
  %8 = inttoptr i32 %7 to i32*, !insn.addr !3771
  %9 = load i32, i32* %8, align 4, !insn.addr !3771
  %10 = and i32 %9, 1
  %11 = icmp ne i32 %10, 0, !insn.addr !3771
  %12 = bitcast double* %argument to i32*
  %13 = load i32, i32* %12, align 4, !insn.addr !3772
  %14 = sext i1 %11 to i32, !insn.addr !3773
  %15 = call i32 @function_403b4d(i32 %13, i32 %14, i32 %2, i32* nonnull %stack_var_-16, i32 %5, i32 %spec.select, i32 %0, i32 %1), !insn.addr !3773
  %16 = icmp eq i32 %result_buffer_count, -1, !insn.addr !3774
  %.pre = load i32, i32* %stack_var_-16, align 4
  store %_strflt* inttoptr (i32 -1 to %_strflt*), %_strflt** %ecx.0.reg2mem, !insn.addr !3775
  br i1 %16, label %dec_label_pc_44adf0, label %dec_label_pc_44add9, !insn.addr !3775

dec_label_pc_44add9:                              ; preds = %dec_label_pc_44ad9d
  %17 = icmp eq i32 %.pre, 45, !insn.addr !3776
  %.neg = sext i1 %17 to i32
  %18 = icmp eq i32 %precision, 0, !insn.addr !3777
  %19 = icmp slt i32 %precision, 0, !insn.addr !3777
  %20 = icmp eq i1 %19, false, !insn.addr !3778
  %21 = icmp eq i1 %18, false, !insn.addr !3778
  %22 = icmp eq i1 %20, %21, !insn.addr !3778
  %.neg9 = sext i1 %22 to i32
  %23 = add i32 %.neg9, %result_buffer_count, !insn.addr !3779
  %24 = add i32 %23, %.neg, !insn.addr !3780
  %phitmp = inttoptr i32 %24 to %_strflt*
  store %_strflt* %phitmp, %_strflt** %ecx.0.reg2mem, !insn.addr !3780
  br label %dec_label_pc_44adf0, !insn.addr !3780

dec_label_pc_44adf0:                              ; preds = %dec_label_pc_44ad9d, %dec_label_pc_44add9
  %ecx.0.reload = load %_strflt*, %_strflt** %ecx.0.reg2mem
  %25 = ptrtoint i8* %result_buffer to i32, !insn.addr !3781
  %26 = icmp eq i32 %.pre, 45, !insn.addr !3782
  %27 = zext i1 %26 to i32, !insn.addr !3783
  %28 = icmp eq i32 %precision, 0, !insn.addr !3784
  %29 = icmp slt i32 %precision, 0, !insn.addr !3784
  %30 = icmp eq i1 %29, false, !insn.addr !3785
  %31 = icmp eq i1 %28, false, !insn.addr !3785
  %32 = icmp eq i1 %30, %31, !insn.addr !3785
  %33 = zext i1 %32 to i32, !insn.addr !3785
  %34 = add i32 %33, %25, !insn.addr !3786
  %35 = add i32 %34, %27, !insn.addr !3787
  %36 = ptrtoint %_strflt* %ecx.0.reload to i32, !insn.addr !3788
  %37 = call i32 @function_402b9e(i32 %35, i32 %36, i32 %2, i32* nonnull %stack_var_-16), !insn.addr !3788
  %38 = icmp eq i32 %37, 0, !insn.addr !3789
  br i1 %38, label %dec_label_pc_44ae1f, label %dec_label_pc_44ae1a, !insn.addr !3790

dec_label_pc_44ae1a:                              ; preds = %dec_label_pc_44adf0
  store i8 0, i8* %result_buffer, align 1, !insn.addr !3791
  store i32 %37, i32* %eax.1.reg2mem, !insn.addr !3792
  br label %dec_label_pc_44ae3b, !insn.addr !3792

dec_label_pc_44ae1f:                              ; preds = %dec_label_pc_44adf0
  %39 = bitcast i32* %stack_var_-16 to %_strflt*
  %40 = call i32 @fp_format_e_internal(i8* %result_buffer, i32 %result_buffer_count, i32 %precision, i1 %capitals, i32 %min_exponent_digits, %_strflt* nonnull %39, i1 false, i32 %locale), !insn.addr !3793
  store i32 %40, i32* %eax.1.reg2mem, !insn.addr !3794
  br label %dec_label_pc_44ae3b, !insn.addr !3794

dec_label_pc_44ae3b:                              ; preds = %dec_label_pc_44ae1f, %dec_label_pc_44ae1a
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  ret i32 %eax.1.reload, !insn.addr !3795
}

define i32 @fp_format_e_internal(i8* %result_buffer, i32 %result_buffer_count, i32 %precision, i1 %capitals, i32 %min_exponent_digits, %_strflt* %pflt, i1 %g_fmt, i32 %locale) local_unnamed_addr {
dec_label_pc_44ae67:
  %edx.3.reg2mem = alloca i32, !insn.addr !3796
  %edx.2.reg2mem = alloca i32, !insn.addr !3796
  %edx.1.reg2mem = alloca i32, !insn.addr !3796
  %esi.1.reg2mem = alloca i32, !insn.addr !3796
  %esi.0.reg2mem = alloca i32, !insn.addr !3796
  %edx.0.reg2mem = alloca i32, !insn.addr !3796
  %storemerge.reg2mem = alloca i32, !insn.addr !3796
  %0 = call i8 @__decompiler_undefined_function_7()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = icmp sgt i32 %precision, 0
  %storemerge8 = select i1 %3, i32 %precision, i32 0
  %4 = add nuw i32 %storemerge8, 9, !insn.addr !3797
  %5 = icmp ult i32 %4, %result_buffer_count
  br i1 %5, label %dec_label_pc_44ae9b, label %dec_label_pc_44ae86, !insn.addr !3798

dec_label_pc_44ae86:                              ; preds = %dec_label_pc_44ae67
  %6 = call i32* @_errno(), !insn.addr !3799
  store i32 34, i32* %6, align 4, !insn.addr !3800
  call void @_invalid_parameter_noinfo(), !insn.addr !3801
  store i32 34, i32* %storemerge.reg2mem, !insn.addr !3802
  br label %dec_label_pc_44ae97, !insn.addr !3802

dec_label_pc_44ae97:                              ; preds = %dec_label_pc_44af8b, %dec_label_pc_44af91, %dec_label_pc_44ae86
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !3803

dec_label_pc_44ae9b:                              ; preds = %dec_label_pc_44ae67
  %7 = call i32 @function_403d78(i32 %locale), !insn.addr !3804
  %8 = ptrtoint i8* %result_buffer to i32, !insn.addr !3805
  store i32 1, i32* %edx.0.reg2mem, !insn.addr !3806
  br i1 %g_fmt, label %dec_label_pc_44aeb1, label %dec_label_pc_44aed6, !insn.addr !3806

dec_label_pc_44aeb1:                              ; preds = %dec_label_pc_44ae9b
  %9 = icmp eq i32 %precision, 0, !insn.addr !3807
  %10 = icmp slt i32 %precision, 0, !insn.addr !3807
  %11 = icmp eq i1 %10, false, !insn.addr !3808
  %12 = icmp eq i1 %9, false, !insn.addr !3808
  %13 = icmp eq i1 %11, %12, !insn.addr !3808
  %14 = zext i1 %13 to i32, !insn.addr !3808
  %15 = getelementptr inbounds %_strflt, %_strflt* %pflt, i32 0, i32 0
  %16 = load i32, i32* %15, align 4, !insn.addr !3809
  %17 = icmp eq i32 %16, 45, !insn.addr !3809
  %18 = zext i1 %17 to i32, !insn.addr !3810
  %19 = add i32 %18, %8, !insn.addr !3811
  %20 = inttoptr i32 %19 to i8*, !insn.addr !3812
  call void @shift_bytes(i8* %result_buffer, i32 %result_buffer_count, i8* %20, i32 %14), !insn.addr !3813
  store i32 254, i32* %edx.0.reg2mem, !insn.addr !3814
  br label %dec_label_pc_44aed6, !insn.addr !3814

dec_label_pc_44aed6:                              ; preds = %dec_label_pc_44ae9b, %dec_label_pc_44aeb1
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %21 = getelementptr inbounds %_strflt, %_strflt* %pflt, i32 0, i32 0
  %22 = load i32, i32* %21, align 4, !insn.addr !3815
  %23 = icmp eq i32 %22, 45, !insn.addr !3815
  %24 = icmp eq i1 %23, false, !insn.addr !3816
  store i32 %8, i32* %esi.0.reg2mem, !insn.addr !3816
  br i1 %24, label %dec_label_pc_44aee6, label %dec_label_pc_44aee0, !insn.addr !3816

dec_label_pc_44aee0:                              ; preds = %dec_label_pc_44aed6
  store i8 45, i8* %result_buffer, align 1, !insn.addr !3817
  %25 = add i32 %8, 1, !insn.addr !3818
  store i32 %25, i32* %esi.0.reg2mem, !insn.addr !3818
  br label %dec_label_pc_44aee6, !insn.addr !3818

dec_label_pc_44aee6:                              ; preds = %dec_label_pc_44aee0, %dec_label_pc_44aed6
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %26 = icmp slt i32 %precision, 1
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !3819
  br i1 %26, label %dec_label_pc_44aeff, label %dec_label_pc_44aeea, !insn.addr !3819

dec_label_pc_44aeea:                              ; preds = %dec_label_pc_44aee6
  %27 = add i32 %esi.0.reload, 1, !insn.addr !3820
  %28 = inttoptr i32 %27 to i8*, !insn.addr !3820
  %29 = load i8, i8* %28, align 1, !insn.addr !3820
  %30 = inttoptr i32 %esi.0.reload to i8*, !insn.addr !3821
  store i8 %29, i8* %30, align 1, !insn.addr !3821
  %31 = add i32 %1, 136, !insn.addr !3822
  %32 = inttoptr i32 %31 to i32*, !insn.addr !3822
  %33 = load i32, i32* %32, align 4, !insn.addr !3822
  %34 = inttoptr i32 %33 to i32*, !insn.addr !3823
  %35 = load i32, i32* %34, align 4, !insn.addr !3823
  %36 = inttoptr i32 %35 to i8*, !insn.addr !3824
  %37 = load i8, i8* %36, align 1, !insn.addr !3824
  store i8 %37, i8* %28, align 1, !insn.addr !3825
  store i32 %27, i32* %esi.1.reg2mem, !insn.addr !3825
  br label %dec_label_pc_44aeff, !insn.addr !3825

dec_label_pc_44aeff:                              ; preds = %dec_label_pc_44aeea, %dec_label_pc_44aee6
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %38 = add i32 %edx.0.reload, %precision, !insn.addr !3826
  %39 = add i32 %38, %esi.1.reload, !insn.addr !3827
  %40 = icmp eq i32 %result_buffer_count, -1, !insn.addr !3828
  %41 = add i32 %8, %result_buffer_count
  %42 = sub i32 %41, %39
  %eax.0 = select i1 %40, i32 -1, i32 %42
  %43 = inttoptr i32 %39 to i8*, !insn.addr !3829
  %44 = call i32 @strcpy_s(i8* %43, i32 %eax.0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_4732f4, i32 0, i32 0)), !insn.addr !3829
  %45 = icmp eq i32 %44, 0, !insn.addr !3830
  %46 = icmp eq i1 %45, false, !insn.addr !3831
  br i1 %46, label %dec_label_pc_44afa2, label %dec_label_pc_44af2c, !insn.addr !3831

dec_label_pc_44af2c:                              ; preds = %dec_label_pc_44aeff
  %47 = sext i1 %capitals to i8, !insn.addr !3832
  %48 = trunc i32 %44 to i8, !insn.addr !3832
  %49 = icmp eq i8 %47, %48, !insn.addr !3832
  br i1 %49, label %dec_label_pc_44af37, label %dec_label_pc_44af34, !insn.addr !3833

dec_label_pc_44af34:                              ; preds = %dec_label_pc_44af2c
  store i8 69, i8* %43, align 1, !insn.addr !3834
  br label %dec_label_pc_44af37, !insn.addr !3834

dec_label_pc_44af37:                              ; preds = %dec_label_pc_44af34, %dec_label_pc_44af2c
  %50 = add i32 %39, 2, !insn.addr !3835
  %51 = ptrtoint %_strflt* %pflt to i32, !insn.addr !3836
  %52 = add i32 %51, 8, !insn.addr !3837
  %53 = inttoptr i32 %52 to i32*, !insn.addr !3837
  %54 = load i32, i32* %53, align 4, !insn.addr !3837
  %55 = inttoptr i32 %54 to i8*, !insn.addr !3838
  %56 = load i8, i8* %55, align 1, !insn.addr !3838
  %57 = icmp eq i8 %56, 48, !insn.addr !3838
  br i1 %57, label %dec_label_pc_44af71, label %dec_label_pc_44af42, !insn.addr !3839

dec_label_pc_44af42:                              ; preds = %dec_label_pc_44af37
  %58 = add i32 %51, 4, !insn.addr !3840
  %59 = inttoptr i32 %58 to i32*, !insn.addr !3840
  %60 = load i32, i32* %59, align 4, !insn.addr !3840
  %61 = add i32 %60, -1, !insn.addr !3841
  %62 = icmp slt i32 %61, 0, !insn.addr !3841
  %63 = icmp eq i1 %62, false, !insn.addr !3842
  store i32 %61, i32* %edx.1.reg2mem, !insn.addr !3842
  br i1 %63, label %dec_label_pc_44af50, label %dec_label_pc_44af4a, !insn.addr !3842

dec_label_pc_44af4a:                              ; preds = %dec_label_pc_44af42
  %64 = sub i32 1, %60, !insn.addr !3843
  %65 = add i32 %39, 1, !insn.addr !3844
  %66 = inttoptr i32 %65 to i8*, !insn.addr !3844
  store i8 45, i8* %66, align 1, !insn.addr !3844
  store i32 %64, i32* %edx.1.reg2mem, !insn.addr !3844
  br label %dec_label_pc_44af50, !insn.addr !3844

dec_label_pc_44af50:                              ; preds = %dec_label_pc_44af4a, %dec_label_pc_44af42
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %67 = icmp slt i32 %edx.1.reload, 100, !insn.addr !3845
  store i32 %edx.1.reload, i32* %edx.2.reg2mem, !insn.addr !3845
  br i1 %67, label %dec_label_pc_44af5f, label %dec_label_pc_44af57, !insn.addr !3845

dec_label_pc_44af57:                              ; preds = %dec_label_pc_44af50
  %68 = lshr i32 %edx.1.reload, 31
  %69 = zext i32 %edx.1.reload to i64, !insn.addr !3846
  %70 = zext i32 %68 to i64, !insn.addr !3846
  %71 = mul i64 %70, 4294967296, !insn.addr !3846
  %72 = or i64 %71, %69, !insn.addr !3846
  %73 = udiv i64 %72, 100, !insn.addr !3846
  %74 = urem i64 %72, 100, !insn.addr !3846
  %75 = trunc i64 %74 to i32, !insn.addr !3846
  %76 = inttoptr i32 %50 to i8*, !insn.addr !3847
  %77 = load i8, i8* %76, align 1, !insn.addr !3847
  %78 = trunc i64 %73 to i8, !insn.addr !3847
  %79 = add i8 %77, %78, !insn.addr !3847
  store i8 %79, i8* %76, align 1, !insn.addr !3847
  store i32 %75, i32* %edx.2.reg2mem, !insn.addr !3847
  br label %dec_label_pc_44af5f, !insn.addr !3847

dec_label_pc_44af5f:                              ; preds = %dec_label_pc_44af57, %dec_label_pc_44af50
  %edx.2.reload = load i32, i32* %edx.2.reg2mem
  %80 = icmp slt i32 %edx.2.reload, 10, !insn.addr !3848
  store i32 %edx.2.reload, i32* %edx.3.reg2mem, !insn.addr !3848
  br i1 %80, label %dec_label_pc_44af6e, label %dec_label_pc_44af66, !insn.addr !3848

dec_label_pc_44af66:                              ; preds = %dec_label_pc_44af5f
  %81 = lshr i32 %edx.2.reload, 31
  %82 = zext i32 %edx.2.reload to i64, !insn.addr !3849
  %83 = zext i32 %81 to i64, !insn.addr !3849
  %84 = mul i64 %83, 4294967296, !insn.addr !3849
  %85 = or i64 %84, %82, !insn.addr !3849
  %86 = udiv i64 %85, 10, !insn.addr !3849
  %87 = urem i64 %85, 10, !insn.addr !3849
  %88 = trunc i64 %87 to i32, !insn.addr !3849
  %89 = add i32 %39, 3, !insn.addr !3850
  %90 = inttoptr i32 %89 to i8*, !insn.addr !3850
  %91 = load i8, i8* %90, align 1, !insn.addr !3850
  %92 = trunc i64 %86 to i8, !insn.addr !3850
  %93 = add i8 %91, %92, !insn.addr !3850
  store i8 %93, i8* %90, align 1, !insn.addr !3850
  store i32 %88, i32* %edx.3.reg2mem, !insn.addr !3850
  br label %dec_label_pc_44af6e, !insn.addr !3850

dec_label_pc_44af6e:                              ; preds = %dec_label_pc_44af66, %dec_label_pc_44af5f
  %edx.3.reload = load i32, i32* %edx.3.reg2mem
  %94 = add i32 %39, 4, !insn.addr !3851
  %95 = inttoptr i32 %94 to i8*, !insn.addr !3851
  %96 = load i8, i8* %95, align 1, !insn.addr !3851
  %97 = trunc i32 %edx.3.reload to i8, !insn.addr !3851
  %98 = add i8 %96, %97, !insn.addr !3851
  store i8 %98, i8* %95, align 1, !insn.addr !3851
  br label %dec_label_pc_44af71, !insn.addr !3851

dec_label_pc_44af71:                              ; preds = %dec_label_pc_44af6e, %dec_label_pc_44af37
  %99 = icmp eq i32 %min_exponent_digits, 2, !insn.addr !3852
  %100 = icmp eq i1 %99, false, !insn.addr !3853
  br i1 %100, label %dec_label_pc_44af8b, label %dec_label_pc_44af77, !insn.addr !3853

dec_label_pc_44af77:                              ; preds = %dec_label_pc_44af71
  %101 = inttoptr i32 %50 to i8*, !insn.addr !3854
  %102 = load i8, i8* %101, align 1, !insn.addr !3854
  %103 = icmp eq i8 %102, 48, !insn.addr !3854
  %104 = icmp eq i1 %103, false, !insn.addr !3855
  br i1 %104, label %dec_label_pc_44af8b, label %dec_label_pc_44af7c, !insn.addr !3855

dec_label_pc_44af7c:                              ; preds = %dec_label_pc_44af77
  %105 = add i32 %39, 3, !insn.addr !3856
  %106 = inttoptr i32 %105 to i8*, !insn.addr !3857
  call void @memmove(i8* %101, i8* %106, i32 3), !insn.addr !3858
  br label %dec_label_pc_44af8b, !insn.addr !3859

dec_label_pc_44af8b:                              ; preds = %dec_label_pc_44af7c, %dec_label_pc_44af77, %dec_label_pc_44af71
  %107 = icmp eq i8 %0, 0, !insn.addr !3860
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !3861
  br i1 %107, label %dec_label_pc_44ae97, label %dec_label_pc_44af91, !insn.addr !3861

dec_label_pc_44af91:                              ; preds = %dec_label_pc_44af8b
  %108 = add i32 %2, 848, !insn.addr !3862
  %109 = inttoptr i32 %108 to i32*, !insn.addr !3862
  %110 = load i32, i32* %109, align 4, !insn.addr !3862
  %111 = and i32 %110, -3, !insn.addr !3862
  store i32 %111, i32* %109, align 4, !insn.addr !3862
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !3862
  br label %dec_label_pc_44ae97, !insn.addr !3862

dec_label_pc_44afa2:                              ; preds = %dec_label_pc_44aeff
  %112 = call i32 @__invoke_watson(), !insn.addr !3863
  %113 = call i32 @__asm_int3(), !insn.addr !3864
  %114 = call i32 @__asm_int3(), !insn.addr !3865
  %115 = call i32 @__asm_int3(), !insn.addr !3866
  %116 = call i32 @__asm_int3(), !insn.addr !3867
  %117 = call i32 @__asm_int3(), !insn.addr !3868
  %118 = call i32 @__asm_int3(), !insn.addr !3869
  %119 = call i32 @__asm_int3(), !insn.addr !3870
  %120 = call i32 @__asm_int3(), !insn.addr !3871
  %121 = call i32 @__asm_int3(), !insn.addr !3872
  %122 = call i32 @__asm_int3(), !insn.addr !3873
  %123 = call i32 @__asm_int3(), !insn.addr !3874
  %124 = call i32 @__asm_int3(), !insn.addr !3875
  %125 = call i32 @__asm_int3(), !insn.addr !3876
  %126 = call i32 @__asm_int3(), !insn.addr !3877
  %127 = call i32 @__asm_int3(), !insn.addr !3878
  %128 = call i32 @__asm_int3(), !insn.addr !3879
  %129 = call i32 @__asm_int3(), !insn.addr !3880
  %130 = call i32 @__asm_int3(), !insn.addr !3881
  %131 = call i32 @__asm_int3(), !insn.addr !3882
  %132 = call i32 @__asm_int3(), !insn.addr !3883
  %133 = call i32 @__asm_int3(), !insn.addr !3884
  %134 = call i32 @__asm_int3(), !insn.addr !3885
  %135 = call i32 @__asm_int3(), !insn.addr !3886
  %136 = call i32 @__asm_int3(), !insn.addr !3887
  %137 = call i32 @__asm_int3(), !insn.addr !3888
  %138 = call i32 @__asm_int3(), !insn.addr !3889
  %139 = call i32 @__asm_int3(), !insn.addr !3890
  %140 = call i32 @__asm_int3(), !insn.addr !3891
  %141 = call i32 @__asm_int3(), !insn.addr !3892
  %142 = call i32 @__asm_int3(), !insn.addr !3893
  %143 = call i32 @__asm_int3(), !insn.addr !3894
  %144 = call i32 @__asm_int3(), !insn.addr !3895
  %145 = call i32 @__asm_int3(), !insn.addr !3896
  %146 = call i32 @__asm_int3(), !insn.addr !3897
  %147 = call i32 @__asm_int3(), !insn.addr !3898
  %148 = call i32 @__asm_int3(), !insn.addr !3899
  %149 = call i32 @__asm_int3(), !insn.addr !3900
  %150 = call i32 @__asm_int3(), !insn.addr !3901
  %151 = call i32 @__asm_int3(), !insn.addr !3902
  %152 = call i32 @__asm_int3(), !insn.addr !3903
  %153 = call i32 @__asm_int3(), !insn.addr !3904
  %154 = call i32 @__asm_int3(), !insn.addr !3905
  %155 = call i32 @__asm_int3(), !insn.addr !3906
  %156 = call i32 @__asm_int3(), !insn.addr !3907
  %157 = call i32 @__asm_int3(), !insn.addr !3908
  %158 = call i32 @__asm_int3(), !insn.addr !3909
  %159 = call i32 @__asm_int3(), !insn.addr !3910
  %160 = call i32 @__asm_int3(), !insn.addr !3911
  %161 = call i32 @__asm_int3(), !insn.addr !3912
  %162 = call i32 @__asm_int3(), !insn.addr !3913
  %163 = call i32 @__asm_int3(), !insn.addr !3914
  %164 = call i32 @__asm_int3(), !insn.addr !3915
  %165 = call i32 @__asm_int3(), !insn.addr !3916
  %166 = call i32 @__asm_int3(), !insn.addr !3917
  %167 = call i32 @__asm_int3(), !insn.addr !3918
  %168 = call i32 @__asm_int3(), !insn.addr !3919
  %169 = call i32 @__asm_int3(), !insn.addr !3920
  %170 = call i32 @__asm_int3(), !insn.addr !3921
  %171 = call i32 @__asm_int3(), !insn.addr !3922
  %172 = call i32 @__asm_int3(), !insn.addr !3923
  %173 = call i32 @__asm_int3(), !insn.addr !3924
  %174 = call i32 @__asm_int3(), !insn.addr !3925
  %175 = call i32 @__asm_int3(), !insn.addr !3926
  %176 = call i32 @__asm_int3(), !insn.addr !3927
  %177 = call i32 @__asm_int3(), !insn.addr !3928
  %178 = call i32 @__asm_int3(), !insn.addr !3929
  %179 = call i32 @__asm_int3(), !insn.addr !3930
  %180 = call i32 @__asm_int3(), !insn.addr !3931
  %181 = call i32 @__asm_int3(), !insn.addr !3932
  %182 = call i32 @__asm_int3(), !insn.addr !3933
  %183 = call i32 @__asm_int3(), !insn.addr !3934
  %184 = call i32 @__asm_int3(), !insn.addr !3935
  %185 = call i32 @__asm_int3(), !insn.addr !3936
  %186 = call i32 @__asm_int3(), !insn.addr !3937
  %187 = call i32 @__asm_int3(), !insn.addr !3938
  %188 = call i32 @__asm_int3(), !insn.addr !3939
  %189 = call i32 @__asm_int3(), !insn.addr !3940
  %190 = call i32 @__asm_int3(), !insn.addr !3941
  %191 = call i32 @__asm_int3(), !insn.addr !3942
  %192 = call i32 @__asm_int3(), !insn.addr !3943
  %193 = call i32 @__asm_int3(), !insn.addr !3944
  %194 = call i32 @__asm_int3(), !insn.addr !3945
  %195 = call i32 @__asm_int3(), !insn.addr !3946
  ret i32 %195, !insn.addr !3946
}

define i32 @fp_format_f(double* %argument, i8* %result_buffer, i32 %result_buffer_count, i8* %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i32 %locale) local_unnamed_addr {
dec_label_pc_44b001:
  %eax.0.reg2mem = alloca i32, !insn.addr !3947
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i1 @__decompiler_undefined_function_6()
  %3 = ptrtoint double* %argument to i32
  %strflt_-12 = alloca %_strflt.433, align 8
  %stack_var_-16 = alloca i32, align 4
  %4 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !3948
  store i32 0, i32* %stack_var_-16, align 4, !insn.addr !3949
  %5 = select i1 %2, i32 -4, i32 4, !insn.addr !3949
  %6 = add i32 %5, %4, !insn.addr !3949
  %7 = inttoptr i32 %6 to i32*, !insn.addr !3950
  store i32 0, i32* %7, align 4, !insn.addr !3950
  %8 = add i32 %6, %5, !insn.addr !3950
  %9 = inttoptr i32 %8 to i32*, !insn.addr !3951
  store i32 0, i32* %9, align 4, !insn.addr !3951
  %10 = add i32 %3, 4, !insn.addr !3952
  %11 = inttoptr i32 %10 to i32*, !insn.addr !3952
  %12 = load i32, i32* %11, align 4, !insn.addr !3952
  %13 = bitcast double* %argument to i32*, !insn.addr !3953
  %14 = load i32, i32* %13, align 4, !insn.addr !3953
  %15 = ptrtoint i8* %scratch_buffer to i32, !insn.addr !3954
  %16 = call i32 @function_403b4d(i32 %14, i32 %12, i32 %precision, i32* nonnull %stack_var_-16, i32 %15, i32 %scratch_buffer_count, i32 %0, i32 %1), !insn.addr !3954
  %17 = icmp eq i32 %result_buffer_count, -1, !insn.addr !3955
  %.pre = load i32, i32* %stack_var_-16, align 4
  %18 = icmp eq i32 %.pre, 45
  %19 = zext i1 %18 to i32
  %20 = sub i32 %result_buffer_count, %19
  %ecx.0 = select i1 %17, i32 -1, i32 %20
  %21 = ptrtoint i8* %result_buffer to i32, !insn.addr !3956
  %22 = getelementptr inbounds %_strflt.433, %_strflt.433* %strflt_-12, i32 0, i32 0, !insn.addr !3957
  %23 = load i32, i32* %22, align 8, !insn.addr !3957
  %24 = add i32 %23, %precision, !insn.addr !3958
  %25 = add i32 %19, %21, !insn.addr !3959
  %26 = call i32 @function_402b9e(i32 %25, i32 %ecx.0, i32 %24, i32* nonnull %stack_var_-16), !insn.addr !3960
  %27 = icmp eq i32 %26, 0, !insn.addr !3961
  br i1 %27, label %dec_label_pc_44b072, label %dec_label_pc_44b06d, !insn.addr !3962

dec_label_pc_44b06d:                              ; preds = %dec_label_pc_44b001
  store i8 0, i8* %result_buffer, align 1, !insn.addr !3963
  store i32 %26, i32* %eax.0.reg2mem, !insn.addr !3964
  br label %dec_label_pc_44b088, !insn.addr !3964

dec_label_pc_44b072:                              ; preds = %dec_label_pc_44b001
  %28 = bitcast i32* %stack_var_-16 to %_strflt*
  %29 = call i32 @fp_format_f_internal(i8* %result_buffer, i32 %result_buffer_count, i32 %precision, %_strflt* nonnull %28, i1 false, i32 %locale), !insn.addr !3965
  store i32 %29, i32* %eax.0.reg2mem, !insn.addr !3966
  br label %dec_label_pc_44b088, !insn.addr !3966

dec_label_pc_44b088:                              ; preds = %dec_label_pc_44b072, %dec_label_pc_44b06d
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !3967
}

define i32 @fp_format_f_internal(i8* %buffer, i32 %buffer_count, i32 %precision, %_strflt* %pflt, i1 %g_fmt, i32 %locale) local_unnamed_addr {
dec_label_pc_44b0ae:
  %eax.0.reg2mem = alloca i32, !insn.addr !3968
  %ebx.0.reg2mem = alloca i32, !insn.addr !3968
  %0 = ptrtoint %_strflt* %pflt to i32
  %1 = ptrtoint i8* %buffer to i32
  %2 = call i8 @__decompiler_undefined_function_7()
  %3 = call i32 @__decompiler_undefined_function_0()
  %4 = call i32 @__decompiler_undefined_function_0()
  %5 = call i32 @function_403d78(i32 %locale), !insn.addr !3969
  %6 = add i32 %0, 4, !insn.addr !3970
  %7 = inttoptr i32 %6 to i32*, !insn.addr !3970
  %8 = load i32, i32* %7, align 4, !insn.addr !3970
  %9 = add i32 %8, -1, !insn.addr !3971
  %10 = icmp eq i32 %9, %precision, !insn.addr !3972
  %11 = icmp eq i1 %10, %g_fmt
  br i1 %11, label %dec_label_pc_44b0db, label %dec_label_pc_44b0eb, !insn.addr !3973

dec_label_pc_44b0db:                              ; preds = %dec_label_pc_44b0ae
  %12 = getelementptr inbounds %_strflt, %_strflt* %pflt, i32 0, i32 0, !insn.addr !3974
  %13 = load i32, i32* %12, align 4, !insn.addr !3974
  %14 = icmp eq i32 %13, 45, !insn.addr !3974
  %15 = zext i1 %14 to i32, !insn.addr !3975
  %16 = add i32 %1, %precision, !insn.addr !3976
  %17 = add i32 %16, %15, !insn.addr !3977
  %18 = inttoptr i32 %17 to i16*, !insn.addr !3977
  store i16 48, i16* %18, align 2, !insn.addr !3977
  br label %dec_label_pc_44b0eb, !insn.addr !3977

dec_label_pc_44b0eb:                              ; preds = %dec_label_pc_44b0ae, %dec_label_pc_44b0db
  %19 = getelementptr inbounds %_strflt, %_strflt* %pflt, i32 0, i32 0, !insn.addr !3978
  %20 = load i32, i32* %19, align 4, !insn.addr !3978
  %21 = icmp eq i32 %20, 45, !insn.addr !3978
  %22 = icmp eq i1 %21, false, !insn.addr !3979
  store i32 %1, i32* %ebx.0.reg2mem, !insn.addr !3979
  br i1 %22, label %dec_label_pc_44b0f8, label %dec_label_pc_44b0f2, !insn.addr !3979

dec_label_pc_44b0f2:                              ; preds = %dec_label_pc_44b0eb
  store i8 45, i8* %buffer, align 1, !insn.addr !3980
  %23 = add i32 %1, 1, !insn.addr !3981
  store i32 %23, i32* %ebx.0.reg2mem, !insn.addr !3981
  br label %dec_label_pc_44b0f8, !insn.addr !3981

dec_label_pc_44b0f8:                              ; preds = %dec_label_pc_44b0f2, %dec_label_pc_44b0eb
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %24 = load i32, i32* %7, align 4, !insn.addr !3982
  %25 = icmp eq i32 %24, 0, !insn.addr !3983
  %26 = icmp slt i32 %24, 0, !insn.addr !3983
  %27 = icmp eq i1 %26, false, !insn.addr !3984
  %28 = icmp eq i1 %25, false, !insn.addr !3984
  %29 = icmp eq i1 %27, %28, !insn.addr !3984
  store i32 %24, i32* %eax.0.reg2mem, !insn.addr !3984
  br i1 %29, label %dec_label_pc_44b114, label %dec_label_pc_44b0ff, !insn.addr !3984

dec_label_pc_44b0ff:                              ; preds = %dec_label_pc_44b0f8
  %30 = inttoptr i32 %ebx.0.reload to i8*, !insn.addr !3985
  call void @shift_bytes(i8* %buffer, i32 %buffer_count, i8* %30, i32 1), !insn.addr !3986
  store i8 48, i8* %30, align 1, !insn.addr !3987
  store i32 1, i32* %eax.0.reg2mem, !insn.addr !3988
  br label %dec_label_pc_44b114, !insn.addr !3988

dec_label_pc_44b114:                              ; preds = %dec_label_pc_44b0ff, %dec_label_pc_44b0f8
  %31 = icmp slt i32 %precision, 1
  br i1 %31, label %dec_label_pc_44b168, label %dec_label_pc_44b11a, !insn.addr !3989

dec_label_pc_44b11a:                              ; preds = %dec_label_pc_44b114
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %32 = add i32 %eax.0.reload, %ebx.0.reload, !insn.addr !3990
  %33 = inttoptr i32 %32 to i8*, !insn.addr !3991
  call void @shift_bytes(i8* %buffer, i32 %buffer_count, i8* %33, i32 1), !insn.addr !3992
  %34 = add i32 %3, 136, !insn.addr !3993
  %35 = inttoptr i32 %34 to i32*, !insn.addr !3993
  %36 = load i32, i32* %35, align 4, !insn.addr !3993
  %37 = inttoptr i32 %36 to i32*, !insn.addr !3994
  %38 = load i32, i32* %37, align 4, !insn.addr !3994
  %39 = inttoptr i32 %38 to i8*, !insn.addr !3995
  %40 = load i8, i8* %39, align 1, !insn.addr !3995
  store i8 %40, i8* %33, align 1, !insn.addr !3996
  %41 = load i32, i32* %7, align 4, !insn.addr !3997
  %42 = icmp slt i32 %41, 0, !insn.addr !3998
  %43 = icmp eq i1 %42, false, !insn.addr !3999
  br i1 %43, label %dec_label_pc_44b168, label %dec_label_pc_44b143, !insn.addr !3999

dec_label_pc_44b143:                              ; preds = %dec_label_pc_44b11a
  %44 = icmp eq i1 %g_fmt, false, !insn.addr !4000
  %45 = add i32 %32, 1, !insn.addr !4001
  %46 = sub i32 0, %41, !insn.addr !4002
  %47 = icmp eq i1 %44, false, !insn.addr !4003
  %48 = icmp slt i32 %46, %precision, !insn.addr !4004
  %or.cond8 = or i1 %47, %48
  %esi.0 = select i1 %or.cond8, i32 %46, i32 %precision
  %49 = inttoptr i32 %45 to i8*, !insn.addr !4005
  call void @shift_bytes(i8* %buffer, i32 %buffer_count, i8* %49, i32 %esi.0), !insn.addr !4006
  call void @memset(i8* %49, i8 48, i32 %esi.0), !insn.addr !4007
  br label %dec_label_pc_44b168, !insn.addr !4008

dec_label_pc_44b168:                              ; preds = %dec_label_pc_44b143, %dec_label_pc_44b11a, %dec_label_pc_44b114
  %50 = icmp eq i8 %2, 0, !insn.addr !4009
  br i1 %50, label %dec_label_pc_44b17b, label %dec_label_pc_44b171, !insn.addr !4010

dec_label_pc_44b171:                              ; preds = %dec_label_pc_44b168
  %51 = add i32 %4, 848, !insn.addr !4011
  %52 = inttoptr i32 %51 to i32*, !insn.addr !4011
  %53 = load i32, i32* %52, align 4, !insn.addr !4011
  %54 = and i32 %53, -3, !insn.addr !4011
  store i32 %54, i32* %52, align 4, !insn.addr !4011
  br label %dec_label_pc_44b17b, !insn.addr !4011

dec_label_pc_44b17b:                              ; preds = %dec_label_pc_44b171, %dec_label_pc_44b168
  ret i32 0, !insn.addr !4012
}

define i32 @fp_format_g(double* %argument, i8* %result_buffer, i32 %result_buffer_count, i8* %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i1 %capitals, i32 %min_exponent_digits, i32 %locale) local_unnamed_addr {
dec_label_pc_44b1b3:
  %eax.2.reg2mem = alloca i32, !insn.addr !4013
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i1 @__decompiler_undefined_function_6()
  %3 = ptrtoint i8* %result_buffer to i32
  %4 = ptrtoint double* %argument to i32
  %strflt_-16 = alloca %_strflt.438, align 8
  %stack_var_-20 = alloca i32, align 4
  %5 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !4014
  store i32 0, i32* %stack_var_-20, align 4, !insn.addr !4015
  %6 = select i1 %2, i32 -4, i32 4, !insn.addr !4015
  %7 = add i32 %6, %5, !insn.addr !4015
  %8 = inttoptr i32 %7 to i32*, !insn.addr !4016
  store i32 0, i32* %8, align 4, !insn.addr !4016
  %9 = add i32 %7, %6, !insn.addr !4016
  %10 = inttoptr i32 %9 to i32*, !insn.addr !4017
  store i32 0, i32* %10, align 4, !insn.addr !4017
  %11 = add i32 %4, 4, !insn.addr !4018
  %12 = inttoptr i32 %11 to i32*, !insn.addr !4018
  %13 = load i32, i32* %12, align 4, !insn.addr !4018
  %14 = bitcast double* %argument to i32*, !insn.addr !4019
  %15 = load i32, i32* %14, align 4, !insn.addr !4019
  %16 = ptrtoint i8* %scratch_buffer to i32, !insn.addr !4020
  %17 = call i32 @function_403b4d(i32 %15, i32 %13, i32 %precision, i32* nonnull %stack_var_-20, i32 %16, i32 %scratch_buffer_count, i32 %0, i32 %1), !insn.addr !4020
  %18 = load i32, i32* %stack_var_-20, align 4, !insn.addr !4021
  %19 = icmp eq i32 %18, 45, !insn.addr !4021
  %20 = zext i1 %19 to i32, !insn.addr !4022
  %21 = add i32 %20, %3, !insn.addr !4023
  %22 = icmp eq i32 %result_buffer_count, -1, !insn.addr !4024
  %23 = sub i32 %result_buffer_count, %20
  %spec.select = select i1 %22, i32 -1, i32 %23
  %24 = call i32 @function_402b9e(i32 %21, i32 %spec.select, i32 %precision, i32* nonnull %stack_var_-20), !insn.addr !4025
  %25 = icmp eq i32 %24, 0, !insn.addr !4026
  br i1 %25, label %dec_label_pc_44b21f, label %dec_label_pc_44b21a, !insn.addr !4027

dec_label_pc_44b21a:                              ; preds = %dec_label_pc_44b1b3
  store i8 0, i8* %result_buffer, align 1, !insn.addr !4028
  store i32 %24, i32* %eax.2.reg2mem, !insn.addr !4029
  br label %dec_label_pc_44b26f, !insn.addr !4029

dec_label_pc_44b21f:                              ; preds = %dec_label_pc_44b1b3
  %26 = bitcast i32* %stack_var_-20 to %_strflt*
  %27 = getelementptr inbounds %_strflt.438, %_strflt.438* %strflt_-16, i32 0, i32 0, !insn.addr !4030
  %28 = load i32, i32* %27, align 8, !insn.addr !4030
  %29 = add i32 %28, -1
  %30 = icmp sgt i32 %29, -5, !insn.addr !4031
  %31 = icmp slt i32 %29, %precision, !insn.addr !4032
  %or.cond = icmp eq i1 %30, %31
  br i1 %or.cond, label %dec_label_pc_44b23b, label %dec_label_pc_44b253, !insn.addr !4031

dec_label_pc_44b23b:                              ; preds = %dec_label_pc_44b21f
  %32 = call i32 @fp_format_f_internal(i8* %result_buffer, i32 %result_buffer_count, i32 %precision, %_strflt* nonnull %26, i1 true, i32 %locale), !insn.addr !4033
  store i32 %32, i32* %eax.2.reg2mem, !insn.addr !4034
  br label %dec_label_pc_44b26f, !insn.addr !4034

dec_label_pc_44b253:                              ; preds = %dec_label_pc_44b21f
  %33 = call i32 @fp_format_e_internal(i8* %result_buffer, i32 %result_buffer_count, i32 %precision, i1 %capitals, i32 %min_exponent_digits, %_strflt* nonnull %26, i1 true, i32 %locale), !insn.addr !4035
  store i32 %33, i32* %eax.2.reg2mem, !insn.addr !4036
  br label %dec_label_pc_44b26f, !insn.addr !4036

dec_label_pc_44b26f:                              ; preds = %dec_label_pc_44b253, %dec_label_pc_44b23b, %dec_label_pc_44b21a
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  ret i32 %eax.2.reload, !insn.addr !4037
}

define i32 @fp_format_nan_or_infinity(i32 %classification, i1 %is_negative, i8* %result_buffer, i32 %result_buffer_count, i1 %use_capitals) local_unnamed_addr {
dec_label_pc_44b2a4:
  %esi.0.reg2mem = alloca i32, !insn.addr !4038
  %edx.0.reg2mem = alloca i32, !insn.addr !4038
  %ecx.0.reg2mem = alloca i32, !insn.addr !4038
  %0 = select i1 %is_negative, i32 259, i32 4, !insn.addr !4039
  %1 = icmp ugt i32 %0, %result_buffer_count, !insn.addr !4040
  %2 = icmp eq i1 %1, false, !insn.addr !4041
  br i1 %2, label %dec_label_pc_44b2c5, label %dec_label_pc_44b2ba, !insn.addr !4041

dec_label_pc_44b2ba:                              ; preds = %dec_label_pc_44b2a4
  store i8 0, i8* %result_buffer, align 1, !insn.addr !4042
  ret i32 12, !insn.addr !4043

dec_label_pc_44b2c5:                              ; preds = %dec_label_pc_44b2a4
  %3 = ptrtoint i8* %result_buffer to i32, !insn.addr !4044
  store i32 %3, i32* %ecx.0.reg2mem, !insn.addr !4045
  store i32 %result_buffer_count, i32* %edx.0.reg2mem, !insn.addr !4045
  br i1 %is_negative, label %dec_label_pc_44b2cc, label %dec_label_pc_44b2d9, !insn.addr !4045

dec_label_pc_44b2cc:                              ; preds = %dec_label_pc_44b2c5
  store i8 45, i8* %result_buffer, align 1, !insn.addr !4046
  %4 = add i32 %3, 1, !insn.addr !4047
  %5 = inttoptr i32 %4 to i8*, !insn.addr !4048
  store i8 0, i8* %5, align 1, !insn.addr !4048
  %6 = icmp eq i32 %result_buffer_count, -1, !insn.addr !4049
  %7 = add i32 %result_buffer_count, -1
  %spec.select = select i1 %6, i32 -1, i32 %7
  store i32 %4, i32* %ecx.0.reg2mem
  store i32 %spec.select, i32* %edx.0.reg2mem
  br label %dec_label_pc_44b2d9

dec_label_pc_44b2d9:                              ; preds = %dec_label_pc_44b2cc, %dec_label_pc_44b2c5
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %8 = mul i32 %classification, 4, !insn.addr !4050
  %9 = select i1 %use_capitals, i32 508, i32 2, !insn.addr !4051
  %10 = add i32 %9, %8
  %11 = mul i32 %10, 4, !insn.addr !4052
  %12 = add i32 %11, add (i32 ptrtoint ([4 x [4 x i8*]]* @strings to i32), i32 -16), !insn.addr !4053
  %13 = inttoptr i32 %12 to i32*, !insn.addr !4053
  %14 = load i32, i32* %13, align 8, !insn.addr !4053
  store i32 %14, i32* %esi.0.reg2mem, !insn.addr !4054
  br label %dec_label_pc_44b2ff, !insn.addr !4054

dec_label_pc_44b2ff:                              ; preds = %dec_label_pc_44b2ff, %dec_label_pc_44b2d9
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %15 = inttoptr i32 %esi.0.reload to i8*, !insn.addr !4055
  %16 = load i8, i8* %15, align 1, !insn.addr !4055
  %17 = add i32 %esi.0.reload, 1, !insn.addr !4056
  %18 = icmp eq i8 %16, 0, !insn.addr !4057
  %19 = icmp eq i1 %18, false, !insn.addr !4058
  store i32 %17, i32* %esi.0.reg2mem, !insn.addr !4058
  br i1 %19, label %dec_label_pc_44b2ff, label %dec_label_pc_44b306, !insn.addr !4058

dec_label_pc_44b306:                              ; preds = %dec_label_pc_44b2ff
  %20 = sub i32 %esi.0.reload, %14, !insn.addr !4059
  %21 = icmp ult i32 %20, %edx.0.reload, !insn.addr !4060
  %22 = sext i1 %21 to i32, !insn.addr !4061
  %23 = add i32 %10, 1073741821, !insn.addr !4062
  %24 = add i32 %23, %22, !insn.addr !4063
  %25 = mul i32 %24, 4, !insn.addr !4064
  %26 = add i32 %25, ptrtoint ([4 x [4 x i8*]]* @strings to i32), !insn.addr !4064
  %27 = inttoptr i32 %26 to i32*, !insn.addr !4064
  %28 = load i32, i32* %27, align 4, !insn.addr !4064
  %29 = inttoptr i32 %28 to i8*, !insn.addr !4064
  %30 = inttoptr i32 %ecx.0.reload to i8*, !insn.addr !4065
  %31 = call i32 @strcpy_s(i8* %30, i32 %edx.0.reload, i8* %29), !insn.addr !4066
  %32 = icmp eq i32 %31, 0, !insn.addr !4067
  %33 = icmp eq i1 %32, false, !insn.addr !4068
  br i1 %33, label %dec_label_pc_44b32c, label %dec_label_pc_44b32a, !insn.addr !4068

dec_label_pc_44b32a:                              ; preds = %dec_label_pc_44b306
  ret i32 %31, !insn.addr !4069

dec_label_pc_44b32c:                              ; preds = %dec_label_pc_44b306
  %34 = call i32 @__invoke_watson(), !insn.addr !4070
  %35 = call i32 @__asm_int3(), !insn.addr !4071
  %36 = call i32 @__asm_int3(), !insn.addr !4072
  %37 = call i32 @__asm_int3(), !insn.addr !4073
  %38 = call i32 @__asm_int3(), !insn.addr !4074
  %39 = call i32 @__asm_int3(), !insn.addr !4075
  %40 = call i32 @__asm_int3(), !insn.addr !4076
  %41 = call i32 @__asm_int3(), !insn.addr !4077
  %42 = call i32 @__asm_int3(), !insn.addr !4078
  %43 = call i32 @__asm_int3(), !insn.addr !4079
  %44 = call i32 @__asm_int3(), !insn.addr !4080
  %45 = call i32 @__asm_int3(), !insn.addr !4081
  %46 = call i32 @__asm_int3(), !insn.addr !4082
  %47 = call i32 @__asm_int3(), !insn.addr !4083
  %48 = call i32 @__asm_int3(), !insn.addr !4084
  %49 = call i32 @__asm_int3(), !insn.addr !4085
  %50 = call i32 @__asm_int3(), !insn.addr !4086
  %51 = call i32 @__asm_int3(), !insn.addr !4087
  %52 = call i32 @__asm_int3(), !insn.addr !4088
  %53 = call i32 @__asm_int3(), !insn.addr !4089
  %54 = call i32 @__asm_int3(), !insn.addr !4090
  %55 = call i32 @__asm_int3(), !insn.addr !4091
  %56 = call i32 @__asm_int3(), !insn.addr !4092
  %57 = call i32 @__asm_int3(), !insn.addr !4093
  %58 = call i32 @__asm_int3(), !insn.addr !4094
  %59 = call i32 @__asm_int3(), !insn.addr !4095
  %60 = call i32 @__asm_int3(), !insn.addr !4096
  %61 = call i32 @__asm_int3(), !insn.addr !4097
  %62 = call i32 @__asm_int3(), !insn.addr !4098
  %63 = call i32 @__asm_int3(), !insn.addr !4099
  %64 = call i32 @__asm_int3(), !insn.addr !4100
  %65 = call i32 @__asm_int3(), !insn.addr !4101
  %66 = call i32 @__asm_int3(), !insn.addr !4102
  %67 = call i32 @__asm_int3(), !insn.addr !4103
  %68 = call i32 @__asm_int3(), !insn.addr !4104
  %69 = call i32 @__asm_int3(), !insn.addr !4105
  %70 = call i32 @__asm_int3(), !insn.addr !4106
  %71 = call i32 @__asm_int3(), !insn.addr !4107
  %72 = call i32 @__asm_int3(), !insn.addr !4108
  ret i32 %72, !insn.addr !4108
}

define void @shift_bytes(i8* %buffer_base, i32 %buffer_count, i8* %string, i32 %distance) local_unnamed_addr {
dec_label_pc_44b35e:
  %ecx.0.reg2mem = alloca i32, !insn.addr !4109
  %0 = icmp eq i32 %buffer_count, 0, !insn.addr !4110
  br i1 %0, label %dec_label_pc_44b390, label %dec_label_pc_44b36a, !insn.addr !4111

dec_label_pc_44b36a:                              ; preds = %dec_label_pc_44b35e
  %1 = ptrtoint i8* %buffer_base to i32, !insn.addr !4112
  store i32 %1, i32* %ecx.0.reg2mem, !insn.addr !4113
  br label %dec_label_pc_44b374, !insn.addr !4113

dec_label_pc_44b374:                              ; preds = %dec_label_pc_44b374, %dec_label_pc_44b36a
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %2 = inttoptr i32 %ecx.0.reload to i8*, !insn.addr !4114
  %3 = load i8, i8* %2, align 1, !insn.addr !4114
  %4 = add i32 %ecx.0.reload, 1, !insn.addr !4115
  %5 = icmp eq i8 %3, 0, !insn.addr !4116
  %6 = icmp eq i1 %5, false, !insn.addr !4117
  store i32 %4, i32* %ecx.0.reg2mem, !insn.addr !4117
  br i1 %6, label %dec_label_pc_44b374, label %dec_label_pc_44b37b, !insn.addr !4117

dec_label_pc_44b37b:                              ; preds = %dec_label_pc_44b374
  %7 = sub i32 1, %1, !insn.addr !4118
  %8 = add i32 %7, %ecx.0.reload, !insn.addr !4119
  %9 = add i32 %1, %buffer_count, !insn.addr !4120
  %10 = inttoptr i32 %9 to i8*, !insn.addr !4121
  call void @memmove(i8* %10, i8* %buffer_base, i32 %8), !insn.addr !4122
  br label %dec_label_pc_44b390, !insn.addr !4123

dec_label_pc_44b390:                              ; preds = %dec_label_pc_44b37b, %dec_label_pc_44b35e
  ret void, !insn.addr !4124
}

define i32 @__acrt_fp_format(double* %value, i8* %result_buffer, i32 %result_buffer_count, i8* %scratch_buffer, i32 %scratch_buffer_count, i32 %format, i32 %precision, i64 %options, i32 %locale) local_unnamed_addr {
dec_label_pc_44b3ac:
  %eax.0.reg2mem = alloca i32, !insn.addr !4125
  %storemerge14.in.reg2mem = alloca i32, !insn.addr !4125
  %stack_var_-8.0.reg2mem = alloca i32, !insn.addr !4125
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @__decompiler_undefined_function_0()
  %4 = icmp eq i8* %result_buffer, null, !insn.addr !4126
  %5 = icmp eq i32 %result_buffer_count, 0, !insn.addr !4127
  %or.cond = or i1 %4, %5
  %6 = icmp eq i8* %scratch_buffer, null, !insn.addr !4128
  %or.cond19 = or i1 %or.cond, %6
  %7 = icmp eq i32 %scratch_buffer_count, 0, !insn.addr !4129
  %or.cond21 = or i1 %7, %or.cond19
  br i1 %or.cond21, label %dec_label_pc_44b3bc, label %dec_label_pc_44b3e4, !insn.addr !4130

dec_label_pc_44b3bc:                              ; preds = %dec_label_pc_44b3ac
  %8 = call i32* @_errno(), !insn.addr !4131
  store i32 22, i32* %8, align 4, !insn.addr !4132
  call void @_invalid_parameter_noinfo(), !insn.addr !4133
  store i32 22, i32* %eax.0.reg2mem, !insn.addr !4134
  br label %dec_label_pc_44b4e3, !insn.addr !4134

dec_label_pc_44b3e4:                              ; preds = %dec_label_pc_44b3ac
  switch i32 %format, label %dec_label_pc_44b3f6 [
    i32 70, label %dec_label_pc_44b3ff
    i32 69, label %dec_label_pc_44b3ff
    i32 65, label %dec_label_pc_44b3ff
  ]

dec_label_pc_44b3f6:                              ; preds = %dec_label_pc_44b3e4
  %9 = icmp eq i32 %format, 71, !insn.addr !4135
  %10 = icmp eq i1 %9, false, !insn.addr !4136
  store i32 0, i32* %stack_var_-8.0.reg2mem, !insn.addr !4136
  br i1 %10, label %dec_label_pc_44b403, label %dec_label_pc_44b3ff, !insn.addr !4136

dec_label_pc_44b3ff:                              ; preds = %dec_label_pc_44b3e4, %dec_label_pc_44b3e4, %dec_label_pc_44b3e4, %dec_label_pc_44b3f6
  store i32 1, i32* %stack_var_-8.0.reg2mem, !insn.addr !4137
  br label %dec_label_pc_44b403, !insn.addr !4137

dec_label_pc_44b403:                              ; preds = %dec_label_pc_44b3ff, %dec_label_pc_44b3f6
  %stack_var_-8.0.reload = load i32, i32* %stack_var_-8.0.reg2mem
  %11 = and i64 %options, 8
  %12 = icmp eq i64 %11, 0, !insn.addr !4138
  %13 = icmp eq i1 %12, false, !insn.addr !4139
  br i1 %13, label %dec_label_pc_44b44b, label %dec_label_pc_44b412, !insn.addr !4139

dec_label_pc_44b412:                              ; preds = %dec_label_pc_44b403
  %14 = ptrtoint double* %value to i32, !insn.addr !4140
  %15 = call i32 @function_4030e9(i32 %14, i32 %2, i32 %0, i32 %1, i32 %3), !insn.addr !4141
  %16 = icmp eq i32 %15, 0, !insn.addr !4142
  br i1 %16, label %dec_label_pc_44b44b, label %dec_label_pc_44b41d, !insn.addr !4143

dec_label_pc_44b41d:                              ; preds = %dec_label_pc_44b412
  %17 = add i32 %14, 4, !insn.addr !4144
  %18 = inttoptr i32 %17 to i32*, !insn.addr !4144
  %19 = load i32, i32* %18, align 4, !insn.addr !4144
  %20 = icmp slt i32 %19, 0, !insn.addr !4145
  %21 = icmp ne i32 %stack_var_-8.0.reload, 0, !insn.addr !4146
  %22 = call i32 @fp_format_nan_or_infinity(i32 %15, i1 %20, i8* nonnull %result_buffer, i32 %result_buffer_count, i1 %21), !insn.addr !4146
  store i32 %22, i32* %eax.0.reg2mem, !insn.addr !4147
  br label %dec_label_pc_44b4e3, !insn.addr !4147

dec_label_pc_44b44b:                              ; preds = %dec_label_pc_44b412, %dec_label_pc_44b403
  %23 = and i64 %options, 16
  %24 = icmp eq i64 %23, 0, !insn.addr !4148
  %25 = select i1 %24, i32 2, i32 3, !insn.addr !4149
  %26 = icmp sgt i32 %format, 97, !insn.addr !4150
  br i1 %26, label %dec_label_pc_44b48a, label %dec_label_pc_44b462, !insn.addr !4150

dec_label_pc_44b462:                              ; preds = %dec_label_pc_44b44b
  switch i32 %format, label %dec_label_pc_44b469 [
    i32 97, label %dec_label_pc_44b46e
    i32 65, label %dec_label_pc_44b46e
  ]

dec_label_pc_44b469:                              ; preds = %dec_label_pc_44b462
  %27 = add i32 %format, -69, !insn.addr !4151
  store i32 %27, i32* %storemerge14.in.reg2mem, !insn.addr !4152
  br label %dec_label_pc_44b48d, !insn.addr !4152

dec_label_pc_44b46e:                              ; preds = %dec_label_pc_44b462, %dec_label_pc_44b462
  %28 = icmp ne i32 %stack_var_-8.0.reload, 0, !insn.addr !4153
  %29 = call i32 @fp_format_a(double* %value, i8* nonnull %result_buffer, i32 %result_buffer_count, i8* nonnull %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i1 %28, i32 %25, i32 %locale), !insn.addr !4153
  store i32 %29, i32* %eax.0.reg2mem, !insn.addr !4154
  br label %dec_label_pc_44b4e3, !insn.addr !4154

dec_label_pc_44b48a:                              ; preds = %dec_label_pc_44b44b
  %30 = add i32 %format, -101, !insn.addr !4155
  store i32 %30, i32* %storemerge14.in.reg2mem, !insn.addr !4155
  br label %dec_label_pc_44b48d, !insn.addr !4155

dec_label_pc_44b48d:                              ; preds = %dec_label_pc_44b48a, %dec_label_pc_44b469
  %storemerge14.in.reload = load i32, i32* %storemerge14.in.reg2mem
  switch i32 %storemerge14.in.reload, label %dec_label_pc_44b497 [
    i32 0, label %dec_label_pc_44b4c8
    i32 1, label %dec_label_pc_44b4b0
  ]

dec_label_pc_44b497:                              ; preds = %dec_label_pc_44b48d
  %31 = icmp ne i32 %stack_var_-8.0.reload, 0, !insn.addr !4156
  %32 = call i32 @fp_format_g(double* %value, i8* nonnull %result_buffer, i32 %result_buffer_count, i8* nonnull %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i1 %31, i32 %25, i32 %locale), !insn.addr !4156
  store i32 %32, i32* %eax.0.reg2mem, !insn.addr !4157
  br label %dec_label_pc_44b4e3, !insn.addr !4157

dec_label_pc_44b4b0:                              ; preds = %dec_label_pc_44b48d
  %33 = call i32 @fp_format_f(double* %value, i8* nonnull %result_buffer, i32 %result_buffer_count, i8* nonnull %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i32 %locale), !insn.addr !4158
  store i32 %33, i32* %eax.0.reg2mem, !insn.addr !4159
  br label %dec_label_pc_44b4e3, !insn.addr !4159

dec_label_pc_44b4c8:                              ; preds = %dec_label_pc_44b48d
  %34 = icmp ne i32 %stack_var_-8.0.reload, 0, !insn.addr !4160
  %35 = call i32 @fp_format_e(double* %value, i8* nonnull %result_buffer, i32 %result_buffer_count, i8* nonnull %scratch_buffer, i32 %scratch_buffer_count, i32 %precision, i1 %34, i32 %25, i32 %locale), !insn.addr !4160
  store i32 %35, i32* %eax.0.reg2mem, !insn.addr !4160
  br label %dec_label_pc_44b4e3, !insn.addr !4160

dec_label_pc_44b4e3:                              ; preds = %dec_label_pc_44b41d, %dec_label_pc_44b4b0, %dec_label_pc_44b4c8, %dec_label_pc_44b497, %dec_label_pc_44b46e, %dec_label_pc_44b3bc
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !4161
}

define i32 @_fileno(i32 %public_stream) local_unnamed_addr {
dec_label_pc_44b7cf:
  %0 = icmp eq i32 %public_stream, 0, !insn.addr !4162
  %1 = icmp eq i1 %0, false, !insn.addr !4163
  br i1 %1, label %dec_label_pc_44b7f0, label %dec_label_pc_44b7db, !insn.addr !4163

dec_label_pc_44b7db:                              ; preds = %dec_label_pc_44b7cf
  %2 = call i32* @_errno(), !insn.addr !4164
  store i32 22, i32* %2, align 4, !insn.addr !4165
  call void @_invalid_parameter_noinfo(), !insn.addr !4166
  ret i32 -1, !insn.addr !4167

dec_label_pc_44b7f0:                              ; preds = %dec_label_pc_44b7cf
  %3 = add i32 %public_stream, 16, !insn.addr !4168
  %4 = inttoptr i32 %3 to i32*, !insn.addr !4168
  %5 = load i32, i32* %4, align 4, !insn.addr !4168
  ret i32 %5, !insn.addr !4169
}

define i32 @_fputc_nolock(i32 %c, i32 %public_stream) local_unnamed_addr {
dec_label_pc_44b7ff:
  %0 = add i32 %public_stream, 8, !insn.addr !4170
  %1 = inttoptr i32 %0 to i32*, !insn.addr !4170
  %2 = load i32, i32* %1, align 4, !insn.addr !4170
  %3 = add i32 %2, -1, !insn.addr !4170
  %4 = icmp slt i32 %3, 0, !insn.addr !4170
  store i32 %3, i32* %1, align 4, !insn.addr !4170
  %5 = icmp eq i1 %4, false, !insn.addr !4171
  br i1 %5, label %dec_label_pc_44b81a, label %dec_label_pc_44b80d, !insn.addr !4171

dec_label_pc_44b80d:                              ; preds = %dec_label_pc_44b7ff
  %6 = call i32 @function_40124e(), !insn.addr !4172
  ret i32 %6, !insn.addr !4173

dec_label_pc_44b81a:                              ; preds = %dec_label_pc_44b7ff
  %7 = inttoptr i32 %public_stream to i32*, !insn.addr !4174
  %8 = load i32, i32* %7, align 4, !insn.addr !4174
  %9 = and i32 %c, 255, !insn.addr !4175
  %10 = trunc i32 %c to i8, !insn.addr !4176
  %11 = inttoptr i32 %8 to i8*, !insn.addr !4176
  store i8 %10, i8* %11, align 1, !insn.addr !4176
  %12 = load i32, i32* %7, align 4, !insn.addr !4177
  %13 = add i32 %12, 1, !insn.addr !4177
  store i32 %13, i32* %7, align 4, !insn.addr !4177
  ret i32 %9, !insn.addr !4178
}

define i1 @__acrt_stdio_begin_temporary_buffering_nolock(i32 %public_stream) local_unnamed_addr {
dec_label_pc_44ba34:
  %storemerge.reg2mem = alloca i1, !insn.addr !4179
  %eax.1.reg2mem = alloca i32, !insn.addr !4179
  %storemerge1.reg2mem = alloca i32, !insn.addr !4179
  %0 = call i32 @_fileno(i32 %public_stream), !insn.addr !4180
  %1 = call i32 @_isatty(i32 %0), !insn.addr !4181
  %2 = icmp eq i32 %1, 0, !insn.addr !4182
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !4183
  br i1 %2, label %dec_label_pc_44bae2, label %dec_label_pc_44ba55, !insn.addr !4183

dec_label_pc_44ba55:                              ; preds = %dec_label_pc_44ba34
  %3 = call i32* @__acrt_iob_func(i32 1), !insn.addr !4184
  %4 = ptrtoint i32* %3 to i32, !insn.addr !4184
  %5 = icmp eq i32 %4, %public_stream, !insn.addr !4185
  %6 = icmp eq i1 %5, false, !insn.addr !4186
  store i32 ptrtoint (i32* @__acrt_stdout_buffer to i32), i32* %storemerge1.reg2mem, !insn.addr !4186
  br i1 %6, label %dec_label_pc_44ba6b, label %dec_label_pc_44ba7b, !insn.addr !4186

dec_label_pc_44ba6b:                              ; preds = %dec_label_pc_44ba55
  %7 = call i32* @__acrt_iob_func(i32 2), !insn.addr !4187
  %8 = ptrtoint i32* %7 to i32, !insn.addr !4187
  %9 = icmp eq i32 %8, %public_stream, !insn.addr !4188
  %10 = icmp eq i1 %9, false, !insn.addr !4189
  store i32 ptrtoint (i32* @__acrt_stderr_buffer to i32), i32* %storemerge1.reg2mem, !insn.addr !4189
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !4189
  br i1 %10, label %dec_label_pc_44bae2, label %dec_label_pc_44ba7b, !insn.addr !4189

dec_label_pc_44ba7b:                              ; preds = %dec_label_pc_44ba6b, %dec_label_pc_44ba55
  %11 = load i32, i32* @_cflush, align 4, !insn.addr !4190
  %12 = add i32 %11, 1, !insn.addr !4190
  store i32 %12, i32* @_cflush, align 4, !insn.addr !4190
  %13 = add i32 %public_stream, 12, !insn.addr !4191
  %14 = inttoptr i32 %13 to i32*, !insn.addr !4192
  %15 = load i32, i32* %14, align 4, !insn.addr !4192
  %16 = and i32 %15, 1216, !insn.addr !4193
  %17 = icmp eq i32 %16, 0, !insn.addr !4193
  %18 = icmp eq i1 %17, false, !insn.addr !4194
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !4194
  br i1 %18, label %dec_label_pc_44bae2, label %dec_label_pc_44ba8e, !insn.addr !4194

dec_label_pc_44ba8e:                              ; preds = %dec_label_pc_44ba7b
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %19 = or i32 %15, 642, !insn.addr !4195
  store i32 %19, i32* %14, align 4, !insn.addr !4195
  %20 = inttoptr i32 %storemerge1.reload to i32*, !insn.addr !4196
  %21 = load i32, i32* %20, align 4, !insn.addr !4196
  %22 = icmp eq i32 %21, 0, !insn.addr !4197
  %23 = icmp eq i1 %22, false, !insn.addr !4198
  store i32 %21, i32* %eax.1.reg2mem, !insn.addr !4198
  br i1 %23, label %dec_label_pc_44bac9, label %dec_label_pc_44ba9c, !insn.addr !4198

dec_label_pc_44ba9c:                              ; preds = %dec_label_pc_44ba8e
  %24 = call i32* @_malloc_base(i32 4096), !insn.addr !4199
  %25 = ptrtoint i32* %24 to i32, !insn.addr !4199
  store i32 %25, i32* %20, align 4, !insn.addr !4200
  call void @_free_base(i32* null), !insn.addr !4201
  %26 = load i32, i32* %20, align 4, !insn.addr !4202
  %27 = icmp eq i32 %26, 0, !insn.addr !4203
  %28 = icmp eq i1 %27, false, !insn.addr !4204
  store i32 %26, i32* %eax.1.reg2mem, !insn.addr !4204
  br i1 %28, label %dec_label_pc_44bac9, label %dec_label_pc_44bab7, !insn.addr !4204

dec_label_pc_44bab7:                              ; preds = %dec_label_pc_44ba9c
  %29 = add i32 %public_stream, 20, !insn.addr !4205
  %30 = add i32 %public_stream, 8, !insn.addr !4206
  %31 = inttoptr i32 %30 to i32*, !insn.addr !4206
  store i32 2, i32* %31, align 4, !insn.addr !4206
  %32 = add i32 %public_stream, 4, !insn.addr !4207
  %33 = inttoptr i32 %32 to i32*, !insn.addr !4207
  store i32 %29, i32* %33, align 4, !insn.addr !4207
  %34 = inttoptr i32 %public_stream to i32*, !insn.addr !4208
  store i32 %29, i32* %34, align 4, !insn.addr !4208
  %35 = add i32 %public_stream, 24, !insn.addr !4209
  %36 = inttoptr i32 %35 to i32*, !insn.addr !4209
  store i32 2, i32* %36, align 4, !insn.addr !4209
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !4209
  br label %dec_label_pc_44bae2, !insn.addr !4209

dec_label_pc_44bac9:                              ; preds = %dec_label_pc_44ba9c, %dec_label_pc_44ba8e
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %37 = add i32 %public_stream, 4, !insn.addr !4210
  %38 = inttoptr i32 %37 to i32*, !insn.addr !4210
  store i32 %eax.1.reload, i32* %38, align 4, !insn.addr !4210
  %39 = load i32, i32* %20, align 4, !insn.addr !4211
  %40 = inttoptr i32 %public_stream to i32*, !insn.addr !4212
  store i32 %39, i32* %40, align 4, !insn.addr !4212
  %41 = add i32 %public_stream, 8, !insn.addr !4213
  %42 = inttoptr i32 %41 to i32*, !insn.addr !4213
  store i32 4096, i32* %42, align 4, !insn.addr !4213
  %43 = add i32 %public_stream, 24, !insn.addr !4214
  %44 = inttoptr i32 %43 to i32*, !insn.addr !4214
  store i32 4096, i32* %44, align 4, !insn.addr !4214
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !4215
  br label %dec_label_pc_44bae2, !insn.addr !4215

dec_label_pc_44bae2:                              ; preds = %dec_label_pc_44ba34, %dec_label_pc_44ba6b, %dec_label_pc_44ba7b, %dec_label_pc_44bab7, %dec_label_pc_44bac9
  %storemerge.reload = load i1, i1* %storemerge.reg2mem
  ret i1 %storemerge.reload, !insn.addr !4216
}

define void @__acrt_stdio_end_temporary_buffering_nolock(i1 %flag, i32 %public_stream) local_unnamed_addr {
dec_label_pc_44bb13:
  %0 = icmp eq i1 %flag, false, !insn.addr !4217
  br i1 %0, label %dec_label_pc_44bb4b, label %dec_label_pc_44bb1e, !insn.addr !4218

dec_label_pc_44bb1e:                              ; preds = %dec_label_pc_44bb13
  %1 = add i32 %public_stream, 12, !insn.addr !4219
  %2 = inttoptr i32 %1 to i32*, !insn.addr !4220
  %3 = load i32, i32* %2, align 4, !insn.addr !4220
  %4 = and i32 %3, 512
  %5 = icmp eq i32 %4, 0, !insn.addr !4221
  br i1 %5, label %dec_label_pc_44bb4b, label %dec_label_pc_44bb30, !insn.addr !4222

dec_label_pc_44bb30:                              ; preds = %dec_label_pc_44bb1e
  %6 = call i32 @function_402f59(), !insn.addr !4223
  %7 = load i32, i32* %2, align 4, !insn.addr !4224
  %8 = and i32 %7, -641, !insn.addr !4224
  store i32 %8, i32* %2, align 4, !insn.addr !4224
  %9 = add i32 %public_stream, 24, !insn.addr !4225
  %10 = inttoptr i32 %9 to i32*, !insn.addr !4225
  store i32 0, i32* %10, align 4, !insn.addr !4225
  %11 = add i32 %public_stream, 4, !insn.addr !4226
  %12 = inttoptr i32 %11 to i32*, !insn.addr !4226
  store i32 0, i32* %12, align 4, !insn.addr !4226
  %13 = inttoptr i32 %public_stream to i32*, !insn.addr !4227
  store i32 0, i32* %13, align 4, !insn.addr !4227
  br label %dec_label_pc_44bb4b, !insn.addr !4227

dec_label_pc_44bb4b:                              ; preds = %dec_label_pc_44bb1e, %dec_label_pc_44bb30, %dec_label_pc_44bb13
  ret void, !insn.addr !4228
}

define i16* @__pctype_func() local_unnamed_addr {
dec_label_pc_44bb89:
  %stack_var_-8 = alloca i32, align 4
  %0 = call i32 @___acrt_getptd(), !insn.addr !4229
  %1 = add i32 %0, 76, !insn.addr !4230
  %2 = inttoptr i32 %1 to i32*, !insn.addr !4230
  %3 = load i32, i32* %2, align 4, !insn.addr !4230
  store i32 %3, i32* %stack_var_-8, align 4, !insn.addr !4231
  %4 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !4232
  %5 = call i32 @function_40308a(i32 %0, i32 %4), !insn.addr !4233
  %6 = load i32, i32* %stack_var_-8, align 4, !insn.addr !4234
  %7 = inttoptr i32 %6 to i32*, !insn.addr !4235
  %8 = load i32, i32* %7, align 4, !insn.addr !4235
  %9 = inttoptr i32 %8 to i16*, !insn.addr !4236
  ret i16* %9, !insn.addr !4236
}

define i32 @_isctype_l(i32 %c, i32 %mask, i32 %locale) local_unnamed_addr {
dec_label_pc_44bbfb:
  %0 = call i8 @__decompiler_undefined_function_7()
  %character_type_-16 = alloca [3 x i16], align 2
  %buffer_-20 = alloca [3 x i8], align 1
  %locale_update_-32 = alloca i32, align 4
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @function_403d78(i32 %locale), !insn.addr !4237
  %c.off = add i32 %c, 1
  %4 = icmp ugt i32 %c.off, 256
  br i1 %4, label %dec_label_pc_44bc33, label %dec_label_pc_44bca7, !insn.addr !4238

dec_label_pc_44bc33:                              ; preds = %dec_label_pc_44bbfb
  %5 = sdiv i32 %c, 256, !insn.addr !4239
  %6 = inttoptr i32 %1 to i32*, !insn.addr !4240
  %7 = load i32, i32* %6, align 4, !insn.addr !4240
  %8 = mul i32 %5, 2, !insn.addr !4241
  %9 = and i32 %8, 510, !insn.addr !4242
  %10 = add i32 %7, %9, !insn.addr !4242
  %11 = inttoptr i32 %10 to i16*, !insn.addr !4242
  %12 = load i16, i16* %11, align 2, !insn.addr !4242
  %13 = icmp sgt i16 %12, -1, !insn.addr !4243
  %14 = trunc i32 %5 to i8
  %15 = insertvalue [3 x i8] undef, i8 %14, 0
  %16 = trunc i32 %c to i8
  %17 = insertvalue [3 x i8] undef, i8 %16, 0
  %storemerge = select i1 %13, [3 x i8] %17, [3 x i8] %15
  %storemerge3 = select i1 %13, i32 1, i32 2
  store [3 x i8] %storemerge, [3 x i8]* %buffer_-20, align 1
  store [3 x i16] [i16 0, i16 undef, i16 undef], [3 x i16]* %character_type_-16, align 2, !insn.addr !4244
  %18 = add i32 %1, 8, !insn.addr !4245
  %19 = inttoptr i32 %18 to i32*, !insn.addr !4245
  %20 = load i32, i32* %19, align 4, !insn.addr !4245
  %21 = getelementptr inbounds [3 x i16], [3 x i16]* %character_type_-16, i32 0, i32 0
  %22 = getelementptr inbounds [3 x i8], [3 x i8]* %buffer_-20, i32 0, i32 0
  %23 = ptrtoint i32* %locale_update_-32 to i32, !insn.addr !4246
  %24 = call i32 @function_4011c2(i32 %23, i32 1, i8* nonnull %22, i32 %storemerge3, i16* nonnull %21, i32 %20, i32 1), !insn.addr !4247
  %25 = icmp eq i32 %24, 0, !insn.addr !4248
  %26 = icmp eq i1 %25, false, !insn.addr !4249
  br i1 %26, label %dec_label_pc_44bca7, label %dec_label_pc_44bc90, !insn.addr !4249

dec_label_pc_44bc90:                              ; preds = %dec_label_pc_44bc33
  %27 = trunc i32 %24 to i8, !insn.addr !4250
  %28 = icmp eq i8 %0, %27, !insn.addr !4250
  br i1 %28, label %dec_label_pc_44bcba, label %dec_label_pc_44bc95, !insn.addr !4251

dec_label_pc_44bc95:                              ; preds = %dec_label_pc_44bc90
  %29 = add i32 %2, 848, !insn.addr !4252
  %30 = inttoptr i32 %29 to i32*, !insn.addr !4252
  %31 = load i32, i32* %30, align 4, !insn.addr !4252
  %32 = and i32 %31, -3, !insn.addr !4252
  store i32 %32, i32* %30, align 4, !insn.addr !4252
  br label %dec_label_pc_44bcba, !insn.addr !4252

dec_label_pc_44bca7:                              ; preds = %dec_label_pc_44bc33, %dec_label_pc_44bbfb
  %33 = icmp eq i8 %0, 0, !insn.addr !4253
  br i1 %33, label %dec_label_pc_44bcba, label %dec_label_pc_44bcb0, !insn.addr !4254

dec_label_pc_44bcb0:                              ; preds = %dec_label_pc_44bca7
  %34 = add i32 %2, 848, !insn.addr !4255
  %35 = inttoptr i32 %34 to i32*, !insn.addr !4255
  %36 = load i32, i32* %35, align 4, !insn.addr !4255
  %37 = and i32 %36, -3, !insn.addr !4255
  store i32 %37, i32* %35, align 4, !insn.addr !4255
  br label %dec_label_pc_44bcba, !insn.addr !4255

dec_label_pc_44bcba:                              ; preds = %dec_label_pc_44bc90, %dec_label_pc_44bc95, %dec_label_pc_44bcb0, %dec_label_pc_44bca7
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !4256
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !4257
}

define i32 @"__crt_seh_guarded_call<int>::operator()<<lambda_218ce3db14220d0be481dae8ef3383b6>,<lambda_628dfdc04ba53c8bfc02c9951375f3f5> &,<lambda_57dc472bd5c9d5f3b2cbca59b8a843ae> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_44ce43:
  %storemerge.reg2mem = alloca i32, !insn.addr !4258
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a6f8, i32 12), !insn.addr !4259
  %2 = add i32 %0, -28, !insn.addr !4260
  %3 = inttoptr i32 %2 to i32*, !insn.addr !4260
  store i32 0, i32* %3, align 4, !insn.addr !4260
  %4 = call i32 @function_40132f(), !insn.addr !4261
  %5 = add i32 %0, -4, !insn.addr !4262
  %6 = inttoptr i32 %5 to i32*, !insn.addr !4262
  store i32 0, i32* %6, align 4, !insn.addr !4262
  %7 = add i32 %0, 12, !insn.addr !4263
  %8 = inttoptr i32 %7 to i32*, !insn.addr !4263
  %9 = load i32, i32* %8, align 4, !insn.addr !4263
  %10 = inttoptr i32 %9 to i32*, !insn.addr !4264
  %11 = load i32, i32* %10, align 4, !insn.addr !4264
  %12 = inttoptr i32 %11 to i32*, !insn.addr !4265
  %13 = load i32, i32* %12, align 4, !insn.addr !4265
  %14 = sdiv i32 %13, 64, !insn.addr !4266
  %15 = and i32 %13, 63, !insn.addr !4267
  %narrow = mul nuw nsw i32 %15, 56
  %16 = mul i32 %14, 4, !insn.addr !4268
  %17 = add i32 %16, ptrtoint (i32* @__pioinfo to i32), !insn.addr !4268
  %18 = inttoptr i32 %17 to i32*, !insn.addr !4268
  %19 = load i32, i32* %18, align 4, !insn.addr !4268
  %20 = add i32 %19, 40, !insn.addr !4269
  %21 = add i32 %20, %narrow, !insn.addr !4269
  %22 = inttoptr i32 %21 to i8*, !insn.addr !4269
  %23 = load i8, i8* %22, align 1, !insn.addr !4269
  %24 = and i8 %23, 1, !insn.addr !4269
  %25 = icmp eq i8 %24, 0, !insn.addr !4269
  br i1 %25, label %dec_label_pc_44ce8f, label %dec_label_pc_44ce84, !insn.addr !4270

dec_label_pc_44ce84:                              ; preds = %dec_label_pc_44ce43
  %26 = call i32 @_close_nolock(i32 %13), !insn.addr !4271
  store i32 %26, i32* %storemerge.reg2mem, !insn.addr !4272
  br label %dec_label_pc_44ce9d, !insn.addr !4272

dec_label_pc_44ce8f:                              ; preds = %dec_label_pc_44ce43
  %27 = call i32* @_errno(), !insn.addr !4273
  store i32 9, i32* %27, align 4, !insn.addr !4274
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !4275
  br label %dec_label_pc_44ce9d, !insn.addr !4275

dec_label_pc_44ce9d:                              ; preds = %dec_label_pc_44ce8f, %dec_label_pc_44ce84
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  store i32 %storemerge.reload, i32* %3, align 4, !insn.addr !4276
  store i32 -2, i32* %6, align 4, !insn.addr !4277
  %28 = call i32 @function_44cec3(), !insn.addr !4278
  %29 = add i32 %0, -16, !insn.addr !4279
  %30 = inttoptr i32 %29 to i32*, !insn.addr !4279
  %31 = load i32, i32* %30, align 4, !insn.addr !4279
  call void @__writefsdword(i32 0, i32 %31), !insn.addr !4280
  ret i32 %storemerge.reload, !insn.addr !4281
}

define i32 @function_44cec3() local_unnamed_addr {
dec_label_pc_44cec3:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !4282
  %2 = inttoptr i32 %1 to i32*, !insn.addr !4282
  %3 = load i32, i32* %2, align 4, !insn.addr !4282
  %4 = inttoptr i32 %3 to i32*, !insn.addr !4283
  %5 = load i32, i32* %4, align 4, !insn.addr !4283
  %6 = call i32 @function_4011db(i32 %5), !insn.addr !4284
  ret i32 %6, !insn.addr !4285
}

define i32 @_close(i32 %fh) local_unnamed_addr {
dec_label_pc_44d042:
  %storemerge.reg2mem = alloca i32, !insn.addr !4286
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %fh, i32* %stack_var_4, align 4
  %stack_var_-20 = alloca i32, align 4
  %1 = icmp eq i32 %fh, -2, !insn.addr !4287
  %2 = icmp eq i1 %1, false, !insn.addr !4288
  br i1 %2, label %dec_label_pc_44d068, label %dec_label_pc_44d053, !insn.addr !4288

dec_label_pc_44d053:                              ; preds = %dec_label_pc_44d042
  %3 = call i32* @__doserrno(), !insn.addr !4289
  store i32 0, i32* %3, align 4, !insn.addr !4290
  %4 = call i32* @_errno(), !insn.addr !4291
  store i32 9, i32* %4, align 4, !insn.addr !4292
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !4293
  br label %dec_label_pc_44d0cc, !insn.addr !4293

dec_label_pc_44d068:                              ; preds = %dec_label_pc_44d042
  %5 = icmp slt i32 %fh, 0, !insn.addr !4294
  br i1 %5, label %dec_label_pc_44d0b1, label %dec_label_pc_44d06c, !insn.addr !4295

dec_label_pc_44d06c:                              ; preds = %dec_label_pc_44d068
  %6 = load i32, i32* @_nhandle, align 4, !insn.addr !4296
  %7 = icmp ugt i32 %6, %fh, !insn.addr !4296
  %8 = icmp eq i1 %7, false, !insn.addr !4297
  br i1 %8, label %dec_label_pc_44d0b1, label %dec_label_pc_44d074, !insn.addr !4297

dec_label_pc_44d074:                              ; preds = %dec_label_pc_44d06c
  %9 = and i32 %fh, 63, !insn.addr !4298
  %10 = udiv i32 %fh, 64
  %narrow = mul nuw nsw i32 %9, 56
  %11 = mul i32 %10, 4, !insn.addr !4299
  %12 = add i32 %11, ptrtoint (i32* @__pioinfo to i32), !insn.addr !4299
  %13 = inttoptr i32 %12 to i32*, !insn.addr !4299
  %14 = load i32, i32* %13, align 4, !insn.addr !4299
  %15 = add nuw nsw i32 %narrow, 40, !insn.addr !4300
  %16 = add i32 %15, %14, !insn.addr !4300
  %17 = inttoptr i32 %16 to i8*, !insn.addr !4300
  %18 = load i8, i8* %17, align 1, !insn.addr !4300
  %19 = and i8 %18, 1, !insn.addr !4300
  %20 = icmp eq i8 %19, 0, !insn.addr !4300
  br i1 %20, label %dec_label_pc_44d0b1, label %dec_label_pc_44d08f, !insn.addr !4301

dec_label_pc_44d08f:                              ; preds = %dec_label_pc_44d074
  store i32 %fh, i32* %stack_var_-12, align 4, !insn.addr !4302
  %21 = ptrtoint i32* %stack_var_4 to i32, !insn.addr !4303
  store i32 %21, i32* %stack_var_-16, align 4, !insn.addr !4303
  store i32 %fh, i32* %stack_var_-20, align 4, !insn.addr !4304
  %22 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !4305
  %23 = inttoptr i32 %0 to i32*, !insn.addr !4306
  %24 = call i32 @"__crt_seh_guarded_call<int>::operator()<<lambda_218ce3db14220d0be481dae8ef3383b6>,<lambda_628dfdc04ba53c8bfc02c9951375f3f5> &,<lambda_57dc472bd5c9d5f3b2cbca59b8a843ae> >"(i32 %22, i32* nonnull %stack_var_-16, i32* nonnull %stack_var_-12, i32* %23), !insn.addr !4306
  store i32 %24, i32* %storemerge.reg2mem, !insn.addr !4307
  br label %dec_label_pc_44d0cc, !insn.addr !4307

dec_label_pc_44d0b1:                              ; preds = %dec_label_pc_44d074, %dec_label_pc_44d06c, %dec_label_pc_44d068
  %25 = call i32* @__doserrno(), !insn.addr !4308
  store i32 0, i32* %25, align 4, !insn.addr !4309
  %26 = call i32* @_errno(), !insn.addr !4310
  store i32 9, i32* %26, align 4, !insn.addr !4311
  call void @_invalid_parameter_noinfo(), !insn.addr !4312
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !4312
  br label %dec_label_pc_44d0cc, !insn.addr !4312

dec_label_pc_44d0cc:                              ; preds = %dec_label_pc_44d053, %dec_label_pc_44d0b1, %dec_label_pc_44d08f
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !4313
}

define i32 @_close_nolock(i32 %fh) local_unnamed_addr {
dec_label_pc_44d0f2:
  %storemerge.reg2mem = alloca i32, !insn.addr !4314
  %storemerge1.reg2mem = alloca i32, !insn.addr !4314
  %esp.0.reg2mem = alloca i32, !insn.addr !4314
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %fh, i32* %stack_var_-16, align 4, !insn.addr !4315
  %0 = call i32 @_get_osfhandle(i32 %fh), !insn.addr !4316
  %1 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !4317
  %2 = icmp eq i32 %0, -1, !insn.addr !4318
  %3 = icmp eq i1 %2, false, !insn.addr !4319
  store i32 %1, i32* %esp.0.reg2mem, !insn.addr !4319
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !4319
  br i1 %3, label %dec_label_pc_44d10c, label %dec_label_pc_44d15a, !insn.addr !4319

dec_label_pc_44d10c:                              ; preds = %dec_label_pc_44d0f2
  %4 = load i32, i32* @__pioinfo, align 4, !insn.addr !4320
  %5 = icmp eq i32 %fh, 1, !insn.addr !4321
  %6 = icmp eq i1 %5, false, !insn.addr !4322
  br i1 %6, label %dec_label_pc_44d11f, label %dec_label_pc_44d116, !insn.addr !4322

dec_label_pc_44d116:                              ; preds = %dec_label_pc_44d10c
  %7 = add i32 %4, 152, !insn.addr !4323
  %8 = inttoptr i32 %7 to i8*, !insn.addr !4323
  %9 = load i8, i8* %8, align 1, !insn.addr !4323
  %10 = and i8 %9, 1, !insn.addr !4323
  %11 = icmp eq i8 %10, 0, !insn.addr !4323
  %12 = icmp eq i1 %11, false, !insn.addr !4324
  br i1 %12, label %dec_label_pc_44d12a, label %dec_label_pc_44d11f, !insn.addr !4324

dec_label_pc_44d11f:                              ; preds = %dec_label_pc_44d116, %dec_label_pc_44d10c
  %13 = icmp eq i32 %fh, 2, !insn.addr !4325
  %14 = icmp eq i1 %13, false, !insn.addr !4326
  br i1 %14, label %dec_label_pc_44d140, label %dec_label_pc_44d124, !insn.addr !4326

dec_label_pc_44d124:                              ; preds = %dec_label_pc_44d11f
  %15 = add i32 %4, 96, !insn.addr !4327
  %16 = inttoptr i32 %15 to i8*, !insn.addr !4327
  %17 = load i8, i8* %16, align 1, !insn.addr !4327
  %18 = and i8 %17, 1, !insn.addr !4327
  %19 = icmp eq i8 %18, 0, !insn.addr !4327
  br i1 %19, label %dec_label_pc_44d140, label %dec_label_pc_44d12a, !insn.addr !4328

dec_label_pc_44d12a:                              ; preds = %dec_label_pc_44d124, %dec_label_pc_44d116
  store i32 2, i32* %stack_var_-16, align 4, !insn.addr !4329
  %20 = call i32 @_get_osfhandle(i32 2), !insn.addr !4330
  %21 = call i32 @_get_osfhandle(i32 1), !insn.addr !4331
  %22 = icmp eq i32 %21, %20, !insn.addr !4332
  store i32 %1, i32* %esp.0.reg2mem, !insn.addr !4333
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !4333
  br i1 %22, label %dec_label_pc_44d15a, label %dec_label_pc_44d140, !insn.addr !4333

dec_label_pc_44d140:                              ; preds = %dec_label_pc_44d12a, %dec_label_pc_44d124, %dec_label_pc_44d11f
  %23 = call i32 @_get_osfhandle(i32 %fh), !insn.addr !4334
  store i32 %23, i32* %stack_var_-16, align 4, !insn.addr !4335
  %24 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !4335
  %25 = inttoptr i32 %23 to i32*, !insn.addr !4336
  %26 = call i1 @CloseHandle(i32* %25), !insn.addr !4336
  %27 = icmp eq i1 %26, false, !insn.addr !4337
  %28 = icmp eq i1 %27, false, !insn.addr !4338
  store i32 %24, i32* %esp.0.reg2mem, !insn.addr !4338
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !4338
  br i1 %28, label %dec_label_pc_44d15a, label %dec_label_pc_44d152, !insn.addr !4338

dec_label_pc_44d152:                              ; preds = %dec_label_pc_44d140
  %29 = call i32 @GetLastError(), !insn.addr !4339
  store i32 %24, i32* %esp.0.reg2mem, !insn.addr !4340
  store i32 %29, i32* %storemerge1.reg2mem, !insn.addr !4340
  br label %dec_label_pc_44d15a, !insn.addr !4340

dec_label_pc_44d15a:                              ; preds = %dec_label_pc_44d0f2, %dec_label_pc_44d12a, %dec_label_pc_44d140, %dec_label_pc_44d152
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %30 = add i32 %esp.0.reload, -4, !insn.addr !4341
  %31 = inttoptr i32 %30 to i32*, !insn.addr !4341
  store i32 %fh, i32* %31, align 4, !insn.addr !4341
  %32 = call i32 @function_4024c8(), !insn.addr !4342
  %33 = and i32 %fh, 63, !insn.addr !4343
  %34 = sdiv i32 %fh, 64, !insn.addr !4344
  %narrow = mul nuw nsw i32 %33, 56
  %35 = mul i32 %34, 4, !insn.addr !4345
  %36 = add i32 %35, ptrtoint (i32* @__pioinfo to i32), !insn.addr !4345
  %37 = inttoptr i32 %36 to i32*, !insn.addr !4345
  %38 = load i32, i32* %37, align 4, !insn.addr !4345
  %39 = add nuw nsw i32 %narrow, 40, !insn.addr !4346
  %40 = add i32 %39, %38, !insn.addr !4346
  %41 = inttoptr i32 %40 to i8*, !insn.addr !4346
  store i8 0, i8* %41, align 1, !insn.addr !4346
  %42 = icmp eq i32 %storemerge1.reload, 0, !insn.addr !4347
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !4348
  br i1 %42, label %dec_label_pc_44d18a, label %dec_label_pc_44d17c, !insn.addr !4348

dec_label_pc_44d17c:                              ; preds = %dec_label_pc_44d15a
  store i32 %storemerge1.reload, i32* %31, align 4, !insn.addr !4349
  %43 = call i32 @function_4034fe(), !insn.addr !4350
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !4351
  br label %dec_label_pc_44d18a, !insn.addr !4351

dec_label_pc_44d18a:                              ; preds = %dec_label_pc_44d15a, %dec_label_pc_44d17c
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !4352
}

declare void @__acrt_stdio_free_stream(i32) local_unnamed_addr

define i32 @_strnicoll(i8* %_string1, i8* %_string2, i32 %count) local_unnamed_addr {
dec_label_pc_44e0cc:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = load i32, i32* @__acrt_locale_changed_data, align 4, !insn.addr !4353
  %2 = icmp eq i32 %1, 0, !insn.addr !4353
  %3 = icmp eq i1 %2, false, !insn.addr !4354
  br i1 %3, label %dec_label_pc_44e0e0, label %dec_label_pc_44e0da, !insn.addr !4354

dec_label_pc_44e0da:                              ; preds = %dec_label_pc_44e0cc
  %4 = inttoptr i32 %0 to i8*, !insn.addr !4355
  %5 = call i32 @_strnicmp(i8* %4, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !4356
  ret i32 %5, !insn.addr !4356

dec_label_pc_44e0e0:                              ; preds = %dec_label_pc_44e0cc
  %6 = call i32 @_strnicoll_l(i8* %_string1, i8* %_string2, i32 %count, i32 0), !insn.addr !4357
  ret i32 %6, !insn.addr !4358
}

define i32 @_strnicoll_l(i8* %_string1, i8* %_string2, i32 %count, i32 %plocinfo) local_unnamed_addr {
dec_label_pc_44e0ff:
  %esi.0.reg2mem = alloca i32, !insn.addr !4359
  %0 = call i8 @__decompiler_undefined_function_7()
  %_loc_update_-16 = alloca i32, align 4
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @function_403d78(i32 %plocinfo), !insn.addr !4360
  %4 = icmp eq i32 %count, 0, !insn.addr !4361
  %5 = icmp eq i1 %4, false, !insn.addr !4362
  store i32 0, i32* %esi.0.reg2mem, !insn.addr !4362
  br i1 %5, label %dec_label_pc_44e123, label %dec_label_pc_44e1b0, !insn.addr !4362

dec_label_pc_44e123:                              ; preds = %dec_label_pc_44e0ff
  %6 = icmp eq i8* %_string1, null, !insn.addr !4363
  br i1 %6, label %dec_label_pc_44e131, label %dec_label_pc_44e12a, !insn.addr !4364

dec_label_pc_44e12a:                              ; preds = %dec_label_pc_44e123
  %7 = icmp eq i8* %_string2, null, !insn.addr !4365
  %8 = icmp eq i1 %7, false, !insn.addr !4366
  br i1 %8, label %dec_label_pc_44e148, label %dec_label_pc_44e131, !insn.addr !4366

dec_label_pc_44e131:                              ; preds = %dec_label_pc_44e12a, %dec_label_pc_44e123
  %9 = call i32* @_errno(), !insn.addr !4367
  store i32 22, i32* %9, align 4, !insn.addr !4368
  call void @_invalid_parameter_noinfo(), !insn.addr !4369
  store i32 2147483647, i32* %esi.0.reg2mem, !insn.addr !4370
  br label %dec_label_pc_44e1b0, !insn.addr !4370

dec_label_pc_44e148:                              ; preds = %dec_label_pc_44e12a
  %10 = icmp sgt i32 %count, -1
  br i1 %10, label %dec_label_pc_44e163, label %dec_label_pc_44e151, !insn.addr !4371

dec_label_pc_44e151:                              ; preds = %dec_label_pc_44e148
  %11 = call i32* @_errno(), !insn.addr !4372
  store i32 22, i32* %11, align 4, !insn.addr !4373
  call void @_invalid_parameter_noinfo(), !insn.addr !4374
  store i32 2147483647, i32* %esi.0.reg2mem, !insn.addr !4375
  br label %dec_label_pc_44e1b0, !insn.addr !4375

dec_label_pc_44e163:                              ; preds = %dec_label_pc_44e148
  %12 = add i32 %1, 164, !insn.addr !4376
  %13 = inttoptr i32 %12 to i32*, !insn.addr !4376
  %14 = load i32, i32* %13, align 4, !insn.addr !4376
  %15 = icmp eq i32 %14, 0, !insn.addr !4377
  %16 = icmp eq i1 %15, false, !insn.addr !4378
  br i1 %16, label %dec_label_pc_44e183, label %dec_label_pc_44e170, !insn.addr !4378

dec_label_pc_44e170:                              ; preds = %dec_label_pc_44e163
  %17 = ptrtoint i32* %_loc_update_-16 to i32, !insn.addr !4379
  %18 = call i32 @_strnicmp_l(i8* nonnull %_string1, i8* %_string2, i32 %count, i32 %17), !insn.addr !4380
  store i32 %18, i32* %esi.0.reg2mem, !insn.addr !4381
  br label %dec_label_pc_44e1b0, !insn.addr !4381

dec_label_pc_44e183:                              ; preds = %dec_label_pc_44e163
  %19 = ptrtoint i8* %_string1 to i32, !insn.addr !4382
  %20 = ptrtoint i8* %_string2 to i32, !insn.addr !4383
  %21 = add i32 %1, 16, !insn.addr !4384
  %22 = inttoptr i32 %21 to i32*, !insn.addr !4384
  %23 = load i32, i32* %22, align 4, !insn.addr !4384
  %24 = call i32 @function_401fbe(i32* nonnull %_loc_update_-16, i32 %14, i32 4097, i32 %19, i32 %count, i32 %20, i32 %count, i32 %23), !insn.addr !4385
  %25 = icmp eq i32 %24, 0, !insn.addr !4386
  %26 = icmp eq i1 %25, false, !insn.addr !4387
  br i1 %26, label %dec_label_pc_44e1ad, label %dec_label_pc_44e1a0, !insn.addr !4387

dec_label_pc_44e1a0:                              ; preds = %dec_label_pc_44e183
  %27 = call i32* @_errno(), !insn.addr !4388
  store i32 22, i32* %27, align 4, !insn.addr !4389
  store i32 2147483647, i32* %esi.0.reg2mem, !insn.addr !4390
  br label %dec_label_pc_44e1b0, !insn.addr !4390

dec_label_pc_44e1ad:                              ; preds = %dec_label_pc_44e183
  %28 = add i32 %24, -2, !insn.addr !4391
  store i32 %28, i32* %esi.0.reg2mem, !insn.addr !4391
  br label %dec_label_pc_44e1b0, !insn.addr !4391

dec_label_pc_44e1b0:                              ; preds = %dec_label_pc_44e0ff, %dec_label_pc_44e1ad, %dec_label_pc_44e1a0, %dec_label_pc_44e170, %dec_label_pc_44e151, %dec_label_pc_44e131
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %29 = icmp eq i8 %0, 0, !insn.addr !4392
  br i1 %29, label %dec_label_pc_44e1c0, label %dec_label_pc_44e1b6, !insn.addr !4393

dec_label_pc_44e1b6:                              ; preds = %dec_label_pc_44e1b0
  %30 = add i32 %2, 848, !insn.addr !4394
  %31 = inttoptr i32 %30 to i32*, !insn.addr !4394
  %32 = load i32, i32* %31, align 4, !insn.addr !4394
  %33 = and i32 %32, -3, !insn.addr !4394
  store i32 %33, i32* %31, align 4, !insn.addr !4394
  br label %dec_label_pc_44e1c0, !insn.addr !4394

dec_label_pc_44e1c0:                              ; preds = %dec_label_pc_44e1b6, %dec_label_pc_44e1b0
  ret i32 %esi.0.reload, !insn.addr !4395
}

declare void @__acrt_lock(i32) local_unnamed_addr

declare void @__acrt_unlock(i32) local_unnamed_addr

define i32 @"__acrt_convert_wcs_mbs_cp<char,wchar_t,<lambda_62f6974d9771e494a5ea317cc32e971c>,__crt_win32_buffer_internal_dynamic_resizing>_2"(i8* %null_terminated_input_string, i32* %win32_buffer, i32* %cvt_func, i32 %code_page) local_unnamed_addr {
dec_label_pc_44e7ad:
  %eax.0.reg2mem = alloca i32, !insn.addr !4396
  %esp.1.reg2mem = alloca i32, !insn.addr !4396
  %.reg2mem = alloca i32, !insn.addr !4396
  %.pre-phi4.reg2mem = alloca i32*, !insn.addr !4396
  %0 = ptrtoint i32* %win32_buffer to i32
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %1 = icmp eq i8* %null_terminated_input_string, null, !insn.addr !4397
  %2 = icmp eq i1 %1, false, !insn.addr !4398
  br i1 %2, label %dec_label_pc_44e7d5, label %dec_label_pc_44e7bb, !insn.addr !4398

dec_label_pc_44e7bb:                              ; preds = %dec_label_pc_44e7ad
  %3 = call i32 @function_40250e(), !insn.addr !4399
  %4 = add i32 %0, 8, !insn.addr !4400
  %5 = inttoptr i32 %4 to i32*, !insn.addr !4400
  store i32 0, i32* %5, align 4, !insn.addr !4400
  %6 = add i32 %0, 12, !insn.addr !4401
  %7 = inttoptr i32 %6 to i32*, !insn.addr !4401
  store i32 0, i32* %7, align 4, !insn.addr !4401
  br label %dec_label_pc_44e7cd, !insn.addr !4401

dec_label_pc_44e7cd:                              ; preds = %dec_label_pc_44e7f1, %dec_label_pc_44e7bb
  %8 = add i32 %0, 16, !insn.addr !4402
  %9 = inttoptr i32 %8 to i32*, !insn.addr !4402
  store i32 0, i32* %9, align 4, !insn.addr !4402
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !4403
  br label %dec_label_pc_44e85b, !insn.addr !4403

dec_label_pc_44e7d5:                              ; preds = %dec_label_pc_44e7ad
  %10 = load i8, i8* %null_terminated_input_string, align 1, !insn.addr !4404
  %11 = icmp eq i8 %10, 0, !insn.addr !4404
  %12 = icmp eq i1 %11, false, !insn.addr !4405
  br i1 %12, label %dec_label_pc_44e7fb, label %dec_label_pc_44e7dc, !insn.addr !4405

dec_label_pc_44e7dc:                              ; preds = %dec_label_pc_44e7d5
  %13 = add i32 %0, 12, !insn.addr !4406
  %14 = inttoptr i32 %13 to i32*, !insn.addr !4406
  %15 = load i32, i32* %14, align 4, !insn.addr !4406
  %16 = icmp eq i32 %15, 0, !insn.addr !4406
  %17 = icmp eq i1 %16, false, !insn.addr !4407
  br i1 %17, label %dec_label_pc_44e7f1, label %dec_label_pc_44e7e4, !insn.addr !4407

dec_label_pc_44e7e4:                              ; preds = %dec_label_pc_44e7dc
  store i32 1, i32* %stack_var_-16, align 4, !insn.addr !4408
  %18 = call i32 @function_402bf3(i32 1), !insn.addr !4409
  %19 = icmp eq i32 %18, 0, !insn.addr !4410
  %20 = icmp eq i1 %19, false, !insn.addr !4411
  store i32 %18, i32* %eax.0.reg2mem, !insn.addr !4411
  br i1 %20, label %dec_label_pc_44e85b, label %dec_label_pc_44e7f1, !insn.addr !4411

dec_label_pc_44e7f1:                              ; preds = %dec_label_pc_44e7e4, %dec_label_pc_44e7dc
  %21 = add i32 %0, 8, !insn.addr !4412
  %22 = inttoptr i32 %21 to i32*, !insn.addr !4412
  %23 = load i32, i32* %22, align 4, !insn.addr !4412
  %24 = inttoptr i32 %23 to i16*, !insn.addr !4413
  store i16 0, i16* %24, align 2, !insn.addr !4413
  br label %dec_label_pc_44e7cd, !insn.addr !4414

dec_label_pc_44e7fb:                              ; preds = %dec_label_pc_44e7d5
  %25 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !4415
  store i32 0, i32* %stack_var_-16, align 4, !insn.addr !4416
  %26 = call i32 @function_401712(), !insn.addr !4417
  %27 = icmp eq i32 %26, 0, !insn.addr !4418
  %28 = icmp eq i1 %27, false, !insn.addr !4419
  br i1 %28, label %dec_label_pc_44e827, label %dec_label_pc_44e7fb.dec_label_pc_44e811_crit_edge, !insn.addr !4419

dec_label_pc_44e7fb.dec_label_pc_44e811_crit_edge: ; preds = %dec_label_pc_44e7fb
  %.pre2 = add i32 %25, -4, !insn.addr !4420
  %.pre3 = inttoptr i32 %.pre2 to i32*, !insn.addr !4420
  store i32* %.pre3, i32** %.pre-phi4.reg2mem
  br label %dec_label_pc_44e811

dec_label_pc_44e811:                              ; preds = %dec_label_pc_44e7fb.dec_label_pc_44e811_crit_edge, %dec_label_pc_44e83b
  %.pre-phi4.reload = load i32*, i32** %.pre-phi4.reg2mem
  %29 = call i32 @GetLastError(), !insn.addr !4421
  store i32 %29, i32* %.pre-phi4.reload, align 4, !insn.addr !4420
  %30 = call i32 @function_4034fe(), !insn.addr !4422
  %31 = call i32* @_errno(), !insn.addr !4423
  %32 = load i32, i32* %31, align 4, !insn.addr !4424
  store i32 %32, i32* %eax.0.reg2mem, !insn.addr !4425
  br label %dec_label_pc_44e85b, !insn.addr !4425

dec_label_pc_44e827:                              ; preds = %dec_label_pc_44e7fb
  %33 = add i32 %0, 12, !insn.addr !4426
  %34 = inttoptr i32 %33 to i32*, !insn.addr !4426
  %35 = load i32, i32* %34, align 4, !insn.addr !4426
  %36 = icmp ugt i32 %26, %35
  store i32 %35, i32* %.reg2mem, !insn.addr !4427
  store i32 %25, i32* %esp.1.reg2mem, !insn.addr !4427
  br i1 %36, label %dec_label_pc_44e82f, label %dec_label_pc_44e83b, !insn.addr !4427

dec_label_pc_44e82f:                              ; preds = %dec_label_pc_44e827
  store i32 %26, i32* %stack_var_-16, align 4, !insn.addr !4428
  %37 = call i32 @function_402bf3(i32 %26), !insn.addr !4429
  %38 = icmp eq i32 %37, 0, !insn.addr !4430
  %39 = icmp eq i1 %38, false, !insn.addr !4431
  store i32 %37, i32* %eax.0.reg2mem, !insn.addr !4431
  br i1 %39, label %dec_label_pc_44e85b, label %dec_label_pc_44e82f.dec_label_pc_44e83b_crit_edge, !insn.addr !4431

dec_label_pc_44e82f.dec_label_pc_44e83b_crit_edge: ; preds = %dec_label_pc_44e82f
  %40 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !4428
  %.pre = load i32, i32* %34, align 4
  store i32 %.pre, i32* %.reg2mem
  store i32 %40, i32* %esp.1.reg2mem
  br label %dec_label_pc_44e83b

dec_label_pc_44e83b:                              ; preds = %dec_label_pc_44e82f.dec_label_pc_44e83b_crit_edge, %dec_label_pc_44e827
  %41 = ptrtoint i32* %cvt_func to i32
  %42 = ptrtoint i8* %null_terminated_input_string to i32
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %.reload = load i32, i32* %.reg2mem, !insn.addr !4432
  %43 = add i32 %esp.1.reload, -4
  %44 = inttoptr i32 %43 to i32*
  store i32 %.reload, i32* %44, align 4, !insn.addr !4432
  %45 = add i32 %0, 8, !insn.addr !4433
  %46 = inttoptr i32 %45 to i32*, !insn.addr !4433
  %47 = load i32, i32* %46, align 4, !insn.addr !4433
  %48 = add i32 %esp.1.reload, -8, !insn.addr !4433
  %49 = inttoptr i32 %48 to i32*, !insn.addr !4433
  store i32 %47, i32* %49, align 4, !insn.addr !4433
  %50 = add i32 %esp.1.reload, -12, !insn.addr !4434
  %51 = inttoptr i32 %50 to i32*, !insn.addr !4434
  store i32 -1, i32* %51, align 4, !insn.addr !4434
  %52 = add i32 %esp.1.reload, -16, !insn.addr !4435
  %53 = inttoptr i32 %52 to i32*, !insn.addr !4435
  store i32 %42, i32* %53, align 4, !insn.addr !4435
  %54 = add i32 %esp.1.reload, -20, !insn.addr !4436
  %55 = inttoptr i32 %54 to i32*, !insn.addr !4436
  store i32 9, i32* %55, align 4, !insn.addr !4436
  %56 = add i32 %esp.1.reload, -24, !insn.addr !4437
  %57 = inttoptr i32 %56 to i32*, !insn.addr !4437
  store i32 %41, i32* %57, align 4, !insn.addr !4437
  %58 = call i32 @function_401712(), !insn.addr !4438
  %59 = icmp eq i32 %58, 0, !insn.addr !4439
  store i32* %44, i32** %.pre-phi4.reg2mem, !insn.addr !4440
  br i1 %59, label %dec_label_pc_44e811, label %dec_label_pc_44e855, !insn.addr !4440

dec_label_pc_44e855:                              ; preds = %dec_label_pc_44e83b
  %60 = add i32 %58, -1, !insn.addr !4441
  %61 = add i32 %0, 16, !insn.addr !4442
  %62 = inttoptr i32 %61 to i32*, !insn.addr !4442
  store i32 %60, i32* %62, align 4, !insn.addr !4442
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !4442
  br label %dec_label_pc_44e85b, !insn.addr !4442

dec_label_pc_44e85b:                              ; preds = %dec_label_pc_44e7cd, %dec_label_pc_44e855, %dec_label_pc_44e82f, %dec_label_pc_44e811, %dec_label_pc_44e7e4
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !4443
}

define i32 @"__acrt_mbs_to_wcs_cp<__crt_win32_buffer_internal_dynamic_resizing>"(i8* %null_terminated_input_string, i32* %win32_buffer, i32 %code_page) local_unnamed_addr {
dec_label_pc_44e98d:
  %mbs_to_wcs_-5 = alloca i32, align 4
  %0 = call i32 @"__acrt_convert_wcs_mbs_cp<char,wchar_t,<lambda_62f6974d9771e494a5ea317cc32e971c>,__crt_win32_buffer_internal_dynamic_resizing>_2"(i8* %null_terminated_input_string, i32* %win32_buffer, i32* nonnull %mbs_to_wcs_-5, i32 %code_page), !insn.addr !4444
  ret i32 %0, !insn.addr !4445
}

define i32 @__acrt_get_utf8_acp_compatibility_codepage() local_unnamed_addr {
dec_label_pc_44f88b:
  %edx.0.reg2mem = alloca i32, !insn.addr !4446
  %0 = call i8 @__decompiler_undefined_function_7()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @function_403d78(i32 0), !insn.addr !4447
  %4 = add i32 %1, 8, !insn.addr !4448
  %5 = inttoptr i32 %4 to i32*, !insn.addr !4448
  %6 = load i32, i32* %5, align 4, !insn.addr !4448
  %7 = icmp eq i32 %6, 65001, !insn.addr !4448
  store i32 65001, i32* %edx.0.reg2mem, !insn.addr !4449
  br i1 %7, label %dec_label_pc_44f8b6, label %dec_label_pc_44f8aa, !insn.addr !4449

dec_label_pc_44f8aa:                              ; preds = %dec_label_pc_44f88b
  %8 = call i32 @function_403387(), !insn.addr !4450
  %9 = icmp eq i32 %8, 0, !insn.addr !4451
  %spec.select = zext i1 %9 to i32
  store i32 %spec.select, i32* %edx.0.reg2mem
  br label %dec_label_pc_44f8b6

dec_label_pc_44f8b6:                              ; preds = %dec_label_pc_44f8aa, %dec_label_pc_44f88b
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %10 = icmp eq i8 %0, 0, !insn.addr !4452
  br i1 %10, label %dec_label_pc_44f8c6, label %dec_label_pc_44f8bc, !insn.addr !4453

dec_label_pc_44f8bc:                              ; preds = %dec_label_pc_44f8b6
  %11 = add i32 %2, 848, !insn.addr !4454
  %12 = inttoptr i32 %11 to i32*, !insn.addr !4454
  %13 = load i32, i32* %12, align 4, !insn.addr !4454
  %14 = and i32 %13, -3, !insn.addr !4454
  store i32 %14, i32* %12, align 4, !insn.addr !4454
  br label %dec_label_pc_44f8c6, !insn.addr !4454

dec_label_pc_44f8c6:                              ; preds = %dec_label_pc_44f8bc, %dec_label_pc_44f8b6
  ret i32 %edx.0.reload, !insn.addr !4455
}

define void @"__crt_win32_buffer<wchar_t,__crt_win32_buffer_internal_dynamic_resizing>::_deallocate"(i32* %this) local_unnamed_addr {
dec_label_pc_44f8f9:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 20, !insn.addr !4456
  %2 = inttoptr i32 %1 to i8*, !insn.addr !4456
  %3 = load i8, i8* %2, align 1, !insn.addr !4456
  %4 = icmp eq i8 %3, 0, !insn.addr !4456
  br i1 %4, label %dec_label_pc_44f911, label %dec_label_pc_44f904, !insn.addr !4457

dec_label_pc_44f904:                              ; preds = %dec_label_pc_44f8f9
  %5 = add i32 %0, 8, !insn.addr !4458
  %6 = inttoptr i32 %5 to i32*, !insn.addr !4458
  %7 = load i32, i32* %6, align 4, !insn.addr !4458
  %8 = inttoptr i32 %7 to i32*, !insn.addr !4459
  call void @_free_base(i32* %8), !insn.addr !4459
  store i8 0, i8* %2, align 1, !insn.addr !4460
  br label %dec_label_pc_44f911, !insn.addr !4460

dec_label_pc_44f911:                              ; preds = %dec_label_pc_44f904, %dec_label_pc_44f8f9
  ret void, !insn.addr !4461
}

define i32 @"__crt_win32_buffer<wchar_t,__crt_win32_buffer_internal_dynamic_resizing>::allocate"(i32* %this, i32 %requested_size) local_unnamed_addr {
dec_label_pc_44f964:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = ptrtoint i32* %this to i32
  %2 = call i32 @function_40250e(), !insn.addr !4462
  %3 = mul i32 %1, 2, !insn.addr !4463
  %4 = add i32 %0, 8, !insn.addr !4464
  %5 = call i32 @function_404381(i32 %4, i32 %3, i32 %0), !insn.addr !4465
  %6 = icmp eq i32 %5, 0, !insn.addr !4466
  br i1 %6, label %dec_label_pc_44f994, label %dec_label_pc_44f98a, !insn.addr !4467

dec_label_pc_44f98a:                              ; preds = %dec_label_pc_44f964
  %7 = add i32 %0, 12, !insn.addr !4468
  %8 = inttoptr i32 %7 to i32*, !insn.addr !4468
  store i32 0, i32* %8, align 4, !insn.addr !4468
  %9 = add i32 %0, 20, !insn.addr !4469
  %10 = inttoptr i32 %9 to i8*, !insn.addr !4469
  store i8 0, i8* %10, align 1, !insn.addr !4469
  br label %dec_label_pc_44f99d, !insn.addr !4470

dec_label_pc_44f994:                              ; preds = %dec_label_pc_44f964
  %11 = add i32 %0, 20, !insn.addr !4471
  %12 = inttoptr i32 %11 to i8*, !insn.addr !4471
  store i8 1, i8* %12, align 1, !insn.addr !4471
  %13 = add i32 %0, 12, !insn.addr !4472
  %14 = inttoptr i32 %13 to i32*, !insn.addr !4472
  store i32 %1, i32* %14, align 4, !insn.addr !4472
  br label %dec_label_pc_44f99d, !insn.addr !4472

dec_label_pc_44f99d:                              ; preds = %dec_label_pc_44f994, %dec_label_pc_44f98a
  ret i32 %5, !insn.addr !4473
}

define i32 @"__crt_win32_buffer_internal_dynamic_resizing::allocate"(i8** %address, i32 %size, i32* %__formal) local_unnamed_addr {
dec_label_pc_44f9b2:
  %0 = call i32* @_malloc_base(i32 %size), !insn.addr !4474
  %1 = ptrtoint i32* %0 to i32, !insn.addr !4474
  %2 = bitcast i8** %address to i32*, !insn.addr !4475
  store i32 %1, i32* %2, align 4, !insn.addr !4475
  %3 = icmp eq i32* %0, null, !insn.addr !4476
  %4 = select i1 %3, i32 12, i32 0, !insn.addr !4477
  ret i32 %4, !insn.addr !4478
}

define void @"__crt_seh_guarded_call<void>::operator()<<lambda_ceb1ee4838e85a9d631eb091e2fbe199>,<lambda_ae742caa10f662c28703da3d2ea5e57e> &,<lambda_cd08b5d6af4937fe54fc07d0c9bf6b37> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_450038:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a758, i32 8), !insn.addr !4479
  %2 = add i32 %0, 8, !insn.addr !4480
  %3 = inttoptr i32 %2 to i32*, !insn.addr !4480
  %4 = load i32, i32* %3, align 4, !insn.addr !4480
  %5 = inttoptr i32 %4 to i32*, !insn.addr !4481
  %6 = load i32, i32* %5, align 4, !insn.addr !4481
  %7 = call i32 @function_40452a(i32 %6), !insn.addr !4482
  %8 = add i32 %0, -4, !insn.addr !4483
  %9 = inttoptr i32 %8 to i32*, !insn.addr !4483
  store i32 0, i32* %9, align 4, !insn.addr !4483
  call void @"<lambda_ae742caa10f662c28703da3d2ea5e57e>::operator()"(i32* nonnull @80), !insn.addr !4484
  store i32 -2, i32* %9, align 4, !insn.addr !4485
  %10 = call i32 @function_450079(), !insn.addr !4486
  %11 = add i32 %0, -16, !insn.addr !4487
  %12 = inttoptr i32 %11 to i32*, !insn.addr !4487
  %13 = load i32, i32* %12, align 4, !insn.addr !4487
  call void @__writefsdword(i32 0, i32 %13), !insn.addr !4488
  ret void, !insn.addr !4489
}

define i32 @function_450079() local_unnamed_addr {
dec_label_pc_450079:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !4490
  %2 = inttoptr i32 %1 to i32*, !insn.addr !4490
  %3 = load i32, i32* %2, align 4, !insn.addr !4490
  %4 = inttoptr i32 %3 to i32*, !insn.addr !4491
  %5 = load i32, i32* %4, align 4, !insn.addr !4491
  %6 = call i32 @function_4017d5(i32 %5), !insn.addr !4492
  ret i32 %6, !insn.addr !4493
}

define void @"<lambda_ae742caa10f662c28703da3d2ea5e57e>::operator()"(i32* %this) local_unnamed_addr {
dec_label_pc_450132:
  %ecx.0.reg2mem = alloca i32, !insn.addr !4494
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = load i32, i32* inttoptr (i32 329 to i32*), align 4, !insn.addr !4495
  %2 = add i32 %1, 24, !insn.addr !4496
  %3 = inttoptr i32 %2 to i8*, !insn.addr !4497
  %4 = load i32, i32* @_mbctype, align 4, !insn.addr !4498
  %5 = inttoptr i32 %4 to i8*, !insn.addr !4498
  %6 = call i32 @memcpy_s_2(i8* %5, i32 257, i8* %3, i32 257), !insn.addr !4499
  %7 = load i32, i32* inttoptr (i32 328 to i32*), align 8, !insn.addr !4500
  %8 = add i32 %7, 281, !insn.addr !4501
  %9 = inttoptr i32 %8 to i8*, !insn.addr !4502
  %10 = load i32, i32* @_mbcasemap, align 4, !insn.addr !4503
  %11 = inttoptr i32 %10 to i8*, !insn.addr !4503
  %12 = call i32 @memcpy_s_2(i8* %11, i32 256, i8* %9, i32 256), !insn.addr !4504
  %13 = add i32 %0, 4, !insn.addr !4505
  %14 = inttoptr i32 %13 to i32*, !insn.addr !4505
  %15 = load i32, i32* %14, align 4, !insn.addr !4505
  %16 = inttoptr i32 %15 to i32*, !insn.addr !4506
  %17 = load i32, i32* %16, align 4, !insn.addr !4506
  %18 = inttoptr i32 %17 to i32*, !insn.addr !4507
  %19 = load i32, i32* %18, align 4, !insn.addr !4507
  %20 = inttoptr i32 %19 to i32*, !insn.addr !4508
  %21 = load i32, i32* %20, align 4, !insn.addr !4508
  %22 = add i32 %21, -1, !insn.addr !4508
  %23 = icmp eq i32 %22, 0, !insn.addr !4508
  store i32 %22, i32* %20, align 4, !insn.addr !4508
  %24 = icmp eq i1 %23, false, !insn.addr !4509
  store i32 %21, i32* %ecx.0.reg2mem, !insn.addr !4509
  br i1 %24, label %dec_label_pc_45019b, label %dec_label_pc_450186, !insn.addr !4509

dec_label_pc_450186:                              ; preds = %dec_label_pc_450132
  %25 = load i32, i32* %14, align 4, !insn.addr !4510
  %26 = inttoptr i32 %25 to i32*, !insn.addr !4511
  %27 = load i32, i32* %26, align 4, !insn.addr !4511
  %28 = inttoptr i32 %27 to i32*, !insn.addr !4512
  %29 = load i32, i32* %28, align 4, !insn.addr !4512
  %30 = icmp eq i32 %29, ptrtoint (%__crt_multibyte_data* @__acrt_initial_multibyte_data to i32), !insn.addr !4512
  store i32 %21, i32* %ecx.0.reg2mem, !insn.addr !4513
  br i1 %30, label %dec_label_pc_45019b, label %dec_label_pc_450193, !insn.addr !4513

dec_label_pc_450193:                              ; preds = %dec_label_pc_450186
  %31 = inttoptr i32 %29 to i32*, !insn.addr !4514
  call void @_free_base(i32* %31), !insn.addr !4514
  store i32 %29, i32* %ecx.0.reg2mem, !insn.addr !4515
  br label %dec_label_pc_45019b, !insn.addr !4515

dec_label_pc_45019b:                              ; preds = %dec_label_pc_450193, %dec_label_pc_450186, %dec_label_pc_450132
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %32 = load i32, i32* %14, align 4, !insn.addr !4516
  %33 = inttoptr i32 %32 to i32*, !insn.addr !4517
  %34 = load i32, i32* %33, align 4, !insn.addr !4517
  %35 = add i32 %ecx.0.reload, 72, !insn.addr !4518
  %36 = inttoptr i32 %35 to i32*, !insn.addr !4518
  %37 = load i32, i32* %36, align 4, !insn.addr !4518
  %38 = inttoptr i32 %34 to i32*, !insn.addr !4519
  store i32 %37, i32* %38, align 4, !insn.addr !4519
  %39 = add i32 %34, 72, !insn.addr !4520
  %40 = inttoptr i32 %39 to i32*, !insn.addr !4520
  %41 = load i32, i32* %40, align 4, !insn.addr !4520
  %42 = inttoptr i32 %41 to i32*, !insn.addr !4521
  %43 = load i32, i32* %42, align 4, !insn.addr !4521
  %44 = add i32 %43, 1, !insn.addr !4521
  store i32 %44, i32* %42, align 4, !insn.addr !4521
  ret void, !insn.addr !4522
}

declare i16* @CPtoLocaleName(i32) local_unnamed_addr

define i32 @getSystemCP(i32 %codepage) local_unnamed_addr {
dec_label_pc_45023e:
  %eax.0.reg2mem = alloca i32, !insn.addr !4523
  %0 = call i8 @__decompiler_undefined_function_7()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @function_403d78(i32 0), !insn.addr !4524
  store i32 0, i32* @fSystemSet, align 4, !insn.addr !4525
  %4 = icmp eq i32 %codepage, -2, !insn.addr !4526
  %5 = icmp eq i1 %4, false, !insn.addr !4527
  br i1 %5, label %dec_label_pc_450271, label %dec_label_pc_45025f, !insn.addr !4527

dec_label_pc_45025f:                              ; preds = %dec_label_pc_45023e
  store i32 1, i32* @fSystemSet, align 4, !insn.addr !4528
  %6 = call i32 @GetOEMCP(), !insn.addr !4529
  store i32 %6, i32* %eax.0.reg2mem, !insn.addr !4530
  br label %dec_label_pc_45029d, !insn.addr !4530

dec_label_pc_450271:                              ; preds = %dec_label_pc_45023e
  %7 = icmp eq i32 %codepage, -3, !insn.addr !4531
  %8 = icmp eq i1 %7, false, !insn.addr !4532
  br i1 %8, label %dec_label_pc_450288, label %dec_label_pc_450276, !insn.addr !4532

dec_label_pc_450276:                              ; preds = %dec_label_pc_450271
  store i32 1, i32* @fSystemSet, align 4, !insn.addr !4533
  %9 = call i32 @GetACP(), !insn.addr !4534
  store i32 %9, i32* %eax.0.reg2mem, !insn.addr !4535
  br label %dec_label_pc_45029d, !insn.addr !4535

dec_label_pc_450288:                              ; preds = %dec_label_pc_450271
  %10 = icmp eq i32 %codepage, -4, !insn.addr !4536
  %11 = icmp eq i1 %10, false, !insn.addr !4537
  store i32 %codepage, i32* %eax.0.reg2mem, !insn.addr !4537
  br i1 %11, label %dec_label_pc_45029d, label %dec_label_pc_45028d, !insn.addr !4537

dec_label_pc_45028d:                              ; preds = %dec_label_pc_450288
  store i32 1, i32* @fSystemSet, align 4, !insn.addr !4538
  %12 = add i32 %1, 8, !insn.addr !4539
  %13 = inttoptr i32 %12 to i32*, !insn.addr !4539
  %14 = load i32, i32* %13, align 4, !insn.addr !4539
  store i32 %14, i32* %eax.0.reg2mem, !insn.addr !4539
  br label %dec_label_pc_45029d, !insn.addr !4539

dec_label_pc_45029d:                              ; preds = %dec_label_pc_45028d, %dec_label_pc_450288, %dec_label_pc_450276, %dec_label_pc_45025f
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %15 = icmp eq i8 %0, 0, !insn.addr !4540
  br i1 %15, label %dec_label_pc_4502ad, label %dec_label_pc_4502a3, !insn.addr !4541

dec_label_pc_4502a3:                              ; preds = %dec_label_pc_45029d
  %16 = add i32 %2, 848, !insn.addr !4542
  %17 = inttoptr i32 %16 to i32*, !insn.addr !4542
  %18 = load i32, i32* %17, align 4, !insn.addr !4542
  %19 = and i32 %18, -3, !insn.addr !4542
  store i32 %19, i32* %17, align 4, !insn.addr !4542
  br label %dec_label_pc_4502ad, !insn.addr !4542

dec_label_pc_4502ad:                              ; preds = %dec_label_pc_4502a3, %dec_label_pc_45029d
  ret i32 %eax.0.reload, !insn.addr !4543
}

declare void @setSBCS(%__crt_multibyte_data*) local_unnamed_addr

define void @setSBUpLow(%__crt_multibyte_data* %ptmbci) local_unnamed_addr {
dec_label_pc_450378:
  %eax.3.reg2mem = alloca i32, !insn.addr !4544
  %ecx.2.reg2mem = alloca i32, !insn.addr !4544
  %ecx.1.reg2mem = alloca i8, !insn.addr !4544
  %eax.2.reg2mem = alloca i32, !insn.addr !4544
  %storemerge12.reg2mem = alloca i32, !insn.addr !4544
  %eax.113.reg2mem = alloca i32, !insn.addr !4544
  %ecx.014.reg2mem = alloca i32, !insn.addr !4544
  %eax.0.reg2mem = alloca i32, !insn.addr !4544
  %0 = ptrtoint %__crt_multibyte_data* %ptmbci to i32
  %upVector_-776 = alloca [256 x i8], align 1
  %lowVector_-520 = alloca [256 x i8], align 1
  %wVector_-1800 = alloca [512 x i16], align 2
  %sbVector_-264 = alloca [256 x i8], align 1
  %stack_var_-1814 = alloca i8, align 1
  %stack_var_-1820 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %1 = add i32 %0, 4, !insn.addr !4545
  %2 = inttoptr i32 %1 to i32*, !insn.addr !4545
  %3 = load i32, i32* %2, align 4, !insn.addr !4545
  %4 = icmp eq i32 %3, 65001, !insn.addr !4545
  br i1 %4, label %dec_label_pc_4504ac, label %dec_label_pc_4503a0, !insn.addr !4546

dec_label_pc_4503a0:                              ; preds = %dec_label_pc_450378
  %5 = bitcast i32* %stack_var_-1820 to %_cpinfo*
  %6 = call i1 @GetCPInfo(i32 %3, %_cpinfo* nonnull %5), !insn.addr !4547
  %7 = icmp eq i1 %6, false, !insn.addr !4548
  br i1 %7, label %dec_label_pc_4504ac, label %dec_label_pc_4503c1.preheader, !insn.addr !4549

dec_label_pc_4503c1.preheader:                    ; preds = %dec_label_pc_4503a0
  %8 = ptrtoint i32* %stack_var_-4 to i32, !insn.addr !4550
  %9 = add i32 %8, -260, !insn.addr !4551
  store i32 0, i32* %eax.0.reg2mem
  br label %dec_label_pc_4503c1

dec_label_pc_4503c1:                              ; preds = %dec_label_pc_4503c1, %dec_label_pc_4503c1.preheader
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %10 = trunc i32 %eax.0.reload to i8, !insn.addr !4551
  %11 = add i32 %eax.0.reload, %9, !insn.addr !4551
  %12 = inttoptr i32 %11 to i8*, !insn.addr !4551
  store i8 %10, i8* %12, align 1, !insn.addr !4551
  %13 = add nuw nsw i32 %eax.0.reload, 1, !insn.addr !4552
  %exitcond17 = icmp eq i32 %13, 256
  store i32 %13, i32* %eax.0.reg2mem, !insn.addr !4553
  br i1 %exitcond17, label %dec_label_pc_4503cd, label %dec_label_pc_4503c1, !insn.addr !4553

dec_label_pc_4503cd:                              ; preds = %dec_label_pc_4503c1
  %14 = load i8, i8* %stack_var_-1814, align 1, !insn.addr !4554
  store [256 x i8] [i8 32, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef], [256 x i8]* %sbVector_-264, align 1, !insn.addr !4555
  %15 = icmp eq i8 %14, 0, !insn.addr !4556
  %16 = icmp eq i1 %15, false, !insn.addr !4557
  br i1 %16, label %dec_label_pc_4503e2.lr.ph, label %dec_label_pc_450405, !insn.addr !4557

dec_label_pc_4503e2.lr.ph:                        ; preds = %dec_label_pc_4503cd
  %17 = zext i8 %14 to i32, !insn.addr !4554
  %18 = or i32 %17, 256, !insn.addr !4554
  %19 = ptrtoint i8* %stack_var_-1814 to i32, !insn.addr !4558
  store i32 %19, i32* %ecx.014.reg2mem
  store i32 %18, i32* %eax.113.reg2mem
  br label %dec_label_pc_4503e2

dec_label_pc_4503e2:                              ; preds = %dec_label_pc_4503e2.lr.ph, %dec_label_pc_4503fc
  %eax.113.reload = load i32, i32* %eax.113.reg2mem
  %ecx.014.reload = load i32, i32* %ecx.014.reg2mem
  %20 = add i32 %ecx.014.reload, 1, !insn.addr !4559
  %21 = inttoptr i32 %20 to i8*, !insn.addr !4559
  %22 = load i8, i8* %21, align 1, !insn.addr !4559
  %23 = zext i8 %22 to i32, !insn.addr !4559
  %24 = and i32 %eax.113.reload, 255, !insn.addr !4560
  %25 = icmp ugt i32 %24, %23
  store i32 %24, i32* %storemerge12.reg2mem, !insn.addr !4561
  br i1 %25, label %dec_label_pc_4503fc, label %dec_label_pc_4503ef, !insn.addr !4561

dec_label_pc_4503ef:                              ; preds = %dec_label_pc_4503e2, %dec_label_pc_4503ef
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %26 = add i32 %storemerge12.reload, %9, !insn.addr !4562
  %27 = inttoptr i32 %26 to i8*, !insn.addr !4562
  store i8 32, i8* %27, align 1, !insn.addr !4562
  %28 = add nuw nsw i32 %storemerge12.reload, 1, !insn.addr !4563
  %29 = icmp uge i32 %storemerge12.reload, %23
  %30 = icmp ult i32 %28, 256, !insn.addr !4564
  %31 = icmp eq i1 %30, false, !insn.addr !4565
  %or.cond = or i1 %29, %31
  store i32 %28, i32* %storemerge12.reg2mem, !insn.addr !4561
  br i1 %or.cond, label %dec_label_pc_4503fc, label %dec_label_pc_4503ef, !insn.addr !4561

dec_label_pc_4503fc:                              ; preds = %dec_label_pc_4503ef, %dec_label_pc_4503e2
  %32 = add i32 %ecx.014.reload, 2, !insn.addr !4566
  %33 = inttoptr i32 %32 to i8*, !insn.addr !4567
  %34 = load i8, i8* %33, align 1, !insn.addr !4567
  %35 = zext i8 %34 to i32, !insn.addr !4567
  %36 = icmp eq i8 %34, 0, !insn.addr !4556
  %37 = icmp eq i1 %36, false, !insn.addr !4557
  store i32 %32, i32* %ecx.014.reg2mem, !insn.addr !4557
  store i32 %35, i32* %eax.113.reg2mem, !insn.addr !4557
  br i1 %37, label %dec_label_pc_4503e2, label %dec_label_pc_450405, !insn.addr !4557

dec_label_pc_450405:                              ; preds = %dec_label_pc_4503fc, %dec_label_pc_4503cd
  %38 = load i32, i32* %2, align 4, !insn.addr !4568
  %39 = getelementptr inbounds [512 x i16], [512 x i16]* %wVector_-1800, i32 0, i32 0
  %40 = getelementptr inbounds [256 x i8], [256 x i8]* %sbVector_-264, i32 0, i32 0
  %41 = call i32 @function_4011c2(i32 0, i32 1, i8* nonnull %40, i32 256, i16* nonnull %39, i32 %38, i32 0), !insn.addr !4569
  %42 = load i32, i32* %2, align 4, !insn.addr !4570
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* %lowVector_-520, i32 0, i32 0
  %44 = add i32 %0, 540, !insn.addr !4571
  %45 = inttoptr i32 %44 to i32*, !insn.addr !4571
  %46 = load i32, i32* %45, align 4, !insn.addr !4571
  %47 = call i32 @function_4040f7(i32 0, i32 %46, i32 256, i8* nonnull %40, i32 256, i8* nonnull %43, i32 256, i32 %42, i32 0), !insn.addr !4572
  %48 = load i32, i32* %2, align 4, !insn.addr !4573
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %upVector_-776, i32 0, i32 0
  %50 = load i32, i32* %45, align 4, !insn.addr !4574
  %51 = call i32 @function_4040f7(i32 0, i32 %50, i32 512, i8* nonnull %40, i32 256, i8* nonnull %49, i32 256, i32 %48, i32 0), !insn.addr !4575
  %52 = add i32 %8, -1796, !insn.addr !4576
  %53 = add i32 %0, 25
  %54 = add i32 %0, 281, !insn.addr !4577
  store i32 0, i32* %eax.2.reg2mem, !insn.addr !4578
  br label %dec_label_pc_45046e, !insn.addr !4578

dec_label_pc_45046e:                              ; preds = %dec_label_pc_45049e, %dec_label_pc_450405
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  %55 = mul i32 %eax.2.reload, 2, !insn.addr !4576
  %56 = add i32 %52, %55, !insn.addr !4576
  %57 = inttoptr i32 %56 to i16*, !insn.addr !4576
  %58 = load i16, i16* %57, align 2, !insn.addr !4576
  %59 = and i16 %58, 1
  %60 = icmp eq i16 %59, 0, !insn.addr !4579
  br i1 %60, label %dec_label_pc_450489, label %dec_label_pc_45047b, !insn.addr !4580

dec_label_pc_45047b:                              ; preds = %dec_label_pc_45046e
  %61 = add i32 %eax.2.reload, %53, !insn.addr !4581
  %62 = inttoptr i32 %61 to i8*, !insn.addr !4581
  %63 = load i8, i8* %62, align 1, !insn.addr !4581
  %64 = or i8 %63, 16, !insn.addr !4581
  store i8 %64, i8* %62, align 1, !insn.addr !4581
  %65 = add i32 %eax.2.reload, %8, !insn.addr !4582
  %66 = add i32 %65, -516, !insn.addr !4582
  %67 = inttoptr i32 %66 to i8*, !insn.addr !4582
  %68 = load i8, i8* %67, align 1, !insn.addr !4582
  store i8 %68, i8* %ecx.1.reg2mem, !insn.addr !4583
  br label %dec_label_pc_45049e, !insn.addr !4583

dec_label_pc_450489:                              ; preds = %dec_label_pc_45046e
  %69 = and i16 %58, 2
  %70 = icmp eq i16 %69, 0, !insn.addr !4584
  store i8 0, i8* %ecx.1.reg2mem, !insn.addr !4585
  br i1 %70, label %dec_label_pc_45049e, label %dec_label_pc_45048e, !insn.addr !4585

dec_label_pc_45048e:                              ; preds = %dec_label_pc_450489
  %71 = add i32 %eax.2.reload, %53, !insn.addr !4586
  %72 = inttoptr i32 %71 to i8*, !insn.addr !4586
  %73 = load i8, i8* %72, align 1, !insn.addr !4586
  %74 = or i8 %73, 32, !insn.addr !4586
  store i8 %74, i8* %72, align 1, !insn.addr !4586
  %75 = add i32 %eax.2.reload, %8, !insn.addr !4587
  %76 = add i32 %75, -772, !insn.addr !4587
  %77 = inttoptr i32 %76 to i8*, !insn.addr !4587
  %78 = load i8, i8* %77, align 1, !insn.addr !4587
  store i8 %78, i8* %ecx.1.reg2mem, !insn.addr !4588
  br label %dec_label_pc_45049e, !insn.addr !4588

dec_label_pc_45049e:                              ; preds = %dec_label_pc_450489, %dec_label_pc_45048e, %dec_label_pc_45047b
  %ecx.1.reload = load i8, i8* %ecx.1.reg2mem
  %79 = add i32 %54, %eax.2.reload, !insn.addr !4577
  %80 = inttoptr i32 %79 to i8*, !insn.addr !4577
  store i8 %ecx.1.reload, i8* %80, align 1, !insn.addr !4577
  %81 = add nuw nsw i32 %eax.2.reload, 1, !insn.addr !4589
  %exitcond16 = icmp eq i32 %81, 256
  store i32 %81, i32* %eax.2.reg2mem, !insn.addr !4590
  br i1 %exitcond16, label %dec_label_pc_4504ea, label %dec_label_pc_45046e, !insn.addr !4590

dec_label_pc_4504ac:                              ; preds = %dec_label_pc_4503a0, %dec_label_pc_450378
  %82 = add i32 %0, 25
  %83 = add i32 %0, 281, !insn.addr !4591
  store i32 0, i32* %ecx.2.reg2mem, !insn.addr !4592
  br label %dec_label_pc_4504b5, !insn.addr !4592

dec_label_pc_4504b5:                              ; preds = %dec_label_pc_4504de, %dec_label_pc_4504ac
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %84 = add nsw i32 %ecx.2.reload, -65, !insn.addr !4593
  %85 = icmp ult i32 %84, 26
  br i1 %85, label %dec_label_pc_4504c0, label %dec_label_pc_4504ca, !insn.addr !4594

dec_label_pc_4504c0:                              ; preds = %dec_label_pc_4504b5
  %86 = add i32 %ecx.2.reload, %82, !insn.addr !4595
  %87 = inttoptr i32 %86 to i8*, !insn.addr !4595
  %88 = load i8, i8* %87, align 1, !insn.addr !4595
  %89 = or i8 %88, 16, !insn.addr !4595
  store i8 %89, i8* %87, align 1, !insn.addr !4595
  %90 = add nuw nsw i32 %ecx.2.reload, 32, !insn.addr !4596
  store i32 %90, i32* %eax.3.reg2mem, !insn.addr !4597
  br label %dec_label_pc_4504de, !insn.addr !4597

dec_label_pc_4504ca:                              ; preds = %dec_label_pc_4504b5
  %91 = add nsw i32 %ecx.2.reload, -97, !insn.addr !4598
  %92 = icmp ult i32 %91, 26
  store i32 0, i32* %eax.3.reg2mem, !insn.addr !4599
  br i1 %92, label %dec_label_pc_4504cf, label %dec_label_pc_4504de, !insn.addr !4599

dec_label_pc_4504cf:                              ; preds = %dec_label_pc_4504ca
  %93 = add i32 %ecx.2.reload, %82, !insn.addr !4600
  %94 = inttoptr i32 %93 to i8*, !insn.addr !4601
  %95 = load i8, i8* %94, align 1, !insn.addr !4601
  %96 = or i8 %95, 32, !insn.addr !4601
  store i8 %96, i8* %94, align 1, !insn.addr !4601
  %97 = add nsw i32 %ecx.2.reload, -32, !insn.addr !4602
  store i32 %97, i32* %eax.3.reg2mem, !insn.addr !4603
  br label %dec_label_pc_4504de, !insn.addr !4603

dec_label_pc_4504de:                              ; preds = %dec_label_pc_4504ca, %dec_label_pc_4504cf, %dec_label_pc_4504c0
  %eax.3.reload = load i32, i32* %eax.3.reg2mem
  %98 = trunc i32 %eax.3.reload to i8, !insn.addr !4591
  %99 = add i32 %83, %ecx.2.reload, !insn.addr !4591
  %100 = inttoptr i32 %99 to i8*, !insn.addr !4591
  store i8 %98, i8* %100, align 1, !insn.addr !4591
  %101 = add nuw nsw i32 %ecx.2.reload, 1, !insn.addr !4604
  %exitcond = icmp eq i32 %101, 256
  store i32 %101, i32* %ecx.2.reg2mem, !insn.addr !4605
  br i1 %exitcond, label %dec_label_pc_4504ea, label %dec_label_pc_4504b5, !insn.addr !4605

dec_label_pc_4504ea:                              ; preds = %dec_label_pc_45049e, %dec_label_pc_4504de
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !4606
  ret void, !insn.addr !4607
}

define i32 @setmbcp_internal(i32 %requested_codepage, i1 %is_for_crt_initialization, i32 %ptd, %__crt_multibyte_data** %current_multibyte_data) local_unnamed_addr {
dec_label_pc_450559:
  %edi.1.reg2mem = alloca i32, !insn.addr !4608
  %esi.0.reg2mem = alloca i32, !insn.addr !4608
  %esp.1.reg2mem = alloca i32, !insn.addr !4608
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  store i32 %ptd, i32* %stack_var_12, align 4
  %stack_var_-24 = alloca i32, align 4
  %0 = call %__crt_multibyte_data* @update_thread_multibyte_data_internal(i32 %ptd, %__crt_multibyte_data** %current_multibyte_data), !insn.addr !4609
  store i32 %requested_codepage, i32* %stack_var_-36, align 4, !insn.addr !4610
  %1 = call i32 @getSystemCP(i32 %requested_codepage), !insn.addr !4611
  store i32 %1, i32* %stack_var_-16, align 4, !insn.addr !4612
  %2 = add i32 %ptd, 72
  %3 = inttoptr i32 %2 to i32*
  %4 = load i32, i32* %3, align 4, !insn.addr !4613
  %5 = add i32 %4, 4, !insn.addr !4614
  %6 = inttoptr i32 %5 to i32*, !insn.addr !4614
  %7 = load i32, i32* %6, align 4, !insn.addr !4614
  %8 = icmp eq i32 %1, %7, !insn.addr !4614
  %9 = icmp eq i1 %8, false, !insn.addr !4615
  br i1 %9, label %dec_label_pc_450589, label %dec_label_pc_450585, !insn.addr !4615

dec_label_pc_450585:                              ; preds = %dec_label_pc_450559
  ret i32 0, !insn.addr !4616

dec_label_pc_450589:                              ; preds = %dec_label_pc_450559
  %10 = call i32* @_malloc_base(i32 544), !insn.addr !4617
  %11 = ptrtoint i32* %10 to i32, !insn.addr !4617
  %12 = ptrtoint i32* %stack_var_-36 to i32, !insn.addr !4618
  %13 = icmp eq i32* %10, null, !insn.addr !4619
  store i32 %12, i32* %esp.1.reg2mem, !insn.addr !4620
  store i32 -1, i32* %esi.0.reg2mem, !insn.addr !4620
  store i32 %11, i32* %edi.1.reg2mem, !insn.addr !4620
  br i1 %13, label %dec_label_pc_4505d0, label %dec_label_pc_4505a0, !insn.addr !4620

dec_label_pc_4505a0:                              ; preds = %dec_label_pc_450589
  %14 = load i32, i32* %3, align 4, !insn.addr !4621
  %15 = inttoptr i32 %14 to i8*, !insn.addr !4622
  %16 = bitcast i32* %10 to i8*, !insn.addr !4622
  call void @__asm_rep_movsd_memcpy(i8* %16, i8* %15, i32 136), !insn.addr !4622
  store i32 0, i32* %10, align 4, !insn.addr !4623
  %17 = call i32 @function_40407a(i32 %1, i32 %11), !insn.addr !4624
  %18 = icmp eq i32 %17, -1, !insn.addr !4625
  %19 = icmp eq i1 %18, false, !insn.addr !4626
  br i1 %19, label %dec_label_pc_4505de, label %dec_label_pc_4505c3, !insn.addr !4626

dec_label_pc_4505c3:                              ; preds = %dec_label_pc_4505a0
  %20 = call i32* @_errno(), !insn.addr !4627
  store i32 22, i32* %20, align 4, !insn.addr !4628
  store i32 %12, i32* %esp.1.reg2mem, !insn.addr !4628
  store i32 -1, i32* %esi.0.reg2mem, !insn.addr !4628
  store i32 %11, i32* %edi.1.reg2mem, !insn.addr !4628
  br label %dec_label_pc_4505d0, !insn.addr !4628

dec_label_pc_4505d0:                              ; preds = %dec_label_pc_450589, %dec_label_pc_4505c3, %dec_label_pc_450663, %dec_label_pc_450630, %dec_label_pc_450627, %dec_label_pc_45060b
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %21 = add i32 %esp.1.reload, -4, !insn.addr !4629
  %22 = inttoptr i32 %21 to i32*, !insn.addr !4629
  store i32 %edi.1.reload, i32* %22, align 4, !insn.addr !4629
  call void @_free_base(i32* nonnull @80), !insn.addr !4630
  ret i32 %esi.0.reload, !insn.addr !4631

dec_label_pc_4505de:                              ; preds = %dec_label_pc_4505a0
  %23 = icmp eq i1 %is_for_crt_initialization, false, !insn.addr !4632
  %24 = icmp eq i1 %23, false, !insn.addr !4633
  br i1 %24, label %dec_label_pc_4505e9, label %dec_label_pc_4505e4, !insn.addr !4633

dec_label_pc_4505e4:                              ; preds = %dec_label_pc_4505de
  %25 = call i32 @function_403882(), !insn.addr !4634
  br label %dec_label_pc_4505e9, !insn.addr !4634

dec_label_pc_4505e9:                              ; preds = %dec_label_pc_4505e4, %dec_label_pc_4505de
  %26 = load i32, i32* %stack_var_12, align 4, !insn.addr !4635
  %27 = add i32 %26, 72, !insn.addr !4636
  %28 = inttoptr i32 %27 to i32*, !insn.addr !4636
  %29 = load i32, i32* %28, align 4, !insn.addr !4636
  %30 = inttoptr i32 %29 to i32*, !insn.addr !4637
  %31 = load i32, i32* %30, align 4, !insn.addr !4637
  %32 = add i32 %31, -1, !insn.addr !4637
  store i32 %32, i32* %30, align 4, !insn.addr !4637
  %33 = icmp eq i32 %31, 1, !insn.addr !4638
  %34 = icmp eq i1 %33, false, !insn.addr !4639
  br i1 %34, label %dec_label_pc_45060b, label %dec_label_pc_4505f6, !insn.addr !4639

dec_label_pc_4505f6:                              ; preds = %dec_label_pc_4505e9
  %35 = load i32, i32* %stack_var_12, align 4, !insn.addr !4640
  %36 = add i32 %35, 72, !insn.addr !4641
  %37 = inttoptr i32 %36 to i32*, !insn.addr !4641
  %38 = load i32, i32* %37, align 4, !insn.addr !4641
  %39 = icmp eq i32 %38, ptrtoint (%__crt_multibyte_data* @__acrt_initial_multibyte_data to i32), !insn.addr !4641
  br i1 %39, label %dec_label_pc_45060b, label %dec_label_pc_450602, !insn.addr !4642

dec_label_pc_450602:                              ; preds = %dec_label_pc_4505f6
  %40 = inttoptr i32 %38 to i32*, !insn.addr !4643
  call void @_free_base(i32* %40), !insn.addr !4643
  br label %dec_label_pc_45060b, !insn.addr !4644

dec_label_pc_45060b:                              ; preds = %dec_label_pc_450602, %dec_label_pc_4505f6, %dec_label_pc_4505e9
  store i32 1, i32* %10, align 4, !insn.addr !4645
  %41 = load i32, i32* %stack_var_12, align 4, !insn.addr !4646
  %42 = add i32 %41, 72, !insn.addr !4647
  %43 = inttoptr i32 %42 to i32*, !insn.addr !4647
  store i32 %11, i32* %43, align 4, !insn.addr !4647
  %44 = load i32, i32* %stack_var_12, align 4, !insn.addr !4648
  %45 = add i32 %44, 848, !insn.addr !4649
  %46 = inttoptr i32 %45 to i8*, !insn.addr !4649
  %47 = load i8, i8* %46, align 1, !insn.addr !4649
  %48 = and i8 %47, 2, !insn.addr !4649
  %49 = icmp eq i8 %48, 0, !insn.addr !4649
  %50 = icmp eq i1 %49, false, !insn.addr !4650
  store i32 %12, i32* %esp.1.reg2mem, !insn.addr !4650
  store i32 %17, i32* %esi.0.reg2mem, !insn.addr !4650
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !4650
  br i1 %50, label %dec_label_pc_4505d0, label %dec_label_pc_450627, !insn.addr !4650

dec_label_pc_450627:                              ; preds = %dec_label_pc_45060b
  %51 = load i8, i8* bitcast (i32* @__globallocalestatus to i8*), align 4, !insn.addr !4651
  %52 = and i8 %51, 1, !insn.addr !4651
  %53 = icmp eq i8 %52, 0, !insn.addr !4651
  %54 = icmp eq i1 %53, false, !insn.addr !4652
  store i32 %12, i32* %esp.1.reg2mem, !insn.addr !4652
  store i32 %17, i32* %esi.0.reg2mem, !insn.addr !4652
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !4652
  br i1 %54, label %dec_label_pc_4505d0, label %dec_label_pc_450630, !insn.addr !4652

dec_label_pc_450630:                              ; preds = %dec_label_pc_450627
  %55 = ptrtoint i32* %stack_var_12 to i32, !insn.addr !4653
  store i32 %55, i32* %stack_var_-24, align 4, !insn.addr !4653
  store i32 5, i32* %stack_var_-16, align 4, !insn.addr !4654
  store i32 5, i32* %stack_var_-12, align 4, !insn.addr !4655
  %56 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !4656
  store i32 %56, i32* %stack_var_-48, align 4, !insn.addr !4656
  %57 = ptrtoint i32* %stack_var_-48 to i32, !insn.addr !4656
  call void @"__crt_seh_guarded_call<void>::operator()<<lambda_ceb1ee4838e85a9d631eb091e2fbe199>,<lambda_ae742caa10f662c28703da3d2ea5e57e> &,<lambda_cd08b5d6af4937fe54fc07d0c9bf6b37> >"(i32 %56, i32* nonnull %stack_var_-24, i32* nonnull %stack_var_-16, i32* nonnull @80), !insn.addr !4657
  store i32 %57, i32* %esp.1.reg2mem, !insn.addr !4658
  store i32 %17, i32* %esi.0.reg2mem, !insn.addr !4658
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !4658
  br i1 %23, label %dec_label_pc_4505d0, label %dec_label_pc_450663, !insn.addr !4658

dec_label_pc_450663:                              ; preds = %dec_label_pc_450630
  %58 = load %__crt_multibyte_data*, %__crt_multibyte_data** %current_multibyte_data, align 4
  %59 = ptrtoint %__crt_multibyte_data* %58 to i32
  store i32 %59, i32* bitcast (%__crt_multibyte_data** @global_var_47b310 to i32*), align 4, !insn.addr !4659
  store i32 %57, i32* %esp.1.reg2mem, !insn.addr !4660
  store i32 %17, i32* %esi.0.reg2mem, !insn.addr !4660
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !4660
  br label %dec_label_pc_4505d0, !insn.addr !4660
}

define %__crt_multibyte_data* @update_thread_multibyte_data_internal(i32 %ptd, %__crt_multibyte_data** %current_multibyte_data) local_unnamed_addr {
dec_label_pc_4506b8:
  %esi.1.reg2mem = alloca i32, !insn.addr !4661
  %esi.0.reg2mem = alloca i32, !insn.addr !4661
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a738, i32 12), !insn.addr !4662
  %2 = add i32 %0, -28, !insn.addr !4663
  %3 = inttoptr i32 %2 to i32*, !insn.addr !4663
  store i32 0, i32* %3, align 4, !insn.addr !4663
  %4 = add i32 %0, 8, !insn.addr !4664
  %5 = inttoptr i32 %4 to i32*, !insn.addr !4664
  %6 = load i32, i32* %5, align 4, !insn.addr !4664
  %7 = load i32, i32* @__globallocalestatus, align 4, !insn.addr !4665
  %8 = add i32 %6, 848, !insn.addr !4666
  %9 = inttoptr i32 %8 to i32*, !insn.addr !4666
  %10 = load i32, i32* %9, align 4, !insn.addr !4666
  %11 = and i32 %10, %7, !insn.addr !4666
  %12 = icmp eq i32 %11, 0, !insn.addr !4666
  br i1 %12, label %dec_label_pc_4506e7, label %dec_label_pc_4506d9, !insn.addr !4667

dec_label_pc_4506d9:                              ; preds = %dec_label_pc_4506b8
  %13 = add i32 %6, 76, !insn.addr !4668
  %14 = inttoptr i32 %13 to i32*, !insn.addr !4668
  %15 = load i32, i32* %14, align 4, !insn.addr !4668
  %16 = icmp eq i32 %15, 0, !insn.addr !4668
  br i1 %16, label %dec_label_pc_4506e7, label %dec_label_pc_4506de, !insn.addr !4669

dec_label_pc_4506de:                              ; preds = %dec_label_pc_4506d9
  %17 = add i32 %6, 72, !insn.addr !4670
  %18 = inttoptr i32 %17 to i32*, !insn.addr !4670
  %19 = load i32, i32* %18, align 4, !insn.addr !4670
  store i32 %19, i32* %esi.0.reg2mem, !insn.addr !4670
  br label %dec_label_pc_4506e1, !insn.addr !4670

dec_label_pc_4506e1:                              ; preds = %dec_label_pc_450726, %dec_label_pc_4506de
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %20 = icmp eq i32 %esi.0.reload, 0, !insn.addr !4671
  br i1 %20, label %dec_label_pc_450752, label %dec_label_pc_450740, !insn.addr !4672

dec_label_pc_4506e7:                              ; preds = %dec_label_pc_4506d9, %dec_label_pc_4506b8
  %21 = call i32 @function_40452a(i32 5), !insn.addr !4673
  %22 = add i32 %0, -4, !insn.addr !4674
  %23 = inttoptr i32 %22 to i32*, !insn.addr !4674
  store i32 0, i32* %23, align 4, !insn.addr !4674
  %24 = add i32 %6, 72, !insn.addr !4675
  %25 = inttoptr i32 %24 to i32*, !insn.addr !4675
  %26 = load i32, i32* %25, align 4, !insn.addr !4675
  store i32 %26, i32* %3, align 4, !insn.addr !4676
  %27 = add i32 %0, 12, !insn.addr !4677
  %28 = inttoptr i32 %27 to i32*, !insn.addr !4677
  %29 = load i32, i32* %28, align 4, !insn.addr !4677
  %30 = inttoptr i32 %29 to i32*, !insn.addr !4678
  %31 = load i32, i32* %30, align 4, !insn.addr !4678
  %32 = icmp eq i32 %26, %31, !insn.addr !4678
  store i32 %26, i32* %esi.1.reg2mem, !insn.addr !4679
  br i1 %32, label %dec_label_pc_450726, label %dec_label_pc_4506ff, !insn.addr !4679

dec_label_pc_4506ff:                              ; preds = %dec_label_pc_4506e7
  %33 = icmp eq i32 %26, 0, !insn.addr !4680
  br i1 %33, label %dec_label_pc_45071b, label %dec_label_pc_450703, !insn.addr !4681

dec_label_pc_450703:                              ; preds = %dec_label_pc_4506ff
  %34 = inttoptr i32 %26 to i32*, !insn.addr !4682
  %35 = load i32, i32* %34, align 4, !insn.addr !4682
  %36 = add i32 %35, -1, !insn.addr !4682
  %37 = icmp eq i32 %36, 0, !insn.addr !4682
  store i32 %36, i32* %34, align 4, !insn.addr !4682
  %38 = icmp eq i1 %37, false, !insn.addr !4683
  %39 = icmp eq i32 %26, ptrtoint (%__crt_multibyte_data* @__acrt_initial_multibyte_data to i32), !insn.addr !4684
  %or.cond = or i1 %39, %38
  br i1 %or.cond, label %dec_label_pc_45071b, label %dec_label_pc_450714, !insn.addr !4683

dec_label_pc_450714:                              ; preds = %dec_label_pc_450703
  call void @_free_base(i32* %34), !insn.addr !4685
  br label %dec_label_pc_45071b, !insn.addr !4686

dec_label_pc_45071b:                              ; preds = %dec_label_pc_450714, %dec_label_pc_450703, %dec_label_pc_4506ff
  %40 = load i32, i32* %30, align 4, !insn.addr !4687
  store i32 %40, i32* %25, align 4, !insn.addr !4688
  store i32 %40, i32* %3, align 4, !insn.addr !4689
  %41 = inttoptr i32 %40 to i32*, !insn.addr !4690
  %42 = load i32, i32* %41, align 4, !insn.addr !4690
  %43 = add i32 %42, 1, !insn.addr !4690
  store i32 %43, i32* %41, align 4, !insn.addr !4690
  store i32 %40, i32* %esi.1.reg2mem, !insn.addr !4690
  br label %dec_label_pc_450726, !insn.addr !4690

dec_label_pc_450726:                              ; preds = %dec_label_pc_45071b, %dec_label_pc_4506e7
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  store i32 -2, i32* %23, align 4, !insn.addr !4691
  %44 = call i32 @function_450737(), !insn.addr !4692
  store i32 %esi.1.reload, i32* %esi.0.reg2mem, !insn.addr !4693
  br label %dec_label_pc_4506e1, !insn.addr !4693

dec_label_pc_450740:                              ; preds = %dec_label_pc_4506e1
  %45 = add i32 %0, -16, !insn.addr !4694
  %46 = inttoptr i32 %45 to i32*, !insn.addr !4694
  %47 = load i32, i32* %46, align 4, !insn.addr !4694
  call void @__writefsdword(i32 0, i32 %47), !insn.addr !4695
  %48 = inttoptr i32 %esi.0.reload to %__crt_multibyte_data*, !insn.addr !4696
  ret %__crt_multibyte_data* %48, !insn.addr !4696

dec_label_pc_450752:                              ; preds = %dec_label_pc_4506e1
  call void @abort(), !insn.addr !4697
  %49 = call i32 @__asm_int3(), !insn.addr !4698
  %50 = call i32 @__asm_int3(), !insn.addr !4699
  %51 = call i32 @__asm_int3(), !insn.addr !4700
  %52 = call i32 @__asm_int3(), !insn.addr !4701
  %53 = call i32 @__asm_int3(), !insn.addr !4702
  %54 = call i32 @__asm_int3(), !insn.addr !4703
  %55 = call i32 @__asm_int3(), !insn.addr !4704
  %56 = call i32 @__asm_int3(), !insn.addr !4705
  %57 = call i32 @__asm_int3(), !insn.addr !4706
  %58 = call i32 @__asm_int3(), !insn.addr !4707
  %59 = call i32 @__asm_int3(), !insn.addr !4708
  %60 = call i32 @__asm_int3(), !insn.addr !4709
  %61 = call i32 @__asm_int3(), !insn.addr !4710
  %62 = call i32 @__asm_int3(), !insn.addr !4711
  %63 = call i32 @__asm_int3(), !insn.addr !4712
  %64 = call i32 @__asm_int3(), !insn.addr !4713
  %65 = call i32 @__asm_int3(), !insn.addr !4714
  %66 = call i32 @__asm_int3(), !insn.addr !4715
  %67 = call i32 @__asm_int3(), !insn.addr !4716
  %68 = call i32 @__asm_int3(), !insn.addr !4717
  %69 = call i32 @__asm_int3(), !insn.addr !4718
  %70 = call i32 @__asm_int3(), !insn.addr !4719
  %71 = call i32 @__asm_int3(), !insn.addr !4720
  %72 = call i32 @__asm_int3(), !insn.addr !4721
  %73 = call i32 @__asm_int3(), !insn.addr !4722
  %74 = call i32 @__asm_int3(), !insn.addr !4723
  %75 = call i32 @__asm_int3(), !insn.addr !4724
  %76 = call i32 @__asm_int3(), !insn.addr !4725
  %77 = call i32 @__asm_int3(), !insn.addr !4726
  %78 = call i32 @__asm_int3(), !insn.addr !4727
  %79 = call i32 @__asm_int3(), !insn.addr !4728
  %80 = call i32 @__asm_int3(), !insn.addr !4729
  %81 = call i32 @__asm_int3(), !insn.addr !4730
  %82 = call i32 @__asm_int3(), !insn.addr !4731
  %83 = call i32 @__asm_int3(), !insn.addr !4732
  %84 = call i32 @__asm_int3(), !insn.addr !4733
  %85 = call i32 @__asm_int3(), !insn.addr !4734
  %86 = call i32 @__asm_int3(), !insn.addr !4735
  %87 = call i32 @__asm_int3(), !insn.addr !4736
  %88 = call i32 @__asm_int3(), !insn.addr !4737
  %89 = call i32 @__asm_int3(), !insn.addr !4738
  %90 = inttoptr i32 %89 to %__crt_multibyte_data*, !insn.addr !4738
  ret %__crt_multibyte_data* %90, !insn.addr !4738
}

define i32 @function_450737() local_unnamed_addr {
dec_label_pc_450737:
  %0 = call i32 @function_4017d5(i32 5), !insn.addr !4739
  ret i32 %0, !insn.addr !4740
}

define i1 @__acrt_initialize_multibyte() local_unnamed_addr {
dec_label_pc_450783:
  %stack_var_-4 = alloca %__crt_multibyte_data, align 8
  %0 = load i8, i8* bitcast (i1* @initialized to i8*), align 1, !insn.addr !4741
  %1 = icmp eq i8 %0, 0, !insn.addr !4741
  %2 = icmp eq i1 %1, false, !insn.addr !4742
  br i1 %2, label %dec_label_pc_4507c8, label %dec_label_pc_45078c, !insn.addr !4742

dec_label_pc_45078c:                              ; preds = %dec_label_pc_450783
  store i32 ptrtoint (%__crt_multibyte_data* @__acrt_initial_multibyte_data to i32), i32* @__acrt_current_multibyte_data, align 4, !insn.addr !4743
  store i32 ptrtoint ([1 x [256 x i8]]* @_mbcasemaps to i32), i32* @_mbcasemap, align 4, !insn.addr !4744
  store i32 ptrtoint ([1 x [257 x i8]]* @_mbctypes to i32), i32* @_mbctype, align 4, !insn.addr !4745
  %3 = call i32 @function_403bde(), !insn.addr !4746
  store %__crt_multibyte_data { i32 ptrtoint (i32* @__acrt_current_multibyte_data to i32), i32 undef, i32 undef, [6 x i16] undef, [257 x i8] undef, [256 x i8] undef, i16* undef }, %__crt_multibyte_data* %stack_var_-4, align 8, !insn.addr !4747
  %4 = getelementptr inbounds %__crt_multibyte_data, %__crt_multibyte_data* %stack_var_-4, i32 0, i32 0, !insn.addr !4748
  %5 = load i32, i32* %4, align 8, !insn.addr !4748
  %6 = inttoptr i32 %5 to %__crt_multibyte_data**, !insn.addr !4748
  %7 = call i32 @setmbcp_internal(i32 -3, i1 true, i32 %3, %__crt_multibyte_data** %6), !insn.addr !4748
  store i8 1, i8* bitcast (i1* @initialized to i8*), align 1, !insn.addr !4749
  br label %dec_label_pc_4507c8, !insn.addr !4749

dec_label_pc_4507c8:                              ; preds = %dec_label_pc_45078c, %dec_label_pc_450783
  ret i1 true, !insn.addr !4750
}

define i32 @_setmbcp_nolock(i32 %codepage, %__crt_multibyte_data* %ptmbci) local_unnamed_addr {
dec_label_pc_450867:
  %esp.2.reg2mem = alloca i32, !insn.addr !4751
  %edi.2.reg2mem = alloca i32, !insn.addr !4751
  %edx.1.reg2mem = alloca i32, !insn.addr !4751
  %ecx.4.reg2mem = alloca i32, !insn.addr !4751
  %edx.011.reg2mem = alloca i32, !insn.addr !4751
  %ecx.3.reg2mem = alloca i32, !insn.addr !4751
  %.reg2mem = alloca i8, !insn.addr !4751
  %edi.1.reg2mem = alloca i32, !insn.addr !4751
  %stack_var_-32.1.in.reg2mem = alloca i32, !insn.addr !4751
  %stack_var_-32.0.lcssa.reg2mem = alloca i32, !insn.addr !4751
  %ecx.2.reg2mem = alloca i32, !insn.addr !4751
  %eax.2.reg2mem = alloca i32, !insn.addr !4751
  %storemerge12.reg2mem = alloca i32, !insn.addr !4751
  %eax.1.reg2mem = alloca i32, !insn.addr !4751
  %esp.1.reg2mem = alloca i32, !insn.addr !4751
  %edi.0.reg2mem = alloca i32, !insn.addr !4751
  %esp.0.reg2mem = alloca i32, !insn.addr !4751
  %eax.013.reg2mem = alloca i32, !insn.addr !4751
  %ecx.014.reg2mem = alloca i32, !insn.addr !4751
  %0 = call i1 @__decompiler_undefined_function_6()
  %1 = ptrtoint %__crt_multibyte_data* %ptmbci to i32
  %stack_var_-22 = alloca i8, align 1
  %2 = call i8 @__decompiler_undefined_function_7()
  %stack_var_-60 = alloca i8*, align 4
  %cpInfo_-28 = alloca %_cpinfo.449, align 8
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 %codepage, i32* %stack_var_-52, align 4, !insn.addr !4752
  %3 = call i32 @getSystemCP(i32 %codepage), !insn.addr !4753
  %4 = ptrtoint i32* %stack_var_-48 to i32, !insn.addr !4754
  %5 = icmp eq i32 %3, 0, !insn.addr !4755
  store i32 %4, i32* %esp.2.reg2mem, !insn.addr !4756
  br i1 %5, label %dec_label_pc_450a42, label %dec_label_pc_45089b.preheader, !insn.addr !4756

dec_label_pc_45089b.preheader:                    ; preds = %dec_label_pc_450867
  %6 = load i32, i32* @__rgcode_page_info, align 4, !insn.addr !4757
  %7 = icmp eq i32 %6, %3, !insn.addr !4757
  store i32 0, i32* %ecx.014.reg2mem, !insn.addr !4758
  store i32 0, i32* %eax.013.reg2mem, !insn.addr !4758
  store i32 0, i32* %stack_var_-32.0.lcssa.reg2mem, !insn.addr !4758
  br i1 %7, label %dec_label_pc_45099a, label %dec_label_pc_4508a7, !insn.addr !4758

dec_label_pc_45089b:                              ; preds = %dec_label_pc_4508a7
  %ecx.014.reload = load i32, i32* %ecx.014.reg2mem
  %8 = add nuw nsw i32 %ecx.014.reload, 1, !insn.addr !4759
  %9 = add i32 %eax.013.reload, add (i32 ptrtoint (i32* @__rgcode_page_info to i32), i32 48), !insn.addr !4757
  %10 = inttoptr i32 %9 to i32*, !insn.addr !4757
  %11 = load i32, i32* %10, align 4, !insn.addr !4757
  %12 = icmp eq i32 %11, %3, !insn.addr !4757
  store i32 %8, i32* %ecx.014.reg2mem, !insn.addr !4758
  store i32 %13, i32* %eax.013.reg2mem, !insn.addr !4758
  br i1 %12, label %dec_label_pc_45089b.dec_label_pc_45099a_crit_edge, label %dec_label_pc_4508a7, !insn.addr !4758

dec_label_pc_4508a7:                              ; preds = %dec_label_pc_45089b.preheader, %dec_label_pc_45089b
  %eax.013.reload = load i32, i32* %eax.013.reg2mem
  %13 = add nuw nsw i32 %eax.013.reload, 48, !insn.addr !4760
  %14 = icmp ult i32 %13, 240, !insn.addr !4761
  br i1 %14, label %dec_label_pc_45089b, label %dec_label_pc_4508b5, !insn.addr !4762

dec_label_pc_4508b5:                              ; preds = %dec_label_pc_4508a7
  %15 = icmp eq i32 %3, 65000, !insn.addr !4763
  br i1 %15, label %dec_label_pc_450a4b, label %dec_label_pc_4508c1, !insn.addr !4764

dec_label_pc_4508c1:                              ; preds = %dec_label_pc_4508b5
  %16 = and i32 %3, 65535, !insn.addr !4765
  store i32 %16, i32* %stack_var_-52, align 4, !insn.addr !4766
  %17 = call i1 @IsValidCodePage(i32 %16), !insn.addr !4767
  %18 = icmp eq i1 %17, false, !insn.addr !4768
  br i1 %18, label %dec_label_pc_450a4b, label %dec_label_pc_4508d3, !insn.addr !4769

dec_label_pc_4508d3:                              ; preds = %dec_label_pc_4508c1
  %19 = icmp eq i32 %3, 65001, !insn.addr !4770
  %20 = icmp eq i1 %19, false, !insn.addr !4771
  br i1 %20, label %dec_label_pc_450902, label %dec_label_pc_4508dc, !insn.addr !4771

dec_label_pc_4508dc:                              ; preds = %dec_label_pc_4508d3
  %21 = ptrtoint i32* %stack_var_-52 to i32, !insn.addr !4766
  %22 = add i32 %1, 4, !insn.addr !4772
  %23 = inttoptr i32 %22 to i32*, !insn.addr !4772
  store i32 65001, i32* %23, align 4, !insn.addr !4772
  %24 = add i32 %1, 540, !insn.addr !4773
  %25 = inttoptr i32 %24 to i32*, !insn.addr !4773
  store i32 0, i32* %25, align 4, !insn.addr !4773
  %26 = add i32 %1, 24, !insn.addr !4774
  %27 = inttoptr i32 %26 to i32*, !insn.addr !4774
  store i32 0, i32* %27, align 4, !insn.addr !4774
  %28 = add i32 %1, 28, !insn.addr !4775
  %29 = inttoptr i32 %28 to i16*, !insn.addr !4775
  store i16 0, i16* %29, align 2, !insn.addr !4775
  store i32 %21, i32* %esp.0.reg2mem, !insn.addr !4775
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !4775
  br label %dec_label_pc_4508ec, !insn.addr !4775

dec_label_pc_4508ec:                              ; preds = %dec_label_pc_45096d, %dec_label_pc_450911, %dec_label_pc_4508dc
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %30 = add i32 %1, 8, !insn.addr !4776
  %31 = inttoptr i32 %30 to i32*, !insn.addr !4776
  store i32 %edi.0.reload, i32* %31, align 4, !insn.addr !4776
  %32 = add i32 %1, 12, !insn.addr !4777
  %33 = inttoptr i32 %32 to i32*, !insn.addr !4778
  store i32 0, i32* %33, align 4, !insn.addr !4778
  %34 = select i1 %0, i32 -4, i32 4, !insn.addr !4778
  %35 = add i32 %34, %32, !insn.addr !4778
  %36 = inttoptr i32 %35 to i32*, !insn.addr !4779
  store i32 0, i32* %36, align 4, !insn.addr !4779
  %37 = add i32 %35, %34, !insn.addr !4779
  %38 = inttoptr i32 %37 to i32*, !insn.addr !4780
  store i32 0, i32* %38, align 4, !insn.addr !4780
  store i32 %esp.0.reload, i32* %esp.1.reg2mem, !insn.addr !4780
  br label %dec_label_pc_4508f7, !insn.addr !4780

dec_label_pc_4508f7:                              ; preds = %dec_label_pc_450a2c, %dec_label_pc_4508ec
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %39 = add i32 %esp.1.reload, -4, !insn.addr !4781
  %40 = inttoptr i32 %39 to i32*, !insn.addr !4781
  store i32 %1, i32* %40, align 4, !insn.addr !4781
  call void @setSBUpLow(%__crt_multibyte_data* bitcast (i32* @80 to %__crt_multibyte_data*)), !insn.addr !4782
  br label %dec_label_pc_450a4b, !insn.addr !4783

dec_label_pc_450902:                              ; preds = %dec_label_pc_4508d3
  %41 = bitcast %_cpinfo.449* %cpInfo_-28 to %_cpinfo*
  %42 = inttoptr i32 %3 to i8*, !insn.addr !4784
  store i8* %42, i8** %stack_var_-60, align 4, !insn.addr !4784
  %43 = ptrtoint i8** %stack_var_-60 to i32, !insn.addr !4784
  %44 = call i1 @GetCPInfo(i32 %3, %_cpinfo* nonnull %41), !insn.addr !4785
  %45 = icmp eq i1 %44, false, !insn.addr !4786
  br i1 %45, label %dec_label_pc_450986, label %dec_label_pc_450911, !insn.addr !4787

dec_label_pc_450911:                              ; preds = %dec_label_pc_450902
  %46 = add i32 %1, 24, !insn.addr !4788
  %47 = inttoptr i32 %46 to i8*, !insn.addr !4789
  call void @memset(i8* %47, i8 0, i32 257), !insn.addr !4790
  %48 = add i32 %1, 4, !insn.addr !4791
  %49 = inttoptr i32 %48 to i32*, !insn.addr !4791
  store i32 %3, i32* %49, align 4, !insn.addr !4791
  %50 = getelementptr inbounds %_cpinfo.449, %_cpinfo.449* %cpInfo_-28, i32 0, i32 0, !insn.addr !4792
  %51 = load i32, i32* %50, align 8, !insn.addr !4792
  %52 = icmp eq i32 %51, 2, !insn.addr !4792
  %53 = add i32 %1, 540, !insn.addr !4793
  %54 = inttoptr i32 %53 to i32*, !insn.addr !4793
  store i32 0, i32* %54, align 4, !insn.addr !4793
  %55 = icmp eq i1 %52, false, !insn.addr !4794
  store i32 %43, i32* %esp.0.reg2mem, !insn.addr !4794
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !4794
  br i1 %55, label %dec_label_pc_4508ec, label %dec_label_pc_450932, !insn.addr !4794

dec_label_pc_450932:                              ; preds = %dec_label_pc_450911
  %56 = icmp eq i8 %2, 0, !insn.addr !4795
  br i1 %56, label %dec_label_pc_45095c, label %dec_label_pc_45093b.preheader, !insn.addr !4796

dec_label_pc_45093b.preheader:                    ; preds = %dec_label_pc_450932
  %57 = ptrtoint i8* %stack_var_-22 to i32, !insn.addr !4797
  %58 = add i32 %1, 25
  store i32 %57, i32* %eax.1.reg2mem
  br label %dec_label_pc_45093b

dec_label_pc_45093b:                              ; preds = %dec_label_pc_45093b.preheader, %dec_label_pc_450954
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %59 = add i32 %eax.1.reload, 1, !insn.addr !4798
  %60 = inttoptr i32 %59 to i8*, !insn.addr !4798
  %61 = load i8, i8* %60, align 1, !insn.addr !4798
  %62 = icmp eq i8 %61, 0, !insn.addr !4799
  br i1 %62, label %dec_label_pc_45095c, label %dec_label_pc_450942, !insn.addr !4800

dec_label_pc_450942:                              ; preds = %dec_label_pc_45093b
  %63 = inttoptr i32 %eax.1.reload to i8*, !insn.addr !4801
  %64 = load i8, i8* %63, align 1, !insn.addr !4801
  %65 = icmp ugt i8 %64, %61
  br i1 %65, label %dec_label_pc_450954, label %dec_label_pc_45094a.lr.ph, !insn.addr !4802

dec_label_pc_45094a.lr.ph:                        ; preds = %dec_label_pc_450942
  %66 = zext i8 %61 to i32, !insn.addr !4798
  %67 = zext i8 %64 to i32, !insn.addr !4801
  store i32 %67, i32* %storemerge12.reg2mem
  br label %dec_label_pc_45094a

dec_label_pc_45094a:                              ; preds = %dec_label_pc_45094a.lr.ph, %dec_label_pc_45094a
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %68 = add i32 %58, %storemerge12.reload, !insn.addr !4803
  %69 = inttoptr i32 %68 to i8*, !insn.addr !4803
  %70 = load i8, i8* %69, align 1, !insn.addr !4803
  %71 = or i8 %70, 4, !insn.addr !4803
  store i8 %71, i8* %69, align 1, !insn.addr !4803
  %72 = add nuw nsw i32 %storemerge12.reload, 1, !insn.addr !4804
  %exitcond16 = icmp eq i32 %storemerge12.reload, %66
  store i32 %72, i32* %storemerge12.reg2mem, !insn.addr !4802
  br i1 %exitcond16, label %dec_label_pc_450954, label %dec_label_pc_45094a, !insn.addr !4802

dec_label_pc_450954:                              ; preds = %dec_label_pc_45094a, %dec_label_pc_450942
  %73 = add i32 %eax.1.reload, 2, !insn.addr !4805
  %74 = inttoptr i32 %73 to i8*, !insn.addr !4806
  %75 = load i8, i8* %74, align 1, !insn.addr !4806
  %76 = icmp eq i8 %75, 0, !insn.addr !4806
  %77 = icmp eq i1 %76, false, !insn.addr !4807
  store i32 %73, i32* %eax.1.reg2mem, !insn.addr !4807
  br i1 %77, label %dec_label_pc_45093b, label %dec_label_pc_45095c, !insn.addr !4807

dec_label_pc_45095c:                              ; preds = %dec_label_pc_450954, %dec_label_pc_45093b, %dec_label_pc_450932
  %78 = add i32 %1, 26, !insn.addr !4808
  store i32 %78, i32* %eax.2.reg2mem, !insn.addr !4809
  store i32 254, i32* %ecx.2.reg2mem, !insn.addr !4809
  br label %dec_label_pc_450964, !insn.addr !4809

dec_label_pc_450964:                              ; preds = %dec_label_pc_450964, %dec_label_pc_45095c
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  %79 = inttoptr i32 %eax.2.reload to i8*, !insn.addr !4810
  %80 = load i8, i8* %79, align 1, !insn.addr !4810
  %81 = or i8 %80, 8, !insn.addr !4810
  store i8 %81, i8* %79, align 1, !insn.addr !4810
  %82 = add i32 %eax.2.reload, 1, !insn.addr !4811
  %83 = add i32 %ecx.2.reload, -1, !insn.addr !4812
  %84 = icmp eq i32 %83, 0, !insn.addr !4812
  %85 = icmp eq i1 %84, false, !insn.addr !4813
  store i32 %82, i32* %eax.2.reg2mem, !insn.addr !4813
  store i32 %83, i32* %ecx.2.reg2mem, !insn.addr !4813
  br i1 %85, label %dec_label_pc_450964, label %dec_label_pc_45096d, !insn.addr !4813

dec_label_pc_45096d:                              ; preds = %dec_label_pc_450964
  %86 = load i32, i32* %49, align 4, !insn.addr !4814
  %87 = call i16* @CPtoLocaleName(i32 %86), !insn.addr !4815
  %88 = ptrtoint i16* %87 to i32, !insn.addr !4815
  store i32 %88, i32* %54, align 4, !insn.addr !4816
  store i32 %43, i32* %esp.0.reg2mem, !insn.addr !4817
  store i32 1, i32* %edi.0.reg2mem, !insn.addr !4817
  br label %dec_label_pc_4508ec, !insn.addr !4817

dec_label_pc_450986:                              ; preds = %dec_label_pc_450902
  %89 = load i32, i32* @fSystemSet, align 4, !insn.addr !4818
  %90 = icmp eq i32 %89, 0, !insn.addr !4818
  %91 = icmp eq i1 %90, false, !insn.addr !4819
  store i32 %43, i32* %esp.2.reg2mem, !insn.addr !4819
  br i1 %91, label %dec_label_pc_450a42, label %dec_label_pc_450a4b, !insn.addr !4819

dec_label_pc_45089b.dec_label_pc_45099a_crit_edge: ; preds = %dec_label_pc_45089b
  %phitmp = mul i32 %8, 48
  store i32 %phitmp, i32* %stack_var_-32.0.lcssa.reg2mem
  br label %dec_label_pc_45099a

dec_label_pc_45099a:                              ; preds = %dec_label_pc_45089b.dec_label_pc_45099a_crit_edge, %dec_label_pc_45089b.preheader
  %stack_var_-32.0.lcssa.reload = load i32, i32* %stack_var_-32.0.lcssa.reg2mem
  store i32 257, i32* %stack_var_-52, align 4, !insn.addr !4820
  %92 = add i32 %1, 24, !insn.addr !4821
  %93 = inttoptr i32 %92 to i8*, !insn.addr !4822
  store i8* %93, i8** %stack_var_-60, align 4, !insn.addr !4822
  call void @memset(i8* %93, i8 0, i32 257), !insn.addr !4823
  %94 = add i32 %stack_var_-32.0.lcssa.reload, ptrtoint (i8** @global_var_47b838 to i32), !insn.addr !4824
  %95 = add i32 %1, 25
  store i32 %94, i32* %stack_var_-32.1.in.reg2mem, !insn.addr !4825
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !4825
  br label %dec_label_pc_4509bc, !insn.addr !4825

dec_label_pc_4509bc:                              ; preds = %dec_label_pc_4509f8, %dec_label_pc_45099a
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %stack_var_-32.1.in.reload = load i32, i32* %stack_var_-32.1.in.reg2mem
  %96 = inttoptr i32 %stack_var_-32.1.in.reload to i8*, !insn.addr !4826
  %97 = load i8, i8* %96, align 1, !insn.addr !4826
  %98 = icmp eq i8 %97, 0, !insn.addr !4826
  br i1 %98, label %dec_label_pc_4509f8, label %dec_label_pc_4509c3.preheader, !insn.addr !4827

dec_label_pc_4509c3.preheader:                    ; preds = %dec_label_pc_4509bc
  %99 = add i32 %edi.1.reload, ptrtoint ([4 x i8]* @__rgctypeflag to i32)
  %100 = inttoptr i32 %99 to i8*
  store i8 %97, i8* %.reg2mem
  store i32 %stack_var_-32.1.in.reload, i32* %ecx.3.reg2mem
  br label %dec_label_pc_4509c3

dec_label_pc_4509c3:                              ; preds = %dec_label_pc_4509c3.preheader, %dec_label_pc_4509ed
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %101 = add i32 %ecx.3.reload, 1, !insn.addr !4828
  %102 = inttoptr i32 %101 to i8*, !insn.addr !4828
  %103 = load i8, i8* %102, align 1, !insn.addr !4828
  %104 = icmp eq i8 %103, 0, !insn.addr !4829
  br i1 %104, label %dec_label_pc_4509f8, label %dec_label_pc_4509ca, !insn.addr !4830

dec_label_pc_4509ca:                              ; preds = %dec_label_pc_4509c3
  %.reload = load i8, i8* %.reg2mem, !insn.addr !4831
  %105 = icmp ugt i8 %.reload, %103
  br i1 %105, label %dec_label_pc_4509ed, label %dec_label_pc_4509da.lr.ph, !insn.addr !4832

dec_label_pc_4509da.lr.ph:                        ; preds = %dec_label_pc_4509ca
  %106 = zext i8 %.reload to i32, !insn.addr !4831
  store i32 %106, i32* %edx.011.reg2mem
  br label %dec_label_pc_4509da

dec_label_pc_4509da:                              ; preds = %dec_label_pc_4509da.lr.ph, %dec_label_pc_4509da
  %edx.011.reload = load i32, i32* %edx.011.reg2mem
  %107 = load i8, i8* %100, align 1, !insn.addr !4833
  %108 = add i32 %95, %edx.011.reload, !insn.addr !4834
  %109 = inttoptr i32 %108 to i8*, !insn.addr !4834
  %110 = load i8, i8* %109, align 1, !insn.addr !4834
  %111 = or i8 %110, %107, !insn.addr !4834
  store i8 %111, i8* %109, align 1, !insn.addr !4834
  %112 = add nuw nsw i32 %edx.011.reload, 1, !insn.addr !4835
  %113 = load i8, i8* %102, align 1, !insn.addr !4836
  %storemerge6 = zext i8 %113 to i32
  %114 = icmp uge i32 %edx.011.reload, %storemerge6
  %115 = icmp ult i32 %112, 256, !insn.addr !4837
  %116 = icmp eq i1 %115, false, !insn.addr !4838
  %or.cond = or i1 %116, %114
  store i32 %112, i32* %edx.011.reg2mem, !insn.addr !4832
  br i1 %or.cond, label %dec_label_pc_4509ed, label %dec_label_pc_4509da, !insn.addr !4832

dec_label_pc_4509ed:                              ; preds = %dec_label_pc_4509da, %dec_label_pc_4509ca
  %117 = add i32 %ecx.3.reload, 2, !insn.addr !4839
  %118 = inttoptr i32 %117 to i8*, !insn.addr !4840
  %119 = load i8, i8* %118, align 1, !insn.addr !4840
  %120 = icmp eq i8 %119, 0, !insn.addr !4840
  %121 = icmp eq i1 %120, false, !insn.addr !4841
  store i8 %119, i8* %.reg2mem, !insn.addr !4841
  store i32 %117, i32* %ecx.3.reg2mem, !insn.addr !4841
  br i1 %121, label %dec_label_pc_4509c3, label %dec_label_pc_4509f8, !insn.addr !4841

dec_label_pc_4509f8:                              ; preds = %dec_label_pc_4509c3, %dec_label_pc_4509ed, %dec_label_pc_4509bc
  %122 = add nuw nsw i32 %edi.1.reload, 1, !insn.addr !4842
  %123 = add i32 %stack_var_-32.1.in.reload, 8, !insn.addr !4843
  %exitcond = icmp eq i32 %122, 4
  store i32 %123, i32* %stack_var_-32.1.in.reg2mem, !insn.addr !4844
  store i32 %122, i32* %edi.1.reg2mem, !insn.addr !4844
  br i1 %exitcond, label %dec_label_pc_450a04, label %dec_label_pc_4509bc, !insn.addr !4844

dec_label_pc_450a04:                              ; preds = %dec_label_pc_4509f8
  store i32 %3, i32* %stack_var_-52, align 4, !insn.addr !4845
  %124 = add i32 %1, 4, !insn.addr !4846
  %125 = inttoptr i32 %124 to i32*, !insn.addr !4846
  store i32 %3, i32* %125, align 4, !insn.addr !4846
  %126 = add i32 %1, 8, !insn.addr !4847
  %127 = inttoptr i32 %126 to i32*, !insn.addr !4847
  store i32 1, i32* %127, align 4, !insn.addr !4847
  %128 = load i32, i32* %stack_var_-52, align 4, !insn.addr !4848
  %129 = call i16* @CPtoLocaleName(i32 %128), !insn.addr !4848
  %130 = ptrtoint i16* %129 to i32, !insn.addr !4848
  %131 = add i32 %1, 540, !insn.addr !4849
  %132 = inttoptr i32 %131 to i32*, !insn.addr !4849
  store i32 %130, i32* %132, align 4, !insn.addr !4849
  %133 = add i32 %1, 12, !insn.addr !4850
  store i32 6, i32* %stack_var_-52, align 4, !insn.addr !4851
  %134 = add i32 %stack_var_-32.0.lcssa.reload, ptrtoint (i16** @global_var_47b82c to i32), !insn.addr !4852
  store i32 %133, i32* %ecx.4.reg2mem, !insn.addr !4853
  store i32 %134, i32* %edx.1.reg2mem, !insn.addr !4853
  store i32 6, i32* %edi.2.reg2mem, !insn.addr !4853
  br label %dec_label_pc_450a2c, !insn.addr !4853

dec_label_pc_450a2c:                              ; preds = %dec_label_pc_450a2c, %dec_label_pc_450a04
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %135 = inttoptr i32 %edx.1.reload to i16*, !insn.addr !4854
  %136 = load i16, i16* %135, align 2, !insn.addr !4854
  %137 = add i32 %edx.1.reload, 2, !insn.addr !4855
  %138 = inttoptr i32 %ecx.4.reload to i16*, !insn.addr !4856
  store i16 %136, i16* %138, align 2, !insn.addr !4856
  %139 = add i32 %ecx.4.reload, 2, !insn.addr !4857
  %140 = add nsw i32 %edi.2.reload, -1, !insn.addr !4858
  %141 = icmp eq i32 %140, 0, !insn.addr !4858
  %142 = icmp eq i1 %141, false, !insn.addr !4859
  store i32 %4, i32* %esp.1.reg2mem, !insn.addr !4859
  store i32 %139, i32* %ecx.4.reg2mem, !insn.addr !4859
  store i32 %137, i32* %edx.1.reg2mem, !insn.addr !4859
  store i32 %140, i32* %edi.2.reg2mem, !insn.addr !4859
  br i1 %142, label %dec_label_pc_450a2c, label %dec_label_pc_4508f7, !insn.addr !4859

dec_label_pc_450a42:                              ; preds = %dec_label_pc_450986, %dec_label_pc_450867
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %143 = add i32 %esp.2.reload, -4, !insn.addr !4860
  %144 = inttoptr i32 %143 to i32*, !insn.addr !4860
  store i32 %1, i32* %144, align 4, !insn.addr !4860
  call void @setSBCS(%__crt_multibyte_data* bitcast (i32* @80 to %__crt_multibyte_data*)), !insn.addr !4861
  br label %dec_label_pc_450a4b, !insn.addr !4861

dec_label_pc_450a4b:                              ; preds = %dec_label_pc_4508f7, %dec_label_pc_450a42, %dec_label_pc_4508b5, %dec_label_pc_4508c1, %dec_label_pc_450986
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !4862
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !4863
}

declare i32 @memcpy_s_2(i8*, i32, i8*, i32) local_unnamed_addr

define i32 @__acrt_MultiByteToWideChar(i32 %CodePage, i32 %dwFlags, i8* %lpMultiByteStr, i32 %cbMultiByte, i16* %lpWideCharStr, i32 %cchWideChar) local_unnamed_addr {
dec_label_pc_450fb4:
  %ecx.0.reg2mem = alloca i32, !insn.addr !4864
  %0 = icmp ult i32 %CodePage, 50230
  br i1 %0, label %dec_label_pc_450fc5, label %dec_label_pc_450fed, !insn.addr !4865

dec_label_pc_450fc5:                              ; preds = %dec_label_pc_450fb4
  switch i32 %CodePage, label %dec_label_pc_450fcc [
    i32 50229, label %dec_label_pc_45102c
    i32 42, label %dec_label_pc_45102c
  ]

dec_label_pc_450fcc:                              ; preds = %dec_label_pc_450fc5
  %1 = icmp ult i32 %CodePage, 50220
  store i32 %dwFlags, i32* %ecx.0.reg2mem, !insn.addr !4866
  br i1 %1, label %dec_label_pc_451016, label %dec_label_pc_450fd3, !insn.addr !4866

dec_label_pc_450fd3:                              ; preds = %dec_label_pc_450fcc
  %2 = icmp ult i32 %CodePage, 50223
  %3 = or i32 %CodePage, 2
  %4 = icmp eq i32 %3, 50227
  %5 = or i1 %2, %4
  store i32 %dwFlags, i32* %ecx.0.reg2mem, !insn.addr !4867
  br i1 %5, label %dec_label_pc_45102c, label %dec_label_pc_451016, !insn.addr !4867

dec_label_pc_450fed:                              ; preds = %dec_label_pc_450fb4
  %6 = icmp eq i32 %CodePage, 54936, !insn.addr !4868
  br i1 %6, label %dec_label_pc_451010, label %dec_label_pc_450ff4, !insn.addr !4869

dec_label_pc_450ff4:                              ; preds = %dec_label_pc_450fed
  %7 = icmp ult i32 %CodePage, 57002
  store i32 %dwFlags, i32* %ecx.0.reg2mem, !insn.addr !4870
  br i1 %7, label %dec_label_pc_451016, label %dec_label_pc_450ffb, !insn.addr !4870

dec_label_pc_450ffb:                              ; preds = %dec_label_pc_450ff4
  %8 = icmp ult i32 %CodePage, 57012
  %9 = icmp eq i32 %CodePage, 65000, !insn.addr !4871
  %or.cond11 = or i1 %8, %9
  br i1 %or.cond11, label %dec_label_pc_45102c, label %dec_label_pc_451009, !insn.addr !4872

dec_label_pc_451009:                              ; preds = %dec_label_pc_450ffb
  %10 = icmp eq i32 %CodePage, 65001, !insn.addr !4873
  %11 = icmp eq i1 %10, false, !insn.addr !4874
  store i32 %dwFlags, i32* %ecx.0.reg2mem, !insn.addr !4874
  br i1 %11, label %dec_label_pc_451016, label %dec_label_pc_451010, !insn.addr !4874

dec_label_pc_451010:                              ; preds = %dec_label_pc_451009, %dec_label_pc_450fed
  %12 = and i32 %dwFlags, 8, !insn.addr !4875
  store i32 %12, i32* %ecx.0.reg2mem, !insn.addr !4875
  br label %dec_label_pc_451016, !insn.addr !4875

dec_label_pc_451016:                              ; preds = %dec_label_pc_450fcc, %dec_label_pc_450ff4, %dec_label_pc_451009, %dec_label_pc_450fd3, %dec_label_pc_45102c, %dec_label_pc_451010
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %13 = call i32 @MultiByteToWideChar(i32 %CodePage, i32 %ecx.0.reload, i8* %lpMultiByteStr, i32 %cbMultiByte, i16* %lpWideCharStr, i32 %cchWideChar), !insn.addr !4876
  ret i32 %13, !insn.addr !4877

dec_label_pc_45102c:                              ; preds = %dec_label_pc_450fc5, %dec_label_pc_450fc5, %dec_label_pc_450ffb, %dec_label_pc_450fd3
  store i32 0, i32* %ecx.0.reg2mem, !insn.addr !4878
  br label %dec_label_pc_451016, !insn.addr !4878
}

define i32 @__acrt_WideCharToMultiByte(i32 %CodePage, i32 %dwFlags, i16* %lpWideCharStr, i32 %cchWideChar, i8* %lpMultiByteStr, i32 %cbMultiByte, i8* %lpDefaultChar, i32* %lpUsedDefaultChar) local_unnamed_addr {
dec_label_pc_4510cd:
  %edx.0.reg2mem = alloca i32, !insn.addr !4879
  %0 = icmp ult i32 %CodePage, 50230
  br i1 %0, label %dec_label_pc_4510f7, label %dec_label_pc_45111e, !insn.addr !4880

dec_label_pc_4510f7:                              ; preds = %dec_label_pc_4510cd
  store i32 0, i32* %edx.0.reg2mem
  store i32 0, i32* %edx.0.reg2mem
  switch i32 %CodePage, label %dec_label_pc_4510fe [
    i32 50229, label %dec_label_pc_451147
    i32 42, label %dec_label_pc_451147
  ]

dec_label_pc_4510fe:                              ; preds = %dec_label_pc_4510f7
  %1 = icmp ult i32 %CodePage, 50220
  br i1 %1, label %dec_label_pc_45113e, label %dec_label_pc_451106, !insn.addr !4881

dec_label_pc_451106:                              ; preds = %dec_label_pc_4510fe
  %2 = icmp ult i32 %CodePage, 50223
  store i32 0, i32* %edx.0.reg2mem
  br i1 %2, label %dec_label_pc_451147, label %switch.early.test

switch.early.test:                                ; preds = %dec_label_pc_451106
  store i32 0, i32* %edx.0.reg2mem
  store i32 0, i32* %edx.0.reg2mem
  switch i32 %CodePage, label %dec_label_pc_45113e [
    i32 50227, label %dec_label_pc_451147
    i32 50225, label %dec_label_pc_451147
  ]

dec_label_pc_45111e:                              ; preds = %dec_label_pc_4510cd
  %3 = icmp eq i32 %CodePage, 54936, !insn.addr !4882
  store i32 0, i32* %edx.0.reg2mem, !insn.addr !4883
  br i1 %3, label %dec_label_pc_451147, label %dec_label_pc_451126, !insn.addr !4883

dec_label_pc_451126:                              ; preds = %dec_label_pc_45111e
  %4 = icmp ult i32 %CodePage, 57002
  br i1 %4, label %dec_label_pc_45113e, label %dec_label_pc_45112e, !insn.addr !4884

dec_label_pc_45112e:                              ; preds = %dec_label_pc_451126
  %5 = icmp ult i32 %CodePage, 57012
  %6 = and i32 %CodePage, -2
  %switch = icmp eq i32 %6, 65000
  %or.cond = or i1 %5, %switch
  store i32 0, i32* %edx.0.reg2mem
  br i1 %or.cond, label %dec_label_pc_451147, label %dec_label_pc_45113e

dec_label_pc_45113e:                              ; preds = %dec_label_pc_45112e, %switch.early.test, %dec_label_pc_451126, %dec_label_pc_4510fe
  %7 = and i32 %dwFlags, -129, !insn.addr !4885
  store i32 %7, i32* %edx.0.reg2mem, !insn.addr !4885
  br label %dec_label_pc_451147, !insn.addr !4885

dec_label_pc_451147:                              ; preds = %dec_label_pc_45112e, %switch.early.test, %switch.early.test, %dec_label_pc_451106, %dec_label_pc_4510f7, %dec_label_pc_4510f7, %dec_label_pc_45113e, %dec_label_pc_45111e
  %8 = icmp ne i32 %CodePage, 65000, !insn.addr !4886
  %9 = icmp eq i32 %CodePage, 65001, !insn.addr !4887
  %10 = icmp eq i1 %9, false, !insn.addr !4888
  %or.cond16 = icmp eq i1 %8, %10
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %11 = bitcast i32* %lpUsedDefaultChar to i1*
  %12 = select i1 %or.cond16, i1* %11, i1* null, !insn.addr !4889
  %13 = select i1 %or.cond16, i8* %lpDefaultChar, i8* null, !insn.addr !4890
  %14 = call i32 @WideCharToMultiByte(i32 %CodePage, i32 %edx.0.reload, i16* %lpWideCharStr, i32 %cchWideChar, i8* %lpMultiByteStr, i32 %cbMultiByte, i8* %13, i1* %12), !insn.addr !4891
  ret i32 %14, !insn.addr !4892
}

declare i16* @find_end_of_double_null_terminated_sequence(i16*) local_unnamed_addr

define i8* @__dcrt_get_narrow_environment_from_os() local_unnamed_addr {
dec_label_pc_45125f:
  %ebx.13.reg2mem = alloca i32, !insn.addr !4893
  %ebx.1.ph.reg2mem = alloca i32, !insn.addr !4893
  %edi.0.reg2mem = alloca i32*, !insn.addr !4893
  %ebx.0.reg2mem = alloca i32, !insn.addr !4893
  %0 = call i16* @GetEnvironmentStringsW(), !insn.addr !4894
  %1 = icmp eq i16* %0, null, !insn.addr !4895
  store i32 0, i32* %ebx.13.reg2mem, !insn.addr !4896
  br i1 %1, label %dec_label_pc_4512dc, label %dec_label_pc_451276, !insn.addr !4896

dec_label_pc_451276:                              ; preds = %dec_label_pc_45125f
  %2 = call i16* @find_end_of_double_null_terminated_sequence(i16* nonnull %0), !insn.addr !4897
  %3 = call i32 @function_404601(), !insn.addr !4898
  %4 = icmp eq i32 %3, 0, !insn.addr !4899
  store i32 0, i32* %ebx.1.ph.reg2mem, !insn.addr !4900
  br i1 %4, label %dec_label_pc_4512d5, label %dec_label_pc_451299, !insn.addr !4900

dec_label_pc_451299:                              ; preds = %dec_label_pc_451276
  %5 = call i32* @_malloc_base(i32 %3), !insn.addr !4901
  %6 = icmp eq i32* %5, null, !insn.addr !4902
  br i1 %6, label %dec_label_pc_4512c4, label %dec_label_pc_4512a6, !insn.addr !4903

dec_label_pc_4512a6:                              ; preds = %dec_label_pc_451299
  %7 = ptrtoint i32* %5 to i32, !insn.addr !4901
  %8 = call i32 @function_404601(), !insn.addr !4904
  %9 = icmp eq i32 %8, 0, !insn.addr !4905
  store i32 %7, i32* %ebx.0.reg2mem, !insn.addr !4906
  store i32* null, i32** %edi.0.reg2mem, !insn.addr !4906
  br i1 %9, label %dec_label_pc_4512c4, label %dec_label_pc_4512c6, !insn.addr !4906

dec_label_pc_4512c4:                              ; preds = %dec_label_pc_4512a6, %dec_label_pc_451299
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !4907
  store i32* %5, i32** %edi.0.reg2mem, !insn.addr !4907
  br label %dec_label_pc_4512c6, !insn.addr !4907

dec_label_pc_4512c6:                              ; preds = %dec_label_pc_4512a6, %dec_label_pc_4512c4
  %edi.0.reload = load i32*, i32** %edi.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  call void @_free_base(i32* %edi.0.reload), !insn.addr !4908
  store i32 %ebx.0.reload, i32* %ebx.1.ph.reg2mem, !insn.addr !4909
  br label %dec_label_pc_4512d5, !insn.addr !4909

dec_label_pc_4512d5:                              ; preds = %dec_label_pc_451276, %dec_label_pc_4512c6
  %ebx.1.ph.reload = load i32, i32* %ebx.1.ph.reg2mem
  %10 = call i1 @FreeEnvironmentStringsW(i16* nonnull %0), !insn.addr !4910
  store i32 %ebx.1.ph.reload, i32* %ebx.13.reg2mem, !insn.addr !4910
  br label %dec_label_pc_4512dc, !insn.addr !4910

dec_label_pc_4512dc:                              ; preds = %dec_label_pc_45125f, %dec_label_pc_4512d5
  %ebx.13.reload = load i32, i32* %ebx.13.reg2mem
  %11 = inttoptr i32 %ebx.13.reload to i8*, !insn.addr !4911
  ret i8* %11, !insn.addr !4911
}

define i32 @"common_set_variable_in_environment_nolock<char>"(i8* %option, i32 %is_top_level_call) local_unnamed_addr {
dec_label_pc_451368:
  %eax.3.reg2mem = alloca i32, !insn.addr !4912
  %edi.2.reg2mem = alloca i32, !insn.addr !4912
  %ebx.1.reg2mem = alloca i32, !insn.addr !4912
  %ebx.0.reg2mem = alloca i32, !insn.addr !4912
  %esi.0.reg2mem = alloca i32, !insn.addr !4912
  %edi.1.reg2mem = alloca i32, !insn.addr !4912
  %edi.0.reg2mem = alloca i32, !insn.addr !4912
  %eax.0.reg2mem = alloca i32, !insn.addr !4912
  %ecx.010.reg2mem = alloca i32, !insn.addr !4912
  %.reg2mem13 = alloca i32, !insn.addr !4912
  %.reg2mem11 = alloca i32*, !insn.addr !4912
  %.reg2mem = alloca i32, !insn.addr !4912
  %stack_var_-32 = alloca i32, align 4
  %stack_var_4 = alloca i8*, align 4
  store i8* %option, i8** %stack_var_4, align 4
  %0 = icmp eq i8* %option, null, !insn.addr !4913
  %1 = icmp eq i1 %0, false, !insn.addr !4914
  br i1 %1, label %dec_label_pc_45138b, label %dec_label_pc_451378, !insn.addr !4914

dec_label_pc_451378:                              ; preds = %dec_label_pc_451368
  %2 = call i32* @_errno(), !insn.addr !4915
  store i32 22, i32* %2, align 4, !insn.addr !4916
  store i32 -1, i32* %eax.3.reg2mem, !insn.addr !4917
  br label %dec_label_pc_451598, !insn.addr !4917

dec_label_pc_45138b:                              ; preds = %dec_label_pc_451368
  %3 = ptrtoint i8* %option to i32
  %4 = call i32 @function_40196a(), !insn.addr !4918
  %5 = icmp eq i32 %4, 0, !insn.addr !4919
  %6 = icmp eq i32 %4, %3, !insn.addr !4920
  %or.cond = or i1 %5, %6
  br i1 %or.cond, label %dec_label_pc_45157f, label %dec_label_pc_4513ac, !insn.addr !4921

dec_label_pc_4513ac:                              ; preds = %dec_label_pc_45138b
  %7 = add i32 %4, 1, !insn.addr !4922
  %8 = inttoptr i32 %7 to i8*, !insn.addr !4922
  %9 = load i8, i8* %8, align 1, !insn.addr !4922
  call void @"ensure_current_environment_is_not_initial_environment_nolock<char>"(), !insn.addr !4923
  %10 = load i32, i32* @_environ_table, align 4
  %11 = icmp eq i32 %10, 0, !insn.addr !4924
  %12 = icmp eq i1 %11, false, !insn.addr !4925
  store i32 %10, i32* %.reg2mem, !insn.addr !4925
  br i1 %12, label %dec_label_pc_45143c, label %dec_label_pc_4513c1, !insn.addr !4925

dec_label_pc_4513c1:                              ; preds = %dec_label_pc_4513ac
  %13 = icmp eq i32 %is_top_level_call, 0, !insn.addr !4926
  %14 = load i32, i32* @_wenviron_table, align 4, !insn.addr !4927
  %15 = icmp eq i32 %14, 0, !insn.addr !4927
  %or.cond7 = or i1 %13, %15
  br i1 %or.cond7, label %dec_label_pc_4513e2, label %dec_label_pc_4513ce, !insn.addr !4928

dec_label_pc_4513ce:                              ; preds = %dec_label_pc_4513c1
  %16 = call i32 @function_4010e1(), !insn.addr !4929
  %17 = icmp eq i32 %16, 0, !insn.addr !4930
  br i1 %17, label %dec_label_pc_45157f, label %dec_label_pc_4513db, !insn.addr !4931

dec_label_pc_4513db:                              ; preds = %dec_label_pc_4513ce
  call void @"ensure_current_environment_is_not_initial_environment_nolock<char>"(), !insn.addr !4932
  br label %dec_label_pc_45143cthread-pre-split, !insn.addr !4933

dec_label_pc_4513e2:                              ; preds = %dec_label_pc_4513c1
  %18 = icmp eq i8 %9, 0, !insn.addr !4934
  %19 = icmp eq i1 %18, false, !insn.addr !4935
  store i32 0, i32* %ebx.1.reg2mem, !insn.addr !4935
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4935
  br i1 %19, label %dec_label_pc_4513ee, label %dec_label_pc_45158d, !insn.addr !4935

dec_label_pc_4513ee:                              ; preds = %dec_label_pc_4513e2
  %20 = call i32* @_calloc_base(i32 1, i32 4), !insn.addr !4936
  %21 = ptrtoint i32* %20 to i32, !insn.addr !4936
  store i32 %21, i32* @_environ_table, align 4, !insn.addr !4937
  call void @_free_base(i32* null), !insn.addr !4938
  %22 = load i32, i32* @_environ_table, align 4, !insn.addr !4939
  %23 = icmp eq i32 %22, 0, !insn.addr !4939
  store i32 -1, i32* %ebx.1.reg2mem, !insn.addr !4940
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4940
  br i1 %23, label %dec_label_pc_45158d, label %dec_label_pc_451411, !insn.addr !4940

dec_label_pc_451411:                              ; preds = %dec_label_pc_4513ee
  %24 = load i32, i32* @_wenviron_table, align 4, !insn.addr !4941
  %25 = icmp eq i32 %24, 0, !insn.addr !4941
  %26 = icmp eq i1 %25, false, !insn.addr !4942
  br i1 %26, label %dec_label_pc_45143cthread-pre-split, label %dec_label_pc_451419, !insn.addr !4942

dec_label_pc_451419:                              ; preds = %dec_label_pc_451411
  %27 = call i32* @_calloc_base(i32 1, i32 4), !insn.addr !4943
  %28 = ptrtoint i32* %27 to i32, !insn.addr !4943
  store i32 %28, i32* @_wenviron_table, align 4, !insn.addr !4944
  call void @_free_base(i32* null), !insn.addr !4945
  %29 = load i32, i32* @_wenviron_table, align 4, !insn.addr !4946
  %30 = icmp eq i32 %29, 0, !insn.addr !4946
  store i32 -1, i32* %ebx.1.reg2mem, !insn.addr !4947
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4947
  br i1 %30, label %dec_label_pc_45158d, label %dec_label_pc_45143cthread-pre-split, !insn.addr !4947

dec_label_pc_45143cthread-pre-split:              ; preds = %dec_label_pc_4513db, %dec_label_pc_451411, %dec_label_pc_451419
  %.pr = load i32, i32* @_environ_table, align 4
  store i32 %.pr, i32* %.reg2mem
  br label %dec_label_pc_45143c

dec_label_pc_45143c:                              ; preds = %dec_label_pc_45143cthread-pre-split, %dec_label_pc_4513ac
  %.reload = load i32, i32* %.reg2mem, !insn.addr !4948
  %31 = icmp eq i32 %.reload, 0, !insn.addr !4949
  store i32 -1, i32* %ebx.1.reg2mem, !insn.addr !4950
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4950
  br i1 %31, label %dec_label_pc_45158d, label %dec_label_pc_45144c, !insn.addr !4950

dec_label_pc_45144c:                              ; preds = %dec_label_pc_45143c
  %32 = sub i32 %4, %3, !insn.addr !4951
  %33 = call i32 @"find_in_environment_nolock<char>"(i8* %option, i32 %32), !insn.addr !4952
  %34 = icmp slt i32 %33, 0, !insn.addr !4953
  br i1 %34, label %dec_label_pc_4514b3, label %dec_label_pc_451464, !insn.addr !4954

dec_label_pc_451464:                              ; preds = %dec_label_pc_45144c
  %35 = inttoptr i32 %.reload to i32*, !insn.addr !4955
  %36 = load i32, i32* %35, align 4, !insn.addr !4955
  %37 = icmp eq i32 %36, 0, !insn.addr !4955
  br i1 %37, label %dec_label_pc_4514b3, label %dec_label_pc_451468, !insn.addr !4956

dec_label_pc_451468:                              ; preds = %dec_label_pc_451464
  %38 = mul i32 %33, 4
  %39 = add i32 %38, %.reload
  %40 = inttoptr i32 %39 to i32*
  %41 = load i32, i32* %40, align 4, !insn.addr !4957
  %42 = inttoptr i32 %41 to i32*
  call void @_free_base(i32* %42), !insn.addr !4958
  %43 = icmp eq i8 %9, 0, !insn.addr !4959
  %44 = icmp eq i1 %43, false, !insn.addr !4960
  br i1 %44, label %dec_label_pc_4514a9, label %dec_label_pc_451486.preheader, !insn.addr !4960

dec_label_pc_451486.preheader:                    ; preds = %dec_label_pc_451468
  %45 = load i32, i32* %40, align 4, !insn.addr !4961
  %46 = icmp eq i32 %45, 0, !insn.addr !4961
  %47 = icmp eq i1 %46, false, !insn.addr !4962
  br i1 %47, label %dec_label_pc_45147e.preheader, label %dec_label_pc_45148b, !insn.addr !4962

dec_label_pc_45147e.preheader:                    ; preds = %dec_label_pc_451486.preheader
  %48 = add i32 %.reload, 4, !insn.addr !4963
  store i32* %40, i32** %.reg2mem11
  store i32 %38, i32* %.reg2mem13
  store i32 %33, i32* %ecx.010.reg2mem
  br label %dec_label_pc_45147e

dec_label_pc_45147e:                              ; preds = %dec_label_pc_45147e.preheader, %dec_label_pc_45147e
  %ecx.010.reload = load i32, i32* %ecx.010.reg2mem
  %.reload14 = load i32, i32* %.reg2mem13
  %.reload12 = load i32*, i32** %.reg2mem11
  %49 = add i32 %48, %.reload14, !insn.addr !4963
  %50 = inttoptr i32 %49 to i32*, !insn.addr !4963
  %51 = load i32, i32* %50, align 4, !insn.addr !4963
  store i32 %51, i32* %.reload12, align 4, !insn.addr !4964
  %52 = add i32 %ecx.010.reload, 1, !insn.addr !4965
  %53 = mul i32 %52, 4, !insn.addr !4961
  %54 = add i32 %53, %.reload, !insn.addr !4961
  %55 = inttoptr i32 %54 to i32*, !insn.addr !4961
  %56 = load i32, i32* %55, align 4, !insn.addr !4961
  %57 = icmp eq i32 %56, 0, !insn.addr !4961
  %58 = icmp eq i1 %57, false, !insn.addr !4962
  store i32* %55, i32** %.reg2mem11, !insn.addr !4962
  store i32 %53, i32* %.reg2mem13, !insn.addr !4962
  store i32 %52, i32* %ecx.010.reg2mem, !insn.addr !4962
  br i1 %58, label %dec_label_pc_45147e, label %dec_label_pc_45148b, !insn.addr !4962

dec_label_pc_45148b:                              ; preds = %dec_label_pc_45147e, %dec_label_pc_451486.preheader
  %59 = call i32 @function_40218f(), !insn.addr !4966
  call void @_free_base(i32* null), !insn.addr !4967
  %60 = icmp eq i32 %59, 0, !insn.addr !4968
  store i32 %59, i32* %eax.0.reg2mem, !insn.addr !4969
  store i32 %3, i32* %edi.0.reg2mem, !insn.addr !4969
  store i32 %3, i32* %edi.1.reg2mem, !insn.addr !4969
  br i1 %60, label %dec_label_pc_451509, label %dec_label_pc_451504, !insn.addr !4969

dec_label_pc_4514a9:                              ; preds = %dec_label_pc_451468
  store i32 %3, i32* %40, align 4, !insn.addr !4970
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !4971
  br label %dec_label_pc_451509, !insn.addr !4971

dec_label_pc_4514b3:                              ; preds = %dec_label_pc_451464, %dec_label_pc_45144c
  %61 = icmp eq i8 %9, 0, !insn.addr !4972
  store i32 0, i32* %ebx.1.reg2mem, !insn.addr !4973
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4973
  br i1 %61, label %dec_label_pc_45158d, label %dec_label_pc_4514bc, !insn.addr !4973

dec_label_pc_4514bc:                              ; preds = %dec_label_pc_4514b3
  %62 = sub i32 0, %33, !insn.addr !4974
  %63 = sub i32 2, %33, !insn.addr !4975
  %64 = icmp ult i32 %63, %62, !insn.addr !4976
  %65 = icmp ult i32 %63, 1073741823, !insn.addr !4977
  %66 = icmp eq i1 %65, false, !insn.addr !4978
  %or.cond9 = or i1 %64, %66
  store i32 -1, i32* %ebx.1.reg2mem, !insn.addr !4979
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4979
  br i1 %or.cond9, label %dec_label_pc_45158d, label %dec_label_pc_4514d8, !insn.addr !4979

dec_label_pc_4514d8:                              ; preds = %dec_label_pc_4514bc
  %67 = call i32 @function_40218f(), !insn.addr !4980
  call void @_free_base(i32* null), !insn.addr !4981
  %68 = icmp eq i32 %67, 0, !insn.addr !4982
  store i32 -1, i32* %ebx.1.reg2mem, !insn.addr !4983
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !4983
  br i1 %68, label %dec_label_pc_45158d, label %dec_label_pc_4514f8, !insn.addr !4983

dec_label_pc_4514f8:                              ; preds = %dec_label_pc_4514d8
  %69 = mul i32 %62, 4, !insn.addr !4984
  %70 = add i32 %67, %69
  %71 = inttoptr i32 %70 to i32*, !insn.addr !4984
  store i32 %3, i32* %71, align 4, !insn.addr !4984
  %72 = add i32 %70, 4, !insn.addr !4985
  %73 = inttoptr i32 %72 to i32*, !insn.addr !4985
  store i32 0, i32* %73, align 4, !insn.addr !4985
  store i32 %67, i32* %eax.0.reg2mem, !insn.addr !4985
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !4985
  br label %dec_label_pc_451504, !insn.addr !4985

dec_label_pc_451504:                              ; preds = %dec_label_pc_45148b, %dec_label_pc_4514f8
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  store i32 %eax.0.reload, i32* @_environ_table, align 4, !insn.addr !4986
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !4986
  br label %dec_label_pc_451509, !insn.addr !4986

dec_label_pc_451509:                              ; preds = %dec_label_pc_451504, %dec_label_pc_4514a9, %dec_label_pc_45148b
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %74 = icmp eq i32 %is_top_level_call, 0, !insn.addr !4987
  store i32 %3, i32* %esi.0.reg2mem, !insn.addr !4988
  store i32 0, i32* %ebx.1.reg2mem, !insn.addr !4988
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !4988
  br i1 %74, label %dec_label_pc_45158d, label %dec_label_pc_451511, !insn.addr !4988

dec_label_pc_451511:                              ; preds = %dec_label_pc_451509, %dec_label_pc_451511
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %75 = inttoptr i32 %esi.0.reload to i8*, !insn.addr !4989
  %76 = load i8, i8* %75, align 1, !insn.addr !4989
  %77 = add i32 %esi.0.reload, 1, !insn.addr !4990
  %78 = icmp eq i8 %76, 0, !insn.addr !4991
  %79 = icmp eq i1 %78, false, !insn.addr !4992
  store i32 %77, i32* %esi.0.reg2mem, !insn.addr !4992
  br i1 %79, label %dec_label_pc_451511, label %dec_label_pc_451518, !insn.addr !4992

dec_label_pc_451518:                              ; preds = %dec_label_pc_451511
  %80 = sub i32 %esi.0.reload, %3, !insn.addr !4993
  %81 = add i32 %80, 2, !insn.addr !4994
  %82 = call i32* @_calloc_base(i32 %81, i32 1), !insn.addr !4995
  %83 = icmp eq i32* %82, null, !insn.addr !4996
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !4997
  br i1 %83, label %dec_label_pc_451576, label %dec_label_pc_451530, !insn.addr !4997

dec_label_pc_451530:                              ; preds = %dec_label_pc_451518
  %84 = load i8*, i8** %stack_var_4, align 4
  %85 = bitcast i32* %82 to i8*
  %86 = call i32 @strcpy_s(i8* %85, i32 %81, i8* %84), !insn.addr !4998
  %87 = icmp eq i32 %86, 0, !insn.addr !4999
  %88 = icmp eq i1 %87, false, !insn.addr !5000
  br i1 %88, label %dec_label_pc_45159b, label %dec_label_pc_451543, !insn.addr !5000

dec_label_pc_451543:                              ; preds = %dec_label_pc_451530
  %89 = ptrtoint i32* %82 to i32, !insn.addr !4995
  %90 = ptrtoint i8* %84 to i32
  %91 = sub i32 %89, %90, !insn.addr !5001
  %92 = add i32 %91, %7, !insn.addr !5002
  %93 = icmp eq i8 %9, 0, !insn.addr !5003
  %94 = add i32 %91, %4, !insn.addr !5004
  %95 = inttoptr i32 %94 to i8*, !insn.addr !5004
  store i8 0, i8* %95, align 1, !insn.addr !5004
  %96 = select i1 %93, i32 0, i32 %92, !insn.addr !5005
  %97 = call i32 @function_403a76(i32 %89, i32 %96), !insn.addr !5005
  %98 = icmp eq i32 %97, 0, !insn.addr !5006
  %99 = icmp eq i1 %98, false, !insn.addr !5007
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !5007
  br i1 %99, label %dec_label_pc_451576, label %dec_label_pc_451568, !insn.addr !5007

dec_label_pc_451568:                              ; preds = %dec_label_pc_451543
  %100 = call i32* @_errno(), !insn.addr !5008
  store i32 42, i32* %100, align 4, !insn.addr !5009
  store i32 -1, i32* %ebx.0.reg2mem, !insn.addr !5009
  br label %dec_label_pc_451576, !insn.addr !5009

dec_label_pc_451576:                              ; preds = %dec_label_pc_451568, %dec_label_pc_451543, %dec_label_pc_451518
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  call void @_free_base(i32* %82), !insn.addr !5010
  store i32 %ebx.0.reload, i32* %ebx.1.reg2mem, !insn.addr !5011
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !5011
  br label %dec_label_pc_45158d, !insn.addr !5011

dec_label_pc_45157f:                              ; preds = %dec_label_pc_4513ce, %dec_label_pc_45138b
  %101 = call i32* @_errno(), !insn.addr !5012
  store i32 22, i32* %101, align 4, !insn.addr !5013
  store i32 -1, i32* %ebx.1.reg2mem, !insn.addr !5013
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !5013
  br label %dec_label_pc_45158d, !insn.addr !5013

dec_label_pc_45158d:                              ; preds = %dec_label_pc_4513ee, %dec_label_pc_451419, %dec_label_pc_45143c, %dec_label_pc_4514bc, %dec_label_pc_4514d8, %dec_label_pc_45157f, %dec_label_pc_4513e2, %dec_label_pc_451576, %dec_label_pc_451509, %dec_label_pc_4514b3
  %102 = ptrtoint i32* %stack_var_-32 to i32, !insn.addr !5014
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %ebx.1.reload = load i32, i32* %ebx.1.reg2mem
  %103 = add i32 %102, -4, !insn.addr !5015
  %104 = inttoptr i32 %103 to i32*, !insn.addr !5015
  store i32 %edi.2.reload, i32* %104, align 4, !insn.addr !5015
  call void @_free_base(i32* nonnull @80), !insn.addr !5016
  store i32 %ebx.1.reload, i32* %eax.3.reg2mem, !insn.addr !5017
  br label %dec_label_pc_451598, !insn.addr !5017

dec_label_pc_451598:                              ; preds = %dec_label_pc_45158d, %dec_label_pc_451378
  %eax.3.reload = load i32, i32* %eax.3.reg2mem
  ret i32 %eax.3.reload, !insn.addr !5018

dec_label_pc_45159b:                              ; preds = %dec_label_pc_451530
  %105 = call i32 @__invoke_watson(), !insn.addr !5019
  %106 = call i32 @__asm_int3(), !insn.addr !5020
  %107 = call i32 @__asm_int3(), !insn.addr !5021
  %108 = call i32 @__asm_int3(), !insn.addr !5022
  %109 = call i32 @__asm_int3(), !insn.addr !5023
  %110 = call i32 @__asm_int3(), !insn.addr !5024
  %111 = call i32 @__asm_int3(), !insn.addr !5025
  %112 = call i32 @__asm_int3(), !insn.addr !5026
  %113 = call i32 @__asm_int3(), !insn.addr !5027
  %114 = call i32 @__asm_int3(), !insn.addr !5028
  %115 = call i32 @__asm_int3(), !insn.addr !5029
  %116 = call i32 @__asm_int3(), !insn.addr !5030
  %117 = call i32 @__asm_int3(), !insn.addr !5031
  %118 = call i32 @__asm_int3(), !insn.addr !5032
  %119 = call i32 @__asm_int3(), !insn.addr !5033
  %120 = call i32 @__asm_int3(), !insn.addr !5034
  %121 = call i32 @__asm_int3(), !insn.addr !5035
  %122 = call i32 @__asm_int3(), !insn.addr !5036
  %123 = call i32 @__asm_int3(), !insn.addr !5037
  %124 = call i32 @__asm_int3(), !insn.addr !5038
  %125 = call i32 @__asm_int3(), !insn.addr !5039
  %126 = call i32 @__asm_int3(), !insn.addr !5040
  %127 = call i32 @__asm_int3(), !insn.addr !5041
  %128 = call i32 @__asm_int3(), !insn.addr !5042
  %129 = call i32 @__asm_int3(), !insn.addr !5043
  %130 = call i32 @__asm_int3(), !insn.addr !5044
  %131 = call i32 @__asm_int3(), !insn.addr !5045
  %132 = call i32 @__asm_int3(), !insn.addr !5046
  %133 = call i32 @__asm_int3(), !insn.addr !5047
  %134 = call i32 @__asm_int3(), !insn.addr !5048
  %135 = call i32 @__asm_int3(), !insn.addr !5049
  %136 = call i32 @__asm_int3(), !insn.addr !5050
  %137 = call i32 @__asm_int3(), !insn.addr !5051
  %138 = call i32 @__asm_int3(), !insn.addr !5052
  %139 = call i32 @__asm_int3(), !insn.addr !5053
  %140 = call i32 @__asm_int3(), !insn.addr !5054
  %141 = call i32 @__asm_int3(), !insn.addr !5055
  %142 = call i32 @__asm_int3(), !insn.addr !5056
  %143 = call i32 @__asm_int3(), !insn.addr !5057
  %144 = call i32 @__asm_int3(), !insn.addr !5058
  %145 = call i32 @__asm_int3(), !insn.addr !5059
  %146 = call i32 @__asm_int3(), !insn.addr !5060
  %147 = call i32 @__asm_int3(), !insn.addr !5061
  %148 = call i32 @__asm_int3(), !insn.addr !5062
  %149 = call i32 @__asm_int3(), !insn.addr !5063
  %150 = call i32 @__asm_int3(), !insn.addr !5064
  %151 = call i32 @__asm_int3(), !insn.addr !5065
  %152 = call i32 @__asm_int3(), !insn.addr !5066
  %153 = call i32 @__asm_int3(), !insn.addr !5067
  %154 = call i32 @__asm_int3(), !insn.addr !5068
  %155 = call i32 @__asm_int3(), !insn.addr !5069
  %156 = call i32 @__asm_int3(), !insn.addr !5070
  %157 = call i32 @__asm_int3(), !insn.addr !5071
  %158 = call i32 @__asm_int3(), !insn.addr !5072
  %159 = call i32 @__asm_int3(), !insn.addr !5073
  %160 = call i32 @__asm_int3(), !insn.addr !5074
  %161 = call i32 @__asm_int3(), !insn.addr !5075
  %162 = call i32 @__asm_int3(), !insn.addr !5076
  %163 = call i32 @__asm_int3(), !insn.addr !5077
  %164 = call i32 @__asm_int3(), !insn.addr !5078
  %165 = call i32 @__asm_int3(), !insn.addr !5079
  %166 = call i32 @__asm_int3(), !insn.addr !5080
  %167 = call i32 @__asm_int3(), !insn.addr !5081
  %168 = call i32 @__asm_int3(), !insn.addr !5082
  %169 = call i32 @__asm_int3(), !insn.addr !5083
  %170 = call i32 @__asm_int3(), !insn.addr !5084
  %171 = call i32 @__asm_int3(), !insn.addr !5085
  %172 = call i32 @__asm_int3(), !insn.addr !5086
  %173 = call i32 @__asm_int3(), !insn.addr !5087
  %174 = call i32 @__asm_int3(), !insn.addr !5088
  %175 = call i32 @__asm_int3(), !insn.addr !5089
  %176 = call i32 @__asm_int3(), !insn.addr !5090
  %177 = call i32 @__asm_int3(), !insn.addr !5091
  %178 = call i32 @__asm_int3(), !insn.addr !5092
  %179 = call i32 @__asm_int3(), !insn.addr !5093
  %180 = call i32 @__asm_int3(), !insn.addr !5094
  %181 = call i32 @__asm_int3(), !insn.addr !5095
  %182 = call i32 @__asm_int3(), !insn.addr !5096
  %183 = call i32 @__asm_int3(), !insn.addr !5097
  %184 = call i32 @__asm_int3(), !insn.addr !5098
  %185 = call i32 @__asm_int3(), !insn.addr !5099
  %186 = call i32 @__asm_int3(), !insn.addr !5100
  %187 = call i32 @__asm_int3(), !insn.addr !5101
  %188 = call i32 @__asm_int3(), !insn.addr !5102
  %189 = call i32 @__asm_int3(), !insn.addr !5103
  %190 = call i32 @__asm_int3(), !insn.addr !5104
  %191 = call i32 @__asm_int3(), !insn.addr !5105
  %192 = call i32 @__asm_int3(), !insn.addr !5106
  %193 = call i32 @__asm_int3(), !insn.addr !5107
  %194 = call i32 @__asm_int3(), !insn.addr !5108
  %195 = call i32 @__asm_int3(), !insn.addr !5109
  %196 = call i32 @__asm_int3(), !insn.addr !5110
  %197 = call i32 @__asm_int3(), !insn.addr !5111
  %198 = call i32 @__asm_int3(), !insn.addr !5112
  %199 = call i32 @__asm_int3(), !insn.addr !5113
  %200 = call i32 @__asm_int3(), !insn.addr !5114
  %201 = call i32 @__asm_int3(), !insn.addr !5115
  %202 = call i32 @__asm_int3(), !insn.addr !5116
  %203 = call i32 @__asm_int3(), !insn.addr !5117
  %204 = call i32 @__asm_int3(), !insn.addr !5118
  %205 = call i32 @__asm_int3(), !insn.addr !5119
  %206 = call i32 @__asm_int3(), !insn.addr !5120
  %207 = call i32 @__asm_int3(), !insn.addr !5121
  %208 = call i32 @__asm_int3(), !insn.addr !5122
  %209 = call i32 @__asm_int3(), !insn.addr !5123
  %210 = call i32 @__asm_int3(), !insn.addr !5124
  %211 = call i32 @__asm_int3(), !insn.addr !5125
  %212 = call i32 @__asm_int3(), !insn.addr !5126
  %213 = call i32 @__asm_int3(), !insn.addr !5127
  %214 = call i32 @__asm_int3(), !insn.addr !5128
  %215 = call i32 @__asm_int3(), !insn.addr !5129
  %216 = call i32 @__asm_int3(), !insn.addr !5130
  %217 = call i32 @__asm_int3(), !insn.addr !5131
  %218 = call i32 @__asm_int3(), !insn.addr !5132
  %219 = call i32 @__asm_int3(), !insn.addr !5133
  %220 = call i32 @__asm_int3(), !insn.addr !5134
  %221 = call i32 @__asm_int3(), !insn.addr !5135
  %222 = call i32 @__asm_int3(), !insn.addr !5136
  %223 = call i32 @__asm_int3(), !insn.addr !5137
  %224 = call i32 @__asm_int3(), !insn.addr !5138
  %225 = call i32 @__asm_int3(), !insn.addr !5139
  %226 = call i32 @__asm_int3(), !insn.addr !5140
  %227 = call i32 @__asm_int3(), !insn.addr !5141
  %228 = call i32 @__asm_int3(), !insn.addr !5142
  %229 = call i32 @__asm_int3(), !insn.addr !5143
  %230 = call i32 @__asm_int3(), !insn.addr !5144
  %231 = call i32 @__asm_int3(), !insn.addr !5145
  %232 = call i32 @__asm_int3(), !insn.addr !5146
  %233 = call i32 @__asm_int3(), !insn.addr !5147
  %234 = call i32 @__asm_int3(), !insn.addr !5148
  %235 = call i32 @__asm_int3(), !insn.addr !5149
  %236 = call i32 @__asm_int3(), !insn.addr !5150
  %237 = call i32 @__asm_int3(), !insn.addr !5151
  %238 = call i32 @__asm_int3(), !insn.addr !5152
  %239 = call i32 @__asm_int3(), !insn.addr !5153
  %240 = call i32 @__asm_int3(), !insn.addr !5154
  %241 = call i32 @__asm_int3(), !insn.addr !5155
  %242 = call i32 @__asm_int3(), !insn.addr !5156
  %243 = call i32 @__asm_int3(), !insn.addr !5157
  %244 = call i32 @__asm_int3(), !insn.addr !5158
  %245 = call i32 @__asm_int3(), !insn.addr !5159
  %246 = call i32 @__asm_int3(), !insn.addr !5160
  %247 = call i32 @__asm_int3(), !insn.addr !5161
  %248 = call i32 @__asm_int3(), !insn.addr !5162
  %249 = call i32 @__asm_int3(), !insn.addr !5163
  ret i32 %249, !insn.addr !5163
}

declare void @"ensure_current_environment_is_not_initial_environment_nolock<char>"() local_unnamed_addr

define i32 @"find_in_environment_nolock<char>"(i8* %name, i32 %length) local_unnamed_addr {
dec_label_pc_451b25:
  %storemerge.reg2mem = alloca i32, !insn.addr !5164
  %esi.1.reg2mem = alloca i32, !insn.addr !5164
  %esi.0.reg2mem = alloca i32, !insn.addr !5164
  %eax.0.reg2mem = alloca i32, !insn.addr !5164
  %stack_var_-16 = alloca i32, align 4
  %0 = load i32, i32* @_environ_table, align 4, !insn.addr !5165
  %1 = inttoptr i32 %0 to i32*, !insn.addr !5166
  %2 = load i32, i32* %1, align 4, !insn.addr !5166
  %3 = icmp eq i32 %2, 0, !insn.addr !5167
  store i32 %0, i32* %esi.1.reg2mem, !insn.addr !5168
  br i1 %3, label %dec_label_pc_451b65, label %dec_label_pc_451b3e.preheader, !insn.addr !5168

dec_label_pc_451b3e.preheader:                    ; preds = %dec_label_pc_451b25
  %4 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !5169
  %5 = add i32 %4, -4, !insn.addr !5170
  %6 = inttoptr i32 %5 to i32*, !insn.addr !5170
  %7 = add i32 %4, -8, !insn.addr !5171
  %8 = inttoptr i32 %7 to i32*, !insn.addr !5171
  %9 = ptrtoint i8* %name to i32, !insn.addr !5172
  %10 = add i32 %4, -12, !insn.addr !5172
  %11 = inttoptr i32 %10 to i32*, !insn.addr !5172
  store i32 %2, i32* %eax.0.reg2mem
  store i32 %0, i32* %esi.0.reg2mem
  br label %dec_label_pc_451b3e

dec_label_pc_451b3e:                              ; preds = %dec_label_pc_451b3e.preheader, %dec_label_pc_451b5c
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  store i32 %length, i32* %6, align 4, !insn.addr !5170
  store i32 %eax.0.reload, i32* %8, align 4, !insn.addr !5171
  store i32 %9, i32* %11, align 4, !insn.addr !5172
  %12 = call i32 @_strnicoll(i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !5173
  %13 = icmp eq i32 %12, 0, !insn.addr !5174
  %14 = icmp eq i1 %13, false, !insn.addr !5175
  br i1 %14, label %dec_label_pc_451b5c, label %dec_label_pc_451b4f, !insn.addr !5175

dec_label_pc_451b4f:                              ; preds = %dec_label_pc_451b3e
  %15 = inttoptr i32 %esi.0.reload to i32*, !insn.addr !5176
  %16 = load i32, i32* %15, align 4, !insn.addr !5176
  %17 = add i32 %16, %length, !insn.addr !5177
  %18 = inttoptr i32 %17 to i8*, !insn.addr !5177
  %19 = load i8, i8* %18, align 1, !insn.addr !5177
  switch i8 %19, label %dec_label_pc_451b5c [
    i8 61, label %dec_label_pc_451b73
    i8 0, label %dec_label_pc_451b73
  ]

dec_label_pc_451b5c:                              ; preds = %dec_label_pc_451b4f, %dec_label_pc_451b3e
  %20 = add i32 %esi.0.reload, 4, !insn.addr !5178
  %21 = inttoptr i32 %20 to i32*, !insn.addr !5179
  %22 = load i32, i32* %21, align 4, !insn.addr !5179
  %23 = icmp eq i32 %22, 0, !insn.addr !5180
  %24 = icmp eq i1 %23, false, !insn.addr !5181
  store i32 %22, i32* %eax.0.reg2mem, !insn.addr !5181
  store i32 %20, i32* %esi.0.reg2mem, !insn.addr !5181
  store i32 %20, i32* %esi.1.reg2mem, !insn.addr !5181
  br i1 %24, label %dec_label_pc_451b3e, label %dec_label_pc_451b65, !insn.addr !5181

dec_label_pc_451b65:                              ; preds = %dec_label_pc_451b5c, %dec_label_pc_451b25
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %25 = sub i32 %esi.1.reload, %0, !insn.addr !5182
  %26 = sdiv i32 %25, -4, !insn.addr !5183
  store i32 %26, i32* %storemerge.reg2mem, !insn.addr !5183
  br label %dec_label_pc_451b6c, !insn.addr !5183

dec_label_pc_451b6c:                              ; preds = %dec_label_pc_451b73, %dec_label_pc_451b65
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !5184

dec_label_pc_451b73:                              ; preds = %dec_label_pc_451b4f, %dec_label_pc_451b4f
  %27 = sub i32 %esi.0.reload, %0, !insn.addr !5185
  %28 = sdiv i32 %27, 4, !insn.addr !5186
  store i32 %28, i32* %storemerge.reg2mem, !insn.addr !5187
  br label %dec_label_pc_451b6c, !insn.addr !5187
}

define i32 @__dcrt_set_variable_in_narrow_environment_nolock(i8* %option, i32 %is_top_level_call) local_unnamed_addr {
dec_label_pc_451ddb:
  %0 = call i32 @"common_set_variable_in_environment_nolock<char>"(i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !5188
  ret i32 %0, !insn.addr !5188
}

define void @__acrt_lowio_lock_fh(i32 %fh) local_unnamed_addr {
dec_label_pc_452002:
  %0 = and i32 %fh, 63, !insn.addr !5189
  %1 = sdiv i32 %fh, 64, !insn.addr !5190
  %narrow = mul nuw nsw i32 %0, 56
  %2 = mul i32 %1, 4, !insn.addr !5191
  %3 = add i32 %2, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5191
  %4 = inttoptr i32 %3 to i32*, !insn.addr !5191
  %5 = load i32, i32* %4, align 4, !insn.addr !5191
  %6 = add i32 %5, %narrow, !insn.addr !5191
  %7 = inttoptr i32 %6 to %_RTL_CRITICAL_SECTION*, !insn.addr !5192
  call void @EnterCriticalSection(%_RTL_CRITICAL_SECTION* %7), !insn.addr !5193
  ret void, !insn.addr !5194
}

define void @__acrt_lowio_unlock_fh(i32 %fh) local_unnamed_addr {
dec_label_pc_4520e3:
  %0 = and i32 %fh, 63, !insn.addr !5195
  %1 = sdiv i32 %fh, 64, !insn.addr !5196
  %narrow = mul nuw nsw i32 %0, 56
  %2 = mul i32 %1, 4, !insn.addr !5197
  %3 = add i32 %2, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5197
  %4 = inttoptr i32 %3 to i32*, !insn.addr !5197
  %5 = load i32, i32* %4, align 4, !insn.addr !5197
  %6 = add i32 %5, %narrow, !insn.addr !5197
  %7 = inttoptr i32 %6 to %_RTL_CRITICAL_SECTION*, !insn.addr !5198
  call void @LeaveCriticalSection(%_RTL_CRITICAL_SECTION* %7), !insn.addr !5199
  ret void, !insn.addr !5200
}

define i32 @_free_osfhnd(i32 %fh) local_unnamed_addr {
dec_label_pc_452265:
  %storemerge.reg2mem = alloca i32, !insn.addr !5201
  %stack_var_-24.0.reg2mem = alloca i32, !insn.addr !5201
  %0 = icmp slt i32 %fh, 0, !insn.addr !5202
  br i1 %0, label %dec_label_pc_4522db, label %dec_label_pc_452274, !insn.addr !5203

dec_label_pc_452274:                              ; preds = %dec_label_pc_452265
  %1 = load i32, i32* @_nhandle, align 4, !insn.addr !5204
  %2 = icmp ugt i32 %1, %fh, !insn.addr !5204
  %3 = icmp eq i1 %2, false, !insn.addr !5205
  br i1 %3, label %dec_label_pc_4522db, label %dec_label_pc_45227c, !insn.addr !5205

dec_label_pc_45227c:                              ; preds = %dec_label_pc_452274
  %4 = and i32 %fh, 63, !insn.addr !5206
  %5 = udiv i32 %fh, 64
  %narrow = mul nuw nsw i32 %4, 56
  %6 = mul i32 %5, 4, !insn.addr !5207
  %7 = add i32 %6, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5207
  %8 = inttoptr i32 %7 to i32*, !insn.addr !5207
  %9 = load i32, i32* %8, align 4, !insn.addr !5207
  %10 = add nuw nsw i32 %narrow, 40, !insn.addr !5208
  %11 = add i32 %10, %9, !insn.addr !5208
  %12 = inttoptr i32 %11 to i8*, !insn.addr !5208
  %13 = load i8, i8* %12, align 1, !insn.addr !5208
  %14 = and i8 %13, 1, !insn.addr !5208
  %15 = icmp eq i8 %14, 0, !insn.addr !5208
  br i1 %15, label %dec_label_pc_4522db, label %dec_label_pc_452297, !insn.addr !5209

dec_label_pc_452297:                              ; preds = %dec_label_pc_45227c
  %16 = add nuw nsw i32 %narrow, 24, !insn.addr !5210
  %17 = add i32 %9, %16, !insn.addr !5210
  %18 = inttoptr i32 %17 to i32*, !insn.addr !5210
  %19 = load i32, i32* %18, align 4, !insn.addr !5210
  %20 = icmp eq i32 %19, -1, !insn.addr !5210
  br i1 %20, label %dec_label_pc_4522db, label %dec_label_pc_45229e, !insn.addr !5211

dec_label_pc_45229e:                              ; preds = %dec_label_pc_452297
  %21 = call i32 @_query_app_type(), !insn.addr !5212
  %22 = icmp eq i32 %21, 1, !insn.addr !5213
  %23 = icmp eq i1 %22, false, !insn.addr !5214
  br i1 %23, label %dec_label_pc_4522cb, label %dec_label_pc_4522a8, !insn.addr !5214

dec_label_pc_4522a8:                              ; preds = %dec_label_pc_45229e
  %24 = icmp eq i32 %fh, 0, !insn.addr !5215
  store i32 -10, i32* %stack_var_-24.0.reg2mem, !insn.addr !5216
  br i1 %24, label %dec_label_pc_4522c5, label %dec_label_pc_4522ae, !insn.addr !5216

dec_label_pc_4522ae:                              ; preds = %dec_label_pc_4522a8
  %25 = add i32 %fh, -1, !insn.addr !5217
  %26 = icmp eq i32 %25, 0, !insn.addr !5217
  store i32 -11, i32* %stack_var_-24.0.reg2mem, !insn.addr !5218
  br i1 %26, label %dec_label_pc_4522c5, label %dec_label_pc_4522b3, !insn.addr !5218

dec_label_pc_4522b3:                              ; preds = %dec_label_pc_4522ae
  %27 = icmp eq i32 %25, 1, !insn.addr !5219
  %28 = icmp eq i1 %27, false, !insn.addr !5220
  store i32 -12, i32* %stack_var_-24.0.reg2mem, !insn.addr !5220
  br i1 %28, label %dec_label_pc_4522cb, label %dec_label_pc_4522c5, !insn.addr !5220

dec_label_pc_4522c5:                              ; preds = %dec_label_pc_4522a8, %dec_label_pc_4522ae, %dec_label_pc_4522b3
  %stack_var_-24.0.reload = load i32, i32* %stack_var_-24.0.reg2mem
  %29 = call i1 @SetStdHandle(i32 %stack_var_-24.0.reload, i32* null), !insn.addr !5221
  br label %dec_label_pc_4522cb, !insn.addr !5221

dec_label_pc_4522cb:                              ; preds = %dec_label_pc_4522c5, %dec_label_pc_4522b3, %dec_label_pc_45229e
  %30 = load i32, i32* %8, align 4, !insn.addr !5222
  %31 = add i32 %30, %16, !insn.addr !5223
  %32 = inttoptr i32 %31 to i32*, !insn.addr !5223
  store i32 -1, i32* %32, align 4, !insn.addr !5223
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !5224
  br label %dec_label_pc_4522f1, !insn.addr !5224

dec_label_pc_4522db:                              ; preds = %dec_label_pc_452297, %dec_label_pc_45227c, %dec_label_pc_452274, %dec_label_pc_452265
  %33 = call i32* @_errno(), !insn.addr !5225
  store i32 9, i32* %33, align 4, !insn.addr !5226
  %34 = call i32* @__doserrno(), !insn.addr !5227
  store i32 0, i32* %34, align 4, !insn.addr !5228
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !5229
  br label %dec_label_pc_4522f1, !insn.addr !5229

dec_label_pc_4522f1:                              ; preds = %dec_label_pc_4522db, %dec_label_pc_4522cb
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !5230
}

define i32 @_get_osfhandle(i32 %fh) local_unnamed_addr {
dec_label_pc_45231a:
  %0 = icmp eq i32 %fh, -2, !insn.addr !5231
  %1 = icmp eq i1 %0, false, !insn.addr !5232
  br i1 %1, label %dec_label_pc_45233c, label %dec_label_pc_452327, !insn.addr !5232

dec_label_pc_452327:                              ; preds = %dec_label_pc_45231a
  %2 = call i32* @__doserrno(), !insn.addr !5233
  store i32 0, i32* %2, align 4, !insn.addr !5234
  %3 = call i32* @_errno(), !insn.addr !5235
  store i32 9, i32* %3, align 4, !insn.addr !5236
  br label %dec_label_pc_45237f, !insn.addr !5237

dec_label_pc_45233c:                              ; preds = %dec_label_pc_45231a
  %4 = icmp slt i32 %fh, 0, !insn.addr !5238
  br i1 %4, label %dec_label_pc_452367, label %dec_label_pc_452340, !insn.addr !5239

dec_label_pc_452340:                              ; preds = %dec_label_pc_45233c
  %5 = load i32, i32* @_nhandle, align 4, !insn.addr !5240
  %6 = icmp ugt i32 %5, %fh, !insn.addr !5240
  %7 = icmp eq i1 %6, false, !insn.addr !5241
  br i1 %7, label %dec_label_pc_452367, label %dec_label_pc_452348, !insn.addr !5241

dec_label_pc_452348:                              ; preds = %dec_label_pc_452340
  %8 = and i32 %fh, 63, !insn.addr !5242
  %9 = udiv i32 %fh, 64
  %narrow = mul nuw nsw i32 %8, 56
  %10 = mul i32 %9, 4, !insn.addr !5243
  %11 = add i32 %10, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5243
  %12 = inttoptr i32 %11 to i32*, !insn.addr !5243
  %13 = load i32, i32* %12, align 4, !insn.addr !5243
  %14 = add i32 %13, %narrow
  %15 = add i32 %14, 40, !insn.addr !5244
  %16 = inttoptr i32 %15 to i8*, !insn.addr !5244
  %17 = load i8, i8* %16, align 1, !insn.addr !5244
  %18 = and i8 %17, 1, !insn.addr !5244
  %19 = icmp eq i8 %18, 0, !insn.addr !5244
  br i1 %19, label %dec_label_pc_452367, label %dec_label_pc_452361, !insn.addr !5245

dec_label_pc_452361:                              ; preds = %dec_label_pc_452348
  %20 = add i32 %14, 24, !insn.addr !5246
  %21 = inttoptr i32 %20 to i32*, !insn.addr !5246
  %22 = load i32, i32* %21, align 4, !insn.addr !5246
  ret i32 %22, !insn.addr !5247

dec_label_pc_452367:                              ; preds = %dec_label_pc_452348, %dec_label_pc_452340, %dec_label_pc_45233c
  %23 = call i32* @__doserrno(), !insn.addr !5248
  store i32 0, i32* %23, align 4, !insn.addr !5249
  %24 = call i32* @_errno(), !insn.addr !5250
  store i32 9, i32* %24, align 4, !insn.addr !5251
  call void @_invalid_parameter_noinfo(), !insn.addr !5252
  br label %dec_label_pc_45237f, !insn.addr !5252

dec_label_pc_45237f:                              ; preds = %dec_label_pc_452367, %dec_label_pc_452327
  ret i32 -1, !insn.addr !5253
}

declare void @__acrt_locale_free_monetary(%lconv*) local_unnamed_addr

declare void @__acrt_locale_free_numeric(%lconv*) local_unnamed_addr

declare void @__acrt_locale_free_time(%__crt_lc_time_data*) local_unnamed_addr

define i32 @__acrt_GetStringTypeA(i32 %locale, i32 %info_type, i8* %string, i32 %string_size_in_bytes, i16* %char_type, i32 %code_page, i32 %error) local_unnamed_addr {
dec_label_pc_453ecf:
  %esp.3.reg2mem = alloca i32, !insn.addr !5254
  %esi.26.reg2mem = alloca i32, !insn.addr !5254
  %esi.2.reg2mem = alloca i32, !insn.addr !5254
  %esi.0.reg2mem = alloca i32, !insn.addr !5254
  %0 = call i8 @__decompiler_undefined_function_7()
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %1 = call i32 @__decompiler_undefined_function_0()
  store i32 %locale, i32* %stack_var_-48, align 4, !insn.addr !5255
  %2 = call i32 @function_403d78(i32 %locale), !insn.addr !5256
  %3 = ptrtoint i8* %string to i32, !insn.addr !5257
  store i32 %3, i32* %stack_var_-64, align 4, !insn.addr !5257
  %4 = call i32 @function_401712(), !insn.addr !5258
  %5 = icmp eq i32 %4, 0, !insn.addr !5259
  br i1 %5, label %dec_label_pc_453fae, label %dec_label_pc_453f2a, !insn.addr !5260

dec_label_pc_453f2a:                              ; preds = %dec_label_pc_453ecf
  %6 = ptrtoint i32* %stack_var_-48 to i32, !insn.addr !5261
  %7 = mul i32 %4, 2, !insn.addr !5262
  %8 = add i32 %7, 8, !insn.addr !5263
  %9 = icmp ugt i32 %7, -9, !insn.addr !5264
  %10 = icmp eq i32 %8, 0
  %11 = or i1 %9, %10, !insn.addr !5265
  store i32 0, i32* %esi.26.reg2mem, !insn.addr !5266
  store i32 %6, i32* %esp.3.reg2mem, !insn.addr !5266
  br i1 %11, label %dec_label_pc_453fa7, label %dec_label_pc_453f3b, !insn.addr !5266

dec_label_pc_453f3b:                              ; preds = %dec_label_pc_453f2a
  %12 = icmp ult i32 %8, 1025
  br i1 %12, label %dec_label_pc_453f42, label %dec_label_pc_453f55, !insn.addr !5267

dec_label_pc_453f42:                              ; preds = %dec_label_pc_453f3b
  call void @_alloca_probe_16(), !insn.addr !5268
  store i32 52428, i32* %stack_var_-48, align 4, !insn.addr !5269
  store i32 %6, i32* %esi.0.reg2mem, !insn.addr !5270
  br label %dec_label_pc_453f68, !insn.addr !5270

dec_label_pc_453f55:                              ; preds = %dec_label_pc_453f3b
  %13 = call i32* @_malloc_base(i32 %8), !insn.addr !5271
  %14 = ptrtoint i32* %13 to i32, !insn.addr !5271
  %15 = icmp eq i32* %13, null, !insn.addr !5272
  store i32 %14, i32* %esi.2.reg2mem, !insn.addr !5273
  br i1 %15, label %dec_label_pc_453f72, label %dec_label_pc_453f62, !insn.addr !5273

dec_label_pc_453f62:                              ; preds = %dec_label_pc_453f55
  store i32 56797, i32* %13, align 4, !insn.addr !5274
  store i32 %14, i32* %esi.0.reg2mem, !insn.addr !5274
  br label %dec_label_pc_453f68, !insn.addr !5274

dec_label_pc_453f68:                              ; preds = %dec_label_pc_453f62, %dec_label_pc_453f42
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %16 = add i32 %esi.0.reload, 8, !insn.addr !5275
  store i32 %16, i32* %esi.2.reg2mem, !insn.addr !5275
  br label %dec_label_pc_453f72, !insn.addr !5275

dec_label_pc_453f72:                              ; preds = %dec_label_pc_453f55, %dec_label_pc_453f68
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %17 = icmp eq i32 %esi.2.reload, 0, !insn.addr !5276
  store i32 0, i32* %esi.26.reg2mem, !insn.addr !5277
  store i32 %6, i32* %esp.3.reg2mem, !insn.addr !5277
  br i1 %17, label %dec_label_pc_453fa7, label %dec_label_pc_453f76, !insn.addr !5277

dec_label_pc_453f76:                              ; preds = %dec_label_pc_453f72
  %18 = inttoptr i32 %esi.2.reload to i8*, !insn.addr !5278
  call void @memset(i8* %18, i8 0, i32 %7), !insn.addr !5278
  store i32 %4, i32* %stack_var_-64, align 4, !insn.addr !5279
  %19 = call i32 @function_401712(), !insn.addr !5280
  %20 = icmp eq i32 %19, 0, !insn.addr !5281
  store i32 %esi.2.reload, i32* %esi.26.reg2mem, !insn.addr !5282
  store i32 %6, i32* %esp.3.reg2mem, !insn.addr !5282
  br i1 %20, label %dec_label_pc_453fa7, label %dec_label_pc_453f97, !insn.addr !5282

dec_label_pc_453f97:                              ; preds = %dec_label_pc_453f76
  store i32 %info_type, i32* %stack_var_-64, align 4, !insn.addr !5283
  %21 = ptrtoint i32* %stack_var_-64 to i32, !insn.addr !5283
  %22 = inttoptr i32 %esi.2.reload to i16*, !insn.addr !5284
  %sext = mul i32 %19, 16777216
  %23 = sdiv i32 %sext, 16777216, !insn.addr !5284
  %24 = call i1 @GetStringTypeW(i32 %info_type, i16* %22, i32 %23, i16* %char_type), !insn.addr !5284
  store i32 %esi.2.reload, i32* %esi.26.reg2mem, !insn.addr !5285
  store i32 %21, i32* %esp.3.reg2mem, !insn.addr !5285
  br label %dec_label_pc_453fa7, !insn.addr !5285

dec_label_pc_453fa7:                              ; preds = %dec_label_pc_453f2a, %dec_label_pc_453f97, %dec_label_pc_453f76, %dec_label_pc_453f72
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %esi.26.reload = load i32, i32* %esi.26.reg2mem
  %25 = add i32 %esp.3.reload, -4, !insn.addr !5286
  %26 = inttoptr i32 %25 to i32*, !insn.addr !5286
  store i32 %esi.26.reload, i32* %26, align 4, !insn.addr !5286
  %27 = call i32 @function_40125d(), !insn.addr !5287
  br label %dec_label_pc_453fae, !insn.addr !5288

dec_label_pc_453fae:                              ; preds = %dec_label_pc_453fa7, %dec_label_pc_453ecf
  %28 = icmp eq i8 %0, 0, !insn.addr !5289
  br i1 %28, label %dec_label_pc_453fbe, label %dec_label_pc_453fb4, !insn.addr !5290

dec_label_pc_453fb4:                              ; preds = %dec_label_pc_453fae
  %29 = add i32 %1, 848, !insn.addr !5291
  %30 = inttoptr i32 %29 to i32*, !insn.addr !5291
  %31 = load i32, i32* %30, align 4, !insn.addr !5291
  %32 = and i32 %31, -3, !insn.addr !5291
  store i32 %32, i32* %30, align 4, !insn.addr !5291
  br label %dec_label_pc_453fbe, !insn.addr !5291

dec_label_pc_453fbe:                              ; preds = %dec_label_pc_453fb4, %dec_label_pc_453fae
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !5292
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !5293
}

declare void @_freea_crt(i8*) local_unnamed_addr

declare void @__acrt_add_locale_ref(i32) local_unnamed_addr

define void @__acrt_free_locale(i32 %ptloci) local_unnamed_addr {
dec_label_pc_4540d6:
  %edi.0.reg2mem = alloca i32, !insn.addr !5294
  %ebx.0.reg2mem = alloca i32, !insn.addr !5294
  %eax.0.reg2mem = alloca i32, !insn.addr !5294
  %stack_var_-20 = alloca i32, align 4
  %0 = add i32 %ptloci, 136, !insn.addr !5295
  %1 = inttoptr i32 %0 to i32*, !insn.addr !5295
  %2 = load i32, i32* %1, align 4, !insn.addr !5295
  %3 = icmp eq i32 %2, 0, !insn.addr !5296
  %4 = icmp eq i32 %2, ptrtoint (%lconv* @__acrt_lconv_c to i32), !insn.addr !5297
  %or.cond = or i1 %3, %4
  br i1 %or.cond, label %dec_label_pc_454158, label %dec_label_pc_4540f3, !insn.addr !5298

dec_label_pc_4540f3:                              ; preds = %dec_label_pc_4540d6
  %5 = add i32 %ptloci, 124, !insn.addr !5299
  %6 = inttoptr i32 %5 to i32*, !insn.addr !5299
  %7 = load i32, i32* %6, align 4, !insn.addr !5299
  %8 = icmp eq i32 %7, 0, !insn.addr !5300
  br i1 %8, label %dec_label_pc_454158, label %dec_label_pc_4540fa, !insn.addr !5301

dec_label_pc_4540fa:                              ; preds = %dec_label_pc_4540f3
  %9 = inttoptr i32 %7 to i32*, !insn.addr !5302
  %10 = load i32, i32* %9, align 4, !insn.addr !5302
  %11 = icmp eq i32 %10, 0, !insn.addr !5302
  %12 = icmp eq i1 %11, false, !insn.addr !5303
  br i1 %12, label %dec_label_pc_454158, label %dec_label_pc_4540ff, !insn.addr !5303

dec_label_pc_4540ff:                              ; preds = %dec_label_pc_4540fa
  %13 = add i32 %ptloci, 132, !insn.addr !5304
  %14 = inttoptr i32 %13 to i32*, !insn.addr !5304
  %15 = load i32, i32* %14, align 4, !insn.addr !5304
  %16 = icmp eq i32 %15, 0, !insn.addr !5305
  br i1 %16, label %dec_label_pc_454121, label %dec_label_pc_454109, !insn.addr !5306

dec_label_pc_454109:                              ; preds = %dec_label_pc_4540ff
  %17 = inttoptr i32 %15 to i32*, !insn.addr !5307
  %18 = load i32, i32* %17, align 4, !insn.addr !5307
  %19 = icmp eq i32 %18, 0, !insn.addr !5307
  %20 = icmp eq i1 %19, false, !insn.addr !5308
  br i1 %20, label %dec_label_pc_454121, label %dec_label_pc_45410e, !insn.addr !5308

dec_label_pc_45410e:                              ; preds = %dec_label_pc_454109
  call void @_free_base(i32* %17), !insn.addr !5309
  %21 = load i32, i32* %1, align 4, !insn.addr !5310
  %22 = call i32 @function_40263a(i32 %21), !insn.addr !5311
  br label %dec_label_pc_454121, !insn.addr !5312

dec_label_pc_454121:                              ; preds = %dec_label_pc_45410e, %dec_label_pc_454109, %dec_label_pc_4540ff
  %23 = add i32 %ptloci, 128, !insn.addr !5313
  %24 = inttoptr i32 %23 to i32*, !insn.addr !5313
  %25 = load i32, i32* %24, align 4, !insn.addr !5313
  %26 = icmp eq i32 %25, 0, !insn.addr !5314
  br i1 %26, label %dec_label_pc_454143, label %dec_label_pc_45412b, !insn.addr !5315

dec_label_pc_45412b:                              ; preds = %dec_label_pc_454121
  %27 = inttoptr i32 %25 to i32*, !insn.addr !5316
  %28 = load i32, i32* %27, align 4, !insn.addr !5316
  %29 = icmp eq i32 %28, 0, !insn.addr !5316
  %30 = icmp eq i1 %29, false, !insn.addr !5317
  br i1 %30, label %dec_label_pc_454143, label %dec_label_pc_454130, !insn.addr !5317

dec_label_pc_454130:                              ; preds = %dec_label_pc_45412b
  call void @_free_base(i32* %27), !insn.addr !5318
  %31 = load i32, i32* %1, align 4, !insn.addr !5319
  %32 = call i32 @function_401a00(i32 %31), !insn.addr !5320
  br label %dec_label_pc_454143, !insn.addr !5321

dec_label_pc_454143:                              ; preds = %dec_label_pc_454130, %dec_label_pc_45412b, %dec_label_pc_454121
  %33 = load i32, i32* %6, align 4, !insn.addr !5322
  %34 = inttoptr i32 %33 to i32*, !insn.addr !5323
  call void @_free_base(i32* %34), !insn.addr !5323
  %35 = load i32, i32* %1, align 4, !insn.addr !5324
  %36 = inttoptr i32 %35 to i32*, !insn.addr !5325
  call void @_free_base(i32* %36), !insn.addr !5325
  br label %dec_label_pc_454158, !insn.addr !5326

dec_label_pc_454158:                              ; preds = %dec_label_pc_454143, %dec_label_pc_4540fa, %dec_label_pc_4540f3, %dec_label_pc_4540d6
  %37 = add i32 %ptloci, 140, !insn.addr !5327
  %38 = inttoptr i32 %37 to i32*, !insn.addr !5327
  %39 = load i32, i32* %38, align 4, !insn.addr !5327
  %40 = icmp eq i32 %39, 0, !insn.addr !5328
  br i1 %40, label %dec_label_pc_4541a7, label %dec_label_pc_454162, !insn.addr !5329

dec_label_pc_454162:                              ; preds = %dec_label_pc_454158
  %41 = inttoptr i32 %39 to i32*, !insn.addr !5330
  %42 = load i32, i32* %41, align 4, !insn.addr !5330
  %43 = icmp eq i32 %42, 0, !insn.addr !5330
  %44 = icmp eq i1 %43, false, !insn.addr !5331
  br i1 %44, label %dec_label_pc_4541a7, label %dec_label_pc_454167, !insn.addr !5331

dec_label_pc_454167:                              ; preds = %dec_label_pc_454162
  %45 = add i32 %ptloci, 144, !insn.addr !5332
  %46 = inttoptr i32 %45 to i32*, !insn.addr !5332
  %47 = load i32, i32* %46, align 4, !insn.addr !5332
  %48 = add i32 %47, -254, !insn.addr !5333
  %49 = inttoptr i32 %48 to i32*, !insn.addr !5334
  call void @_free_base(i32* %49), !insn.addr !5334
  %50 = add i32 %ptloci, 148, !insn.addr !5335
  %51 = inttoptr i32 %50 to i32*, !insn.addr !5335
  %52 = load i32, i32* %51, align 4, !insn.addr !5335
  %53 = add i32 %52, -128, !insn.addr !5336
  %54 = inttoptr i32 %53 to i32*, !insn.addr !5337
  call void @_free_base(i32* %54), !insn.addr !5337
  %55 = add i32 %ptloci, 152, !insn.addr !5338
  %56 = inttoptr i32 %55 to i32*, !insn.addr !5338
  %57 = load i32, i32* %56, align 4, !insn.addr !5338
  %58 = add i32 %57, -128, !insn.addr !5339
  %59 = inttoptr i32 %58 to i32*, !insn.addr !5340
  call void @_free_base(i32* %59), !insn.addr !5340
  %60 = load i32, i32* %38, align 4, !insn.addr !5341
  %61 = inttoptr i32 %60 to i32*, !insn.addr !5342
  call void @_free_base(i32* %61), !insn.addr !5342
  br label %dec_label_pc_4541a7, !insn.addr !5343

dec_label_pc_4541a7:                              ; preds = %dec_label_pc_454167, %dec_label_pc_454162, %dec_label_pc_454158
  %62 = add i32 %ptloci, 156, !insn.addr !5344
  %63 = inttoptr i32 %62 to i32*, !insn.addr !5344
  %64 = load i32, i32* %63, align 4, !insn.addr !5344
  %65 = call i32 @function_403a12(i32 %64), !insn.addr !5345
  %66 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !5346
  %67 = add i32 %ptloci, 160, !insn.addr !5347
  %68 = add i32 %ptloci, 40, !insn.addr !5348
  %69 = add i32 %66, -4
  %70 = inttoptr i32 %69 to i32*
  %71 = add i32 %66, -8
  %72 = inttoptr i32 %71 to i32*
  store i32 6, i32* %eax.0.reg2mem, !insn.addr !5348
  store i32 %67, i32* %ebx.0.reg2mem, !insn.addr !5348
  store i32 %68, i32* %edi.0.reg2mem, !insn.addr !5348
  br label %dec_label_pc_4541c2, !insn.addr !5348

dec_label_pc_4541c2:                              ; preds = %dec_label_pc_454204, %dec_label_pc_4541a7
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %73 = add i32 %edi.0.reload, -8, !insn.addr !5349
  %74 = inttoptr i32 %73 to i32*, !insn.addr !5349
  %75 = load i32, i32* %74, align 4, !insn.addr !5349
  %76 = icmp eq i32 %75, ptrtoint ([1 x i16]* @__acrt_wide_c_locale_string to i32), !insn.addr !5349
  br i1 %76, label %dec_label_pc_4541e8, label %dec_label_pc_4541cb, !insn.addr !5350

dec_label_pc_4541cb:                              ; preds = %dec_label_pc_4541c2
  %77 = inttoptr i32 %edi.0.reload to i32*, !insn.addr !5351
  %78 = load i32, i32* %77, align 4, !insn.addr !5351
  %79 = icmp eq i32 %78, 0, !insn.addr !5352
  br i1 %79, label %dec_label_pc_4541e8, label %dec_label_pc_4541d1, !insn.addr !5353

dec_label_pc_4541d1:                              ; preds = %dec_label_pc_4541cb
  %80 = inttoptr i32 %78 to i32*, !insn.addr !5354
  %81 = load i32, i32* %80, align 4, !insn.addr !5354
  %82 = icmp eq i32 %81, 0, !insn.addr !5354
  %83 = icmp eq i1 %82, false, !insn.addr !5355
  br i1 %83, label %dec_label_pc_4541e8, label %dec_label_pc_4541d6, !insn.addr !5355

dec_label_pc_4541d6:                              ; preds = %dec_label_pc_4541d1
  store i32 %78, i32* %70, align 4, !insn.addr !5356
  %84 = inttoptr i32 %eax.0.reload to i32*, !insn.addr !5357
  call void @_free_base(i32* %84), !insn.addr !5357
  %85 = inttoptr i32 %ebx.0.reload to i32*, !insn.addr !5358
  %86 = load i32, i32* %85, align 4, !insn.addr !5358
  store i32 %86, i32* %72, align 4, !insn.addr !5358
  call void @_free_base(i32* nonnull @80), !insn.addr !5359
  br label %dec_label_pc_4541e8, !insn.addr !5360

dec_label_pc_4541e8:                              ; preds = %dec_label_pc_4541cb, %dec_label_pc_4541d1, %dec_label_pc_4541d6, %dec_label_pc_4541c2
  %87 = add i32 %edi.0.reload, -12, !insn.addr !5361
  %88 = inttoptr i32 %87 to i32*, !insn.addr !5361
  %89 = load i32, i32* %88, align 4, !insn.addr !5361
  %90 = icmp eq i32 %89, 0, !insn.addr !5361
  br i1 %90, label %dec_label_pc_454204, label %dec_label_pc_4541ee, !insn.addr !5362

dec_label_pc_4541ee:                              ; preds = %dec_label_pc_4541e8
  %91 = add i32 %edi.0.reload, -4, !insn.addr !5363
  %92 = inttoptr i32 %91 to i32*, !insn.addr !5363
  %93 = load i32, i32* %92, align 4, !insn.addr !5363
  %94 = icmp eq i32 %93, 0, !insn.addr !5364
  br i1 %94, label %dec_label_pc_454204, label %dec_label_pc_4541f5, !insn.addr !5365

dec_label_pc_4541f5:                              ; preds = %dec_label_pc_4541ee
  %95 = inttoptr i32 %93 to i32*, !insn.addr !5366
  %96 = load i32, i32* %95, align 4, !insn.addr !5366
  %97 = icmp eq i32 %96, 0, !insn.addr !5366
  %98 = icmp eq i1 %97, false, !insn.addr !5367
  br i1 %98, label %dec_label_pc_454204, label %dec_label_pc_4541fa, !insn.addr !5367

dec_label_pc_4541fa:                              ; preds = %dec_label_pc_4541f5
  store i32 %93, i32* %70, align 4, !insn.addr !5368
  call void @_free_base(i32* nonnull @80), !insn.addr !5369
  br label %dec_label_pc_454204, !insn.addr !5370

dec_label_pc_454204:                              ; preds = %dec_label_pc_4541ee, %dec_label_pc_4541f5, %dec_label_pc_4541fa, %dec_label_pc_4541e8
  %99 = add i32 %ebx.0.reload, 4, !insn.addr !5371
  %100 = add i32 %edi.0.reload, 16, !insn.addr !5372
  %101 = add nsw i32 %eax.0.reload, -1, !insn.addr !5373
  %102 = icmp eq i32 %101, 0, !insn.addr !5373
  %103 = icmp eq i1 %102, false, !insn.addr !5374
  store i32 %101, i32* %eax.0.reg2mem, !insn.addr !5374
  store i32 %99, i32* %ebx.0.reg2mem, !insn.addr !5374
  store i32 %100, i32* %edi.0.reg2mem, !insn.addr !5374
  br i1 %103, label %dec_label_pc_4541c2, label %dec_label_pc_454212, !insn.addr !5374

dec_label_pc_454212:                              ; preds = %dec_label_pc_454204
  store i32 %ptloci, i32* %70, align 4, !insn.addr !5375
  call void @_free_base(i32* null), !insn.addr !5376
  ret void, !insn.addr !5377
}

define void @__acrt_locale_free_lc_time_if_unreferenced(%__crt_lc_time_data* %lc_time) local_unnamed_addr {
dec_label_pc_4542a3:
  %0 = icmp eq %__crt_lc_time_data* %lc_time, null, !insn.addr !5378
  %1 = icmp eq %__crt_lc_time_data* %lc_time, @__lc_time_c, !insn.addr !5379
  %or.cond = or i1 %0, %1
  br i1 %or.cond, label %dec_label_pc_4542d1, label %dec_label_pc_4542b8, !insn.addr !5380

dec_label_pc_4542b8:                              ; preds = %dec_label_pc_4542a3
  %2 = ptrtoint %__crt_lc_time_data* %lc_time to i32
  %3 = add i32 %2, 176, !insn.addr !5381
  %4 = inttoptr i32 %3 to i32*, !insn.addr !5381
  %5 = load i32, i32* %4, align 4, !insn.addr !5381
  %6 = icmp eq i32 %5, 0, !insn.addr !5382
  %7 = icmp eq i1 %6, false, !insn.addr !5383
  br i1 %7, label %dec_label_pc_4542d1, label %dec_label_pc_4542c3, !insn.addr !5383

dec_label_pc_4542c3:                              ; preds = %dec_label_pc_4542b8
  %8 = call i32 @function_40480e(i32 %2), !insn.addr !5384
  %9 = bitcast %__crt_lc_time_data* %lc_time to i32*
  call void @_free_base(i32* %9), !insn.addr !5385
  br label %dec_label_pc_4542d1, !insn.addr !5386

dec_label_pc_4542d1:                              ; preds = %dec_label_pc_4542c3, %dec_label_pc_4542b8, %dec_label_pc_4542a3
  ret void, !insn.addr !5387
}

declare void @__acrt_release_locale_ref(i32) local_unnamed_addr

declare i8* @_recalloc_base(i8*, i32, i32) local_unnamed_addr

define i32* @"__crt_seh_guarded_call<void (__cdecl*)(int)>::operator()<<lambda_cbab9ec6f41b0180b23cc171c22676b0>,<lambda_44731a7d0e6d81c3e6aa82d741081786> &,<lambda_4b292cb8dd18144e164572427af410ab> >"(i32 %this, i32* %setup, i32* %action, i32* %cleanup) local_unnamed_addr {
dec_label_pc_455f95:
  %storemerge.reg2mem = alloca i32, !insn.addr !5388
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a898, i32 12), !insn.addr !5389
  %2 = add i32 %0, -28, !insn.addr !5390
  %3 = inttoptr i32 %2 to i32*, !insn.addr !5390
  store i32 0, i32* %3, align 4, !insn.addr !5390
  %4 = add i32 %0, 8, !insn.addr !5391
  %5 = inttoptr i32 %4 to i32*, !insn.addr !5391
  %6 = load i32, i32* %5, align 4, !insn.addr !5391
  %7 = inttoptr i32 %6 to i32*, !insn.addr !5392
  %8 = load i32, i32* %7, align 4, !insn.addr !5392
  %9 = call i32 @function_40452a(i32 %8), !insn.addr !5393
  %10 = add i32 %0, -4, !insn.addr !5394
  %11 = inttoptr i32 %10 to i32*, !insn.addr !5394
  store i32 0, i32* %11, align 4, !insn.addr !5394
  %12 = load i32, i32* @__security_cookie, align 4, !insn.addr !5395
  %13 = and i32 %12, 31, !insn.addr !5396
  %14 = load i32, i32* @abort_action, align 4, !insn.addr !5397
  %15 = xor i32 %14, %12, !insn.addr !5397
  %16 = icmp eq i32 %13, 0, !insn.addr !5398
  store i32 %15, i32* %storemerge.reg2mem, !insn.addr !5398
  br i1 %16, label %22, label %17, !insn.addr !5398

; <label>:17:                                     ; preds = %dec_label_pc_455f95
  %18 = lshr i32 %15, %13, !insn.addr !5398
  %19 = sub nsw i32 32, %13, !insn.addr !5398
  %20 = shl i32 %15, %19, !insn.addr !5398
  %21 = or i32 %18, %20, !insn.addr !5398
  store i32 %21, i32* %storemerge.reg2mem, !insn.addr !5398
  br label %22, !insn.addr !5398

; <label>:22:                                     ; preds = %dec_label_pc_455f95, %17
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  store i32 %storemerge.reload, i32* %3, align 4, !insn.addr !5399
  store i32 -2, i32* %11, align 4, !insn.addr !5400
  %23 = call i32 @function_455fed(), !insn.addr !5401
  %24 = add i32 %0, -16, !insn.addr !5402
  %25 = inttoptr i32 %24 to i32*, !insn.addr !5402
  %26 = load i32, i32* %25, align 4, !insn.addr !5402
  call void @__writefsdword(i32 0, i32 %26), !insn.addr !5403
  %27 = inttoptr i32 %storemerge.reload to i32*, !insn.addr !5404
  ret i32* %27, !insn.addr !5404
}

define i32 @function_455fed() local_unnamed_addr {
dec_label_pc_455fed:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, 16, !insn.addr !5405
  %2 = inttoptr i32 %1 to i32*, !insn.addr !5405
  %3 = load i32, i32* %2, align 4, !insn.addr !5405
  %4 = inttoptr i32 %3 to i32*, !insn.addr !5406
  %5 = load i32, i32* %4, align 4, !insn.addr !5406
  %6 = call i32 @function_4017d5(i32 %5), !insn.addr !5407
  ret i32 %6, !insn.addr !5408
}

define i32** @get_global_action_nolock(i32 %signum) local_unnamed_addr {
dec_label_pc_4561af:
  %merge.reg2mem = alloca i32**, !insn.addr !5409
  store i32** bitcast (i32* @ctrlc_action to i32**), i32*** %merge.reg2mem
  switch i32 %signum, label %dec_label_pc_4561d1.fold.split1 [
    i32 2, label %dec_label_pc_4561d1
    i32 6, label %dec_label_pc_4561e3
    i32 15, label %dec_label_pc_4561d1.fold.split
    i32 21, label %dec_label_pc_4561d1.fold.split2
    i32 22, label %dec_label_pc_4561e3
  ]

dec_label_pc_4561d1.fold.split:                   ; preds = %dec_label_pc_4561af
  store i32** bitcast (i32* @term_action to i32**), i32*** %merge.reg2mem
  br label %dec_label_pc_4561d1

dec_label_pc_4561d1.fold.split1:                  ; preds = %dec_label_pc_4561af
  store i32** null, i32*** %merge.reg2mem
  br label %dec_label_pc_4561d1

dec_label_pc_4561d1.fold.split2:                  ; preds = %dec_label_pc_4561af
  store i32** bitcast (i32* @ctrlbreak_action to i32**), i32*** %merge.reg2mem
  br label %dec_label_pc_4561d1

dec_label_pc_4561d1:                              ; preds = %dec_label_pc_4561af, %dec_label_pc_4561d1.fold.split2, %dec_label_pc_4561d1.fold.split1, %dec_label_pc_4561d1.fold.split, %dec_label_pc_4561e3
  %merge.reload = load i32**, i32*** %merge.reg2mem
  ret i32** %merge.reload, !insn.addr !5410

dec_label_pc_4561e3:                              ; preds = %dec_label_pc_4561af, %dec_label_pc_4561af
  store i32** bitcast (i32* @abort_action to i32**), i32*** %merge.reg2mem
  br label %dec_label_pc_4561d1
}

declare i32 @siglookup(i32, i32) local_unnamed_addr

define i32* @__acrt_get_sigabrt_handler() local_unnamed_addr {
dec_label_pc_4562e2:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 3, i32* %stack_var_-12, align 4, !insn.addr !5411
  store i32 3, i32* %stack_var_-16, align 4, !insn.addr !5412
  %0 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !5413
  %1 = call i32* @"__crt_seh_guarded_call<void (__cdecl*)(int)>::operator()<<lambda_cbab9ec6f41b0180b23cc171c22676b0>,<lambda_44731a7d0e6d81c3e6aa82d741081786> &,<lambda_4b292cb8dd18144e164572427af410ab> >"(i32 %0, i32* nonnull %stack_var_-5, i32* nonnull %stack_var_-12, i32* inttoptr (i32 3 to i32*)), !insn.addr !5414
  ret i32* %1, !insn.addr !5415
}

define i32* @__fpecode() local_unnamed_addr {
dec_label_pc_456337:
  %0 = call i32 @___acrt_getptd(), !insn.addr !5416
  %1 = add i32 %0, 8, !insn.addr !5417
  %2 = inttoptr i32 %1 to i32*, !insn.addr !5418
  ret i32* %2, !insn.addr !5418
}

define i32 @raise(i32 %signum) local_unnamed_addr {
dec_label_pc_45634d:
  %eax.17.reg2mem = alloca i32, !insn.addr !5419
  %edx.0.reg2mem = alloca i32, !insn.addr !5419
  %ecx.2.reg2mem = alloca i8, !insn.addr !5419
  %storemerge.reg2mem = alloca i32, !insn.addr !5419
  %ecx.1.reg2mem = alloca i1, !insn.addr !5419
  %ebx.09.reg2mem = alloca i32, !insn.addr !5419
  %.reg2mem11 = alloca i32*, !insn.addr !5419
  %.reg2mem = alloca i32*, !insn.addr !5419
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_47a858 to i32), i32* %stack_var_-8, align 4, !insn.addr !5420
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a858, i32 40), !insn.addr !5421
  %2 = add i32 %0, -40, !insn.addr !5422
  %3 = inttoptr i32 %2 to i32*, !insn.addr !5422
  store i32 0, i32* %3, align 4, !insn.addr !5422
  %4 = add i32 %0, -52, !insn.addr !5423
  %5 = inttoptr i32 %4 to i32*, !insn.addr !5423
  store i32 0, i32* %5, align 4, !insn.addr !5423
  %6 = add i32 %0, -25, !insn.addr !5424
  %7 = inttoptr i32 %6 to i8*, !insn.addr !5424
  store i8 1, i8* %7, align 1, !insn.addr !5424
  %8 = add i32 %0, 8, !insn.addr !5425
  %9 = inttoptr i32 %8 to i32*, !insn.addr !5425
  %10 = load i32, i32* %9, align 4, !insn.addr !5425
  %11 = icmp sgt i32 %10, 8, !insn.addr !5426
  br i1 %11, label %dec_label_pc_456388, label %dec_label_pc_456370, !insn.addr !5426

dec_label_pc_456370:                              ; preds = %dec_label_pc_45634d
  switch i32 %10, label %dec_label_pc_45637a [
    i32 8, label %dec_label_pc_4563a7
    i32 2, label %dec_label_pc_4563f0
  ]

dec_label_pc_45637a:                              ; preds = %dec_label_pc_456370
  %12 = add i32 %10, -4, !insn.addr !5427
  %13 = icmp eq i32 %12, 0, !insn.addr !5427
  br i1 %13, label %dec_label_pc_4563a7, label %dec_label_pc_456380, !insn.addr !5428

dec_label_pc_456380:                              ; preds = %dec_label_pc_45637a
  %14 = icmp eq i32 %12, 2, !insn.addr !5429
  %15 = icmp eq i1 %14, false, !insn.addr !5430
  br i1 %15, label %dec_label_pc_4563cb, label %dec_label_pc_4563f0, !insn.addr !5430

dec_label_pc_456388:                              ; preds = %dec_label_pc_45634d
  switch i32 %10, label %dec_label_pc_456392 [
    i32 11, label %dec_label_pc_4563a7
    i32 15, label %dec_label_pc_4563f0
  ]

dec_label_pc_456392:                              ; preds = %dec_label_pc_456388
  %.off = add i32 %10, -21
  %16 = icmp ugt i32 %.off, 1
  br i1 %16, label %dec_label_pc_4563cb, label %dec_label_pc_4563f0, !insn.addr !5431

dec_label_pc_4563a7:                              ; preds = %dec_label_pc_456388, %dec_label_pc_456370, %dec_label_pc_45637a
  %17 = call i32 @___acrt_getptd_noexit(), !insn.addr !5432
  store i32 %17, i32* %3, align 4, !insn.addr !5433
  %18 = icmp eq i32 %17, 0, !insn.addr !5434
  %19 = icmp eq i1 %18, false, !insn.addr !5435
  br i1 %19, label %dec_label_pc_4563bd, label %dec_label_pc_4563b5, !insn.addr !5435

dec_label_pc_4563b5:                              ; preds = %dec_label_pc_4563cb, %dec_label_pc_4563a7
  %20 = add i32 %0, -16, !insn.addr !5436
  %21 = inttoptr i32 %20 to i32*, !insn.addr !5436
  %22 = load i32, i32* %21, align 4, !insn.addr !5436
  call void @__writefsdword(i32 0, i32 %22), !insn.addr !5437
  ret i32 -1, !insn.addr !5438

dec_label_pc_4563bd:                              ; preds = %dec_label_pc_4563a7
  %23 = inttoptr i32 %17 to i32*, !insn.addr !5439
  %24 = load i32, i32* %23, align 4, !insn.addr !5439
  %sext2 = mul i32 %24, 16777216
  %25 = sdiv i32 %sext2, 16777216, !insn.addr !5440
  %26 = call i32 @siglookup(i32 %10, i32 %25), !insn.addr !5440
  %27 = icmp eq i32 %26, 0, !insn.addr !5441
  %28 = icmp eq i1 %27, false, !insn.addr !5442
  br i1 %28, label %dec_label_pc_4563e5.thread, label %dec_label_pc_4563cb, !insn.addr !5442

dec_label_pc_4563cb:                              ; preds = %dec_label_pc_4563bd, %dec_label_pc_456392, %dec_label_pc_456380
  %29 = call i32* @_errno(), !insn.addr !5443
  store i32 22, i32* %29, align 4, !insn.addr !5444
  call void @_invalid_parameter_noinfo(), !insn.addr !5445
  br label %dec_label_pc_4563b5, !insn.addr !5446

dec_label_pc_4563e5.thread:                       ; preds = %dec_label_pc_4563bd
  %30 = add i32 %26, 8, !insn.addr !5447
  store i8 0, i8* %7, align 1, !insn.addr !5448
  %31 = add i32 %0, -36, !insn.addr !5449
  %32 = inttoptr i32 %31 to i32*, !insn.addr !5449
  store i32 %30, i32* %32, align 4, !insn.addr !5449
  %33 = add i32 %0, -48, !insn.addr !5450
  %34 = inttoptr i32 %33 to i32*, !insn.addr !5450
  store i32 0, i32* %34, align 4, !insn.addr !5450
  store i32* %34, i32** %.reg2mem
  store i32* %32, i32** %.reg2mem11
  store i32 %17, i32* %ebx.09.reg2mem
  store i1 true, i1* %ecx.1.reg2mem
  br label %dec_label_pc_4563fb

dec_label_pc_4563f0:                              ; preds = %dec_label_pc_456388, %dec_label_pc_456370, %dec_label_pc_456392, %dec_label_pc_456380
  %sext = mul i32 %10, 16777216
  %35 = sdiv i32 %sext, 16777216, !insn.addr !5451
  %36 = call i32** @get_global_action_nolock(i32 %35), !insn.addr !5451
  %37 = ptrtoint i32** %36 to i32, !insn.addr !5451
  %38 = add i32 %0, -36, !insn.addr !5449
  %39 = inttoptr i32 %38 to i32*, !insn.addr !5449
  store i32 %37, i32* %39, align 4, !insn.addr !5449
  %40 = add i32 %0, -48, !insn.addr !5450
  %41 = inttoptr i32 %40 to i32*, !insn.addr !5450
  store i32 0, i32* %41, align 4, !insn.addr !5450
  %42 = call i32 @function_40452a(i32 3), !insn.addr !5452
  %43 = load i8, i8* %7, align 1, !insn.addr !5453
  %phitmp = icmp eq i8 %43, 0
  store i32* %41, i32** %.reg2mem, !insn.addr !5453
  store i32* %39, i32** %.reg2mem11, !insn.addr !5453
  store i32 0, i32* %ebx.09.reg2mem, !insn.addr !5453
  store i1 %phitmp, i1* %ecx.1.reg2mem, !insn.addr !5453
  br label %dec_label_pc_4563fb, !insn.addr !5453

dec_label_pc_4563fb:                              ; preds = %dec_label_pc_4563e5.thread, %dec_label_pc_4563f0
  %ecx.1.reload = load i1, i1* %ecx.1.reg2mem
  %ebx.09.reload = load i32, i32* %ebx.09.reg2mem
  %.reload12 = load i32*, i32** %.reg2mem11
  %.reload = load i32*, i32** %.reg2mem
  %44 = add i32 %0, -44, !insn.addr !5454
  %45 = inttoptr i32 %44 to i32*, !insn.addr !5454
  store i32 0, i32* %45, align 4, !insn.addr !5454
  %46 = add i32 %0, -26, !insn.addr !5455
  %47 = inttoptr i32 %46 to i8*, !insn.addr !5455
  store i8 0, i8* %47, align 1, !insn.addr !5455
  %48 = add i32 %0, -4, !insn.addr !5456
  %49 = inttoptr i32 %48 to i32*, !insn.addr !5456
  store i32 0, i32* %49, align 4, !insn.addr !5456
  %50 = load i32, i32* %.reload12, align 4, !insn.addr !5457
  br i1 %ecx.1.reload, label %dec_label_pc_456422, label %dec_label_pc_45640e, !insn.addr !5458

dec_label_pc_45640e:                              ; preds = %dec_label_pc_4563fb
  %51 = load i32, i32* @__security_cookie, align 4, !insn.addr !5459
  %52 = and i32 %51, 31, !insn.addr !5460
  %53 = inttoptr i32 %50 to i32*, !insn.addr !5461
  %54 = load i32, i32* %53, align 4, !insn.addr !5461
  %55 = xor i32 %54, %51, !insn.addr !5461
  %56 = icmp eq i32 %52, 0, !insn.addr !5462
  store i32 %55, i32* %storemerge.reg2mem, !insn.addr !5462
  br i1 %56, label %62, label %57, !insn.addr !5462

; <label>:57:                                     ; preds = %dec_label_pc_45640e
  %58 = lshr i32 %55, %52, !insn.addr !5462
  %59 = sub nsw i32 32, %52, !insn.addr !5462
  %60 = shl i32 %55, %59, !insn.addr !5462
  %61 = or i32 %58, %60, !insn.addr !5462
  store i32 %61, i32* %storemerge.reg2mem, !insn.addr !5462
  br label %62, !insn.addr !5462

; <label>:62:                                     ; preds = %dec_label_pc_45640e, %57
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %63 = load i8, i8* %7, align 1, !insn.addr !5463
  store i8 %63, i8* %ecx.2.reg2mem, !insn.addr !5464
  store i32 %storemerge.reload, i32* %edx.0.reg2mem, !insn.addr !5464
  br label %dec_label_pc_456424, !insn.addr !5464

dec_label_pc_456422:                              ; preds = %dec_label_pc_4563fb
  %64 = inttoptr i32 %50 to i32*, !insn.addr !5465
  %65 = load i32, i32* %64, align 4, !insn.addr !5465
  store i8 0, i8* %ecx.2.reg2mem, !insn.addr !5465
  store i32 %65, i32* %edx.0.reg2mem, !insn.addr !5465
  br label %dec_label_pc_456424, !insn.addr !5465

dec_label_pc_456424:                              ; preds = %dec_label_pc_456422, %62
  %edx.0.reload = load i32, i32* %edx.0.reg2mem
  %ecx.2.reload = load i8, i8* %ecx.2.reg2mem
  %66 = add i32 %0, -32, !insn.addr !5466
  %67 = inttoptr i32 %66 to i32*, !insn.addr !5466
  store i32 %edx.0.reload, i32* %67, align 4, !insn.addr !5466
  store i32 %edx.0.reload, i32* %45, align 4, !insn.addr !5467
  %68 = icmp eq i32 %edx.0.reload, 1, !insn.addr !5468
  %69 = zext i1 %68 to i8, !insn.addr !5469
  store i8 %69, i8* %47, align 1, !insn.addr !5469
  %70 = icmp eq i1 %68, false, !insn.addr !5470
  %71 = icmp eq i1 %70, false, !insn.addr !5471
  br i1 %71, label %dec_label_pc_4564a3, label %dec_label_pc_456437, !insn.addr !5471

dec_label_pc_456437:                              ; preds = %dec_label_pc_456424
  %72 = icmp eq i32 %edx.0.reload, 0, !insn.addr !5472
  br i1 %72, label %dec_label_pc_456534, label %dec_label_pc_45643f, !insn.addr !5473

dec_label_pc_45643f:                              ; preds = %dec_label_pc_456437
  switch i32 %10, label %dec_label_pc_456448 [
    i32 11, label %dec_label_pc_45644d
    i32 8, label %dec_label_pc_45644d
  ]

dec_label_pc_456448:                              ; preds = %dec_label_pc_45643f
  %73 = icmp eq i32 %10, 4, !insn.addr !5474
  %74 = icmp eq i1 %73, false, !insn.addr !5475
  br i1 %74, label %dec_label_pc_456473, label %dec_label_pc_45644d, !insn.addr !5475

dec_label_pc_45644d:                              ; preds = %dec_label_pc_45643f, %dec_label_pc_45643f, %dec_label_pc_456448
  %75 = add i32 %ebx.09.reload, 4, !insn.addr !5476
  %76 = inttoptr i32 %75 to i32*, !insn.addr !5476
  %77 = load i32, i32* %76, align 4, !insn.addr !5476
  store i32 %77, i32* %.reload, align 4, !insn.addr !5477
  store i32 0, i32* %76, align 4, !insn.addr !5478
  %78 = icmp eq i32 %10, 8, !insn.addr !5479
  %79 = icmp eq i1 %78, false, !insn.addr !5480
  br i1 %79, label %dec_label_pc_456499, label %dec_label_pc_45645b, !insn.addr !5480

dec_label_pc_45645b:                              ; preds = %dec_label_pc_45644d
  %80 = call i32* @__fpecode(), !insn.addr !5481
  %81 = load i32, i32* %80, align 4, !insn.addr !5482
  store i32 %81, i32* %5, align 4, !insn.addr !5483
  %82 = call i32* @__fpecode(), !insn.addr !5484
  store i32 140, i32* %82, align 4, !insn.addr !5485
  br label %dec_label_pc_456473, !insn.addr !5486

dec_label_pc_456473:                              ; preds = %dec_label_pc_45645b, %dec_label_pc_456448
  %83 = icmp eq i32 %10, 8, !insn.addr !5487
  %84 = icmp eq i1 %83, false, !insn.addr !5488
  br i1 %84, label %dec_label_pc_456499, label %dec_label_pc_456477, !insn.addr !5488

dec_label_pc_456477:                              ; preds = %dec_label_pc_456473
  %85 = inttoptr i32 %ebx.09.reload to i32*, !insn.addr !5489
  %86 = load i32, i32* %85, align 4, !insn.addr !5489
  %87 = add i32 %86, 36, !insn.addr !5489
  %88 = add i32 %0, -56, !insn.addr !5490
  %89 = inttoptr i32 %88 to i32*, !insn.addr !5490
  store i32 %87, i32* %89, align 4, !insn.addr !5490
  %90 = add nsw i32 %86, 132
  store i32 %87, i32* %eax.17.reg2mem
  br label %dec_label_pc_456490

dec_label_pc_456490:                              ; preds = %dec_label_pc_456477, %dec_label_pc_456490
  %eax.17.reload = load i32, i32* %eax.17.reg2mem
  %91 = add i32 %eax.17.reload, 8, !insn.addr !5491
  %92 = inttoptr i32 %91 to i32*, !insn.addr !5491
  store i32 0, i32* %92, align 4, !insn.addr !5491
  %93 = add i32 %eax.17.reload, 12, !insn.addr !5492
  store i32 %93, i32* %89, align 4, !insn.addr !5490
  %94 = icmp eq i32 %eax.17.reload, %90, !insn.addr !5493
  store i32 %93, i32* %eax.17.reg2mem, !insn.addr !5494
  br i1 %94, label %dec_label_pc_4564a3, label %dec_label_pc_456490, !insn.addr !5494

dec_label_pc_456499:                              ; preds = %dec_label_pc_456473, %dec_label_pc_45644d
  %95 = load i32, i32* @__security_cookie, align 4, !insn.addr !5495
  %96 = load i32, i32* %.reload12, align 4, !insn.addr !5496
  %97 = inttoptr i32 %96 to i32*, !insn.addr !5497
  store i32 %95, i32* %97, align 4, !insn.addr !5497
  br label %dec_label_pc_4564a3, !insn.addr !5497

dec_label_pc_4564a3:                              ; preds = %dec_label_pc_456490, %dec_label_pc_456499, %dec_label_pc_456424
  store i32 -2, i32* %49, align 4, !insn.addr !5498
  %98 = call i32 @function_4564e0(), !insn.addr !5499
  %99 = load i8, i8* %47, align 1, !insn.addr !5500
  %100 = icmp eq i8 %99, 0, !insn.addr !5500
  %101 = icmp eq i1 %100, false, !insn.addr !5501
  br i1 %101, label %102, label %dec_label_pc_4564b5, !insn.addr !5501

; <label>:102:                                    ; preds = %dec_label_pc_4564a3
  %103 = call i32 @function_456522(), !insn.addr !5501
  br label %dec_label_pc_4564b5, !insn.addr !5501

dec_label_pc_4564b5:                              ; preds = %102, %dec_label_pc_4564a3
  %104 = icmp eq i32 %10, 8, !insn.addr !5502
  %105 = icmp eq i1 %104, false, !insn.addr !5503
  br i1 %105, label %106, label %dec_label_pc_4564b9, !insn.addr !5503

; <label>:106:                                    ; preds = %dec_label_pc_4564b5
  %107 = call i32 @function_4564f2(), !insn.addr !5503
  br label %dec_label_pc_4564b9, !insn.addr !5503

dec_label_pc_4564b9:                              ; preds = %106, %dec_label_pc_4564b5
  %108 = call i32 @___acrt_getptd(), !insn.addr !5504
  %109 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !5505
  %110 = call i32 @function_4564fe(i32 ptrtoint (i32* @80 to i32)), !insn.addr !5506
  ret i32 %110, !insn.addr !5506

dec_label_pc_456534:                              ; preds = %dec_label_pc_456437
  %111 = icmp eq i8 %ecx.2.reload, 0, !insn.addr !5507
  br i1 %111, label %dec_label_pc_456540, label %dec_label_pc_456538, !insn.addr !5508

dec_label_pc_456538:                              ; preds = %dec_label_pc_456534
  %112 = call i32 @function_4017d5(i32 3), !insn.addr !5509
  br label %dec_label_pc_456540, !insn.addr !5510

dec_label_pc_456540:                              ; preds = %dec_label_pc_456538, %dec_label_pc_456534
  %esp.2 = ptrtoint i32* %stack_var_-8 to i32
  %113 = add i32 %esp.2, -4, !insn.addr !5511
  %114 = inttoptr i32 %113 to i32*, !insn.addr !5511
  store i32 3, i32* %114, align 4, !insn.addr !5511
  call void @_exit(i32 ptrtoint (i32* @80 to i32)), !insn.addr !5512
  %115 = call i32 @__asm_int3(), !insn.addr !5513
  %116 = call i32 @__asm_int3(), !insn.addr !5514
  %117 = call i32 @__asm_int3(), !insn.addr !5515
  %118 = call i32 @__asm_int3(), !insn.addr !5516
  %119 = call i32 @__asm_int3(), !insn.addr !5517
  %120 = call i32 @__asm_int3(), !insn.addr !5518
  %121 = call i32 @__asm_int3(), !insn.addr !5519
  %122 = call i32 @__asm_int3(), !insn.addr !5520
  %123 = call i32 @__asm_int3(), !insn.addr !5521
  %124 = call i32 @__asm_int3(), !insn.addr !5522
  %125 = call i32 @__asm_int3(), !insn.addr !5523
  %126 = call i32 @__asm_int3(), !insn.addr !5524
  %127 = call i32 @__asm_int3(), !insn.addr !5525
  %128 = call i32 @__asm_int3(), !insn.addr !5526
  %129 = call i32 @__asm_int3(), !insn.addr !5527
  %130 = call i32 @__asm_int3(), !insn.addr !5528
  %131 = call i32 @__asm_int3(), !insn.addr !5529
  %132 = call i32 @__asm_int3(), !insn.addr !5530
  %133 = call i32 @__asm_int3(), !insn.addr !5531
  %134 = call i32 @__asm_int3(), !insn.addr !5532
  %135 = call i32 @__asm_int3(), !insn.addr !5533
  %136 = call i32 @__asm_int3(), !insn.addr !5534
  %137 = call i32 @__asm_int3(), !insn.addr !5535
  %138 = call i32 @__asm_int3(), !insn.addr !5536
  %139 = call i32 @__asm_int3(), !insn.addr !5537
  %140 = call i32 @__asm_int3(), !insn.addr !5538
  %141 = call i32 @__asm_int3(), !insn.addr !5539
  %142 = call i32 @__asm_int3(), !insn.addr !5540
  %143 = call i32 @__asm_int3(), !insn.addr !5541
  %144 = call i32 @__asm_int3(), !insn.addr !5542
  %145 = call i32 @__asm_int3(), !insn.addr !5543
  %146 = call i32 @__asm_int3(), !insn.addr !5544
  %147 = call i32 @__asm_int3(), !insn.addr !5545
  %148 = call i32 @__asm_int3(), !insn.addr !5546
  %149 = call i32 @__asm_int3(), !insn.addr !5547
  %150 = call i32 @__asm_int3(), !insn.addr !5548
  %151 = call i32 @__asm_int3(), !insn.addr !5549
  %152 = call i32 @__asm_int3(), !insn.addr !5550
  %153 = call i32 @__asm_int3(), !insn.addr !5551
  %154 = call i32 @__asm_int3(), !insn.addr !5552
  %155 = call i32 @__asm_int3(), !insn.addr !5553
  %156 = call i32 @__asm_int3(), !insn.addr !5554
  %157 = call i32 @__asm_int3(), !insn.addr !5555
  %158 = call i32 @__asm_int3(), !insn.addr !5556
  %159 = call i32 @__asm_int3(), !insn.addr !5557
  %160 = call i32 @__asm_int3(), !insn.addr !5558
  %161 = call i32 @__asm_int3(), !insn.addr !5559
  %162 = call i32 @__asm_int3(), !insn.addr !5560
  %163 = call i32 @__asm_int3(), !insn.addr !5561
  %164 = call i32 @__asm_int3(), !insn.addr !5562
  %165 = call i32 @__asm_int3(), !insn.addr !5563
  %166 = call i32 @__asm_int3(), !insn.addr !5564
  %167 = call i32 @__asm_int3(), !insn.addr !5565
  %168 = call i32 @__asm_int3(), !insn.addr !5566
  %169 = call i32 @__asm_int3(), !insn.addr !5567
  %170 = call i32 @__asm_int3(), !insn.addr !5568
  %171 = call i32 @__asm_int3(), !insn.addr !5569
  %172 = call i32 @__asm_int3(), !insn.addr !5570
  %173 = call i32 @__asm_int3(), !insn.addr !5571
  %174 = call i32 @__asm_int3(), !insn.addr !5572
  %175 = call i32 @__asm_int3(), !insn.addr !5573
  %176 = call i32 @__asm_int3(), !insn.addr !5574
  %177 = call i32 @__asm_int3(), !insn.addr !5575
  %178 = call i32 @__asm_int3(), !insn.addr !5576
  %179 = call i32 @__asm_int3(), !insn.addr !5577
  %180 = call i32 @__asm_int3(), !insn.addr !5578
  %181 = call i32 @__asm_int3(), !insn.addr !5579
  %182 = call i32 @__asm_int3(), !insn.addr !5580
  %183 = call i32 @__asm_int3(), !insn.addr !5581
  %184 = call i32 @__asm_int3(), !insn.addr !5582
  %185 = call i32 @__asm_int3(), !insn.addr !5583
  %186 = call i32 @__asm_int3(), !insn.addr !5584
  %187 = call i32 @__asm_int3(), !insn.addr !5585
  %188 = call i32 @__asm_int3(), !insn.addr !5586
  %189 = call i32 @__asm_int3(), !insn.addr !5587
  %190 = call i32 @__asm_int3(), !insn.addr !5588
  %191 = call i32 @__asm_int3(), !insn.addr !5589
  %192 = call i32 @__asm_int3(), !insn.addr !5590
  %193 = call i32 @__asm_int3(), !insn.addr !5591
  %194 = call i32 @__asm_int3(), !insn.addr !5592
  %195 = call i32 @__asm_int3(), !insn.addr !5593
  %196 = call i32 @__asm_int3(), !insn.addr !5594
  %197 = call i32 @__asm_int3(), !insn.addr !5595
  %198 = call i32 @__asm_int3(), !insn.addr !5596
  %199 = call i32 @__asm_int3(), !insn.addr !5597
  %200 = call i32 @__asm_int3(), !insn.addr !5598
  %201 = call i32 @__asm_int3(), !insn.addr !5599
  %202 = call i32 @__asm_int3(), !insn.addr !5600
  %203 = call i32 @__asm_int3(), !insn.addr !5601
  %204 = call i32 @__asm_int3(), !insn.addr !5602
  %205 = call i32 @__asm_int3(), !insn.addr !5603
  %206 = call i32 @__asm_int3(), !insn.addr !5604
  %207 = call i32 @__asm_int3(), !insn.addr !5605
  %208 = call i32 @__asm_int3(), !insn.addr !5606
  %209 = call i32 @__asm_int3(), !insn.addr !5607
  %210 = call i32 @__asm_int3(), !insn.addr !5608
  %211 = call i32 @__asm_int3(), !insn.addr !5609
  %212 = call i32 @__asm_int3(), !insn.addr !5610
  %213 = call i32 @__asm_int3(), !insn.addr !5611
  %214 = call i32 @__asm_int3(), !insn.addr !5612
  %215 = call i32 @__asm_int3(), !insn.addr !5613
  %216 = call i32 @__asm_int3(), !insn.addr !5614
  %217 = call i32 @__asm_int3(), !insn.addr !5615
  %218 = call i32 @__asm_int3(), !insn.addr !5616
  %219 = call i32 @__asm_int3(), !insn.addr !5617
  %220 = call i32 @__asm_int3(), !insn.addr !5618
  %221 = call i32 @__asm_int3(), !insn.addr !5619
  %222 = call i32 @__asm_int3(), !insn.addr !5620
  %223 = call i32 @__asm_int3(), !insn.addr !5621
  %224 = call i32 @__asm_int3(), !insn.addr !5622
  %225 = call i32 @__asm_int3(), !insn.addr !5623
  %226 = call i32 @__asm_int3(), !insn.addr !5624
  %227 = call i32 @__asm_int3(), !insn.addr !5625
  %228 = call i32 @__asm_int3(), !insn.addr !5626
  %229 = call i32 @__asm_int3(), !insn.addr !5627
  %230 = call i32 @__asm_int3(), !insn.addr !5628
  %231 = call i32 @__asm_int3(), !insn.addr !5629
  %232 = call i32 @__asm_int3(), !insn.addr !5630
  %233 = call i32 @__asm_int3(), !insn.addr !5631
  %234 = call i32 @__asm_int3(), !insn.addr !5632
  %235 = call i32 @__asm_int3(), !insn.addr !5633
  %236 = call i32 @__asm_int3(), !insn.addr !5634
  %237 = call i32 @__asm_int3(), !insn.addr !5635
  %238 = call i32 @__asm_int3(), !insn.addr !5636
  %239 = call i32 @__asm_int3(), !insn.addr !5637
  %240 = call i32 @__asm_int3(), !insn.addr !5638
  %241 = call i32 @__asm_int3(), !insn.addr !5639
  ret i32 %241, !insn.addr !5639
}

define i32 @function_4564e0() local_unnamed_addr {
dec_label_pc_4564e0:
  %eax.0.reg2mem = alloca i32, !insn.addr !5640
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = add i32 %0, -25, !insn.addr !5640
  %2 = inttoptr i32 %1 to i8*, !insn.addr !5640
  %3 = load i8, i8* %2, align 1, !insn.addr !5640
  %4 = icmp eq i8 %3, 0, !insn.addr !5640
  br i1 %4, label %dec_label_pc_4564f1, label %dec_label_pc_4564e6, !insn.addr !5641

dec_label_pc_4564e6:                              ; preds = %dec_label_pc_4564e0
  %5 = call i32 @function_4017d5(i32 3), !insn.addr !5642
  store i32 %5, i32* %eax.0.reg2mem, !insn.addr !5643
  br label %dec_label_pc_4564f1, !insn.addr !5643

dec_label_pc_4564f1:                              ; preds = %dec_label_pc_4564e6, %dec_label_pc_4564e0
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !5644
}

define i32 @function_4564f2() local_unnamed_addr {
dec_label_pc_4564f2:
  %0 = call i32 @"@_guard_check_icall_nop@4"(), !insn.addr !5645
  ret i32 %0, !insn.addr !5646
}

define i32 @function_4564fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_4564fe:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = call i32 @__decompiler_undefined_function_0()
  %4 = icmp eq i32 %1, %0, !insn.addr !5647
  %5 = icmp eq i32 %1, 11, !insn.addr !5648
  %or.cond = or i1 %4, %5
  %or.cond.not = icmp ne i1 %or.cond, true
  %6 = icmp eq i32 %1, 4, !insn.addr !5649
  %7 = icmp eq i1 %6, false, !insn.addr !5650
  %or.cond3 = icmp eq i1 %7, %or.cond.not
  br i1 %or.cond3, label %8, label %dec_label_pc_45650d, !insn.addr !5651

; <label>:8:                                      ; preds = %dec_label_pc_4564fe
  %9 = call i32 @function_456522(), !insn.addr !5650
  br label %dec_label_pc_45650d, !insn.addr !5650

dec_label_pc_45650d:                              ; preds = %dec_label_pc_4564fe, %8
  %10 = add i32 %2, -48, !insn.addr !5652
  %11 = inttoptr i32 %10 to i32*, !insn.addr !5652
  %12 = load i32, i32* %11, align 4, !insn.addr !5652
  %13 = add i32 %3, 4, !insn.addr !5653
  %14 = inttoptr i32 %13 to i32*, !insn.addr !5653
  store i32 %12, i32* %14, align 4, !insn.addr !5653
  %15 = icmp eq i1 %4, false, !insn.addr !5654
  br i1 %15, label %16, label %dec_label_pc_456517, !insn.addr !5654

; <label>:16:                                     ; preds = %dec_label_pc_45650d
  %17 = call i32 @function_456522(), !insn.addr !5654
  br label %dec_label_pc_456517, !insn.addr !5654

dec_label_pc_456517:                              ; preds = %16, %dec_label_pc_45650d
  %18 = call i32 @___acrt_getptd(), !insn.addr !5655
  %19 = add i32 %2, -52, !insn.addr !5656
  %20 = inttoptr i32 %19 to i32*, !insn.addr !5656
  %21 = load i32, i32* %20, align 4, !insn.addr !5656
  %22 = add i32 %18, 8, !insn.addr !5657
  %23 = inttoptr i32 %22 to i32*, !insn.addr !5657
  store i32 %21, i32* %23, align 4, !insn.addr !5657
  ret i32 %18, !insn.addr !5657
}

define i32 @function_456522() local_unnamed_addr {
dec_label_pc_456522:
  ret i32 0, !insn.addr !5658
}

define i32 @_clearfp() local_unnamed_addr {
dec_label_pc_45718d:
  %eax.4.reg2mem = alloca i32, !insn.addr !5659
  %ecx.4.reg2mem = alloca i32, !insn.addr !5659
  %edx.4.reg2mem = alloca i32, !insn.addr !5659
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i8 @__decompiler_undefined_function_7()
  %2 = call i32 @__asm_fnclex(), !insn.addr !5660
  %3 = load i32, i32* @__isa_available, align 4, !insn.addr !5661
  %4 = icmp slt i32 %3, 1, !insn.addr !5662
  %5 = and i32 %0, 63
  %6 = icmp eq i32 %5, 0
  br i1 %4, label %dec_label_pc_45722c, label %dec_label_pc_4571aa, !insn.addr !5662

dec_label_pc_4571aa:                              ; preds = %dec_label_pc_45718d
  store i32 0, i32* %edx.4.reg2mem, !insn.addr !5663
  br i1 %6, label %dec_label_pc_4571e5, label %dec_label_pc_4571bc, !insn.addr !5663

dec_label_pc_4571bc:                              ; preds = %dec_label_pc_4571aa
  %7 = mul i32 %0, 16, !insn.addr !5664
  %8 = and i32 %7, 16, !insn.addr !5665
  %9 = mul i32 %0, 2
  %10 = and i32 %9, 8
  %11 = or i32 %10, %8
  %12 = udiv i32 %0, 2
  %13 = and i32 %12, 4
  %14 = or i32 %11, %13
  %15 = udiv i32 %0, 8
  %16 = and i32 %15, 2
  %17 = or i32 %14, %16
  %18 = udiv i32 %0, 32
  %19 = and i32 %18, 1
  %20 = or i32 %17, %19
  %21 = mul i32 %0, 262144
  %22 = and i32 %21, 524288
  %23 = or i32 %20, %22
  store i32 %23, i32* %edx.4.reg2mem
  br label %dec_label_pc_4571e5

dec_label_pc_4571e5:                              ; preds = %dec_label_pc_4571bc, %dec_label_pc_4571aa
  %edx.4.reload = load i32, i32* %edx.4.reg2mem
  %24 = sext i8 %1 to i32, !insn.addr !5666
  call void @__asm_stmxcsr(i32 %24), !insn.addr !5666
  %25 = and i8 %1, -64
  %26 = sext i8 %25 to i32, !insn.addr !5667
  call void @__asm_ldmxcsr(i32 %26), !insn.addr !5668
  %27 = and i8 %1, 63, !insn.addr !5669
  %28 = icmp eq i8 %27, 0, !insn.addr !5669
  store i32 0, i32* %ecx.4.reg2mem, !insn.addr !5670
  br i1 %28, label %dec_label_pc_457225, label %dec_label_pc_4571fd, !insn.addr !5670

dec_label_pc_4571fd:                              ; preds = %dec_label_pc_4571e5
  %29 = mul i32 %24, 16, !insn.addr !5671
  %30 = and i32 %29, 16, !insn.addr !5672
  %31 = mul i32 %24, 2
  %32 = and i32 %31, 8
  %33 = or i32 %32, %30
  %34 = udiv i32 %24, 2
  %35 = and i32 %34, 4
  %36 = or i32 %33, %35
  %37 = udiv i32 %24, 8
  %38 = and i32 %37, 2
  %39 = or i32 %36, %38
  %40 = udiv i32 %24, 32
  %41 = and i32 %40, 1
  %42 = or i32 %39, %41
  %43 = mul i32 %24, 262144
  %44 = and i32 %43, 524288
  %45 = or i32 %42, %44
  store i32 %45, i32* %ecx.4.reg2mem
  br label %dec_label_pc_457225

dec_label_pc_457225:                              ; preds = %dec_label_pc_4571fd, %dec_label_pc_4571e5
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %46 = or i32 %ecx.4.reload, %edx.4.reload, !insn.addr !5673
  store i32 %46, i32* %eax.4.reg2mem, !insn.addr !5674
  br label %dec_label_pc_457268, !insn.addr !5674

dec_label_pc_45722c:                              ; preds = %dec_label_pc_45718d
  store i32 0, i32* %eax.4.reg2mem, !insn.addr !5675
  br i1 %6, label %dec_label_pc_457268, label %dec_label_pc_457237, !insn.addr !5675

dec_label_pc_457237:                              ; preds = %dec_label_pc_45722c
  %47 = mul i32 %0, 16, !insn.addr !5676
  %48 = and i32 %47, 16, !insn.addr !5677
  %49 = mul i32 %0, 2
  %50 = and i32 %49, 8
  %51 = or i32 %50, %48
  %52 = udiv i32 %0, 2
  %53 = and i32 %52, 4
  %54 = or i32 %51, %53
  %55 = udiv i32 %0, 8
  %56 = and i32 %55, 2
  %57 = or i32 %54, %56
  %58 = udiv i32 %0, 32
  %59 = and i32 %58, 1
  %60 = or i32 %57, %59
  %61 = mul i32 %0, 262144
  %62 = and i32 %61, 524288
  %63 = or i32 %60, %62
  ret i32 %63

dec_label_pc_457268:                              ; preds = %dec_label_pc_45722c, %dec_label_pc_457225
  %eax.4.reload = load i32, i32* %eax.4.reg2mem
  ret i32 %eax.4.reload, !insn.addr !5678
}

declare i32 @__acrt_DownlevelLocaleNameToLCID(i16*) local_unnamed_addr

define %"`anonymous-namespace'::write_result.733" @write_double_translated_ansi_nolock(i32 %fh, i8* %buffer, i32 %buffer_size) local_unnamed_addr {
dec_label_pc_457dbb:
  %.reg2mem72 = alloca i32, !insn.addr !5679
  %storemerge1.reg2mem = alloca i32, !insn.addr !5679
  %esi.2.reg2mem = alloca i32, !insn.addr !5679
  %.reg2mem70 = alloca i32, !insn.addr !5679
  %.reg2mem68 = alloca i32, !insn.addr !5679
  %ebx.0.reg2mem = alloca i32, !insn.addr !5679
  %esi.1.reg2mem = alloca i32, !insn.addr !5679
  %esp.4.reg2mem = alloca i32, !insn.addr !5679
  %stack_var_-88.1.reg2mem = alloca i32, !insn.addr !5679
  %edi.4.reg2mem = alloca i32, !insn.addr !5679
  %esp.3.reg2mem = alloca i32, !insn.addr !5679
  %cr_-44.1.reg2mem = alloca i32, !insn.addr !5679
  %storemerge2.reg2mem = alloca i32, !insn.addr !5679
  %storemerge.reg2mem = alloca i32, !insn.addr !5679
  %esp.2.reg2mem = alloca i32, !insn.addr !5679
  %stack_var_-52.0.reg2mem = alloca i32, !insn.addr !5679
  %cr_-44.0.in.reg2mem = alloca i32, !insn.addr !5679
  %edi.1.reg2mem = alloca i32, !insn.addr !5679
  %ecx.3.reg2mem = alloca i32, !insn.addr !5679
  %edx.1.reg2mem = alloca i32, !insn.addr !5679
  %ecx.25.reg2mem = alloca i32, !insn.addr !5679
  %.reg2mem = alloca i32, !insn.addr !5679
  %ecx.1.reg2mem = alloca i32, !insn.addr !5679
  %esi.0.reg2mem = alloca i32, !insn.addr !5679
  %esp.0.reg2mem = alloca i32, !insn.addr !5679
  %stack_var_-88.0.reg2mem = alloca i32, !insn.addr !5679
  %stack_var_-40.0.reg2mem = alloca i32, !insn.addr !5679
  %0 = call i1 @__decompiler_undefined_function_6()
  %1 = ptrtoint i8* %buffer to i32
  %2 = call i8 @__decompiler_undefined_function_7()
  %cr_-48 = alloca i16, align 2
  %written_-100 = alloca i32, align 4
  %mb_buffer_-32 = alloca [5 x i8], align 1
  %stack_var_-24 = alloca i8, align 1
  %str_-120 = alloca i8*, align 4
  %state_-136 = alloca %_Mbstatet.470, align 8
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %wc_-76 = alloca [2 x i16], align 2
  %result_-92 = alloca %"`anonymous-namespace'::write_result.469", align 8
  %result_-96 = alloca %"`anonymous-namespace'::write_result", align 8
  %3 = call i32 @__decompiler_undefined_function_0()
  %4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-160 = alloca i32, align 4
  %5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %6 = and i32 %1, 63, !insn.addr !5680
  %narrow = mul nuw nsw i32 %6, 56
  %7 = sdiv i32 %1, 64, !insn.addr !5681
  %8 = mul i32 %7, 4, !insn.addr !5682
  %9 = add i32 %8, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5682
  %10 = inttoptr i32 %9 to i32*, !insn.addr !5682
  %11 = load i32, i32* %10, align 4, !insn.addr !5682
  %12 = add nuw nsw i32 %narrow, 24, !insn.addr !5683
  %13 = add i32 %12, %11, !insn.addr !5683
  %14 = inttoptr i32 %13 to i32*, !insn.addr !5683
  %15 = load i32, i32* %14, align 4, !insn.addr !5683
  %16 = add i32 %5, %buffer_size, !insn.addr !5684
  %17 = call i32 @GetConsoleCP(), !insn.addr !5685
  store i32 0, i32* %stack_var_-160, align 4, !insn.addr !5686
  %18 = call i32 @function_403d78(i32 0), !insn.addr !5687
  %19 = ptrtoint %"`anonymous-namespace'::write_result"* %result_-96 to i32, !insn.addr !5688
  store %"`anonymous-namespace'::write_result" { i32 0, i32 undef, i32 undef }, %"`anonymous-namespace'::write_result"* %result_-96, align 8, !insn.addr !5689
  %20 = select i1 %0, i32 -4, i32 4, !insn.addr !5689
  %21 = add i32 %20, %19, !insn.addr !5689
  %22 = add i32 %3, 8, !insn.addr !5690
  %23 = inttoptr i32 %22 to i32*, !insn.addr !5690
  %24 = load i32, i32* %23, align 4, !insn.addr !5690
  %25 = inttoptr i32 %21 to i32*, !insn.addr !5691
  store i32 0, i32* %25, align 4, !insn.addr !5691
  %26 = add i32 %21, %20, !insn.addr !5691
  %27 = inttoptr i32 %26 to i32*, !insn.addr !5692
  store i32 0, i32* %27, align 8, !insn.addr !5692
  %28 = icmp ugt i32 %16, %buffer_size, !insn.addr !5693
  %29 = icmp eq i1 %28, false, !insn.addr !5694
  br i1 %29, label %dec_label_pc_45813f, label %dec_label_pc_457e36, !insn.addr !5694

dec_label_pc_457e36:                              ; preds = %dec_label_pc_457dbb
  %30 = ptrtoint i32* %stack_var_-4 to i32, !insn.addr !5695
  %31 = ptrtoint i32* %stack_var_-160 to i32, !insn.addr !5686
  %32 = getelementptr inbounds %"`anonymous-namespace'::write_result.469", %"`anonymous-namespace'::write_result.469"* %result_-92, i32 0, i32 0, !insn.addr !5696
  %33 = load i32, i32* %32, align 8, !insn.addr !5696
  %34 = icmp eq i32 %24, 65001, !insn.addr !5697
  %35 = icmp eq i1 %34, false, !insn.addr !5698
  %36 = add nuw nsw i32 %narrow, 46
  %37 = add i32 %30, -12
  %38 = ptrtoint i32* %stack_var_-16 to i32
  %39 = bitcast i32* %stack_var_-16 to i8*
  %40 = ptrtoint %_Mbstatet.470* %state_-136 to i32
  %41 = ptrtoint i8** %str_-120 to i32
  %42 = ptrtoint i32* %stack_var_-144 to i32
  %43 = ptrtoint i32* %stack_var_-56 to i32
  %44 = ptrtoint [2 x i16]* %wc_-76 to i32
  %45 = add nuw nsw i32 %narrow, 45
  %46 = ptrtoint i8* %stack_var_-24 to i32
  %47 = ptrtoint [5 x i8]* %mb_buffer_-32 to i32
  %48 = ptrtoint i32* %written_-100 to i32
  %49 = ptrtoint i16* %cr_-48 to i32
  %50 = bitcast %"`anonymous-namespace'::write_result.469"* %result_-92 to i32**
  store i32 %buffer_size, i32* %stack_var_-40.0.reg2mem, !insn.addr !5696
  store i32 %31, i32* %esp.0.reg2mem, !insn.addr !5696
  store i32 %33, i32* %esi.0.reg2mem, !insn.addr !5696
  br label %dec_label_pc_457e39, !insn.addr !5696

dec_label_pc_457e39:                              ; preds = %dec_label_pc_4580a6, %dec_label_pc_457e36
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %stack_var_-88.0.reload = load i32, i32* %stack_var_-88.0.reg2mem
  %stack_var_-40.0.reload = load i32, i32* %stack_var_-40.0.reg2mem
  %51 = inttoptr i32 %stack_var_-40.0.reload to i8*
  %52 = load i8, i8* %51, align 1, !insn.addr !5699
  store [2 x i16] [i16 0, i16 undef], [2 x i16]* %wc_-76, align 2, !insn.addr !5700
  %53 = load i32, i32* %10, align 4, !insn.addr !5701
  br i1 %35, label %dec_label_pc_457f8e, label %dec_label_pc_457e61, !insn.addr !5698

dec_label_pc_457e61:                              ; preds = %dec_label_pc_457e39
  %54 = add i32 %53, %36
  store i32 0, i32* %ecx.1.reg2mem, !insn.addr !5702
  br label %dec_label_pc_457e6e, !insn.addr !5702

dec_label_pc_457e6e:                              ; preds = %dec_label_pc_457e73, %dec_label_pc_457e61
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %55 = add i32 %ecx.1.reload, %54, !insn.addr !5703
  %56 = inttoptr i32 %55 to i8*, !insn.addr !5703
  %57 = load i8, i8* %56, align 1, !insn.addr !5703
  %58 = icmp eq i8 %57, 0, !insn.addr !5703
  br i1 %58, label %dec_label_pc_457e79, label %dec_label_pc_457e73, !insn.addr !5704

dec_label_pc_457e73:                              ; preds = %dec_label_pc_457e6e
  %59 = add nuw nsw i32 %ecx.1.reload, 1, !insn.addr !5705
  %60 = icmp ult i32 %59, 5, !insn.addr !5706
  store i32 %59, i32* %ecx.1.reg2mem, !insn.addr !5706
  br i1 %60, label %dec_label_pc_457e6e, label %dec_label_pc_457e79.thread, !insn.addr !5706

dec_label_pc_457e79.thread:                       ; preds = %dec_label_pc_457e73
  %61 = sub i32 %16, %stack_var_-40.0.reload, !insn.addr !5707
  store i32 %61, i32* %.reg2mem
  store i32 5, i32* %ecx.25.reg2mem
  br label %dec_label_pc_457e8c

dec_label_pc_457e79:                              ; preds = %dec_label_pc_457e6e
  %62 = sub i32 %16, %stack_var_-40.0.reload, !insn.addr !5707
  %63 = icmp eq i32 %ecx.1.reload, 0
  store i32 %62, i32* %.reg2mem, !insn.addr !5708
  store i32 %ecx.1.reload, i32* %ecx.25.reg2mem, !insn.addr !5708
  br i1 %63, label %dec_label_pc_457f2e, label %dec_label_pc_457e8c, !insn.addr !5708

dec_label_pc_457e8c:                              ; preds = %dec_label_pc_457e79.thread, %dec_label_pc_457e79
  %ecx.25.reload = load i32, i32* %ecx.25.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %64 = inttoptr i32 %54 to i8*, !insn.addr !5709
  %65 = load i8, i8* %64, align 1, !insn.addr !5709
  %66 = zext i8 %65 to i32, !insn.addr !5709
  %67 = add i32 %66, ptrtoint ([256 x i8]* @_lookuptrailbytes to i32), !insn.addr !5710
  %68 = inttoptr i32 %67 to i8*, !insn.addr !5710
  %69 = load i8, i8* %68, align 1, !insn.addr !5710
  %70 = sext i8 %69 to i32, !insn.addr !5710
  %71 = add nsw i32 %70, 1, !insn.addr !5711
  store i32 %71, i32* %stack_var_-56, align 4, !insn.addr !5712
  %72 = sub i32 %71, %ecx.25.reload, !insn.addr !5713
  %73 = icmp sgt i32 %72, %.reload, !insn.addr !5714
  store i32 0, i32* %edx.1.reg2mem, !insn.addr !5714
  br i1 %73, label %dec_label_pc_4580b7, label %dec_label_pc_457eb5, !insn.addr !5714

dec_label_pc_457eb5:                              ; preds = %dec_label_pc_457e8c, %dec_label_pc_457eb5
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %74 = add i32 %edx.1.reload, %54, !insn.addr !5715
  %75 = inttoptr i32 %74 to i8*, !insn.addr !5715
  %76 = load i8, i8* %75, align 1, !insn.addr !5715
  %77 = add i32 %37, %edx.1.reload, !insn.addr !5716
  %78 = inttoptr i32 %77 to i8*, !insn.addr !5716
  store i8 %76, i8* %78, align 1, !insn.addr !5716
  %79 = add nuw nsw i32 %edx.1.reload, 1, !insn.addr !5717
  %80 = icmp ult i32 %79, %ecx.25.reload, !insn.addr !5718
  store i32 %79, i32* %edx.1.reg2mem, !insn.addr !5718
  br i1 %80, label %dec_label_pc_457eb5, label %dec_label_pc_457ec4, !insn.addr !5718

dec_label_pc_457ec4:                              ; preds = %dec_label_pc_457eb5
  %81 = icmp slt i32 %72, 1
  store i32 %ecx.25.reload, i32* %ecx.3.reg2mem, !insn.addr !5719
  br i1 %81, label %dec_label_pc_457ee0, label %dec_label_pc_457ecb, !insn.addr !5719

dec_label_pc_457ecb:                              ; preds = %dec_label_pc_457ec4
  %82 = add i32 %esp.0.reload, -4, !insn.addr !5720
  %83 = inttoptr i32 %82 to i32*, !insn.addr !5720
  store i32 %72, i32* %83, align 4, !insn.addr !5720
  %84 = add i32 %ecx.25.reload, %38, !insn.addr !5721
  %85 = add i32 %esp.0.reload, -8, !insn.addr !5722
  %86 = inttoptr i32 %85 to i32*, !insn.addr !5722
  store i32 %stack_var_-40.0.reload, i32* %86, align 4, !insn.addr !5722
  %87 = add i32 %esp.0.reload, -12, !insn.addr !5723
  %88 = inttoptr i32 %87 to i32*, !insn.addr !5723
  store i32 %84, i32* %88, align 4, !insn.addr !5723
  call void @memcpy(i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !5724
  %sext = mul i32 %ecx.25.reload, 65536
  %89 = sdiv i32 %sext, 65536, !insn.addr !5725
  store i32 %89, i32* %ecx.3.reg2mem, !insn.addr !5726
  br label %dec_label_pc_457ee0, !insn.addr !5726

dec_label_pc_457ee0:                              ; preds = %dec_label_pc_457ecb, %dec_label_pc_457ec4
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %90 = icmp slt i32 %ecx.3.reload, 1
  br i1 %90, label %dec_label_pc_457f05, label %dec_label_pc_457ee4, !insn.addr !5727

dec_label_pc_457ee4:                              ; preds = %dec_label_pc_457ee0
  %sext3 = mul i32 %ecx.25.reload, 65536
  %91 = sdiv i32 %sext3, 65536, !insn.addr !5728
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !5729
  br label %dec_label_pc_457eec, !insn.addr !5729

dec_label_pc_457eec:                              ; preds = %dec_label_pc_457eec, %dec_label_pc_457ee4
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %92 = add nuw nsw i32 %edi.1.reload, 1, !insn.addr !5730
  %93 = load i32, i32* %10, align 4, !insn.addr !5731
  %94 = add nuw nsw i32 %edi.1.reload, %36, !insn.addr !5732
  %95 = add i32 %94, %93, !insn.addr !5732
  %96 = inttoptr i32 %95 to i8*, !insn.addr !5732
  store i8 0, i8* %96, align 1, !insn.addr !5732
  %97 = icmp ult i32 %92, %91, !insn.addr !5733
  store i32 %92, i32* %edi.1.reg2mem, !insn.addr !5733
  br i1 %97, label %dec_label_pc_457eec, label %dec_label_pc_457f05, !insn.addr !5733

dec_label_pc_457f05:                              ; preds = %dec_label_pc_457eec, %dec_label_pc_457ee0
  store %_Mbstatet.470 { i32 0, i16 undef, i16 undef }, %_Mbstatet.470* %state_-136, align 8, !insn.addr !5734
  store i8* %39, i8** %str_-120, align 4, !insn.addr !5735
  %98 = load i32, i32* %stack_var_-56, align 4, !insn.addr !5736
  %99 = icmp eq i32 %98, 4, !insn.addr !5736
  %100 = add i32 %esp.0.reload, -4, !insn.addr !5737
  %101 = inttoptr i32 %100 to i32*, !insn.addr !5737
  store i32 %40, i32* %101, align 4, !insn.addr !5737
  %102 = select i1 %99, i32 2, i32 1, !insn.addr !5738
  %103 = add i32 %esp.0.reload, -8, !insn.addr !5739
  %104 = inttoptr i32 %103 to i32*, !insn.addr !5739
  store i32 %102, i32* %104, align 4, !insn.addr !5739
  store i32 %102, i32* %cr_-44.0.in.reg2mem, !insn.addr !5740
  store i32 %72, i32* %stack_var_-52.0.reg2mem, !insn.addr !5740
  store i32 %103, i32* %esp.2.reg2mem, !insn.addr !5740
  store i32 %41, i32* %storemerge.reg2mem, !insn.addr !5740
  br label %dec_label_pc_457f6d, !insn.addr !5740

dec_label_pc_457f2e:                              ; preds = %dec_label_pc_457e79
  %105 = load i8, i8* %51, align 1, !insn.addr !5741
  %106 = zext i8 %105 to i32, !insn.addr !5741
  %107 = add i32 %106, ptrtoint ([256 x i8]* @_lookuptrailbytes to i32), !insn.addr !5742
  %108 = inttoptr i32 %107 to i8*, !insn.addr !5742
  %109 = load i8, i8* %108, align 1, !insn.addr !5742
  %110 = sext i8 %109 to i32, !insn.addr !5742
  %111 = icmp sgt i32 %62, %110, !insn.addr !5743
  br i1 %111, label %dec_label_pc_457f44, label %dec_label_pc_4580ec, !insn.addr !5743

dec_label_pc_457f44:                              ; preds = %dec_label_pc_457f2e
  %112 = add nsw i32 %110, 1, !insn.addr !5744
  %113 = icmp eq i32 %112, 4, !insn.addr !5745
  store i32 0, i32* %stack_var_-144, align 4, !insn.addr !5746
  store i32 %stack_var_-40.0.reload, i32* %stack_var_-56, align 4, !insn.addr !5747
  %114 = select i1 %113, i32 2, i32 1, !insn.addr !5748
  %115 = add i32 %esp.0.reload, -4, !insn.addr !5749
  %116 = inttoptr i32 %115 to i32*, !insn.addr !5749
  store i32 %42, i32* %116, align 4, !insn.addr !5749
  %117 = add i32 %esp.0.reload, -8, !insn.addr !5750
  %118 = inttoptr i32 %117 to i32*, !insn.addr !5750
  store i32 %114, i32* %118, align 4, !insn.addr !5750
  store i32 %114, i32* %cr_-44.0.in.reg2mem, !insn.addr !5751
  store i32 %112, i32* %stack_var_-52.0.reg2mem, !insn.addr !5751
  store i32 %117, i32* %esp.2.reg2mem, !insn.addr !5751
  store i32 %43, i32* %storemerge.reg2mem, !insn.addr !5751
  br label %dec_label_pc_457f6d, !insn.addr !5751

dec_label_pc_457f6d:                              ; preds = %dec_label_pc_457f44, %dec_label_pc_457f05
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %stack_var_-52.0.reload = load i32, i32* %stack_var_-52.0.reg2mem
  %cr_-44.0.in.reload = load i32, i32* %cr_-44.0.in.reg2mem
  %119 = add i32 %esp.2.reload, -4, !insn.addr !5752
  %120 = inttoptr i32 %119 to i32*, !insn.addr !5752
  store i32 %storemerge.reload, i32* %120, align 4, !insn.addr !5752
  %121 = add i32 %esp.2.reload, -8, !insn.addr !5753
  %122 = inttoptr i32 %121 to i32*, !insn.addr !5753
  store i32 %44, i32* %122, align 4, !insn.addr !5753
  %123 = call i32 @function_40430e(i32 %cr_-44.0.in.reload), !insn.addr !5754
  %124 = icmp eq i32 %123, -1, !insn.addr !5755
  br i1 %124, label %dec_label_pc_45813f, label %dec_label_pc_457f83, !insn.addr !5756

dec_label_pc_457f83:                              ; preds = %dec_label_pc_457f6d
  %125 = add i32 %esp.2.reload, 8, !insn.addr !5757
  %126 = add i32 %stack_var_-40.0.reload, -1, !insn.addr !5758
  %127 = add i32 %126, %stack_var_-52.0.reload, !insn.addr !5759
  store i32 %cr_-44.0.in.reload, i32* %cr_-44.1.reg2mem, !insn.addr !5760
  store i32 %125, i32* %esp.3.reg2mem, !insn.addr !5760
  store i32 %127, i32* %edi.4.reg2mem, !insn.addr !5760
  br label %dec_label_pc_458010, !insn.addr !5760

dec_label_pc_457f8e:                              ; preds = %dec_label_pc_457e39
  %128 = add i32 %53, %45, !insn.addr !5761
  %129 = inttoptr i32 %128 to i8*, !insn.addr !5761
  %130 = load i8, i8* %129, align 1, !insn.addr !5761
  %131 = and i8 %130, 4, !insn.addr !5762
  %132 = icmp eq i8 %131, 0, !insn.addr !5762
  br i1 %132, label %dec_label_pc_457fb8, label %dec_label_pc_457f9a, !insn.addr !5763

dec_label_pc_457f9a:                              ; preds = %dec_label_pc_457f8e
  %133 = add i32 %53, %36, !insn.addr !5764
  %134 = inttoptr i32 %133 to i8*, !insn.addr !5764
  %135 = load i8, i8* %134, align 1, !insn.addr !5764
  %136 = and i8 %130, -5
  store i8 %135, i8* %stack_var_-24, align 1, !insn.addr !5765
  %137 = add i32 %esp.0.reload, -4, !insn.addr !5766
  %138 = inttoptr i32 %137 to i32*, !insn.addr !5766
  store i32 2, i32* %138, align 4, !insn.addr !5766
  store i8 %136, i8* %129, align 1, !insn.addr !5767
  %139 = add i32 %esp.0.reload, -8, !insn.addr !5768
  %140 = inttoptr i32 %139 to i32*, !insn.addr !5768
  store i32 %46, i32* %140, align 4, !insn.addr !5768
  store i32 %139, i32* %storemerge2.reg2mem, !insn.addr !5769
  br label %dec_label_pc_457ffb, !insn.addr !5769

dec_label_pc_457fb8:                              ; preds = %dec_label_pc_457f8e
  %141 = load i8, i8* %51, align 1, !insn.addr !5770
  %142 = zext i8 %141 to i32, !insn.addr !5770
  %143 = call i16* @__pctype_func(), !insn.addr !5771
  %144 = ptrtoint i16* %143 to i32, !insn.addr !5771
  %145 = mul i32 %142, 2, !insn.addr !5772
  %146 = add i32 %145, %144, !insn.addr !5772
  %147 = inttoptr i32 %146 to i16*, !insn.addr !5772
  %148 = load i16, i16* %147, align 2, !insn.addr !5772
  %149 = icmp slt i16 %148, 0, !insn.addr !5773
  br i1 %149, label %dec_label_pc_457fcc, label %dec_label_pc_457ff8, !insn.addr !5773

dec_label_pc_457fcc:                              ; preds = %dec_label_pc_457fb8
  %150 = add i32 %stack_var_-40.0.reload, 1, !insn.addr !5774
  store i32 %150, i32* %stack_var_-56, align 4, !insn.addr !5775
  %151 = icmp ult i32 %150, %16, !insn.addr !5776
  %152 = icmp eq i1 %151, false, !insn.addr !5777
  br i1 %152, label %dec_label_pc_458110, label %dec_label_pc_457fdb, !insn.addr !5777

dec_label_pc_457fdb:                              ; preds = %dec_label_pc_457fcc
  %153 = add i32 %esp.0.reload, -4, !insn.addr !5778
  %154 = inttoptr i32 %153 to i32*, !insn.addr !5778
  store i32 2, i32* %154, align 4, !insn.addr !5778
  %155 = add i32 %esp.0.reload, -8, !insn.addr !5779
  %156 = inttoptr i32 %155 to i32*, !insn.addr !5779
  store i32 %stack_var_-40.0.reload, i32* %156, align 4, !insn.addr !5779
  %157 = add i32 %esp.0.reload, -12, !insn.addr !5780
  %158 = inttoptr i32 %157 to i32*, !insn.addr !5780
  store i32 %44, i32* %158, align 4, !insn.addr !5780
  %159 = load i32, i32* %stack_var_-56, align 4, !insn.addr !5781
  %160 = inttoptr i32 %159 to i16*, !insn.addr !5781
  %161 = call i32 @mbtowc(i16* %160, i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !5781
  %162 = icmp eq i32 %161, -1, !insn.addr !5782
  br i1 %162, label %dec_label_pc_45813f, label %dec_label_pc_457ff3, !insn.addr !5783

dec_label_pc_457ff3:                              ; preds = %dec_label_pc_457fdb
  %163 = load i32, i32* %stack_var_-56, align 4, !insn.addr !5784
  store i32 1, i32* %cr_-44.1.reg2mem, !insn.addr !5785
  store i32 %esp.0.reload, i32* %esp.3.reg2mem, !insn.addr !5785
  store i32 %163, i32* %edi.4.reg2mem, !insn.addr !5785
  br label %dec_label_pc_458010, !insn.addr !5785

dec_label_pc_457ff8:                              ; preds = %dec_label_pc_457fb8
  %164 = add i32 %esp.0.reload, -4, !insn.addr !5786
  %165 = inttoptr i32 %164 to i32*, !insn.addr !5786
  store i32 1, i32* %165, align 4, !insn.addr !5786
  %166 = add i32 %esp.0.reload, -8, !insn.addr !5787
  %167 = inttoptr i32 %166 to i32*, !insn.addr !5787
  store i32 %stack_var_-40.0.reload, i32* %167, align 4, !insn.addr !5787
  store i32 %166, i32* %storemerge2.reg2mem, !insn.addr !5787
  br label %dec_label_pc_457ffb, !insn.addr !5787

dec_label_pc_457ffb:                              ; preds = %dec_label_pc_457ff8, %dec_label_pc_457f9a
  %storemerge2.reload = load i32, i32* %storemerge2.reg2mem
  %168 = add i32 %storemerge2.reload, -4, !insn.addr !5788
  %169 = inttoptr i32 %168 to i32*, !insn.addr !5788
  store i32 %44, i32* %169, align 4, !insn.addr !5788
  %170 = call i32 @mbtowc(i16* bitcast (i32* @80 to i16*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !5789
  %171 = add i32 %storemerge2.reload, 8, !insn.addr !5790
  %172 = icmp eq i32 %170, -1, !insn.addr !5791
  store i32 1, i32* %cr_-44.1.reg2mem, !insn.addr !5792
  store i32 %171, i32* %esp.3.reg2mem, !insn.addr !5792
  store i32 %stack_var_-40.0.reload, i32* %edi.4.reg2mem, !insn.addr !5792
  br i1 %172, label %dec_label_pc_45813f, label %dec_label_pc_458010, !insn.addr !5792

dec_label_pc_458010:                              ; preds = %dec_label_pc_457ffb, %dec_label_pc_457ff3, %dec_label_pc_457f83
  %edi.4.reload = load i32, i32* %edi.4.reg2mem
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %cr_-44.1.reload = load i32, i32* %cr_-44.1.reg2mem
  %173 = add i32 %esp.3.reload, -4, !insn.addr !5793
  %174 = inttoptr i32 %173 to i32*, !insn.addr !5793
  store i32 0, i32* %174, align 4, !insn.addr !5793
  %175 = add i32 %esp.3.reload, -8, !insn.addr !5794
  %176 = inttoptr i32 %175 to i32*, !insn.addr !5794
  store i32 0, i32* %176, align 4, !insn.addr !5794
  %177 = add i32 %esp.3.reload, -12, !insn.addr !5795
  %178 = inttoptr i32 %177 to i32*, !insn.addr !5795
  store i32 5, i32* %178, align 4, !insn.addr !5795
  %179 = add i32 %esp.3.reload, -16, !insn.addr !5796
  %180 = inttoptr i32 %179 to i32*, !insn.addr !5796
  store i32 %47, i32* %180, align 4, !insn.addr !5796
  %181 = add i32 %esp.3.reload, -20, !insn.addr !5797
  %182 = inttoptr i32 %181 to i32*, !insn.addr !5797
  store i32 %cr_-44.1.reload, i32* %182, align 4, !insn.addr !5797
  %183 = add i32 %esp.3.reload, -24, !insn.addr !5798
  %184 = inttoptr i32 %183 to i32*, !insn.addr !5798
  store i32 %44, i32* %184, align 4, !insn.addr !5798
  %185 = add i32 %esp.3.reload, -28, !insn.addr !5799
  %186 = inttoptr i32 %185 to i32*, !insn.addr !5799
  store i32 0, i32* %186, align 4, !insn.addr !5799
  %187 = add i32 %esp.3.reload, -32, !insn.addr !5800
  %188 = inttoptr i32 %187 to i32*, !insn.addr !5800
  store i32 %17, i32* %188, align 4, !insn.addr !5800
  %189 = call i32 @function_404601(), !insn.addr !5801
  store i32 %189, i32* %stack_var_-56, align 4, !insn.addr !5802
  %190 = icmp eq i32 %189, 0, !insn.addr !5803
  br i1 %190, label %dec_label_pc_45813f, label %dec_label_pc_45803a, !insn.addr !5804

dec_label_pc_45803a:                              ; preds = %dec_label_pc_458010
  store i32 0, i32* %174, align 4, !insn.addr !5805
  store i32 %48, i32* %176, align 4, !insn.addr !5806
  store i32 %189, i32* %178, align 4, !insn.addr !5807
  store i32 %47, i32* %180, align 4, !insn.addr !5808
  store i32 %15, i32* %182, align 4, !insn.addr !5809
  %191 = load i32, i32* %stack_var_-56, align 4, !insn.addr !5810
  %192 = inttoptr i32 %191 to i32*, !insn.addr !5810
  %193 = call i1 @WriteFile(i32* %192, i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, %_OVERLAPPED* bitcast (i32* @80 to %_OVERLAPPED*)), !insn.addr !5810
  %194 = icmp eq i1 %193, false, !insn.addr !5811
  br i1 %194, label %dec_label_pc_458133, label %dec_label_pc_458055, !insn.addr !5812

dec_label_pc_458055:                              ; preds = %dec_label_pc_45803a
  %195 = add i32 %edi.4.reload, 1, !insn.addr !5813
  %196 = sub i32 %stack_var_-88.0.reload, %buffer_size, !insn.addr !5814
  %197 = load i32, i32* %stack_var_-56, align 4, !insn.addr !5815
  %198 = add i32 %195, %196, !insn.addr !5816
  %199 = insertvalue %"`anonymous-namespace'::write_result.469" undef, i32 %198, 0, !insn.addr !5817
  store %"`anonymous-namespace'::write_result.469" %199, %"`anonymous-namespace'::write_result.469"* %result_-92, align 8, !insn.addr !5817
  %200 = load i32, i32* %written_-100, align 4, !insn.addr !5818
  %201 = icmp ult i32 %200, %197, !insn.addr !5818
  br i1 %201, label %dec_label_pc_45813f, label %dec_label_pc_45806c, !insn.addr !5819

dec_label_pc_45806c:                              ; preds = %dec_label_pc_458055
  %202 = icmp eq i8 %52, 10, !insn.addr !5820
  %203 = icmp eq i1 %202, false, !insn.addr !5821
  store i32 %stack_var_-88.0.reload, i32* %stack_var_-88.1.reg2mem, !insn.addr !5821
  store i32 %181, i32* %esp.4.reg2mem, !insn.addr !5821
  store i32 %198, i32* %esi.1.reg2mem, !insn.addr !5821
  br i1 %203, label %dec_label_pc_4580a6, label %dec_label_pc_458072, !insn.addr !5821

dec_label_pc_458072:                              ; preds = %dec_label_pc_45806c
  store i32 0, i32* %184, align 4, !insn.addr !5822
  store i16 13, i16* %cr_-48, align 2, !insn.addr !5823
  store i32 %48, i32* %186, align 4, !insn.addr !5824
  store i32 1, i32* %188, align 4, !insn.addr !5825
  %204 = add i32 %esp.3.reload, -36, !insn.addr !5826
  %205 = inttoptr i32 %204 to i32*, !insn.addr !5826
  store i32 %49, i32* %205, align 4, !insn.addr !5826
  %206 = add i32 %esp.3.reload, -40, !insn.addr !5827
  %207 = inttoptr i32 %206 to i32*, !insn.addr !5827
  store i32 %15, i32* %207, align 4, !insn.addr !5827
  %208 = load i32*, i32** %50, align 8, !insn.addr !5828
  %209 = call i1 @WriteFile(i32* %208, i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, %_OVERLAPPED* bitcast (i32* @80 to %_OVERLAPPED*)), !insn.addr !5828
  %210 = icmp eq i1 %209, false, !insn.addr !5829
  br i1 %210, label %dec_label_pc_458133, label %dec_label_pc_458095, !insn.addr !5830

dec_label_pc_458095:                              ; preds = %dec_label_pc_458072
  %211 = load i32, i32* %written_-100, align 4, !insn.addr !5831
  %212 = icmp eq i32 %211, 0, !insn.addr !5831
  br i1 %212, label %dec_label_pc_45813f, label %dec_label_pc_45809f, !insn.addr !5832

dec_label_pc_45809f:                              ; preds = %dec_label_pc_458095
  %213 = add i32 %stack_var_-88.0.reload, 1, !insn.addr !5833
  %214 = add i32 %198, 1, !insn.addr !5834
  %215 = insertvalue %"`anonymous-namespace'::write_result.469" undef, i32 %214, 0, !insn.addr !5835
  store %"`anonymous-namespace'::write_result.469" %215, %"`anonymous-namespace'::write_result.469"* %result_-92, align 8, !insn.addr !5835
  store i32 %213, i32* %stack_var_-88.1.reg2mem, !insn.addr !5835
  store i32 %206, i32* %esp.4.reg2mem, !insn.addr !5835
  store i32 %214, i32* %esi.1.reg2mem, !insn.addr !5835
  br label %dec_label_pc_4580a6, !insn.addr !5835

dec_label_pc_4580a6:                              ; preds = %dec_label_pc_45809f, %dec_label_pc_45806c
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %esp.4.reload = load i32, i32* %esp.4.reg2mem
  %stack_var_-88.1.reload = load i32, i32* %stack_var_-88.1.reg2mem
  %216 = icmp ult i32 %195, %16, !insn.addr !5836
  %217 = icmp eq i1 %216, false, !insn.addr !5837
  store i32 %195, i32* %stack_var_-40.0.reg2mem, !insn.addr !5837
  store i32 %stack_var_-88.1.reload, i32* %stack_var_-88.0.reg2mem, !insn.addr !5837
  store i32 %esp.4.reload, i32* %esp.0.reg2mem, !insn.addr !5837
  store i32 %esi.1.reload, i32* %esi.0.reg2mem, !insn.addr !5837
  br i1 %217, label %dec_label_pc_45813f, label %dec_label_pc_457e39, !insn.addr !5837

dec_label_pc_4580b7:                              ; preds = %dec_label_pc_457e8c
  %218 = icmp slt i32 %.reload, 1
  store i32 %.reload, i32* %.reg2mem70, !insn.addr !5838
  store i32 %esi.0.reload, i32* %esi.2.reg2mem, !insn.addr !5838
  br i1 %218, label %dec_label_pc_4580e1, label %dec_label_pc_4580be.preheader, !insn.addr !5838

dec_label_pc_4580be.preheader:                    ; preds = %dec_label_pc_4580b7
  %219 = add nuw i32 %36, %ecx.25.reload
  store i32 0, i32* %ebx.0.reg2mem
  br label %dec_label_pc_4580be

dec_label_pc_4580be:                              ; preds = %dec_label_pc_4580be, %dec_label_pc_4580be.preheader
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %220 = load i32, i32* %10, align 4, !insn.addr !5839
  %221 = add i32 %ebx.0.reload, %stack_var_-40.0.reload, !insn.addr !5840
  %222 = inttoptr i32 %221 to i8*, !insn.addr !5840
  %223 = load i8, i8* %222, align 1, !insn.addr !5840
  %224 = add nuw nsw i32 %ebx.0.reload, 1, !insn.addr !5841
  %225 = add i32 %219, %ebx.0.reload, !insn.addr !5842
  %226 = add i32 %225, %220, !insn.addr !5842
  %227 = inttoptr i32 %226 to i8*, !insn.addr !5842
  store i8 %223, i8* %227, align 1, !insn.addr !5842
  %exitcond33 = icmp eq i32 %224, %.reload
  store i32 %224, i32* %ebx.0.reg2mem, !insn.addr !5843
  store i32 %.reload, i32* %.reg2mem68, !insn.addr !5843
  br i1 %exitcond33, label %dec_label_pc_4580de, label %dec_label_pc_4580be, !insn.addr !5843

dec_label_pc_4580de:                              ; preds = %dec_label_pc_4580be, %dec_label_pc_4580f3.preheader, %dec_label_pc_4580f3.dec_label_pc_4580f3_crit_edge
  %.reload69 = load i32, i32* %.reg2mem68
  %228 = load i32, i32* %32, align 8, !insn.addr !5844
  store i32 %.reload69, i32* %.reg2mem70, !insn.addr !5844
  store i32 %228, i32* %esi.2.reg2mem, !insn.addr !5844
  br label %dec_label_pc_4580e1, !insn.addr !5844

dec_label_pc_4580e1:                              ; preds = %dec_label_pc_4580ec, %dec_label_pc_4580de, %dec_label_pc_4580b7
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %.reload71 = load i32, i32* %.reg2mem70
  %229 = add i32 %esi.2.reload, %.reload71, !insn.addr !5845
  store i32 %229, i32* %storemerge1.reg2mem, !insn.addr !5845
  br label %dec_label_pc_4580e3, !insn.addr !5845

dec_label_pc_4580e3:                              ; preds = %dec_label_pc_458110, %dec_label_pc_4580e1
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %230 = insertvalue %"`anonymous-namespace'::write_result.469" undef, i32 %storemerge1.reload, 0, !insn.addr !5846
  store %"`anonymous-namespace'::write_result.469" %230, %"`anonymous-namespace'::write_result.469"* %result_-92, align 8, !insn.addr !5846
  br label %dec_label_pc_45813f, !insn.addr !5847

dec_label_pc_4580ec:                              ; preds = %dec_label_pc_457f2e
  %231 = icmp slt i32 %62, 1
  store i32 %62, i32* %.reg2mem70, !insn.addr !5848
  store i32 %esi.0.reload, i32* %esi.2.reg2mem, !insn.addr !5848
  br i1 %231, label %dec_label_pc_4580e1, label %dec_label_pc_4580f3.preheader, !insn.addr !5848

dec_label_pc_4580f3.preheader:                    ; preds = %dec_label_pc_4580ec
  %232 = inttoptr i32 %54 to i8*, !insn.addr !5849
  store i8 %105, i8* %232, align 1, !insn.addr !5849
  %exitcond51 = icmp eq i32 %62, 1
  store i32 1, i32* %.reg2mem68, !insn.addr !5850
  store i32 1, i32* %.reg2mem72, !insn.addr !5850
  br i1 %exitcond51, label %dec_label_pc_4580de, label %dec_label_pc_4580f3.dec_label_pc_4580f3_crit_edge, !insn.addr !5850

dec_label_pc_4580f3.dec_label_pc_4580f3_crit_edge: ; preds = %dec_label_pc_4580f3.preheader, %dec_label_pc_4580f3.dec_label_pc_4580f3_crit_edge
  %.reload73 = load i32, i32* %.reg2mem72
  %.pre = load i32, i32* %10, align 4
  %233 = add i32 %.reload73, %stack_var_-40.0.reload, !insn.addr !5851
  %234 = inttoptr i32 %233 to i8*, !insn.addr !5851
  %235 = load i8, i8* %234, align 1, !insn.addr !5851
  %236 = add nuw nsw i32 %.reload73, 1, !insn.addr !5852
  %237 = add i32 %.pre, %36, !insn.addr !5849
  %238 = add i32 %237, %.reload73, !insn.addr !5849
  %239 = inttoptr i32 %238 to i8*, !insn.addr !5849
  store i8 %235, i8* %239, align 1, !insn.addr !5849
  %exitcond = icmp eq i32 %236, %62
  store i32 %62, i32* %.reg2mem68, !insn.addr !5850
  store i32 %236, i32* %.reg2mem72, !insn.addr !5850
  br i1 %exitcond, label %dec_label_pc_4580de, label %dec_label_pc_4580f3.dec_label_pc_4580f3_crit_edge, !insn.addr !5850

dec_label_pc_458110:                              ; preds = %dec_label_pc_457fcc
  %240 = load i32, i32* %10, align 4, !insn.addr !5853
  %241 = add i32 %240, %36, !insn.addr !5854
  %242 = inttoptr i32 %241 to i8*, !insn.addr !5854
  store i8 %141, i8* %242, align 1, !insn.addr !5854
  %243 = load i32, i32* %10, align 4, !insn.addr !5855
  %244 = add i32 %243, %45, !insn.addr !5856
  %245 = inttoptr i32 %244 to i8*, !insn.addr !5856
  %246 = load i8, i8* %245, align 1, !insn.addr !5856
  %247 = or i8 %246, 4, !insn.addr !5856
  store i8 %247, i8* %245, align 1, !insn.addr !5856
  %248 = add i32 %esi.0.reload, 1, !insn.addr !5857
  store i32 %248, i32* %storemerge1.reg2mem, !insn.addr !5858
  br label %dec_label_pc_4580e3, !insn.addr !5858

dec_label_pc_458133:                              ; preds = %dec_label_pc_458072, %dec_label_pc_45803a
  %249 = call i32 @GetLastError(), !insn.addr !5859
  %250 = insertvalue %"`anonymous-namespace'::write_result" undef, i32 %249, 0, !insn.addr !5860
  store %"`anonymous-namespace'::write_result" %250, %"`anonymous-namespace'::write_result"* %result_-96, align 8, !insn.addr !5860
  br label %dec_label_pc_45813f, !insn.addr !5860

dec_label_pc_45813f:                              ; preds = %dec_label_pc_457f6d, %dec_label_pc_457fdb, %dec_label_pc_457ffb, %dec_label_pc_458010, %dec_label_pc_458055, %dec_label_pc_458095, %dec_label_pc_4580a6, %dec_label_pc_457dbb, %dec_label_pc_458133, %dec_label_pc_4580e3
  %zf.0 = icmp eq i8 %2, 0
  br i1 %zf.0, label %dec_label_pc_45814b, label %dec_label_pc_458141, !insn.addr !5861

dec_label_pc_458141:                              ; preds = %dec_label_pc_45813f
  %251 = add i32 %4, 848, !insn.addr !5862
  %252 = inttoptr i32 %251 to i32*, !insn.addr !5862
  %253 = load i32, i32* %252, align 4, !insn.addr !5862
  %254 = and i32 %253, -3, !insn.addr !5862
  store i32 %254, i32* %252, align 4, !insn.addr !5862
  br label %dec_label_pc_45814b, !insn.addr !5862

dec_label_pc_45814b:                              ; preds = %dec_label_pc_458141, %dec_label_pc_45813f
  %255 = getelementptr inbounds %"`anonymous-namespace'::write_result", %"`anonymous-namespace'::write_result"* %result_-96, i32 0, i32 0, !insn.addr !5863
  %256 = load i32, i32* %255, align 8, !insn.addr !5863
  %257 = inttoptr i32 %fh to i32*, !insn.addr !5863
  store i32 %256, i32* %257, align 4, !insn.addr !5863
  %258 = add i32 %20, %fh, !insn.addr !5863
  %259 = load i32, i32* %25, align 4, !insn.addr !5864
  %260 = inttoptr i32 %258 to i32*, !insn.addr !5864
  store i32 %259, i32* %260, align 4, !insn.addr !5864
  %261 = add i32 %258, %20, !insn.addr !5864
  %262 = load i32, i32* %27, align 8, !insn.addr !5865
  %263 = inttoptr i32 %261 to i32*, !insn.addr !5865
  store i32 %262, i32* %263, align 4, !insn.addr !5865
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !5866
  ret %"`anonymous-namespace'::write_result.733" { i32 ptrtoint (i32* @80 to i32) }, !insn.addr !5867
}

define %"`anonymous-namespace'::write_result.734" @write_double_translated_unicode_nolock(i8* %buffer, i32 %buffer_size) local_unnamed_addr {
dec_label_pc_45824f:
  %edi.0.reg2mem = alloca i32, !insn.addr !5868
  %0 = call i1 @__decompiler_undefined_function_6()
  %1 = ptrtoint i8* %buffer to i32
  %2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %3 = bitcast i8* %buffer to i32*, !insn.addr !5869
  store i32 0, i32* %3, align 4, !insn.addr !5869
  %4 = select i1 %0, i32 -4, i32 4, !insn.addr !5869
  %5 = add i32 %4, %1, !insn.addr !5869
  %6 = inttoptr i32 %5 to i32*, !insn.addr !5870
  store i32 0, i32* %6, align 4, !insn.addr !5870
  %7 = add i32 %5, %4, !insn.addr !5870
  %8 = inttoptr i32 %7 to i32*, !insn.addr !5871
  store i32 0, i32* %8, align 4, !insn.addr !5871
  %9 = add i32 %2, %buffer_size, !insn.addr !5872
  %10 = icmp ugt i32 %9, %buffer_size, !insn.addr !5873
  %11 = icmp eq i1 %10, false, !insn.addr !5874
  br i1 %11, label %dec_label_pc_4582b0, label %dec_label_pc_458271.preheader, !insn.addr !5874

dec_label_pc_458271.preheader:                    ; preds = %dec_label_pc_45824f
  %12 = ptrtoint i32* %stack_var_-20 to i32, !insn.addr !5875
  %13 = add i32 %12, -4, !insn.addr !5876
  %14 = inttoptr i32 %13 to i32*, !insn.addr !5876
  %15 = add i32 %1, 4
  %16 = inttoptr i32 %15 to i32*
  %17 = add i32 %1, 8
  %18 = inttoptr i32 %17 to i32*
  store i32 %buffer_size, i32* %edi.0.reg2mem
  br label %dec_label_pc_458271

dec_label_pc_458271:                              ; preds = %dec_label_pc_458271.preheader, %dec_label_pc_45829e
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %19 = inttoptr i32 %edi.0.reload to i16*, !insn.addr !5877
  %20 = load i16, i16* %19, align 2, !insn.addr !5877
  %21 = zext i16 %20 to i32, !insn.addr !5877
  store i32 %21, i32* %14, align 4, !insn.addr !5876
  %22 = call i16 @_putwch_nolock(i16 ptrtoint (i32* @80 to i16)), !insn.addr !5878
  %23 = icmp eq i16 %22, %20, !insn.addr !5879
  %24 = icmp eq i1 %23, false, !insn.addr !5880
  br i1 %24, label %dec_label_pc_4582a8, label %dec_label_pc_458280, !insn.addr !5880

dec_label_pc_458280:                              ; preds = %dec_label_pc_458271
  %25 = load i32, i32* %16, align 4, !insn.addr !5881
  %26 = add i32 %25, 2, !insn.addr !5881
  store i32 %26, i32* %16, align 4, !insn.addr !5881
  %27 = icmp eq i16 %20, 10, !insn.addr !5882
  %28 = icmp eq i1 %27, false, !insn.addr !5883
  br i1 %28, label %dec_label_pc_45829e, label %dec_label_pc_458289, !insn.addr !5883

dec_label_pc_458289:                              ; preds = %dec_label_pc_458280
  store i32 13, i32* %14, align 4, !insn.addr !5884
  %29 = call i16 @_putwch_nolock(i16 ptrtoint (i32* @80 to i16)), !insn.addr !5885
  %30 = icmp eq i16 %29, 13, !insn.addr !5886
  %31 = icmp eq i1 %30, false, !insn.addr !5887
  br i1 %31, label %dec_label_pc_4582a8, label %dec_label_pc_458298, !insn.addr !5887

dec_label_pc_458298:                              ; preds = %dec_label_pc_458289
  %32 = load i32, i32* %16, align 4, !insn.addr !5888
  %33 = add i32 %32, 1, !insn.addr !5888
  store i32 %33, i32* %16, align 4, !insn.addr !5888
  %34 = load i32, i32* %18, align 4, !insn.addr !5889
  %35 = add i32 %34, 1, !insn.addr !5889
  store i32 %35, i32* %18, align 4, !insn.addr !5889
  br label %dec_label_pc_45829e, !insn.addr !5889

dec_label_pc_45829e:                              ; preds = %dec_label_pc_458298, %dec_label_pc_458280
  %36 = add i32 %edi.0.reload, 2, !insn.addr !5890
  %37 = icmp ult i32 %36, %9, !insn.addr !5891
  store i32 %36, i32* %edi.0.reg2mem, !insn.addr !5892
  br i1 %37, label %dec_label_pc_458271, label %dec_label_pc_4582b0, !insn.addr !5892

dec_label_pc_4582a8:                              ; preds = %dec_label_pc_458289, %dec_label_pc_458271
  %38 = call i32 @GetLastError(), !insn.addr !5893
  store i32 %38, i32* %3, align 4, !insn.addr !5894
  br label %dec_label_pc_4582b0, !insn.addr !5894

dec_label_pc_4582b0:                              ; preds = %dec_label_pc_45829e, %dec_label_pc_4582a8, %dec_label_pc_45824f
  %39 = insertvalue %"`anonymous-namespace'::write_result.734" undef, i32 %1, 0, !insn.addr !5895
  ret %"`anonymous-namespace'::write_result.734" %39, !insn.addr !5895
}

define i1 @write_requires_double_translation_nolock(i32 %fh) local_unnamed_addr {
dec_label_pc_4582d1:
  %storemerge.reg2mem = alloca i1, !insn.addr !5896
  %stack_var_-8 = alloca i32, align 4
  %0 = call i32 @_isatty(i32 %fh), !insn.addr !5897
  %1 = icmp eq i32 %0, 0, !insn.addr !5898
  br i1 %1, label %dec_label_pc_45833c, label %dec_label_pc_4582e7, !insn.addr !5899

dec_label_pc_4582e7:                              ; preds = %dec_label_pc_4582d1
  %2 = and i32 %fh, 63, !insn.addr !5900
  %3 = sdiv i32 %fh, 64, !insn.addr !5901
  %narrow = mul nuw nsw i32 %2, 56
  %4 = mul i32 %3, 4, !insn.addr !5902
  %5 = add i32 %4, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5902
  %6 = inttoptr i32 %5 to i32*, !insn.addr !5902
  %7 = load i32, i32* %6, align 4, !insn.addr !5902
  %8 = add nuw nsw i32 %narrow, 40, !insn.addr !5903
  %9 = add i32 %8, %7, !insn.addr !5903
  %10 = inttoptr i32 %9 to i8*, !insn.addr !5903
  %11 = load i8, i8* %10, align 1, !insn.addr !5903
  %12 = icmp slt i8 %11, 0, !insn.addr !5903
  %13 = icmp eq i1 %12, false, !insn.addr !5904
  br i1 %13, label %dec_label_pc_45833c, label %dec_label_pc_458300, !insn.addr !5904

dec_label_pc_458300:                              ; preds = %dec_label_pc_4582e7
  %14 = call i32 @___acrt_getptd(), !insn.addr !5905
  %15 = add i32 %14, 76, !insn.addr !5906
  %16 = inttoptr i32 %15 to i32*, !insn.addr !5906
  %17 = load i32, i32* %16, align 4, !insn.addr !5906
  %18 = add i32 %17, 168, !insn.addr !5907
  %19 = inttoptr i32 %18 to i32*, !insn.addr !5907
  %20 = load i32, i32* %19, align 4, !insn.addr !5907
  %21 = icmp eq i32 %20, 0, !insn.addr !5907
  %22 = icmp eq i1 %21, false, !insn.addr !5908
  %.pre = load i32, i32* %6, align 4
  %.pre1 = add i32 %.pre, %narrow
  br i1 %22, label %dec_label_pc_45831f, label %dec_label_pc_458311, !insn.addr !5908

dec_label_pc_458311:                              ; preds = %dec_label_pc_458300
  %23 = add i32 %.pre1, 41, !insn.addr !5909
  %24 = inttoptr i32 %23 to i8*, !insn.addr !5909
  %25 = load i8, i8* %24, align 1, !insn.addr !5909
  %26 = icmp eq i8 %25, 0, !insn.addr !5909
  br i1 %26, label %dec_label_pc_45833c, label %dec_label_pc_45831f, !insn.addr !5910

dec_label_pc_45831f:                              ; preds = %dec_label_pc_458300, %dec_label_pc_458311
  %27 = add i32 %.pre1, 24, !insn.addr !5911
  %28 = inttoptr i32 %27 to i32*, !insn.addr !5911
  %29 = load i32, i32* %28, align 4, !insn.addr !5911
  %30 = inttoptr i32 %29 to i32*, !insn.addr !5912
  %31 = call i1 @GetConsoleMode(i32* %30, i32* nonnull %stack_var_-8), !insn.addr !5912
  %32 = icmp eq i1 %31, false, !insn.addr !5913
  store i1 true, i1* %storemerge.reg2mem, !insn.addr !5914
  br i1 %32, label %dec_label_pc_45833c, label %dec_label_pc_45833e, !insn.addr !5914

dec_label_pc_45833c:                              ; preds = %dec_label_pc_45831f, %dec_label_pc_458311, %dec_label_pc_4582e7, %dec_label_pc_4582d1
  store i1 false, i1* %storemerge.reg2mem, !insn.addr !5915
  br label %dec_label_pc_45833e, !insn.addr !5915

dec_label_pc_45833e:                              ; preds = %dec_label_pc_45831f, %dec_label_pc_45833c
  %storemerge.reload = load i1, i1* %storemerge.reg2mem
  ret i1 %storemerge.reload, !insn.addr !5916
}

define %"`anonymous-namespace'::write_result.735" @write_text_ansi_nolock(i32 %fh, i8* %buffer, i32 %buffer_size) local_unnamed_addr {
dec_label_pc_45835e:
  %esi.2.reg2mem = alloca i32, !insn.addr !5917
  %ecx.2.reg2mem = alloca i32, !insn.addr !5917
  %esi.1.reg2mem = alloca i32, !insn.addr !5917
  %esi.0.reg2mem = alloca i32, !insn.addr !5917
  %ecx.1.reg2mem = alloca i32, !insn.addr !5917
  %esp.0.reg2mem = alloca i32, !insn.addr !5917
  %ecx.0.reg2mem = alloca i32, !insn.addr !5917
  %0 = call i1 @__decompiler_undefined_function_6()
  %1 = ptrtoint i8* %buffer to i32
  %stack_var_-9 = alloca i32, align 4
  %lfbuf_-5128 = alloca [5120 x i8], align 1
  %written_-5132 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %2 = call i32 @__decompiler_undefined_function_0()
  call void @_chkstk(), !insn.addr !5918
  %3 = and i32 %1, 63, !insn.addr !5919
  %4 = sdiv i32 %1, 64, !insn.addr !5920
  %narrow = mul nuw nsw i32 %3, 56
  %5 = mul i32 %4, 4, !insn.addr !5921
  %6 = add i32 %5, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5921
  %7 = inttoptr i32 %6 to i32*, !insn.addr !5921
  %8 = load i32, i32* %7, align 4, !insn.addr !5921
  %9 = add nuw nsw i32 %narrow, 24, !insn.addr !5922
  %10 = add i32 %9, %8, !insn.addr !5922
  %11 = inttoptr i32 %10 to i32*, !insn.addr !5922
  %12 = load i32, i32* %11, align 4, !insn.addr !5922
  %13 = add i32 %2, %buffer_size, !insn.addr !5923
  store i32 %12, i32* %written_-5132, align 4, !insn.addr !5924
  %14 = inttoptr i32 %fh to i32*, !insn.addr !5925
  store i32 0, i32* %14, align 4, !insn.addr !5925
  %15 = select i1 %0, i32 -4, i32 4, !insn.addr !5925
  %16 = add i32 %15, %fh, !insn.addr !5925
  %17 = inttoptr i32 %16 to i32*, !insn.addr !5926
  store i32 0, i32* %17, align 4, !insn.addr !5926
  %18 = add i32 %16, %15, !insn.addr !5926
  %19 = inttoptr i32 %18 to i32*, !insn.addr !5927
  store i32 0, i32* %19, align 4, !insn.addr !5927
  %20 = icmp ugt i32 %13, %buffer_size, !insn.addr !5928
  %21 = icmp eq i1 %20, false, !insn.addr !5929
  br i1 %21, label %dec_label_pc_458428, label %dec_label_pc_4583b5, !insn.addr !5929

dec_label_pc_4583b5:                              ; preds = %dec_label_pc_45835e
  %22 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !5930
  %23 = load i32, i32* %written_-5132, align 4, !insn.addr !5931
  %24 = ptrtoint [5120 x i8]* %lfbuf_-5128 to i32, !insn.addr !5932
  %25 = add i32 %fh, 8
  %26 = inttoptr i32 %25 to i32*
  %27 = ptrtoint i32* %stack_var_-9 to i32
  %28 = ptrtoint i32* %written_-5132 to i32, !insn.addr !5933
  %29 = add i32 %fh, 4
  %30 = inttoptr i32 %29 to i32*
  store i32 %buffer_size, i32* %ecx.0.reg2mem, !insn.addr !5931
  store i32 %22, i32* %esp.0.reg2mem, !insn.addr !5931
  br label %dec_label_pc_4583bb, !insn.addr !5931

dec_label_pc_4583bb:                              ; preds = %dec_label_pc_458404, %dec_label_pc_4583b5
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !5932
  store i32 %24, i32* %esi.0.reg2mem, !insn.addr !5932
  br label %dec_label_pc_4583c1, !insn.addr !5932

dec_label_pc_4583c1:                              ; preds = %dec_label_pc_4583d3, %dec_label_pc_4583bb
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %31 = icmp ult i32 %ecx.1.reload, %13, !insn.addr !5934
  %32 = icmp eq i1 %31, false, !insn.addr !5935
  store i32 %ecx.1.reload, i32* %ecx.2.reg2mem, !insn.addr !5935
  store i32 %esi.0.reload, i32* %esi.2.reg2mem, !insn.addr !5935
  br i1 %32, label %dec_label_pc_4583dd, label %dec_label_pc_4583c5, !insn.addr !5935

dec_label_pc_4583c5:                              ; preds = %dec_label_pc_4583c1
  %33 = inttoptr i32 %ecx.1.reload to i8*, !insn.addr !5936
  %34 = load i8, i8* %33, align 1, !insn.addr !5936
  %35 = icmp eq i8 %34, 10, !insn.addr !5937
  %36 = icmp eq i1 %35, false, !insn.addr !5938
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !5938
  br i1 %36, label %dec_label_pc_4583d3, label %dec_label_pc_4583cc, !insn.addr !5938

dec_label_pc_4583cc:                              ; preds = %dec_label_pc_4583c5
  %37 = load i32, i32* %26, align 4, !insn.addr !5939
  %38 = add i32 %37, 1, !insn.addr !5939
  store i32 %38, i32* %26, align 4, !insn.addr !5939
  %39 = inttoptr i32 %esi.0.reload to i8*, !insn.addr !5940
  store i8 13, i8* %39, align 1, !insn.addr !5940
  %40 = add i32 %esi.0.reload, 1, !insn.addr !5941
  store i32 %40, i32* %esi.1.reg2mem, !insn.addr !5941
  br label %dec_label_pc_4583d3, !insn.addr !5941

dec_label_pc_4583d3:                              ; preds = %dec_label_pc_4583cc, %dec_label_pc_4583c5
  %41 = add i32 %ecx.1.reload, 1, !insn.addr !5942
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %42 = inttoptr i32 %esi.1.reload to i8*, !insn.addr !5943
  store i8 %34, i8* %42, align 1, !insn.addr !5943
  %43 = add i32 %esi.1.reload, 1, !insn.addr !5944
  %44 = icmp ult i32 %43, %27, !insn.addr !5945
  store i32 %41, i32* %ecx.1.reg2mem, !insn.addr !5946
  store i32 %43, i32* %esi.0.reg2mem, !insn.addr !5946
  store i32 %41, i32* %ecx.2.reg2mem, !insn.addr !5946
  store i32 %43, i32* %esi.2.reg2mem, !insn.addr !5946
  br i1 %44, label %dec_label_pc_4583c1, label %dec_label_pc_4583dd, !insn.addr !5946

dec_label_pc_4583dd:                              ; preds = %dec_label_pc_4583d3, %dec_label_pc_4583c1
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %45 = sub i32 %esi.2.reload, %24, !insn.addr !5947
  %46 = add i32 %esp.0.reload, -4, !insn.addr !5948
  %47 = inttoptr i32 %46 to i32*, !insn.addr !5948
  store i32 0, i32* %47, align 4, !insn.addr !5948
  %48 = add i32 %esp.0.reload, -8, !insn.addr !5933
  %49 = inttoptr i32 %48 to i32*, !insn.addr !5933
  store i32 %28, i32* %49, align 4, !insn.addr !5933
  %50 = add i32 %esp.0.reload, -12, !insn.addr !5949
  %51 = inttoptr i32 %50 to i32*, !insn.addr !5949
  store i32 %45, i32* %51, align 4, !insn.addr !5949
  %52 = add i32 %esp.0.reload, -16, !insn.addr !5950
  %53 = inttoptr i32 %52 to i32*, !insn.addr !5950
  store i32 %24, i32* %53, align 4, !insn.addr !5950
  %54 = add i32 %esp.0.reload, -20, !insn.addr !5951
  %55 = inttoptr i32 %54 to i32*, !insn.addr !5951
  store i32 %23, i32* %55, align 4, !insn.addr !5951
  %56 = inttoptr i32 %ecx.2.reload to i32*, !insn.addr !5952
  %57 = call i1 @WriteFile(i32* %56, i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, %_OVERLAPPED* bitcast (i32* @80 to %_OVERLAPPED*)), !insn.addr !5952
  %58 = icmp eq i1 %57, false, !insn.addr !5953
  br i1 %58, label %dec_label_pc_458420, label %dec_label_pc_458404, !insn.addr !5954

dec_label_pc_458404:                              ; preds = %dec_label_pc_4583dd
  %59 = load i32, i32* %written_-5132, align 4, !insn.addr !5955
  %60 = load i32, i32* %30, align 4, !insn.addr !5956
  %61 = add i32 %60, %59, !insn.addr !5956
  store i32 %61, i32* %30, align 4, !insn.addr !5956
  %62 = icmp uge i32 %59, %45, !insn.addr !5957
  %63 = icmp ult i32 %ecx.2.reload, %13, !insn.addr !5958
  %or.cond = icmp eq i1 %63, %62
  store i32 %ecx.2.reload, i32* %ecx.0.reg2mem, !insn.addr !5959
  store i32 %54, i32* %esp.0.reg2mem, !insn.addr !5959
  br i1 %or.cond, label %dec_label_pc_4583bb, label %dec_label_pc_458428, !insn.addr !5959

dec_label_pc_458420:                              ; preds = %dec_label_pc_4583dd
  %64 = call i32 @GetLastError(), !insn.addr !5960
  store i32 %64, i32* %14, align 4, !insn.addr !5961
  br label %dec_label_pc_458428, !insn.addr !5961

dec_label_pc_458428:                              ; preds = %dec_label_pc_458404, %dec_label_pc_458420, %dec_label_pc_45835e
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !5962
  ret %"`anonymous-namespace'::write_result.735" { i32 ptrtoint (i32* @80 to i32) }, !insn.addr !5963
}

define %"`anonymous-namespace'::write_result.736" @write_text_utf16le_nolock(i32 %fh, i8* %buffer, i32 %buffer_size) local_unnamed_addr {
dec_label_pc_45846f:
  %esp.3.reg2mem = alloca i32, !insn.addr !5964
  %ecx.2.reg2mem = alloca i32, !insn.addr !5964
  %esi.2.reg2mem = alloca i32, !insn.addr !5964
  %ecx.1.reg2mem = alloca i32, !insn.addr !5964
  %esi.1.reg2mem = alloca i32, !insn.addr !5964
  %esi.0.reg2mem = alloca i32, !insn.addr !5964
  %ecx.0.reg2mem = alloca i32, !insn.addr !5964
  %0 = call i1 @__decompiler_undefined_function_6()
  %1 = ptrtoint i8* %buffer to i32
  %written_-5136 = alloca i32, align 4
  %stack_var_-10 = alloca i32, align 4
  %lfbuf_-5128 = alloca [2560 x i16], align 2
  %stack_var_-16 = alloca i32, align 4
  %2 = call i32 @__decompiler_undefined_function_0()
  call void @_chkstk(), !insn.addr !5965
  %3 = and i32 %1, 63, !insn.addr !5966
  %4 = sdiv i32 %1, 64, !insn.addr !5967
  %narrow = mul nuw nsw i32 %3, 56
  %5 = mul i32 %4, 4, !insn.addr !5968
  %6 = add i32 %5, ptrtoint (i32* @__pioinfo to i32), !insn.addr !5968
  %7 = inttoptr i32 %6 to i32*, !insn.addr !5968
  %8 = load i32, i32* %7, align 4, !insn.addr !5968
  %9 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !5969
  %10 = add nuw nsw i32 %narrow, 24, !insn.addr !5970
  %11 = add i32 %10, %8, !insn.addr !5970
  %12 = inttoptr i32 %11 to i32*, !insn.addr !5970
  %13 = load i32, i32* %12, align 4, !insn.addr !5970
  %14 = add i32 %2, %buffer_size, !insn.addr !5971
  %15 = inttoptr i32 %fh to i32*, !insn.addr !5972
  store i32 0, i32* %15, align 4, !insn.addr !5972
  %16 = select i1 %0, i32 -4, i32 4, !insn.addr !5972
  %17 = add i32 %16, %fh, !insn.addr !5972
  %18 = inttoptr i32 %17 to i32*, !insn.addr !5973
  store i32 0, i32* %18, align 4, !insn.addr !5973
  %19 = add i32 %17, %16, !insn.addr !5973
  %20 = inttoptr i32 %19 to i32*, !insn.addr !5974
  store i32 0, i32* %20, align 4, !insn.addr !5974
  %21 = ptrtoint [2560 x i16]* %lfbuf_-5128 to i32
  %22 = add i32 %fh, 8
  %23 = inttoptr i32 %22 to i32*
  %24 = ptrtoint i32* %stack_var_-10 to i32
  %25 = ptrtoint i32* %written_-5136 to i32
  %26 = add i32 %fh, 4
  %27 = inttoptr i32 %26 to i32*
  store i32 %buffer_size, i32* %ecx.2.reg2mem, !insn.addr !5975
  store i32 %9, i32* %esp.3.reg2mem, !insn.addr !5975
  br label %dec_label_pc_458539, !insn.addr !5975

dec_label_pc_4584c4:                              ; preds = %dec_label_pc_458539
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %28 = add i32 %esp.3.reload, -4
  %29 = inttoptr i32 %28 to i32*
  store i32 %ecx.2.reload, i32* %ecx.0.reg2mem, !insn.addr !5976
  store i32 %21, i32* %esi.0.reg2mem, !insn.addr !5976
  br label %dec_label_pc_4584ca, !insn.addr !5976

dec_label_pc_4584ca:                              ; preds = %dec_label_pc_4584e6, %dec_label_pc_4584c4
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %30 = icmp ult i32 %ecx.0.reload, %14, !insn.addr !5977
  %31 = icmp eq i1 %30, false, !insn.addr !5978
  store i32 %ecx.0.reload, i32* %ecx.1.reg2mem, !insn.addr !5978
  store i32 %esi.0.reload, i32* %esi.2.reg2mem, !insn.addr !5978
  br i1 %31, label %dec_label_pc_4584f3, label %dec_label_pc_4584ce, !insn.addr !5978

dec_label_pc_4584ce:                              ; preds = %dec_label_pc_4584ca
  %32 = inttoptr i32 %ecx.0.reload to i16*, !insn.addr !5979
  %33 = load i16, i16* %32, align 2, !insn.addr !5979
  %34 = icmp eq i16 %33, 10, !insn.addr !5980
  %35 = icmp eq i1 %34, false, !insn.addr !5981
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !5981
  br i1 %35, label %dec_label_pc_4584e6, label %dec_label_pc_4584d9, !insn.addr !5981

dec_label_pc_4584d9:                              ; preds = %dec_label_pc_4584ce
  %36 = load i32, i32* %23, align 4, !insn.addr !5982
  %37 = add i32 %36, 2, !insn.addr !5982
  store i32 %37, i32* %23, align 4, !insn.addr !5982
  store i32 13, i32* %29, align 4, !insn.addr !5983
  %38 = inttoptr i32 %esi.0.reload to i16*, !insn.addr !5984
  store i16 13, i16* %38, align 2, !insn.addr !5984
  %39 = add i32 %esi.0.reload, 2, !insn.addr !5985
  store i32 %39, i32* %esi.1.reg2mem, !insn.addr !5985
  br label %dec_label_pc_4584e6, !insn.addr !5985

dec_label_pc_4584e6:                              ; preds = %dec_label_pc_4584d9, %dec_label_pc_4584ce
  %40 = add i32 %ecx.0.reload, 2, !insn.addr !5986
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %41 = inttoptr i32 %esi.1.reload to i16*, !insn.addr !5987
  store i16 %33, i16* %41, align 2, !insn.addr !5987
  %42 = add i32 %esi.1.reload, 2, !insn.addr !5988
  %43 = icmp ult i32 %42, %24, !insn.addr !5989
  store i32 %40, i32* %ecx.0.reg2mem, !insn.addr !5990
  store i32 %42, i32* %esi.0.reg2mem, !insn.addr !5990
  store i32 %40, i32* %ecx.1.reg2mem, !insn.addr !5990
  store i32 %42, i32* %esi.2.reg2mem, !insn.addr !5990
  br i1 %43, label %dec_label_pc_4584ca, label %dec_label_pc_4584f3, !insn.addr !5990

dec_label_pc_4584f3:                              ; preds = %dec_label_pc_4584e6, %dec_label_pc_4584ca
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %44 = sub i32 %esi.2.reload, %21, !insn.addr !5991
  store i32 0, i32* %29, align 4, !insn.addr !5992
  %45 = and i32 %44, -2, !insn.addr !5993
  %46 = add i32 %esp.3.reload, -8, !insn.addr !5994
  %47 = inttoptr i32 %46 to i32*, !insn.addr !5994
  store i32 %25, i32* %47, align 4, !insn.addr !5994
  %48 = add i32 %esp.3.reload, -12, !insn.addr !5995
  %49 = inttoptr i32 %48 to i32*, !insn.addr !5995
  store i32 %45, i32* %49, align 4, !insn.addr !5995
  %50 = add i32 %esp.3.reload, -16, !insn.addr !5996
  %51 = inttoptr i32 %50 to i32*, !insn.addr !5996
  store i32 %21, i32* %51, align 4, !insn.addr !5996
  %52 = add i32 %esp.3.reload, -20, !insn.addr !5997
  %53 = inttoptr i32 %52 to i32*, !insn.addr !5997
  store i32 %13, i32* %53, align 4, !insn.addr !5997
  %54 = inttoptr i32 %ecx.1.reload to i32*, !insn.addr !5998
  %55 = call i1 @WriteFile(i32* %54, i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, %_OVERLAPPED* bitcast (i32* @80 to %_OVERLAPPED*)), !insn.addr !5998
  %56 = icmp eq i1 %55, false, !insn.addr !5999
  br i1 %56, label %dec_label_pc_45853f, label %dec_label_pc_458523, !insn.addr !6000

dec_label_pc_458523:                              ; preds = %dec_label_pc_4584f3
  %57 = load i32, i32* %written_-5136, align 4, !insn.addr !6001
  %58 = load i32, i32* %27, align 4, !insn.addr !6002
  %59 = add i32 %58, %57, !insn.addr !6002
  store i32 %59, i32* %27, align 4, !insn.addr !6002
  %60 = icmp ult i32 %57, %45, !insn.addr !6003
  store i32 %ecx.1.reload, i32* %ecx.2.reg2mem, !insn.addr !6004
  store i32 %52, i32* %esp.3.reg2mem, !insn.addr !6004
  br i1 %60, label %dec_label_pc_458547, label %dec_label_pc_458539, !insn.addr !6004

dec_label_pc_458539:                              ; preds = %dec_label_pc_458523, %dec_label_pc_45846f
  %ecx.2.reload = load i32, i32* %ecx.2.reg2mem
  %61 = icmp ult i32 %ecx.2.reload, %14, !insn.addr !6005
  br i1 %61, label %dec_label_pc_4584c4, label %dec_label_pc_458547, !insn.addr !6006

dec_label_pc_45853f:                              ; preds = %dec_label_pc_4584f3
  %62 = call i32 @GetLastError(), !insn.addr !6007
  store i32 %62, i32* %15, align 4, !insn.addr !6008
  br label %dec_label_pc_458547, !insn.addr !6008

dec_label_pc_458547:                              ; preds = %dec_label_pc_458539, %dec_label_pc_458523, %dec_label_pc_45853f
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !6009
  ret %"`anonymous-namespace'::write_result.736" { i32 ptrtoint (i32* @80 to i32) }, !insn.addr !6010
}

define %"`anonymous-namespace'::write_result.737" @write_text_utf8_nolock(i32 %fh, i8* %buffer, i32 %buffer_size) local_unnamed_addr {
dec_label_pc_458592:
  %esp.4.reg2mem = alloca i32, !insn.addr !6011
  %ebx.0.reg2mem = alloca i32, !insn.addr !6011
  %edi.2.reg2mem = alloca i32, !insn.addr !6011
  %eax.2.reg2mem = alloca i32, !insn.addr !6011
  %eax.1.reg2mem = alloca i32, !insn.addr !6011
  %edi.1.reg2mem = alloca i32, !insn.addr !6011
  %eax.0.reg2mem = alloca i32, !insn.addr !6011
  %edi.0.reg2mem = alloca i32, !insn.addr !6011
  %esp.0.reg2mem = alloca i32, !insn.addr !6011
  %0 = call i1 @__decompiler_undefined_function_6()
  %1 = ptrtoint i8* %buffer to i32
  %written_-5144 = alloca i32, align 4
  %utf8_buf_-5132 = alloca [3413 x i8], align 1
  %utf16_buf_-1716 = alloca [853 x i16], align 2
  %2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  call void @_chkstk(), !insn.addr !6012
  %3 = and i32 %1, 63, !insn.addr !6013
  %4 = sdiv i32 %1, 64, !insn.addr !6014
  %narrow = mul nuw nsw i32 %3, 56
  %5 = mul i32 %4, 4, !insn.addr !6015
  %6 = add i32 %5, ptrtoint (i32* @__pioinfo to i32), !insn.addr !6015
  %7 = inttoptr i32 %6 to i32*, !insn.addr !6015
  %8 = load i32, i32* %7, align 4, !insn.addr !6015
  %9 = add nuw nsw i32 %narrow, 24, !insn.addr !6016
  %10 = add i32 %9, %8, !insn.addr !6016
  %11 = inttoptr i32 %10 to i32*, !insn.addr !6016
  %12 = load i32, i32* %11, align 4, !insn.addr !6016
  %13 = add i32 %2, %buffer_size, !insn.addr !6017
  %14 = inttoptr i32 %fh to i32*, !insn.addr !6018
  store i32 0, i32* %14, align 4, !insn.addr !6018
  %15 = select i1 %0, i32 -4, i32 4, !insn.addr !6018
  %16 = add i32 %15, %fh, !insn.addr !6018
  %17 = inttoptr i32 %16 to i32*, !insn.addr !6019
  store i32 0, i32* %17, align 4, !insn.addr !6019
  %18 = add i32 %16, %15, !insn.addr !6019
  %19 = inttoptr i32 %18 to i32*, !insn.addr !6020
  store i32 0, i32* %19, align 4, !insn.addr !6020
  %20 = icmp ugt i32 %13, %buffer_size, !insn.addr !6021
  %21 = icmp eq i1 %20, false, !insn.addr !6022
  br i1 %21, label %dec_label_pc_4586b3, label %dec_label_pc_4585ef.preheader, !insn.addr !6022

dec_label_pc_4585ef.preheader:                    ; preds = %dec_label_pc_458592
  %22 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !6023
  %23 = ptrtoint [853 x i16]* %utf16_buf_-1716 to i32, !insn.addr !6024
  %24 = ptrtoint i32* %stack_var_-12 to i32
  %25 = ptrtoint [3413 x i8]* %utf8_buf_-5132 to i32, !insn.addr !6025
  %26 = ptrtoint i32* %written_-5144 to i32
  %27 = add i32 %fh, 4
  %28 = inttoptr i32 %27 to i32*
  store i32 %22, i32* %esp.0.reg2mem
  store i32 %buffer_size, i32* %edi.0.reg2mem
  br label %dec_label_pc_4585ef

dec_label_pc_4585ef:                              ; preds = %dec_label_pc_4585ef.preheader, %dec_label_pc_458695
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %29 = add i32 %esp.0.reload, -4
  %30 = inttoptr i32 %29 to i32*
  store i32 %23, i32* %eax.0.reg2mem, !insn.addr !6024
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !6024
  br label %dec_label_pc_4585fb, !insn.addr !6024

dec_label_pc_4585fb:                              ; preds = %dec_label_pc_458613, %dec_label_pc_4585ef
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %31 = icmp ult i32 %edi.1.reload, %13, !insn.addr !6026
  %32 = icmp eq i1 %31, false, !insn.addr !6027
  store i32 %eax.0.reload, i32* %eax.2.reg2mem, !insn.addr !6027
  store i32 %edi.1.reload, i32* %edi.2.reg2mem, !insn.addr !6027
  br i1 %32, label %dec_label_pc_458620, label %dec_label_pc_4585ff, !insn.addr !6027

dec_label_pc_4585ff:                              ; preds = %dec_label_pc_4585fb
  %33 = inttoptr i32 %edi.1.reload to i16*, !insn.addr !6028
  %34 = load i16, i16* %33, align 2, !insn.addr !6028
  %35 = icmp eq i16 %34, 10, !insn.addr !6029
  %36 = icmp eq i1 %35, false, !insn.addr !6030
  store i32 %eax.0.reload, i32* %eax.1.reg2mem, !insn.addr !6030
  br i1 %36, label %dec_label_pc_458613, label %dec_label_pc_45860a, !insn.addr !6030

dec_label_pc_45860a:                              ; preds = %dec_label_pc_4585ff
  store i32 13, i32* %30, align 4, !insn.addr !6031
  %37 = inttoptr i32 %eax.0.reload to i16*, !insn.addr !6032
  store i16 13, i16* %37, align 2, !insn.addr !6032
  %38 = add i32 %eax.0.reload, 2, !insn.addr !6033
  store i32 %38, i32* %eax.1.reg2mem, !insn.addr !6033
  br label %dec_label_pc_458613, !insn.addr !6033

dec_label_pc_458613:                              ; preds = %dec_label_pc_45860a, %dec_label_pc_4585ff
  %39 = add i32 %edi.1.reload, 2, !insn.addr !6034
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %40 = inttoptr i32 %eax.1.reload to i16*, !insn.addr !6035
  store i16 %34, i16* %40, align 2, !insn.addr !6035
  %41 = add i32 %eax.1.reload, 2, !insn.addr !6036
  %42 = icmp ult i32 %41, %24, !insn.addr !6037
  store i32 %41, i32* %eax.0.reg2mem, !insn.addr !6038
  store i32 %39, i32* %edi.1.reg2mem, !insn.addr !6038
  store i32 %41, i32* %eax.2.reg2mem, !insn.addr !6038
  store i32 %39, i32* %edi.2.reg2mem, !insn.addr !6038
  br i1 %42, label %dec_label_pc_4585fb, label %dec_label_pc_458620, !insn.addr !6038

dec_label_pc_458620:                              ; preds = %dec_label_pc_458613, %dec_label_pc_4585fb
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  store i32 0, i32* %30, align 4, !insn.addr !6039
  %43 = add i32 %esp.0.reload, -8, !insn.addr !6040
  %44 = inttoptr i32 %43 to i32*, !insn.addr !6040
  store i32 0, i32* %44, align 4, !insn.addr !6040
  %45 = add i32 %esp.0.reload, -12, !insn.addr !6041
  %46 = inttoptr i32 %45 to i32*, !insn.addr !6041
  store i32 3413, i32* %46, align 4, !insn.addr !6041
  %47 = add i32 %esp.0.reload, -16, !insn.addr !6025
  %48 = inttoptr i32 %47 to i32*, !insn.addr !6025
  store i32 %25, i32* %48, align 4, !insn.addr !6025
  %49 = sub i32 %eax.2.reload, %23, !insn.addr !6042
  %50 = sdiv i32 %49, 2, !insn.addr !6043
  %51 = add i32 %esp.0.reload, -20, !insn.addr !6044
  %52 = inttoptr i32 %51 to i32*, !insn.addr !6044
  store i32 %50, i32* %52, align 4, !insn.addr !6044
  %53 = add i32 %esp.0.reload, -24, !insn.addr !6045
  %54 = inttoptr i32 %53 to i32*, !insn.addr !6045
  store i32 %23, i32* %54, align 4, !insn.addr !6045
  %55 = add i32 %esp.0.reload, -28, !insn.addr !6046
  %56 = inttoptr i32 %55 to i32*, !insn.addr !6046
  store i32 0, i32* %56, align 4, !insn.addr !6046
  %57 = add i32 %esp.0.reload, -32, !insn.addr !6047
  %58 = inttoptr i32 %57 to i32*, !insn.addr !6047
  store i32 65001, i32* %58, align 4, !insn.addr !6047
  %59 = call i32 @function_404601(), !insn.addr !6048
  %60 = icmp eq i32 %59, 0, !insn.addr !6049
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !6050
  store i32 %esp.0.reload, i32* %esp.4.reg2mem, !insn.addr !6050
  br i1 %60, label %dec_label_pc_4586ab, label %dec_label_pc_458660, !insn.addr !6050

dec_label_pc_458660:                              ; preds = %dec_label_pc_458620, %dec_label_pc_458685
  %esp.4.reload = load i32, i32* %esp.4.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %61 = add i32 %esp.4.reload, -4, !insn.addr !6051
  %62 = inttoptr i32 %61 to i32*, !insn.addr !6051
  store i32 0, i32* %62, align 4, !insn.addr !6051
  %63 = sub i32 %59, %ebx.0.reload, !insn.addr !6052
  %64 = add i32 %esp.4.reload, -8, !insn.addr !6053
  %65 = inttoptr i32 %64 to i32*, !insn.addr !6053
  store i32 %26, i32* %65, align 4, !insn.addr !6053
  %66 = add i32 %esp.4.reload, -12, !insn.addr !6054
  %67 = inttoptr i32 %66 to i32*, !insn.addr !6054
  store i32 %63, i32* %67, align 4, !insn.addr !6054
  %68 = add i32 %ebx.0.reload, %25, !insn.addr !6055
  %69 = add i32 %esp.4.reload, -16, !insn.addr !6056
  %70 = inttoptr i32 %69 to i32*, !insn.addr !6056
  store i32 %68, i32* %70, align 4, !insn.addr !6056
  %71 = add i32 %esp.4.reload, -20, !insn.addr !6057
  %72 = inttoptr i32 %71 to i32*, !insn.addr !6057
  store i32 %12, i32* %72, align 4, !insn.addr !6057
  %73 = call i1 @WriteFile(i32* nonnull @80, i32* nonnull @80, i32 ptrtoint (i32* @80 to i32), i32* nonnull @80, %_OVERLAPPED* bitcast (i32* @80 to %_OVERLAPPED*)), !insn.addr !6058
  %74 = icmp eq i1 %73, false, !insn.addr !6059
  br i1 %74, label %dec_label_pc_4586ab, label %dec_label_pc_458685, !insn.addr !6060

dec_label_pc_458685:                              ; preds = %dec_label_pc_458660
  %75 = load i32, i32* %written_-5144, align 4, !insn.addr !6061
  %76 = add i32 %75, %ebx.0.reload, !insn.addr !6061
  %77 = icmp ult i32 %76, %59, !insn.addr !6062
  store i32 %76, i32* %ebx.0.reg2mem, !insn.addr !6063
  store i32 %71, i32* %esp.4.reg2mem, !insn.addr !6063
  br i1 %77, label %dec_label_pc_458660, label %dec_label_pc_458695, !insn.addr !6063

dec_label_pc_458695:                              ; preds = %dec_label_pc_458685
  %78 = sub i32 %edi.2.reload, %buffer_size, !insn.addr !6064
  store i32 %78, i32* %28, align 4, !insn.addr !6065
  %79 = icmp ult i32 %edi.2.reload, %13, !insn.addr !6066
  store i32 %71, i32* %esp.0.reg2mem, !insn.addr !6067
  store i32 %edi.2.reload, i32* %edi.0.reg2mem, !insn.addr !6067
  br i1 %79, label %dec_label_pc_4585ef, label %dec_label_pc_4586b3, !insn.addr !6067

dec_label_pc_4586ab:                              ; preds = %dec_label_pc_458620, %dec_label_pc_458660
  %80 = call i32 @GetLastError(), !insn.addr !6068
  store i32 %80, i32* %14, align 4, !insn.addr !6069
  br label %dec_label_pc_4586b3, !insn.addr !6069

dec_label_pc_4586b3:                              ; preds = %dec_label_pc_458695, %dec_label_pc_4586ab, %dec_label_pc_458592
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !6070
  ret %"`anonymous-namespace'::write_result.737" { i32 ptrtoint (i32* @80 to i32) }, !insn.addr !6071
}

define i32 @_write(i32 %fh, i8* %buffer, i32 %size) local_unnamed_addr {
dec_label_pc_458725:
  %storemerge.reg2mem = alloca i32, !insn.addr !6072
  %edi.0.reg2mem = alloca i32, !insn.addr !6072
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a8d8, i32 16), !insn.addr !6073
  %2 = add i32 %0, 8, !insn.addr !6074
  %3 = inttoptr i32 %2 to i32*, !insn.addr !6074
  %4 = load i32, i32* %3, align 4, !insn.addr !6074
  %5 = icmp eq i32 %4, -2, !insn.addr !6075
  %6 = icmp eq i1 %5, false, !insn.addr !6076
  br i1 %6, label %dec_label_pc_458751, label %dec_label_pc_458739, !insn.addr !6076

dec_label_pc_458739:                              ; preds = %dec_label_pc_458725
  %7 = call i32* @__doserrno(), !insn.addr !6077
  store i32 0, i32* %7, align 4, !insn.addr !6078
  %8 = call i32* @_errno(), !insn.addr !6079
  store i32 9, i32* %8, align 4, !insn.addr !6080
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !6081
  br label %dec_label_pc_458807, !insn.addr !6081

dec_label_pc_458751:                              ; preds = %dec_label_pc_458725
  %9 = icmp slt i32 %4, 0, !insn.addr !6082
  br i1 %9, label %dec_label_pc_4587ec, label %dec_label_pc_458759, !insn.addr !6083

dec_label_pc_458759:                              ; preds = %dec_label_pc_458751
  %10 = load i32, i32* @_nhandle, align 4, !insn.addr !6084
  %11 = icmp ult i32 %4, %10, !insn.addr !6084
  %12 = icmp eq i1 %11, false, !insn.addr !6085
  br i1 %12, label %dec_label_pc_4587ec, label %dec_label_pc_458765, !insn.addr !6085

dec_label_pc_458765:                              ; preds = %dec_label_pc_458759
  %13 = udiv i32 %4, 64
  %14 = and i32 %4, 63, !insn.addr !6086
  %narrow = mul nuw nsw i32 %14, 56
  %15 = add i32 %0, -32, !insn.addr !6087
  %16 = inttoptr i32 %15 to i32*, !insn.addr !6087
  store i32 %narrow, i32* %16, align 4, !insn.addr !6087
  %17 = mul i32 %13, 4, !insn.addr !6088
  %18 = add i32 %17, ptrtoint (i32* @__pioinfo to i32), !insn.addr !6088
  %19 = inttoptr i32 %18 to i32*, !insn.addr !6088
  %20 = load i32, i32* %19, align 4, !insn.addr !6088
  %21 = add nuw nsw i32 %narrow, 40, !insn.addr !6089
  %22 = add i32 %21, %20, !insn.addr !6089
  %23 = inttoptr i32 %22 to i8*, !insn.addr !6089
  %24 = load i8, i8* %23, align 1, !insn.addr !6089
  %25 = and i8 %24, 1, !insn.addr !6089
  %26 = icmp eq i8 %25, 0, !insn.addr !6089
  br i1 %26, label %dec_label_pc_4587ec, label %dec_label_pc_458783, !insn.addr !6090

dec_label_pc_458783:                              ; preds = %dec_label_pc_458765
  %27 = call i32 @function_40132f(), !insn.addr !6091
  %28 = add i32 %0, -28, !insn.addr !6092
  %29 = inttoptr i32 %28 to i32*, !insn.addr !6092
  store i32 -1, i32* %29, align 4, !insn.addr !6092
  %30 = add i32 %0, -4, !insn.addr !6093
  %31 = inttoptr i32 %30 to i32*, !insn.addr !6093
  store i32 0, i32* %31, align 4, !insn.addr !6093
  %32 = load i32, i32* %19, align 4, !insn.addr !6094
  %33 = load i32, i32* %16, align 4, !insn.addr !6095
  %34 = add i32 %32, 40, !insn.addr !6096
  %35 = add i32 %34, %33, !insn.addr !6096
  %36 = inttoptr i32 %35 to i8*, !insn.addr !6096
  %37 = load i8, i8* %36, align 1, !insn.addr !6096
  %38 = and i8 %37, 1, !insn.addr !6096
  %39 = icmp eq i8 %38, 0, !insn.addr !6096
  %40 = icmp eq i1 %39, false, !insn.addr !6097
  br i1 %40, label %dec_label_pc_4587ba, label %dec_label_pc_4587a5, !insn.addr !6097

dec_label_pc_4587a5:                              ; preds = %dec_label_pc_458783
  %41 = call i32* @_errno(), !insn.addr !6098
  store i32 9, i32* %41, align 4, !insn.addr !6099
  %42 = call i32* @__doserrno(), !insn.addr !6100
  store i32 0, i32* %42, align 4, !insn.addr !6101
  store i32 -1, i32* %edi.0.reg2mem, !insn.addr !6102
  br label %dec_label_pc_4587ce, !insn.addr !6102

dec_label_pc_4587ba:                              ; preds = %dec_label_pc_458783
  %43 = add i32 %0, 16, !insn.addr !6103
  %44 = inttoptr i32 %43 to i32*, !insn.addr !6103
  %45 = load i32, i32* %44, align 4, !insn.addr !6103
  %46 = add i32 %0, 12, !insn.addr !6104
  %47 = inttoptr i32 %46 to i32*, !insn.addr !6104
  %48 = load i32, i32* %47, align 4, !insn.addr !6104
  %49 = inttoptr i32 %48 to i8*, !insn.addr !6104
  %50 = call i32 @_write_nolock(i32 %4, i8* %49, i32 %45), !insn.addr !6105
  store i32 %50, i32* %29, align 4, !insn.addr !6106
  store i32 %50, i32* %edi.0.reg2mem, !insn.addr !6106
  br label %dec_label_pc_4587ce, !insn.addr !6106

dec_label_pc_4587ce:                              ; preds = %dec_label_pc_4587ba, %dec_label_pc_4587a5
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  store i32 -2, i32* %31, align 4, !insn.addr !6107
  %51 = call i32 @function_4587e4(), !insn.addr !6108
  store i32 %edi.0.reload, i32* %storemerge.reg2mem, !insn.addr !6109
  br label %dec_label_pc_458807, !insn.addr !6109

dec_label_pc_4587ec:                              ; preds = %dec_label_pc_458765, %dec_label_pc_458759, %dec_label_pc_458751
  %52 = call i32* @__doserrno(), !insn.addr !6110
  store i32 0, i32* %52, align 4, !insn.addr !6111
  %53 = call i32* @_errno(), !insn.addr !6112
  store i32 9, i32* %53, align 4, !insn.addr !6113
  call void @_invalid_parameter_noinfo(), !insn.addr !6114
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !6114
  br label %dec_label_pc_458807, !insn.addr !6114

dec_label_pc_458807:                              ; preds = %dec_label_pc_458739, %dec_label_pc_4587ec, %dec_label_pc_4587ce
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %54 = add i32 %0, -16, !insn.addr !6115
  %55 = inttoptr i32 %54 to i32*, !insn.addr !6115
  %56 = load i32, i32* %55, align 4, !insn.addr !6115
  call void @__writefsdword(i32 0, i32 %56), !insn.addr !6116
  ret i32 %storemerge.reload, !insn.addr !6117
}

define i32 @function_4587e4() local_unnamed_addr {
dec_label_pc_4587e4:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_4011db(i32 %0), !insn.addr !6118
  ret i32 %1, !insn.addr !6119
}

define i32 @_write_nolock(i32 %fh, i8* %buffer, i32 %buffer_size) local_unnamed_addr {
dec_label_pc_458853:
  %eax.2.reg2mem = alloca i32, !insn.addr !6120
  %esp.3.reg2mem = alloca i32, !insn.addr !6120
  %ebx.4.ptr.reg2mem = alloca i8*, !insn.addr !6120
  %esp.2.reg2mem = alloca i32, !insn.addr !6120
  %ebx.3.reg2mem = alloca i32, !insn.addr !6120
  %storemerge3.reg2mem = alloca i32, !insn.addr !6120
  %esp.1.reg2mem = alloca i32, !insn.addr !6120
  %ebx.2.reg2mem = alloca i32, !insn.addr !6120
  %ebx.1.reg2mem = alloca i32, !insn.addr !6120
  %eax.1.reg2mem = alloca i32, !insn.addr !6120
  %0 = call i1 @__decompiler_undefined_function_6()
  %1 = call i32 @__decompiler_undefined_function_0()
  %result_-28 = alloca %"`anonymous-namespace'::write_result.481", align 8
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %result_-32 = alloca %"`anonymous-namespace'::write_result.479", align 8
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %2 = icmp eq i32 %buffer_size, 0, !insn.addr !6121
  store i32 0, i32* %eax.2.reg2mem, !insn.addr !6122
  br i1 %2, label %dec_label_pc_458a30, label %dec_label_pc_458875, !insn.addr !6122

dec_label_pc_458875:                              ; preds = %dec_label_pc_458853
  %3 = icmp eq i8* %buffer, null, !insn.addr !6123
  %4 = icmp eq i1 %3, false, !insn.addr !6124
  br i1 %4, label %dec_label_pc_458899, label %dec_label_pc_458879, !insn.addr !6124

dec_label_pc_458879:                              ; preds = %dec_label_pc_458899, %dec_label_pc_458875
  %5 = call i32* @__doserrno(), !insn.addr !6125
  store i32 0, i32* %5, align 4, !insn.addr !6126
  %6 = call i32* @_errno(), !insn.addr !6127
  store i32 22, i32* %6, align 4, !insn.addr !6128
  call void @_invalid_parameter_noinfo(), !insn.addr !6129
  store i32 -1, i32* %eax.2.reg2mem, !insn.addr !6129
  br label %dec_label_pc_458a30, !insn.addr !6129

dec_label_pc_458899:                              ; preds = %dec_label_pc_458875
  %7 = sdiv i32 %fh, 64, !insn.addr !6130
  %8 = and i32 %fh, 63, !insn.addr !6131
  %narrow = mul nuw nsw i32 %8, 56
  %9 = mul i32 %7, 4, !insn.addr !6132
  %10 = add i32 %9, ptrtoint (i32* @__pioinfo to i32), !insn.addr !6132
  %11 = inttoptr i32 %10 to i32*, !insn.addr !6132
  %12 = load i32, i32* %11, align 4, !insn.addr !6132
  %13 = add nuw nsw i32 %narrow, 41, !insn.addr !6133
  %14 = add i32 %13, %12, !insn.addr !6133
  %15 = inttoptr i32 %14 to i8*, !insn.addr !6133
  %16 = load i8, i8* %15, align 1, !insn.addr !6133
  %17 = icmp ne i8 %16, 2, !insn.addr !6134
  %18 = icmp eq i8 %16, 1, !insn.addr !6135
  %19 = icmp eq i1 %18, false, !insn.addr !6136
  %or.cond = icmp eq i1 %17, %19
  %20 = and i32 %buffer_size, 1
  %21 = icmp eq i32 %20, 0, !insn.addr !6137
  %or.cond6 = or i1 %21, %or.cond
  br i1 %or.cond6, label %dec_label_pc_4588c9, label %dec_label_pc_458879, !insn.addr !6138

dec_label_pc_4588c9:                              ; preds = %dec_label_pc_458899
  %22 = add nuw nsw i32 %narrow, 40
  %23 = add i32 %12, %22, !insn.addr !6139
  %24 = inttoptr i32 %23 to i8*, !insn.addr !6139
  %25 = load i8, i8* %24, align 1, !insn.addr !6139
  %26 = and i8 %25, 32, !insn.addr !6139
  %27 = icmp eq i8 %26, 0, !insn.addr !6139
  br i1 %27, label %dec_label_pc_4588df, label %dec_label_pc_4588d0, !insn.addr !6140

dec_label_pc_4588d0:                              ; preds = %dec_label_pc_4588c9
  store i32 %fh, i32* %stack_var_-72, align 4, !insn.addr !6141
  %28 = call i64 @_lseeki64_nolock(i32 %fh, i64 0, i32 0), !insn.addr !6142
  br label %dec_label_pc_4588df, !insn.addr !6143

dec_label_pc_4588df:                              ; preds = %dec_label_pc_4588d0, %dec_label_pc_4588c9
  %29 = ptrtoint i32* %stack_var_-56 to i32, !insn.addr !6144
  %30 = ptrtoint %"`anonymous-namespace'::write_result.479"* %result_-32 to i32, !insn.addr !6145
  store %"`anonymous-namespace'::write_result.479" { i32 0, i32 undef, i32 undef }, %"`anonymous-namespace'::write_result.479"* %result_-32, align 8, !insn.addr !6146
  %31 = select i1 %0, i32 -4, i32 4, !insn.addr !6146
  %32 = add i32 %31, %30, !insn.addr !6146
  %33 = inttoptr i32 %32 to i32*, !insn.addr !6147
  store i32 0, i32* %33, align 4, !insn.addr !6147
  %34 = add i32 %32, %31, !insn.addr !6147
  %35 = inttoptr i32 %34 to i32*, !insn.addr !6148
  store i32 0, i32* %35, align 8, !insn.addr !6148
  %36 = call i1 @write_requires_double_translation_nolock(i32 %fh), !insn.addr !6149
  %37 = icmp eq i1 %36, false, !insn.addr !6150
  br i1 %37, label %dec_label_pc_458931, label %dec_label_pc_4588f2, !insn.addr !6151

dec_label_pc_4588f2:                              ; preds = %dec_label_pc_4588df
  %38 = icmp eq i8 %16, 0, !insn.addr !6152
  br i1 %38, label %dec_label_pc_45891b, label %dec_label_pc_4588f6, !insn.addr !6153

dec_label_pc_4588f6:                              ; preds = %dec_label_pc_4588f2
  %39 = add i8 %16, -1, !insn.addr !6154
  %40 = ptrtoint i8* %buffer to i32, !insn.addr !6155
  %41 = icmp ult i8 %39, 2
  store i32 %40, i32* %ebx.3.reg2mem, !insn.addr !6156
  store i32 %29, i32* %esp.2.reg2mem, !insn.addr !6156
  br i1 %41, label %dec_label_pc_458904, label %dec_label_pc_4589c0, !insn.addr !6156

dec_label_pc_458904:                              ; preds = %dec_label_pc_4588f6
  %42 = bitcast i32* %stack_var_-44 to i8*, !insn.addr !6157
  %43 = call %"`anonymous-namespace'::write_result.734" @write_double_translated_unicode_nolock(i8* nonnull %42, i32 %40), !insn.addr !6157
  %44 = extractvalue %"`anonymous-namespace'::write_result.734" %43, 0, !insn.addr !6157
  store i32 %40, i32* %ebx.2.reg2mem, !insn.addr !6158
  store i32 %29, i32* %esp.1.reg2mem, !insn.addr !6158
  store i32 %44, i32* %storemerge3.reg2mem, !insn.addr !6158
  br label %dec_label_pc_4589ba, !insn.addr !6158

dec_label_pc_45891b:                              ; preds = %dec_label_pc_4588f2
  %45 = ptrtoint i8* %buffer to i32, !insn.addr !6159
  %46 = ptrtoint i32* %stack_var_-44 to i32, !insn.addr !6160
  store i32 %46, i32* %stack_var_-72, align 4, !insn.addr !6160
  %47 = inttoptr i32 %fh to i8*, !insn.addr !6161
  %48 = call %"`anonymous-namespace'::write_result.733" @write_double_translated_ansi_nolock(i32 %46, i8* %47, i32 %45), !insn.addr !6161
  %49 = extractvalue %"`anonymous-namespace'::write_result.733" %48, 0, !insn.addr !6161
  store i32 %49, i32* %eax.1.reg2mem, !insn.addr !6161
  store i32 %45, i32* %ebx.1.reg2mem, !insn.addr !6161
  br label %dec_label_pc_45892c, !insn.addr !6161

dec_label_pc_45892c:                              ; preds = %dec_label_pc_45897a, %dec_label_pc_45896a, %dec_label_pc_45895a, %dec_label_pc_45891b
  %ebx.1.reload = load i32, i32* %ebx.1.reg2mem
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %esp.0 = ptrtoint i32* %stack_var_-72 to i32
  %50 = add i32 %esp.0, 16, !insn.addr !6162
  store i32 %ebx.1.reload, i32* %ebx.2.reg2mem, !insn.addr !6163
  store i32 %50, i32* %esp.1.reg2mem, !insn.addr !6163
  store i32 %eax.1.reload, i32* %storemerge3.reg2mem, !insn.addr !6163
  br label %dec_label_pc_4589ba, !insn.addr !6163

dec_label_pc_458931:                              ; preds = %dec_label_pc_4588df
  %51 = load i32, i32* %11, align 4, !insn.addr !6164
  %52 = add i32 %51, %22, !insn.addr !6165
  %53 = inttoptr i32 %52 to i8*, !insn.addr !6165
  %54 = load i8, i8* %53, align 1, !insn.addr !6165
  %55 = icmp slt i8 %54, 0, !insn.addr !6165
  %56 = icmp eq i1 %55, false, !insn.addr !6166
  br i1 %56, label %dec_label_pc_45898a, label %dec_label_pc_458945, !insn.addr !6166

dec_label_pc_458945:                              ; preds = %dec_label_pc_458931
  %57 = ptrtoint i8* %buffer to i32, !insn.addr !6167
  %58 = icmp eq i8 %16, 0, !insn.addr !6168
  br i1 %58, label %dec_label_pc_45897a, label %dec_label_pc_458950, !insn.addr !6169

dec_label_pc_458950:                              ; preds = %dec_label_pc_458945
  %59 = sext i8 %16 to i32, !insn.addr !6170
  %60 = add nsw i32 %59, -1, !insn.addr !6171
  %61 = icmp eq i32 %60, 0, !insn.addr !6171
  br i1 %61, label %dec_label_pc_45896a, label %dec_label_pc_458955, !insn.addr !6172

dec_label_pc_458955:                              ; preds = %dec_label_pc_458950
  %62 = icmp eq i32 %60, 1, !insn.addr !6173
  %63 = icmp eq i1 %62, false, !insn.addr !6174
  store i8* %buffer, i8** %ebx.4.ptr.reg2mem, !insn.addr !6174
  store i32 %29, i32* %esp.3.reg2mem, !insn.addr !6174
  br i1 %63, label %dec_label_pc_4589c6, label %dec_label_pc_45895a, !insn.addr !6174

dec_label_pc_45895a:                              ; preds = %dec_label_pc_458955
  %64 = ptrtoint i32* %stack_var_-44 to i32, !insn.addr !6175
  store i32 %64, i32* %stack_var_-72, align 4, !insn.addr !6175
  %65 = inttoptr i32 %fh to i8*, !insn.addr !6176
  %66 = call %"`anonymous-namespace'::write_result.736" @write_text_utf16le_nolock(i32 %64, i8* %65, i32 %57), !insn.addr !6176
  %67 = extractvalue %"`anonymous-namespace'::write_result.736" %66, 0, !insn.addr !6176
  store i32 %67, i32* %eax.1.reg2mem, !insn.addr !6177
  store i32 %57, i32* %ebx.1.reg2mem, !insn.addr !6177
  br label %dec_label_pc_45892c, !insn.addr !6177

dec_label_pc_45896a:                              ; preds = %dec_label_pc_458950
  %68 = ptrtoint i32* %stack_var_-44 to i32, !insn.addr !6178
  store i32 %68, i32* %stack_var_-72, align 4, !insn.addr !6178
  %69 = inttoptr i32 %fh to i8*, !insn.addr !6179
  %70 = call %"`anonymous-namespace'::write_result.737" @write_text_utf8_nolock(i32 %68, i8* %69, i32 %57), !insn.addr !6179
  %71 = extractvalue %"`anonymous-namespace'::write_result.737" %70, 0, !insn.addr !6179
  store i32 %71, i32* %eax.1.reg2mem, !insn.addr !6180
  store i32 %57, i32* %ebx.1.reg2mem, !insn.addr !6180
  br label %dec_label_pc_45892c, !insn.addr !6180

dec_label_pc_45897a:                              ; preds = %dec_label_pc_458945
  %72 = ptrtoint i32* %stack_var_-44 to i32, !insn.addr !6181
  store i32 %72, i32* %stack_var_-72, align 4, !insn.addr !6181
  %73 = inttoptr i32 %fh to i8*, !insn.addr !6182
  %74 = call %"`anonymous-namespace'::write_result.735" @write_text_ansi_nolock(i32 %72, i8* %73, i32 %57), !insn.addr !6182
  %75 = extractvalue %"`anonymous-namespace'::write_result.735" %74, 0, !insn.addr !6182
  store i32 %75, i32* %eax.1.reg2mem, !insn.addr !6183
  store i32 %57, i32* %ebx.1.reg2mem, !insn.addr !6183
  br label %dec_label_pc_45892c, !insn.addr !6183

dec_label_pc_45898a:                              ; preds = %dec_label_pc_458931
  %76 = add nuw nsw i32 %narrow, 24, !insn.addr !6184
  %77 = add i32 %76, %51, !insn.addr !6184
  %78 = inttoptr i32 %77 to i32*, !insn.addr !6184
  %79 = load i32, i32* %78, align 4, !insn.addr !6184
  %80 = ptrtoint i32* %stack_var_-44 to i32, !insn.addr !6185
  %81 = ptrtoint i8* %buffer to i32, !insn.addr !6186
  store i32 0, i32* %stack_var_-44, align 4, !insn.addr !6187
  %82 = add i32 %31, %80, !insn.addr !6187
  %83 = inttoptr i32 %82 to i32*, !insn.addr !6188
  store i32 0, i32* %83, align 4, !insn.addr !6188
  %84 = add i32 %82, %31, !insn.addr !6188
  %85 = inttoptr i32 %84 to i32*, !insn.addr !6189
  store i32 0, i32* %85, align 4, !insn.addr !6189
  store i32 %81, i32* %stack_var_-72, align 4, !insn.addr !6190
  store i32 %79, i32* %stack_var_-76, align 4, !insn.addr !6191
  %86 = ptrtoint i32* %stack_var_-76 to i32, !insn.addr !6191
  %87 = inttoptr i32 %79 to i32*, !insn.addr !6192
  %88 = bitcast i8* %buffer to i32*, !insn.addr !6192
  %89 = call i1 @WriteFile(i32* %87, i32* %88, i32 %buffer_size, i32* nonnull %stack_var_-40, %_OVERLAPPED* null), !insn.addr !6192
  %90 = icmp eq i1 %89, false, !insn.addr !6193
  %91 = icmp eq i1 %90, false, !insn.addr !6194
  store i32 %81, i32* %ebx.2.reg2mem, !insn.addr !6194
  store i32 %86, i32* %esp.1.reg2mem, !insn.addr !6194
  store i32 %80, i32* %storemerge3.reg2mem, !insn.addr !6194
  br i1 %91, label %dec_label_pc_4589ba, label %dec_label_pc_4589ae, !insn.addr !6194

dec_label_pc_4589ae:                              ; preds = %dec_label_pc_45898a
  %92 = call i32 @GetLastError(), !insn.addr !6195
  store i32 %92, i32* %stack_var_-44, align 4, !insn.addr !6196
  store i32 %81, i32* %ebx.2.reg2mem, !insn.addr !6196
  store i32 %86, i32* %esp.1.reg2mem, !insn.addr !6196
  store i32 %80, i32* %storemerge3.reg2mem, !insn.addr !6196
  br label %dec_label_pc_4589ba, !insn.addr !6196

dec_label_pc_4589ba:                              ; preds = %dec_label_pc_45898a, %dec_label_pc_4589ae, %dec_label_pc_458904, %dec_label_pc_45892c
  %storemerge3.reload = load i32, i32* %storemerge3.reg2mem
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %ebx.2.reload = load i32, i32* %ebx.2.reg2mem
  %93 = inttoptr i32 %storemerge3.reload to i32*, !insn.addr !6197
  %94 = load i32, i32* %93, align 4, !insn.addr !6197
  %95 = insertvalue %"`anonymous-namespace'::write_result.479" undef, i32 %94, 0, !insn.addr !6197
  store %"`anonymous-namespace'::write_result.479" %95, %"`anonymous-namespace'::write_result.479"* %result_-32, align 8, !insn.addr !6197
  %96 = add i32 %storemerge3.reload, %31, !insn.addr !6197
  %97 = inttoptr i32 %96 to i32*, !insn.addr !6198
  %98 = load i32, i32* %97, align 4, !insn.addr !6198
  store i32 %98, i32* %33, align 4, !insn.addr !6198
  %99 = add i32 %96, %31, !insn.addr !6198
  %100 = inttoptr i32 %99 to i32*, !insn.addr !6199
  %101 = load i32, i32* %100, align 4, !insn.addr !6199
  store i32 %101, i32* %35, align 8, !insn.addr !6199
  store i32 %ebx.2.reload, i32* %ebx.3.reg2mem, !insn.addr !6199
  store i32 %esp.1.reload, i32* %esp.2.reg2mem, !insn.addr !6199
  br label %dec_label_pc_4589c0, !insn.addr !6199

dec_label_pc_4589c0:                              ; preds = %dec_label_pc_4588f6, %dec_label_pc_4589ba
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %ebx.3.reload = load i32, i32* %ebx.3.reg2mem
  %ebx.3.ptr = inttoptr i32 %ebx.3.reload to i8*
  store i8* %ebx.3.ptr, i8** %ebx.4.ptr.reg2mem, !insn.addr !6200
  store i32 %esp.2.reload, i32* %esp.3.reg2mem, !insn.addr !6200
  br label %dec_label_pc_4589c6, !insn.addr !6200

dec_label_pc_4589c6:                              ; preds = %dec_label_pc_4589c0, %dec_label_pc_458955
  %102 = getelementptr inbounds %"`anonymous-namespace'::write_result.481", %"`anonymous-namespace'::write_result.481"* %result_-28, i32 0, i32 0, !insn.addr !6201
  %103 = load i32, i32* %102, align 8, !insn.addr !6201
  %104 = icmp eq i32 %103, 0, !insn.addr !6202
  %105 = icmp eq i1 %104, false, !insn.addr !6203
  br i1 %105, label %dec_label_pc_458a29, label %dec_label_pc_4589cd, !insn.addr !6203

dec_label_pc_4589cd:                              ; preds = %dec_label_pc_4589c6
  %106 = getelementptr inbounds %"`anonymous-namespace'::write_result.479", %"`anonymous-namespace'::write_result.479"* %result_-32, i32 0, i32 0, !insn.addr !6204
  %107 = load i32, i32* %106, align 8, !insn.addr !6204
  %108 = icmp eq i32 %107, 0, !insn.addr !6205
  br i1 %108, label %dec_label_pc_4589fe, label %dec_label_pc_4589d4, !insn.addr !6206

dec_label_pc_4589d4:                              ; preds = %dec_label_pc_4589cd
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %109 = add i32 %esp.3.reload, -4, !insn.addr !6207
  %110 = inttoptr i32 %109 to i32*, !insn.addr !6207
  store i32 5, i32* %110, align 4, !insn.addr !6207
  %111 = icmp eq i32 %107, 5, !insn.addr !6208
  %112 = icmp eq i1 %111, false, !insn.addr !6209
  br i1 %112, label %dec_label_pc_4589f2, label %dec_label_pc_4589db, !insn.addr !6209

dec_label_pc_4589db:                              ; preds = %dec_label_pc_4589d4
  %113 = call i32* @_errno(), !insn.addr !6210
  store i32 9, i32* %113, align 4, !insn.addr !6211
  %114 = call i32* @__doserrno(), !insn.addr !6212
  store i32 5, i32* %114, align 4, !insn.addr !6213
  store i32 -1, i32* %eax.2.reg2mem, !insn.addr !6214
  br label %dec_label_pc_458a30, !insn.addr !6214

dec_label_pc_4589f2:                              ; preds = %dec_label_pc_4589d4
  store i32 %107, i32* %110, align 4, !insn.addr !6215
  %115 = call i32 @function_4034fe(), !insn.addr !6216
  store i32 -1, i32* %eax.2.reg2mem, !insn.addr !6217
  br label %dec_label_pc_458a30, !insn.addr !6217

dec_label_pc_4589fe:                              ; preds = %dec_label_pc_4589cd
  %116 = load i32, i32* %11, align 4, !insn.addr !6218
  %117 = add i32 %116, %22, !insn.addr !6219
  %118 = inttoptr i32 %117 to i8*, !insn.addr !6219
  %119 = load i8, i8* %118, align 1, !insn.addr !6219
  %120 = and i8 %119, 64, !insn.addr !6219
  %121 = icmp eq i8 %120, 0, !insn.addr !6219
  br i1 %121, label %dec_label_pc_458a11, label %dec_label_pc_458a0c, !insn.addr !6220

dec_label_pc_458a0c:                              ; preds = %dec_label_pc_4589fe
  %ebx.4.ptr.reload = load i8*, i8** %ebx.4.ptr.reg2mem
  %122 = load i8, i8* %ebx.4.ptr.reload, align 1, !insn.addr !6221
  %123 = icmp eq i8 %122, 26, !insn.addr !6221
  store i32 0, i32* %eax.2.reg2mem, !insn.addr !6222
  br i1 %123, label %dec_label_pc_458a30, label %dec_label_pc_458a11, !insn.addr !6222

dec_label_pc_458a11:                              ; preds = %dec_label_pc_458a0c, %dec_label_pc_4589fe
  %124 = call i32* @_errno(), !insn.addr !6223
  store i32 28, i32* %124, align 4, !insn.addr !6224
  %125 = call i32* @__doserrno(), !insn.addr !6225
  store i32 0, i32* %125, align 4, !insn.addr !6226
  store i32 -1, i32* %eax.2.reg2mem, !insn.addr !6227
  br label %dec_label_pc_458a30, !insn.addr !6227

dec_label_pc_458a29:                              ; preds = %dec_label_pc_4589c6
  %126 = sub i32 %103, %1, !insn.addr !6228
  store i32 %126, i32* %eax.2.reg2mem, !insn.addr !6229
  br label %dec_label_pc_458a30, !insn.addr !6229

dec_label_pc_458a30:                              ; preds = %dec_label_pc_458853, %dec_label_pc_458a0c, %dec_label_pc_458879, %dec_label_pc_4589db, %dec_label_pc_4589f2, %dec_label_pc_458a11, %dec_label_pc_458a29
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  ret i32 %eax.2.reload, !insn.addr !6230
}

define i32 @_isleadbyte_l(i32 %c, i32 %locale) local_unnamed_addr {
dec_label_pc_458b0b:
  %0 = call i8 @__decompiler_undefined_function_7()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @function_403d78(i32 %locale), !insn.addr !6231
  %3 = call i32 @function_404322(), !insn.addr !6232
  %4 = icmp eq i8 %0, 0, !insn.addr !6233
  br i1 %4, label %dec_label_pc_458b43, label %dec_label_pc_458b39, !insn.addr !6234

dec_label_pc_458b39:                              ; preds = %dec_label_pc_458b0b
  %5 = add i32 %1, 848, !insn.addr !6235
  %6 = inttoptr i32 %5 to i32*, !insn.addr !6235
  %7 = load i32, i32* %6, align 4, !insn.addr !6235
  %8 = and i32 %7, -3, !insn.addr !6235
  store i32 %8, i32* %6, align 4, !insn.addr !6235
  br label %dec_label_pc_458b43, !insn.addr !6235

dec_label_pc_458b43:                              ; preds = %dec_label_pc_458b39, %dec_label_pc_458b0b
  ret i32 %3, !insn.addr !6236
}

define i32 @"<lambda_3d301b9e52f5099be73030e1f0bf487e>::operator()"(i32* %this, i8* %s) local_unnamed_addr {
dec_label_pc_458e4b:
  %eax.0.reg2mem = alloca i32, !insn.addr !6237
  %0 = bitcast i32* %this to i8*, !insn.addr !6238
  %1 = load i8, i8* %0, align 1, !insn.addr !6238
  %2 = icmp eq i8 %1, 0, !insn.addr !6238
  %3 = icmp eq i1 %2, false, !insn.addr !6239
  store i32 1, i32* %eax.0.reg2mem, !insn.addr !6239
  br i1 %3, label %dec_label_pc_458e5d, label %dec_label_pc_458e73, !insn.addr !6239

dec_label_pc_458e5d:                              ; preds = %dec_label_pc_458e4b
  %4 = ptrtoint i32* %this to i32
  %5 = add i32 %4, 1, !insn.addr !6240
  %6 = inttoptr i32 %5 to i8*, !insn.addr !6240
  %7 = load i8, i8* %6, align 1, !insn.addr !6240
  %8 = icmp eq i8 %7, 0, !insn.addr !6240
  %9 = icmp eq i1 %8, false, !insn.addr !6241
  store i32 2, i32* %eax.0.reg2mem, !insn.addr !6241
  br i1 %9, label %dec_label_pc_458e68, label %dec_label_pc_458e73, !insn.addr !6241

dec_label_pc_458e68:                              ; preds = %dec_label_pc_458e5d
  %10 = add i32 %4, 2, !insn.addr !6242
  %11 = inttoptr i32 %10 to i8*, !insn.addr !6242
  %12 = load i8, i8* %11, align 1, !insn.addr !6242
  %13 = icmp eq i8 %12, 0, !insn.addr !6242
  %14 = icmp eq i1 %13, false, !insn.addr !6243
  %15 = select i1 %14, i32 4, i32 3, !insn.addr !6244
  store i32 %15, i32* %eax.0.reg2mem, !insn.addr !6244
  br label %dec_label_pc_458e73, !insn.addr !6244

dec_label_pc_458e73:                              ; preds = %dec_label_pc_458e5d, %dec_label_pc_458e4b, %dec_label_pc_458e68
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !6245
}

define i32 @"__crt_mbstring::__mbrtowc_utf8"(i16* %pwc, i8* %s, i32 %n, %_Mbstatet* %ps) local_unnamed_addr {
dec_label_pc_458e82:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_403661(), !insn.addr !6246
  %2 = icmp ugt i32 %1, 4
  %3 = icmp eq i16* %pwc, null, !insn.addr !6247
  %or.cond = or i1 %3, %2
  br i1 %or.cond, label %dec_label_pc_458ebe, label %dec_label_pc_458ebb, !insn.addr !6248

dec_label_pc_458ebb:                              ; preds = %dec_label_pc_458e82
  %4 = trunc i32 %0 to i16, !insn.addr !6249
  %5 = icmp sgt i16 %4, -1
  %6 = select i1 %5, i16 %4, i16 -3, !insn.addr !6250
  store i16 %6, i16* %pwc, align 2, !insn.addr !6250
  br label %dec_label_pc_458ebe, !insn.addr !6250

dec_label_pc_458ebe:                              ; preds = %dec_label_pc_458e82, %dec_label_pc_458ebb
  ret i32 %1, !insn.addr !6251
}

define i32 @"__crt_mbstring::__mbsrtowcs_utf8"(i16* %dst, i8** %src, i32 %len, %_Mbstatet* %ps) local_unnamed_addr {
dec_label_pc_458ed2:
  %eax.0.reg2mem = alloca i32, !insn.addr !6252
  %storemerge.reg2mem = alloca i32, !insn.addr !6252
  %edi.2.reg2mem = alloca i32, !insn.addr !6252
  %esp.1.reg2mem = alloca i32, !insn.addr !6252
  %edi.1.reg2mem = alloca i32, !insn.addr !6252
  %esi.2.reg2mem = alloca i32, !insn.addr !6252
  %esi.1.reg2mem = alloca i32, !insn.addr !6252
  %ebx.1.reg2mem = alloca i32, !insn.addr !6252
  %ecx.0.reg2mem = alloca i32, !insn.addr !6252
  %edi.0.reg2mem = alloca i32, !insn.addr !6252
  %esi.0.reg2mem = alloca i32, !insn.addr !6252
  %esp.0.reg2mem = alloca i32, !insn.addr !6252
  %ebx.0.reg2mem = alloca i32, !insn.addr !6252
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-12 = alloca i16, align 2
  %1 = trunc i32 %0 to i16, !insn.addr !6253
  store i16 %1, i16* %stack_var_-12, align 2, !insn.addr !6253
  %2 = icmp eq i16* %dst, null, !insn.addr !6254
  %3 = ptrtoint i32* %stack_var_-24 to i32, !insn.addr !6255
  %4 = load i8*, i8** %src, align 4, !insn.addr !6256
  %5 = ptrtoint i8* %4 to i32, !insn.addr !6256
  br i1 %2, label %dec_label_pc_458f98.preheader, label %dec_label_pc_458eeb, !insn.addr !6257

dec_label_pc_458f98.preheader:                    ; preds = %dec_label_pc_458ed2
  %6 = ptrtoint %_Mbstatet* %ps to i32
  store i32 %3, i32* %esp.1.reg2mem
  store i32 %5, i32* %edi.2.reg2mem
  store i32 0, i32* %storemerge.reg2mem
  br label %dec_label_pc_458f98

dec_label_pc_458eeb:                              ; preds = %dec_label_pc_458ed2
  %7 = ptrtoint i16* %dst to i32, !insn.addr !6258
  %8 = icmp eq i32 %len, 0, !insn.addr !6259
  store i32 %7, i32* %esi.2.reg2mem, !insn.addr !6260
  store i32 %5, i32* %edi.1.reg2mem, !insn.addr !6260
  br i1 %8, label %dec_label_pc_458f5d, label %dec_label_pc_458ef5.preheader, !insn.addr !6260

dec_label_pc_458ef5.preheader:                    ; preds = %dec_label_pc_458eeb
  %9 = ptrtoint %_Mbstatet* %ps to i32
  %10 = ptrtoint i16* %stack_var_-12 to i32
  store i32 %len, i32* %ebx.0.reg2mem
  store i32 %3, i32* %esp.0.reg2mem
  store i32 %7, i32* %esi.0.reg2mem
  store i32 %5, i32* %edi.0.reg2mem
  br label %dec_label_pc_458ef5

dec_label_pc_458ef5:                              ; preds = %dec_label_pc_458ef5.preheader, %dec_label_pc_458f50
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %esp.0.reload = load i32, i32* %esp.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %11 = add i32 %esp.0.reload, -4, !insn.addr !6261
  %12 = inttoptr i32 %11 to i32*, !insn.addr !6261
  store i32 %edi.0.reload, i32* %12, align 4, !insn.addr !6261
  %13 = call i32 @"<lambda_3d301b9e52f5099be73030e1f0bf487e>::operator()"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*)), !insn.addr !6262
  %14 = add i32 %esp.0.reload, -8, !insn.addr !6263
  %15 = inttoptr i32 %14 to i32*, !insn.addr !6263
  store i32 %9, i32* %15, align 4, !insn.addr !6263
  %16 = add i32 %esp.0.reload, -12, !insn.addr !6264
  %17 = inttoptr i32 %16 to i32*, !insn.addr !6264
  store i32 %13, i32* %17, align 4, !insn.addr !6264
  %18 = add i32 %esp.0.reload, -16, !insn.addr !6265
  %19 = inttoptr i32 %18 to i32*, !insn.addr !6265
  store i32 %edi.0.reload, i32* %19, align 4, !insn.addr !6265
  %20 = add i32 %esp.0.reload, -20, !insn.addr !6266
  %21 = inttoptr i32 %20 to i32*, !insn.addr !6266
  store i32 %10, i32* %21, align 4, !insn.addr !6266
  %22 = call i32 @function_403661(), !insn.addr !6267
  switch i32 %22, label %dec_label_pc_458f1a [
    i32 -1, label %dec_label_pc_458f72
    i32 0, label %dec_label_pc_458f69
  ]

dec_label_pc_458f1a:                              ; preds = %dec_label_pc_458ef5
  %23 = load i16, i16* %stack_var_-12, align 2, !insn.addr !6268
  %24 = sext i16 %23 to i32, !insn.addr !6268
  %25 = icmp sgt i16 %23, -1
  store i32 %24, i32* %ecx.0.reg2mem, !insn.addr !6269
  store i32 %ebx.0.reload, i32* %ebx.1.reg2mem, !insn.addr !6269
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !6269
  br i1 %25, label %dec_label_pc_458f50, label %dec_label_pc_458f25, !insn.addr !6269

dec_label_pc_458f25:                              ; preds = %dec_label_pc_458f1a
  %26 = icmp ult i32 %ebx.0.reload, 2
  store i32 %esi.0.reload, i32* %esi.2.reg2mem, !insn.addr !6270
  store i32 %edi.0.reload, i32* %edi.1.reg2mem, !insn.addr !6270
  br i1 %26, label %dec_label_pc_458f5d, label %dec_label_pc_458f2a, !insn.addr !6270

dec_label_pc_458f2a:                              ; preds = %dec_label_pc_458f25
  %27 = add nsw i32 %24, -65536, !insn.addr !6271
  %28 = add i32 %ebx.0.reload, -1, !insn.addr !6272
  %29 = trunc i32 %27 to i16, !insn.addr !6273
  store i16 %29, i16* %stack_var_-12, align 2, !insn.addr !6273
  %30 = udiv i32 %27, 1024, !insn.addr !6274
  %31 = and i32 %27, 1023, !insn.addr !6275
  %32 = trunc i32 %30 to i16
  %33 = or i16 %32, -10240, !insn.addr !6276
  %34 = inttoptr i32 %esi.0.reload to i16*, !insn.addr !6276
  store i16 %33, i16* %34, align 2, !insn.addr !6276
  %35 = add i32 %esi.0.reload, 2, !insn.addr !6277
  %36 = or i32 %31, 56320, !insn.addr !6278
  store i32 %36, i32* %ecx.0.reg2mem, !insn.addr !6278
  store i32 %28, i32* %ebx.1.reg2mem, !insn.addr !6278
  store i32 %35, i32* %esi.1.reg2mem, !insn.addr !6278
  br label %dec_label_pc_458f50, !insn.addr !6278

dec_label_pc_458f50:                              ; preds = %dec_label_pc_458f2a, %dec_label_pc_458f1a
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %ebx.1.reload = load i32, i32* %ebx.1.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %37 = trunc i32 %ecx.0.reload to i16, !insn.addr !6279
  %38 = inttoptr i32 %esi.1.reload to i16*, !insn.addr !6279
  store i16 %37, i16* %38, align 2, !insn.addr !6279
  %39 = add i32 %22, %edi.0.reload, !insn.addr !6280
  %40 = add i32 %esi.1.reload, 2, !insn.addr !6281
  %41 = add i32 %ebx.1.reload, -1, !insn.addr !6282
  %42 = icmp eq i32 %41, 0, !insn.addr !6282
  %43 = icmp eq i1 %42, false, !insn.addr !6283
  store i32 %41, i32* %ebx.0.reg2mem, !insn.addr !6283
  store i32 %11, i32* %esp.0.reg2mem, !insn.addr !6283
  store i32 %40, i32* %esi.0.reg2mem, !insn.addr !6283
  store i32 %39, i32* %edi.0.reg2mem, !insn.addr !6283
  store i32 %40, i32* %esi.2.reg2mem, !insn.addr !6283
  store i32 %39, i32* %edi.1.reg2mem, !insn.addr !6283
  br i1 %43, label %dec_label_pc_458ef5, label %dec_label_pc_458f5d, !insn.addr !6283

dec_label_pc_458f5d:                              ; preds = %dec_label_pc_458f50, %dec_label_pc_458f25, %dec_label_pc_458f69, %dec_label_pc_458eeb
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %esi.2.reload = load i32, i32* %esi.2.reg2mem
  %44 = sub i32 %esi.2.reload, %7, !insn.addr !6284
  %45 = sdiv i32 %44, 2, !insn.addr !6285
  %46 = bitcast i8** %src to i32*
  store i32 %edi.1.reload, i32* %46, align 4, !insn.addr !6286
  store i32 %45, i32* %eax.0.reg2mem, !insn.addr !6287
  br label %dec_label_pc_458fc4, !insn.addr !6287

dec_label_pc_458f69:                              ; preds = %dec_label_pc_458ef5
  %47 = inttoptr i32 %esi.0.reload to i16*, !insn.addr !6288
  store i16 0, i16* %47, align 2, !insn.addr !6288
  store i32 %esi.0.reload, i32* %esi.2.reg2mem, !insn.addr !6289
  store i32 0, i32* %edi.1.reg2mem, !insn.addr !6289
  br label %dec_label_pc_458f5d, !insn.addr !6289

dec_label_pc_458f72:                              ; preds = %dec_label_pc_458ef5
  %48 = bitcast i8** %src to i32*
  store i32 %edi.0.reload, i32* %48, align 4, !insn.addr !6290
  %49 = call i32* @_errno(), !insn.addr !6291
  store i32 42, i32* %49, align 4, !insn.addr !6292
  store i32 -1, i32* %eax.0.reg2mem, !insn.addr !6293
  br label %dec_label_pc_458fc4, !insn.addr !6293

dec_label_pc_458f8b:                              ; preds = %dec_label_pc_458f98
  %50 = icmp eq i32 %66, 0, !insn.addr !6294
  store i32 %storemerge.reload, i32* %eax.0.reg2mem, !insn.addr !6295
  br i1 %50, label %dec_label_pc_458fc4, label %dec_label_pc_458f8f, !insn.addr !6295

dec_label_pc_458f8f:                              ; preds = %dec_label_pc_458f8b
  %51 = icmp eq i32 %66, 4, !insn.addr !6296
  %52 = zext i1 %51 to i32
  %53 = add i32 %66, %edi.2.reload, !insn.addr !6297
  %spec.select = add i32 %storemerge.reload, 1
  %54 = add i32 %spec.select, %52, !insn.addr !6298
  store i32 %55, i32* %esp.1.reg2mem, !insn.addr !6298
  store i32 %53, i32* %edi.2.reg2mem, !insn.addr !6298
  store i32 %54, i32* %storemerge.reg2mem, !insn.addr !6298
  br label %dec_label_pc_458f98, !insn.addr !6298

dec_label_pc_458f98:                              ; preds = %dec_label_pc_458f98.preheader, %dec_label_pc_458f8f
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %esp.1.reload = load i32, i32* %esp.1.reg2mem
  %55 = add i32 %esp.1.reload, -4, !insn.addr !6299
  %56 = inttoptr i32 %55 to i32*, !insn.addr !6299
  store i32 %edi.2.reload, i32* %56, align 4, !insn.addr !6299
  %57 = call i32 @"<lambda_3d301b9e52f5099be73030e1f0bf487e>::operator()"(i32* nonnull @80, i8* bitcast (i32* @80 to i8*)), !insn.addr !6300
  %58 = add i32 %esp.1.reload, -8, !insn.addr !6301
  %59 = inttoptr i32 %58 to i32*, !insn.addr !6301
  store i32 %6, i32* %59, align 4, !insn.addr !6301
  %60 = add i32 %esp.1.reload, -12, !insn.addr !6302
  %61 = inttoptr i32 %60 to i32*, !insn.addr !6302
  store i32 %57, i32* %61, align 4, !insn.addr !6302
  %62 = add i32 %esp.1.reload, -16, !insn.addr !6303
  %63 = inttoptr i32 %62 to i32*, !insn.addr !6303
  store i32 %edi.2.reload, i32* %63, align 4, !insn.addr !6303
  %64 = add i32 %esp.1.reload, -20, !insn.addr !6304
  %65 = inttoptr i32 %64 to i32*, !insn.addr !6304
  store i32 0, i32* %65, align 4, !insn.addr !6304
  %66 = call i32 @function_403661(), !insn.addr !6305
  %67 = icmp eq i32 %66, -1, !insn.addr !6306
  %68 = icmp eq i1 %67, false, !insn.addr !6307
  br i1 %68, label %dec_label_pc_458f8b, label %dec_label_pc_458fb7, !insn.addr !6307

dec_label_pc_458fb7:                              ; preds = %dec_label_pc_458f98
  %69 = call i32* @_errno(), !insn.addr !6308
  store i32 42, i32* %69, align 4, !insn.addr !6309
  store i32 %66, i32* %eax.0.reg2mem, !insn.addr !6309
  br label %dec_label_pc_458fc4, !insn.addr !6309

dec_label_pc_458fc4:                              ; preds = %dec_label_pc_458f8b, %dec_label_pc_458f5d, %dec_label_pc_458fb7, %dec_label_pc_458f72
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  ret i32 %eax.0.reload, !insn.addr !6310
}

define i32 @"__crt_mbstring::__c32rtomb_utf8"(i8* %s, i32 %c32, %_Mbstatet* %ps) local_unnamed_addr {
dec_label_pc_4595d0:
  %edi.0.reg2mem = alloca i32, !insn.addr !6311
  %ecx.1.reg2mem = alloca i32, !insn.addr !6311
  %storemerge.reg2mem = alloca i32, !insn.addr !6311
  %ebx.0.reg2mem = alloca i32, !insn.addr !6311
  %storemerge4.reg2mem = alloca i32, !insn.addr !6311
  %.reg2mem = alloca %_Mbstatet*, !insn.addr !6311
  %merge.reg2mem = alloca i32, !insn.addr !6311
  %ecx.0.reg2mem = alloca i32, !insn.addr !6311
  %0 = icmp eq i8* %s, null, !insn.addr !6312
  %1 = icmp eq i1 %0, false, !insn.addr !6313
  %2 = ptrtoint %_Mbstatet* %ps to i32
  store i32 0, i32* %ecx.0.reg2mem, !insn.addr !6313
  br i1 %1, label %dec_label_pc_4595eb, label %dec_label_pc_4595de, !insn.addr !6313

dec_label_pc_4595de:                              ; preds = %dec_label_pc_4595d0, %dec_label_pc_4595f2
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %3 = getelementptr inbounds %_Mbstatet, %_Mbstatet* %ps, i32 0, i32 0
  store i32 %ecx.0.reload, i32* %3, align 4, !insn.addr !6314
  %4 = add i32 %2, 4, !insn.addr !6315
  %5 = inttoptr i32 %4 to i32*, !insn.addr !6315
  store i32 %ecx.0.reload, i32* %5, align 4, !insn.addr !6315
  store i32 1, i32* %merge.reg2mem, !insn.addr !6315
  br label %dec_label_pc_4595e6, !insn.addr !6315

dec_label_pc_4595e6:                              ; preds = %dec_label_pc_45965a, %dec_label_pc_45966e, %dec_label_pc_4595fe, %dec_label_pc_4595de
  %merge.reload = load i32, i32* %merge.reg2mem
  ret i32 %merge.reload, !insn.addr !6316

dec_label_pc_4595eb:                              ; preds = %dec_label_pc_4595d0
  %6 = icmp eq i32 %c32, 0, !insn.addr !6317
  %7 = icmp eq i1 %6, false, !insn.addr !6318
  br i1 %7, label %dec_label_pc_4595f6, label %dec_label_pc_4595f2, !insn.addr !6318

dec_label_pc_4595f2:                              ; preds = %dec_label_pc_4595eb
  %8 = trunc i32 %c32 to i8, !insn.addr !6319
  store i8 %8, i8* %s, align 1, !insn.addr !6319
  store i32 %c32, i32* %ecx.0.reg2mem, !insn.addr !6320
  br label %dec_label_pc_4595de, !insn.addr !6320

dec_label_pc_4595f6:                              ; preds = %dec_label_pc_4595eb
  %9 = icmp ult i32 %c32, 128, !insn.addr !6321
  %10 = icmp eq i1 %9, false, !insn.addr !6322
  br i1 %10, label %dec_label_pc_459602, label %dec_label_pc_4595fe, !insn.addr !6322

dec_label_pc_4595fe:                              ; preds = %dec_label_pc_4595f6
  %11 = trunc i32 %c32 to i8, !insn.addr !6323
  store i8 %11, i8* %s, align 1, !insn.addr !6323
  store i32 1, i32* %merge.reg2mem, !insn.addr !6324
  br label %dec_label_pc_4595e6, !insn.addr !6324

dec_label_pc_459602:                              ; preds = %dec_label_pc_4595f6
  %12 = icmp ult i32 %c32, 2048, !insn.addr !6325
  %13 = icmp eq i1 %12, false, !insn.addr !6326
  store i32 192, i32* %ebx.0.reg2mem, !insn.addr !6326
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !6326
  br i1 %13, label %dec_label_pc_459613, label %dec_label_pc_459646, !insn.addr !6326

dec_label_pc_459613:                              ; preds = %dec_label_pc_459602
  %14 = icmp ult i32 %c32, 65536, !insn.addr !6327
  %15 = icmp eq i1 %14, false, !insn.addr !6328
  br i1 %15, label %dec_label_pc_459631, label %dec_label_pc_45961b, !insn.addr !6328

dec_label_pc_45961b:                              ; preds = %dec_label_pc_459613
  %16 = and i32 %c32, -2048
  %17 = icmp eq i32 %16, 55296
  store %_Mbstatet* inttoptr (i32 2 to %_Mbstatet*), %_Mbstatet** %.reg2mem, !insn.addr !6329
  store i32 224, i32* %storemerge4.reg2mem, !insn.addr !6329
  br i1 %17, label %dec_label_pc_45966e, label %dec_label_pc_459645, !insn.addr !6329

dec_label_pc_459631:                              ; preds = %dec_label_pc_459613
  %18 = icmp ult i32 %c32, 1114112
  store %_Mbstatet* inttoptr (i32 3 to %_Mbstatet*), %_Mbstatet** %.reg2mem, !insn.addr !6330
  store i32 240, i32* %storemerge4.reg2mem, !insn.addr !6330
  br i1 %18, label %dec_label_pc_459645, label %dec_label_pc_45966e, !insn.addr !6330

dec_label_pc_459645:                              ; preds = %dec_label_pc_459631, %dec_label_pc_45961b
  %storemerge4.reload = load i32, i32* %storemerge4.reg2mem
  %.reload = load %_Mbstatet*, %_Mbstatet** %.reg2mem, !insn.addr !6331
  %19 = ptrtoint %_Mbstatet* %.reload to i32, !insn.addr !6331
  store i32 %storemerge4.reload, i32* %ebx.0.reg2mem, !insn.addr !6331
  store i32 %19, i32* %storemerge.reg2mem, !insn.addr !6331
  br label %dec_label_pc_459646, !insn.addr !6331

dec_label_pc_459646:                              ; preds = %dec_label_pc_459602, %dec_label_pc_459645
  %20 = ptrtoint i8* %s to i32
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  store i32 %c32, i32* %ecx.1.reg2mem, !insn.addr !6332
  store i32 %storemerge.reload, i32* %edi.0.reg2mem, !insn.addr !6332
  br label %dec_label_pc_459649, !insn.addr !6332

dec_label_pc_459649:                              ; preds = %dec_label_pc_459649, %dec_label_pc_459646
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %21 = udiv i32 %ecx.1.reload, 64, !insn.addr !6333
  %22 = trunc i32 %ecx.1.reload to i8
  %23 = and i8 %22, 63
  %24 = or i8 %23, -128, !insn.addr !6334
  %25 = add i32 %edi.0.reload, %20, !insn.addr !6334
  %26 = inttoptr i32 %25 to i8*, !insn.addr !6334
  store i8 %24, i8* %26, align 1, !insn.addr !6334
  %27 = add i32 %edi.0.reload, -1, !insn.addr !6335
  %28 = icmp eq i32 %27, 0, !insn.addr !6335
  %29 = icmp eq i1 %28, false, !insn.addr !6336
  store i32 %21, i32* %ecx.1.reg2mem, !insn.addr !6336
  store i32 %27, i32* %edi.0.reg2mem, !insn.addr !6336
  br i1 %29, label %dec_label_pc_459649, label %dec_label_pc_45965a, !insn.addr !6336

dec_label_pc_45965a:                              ; preds = %dec_label_pc_459649
  %30 = or i32 %21, %ebx.0.reload, !insn.addr !6337
  %31 = trunc i32 %30 to i8, !insn.addr !6338
  store i8 %31, i8* %s, align 1, !insn.addr !6338
  %32 = getelementptr inbounds %_Mbstatet, %_Mbstatet* %ps, i32 0, i32 0
  store i32 0, i32* %32, align 4, !insn.addr !6339
  %33 = add i32 %2, 4, !insn.addr !6340
  %34 = inttoptr i32 %33 to i32*, !insn.addr !6340
  store i32 0, i32* %34, align 4, !insn.addr !6340
  %35 = add nsw i32 %storemerge.reload, 1, !insn.addr !6341
  store i32 %35, i32* %merge.reg2mem, !insn.addr !6342
  br label %dec_label_pc_4595e6, !insn.addr !6342

dec_label_pc_45966e:                              ; preds = %dec_label_pc_459631, %dec_label_pc_45961b
  %36 = call i32 @function_401d52(i32 %2), !insn.addr !6343
  store i32 %36, i32* %merge.reg2mem, !insn.addr !6344
  br label %dec_label_pc_4595e6, !insn.addr !6344
}

define i32 @"__crt_mbstring::return_illegal_sequence"(%_Mbstatet* %ps) local_unnamed_addr {
dec_label_pc_4596be:
  %0 = ptrtoint %_Mbstatet* %ps to i32
  %1 = getelementptr inbounds %_Mbstatet, %_Mbstatet* %ps, i32 0, i32 0, !insn.addr !6345
  store i32 0, i32* %1, align 4, !insn.addr !6345
  %2 = add i32 %0, 4, !insn.addr !6346
  %3 = inttoptr i32 %2 to i32*, !insn.addr !6346
  store i32 0, i32* %3, align 4, !insn.addr !6346
  %4 = call i32* @_errno(), !insn.addr !6347
  store i32 42, i32* %4, align 4, !insn.addr !6348
  ret i32 -1, !insn.addr !6349
}

define i32 @__acrt_fp_strflt_to_string(i8* %buffer, i32 %buffer_count, i32 %digits, %_strflt* %pflt) local_unnamed_addr {
dec_label_pc_4596f1:
  %storemerge4.reg2mem = alloca i32, !insn.addr !6350
  %ecx.3.reg2mem = alloca i32, !insn.addr !6350
  %.lcssa.reg2mem = alloca i8, !insn.addr !6350
  %.lcssa8.reg2mem = alloca i8*, !insn.addr !6350
  %.reg2mem29 = alloca i32, !insn.addr !6350
  %.reg2mem = alloca i8*, !insn.addr !6350
  %edi.2.reg2mem = alloca i32, !insn.addr !6350
  %ecx.1.reg2mem = alloca i32, !insn.addr !6350
  %eax.1.reg2mem = alloca i32, !insn.addr !6350
  %edi.0.reg2mem = alloca i32, !insn.addr !6350
  %ecx.0.reg2mem = alloca i32, !insn.addr !6350
  %eax.0.reg2mem = alloca i32, !insn.addr !6350
  %storemerge.reg2mem = alloca i32, !insn.addr !6350
  %storemerge6.in.reg2mem = alloca i32*, !insn.addr !6350
  %0 = icmp eq i8* %buffer, null, !insn.addr !6351
  %1 = icmp eq i32 %buffer_count, 0, !insn.addr !6352
  %or.cond = or i1 %0, %1
  br i1 %or.cond, label %dec_label_pc_4596fe, label %dec_label_pc_45971a, !insn.addr !6353

dec_label_pc_4596fe:                              ; preds = %dec_label_pc_4596f1, %dec_label_pc_459739
  %2 = call i32* @_errno(), !insn.addr !6354
  store i32* %2, i32** %storemerge6.in.reg2mem, !insn.addr !6355
  store i32 22, i32* %storemerge.reg2mem, !insn.addr !6355
  br label %dec_label_pc_459705, !insn.addr !6355

dec_label_pc_459705:                              ; preds = %dec_label_pc_459730, %dec_label_pc_4596fe
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %storemerge6.in.reload = load i32*, i32** %storemerge6.in.reg2mem
  store i32 %storemerge.reload, i32* %storemerge6.in.reload, align 4, !insn.addr !6356
  call void @_invalid_parameter_noinfo(), !insn.addr !6357
  store i32 %storemerge.reload, i32* %storemerge4.reg2mem, !insn.addr !6358
  br label %dec_label_pc_4597ae, !insn.addr !6358

dec_label_pc_45971a:                              ; preds = %dec_label_pc_4596f1
  store i8 0, i8* %buffer, align 1, !insn.addr !6359
  %3 = icmp sgt i32 %digits, 0
  %storemerge5 = select i1 %3, i32 %digits, i32 0
  %4 = add nuw i32 %storemerge5, 1, !insn.addr !6360
  %5 = icmp ult i32 %4, %buffer_count
  br i1 %5, label %dec_label_pc_459739, label %dec_label_pc_459730, !insn.addr !6361

dec_label_pc_459730:                              ; preds = %dec_label_pc_45971a
  %6 = call i32* @_errno(), !insn.addr !6362
  store i32* %6, i32** %storemerge6.in.reg2mem, !insn.addr !6363
  store i32 34, i32* %storemerge.reg2mem, !insn.addr !6363
  br label %dec_label_pc_459705, !insn.addr !6363

dec_label_pc_459739:                              ; preds = %dec_label_pc_45971a
  %7 = icmp eq %_strflt* %pflt, null, !insn.addr !6364
  br i1 %7, label %dec_label_pc_4596fe, label %dec_label_pc_459740, !insn.addr !6365

dec_label_pc_459740:                              ; preds = %dec_label_pc_459739
  %8 = ptrtoint i8* %buffer to i32
  %9 = ptrtoint %_strflt* %pflt to i32, !insn.addr !6366
  %10 = add i32 %8, 1, !insn.addr !6367
  %11 = add i32 %9, 8, !insn.addr !6368
  %12 = inttoptr i32 %11 to i32*, !insn.addr !6368
  %13 = load i32, i32* %12, align 4, !insn.addr !6368
  store i8 48, i8* %buffer, align 1, !insn.addr !6369
  %14 = icmp slt i32 %digits, 1
  store i32 %10, i32* %eax.0.reg2mem, !insn.addr !6370
  store i32 %digits, i32* %ecx.0.reg2mem, !insn.addr !6370
  store i32 %13, i32* %edi.0.reg2mem, !insn.addr !6370
  store i32 %10, i32* %eax.1.reg2mem, !insn.addr !6370
  store i32 %digits, i32* %ecx.1.reg2mem, !insn.addr !6370
  store i32 %13, i32* %edi.2.reg2mem, !insn.addr !6370
  br i1 %14, label %dec_label_pc_459767, label %dec_label_pc_459751, !insn.addr !6370

dec_label_pc_459751:                              ; preds = %dec_label_pc_459740, %dec_label_pc_459751
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %15 = inttoptr i32 %edi.0.reload to i8*, !insn.addr !6371
  %16 = load i8, i8* %15, align 1, !insn.addr !6371
  %17 = icmp eq i8 %16, 0, !insn.addr !6372
  %ebx.1 = select i1 %17, i8 48, i8 %16
  %not. = icmp ne i1 %17, true
  %18 = zext i1 %not. to i32
  %edi.1 = add i32 %edi.0.reload, %18
  %19 = inttoptr i32 %eax.0.reload to i8*, !insn.addr !6373
  store i8 %ebx.1, i8* %19, align 1, !insn.addr !6373
  %20 = add i32 %eax.0.reload, 1, !insn.addr !6374
  %21 = add i32 %ecx.0.reload, -1, !insn.addr !6375
  %22 = icmp eq i32 %21, 0, !insn.addr !6376
  %23 = icmp slt i32 %21, 0, !insn.addr !6376
  %24 = icmp eq i1 %23, false, !insn.addr !6377
  %25 = icmp eq i1 %22, false, !insn.addr !6377
  %26 = icmp eq i1 %24, %25, !insn.addr !6377
  store i32 %20, i32* %eax.0.reg2mem, !insn.addr !6377
  store i32 %21, i32* %ecx.0.reg2mem, !insn.addr !6377
  store i32 %edi.1, i32* %edi.0.reg2mem, !insn.addr !6377
  store i32 %20, i32* %eax.1.reg2mem, !insn.addr !6377
  store i32 %21, i32* %ecx.1.reg2mem, !insn.addr !6377
  store i32 %edi.1, i32* %edi.2.reg2mem, !insn.addr !6377
  br i1 %26, label %dec_label_pc_459751, label %dec_label_pc_459767, !insn.addr !6377

dec_label_pc_459767:                              ; preds = %dec_label_pc_459751, %dec_label_pc_459740
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %ecx.1.reload = load i32, i32* %ecx.1.reg2mem
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  %27 = inttoptr i32 %eax.1.reload to i8*, !insn.addr !6378
  store i8 0, i8* %27, align 1, !insn.addr !6378
  %28 = icmp slt i32 %ecx.1.reload, 0, !insn.addr !6379
  br i1 %28, label %dec_label_pc_459784, label %dec_label_pc_45976e, !insn.addr !6380

dec_label_pc_45976e:                              ; preds = %dec_label_pc_459767
  %29 = inttoptr i32 %edi.2.reload to i8*, !insn.addr !6381
  %30 = load i8, i8* %29, align 1, !insn.addr !6381
  %31 = icmp slt i8 %30, 53, !insn.addr !6382
  br i1 %31, label %dec_label_pc_459784, label %dec_label_pc_459778.preheader, !insn.addr !6382

dec_label_pc_459778.preheader:                    ; preds = %dec_label_pc_45976e
  %32 = add i32 %eax.1.reload, -1, !insn.addr !6383
  %33 = inttoptr i32 %32 to i8*, !insn.addr !6384
  %34 = load i8, i8* %33, align 1, !insn.addr !6384
  %35 = icmp eq i8 %34, 57, !insn.addr !6385
  store i8* %33, i8** %.reg2mem, !insn.addr !6386
  store i32 %32, i32* %.reg2mem29, !insn.addr !6386
  store i8* %33, i8** %.lcssa8.reg2mem, !insn.addr !6386
  store i8 %34, i8* %.lcssa.reg2mem, !insn.addr !6386
  br i1 %35, label %dec_label_pc_459775, label %dec_label_pc_459780, !insn.addr !6386

dec_label_pc_459775:                              ; preds = %dec_label_pc_459778.preheader, %dec_label_pc_459775
  %.reload30 = load i32, i32* %.reg2mem29
  %.reload = load i8*, i8** %.reg2mem
  store i8 48, i8* %.reload, align 1, !insn.addr !6387
  %36 = add i32 %.reload30, -1, !insn.addr !6383
  %37 = inttoptr i32 %36 to i8*
  %38 = load i8, i8* %37, align 1, !insn.addr !6384
  %39 = icmp eq i8 %38, 57, !insn.addr !6385
  store i8* %37, i8** %.reg2mem, !insn.addr !6386
  store i32 %36, i32* %.reg2mem29, !insn.addr !6386
  store i8* %37, i8** %.lcssa8.reg2mem, !insn.addr !6386
  store i8 %38, i8* %.lcssa.reg2mem, !insn.addr !6386
  br i1 %39, label %dec_label_pc_459775, label %dec_label_pc_459780, !insn.addr !6386

dec_label_pc_459780:                              ; preds = %dec_label_pc_459775, %dec_label_pc_459778.preheader
  %.lcssa.reload = load i8, i8* %.lcssa.reg2mem
  %.lcssa8.reload = load i8*, i8** %.lcssa8.reg2mem
  %40 = add i8 %.lcssa.reload, 1, !insn.addr !6388
  store i8 %40, i8* %.lcssa8.reload, align 1, !insn.addr !6388
  br label %dec_label_pc_459784, !insn.addr !6388

dec_label_pc_459784:                              ; preds = %dec_label_pc_459780, %dec_label_pc_45976e, %dec_label_pc_459767
  %41 = load i8, i8* %buffer, align 1, !insn.addr !6389
  %42 = icmp eq i8 %41, 49, !insn.addr !6389
  %43 = icmp eq i1 %42, false, !insn.addr !6390
  store i32 %10, i32* %ecx.3.reg2mem, !insn.addr !6390
  br i1 %43, label %dec_label_pc_459793, label %dec_label_pc_459789, !insn.addr !6390

dec_label_pc_459789:                              ; preds = %dec_label_pc_459784
  %44 = add i32 %9, 4, !insn.addr !6391
  %45 = inttoptr i32 %44 to i32*, !insn.addr !6391
  %46 = load i32, i32* %45, align 4, !insn.addr !6391
  %47 = add i32 %46, 1, !insn.addr !6391
  store i32 %47, i32* %45, align 4, !insn.addr !6391
  store i32 0, i32* %storemerge4.reg2mem, !insn.addr !6392
  br label %dec_label_pc_4597ae, !insn.addr !6392

dec_label_pc_459793:                              ; preds = %dec_label_pc_459784, %dec_label_pc_459793
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %48 = inttoptr i32 %ecx.3.reload to i8*, !insn.addr !6393
  %49 = load i8, i8* %48, align 1, !insn.addr !6393
  %50 = add i32 %ecx.3.reload, 1, !insn.addr !6394
  %51 = icmp eq i8 %49, 0, !insn.addr !6395
  %52 = icmp eq i1 %51, false, !insn.addr !6396
  store i32 %50, i32* %ecx.3.reg2mem, !insn.addr !6396
  br i1 %52, label %dec_label_pc_459793, label %dec_label_pc_45979a, !insn.addr !6396

dec_label_pc_45979a:                              ; preds = %dec_label_pc_459793
  %53 = sub i32 %ecx.3.reload, %8, !insn.addr !6397
  %54 = inttoptr i32 %10 to i8*, !insn.addr !6398
  call void @memmove(i8* %buffer, i8* %54, i32 %53), !insn.addr !6399
  store i32 0, i32* %storemerge4.reg2mem, !insn.addr !6400
  br label %dec_label_pc_4597ae, !insn.addr !6400

dec_label_pc_4597ae:                              ; preds = %dec_label_pc_459789, %dec_label_pc_45979a, %dec_label_pc_459705
  %storemerge4.reload = load i32, i32* %storemerge4.reg2mem
  ret i32 %storemerge4.reload, !insn.addr !6401
}

define void @__acrt_fltout(%_CRT_DOUBLE.739 %value, i32 %precision, %_strflt* %flt, i8* %result, i32 %result_count) local_unnamed_addr {
dec_label_pc_45af9f:
  %storemerge53.reg2mem = alloca i32, !insn.addr !6402
  %esp.26.reg2mem = alloca i32, !insn.addr !6402
  %esi.19.reg2mem = alloca i32, !insn.addr !6402
  %ecx.31.reg2mem = alloca i32, !insn.addr !6402
  %edi.13.reg2mem = alloca i32, !insn.addr !6402
  %eax.28.reg2mem = alloca i32, !insn.addr !6402
  %ecx.30.reg2mem = alloca i32, !insn.addr !6402
  %esi.18.reg2mem = alloca i32, !insn.addr !6402
  %storemerge.reg2mem = alloca i32, !insn.addr !6402
  %esi.17.reg2mem = alloca i32, !insn.addr !6402
  %ecx.28.reg2mem = alloca i32, !insn.addr !6402
  %esp.1789.reg2mem = alloca i32, !insn.addr !6402
  %edi.9.reg2mem = alloca i32, !insn.addr !6402
  %esp.17.reg2mem = alloca i32, !insn.addr !6402
  %.reg2mem309 = alloca i8*, !insn.addr !6402
  %esp.17.ph.reg2mem = alloca i32, !insn.addr !6402
  %storemerge30.in.reg2mem = alloca i8**, !insn.addr !6402
  %storemerge57.reg2mem = alloca i32, !insn.addr !6402
  %esp.16.reg2mem = alloca i32, !insn.addr !6402
  %.pre-phi195.reg2mem = alloca i32, !insn.addr !6402
  %edi.8.reg2mem = alloca i32, !insn.addr !6402
  %esi.13.reg2mem = alloca i32, !insn.addr !6402
  %storemerge90.reg2mem = alloca i32, !insn.addr !6402
  %storemerge32.pre-phi.reg2mem = alloca i32, !insn.addr !6402
  %eax.24.reg2mem = alloca i32, !insn.addr !6402
  %ecx.26.reg2mem = alloca i32, !insn.addr !6402
  %eax.23.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1864.13.reg2mem = alloca i8*, !insn.addr !6402
  %ecx.25.reg2mem = alloca i32, !insn.addr !6402
  %eax.22.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1864.12.reg2mem = alloca i8*, !insn.addr !6402
  %eax.21125.reg2mem = alloca i32, !insn.addr !6402
  %ecx.24126.reg2mem = alloca i32, !insn.addr !6402
  %edx.14127.reg2mem = alloca i32, !insn.addr !6402
  %edx.14.ph.reg2mem = alloca i32, !insn.addr !6402
  %ecx.24.ph.reg2mem = alloca i32, !insn.addr !6402
  %eax.21.ph.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1864.10.ph.reg2mem = alloca i8*, !insn.addr !6402
  %stack_var_-1864.9.reg2mem = alloca i8*, !insn.addr !6402
  %.reg2mem307 = alloca i32, !insn.addr !6402
  %ecx.23.reg2mem = alloca i32, !insn.addr !6402
  %eax.20.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1864.8.reg2mem = alloca i8*, !insn.addr !6402
  %stack_var_-1880.1.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1872.0.reg2mem = alloca i32, !insn.addr !6402
  %esi.12.reg2mem = alloca i32, !insn.addr !6402
  %ecx.22.reg2mem = alloca i32, !insn.addr !6402
  %eax.19.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1864.7.reg2mem = alloca i8*, !insn.addr !6402
  %esi.11.reg2mem = alloca i32, !insn.addr !6402
  %ecx.19.reg2mem = alloca i32, !insn.addr !6402
  %ecx.18.reg2mem = alloca i32, !insn.addr !6402
  %esi.10.reg2mem = alloca i32, !insn.addr !6402
  %ecx.17.reg2mem = alloca i32, !insn.addr !6402
  %eax.17.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1892.2.in.reg2mem = alloca i32, !insn.addr !6402
  %edi.6.reg2mem = alloca i32, !insn.addr !6402
  %esi.9.reg2mem = alloca i32, !insn.addr !6402
  %storemerge25.reg2mem = alloca i32, !insn.addr !6402
  %.pre-phi198.reg2mem = alloca i32, !insn.addr !6402
  %storemerge28.reg2mem = alloca i32, !insn.addr !6402
  %storemerge27.reg2mem = alloca i32, !insn.addr !6402
  %storemerge167.reg2mem = alloca i32, !insn.addr !6402
  %eax.12.reg2mem = alloca i32, !insn.addr !6402
  %ecx.15.reg2mem = alloca i32, !insn.addr !6402
  %eax.11.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1864.6.reg2mem = alloca i8*, !insn.addr !6402
  %ecx.14.reg2mem = alloca i32, !insn.addr !6402
  %eax.10.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1864.5.reg2mem = alloca i8*, !insn.addr !6402
  %eax.9144.reg2mem = alloca i32, !insn.addr !6402
  %ecx.13145.reg2mem = alloca i32, !insn.addr !6402
  %edx.9146.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1864.2.reg2mem = alloca i8*, !insn.addr !6402
  %.reg2mem305 = alloca i32, !insn.addr !6402
  %stack_var_-1880.0130.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1896.2131.reg2mem = alloca i8*, !insn.addr !6402
  %stack_var_-1864.1132.reg2mem = alloca i8*, !insn.addr !6402
  %eax.8133.reg2mem = alloca i32, !insn.addr !6402
  %ecx.12134.reg2mem = alloca i32, !insn.addr !6402
  %esi.8.reg2mem = alloca i32, !insn.addr !6402
  %ecx.11.reg2mem = alloca i32, !insn.addr !6402
  %eax.7.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1864.0.reg2mem = alloca i8*, !insn.addr !6402
  %ecx.8.reg2mem = alloca i32, !insn.addr !6402
  %esi.7.reg2mem = alloca i32, !insn.addr !6402
  %ecx.7.reg2mem = alloca i32, !insn.addr !6402
  %esi.6.reg2mem = alloca i32, !insn.addr !6402
  %ecx.6.reg2mem = alloca i32, !insn.addr !6402
  %eax.5.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1908.0.in.reg2mem = alloca i32, !insn.addr !6402
  %edi.4.reg2mem = alloca i32, !insn.addr !6402
  %.pre-phi.reg2mem = alloca i8*, !insn.addr !6402
  %storemerge49.reg2mem = alloca i32, !insn.addr !6402
  %storemerge50.reg2mem = alloca i32, !insn.addr !6402
  %esi.5.reg2mem = alloca i32, !insn.addr !6402
  %ebx.8.reg2mem = alloca i32, !insn.addr !6402
  %ecx.5.reg2mem = alloca i32, !insn.addr !6402
  %storemerge44.reg2mem = alloca i32, !insn.addr !6402
  %storemerge45.reg2mem = alloca i32, !insn.addr !6402
  %esi.4.reg2mem = alloca i32, !insn.addr !6402
  %ebx.7.reg2mem = alloca i32, !insn.addr !6402
  %ecx.4.reg2mem = alloca i32, !insn.addr !6402
  %ecx.3.reg2mem = alloca i32, !insn.addr !6402
  %.reg2mem303 = alloca i32, !insn.addr !6402
  %stack_var_-1892.1234.reg2mem = alloca i8*, !insn.addr !6402
  %.reg2mem301 = alloca i32, !insn.addr !6402
  %stack_var_-1892.1233.reg2mem = alloca i8*, !insn.addr !6402
  %storemerge39.reg2mem = alloca i32, !insn.addr !6402
  %storemerge40.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1896.1.in150.reg2mem = alloca i32, !insn.addr !6402
  %edx.4151.reg2mem = alloca i32, !insn.addr !6402
  %ebx.4154.reg2mem = alloca i32, !insn.addr !6402
  %esi.2155.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1892.1235.reg2mem = alloca i8*, !insn.addr !6402
  %stack_var_-1892.1232.reg2mem = alloca i8*, !insn.addr !6402
  %edx.3236.reg2mem = alloca i32, !insn.addr !6402
  %.reg2mem299 = alloca i32, !insn.addr !6402
  %.pre-phi286.reg2mem = alloca i32, !insn.addr !6402
  %.reg2mem297 = alloca i32, !insn.addr !6402
  %stack_var_-1896.0229.reg2mem = alloca i8*, !insn.addr !6402
  %.reg2mem295 = alloca i32, !insn.addr !6402
  %stack_var_-1896.0228.reg2mem = alloca i8*, !insn.addr !6402
  %storemerge34.reg2mem = alloca i32, !insn.addr !6402
  %storemerge35.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1892.0.in156.reg2mem = alloca i32, !insn.addr !6402
  %edx.1157.reg2mem = alloca i32, !insn.addr !6402
  %ebx.0160.reg2mem = alloca i32, !insn.addr !6402
  %esi.0161.reg2mem = alloca i32, !insn.addr !6402
  %stack_var_-1896.0230.reg2mem = alloca i8*, !insn.addr !6402
  %stack_var_-1896.0227.reg2mem = alloca i8*, !insn.addr !6402
  %edx.0231.reg2mem = alloca i32, !insn.addr !6402
  %.reg2mem293 = alloca i32, !insn.addr !6402
  %.pre-phi288.reg2mem = alloca i32, !insn.addr !6402
  %ecx.0.reg2mem = alloca i32, !insn.addr !6402
  %storemerge55.reg2mem = alloca i8, !insn.addr !6402
  %.reg2mem = alloca double, !insn.addr !6402
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = extractvalue %_CRT_DOUBLE.739 %value, 0
  %stack_var_-2404 = alloca i32, align 4
  %stack_var_-1860 = alloca i32, align 4
  %stack_var_-932 = alloca i8*, align 4
  %stack_var_-1396 = alloca i8*, align 4
  %stack_var_-472 = alloca i8*, align 4
  %stack_var_-936 = alloca i8*, align 4
  %stack_var_-468 = alloca i8*, align 4
  %3 = call i64 @__decompiler_undefined_function_1()
  %stack_var_-2432 = alloca i32, align 4
  %4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-2424 = alloca i8*, align 4
  %stack_var_-2420 = alloca i32, align 4
  %stack_var_4 = alloca double, align 8
  store double %2, double* %stack_var_4, align 8
  %reset_fp_state_-1944 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %5 = bitcast i32* %reset_fp_state_-1944 to %fenv_t*
  %6 = call i32 @fegetenv(%fenv_t* nonnull %5), !insn.addr !6403
  %7 = load i32, i32* %reset_fp_state_-1944, align 4, !insn.addr !6404
  %8 = and i32 %7, 31
  %9 = icmp eq i32 %8, 31, !insn.addr !6405
  %10 = icmp eq i1 %9, false, !insn.addr !6406
  store double %2, double* %.reg2mem, !insn.addr !6406
  store i8 0, i8* %storemerge55.reg2mem, !insn.addr !6406
  br i1 %10, label %dec_label_pc_45afe9, label %dec_label_pc_45affd, !insn.addr !6406

dec_label_pc_45afe9:                              ; preds = %dec_label_pc_45af9f
  %11 = call i32 @feholdexcept(%fenv_t* nonnull %5), !insn.addr !6407
  %.pre = load double, double* %stack_var_4, align 8
  store double %.pre, double* %.reg2mem, !insn.addr !6408
  store i8 1, i8* %storemerge55.reg2mem, !insn.addr !6408
  br label %dec_label_pc_45affd, !insn.addr !6408

dec_label_pc_45affd:                              ; preds = %dec_label_pc_45af9f, %dec_label_pc_45afe9
  %storemerge55.reload = load i8, i8* %storemerge55.reg2mem
  %.reload = load double, double* %.reg2mem, !insn.addr !6409
  %12 = icmp eq i32 %precision, 0, !insn.addr !6410
  %13 = icmp slt i32 %precision, 0, !insn.addr !6410
  %14 = icmp eq i1 %13, false, !insn.addr !6411
  %15 = icmp eq i1 %12, false, !insn.addr !6411
  %16 = icmp eq i1 %14, %15, !insn.addr !6411
  %or.cond77 = or i1 %14, %16
  %spec.store.select87 = select i1 %or.cond77, i8* inttoptr (i32 32 to i8*), i8* inttoptr (i32 45 to i8*)
  store i8* %spec.store.select87, i8** %stack_var_-2424, align 4
  %spec.select88 = select i1 %or.cond77, i32 32, i32 45
  %17 = ptrtoint i8* %result to i32, !insn.addr !6412
  %18 = bitcast i8* %result to i32*
  store i32 %spec.select88, i32* %18, align 4, !insn.addr !6413
  %19 = add i32 %17, 8, !insn.addr !6414
  %20 = inttoptr i32 %19 to i32*, !insn.addr !6414
  store i32 %result_count, i32* %20, align 4, !insn.addr !6414
  %21 = and i32 %precision, 2146435072, !insn.addr !6415
  %22 = icmp eq i32 %21, 0, !insn.addr !6416
  %23 = icmp eq i1 %22, false, !insn.addr !6417
  br i1 %23, label %dec_label_pc_45b05f, label %dec_label_pc_45b039, !insn.addr !6417

dec_label_pc_45b039:                              ; preds = %dec_label_pc_45affd
  %24 = fptrunc double %.reload to float, !insn.addr !6409
  %25 = bitcast float %24 to i32, !insn.addr !6409
  %26 = and i32 %precision, 1048575, !insn.addr !6418
  %27 = or i32 %26, %25, !insn.addr !6419
  %28 = icmp eq i32 %27, 0, !insn.addr !6419
  %29 = icmp eq i1 %28, false, !insn.addr !6420
  br i1 %29, label %dec_label_pc_45b05f, label %dec_label_pc_45b047, !insn.addr !6420

dec_label_pc_45b047:                              ; preds = %dec_label_pc_45b039
  store i8* bitcast (i8** @global_var_477c20 to i8*), i8** %stack_var_-2424, align 4, !insn.addr !6421
  %30 = add i32 %17, 4, !insn.addr !6422
  %31 = inttoptr i32 %30 to i32*, !insn.addr !6422
  store i32 0, i32* %31, align 4, !insn.addr !6422
  store i32 %result_count, i32* %stack_var_-2432, align 4, !insn.addr !6423
  %32 = ptrtoint i32* %stack_var_-2432 to i32, !insn.addr !6423
  store i32 %32, i32* %storemerge53.reg2mem, !insn.addr !6424
  br label %dec_label_pc_45c2c7, !insn.addr !6424

dec_label_pc_45b05f:                              ; preds = %dec_label_pc_45b039, %dec_label_pc_45affd
  %33 = bitcast double* %stack_var_4 to i8*
  store i8* %33, i8** %stack_var_-2424, align 4, !insn.addr !6425
  %34 = ptrtoint double* %stack_var_4 to i32, !insn.addr !6426
  %35 = load i32, i32* %stack_var_-2420, align 4, !insn.addr !6426
  %36 = call i32 @function_4030e9(i32 %34, i32 %35, i32 %0, i32 %1, i32 ptrtoint (i32* @80 to i32)), !insn.addr !6426
  %cond = icmp eq i32 %36, 0
  br i1 %cond, label %dec_label_pc_45b09e, label %dec_label_pc_45b06d

dec_label_pc_45b06d:                              ; preds = %dec_label_pc_45b05f
  %37 = add i32 %17, 4, !insn.addr !6427
  %38 = inttoptr i32 %37 to i32*, !insn.addr !6427
  store i32 1, i32* %38, align 4, !insn.addr !6427
  switch i32 %36, label %dec_label_pc_45b09e [
    i32 1, label %dec_label_pc_45c2d5
    i32 2, label %dec_label_pc_45c2b8
    i32 3, label %dec_label_pc_45c2b1
    i32 4, label %dec_label_pc_45c2aa
  ]

dec_label_pc_45b09e:                              ; preds = %dec_label_pc_45b06d, %dec_label_pc_45b05f
  %39 = ptrtoint i32* %stack_var_-4 to i32, !insn.addr !6428
  %40 = ptrtoint %_strflt* %flt to i32, !insn.addr !6429
  %41 = add i32 %40, 1, !insn.addr !6430
  store double %.reload, double* %stack_var_4, align 8, !insn.addr !6431
  %42 = trunc i64 %3 to i32, !insn.addr !6432
  %43 = udiv i32 %42, 1048576, !insn.addr !6433
  %44 = and i32 %43, 2047, !insn.addr !6434
  %45 = icmp eq i32 %44, 0, !insn.addr !6435
  %46 = icmp eq i1 %45, false, !insn.addr !6436
  %spec.store.select = select i1 %46, i32 0, i32 %44
  %spec.select = select i1 %46, i32 1048576, i32 0
  %not. = icmp ne i1 %46, true
  %spec.select69 = zext i1 %not. to i32
  %47 = fptrunc double %.reload to float, !insn.addr !6437
  %48 = bitcast float %47 to i32, !insn.addr !6437
  %49 = and i32 %42, 1048575, !insn.addr !6438
  %50 = add i32 %spec.store.select, %48, !insn.addr !6439
  %51 = icmp ult i32 %50, %48, !insn.addr !6439
  %52 = zext i1 %51 to i32, !insn.addr !6440
  %53 = or i32 %spec.select, %49, !insn.addr !6440
  %54 = add nuw nsw i32 %53, %52, !insn.addr !6440
  %55 = add nuw nsw i32 %44, %spec.select69, !insn.addr !6441
  %56 = call i32 @function_4039e5(i32 0, i32 %41, i32 %48), !insn.addr !6442
  %57 = inttoptr i32 %44 to i8*, !insn.addr !6443
  store i8* %57, i8** %stack_var_-2424, align 4, !insn.addr !6443
  %58 = call double @ceil(double %.reload), !insn.addr !6444
  call void @_ftol2_sse_excpt(), !insn.addr !6445
  store i8* inttoptr (i32 32 to i8*), i8** %stack_var_-2424, align 4, !insn.addr !6446
  %59 = icmp eq i32 %54, 0, !insn.addr !6447
  %60 = bitcast i8** %stack_var_-468 to i32*
  store i32 %50, i32* %60, align 4
  %61 = icmp eq i1 %59, false, !insn.addr !6448
  store i8* null, i8** %stack_var_-936, align 4, !insn.addr !6449
  %62 = select i1 %61, i32 2, i32 1, !insn.addr !6450
  %63 = inttoptr i32 %62 to i8*, !insn.addr !6451
  store i8* %63, i8** %stack_var_-472, align 4, !insn.addr !6451
  %64 = icmp ult i32 %55, 1075, !insn.addr !6452
  br i1 %64, label %dec_label_pc_45b55a, label %dec_label_pc_45b182, !insn.addr !6453

dec_label_pc_45b182:                              ; preds = %dec_label_pc_45b09e
  store i8* null, i8** %stack_var_-1396, align 4, !insn.addr !6454
  br i1 %59, label %dec_label_pc_45b399, label %dec_label_pc_45b1a7.preheader, !insn.addr !6455

dec_label_pc_45b1a7.preheader:                    ; preds = %dec_label_pc_45b182
  %65 = add i32 %39, -1392, !insn.addr !6456
  %66 = add i32 %39, -464, !insn.addr !6457
  store i32 0, i32* %ecx.0.reg2mem
  br label %dec_label_pc_45b1a7

dec_label_pc_45b1a7:                              ; preds = %dec_label_pc_45b1a7.preheader, %dec_label_pc_45b1bb
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %67 = add i32 %65, %ecx.0.reload, !insn.addr !6456
  %68 = inttoptr i32 %67 to i32*, !insn.addr !6456
  %69 = load i32, i32* %68, align 4, !insn.addr !6456
  %70 = add i32 %ecx.0.reload, %66, !insn.addr !6457
  %71 = inttoptr i32 %70 to i32*, !insn.addr !6457
  %72 = load i32, i32* %71, align 4, !insn.addr !6457
  %73 = icmp eq i32 %69, %72, !insn.addr !6457
  %74 = icmp eq i1 %73, false, !insn.addr !6458
  br i1 %74, label %dec_label_pc_45b399, label %dec_label_pc_45b1bb, !insn.addr !6458

dec_label_pc_45b1bb:                              ; preds = %dec_label_pc_45b1a7
  %75 = add nuw nsw i32 %ecx.0.reload, 4, !insn.addr !6459
  %76 = icmp eq i32 %ecx.0.reload, 4, !insn.addr !6460
  %77 = icmp eq i1 %76, false, !insn.addr !6461
  store i32 %75, i32* %ecx.0.reg2mem, !insn.addr !6461
  br i1 %77, label %dec_label_pc_45b1a7, label %dec_label_pc_45b1c3, !insn.addr !6461

dec_label_pc_45b1c3:                              ; preds = %dec_label_pc_45b1bb
  %78 = add nsw i32 %55, -1073, !insn.addr !6462
  %79 = udiv i32 %78, 32, !insn.addr !6463
  %80 = call i32 @function_402e69(), !insn.addr !6464
  %81 = add nuw nsw i32 %62, %79, !insn.addr !6465
  %82 = icmp ult i32 %81, 116
  br i1 %82, label %dec_label_pc_45b245, label %dec_label_pc_45b332, !insn.addr !6466

dec_label_pc_45b245:                              ; preds = %dec_label_pc_45b1c3
  %83 = and i32 %78, 31, !insn.addr !6467
  %84 = mul i32 %62, 4
  %85 = add i32 %39, -468, !insn.addr !6468
  %86 = add i32 %85, %84, !insn.addr !6468
  %87 = inttoptr i32 %86 to i32*, !insn.addr !6468
  %88 = load i32, i32* %87, align 4, !insn.addr !6468
  %89 = call i32 @llvm.ctlz.i32(i32 %88, i1 false), !range !1995, !insn.addr !6469
  %90 = icmp ugt i32 %83, %89
  %91 = icmp eq i32 %81, 115, !insn.addr !6470
  %or.cond78 = icmp eq i1 %91, %90
  %92 = icmp eq i1 %or.cond78, false, !insn.addr !6471
  %93 = icmp eq i1 %92, false, !insn.addr !6472
  br i1 %93, label %dec_label_pc_45b332, label %dec_label_pc_45b24d, !insn.addr !6472

dec_label_pc_45b24d:                              ; preds = %dec_label_pc_45b245
  %94 = inttoptr i32 %81 to i8*, !insn.addr !6473
  %95 = icmp ult i32 %81, 114, !insn.addr !6474
  store i32 %84, i32* %.pre-phi288.reg2mem, !insn.addr !6475
  store i32 %62, i32* %.reg2mem293, !insn.addr !6475
  store i32 %81, i32* %edx.0231.reg2mem, !insn.addr !6475
  store i8* %94, i8** %stack_var_-1896.0227.reg2mem, !insn.addr !6475
  br i1 %95, label %dec_label_pc_45b283.lr.ph, label %dec_label_pc_45b26c, !insn.addr !6475

dec_label_pc_45b26c:                              ; preds = %dec_label_pc_45b24d
  store i8* inttoptr (i32 114 to i8*), i8** %stack_var_-2424, align 4, !insn.addr !6476
  %96 = icmp ugt i32 %78, 3679, !insn.addr !6477
  store i8* inttoptr (i32 114 to i8*), i8** %stack_var_-1896.0230.reg2mem, !insn.addr !6478
  br i1 %96, label %dec_label_pc_45b2ea.thread, label %dec_label_pc_45b26c.dec_label_pc_45b283.lr.ph_crit_edge, !insn.addr !6478

dec_label_pc_45b26c.dec_label_pc_45b283.lr.ph_crit_edge: ; preds = %dec_label_pc_45b26c
  %97 = sub nsw i32 114, %79, !insn.addr !6479
  %.pre287 = mul i32 %97, 4, !insn.addr !6480
  store i32 %.pre287, i32* %.pre-phi288.reg2mem
  store i32 %97, i32* %.reg2mem293
  store i32 114, i32* %edx.0231.reg2mem
  store i8* inttoptr (i32 114 to i8*), i8** %stack_var_-1896.0227.reg2mem
  br label %dec_label_pc_45b283.lr.ph

dec_label_pc_45b283.lr.ph:                        ; preds = %dec_label_pc_45b26c.dec_label_pc_45b283.lr.ph_crit_edge, %dec_label_pc_45b24d
  %98 = sub nsw i32 17, %55, !insn.addr !6481
  %99 = add i32 %80, -1, !insn.addr !6482
  %100 = sub i32 0, %80, !insn.addr !6483
  %stack_var_-1896.0227.reload = load i8*, i8** %stack_var_-1896.0227.reg2mem
  %edx.0231.reload = load i32, i32* %edx.0231.reg2mem
  %.reload294 = load i32, i32* %.reg2mem293
  %.pre-phi288.reload = load i32, i32* %.pre-phi288.reg2mem
  %101 = ptrtoint i8** %stack_var_-468 to i32, !insn.addr !6484
  %102 = add i32 %.pre-phi288.reload, %101, !insn.addr !6480
  %103 = and i32 %98, 31, !insn.addr !6485
  store i32 %.reload294, i32* %esi.0161.reg2mem
  store i32 %62, i32* %ebx.0160.reg2mem
  store i32 %102, i32* %edx.1157.reg2mem
  store i32 %edx.0231.reload, i32* %stack_var_-1892.0.in156.reg2mem
  br label %dec_label_pc_45b283

dec_label_pc_45b2ea.thread:                       ; preds = %dec_label_pc_45b2e2, %dec_label_pc_45b26c
  %stack_var_-1896.0230.reload = load i8*, i8** %stack_var_-1896.0230.reg2mem
  %104 = ptrtoint i8* %stack_var_-1896.0230.reload to i32, !insn.addr !6486
  store i8* %stack_var_-1896.0230.reload, i8** %stack_var_-1896.0228.reg2mem
  store i32 %104, i32* %.reg2mem295
  br label %dec_label_pc_45b300

dec_label_pc_45b283:                              ; preds = %dec_label_pc_45b283.lr.ph, %dec_label_pc_45b2e2
  %stack_var_-1892.0.in156.reload = load i32, i32* %stack_var_-1892.0.in156.reg2mem
  %edx.1157.reload = load i32, i32* %edx.1157.reg2mem
  %ebx.0160.reload = load i32, i32* %ebx.0160.reg2mem
  %esi.0161.reload = load i32, i32* %esi.0161.reg2mem
  %105 = icmp ult i32 %esi.0161.reload, %ebx.0160.reload, !insn.addr !6487
  %106 = icmp eq i1 %105, false, !insn.addr !6488
  store i32 0, i32* %storemerge35.reg2mem, !insn.addr !6488
  br i1 %106, label %dec_label_pc_45b28d, label %dec_label_pc_45b287, !insn.addr !6488

dec_label_pc_45b287:                              ; preds = %dec_label_pc_45b283
  %107 = inttoptr i32 %edx.1157.reload to i32*, !insn.addr !6489
  %108 = load i32, i32* %107, align 4, !insn.addr !6489
  store i32 %108, i32* %storemerge35.reg2mem, !insn.addr !6490
  br label %dec_label_pc_45b28d, !insn.addr !6490

dec_label_pc_45b28d:                              ; preds = %dec_label_pc_45b283, %dec_label_pc_45b287
  %storemerge35.reload = load i32, i32* %storemerge35.reg2mem
  %109 = add nsw i32 %esi.0161.reload, -1, !insn.addr !6491
  %110 = icmp ult i32 %109, %ebx.0160.reload, !insn.addr !6492
  %111 = icmp eq i1 %110, false, !insn.addr !6493
  store i32 0, i32* %storemerge34.reg2mem, !insn.addr !6493
  br i1 %111, label %dec_label_pc_45b2a1, label %dec_label_pc_45b29a, !insn.addr !6493

dec_label_pc_45b29a:                              ; preds = %dec_label_pc_45b28d
  %112 = add i32 %edx.1157.reload, -4, !insn.addr !6494
  %113 = inttoptr i32 %112 to i32*, !insn.addr !6494
  %114 = load i32, i32* %113, align 4, !insn.addr !6494
  store i32 %114, i32* %storemerge34.reg2mem, !insn.addr !6495
  br label %dec_label_pc_45b2a1, !insn.addr !6495

dec_label_pc_45b2a1:                              ; preds = %dec_label_pc_45b28d, %dec_label_pc_45b29a
  %storemerge34.reload = load i32, i32* %storemerge34.reg2mem
  %115 = and i32 %storemerge34.reload, %100, !insn.addr !6496
  %116 = and i32 %storemerge35.reload, %99, !insn.addr !6497
  %117 = lshr i32 %115, %103
  %118 = shl i32 %116, %83
  %119 = or i32 %117, %118, !insn.addr !6498
  %120 = mul i32 %stack_var_-1892.0.in156.reload, 4, !insn.addr !6499
  %121 = add i32 %120, %66, !insn.addr !6499
  %122 = inttoptr i32 %121 to i32*, !insn.addr !6499
  store i32 %119, i32* %122, align 4, !insn.addr !6499
  %123 = icmp eq i32 %stack_var_-1892.0.in156.reload, 0, !insn.addr !6500
  br i1 %123, label %dec_label_pc_45b2ea, label %dec_label_pc_45b2e2, !insn.addr !6501

dec_label_pc_45b2e2:                              ; preds = %dec_label_pc_45b2a1
  %124 = add nsw i32 %stack_var_-1892.0.in156.reload, -1, !insn.addr !6502
  %125 = add i32 %edx.1157.reload, -4, !insn.addr !6503
  %126 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6504
  %127 = ptrtoint i8* %126 to i32, !insn.addr !6504
  %128 = icmp ult i32 %124, %79, !insn.addr !6477
  store i8* %stack_var_-1896.0227.reload, i8** %stack_var_-1896.0230.reg2mem, !insn.addr !6478
  store i32 %109, i32* %esi.0161.reg2mem, !insn.addr !6478
  store i32 %127, i32* %ebx.0160.reg2mem, !insn.addr !6478
  store i32 %125, i32* %edx.1157.reg2mem, !insn.addr !6478
  store i32 %124, i32* %stack_var_-1892.0.in156.reg2mem, !insn.addr !6478
  br i1 %128, label %dec_label_pc_45b2ea.thread, label %dec_label_pc_45b283, !insn.addr !6478

dec_label_pc_45b2ea:                              ; preds = %dec_label_pc_45b2a1
  %129 = ptrtoint i8* %stack_var_-1896.0227.reload to i32, !insn.addr !6486
  %130 = icmp ult i32 %78, 32
  store i8* %stack_var_-1896.0227.reload, i8** %stack_var_-1896.0228.reg2mem, !insn.addr !6505
  store i32 %129, i32* %.reg2mem295, !insn.addr !6505
  store i8* %stack_var_-1896.0227.reload, i8** %stack_var_-1896.0229.reg2mem, !insn.addr !6505
  store i32 %129, i32* %.reg2mem297, !insn.addr !6505
  br i1 %130, label %dec_label_pc_45b312, label %dec_label_pc_45b300, !insn.addr !6505

dec_label_pc_45b300:                              ; preds = %dec_label_pc_45b2ea.thread, %dec_label_pc_45b2ea
  %.reload296 = load i32, i32* %.reg2mem295
  %stack_var_-1896.0228.reload = load i8*, i8** %stack_var_-1896.0228.reg2mem
  %131 = bitcast i8** %stack_var_-468 to i8*, !insn.addr !6506
  call void @__asm_rep_stosd_memset(i8* nonnull %131, i32 0, i32 %79), !insn.addr !6506
  store i8* %stack_var_-1896.0228.reload, i8** %stack_var_-1896.0229.reg2mem, !insn.addr !6507
  store i32 %.reload296, i32* %.reg2mem297, !insn.addr !6507
  br label %dec_label_pc_45b312, !insn.addr !6507

dec_label_pc_45b312:                              ; preds = %dec_label_pc_45b300, %dec_label_pc_45b2ea
  br i1 %90, label %dec_label_pc_45b31f, label %dec_label_pc_45b32a, !insn.addr !6508

dec_label_pc_45b31f:                              ; preds = %dec_label_pc_45b312
  %.reload298 = load i32, i32* %.reg2mem297
  %132 = add i32 %.reload298, 1, !insn.addr !6509
  %133 = inttoptr i32 %132 to i8*, !insn.addr !6510
  store i8* %133, i8** %stack_var_-472, align 4, !insn.addr !6510
  br label %dec_label_pc_45b35d, !insn.addr !6511

dec_label_pc_45b32a:                              ; preds = %dec_label_pc_45b312
  %stack_var_-1896.0229.reload = load i8*, i8** %stack_var_-1896.0229.reg2mem
  store i8* %stack_var_-1896.0229.reload, i8** %stack_var_-472, align 4, !insn.addr !6512
  br label %dec_label_pc_45b35d, !insn.addr !6513

dec_label_pc_45b332:                              ; preds = %dec_label_pc_45b1c3, %dec_label_pc_45b245
  store i8* null, i8** %stack_var_-2424, align 4, !insn.addr !6514
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6515
  %134 = bitcast i8** %stack_var_-1396 to i8*
  store i32 460, i32* %stack_var_-2432, align 4, !insn.addr !6516
  %135 = bitcast i8** %stack_var_-468 to i8*
  %136 = call i32 @memcpy_s_3(i8* nonnull %135, i32 460, i8* nonnull %134, i32 0), !insn.addr !6517
  br label %dec_label_pc_45b35d, !insn.addr !6518

dec_label_pc_45b35d:                              ; preds = %dec_label_pc_45b332, %dec_label_pc_45b32a, %dec_label_pc_45b31f
  %137 = bitcast i8** %stack_var_-1396 to i32*
  store i32 4, i32* %137, align 4
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-936, align 4, !insn.addr !6519
  %138 = bitcast i8** %stack_var_-2424 to i32*
  store i32 4, i32* %138, align 4
  br label %dec_label_pc_45b37d, !insn.addr !6520

dec_label_pc_45b37d:                              ; preds = %dec_label_pc_45b533, %dec_label_pc_45b35d
  %storemerge38 = ptrtoint i8** %stack_var_-2424 to i32
  %139 = add i32 %storemerge38, -4, !insn.addr !6521
  %140 = inttoptr i32 %139 to i32*, !insn.addr !6521
  %141 = ptrtoint i8** %stack_var_-1396 to i32, !insn.addr !6521
  store i32 %141, i32* %140, align 4, !insn.addr !6521
  %142 = add i32 %storemerge38, -8, !insn.addr !6522
  %143 = inttoptr i32 %142 to i32*, !insn.addr !6522
  store i32 460, i32* %143, align 4, !insn.addr !6522
  %144 = add i32 %storemerge38, -12, !insn.addr !6523
  %145 = inttoptr i32 %144 to i32*, !insn.addr !6523
  %146 = ptrtoint i8** %stack_var_-932 to i32, !insn.addr !6523
  store i32 %146, i32* %145, align 4, !insn.addr !6523
  %147 = load i8*, i8** %stack_var_-2424, align 4, !insn.addr !6524
  %148 = call i32 @memcpy_s_3(i8* %147, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6524
  br label %dec_label_pc_45b776, !insn.addr !6525

dec_label_pc_45b399:                              ; preds = %dec_label_pc_45b1a7, %dec_label_pc_45b182
  %149 = add nsw i32 %55, -1074, !insn.addr !6526
  %150 = udiv i32 %149, 32, !insn.addr !6527
  %151 = call i32 @function_402e69(), !insn.addr !6528
  %152 = add nuw nsw i32 %62, %150, !insn.addr !6529
  %153 = icmp ult i32 %152, 116
  br i1 %153, label %dec_label_pc_45b41b, label %dec_label_pc_45b508, !insn.addr !6530

dec_label_pc_45b41b:                              ; preds = %dec_label_pc_45b399
  %154 = and i32 %149, 31, !insn.addr !6531
  %155 = mul i32 %62, 4
  %156 = add i32 %39, -468, !insn.addr !6532
  %157 = add i32 %156, %155, !insn.addr !6532
  %158 = inttoptr i32 %157 to i32*, !insn.addr !6532
  %159 = load i32, i32* %158, align 4, !insn.addr !6532
  %160 = call i32 @llvm.ctlz.i32(i32 %159, i1 false), !range !1995, !insn.addr !6533
  %161 = icmp ugt i32 %154, %160
  %162 = icmp eq i32 %152, 115, !insn.addr !6534
  %or.cond80 = icmp eq i1 %162, %161
  %163 = icmp eq i1 %or.cond80, false, !insn.addr !6535
  %164 = icmp eq i1 %163, false, !insn.addr !6536
  br i1 %164, label %dec_label_pc_45b508, label %dec_label_pc_45b423, !insn.addr !6536

dec_label_pc_45b423:                              ; preds = %dec_label_pc_45b41b
  %165 = inttoptr i32 %152 to i8*, !insn.addr !6537
  %166 = icmp ult i32 %152, 114, !insn.addr !6538
  store i32 %155, i32* %.pre-phi286.reg2mem, !insn.addr !6539
  store i32 %62, i32* %.reg2mem299, !insn.addr !6539
  store i32 %152, i32* %edx.3236.reg2mem, !insn.addr !6539
  store i8* %165, i8** %stack_var_-1892.1232.reg2mem, !insn.addr !6539
  br i1 %166, label %dec_label_pc_45b459.lr.ph, label %dec_label_pc_45b442, !insn.addr !6539

dec_label_pc_45b442:                              ; preds = %dec_label_pc_45b423
  store i8* inttoptr (i32 114 to i8*), i8** %stack_var_-2424, align 4, !insn.addr !6540
  %167 = icmp ugt i32 %149, 3679, !insn.addr !6541
  store i8* inttoptr (i32 114 to i8*), i8** %stack_var_-1892.1235.reg2mem, !insn.addr !6542
  br i1 %167, label %dec_label_pc_45b4c0.thread, label %dec_label_pc_45b442.dec_label_pc_45b459.lr.ph_crit_edge, !insn.addr !6542

dec_label_pc_45b442.dec_label_pc_45b459.lr.ph_crit_edge: ; preds = %dec_label_pc_45b442
  %168 = sub nsw i32 114, %150, !insn.addr !6543
  %.pre285 = mul i32 %168, 4, !insn.addr !6544
  store i32 %.pre285, i32* %.pre-phi286.reg2mem
  store i32 %168, i32* %.reg2mem299
  store i32 114, i32* %edx.3236.reg2mem
  store i8* inttoptr (i32 114 to i8*), i8** %stack_var_-1892.1232.reg2mem
  br label %dec_label_pc_45b459.lr.ph

dec_label_pc_45b459.lr.ph:                        ; preds = %dec_label_pc_45b442.dec_label_pc_45b459.lr.ph_crit_edge, %dec_label_pc_45b423
  %169 = sub nsw i32 18, %55, !insn.addr !6545
  %170 = add i32 %151, -1, !insn.addr !6546
  %171 = sub i32 0, %151, !insn.addr !6547
  %stack_var_-1892.1232.reload = load i8*, i8** %stack_var_-1892.1232.reg2mem
  %edx.3236.reload = load i32, i32* %edx.3236.reg2mem
  %.reload300 = load i32, i32* %.reg2mem299
  %.pre-phi286.reload = load i32, i32* %.pre-phi286.reg2mem
  %172 = ptrtoint i8** %stack_var_-468 to i32, !insn.addr !6548
  %173 = add i32 %.pre-phi286.reload, %172, !insn.addr !6544
  %174 = add i32 %39, -464, !insn.addr !6549
  %175 = and i32 %169, 31, !insn.addr !6550
  store i32 %.reload300, i32* %esi.2155.reg2mem
  store i32 %62, i32* %ebx.4154.reg2mem
  store i32 %173, i32* %edx.4151.reg2mem
  store i32 %edx.3236.reload, i32* %stack_var_-1896.1.in150.reg2mem
  br label %dec_label_pc_45b459

dec_label_pc_45b4c0.thread:                       ; preds = %dec_label_pc_45b4b8, %dec_label_pc_45b442
  %stack_var_-1892.1235.reload = load i8*, i8** %stack_var_-1892.1235.reg2mem
  %176 = ptrtoint i8* %stack_var_-1892.1235.reload to i32, !insn.addr !6551
  store i8* %stack_var_-1892.1235.reload, i8** %stack_var_-1892.1233.reg2mem
  store i32 %176, i32* %.reg2mem301
  br label %dec_label_pc_45b4d6

dec_label_pc_45b459:                              ; preds = %dec_label_pc_45b459.lr.ph, %dec_label_pc_45b4b8
  %stack_var_-1896.1.in150.reload = load i32, i32* %stack_var_-1896.1.in150.reg2mem
  %edx.4151.reload = load i32, i32* %edx.4151.reg2mem
  %ebx.4154.reload = load i32, i32* %ebx.4154.reg2mem
  %esi.2155.reload = load i32, i32* %esi.2155.reg2mem
  %177 = icmp ult i32 %esi.2155.reload, %ebx.4154.reload, !insn.addr !6552
  %178 = icmp eq i1 %177, false, !insn.addr !6553
  store i32 0, i32* %storemerge40.reg2mem, !insn.addr !6553
  br i1 %178, label %dec_label_pc_45b463, label %dec_label_pc_45b45d, !insn.addr !6553

dec_label_pc_45b45d:                              ; preds = %dec_label_pc_45b459
  %179 = inttoptr i32 %edx.4151.reload to i32*, !insn.addr !6554
  %180 = load i32, i32* %179, align 4, !insn.addr !6554
  store i32 %180, i32* %storemerge40.reg2mem, !insn.addr !6555
  br label %dec_label_pc_45b463, !insn.addr !6555

dec_label_pc_45b463:                              ; preds = %dec_label_pc_45b459, %dec_label_pc_45b45d
  %storemerge40.reload = load i32, i32* %storemerge40.reg2mem
  %181 = add nsw i32 %esi.2155.reload, -1, !insn.addr !6556
  %182 = icmp ult i32 %181, %ebx.4154.reload, !insn.addr !6557
  %183 = icmp eq i1 %182, false, !insn.addr !6558
  store i32 0, i32* %storemerge39.reg2mem, !insn.addr !6558
  br i1 %183, label %dec_label_pc_45b477, label %dec_label_pc_45b470, !insn.addr !6558

dec_label_pc_45b470:                              ; preds = %dec_label_pc_45b463
  %184 = add i32 %edx.4151.reload, -4, !insn.addr !6559
  %185 = inttoptr i32 %184 to i32*, !insn.addr !6559
  %186 = load i32, i32* %185, align 4, !insn.addr !6559
  store i32 %186, i32* %storemerge39.reg2mem, !insn.addr !6560
  br label %dec_label_pc_45b477, !insn.addr !6560

dec_label_pc_45b477:                              ; preds = %dec_label_pc_45b463, %dec_label_pc_45b470
  %storemerge39.reload = load i32, i32* %storemerge39.reg2mem
  %187 = and i32 %storemerge39.reload, %171, !insn.addr !6561
  %188 = and i32 %storemerge40.reload, %170, !insn.addr !6562
  %189 = lshr i32 %187, %175
  %190 = shl i32 %188, %154
  %191 = or i32 %189, %190, !insn.addr !6563
  %192 = mul i32 %stack_var_-1896.1.in150.reload, 4, !insn.addr !6549
  %193 = add i32 %174, %192, !insn.addr !6549
  %194 = inttoptr i32 %193 to i32*, !insn.addr !6549
  store i32 %191, i32* %194, align 4, !insn.addr !6549
  %195 = icmp eq i32 %stack_var_-1896.1.in150.reload, 0, !insn.addr !6564
  br i1 %195, label %dec_label_pc_45b4c0, label %dec_label_pc_45b4b8, !insn.addr !6565

dec_label_pc_45b4b8:                              ; preds = %dec_label_pc_45b477
  %196 = add nsw i32 %stack_var_-1896.1.in150.reload, -1, !insn.addr !6566
  %197 = add i32 %edx.4151.reload, -4, !insn.addr !6567
  %198 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6568
  %199 = ptrtoint i8* %198 to i32, !insn.addr !6568
  %200 = icmp ult i32 %196, %150, !insn.addr !6541
  store i8* %stack_var_-1892.1232.reload, i8** %stack_var_-1892.1235.reg2mem, !insn.addr !6542
  store i32 %181, i32* %esi.2155.reg2mem, !insn.addr !6542
  store i32 %199, i32* %ebx.4154.reg2mem, !insn.addr !6542
  store i32 %197, i32* %edx.4151.reg2mem, !insn.addr !6542
  store i32 %196, i32* %stack_var_-1896.1.in150.reg2mem, !insn.addr !6542
  br i1 %200, label %dec_label_pc_45b4c0.thread, label %dec_label_pc_45b459, !insn.addr !6542

dec_label_pc_45b4c0:                              ; preds = %dec_label_pc_45b477
  %201 = ptrtoint i8* %stack_var_-1892.1232.reload to i32, !insn.addr !6551
  %202 = icmp ult i32 %149, 32
  store i8* %stack_var_-1892.1232.reload, i8** %stack_var_-1892.1233.reg2mem, !insn.addr !6569
  store i32 %201, i32* %.reg2mem301, !insn.addr !6569
  store i8* %stack_var_-1892.1232.reload, i8** %stack_var_-1892.1234.reg2mem, !insn.addr !6569
  store i32 %201, i32* %.reg2mem303, !insn.addr !6569
  br i1 %202, label %dec_label_pc_45b4e8, label %dec_label_pc_45b4d6, !insn.addr !6569

dec_label_pc_45b4d6:                              ; preds = %dec_label_pc_45b4c0.thread, %dec_label_pc_45b4c0
  %.reload302 = load i32, i32* %.reg2mem301
  %stack_var_-1892.1233.reload = load i8*, i8** %stack_var_-1892.1233.reg2mem
  %203 = bitcast i8** %stack_var_-468 to i8*, !insn.addr !6570
  call void @__asm_rep_stosd_memset(i8* nonnull %203, i32 0, i32 %150), !insn.addr !6570
  store i8* %stack_var_-1892.1233.reload, i8** %stack_var_-1892.1234.reg2mem, !insn.addr !6571
  store i32 %.reload302, i32* %.reg2mem303, !insn.addr !6571
  br label %dec_label_pc_45b4e8, !insn.addr !6571

dec_label_pc_45b4e8:                              ; preds = %dec_label_pc_45b4d6, %dec_label_pc_45b4c0
  br i1 %161, label %dec_label_pc_45b4f5, label %dec_label_pc_45b500, !insn.addr !6572

dec_label_pc_45b4f5:                              ; preds = %dec_label_pc_45b4e8
  %.reload304 = load i32, i32* %.reg2mem303
  %204 = add i32 %.reload304, 1, !insn.addr !6573
  %205 = inttoptr i32 %204 to i8*, !insn.addr !6574
  store i8* %205, i8** %stack_var_-472, align 4, !insn.addr !6574
  br label %dec_label_pc_45b533, !insn.addr !6575

dec_label_pc_45b500:                              ; preds = %dec_label_pc_45b4e8
  %stack_var_-1892.1234.reload = load i8*, i8** %stack_var_-1892.1234.reg2mem
  store i8* %stack_var_-1892.1234.reload, i8** %stack_var_-472, align 4, !insn.addr !6576
  br label %dec_label_pc_45b533, !insn.addr !6577

dec_label_pc_45b508:                              ; preds = %dec_label_pc_45b399, %dec_label_pc_45b41b
  store i8* null, i8** %stack_var_-2424, align 4, !insn.addr !6578
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6579
  %206 = bitcast i8** %stack_var_-1396 to i8*
  store i32 460, i32* %stack_var_-2432, align 4, !insn.addr !6580
  %207 = bitcast i8** %stack_var_-468 to i8*
  %208 = call i32 @memcpy_s_3(i8* nonnull %207, i32 460, i8* nonnull %206, i32 0), !insn.addr !6581
  br label %dec_label_pc_45b533, !insn.addr !6582

dec_label_pc_45b533:                              ; preds = %dec_label_pc_45b508, %dec_label_pc_45b500, %dec_label_pc_45b4f5
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-1396, align 4, !insn.addr !6583
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-936, align 4, !insn.addr !6584
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-2424, align 4, !insn.addr !6585
  br label %dec_label_pc_45b37d, !insn.addr !6586

dec_label_pc_45b55a:                              ; preds = %dec_label_pc_45b09e
  %209 = icmp eq i32 %55, 53, !insn.addr !6587
  br i1 %209, label %dec_label_pc_45b675, label %dec_label_pc_45b563, !insn.addr !6588

dec_label_pc_45b563:                              ; preds = %dec_label_pc_45b55a
  store i8* null, i8** %stack_var_-1396, align 4, !insn.addr !6589
  br i1 %59, label %dec_label_pc_45b675, label %dec_label_pc_45b588.preheader, !insn.addr !6590

dec_label_pc_45b588.preheader:                    ; preds = %dec_label_pc_45b563
  %210 = add i32 %39, -1392, !insn.addr !6591
  %211 = add i32 %39, -464, !insn.addr !6592
  store i32 0, i32* %ecx.3.reg2mem
  br label %dec_label_pc_45b588

dec_label_pc_45b588:                              ; preds = %dec_label_pc_45b588.preheader, %dec_label_pc_45b59c
  %ecx.3.reload = load i32, i32* %ecx.3.reg2mem
  %212 = add i32 %ecx.3.reload, %210, !insn.addr !6591
  %213 = inttoptr i32 %212 to i32*, !insn.addr !6591
  %214 = load i32, i32* %213, align 4, !insn.addr !6591
  %215 = add i32 %ecx.3.reload, %211, !insn.addr !6592
  %216 = inttoptr i32 %215 to i32*, !insn.addr !6592
  %217 = load i32, i32* %216, align 4, !insn.addr !6592
  %218 = icmp eq i32 %214, %217, !insn.addr !6592
  %219 = icmp eq i1 %218, false, !insn.addr !6593
  br i1 %219, label %dec_label_pc_45b675, label %dec_label_pc_45b59c, !insn.addr !6593

dec_label_pc_45b59c:                              ; preds = %dec_label_pc_45b588
  %220 = add nuw nsw i32 %ecx.3.reload, 4, !insn.addr !6594
  %221 = icmp eq i32 %ecx.3.reload, 4, !insn.addr !6595
  %222 = icmp eq i1 %221, false, !insn.addr !6596
  store i32 %220, i32* %ecx.3.reg2mem, !insn.addr !6596
  br i1 %222, label %dec_label_pc_45b588, label %dec_label_pc_45b5a4, !insn.addr !6596

dec_label_pc_45b5a4:                              ; preds = %dec_label_pc_45b59c
  %223 = ptrtoint i8** %stack_var_-472 to i32, !insn.addr !6597
  %224 = mul i32 %62, 4, !insn.addr !6598
  %225 = add i32 %224, %223, !insn.addr !6598
  store i32 %62, i32* %ecx.4.reg2mem, !insn.addr !6599
  store i32 %62, i32* %ebx.7.reg2mem, !insn.addr !6599
  store i32 %225, i32* %esi.4.reg2mem, !insn.addr !6599
  br label %dec_label_pc_45b5d2, !insn.addr !6599

dec_label_pc_45b5d2:                              ; preds = %dec_label_pc_45b617, %dec_label_pc_45b5a4
  %esi.4.reload = load i32, i32* %esi.4.reg2mem
  %ebx.7.reload = load i32, i32* %ebx.7.reg2mem
  %ecx.4.reload = load i32, i32* %ecx.4.reg2mem
  %226 = icmp ult i32 %ecx.4.reload, %ebx.7.reload, !insn.addr !6600
  %227 = icmp eq i1 %226, false, !insn.addr !6601
  store i32 0, i32* %storemerge45.reg2mem, !insn.addr !6601
  br i1 %227, label %dec_label_pc_45b5ec, label %dec_label_pc_45b5d6, !insn.addr !6601

dec_label_pc_45b5d6:                              ; preds = %dec_label_pc_45b5d2
  %228 = mul i32 %ecx.4.reload, 4, !insn.addr !6602
  %229 = add i32 %228, %211, !insn.addr !6602
  %230 = inttoptr i32 %229 to i32*, !insn.addr !6602
  %231 = load i32, i32* %230, align 4, !insn.addr !6602
  store i32 %231, i32* %storemerge45.reg2mem, !insn.addr !6603
  br label %dec_label_pc_45b5ec, !insn.addr !6603

dec_label_pc_45b5ec:                              ; preds = %dec_label_pc_45b5d2, %dec_label_pc_45b5d6
  %storemerge45.reload = load i32, i32* %storemerge45.reg2mem
  %232 = add nsw i32 %ecx.4.reload, -1, !insn.addr !6604
  %233 = icmp ult i32 %232, %ebx.7.reload, !insn.addr !6605
  %234 = icmp eq i1 %233, false, !insn.addr !6606
  store i32 0, i32* %storemerge44.reg2mem, !insn.addr !6606
  br i1 %234, label %dec_label_pc_45b5f9, label %dec_label_pc_45b5f3, !insn.addr !6606

dec_label_pc_45b5f3:                              ; preds = %dec_label_pc_45b5ec
  %235 = inttoptr i32 %esi.4.reload to i32*, !insn.addr !6607
  %236 = load i32, i32* %235, align 4, !insn.addr !6607
  store i32 %236, i32* %storemerge44.reg2mem, !insn.addr !6608
  br label %dec_label_pc_45b5f9, !insn.addr !6608

dec_label_pc_45b5f9:                              ; preds = %dec_label_pc_45b5ec, %dec_label_pc_45b5f3
  %storemerge44.reload = load i32, i32* %storemerge44.reg2mem
  %237 = udiv i32 %storemerge44.reload, 1073741824, !insn.addr !6609
  %238 = mul i32 %storemerge45.reload, 4, !insn.addr !6610
  %239 = or i32 %237, %238, !insn.addr !6611
  %240 = mul i32 %ecx.4.reload, 4, !insn.addr !6612
  %241 = add i32 %240, %211, !insn.addr !6612
  %242 = inttoptr i32 %241 to i32*, !insn.addr !6612
  store i32 %239, i32* %242, align 4, !insn.addr !6612
  %243 = icmp eq i32 %ecx.4.reload, 0, !insn.addr !6613
  br i1 %243, label %dec_label_pc_45b61f, label %dec_label_pc_45b617, !insn.addr !6614

dec_label_pc_45b617:                              ; preds = %dec_label_pc_45b5f9
  %244 = add i32 %esi.4.reload, -4, !insn.addr !6615
  %245 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6616
  %246 = ptrtoint i8* %245 to i32, !insn.addr !6616
  store i32 %232, i32* %ecx.4.reg2mem, !insn.addr !6617
  store i32 %246, i32* %ebx.7.reg2mem, !insn.addr !6617
  store i32 %244, i32* %esi.4.reg2mem, !insn.addr !6617
  br label %dec_label_pc_45b5d2, !insn.addr !6617

dec_label_pc_45b61f:                              ; preds = %dec_label_pc_45b5f9
  %247 = call i32 @llvm.ctlz.i32(i32 %54, i1 false), !range !1995, !insn.addr !6618
  %248 = icmp ult i32 %247, 2, !insn.addr !6619
  %249 = zext i1 %248 to i32
  %storemerge43.in = add nuw nsw i32 %62, %249
  %storemerge43 = inttoptr i32 %storemerge43.in to i8*
  store i8* %storemerge43, i8** %stack_var_-472, align 4
  %250 = sub nsw i32 1077, %55, !insn.addr !6620
  %251 = udiv i32 %250, 32, !insn.addr !6621
  %252 = mul i32 %251, 4, !insn.addr !6622
  %253 = inttoptr i32 %252 to i8*, !insn.addr !6623
  store i8* %253, i8** %stack_var_-2424, align 4, !insn.addr !6623
  %254 = ptrtoint i8** %stack_var_-1396 to i32, !insn.addr !6624
  store i32 %254, i32* %stack_var_-2432, align 4, !insn.addr !6624
  %255 = bitcast i8** %stack_var_-1396 to i8*
  call void @memset(i8* nonnull %255, i8 0, i32 %252), !insn.addr !6625
  %256 = and i32 %250, 31, !insn.addr !6626
  %257 = shl i32 1, %256
  %258 = add i32 %210, %252, !insn.addr !6627
  %259 = inttoptr i32 %258 to i32*, !insn.addr !6627
  store i32 %257, i32* %259, align 4, !insn.addr !6627
  store i8* %255, i8** %.pre-phi.reg2mem, !insn.addr !6628
  store i32 %251, i32* %edi.4.reg2mem, !insn.addr !6628
  br label %dec_label_pc_45b747, !insn.addr !6628

dec_label_pc_45b675:                              ; preds = %dec_label_pc_45b588, %dec_label_pc_45b563, %dec_label_pc_45b55a
  %260 = mul i32 %62, 4, !insn.addr !6629
  %261 = add i32 %39, -468, !insn.addr !6629
  %262 = add i32 %261, %260, !insn.addr !6629
  %263 = inttoptr i32 %262 to i32*, !insn.addr !6629
  %264 = load i32, i32* %263, align 4, !insn.addr !6629
  %265 = ptrtoint i8** %stack_var_-472 to i32, !insn.addr !6630
  %266 = add i32 %260, %265, !insn.addr !6631
  %267 = add i32 %39, -464
  store i32 %62, i32* %ecx.5.reg2mem, !insn.addr !6632
  store i32 %62, i32* %ebx.8.reg2mem, !insn.addr !6632
  store i32 %266, i32* %esi.5.reg2mem, !insn.addr !6632
  br label %dec_label_pc_45b6aa, !insn.addr !6632

dec_label_pc_45b6aa:                              ; preds = %dec_label_pc_45b6ee, %dec_label_pc_45b675
  %esi.5.reload = load i32, i32* %esi.5.reg2mem
  %ebx.8.reload = load i32, i32* %ebx.8.reg2mem
  %ecx.5.reload = load i32, i32* %ecx.5.reg2mem
  %268 = icmp ult i32 %ecx.5.reload, %ebx.8.reload, !insn.addr !6633
  %269 = icmp eq i1 %268, false, !insn.addr !6634
  store i32 0, i32* %storemerge50.reg2mem, !insn.addr !6634
  br i1 %269, label %dec_label_pc_45b6c4, label %dec_label_pc_45b6ae, !insn.addr !6634

dec_label_pc_45b6ae:                              ; preds = %dec_label_pc_45b6aa
  %270 = mul i32 %ecx.5.reload, 4, !insn.addr !6635
  %271 = add i32 %270, %267, !insn.addr !6635
  %272 = inttoptr i32 %271 to i32*, !insn.addr !6635
  %273 = load i32, i32* %272, align 4, !insn.addr !6635
  store i32 %273, i32* %storemerge50.reg2mem, !insn.addr !6636
  br label %dec_label_pc_45b6c4, !insn.addr !6636

dec_label_pc_45b6c4:                              ; preds = %dec_label_pc_45b6aa, %dec_label_pc_45b6ae
  %storemerge50.reload = load i32, i32* %storemerge50.reg2mem
  %274 = add nsw i32 %ecx.5.reload, -1, !insn.addr !6637
  %275 = icmp ult i32 %274, %ebx.8.reload, !insn.addr !6638
  %276 = icmp eq i1 %275, false, !insn.addr !6639
  store i32 0, i32* %storemerge49.reg2mem, !insn.addr !6639
  br i1 %276, label %dec_label_pc_45b6d1, label %dec_label_pc_45b6cb, !insn.addr !6639

dec_label_pc_45b6cb:                              ; preds = %dec_label_pc_45b6c4
  %277 = inttoptr i32 %esi.5.reload to i32*, !insn.addr !6640
  %278 = load i32, i32* %277, align 4, !insn.addr !6640
  store i32 %278, i32* %storemerge49.reg2mem, !insn.addr !6641
  br label %dec_label_pc_45b6d1, !insn.addr !6641

dec_label_pc_45b6d1:                              ; preds = %dec_label_pc_45b6c4, %dec_label_pc_45b6cb
  %storemerge49.reload = load i32, i32* %storemerge49.reg2mem
  %279 = lshr i32 %storemerge49.reload, 31, !insn.addr !6642
  %280 = mul i32 %storemerge50.reload, 2, !insn.addr !6643
  %281 = or i32 %279, %280, !insn.addr !6644
  %282 = mul i32 %ecx.5.reload, 4, !insn.addr !6645
  %283 = add i32 %282, %267, !insn.addr !6645
  %284 = inttoptr i32 %283 to i32*, !insn.addr !6645
  store i32 %281, i32* %284, align 4, !insn.addr !6645
  %285 = icmp eq i32 %ecx.5.reload, 0, !insn.addr !6646
  br i1 %285, label %dec_label_pc_45b6f6, label %dec_label_pc_45b6ee, !insn.addr !6647

dec_label_pc_45b6ee:                              ; preds = %dec_label_pc_45b6d1
  %286 = add i32 %esi.5.reload, -4, !insn.addr !6648
  %287 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6649
  %288 = ptrtoint i8* %287 to i32, !insn.addr !6649
  store i32 %274, i32* %ecx.5.reg2mem, !insn.addr !6650
  store i32 %288, i32* %ebx.8.reg2mem, !insn.addr !6650
  store i32 %286, i32* %esi.5.reg2mem, !insn.addr !6650
  br label %dec_label_pc_45b6aa, !insn.addr !6650

dec_label_pc_45b6f6:                              ; preds = %dec_label_pc_45b6d1
  %289 = icmp slt i32 %264, 0, !insn.addr !6651
  %290 = zext i1 %289 to i32
  %storemerge48.in = add nuw nsw i32 %62, %290
  %storemerge48 = inttoptr i32 %storemerge48.in to i8*
  store i8* %storemerge48, i8** %stack_var_-472, align 4
  %291 = sub nsw i32 1076, %55, !insn.addr !6652
  %292 = udiv i32 %291, 32, !insn.addr !6653
  %293 = mul i32 %292, 4, !insn.addr !6654
  %294 = inttoptr i32 %293 to i8*, !insn.addr !6655
  store i8* %294, i8** %stack_var_-2424, align 4, !insn.addr !6655
  %295 = ptrtoint i8** %stack_var_-1396 to i32, !insn.addr !6656
  store i32 %295, i32* %stack_var_-2432, align 4, !insn.addr !6656
  %296 = bitcast i8** %stack_var_-1396 to i8*
  call void @memset(i8* nonnull %296, i8 0, i32 %293), !insn.addr !6657
  %297 = and i32 %291, 31, !insn.addr !6658
  %298 = shl i32 1, %297
  %299 = add i32 %39, -1392, !insn.addr !6659
  %300 = add i32 %299, %293, !insn.addr !6659
  %301 = inttoptr i32 %300 to i32*, !insn.addr !6659
  store i32 %298, i32* %301, align 4, !insn.addr !6659
  store i8* %296, i8** %.pre-phi.reg2mem, !insn.addr !6659
  store i32 %292, i32* %edi.4.reg2mem, !insn.addr !6659
  br label %dec_label_pc_45b747, !insn.addr !6659

dec_label_pc_45b747:                              ; preds = %dec_label_pc_45b6f6, %dec_label_pc_45b61f
  %edi.4.reload = load i32, i32* %edi.4.reg2mem
  %.pre-phi.reload = load i8*, i8** %.pre-phi.reg2mem
  %302 = add nuw nsw i32 %edi.4.reload, 1, !insn.addr !6660
  %303 = inttoptr i32 %302 to i8*, !insn.addr !6661
  store i8* %303, i8** %stack_var_-936, align 4, !insn.addr !6661
  %304 = mul i32 %302, 4, !insn.addr !6662
  %305 = bitcast i8** %stack_var_-932 to i8*
  %306 = call i32 @memcpy_s_3(i8* nonnull %305, i32 460, i8* nonnull %.pre-phi.reload, i32 %304), !insn.addr !6663
  br label %dec_label_pc_45b776, !insn.addr !6664

dec_label_pc_45b776:                              ; preds = %dec_label_pc_45b747, %dec_label_pc_45b37d
  store i8* inttoptr (i32 10 to i8*), i8** %stack_var_-2424, align 4, !insn.addr !6665
  %307 = ptrtoint i32* %stack_var_-2420 to i32, !insn.addr !6666
  br i1 icmp slt (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 0), label %dec_label_pc_45bbe3, label %dec_label_pc_45b78f, !insn.addr !6667

dec_label_pc_45b78f:                              ; preds = %dec_label_pc_45b776
  br i1 or (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i1 icmp ult (i32 ptrtoint (i32* @80 to i32), i32 10)), label %dec_label_pc_45bb09, label %dec_label_pc_45b7a7.preheader, !insn.addr !6668

dec_label_pc_45b7a7.preheader:                    ; preds = %dec_label_pc_45b78f
  %308 = add i32 %307, -4
  %309 = inttoptr i32 %308 to i32*
  %310 = add i32 %307, -8
  %311 = inttoptr i32 %310 to i32*
  %312 = add i32 %307, -12
  %313 = inttoptr i32 %312 to i32*
  %314 = ptrtoint i8** %stack_var_-1396 to i32, !insn.addr !6669
  %315 = add i32 %307, -16
  %316 = inttoptr i32 %315 to i32*
  %317 = add i32 %307, -20
  %318 = inttoptr i32 %317 to i32*
  %319 = add i32 %307, -24
  %320 = inttoptr i32 %319 to i32*
  %321 = ptrtoint i8** %stack_var_-932 to i32
  %322 = add i32 %39, -1856
  %323 = ptrtoint i32* %stack_var_-2404 to i32
  %324 = add i32 %39, -928
  %325 = ptrtoint i32* %stack_var_-1860 to i32
  store i32 udiv (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 10), i32* %stack_var_-1908.0.in.reg2mem
  br label %dec_label_pc_45b7a7

dec_label_pc_45b7a7:                              ; preds = %dec_label_pc_45b7a7.preheader, %dec_label_pc_45baeb
  %stack_var_-1908.0.in.reload = load i32, i32* %stack_var_-1908.0.in.reg2mem
  %326 = icmp ult i32 %stack_var_-1908.0.in.reload, 39
  store i32 %stack_var_-1908.0.in.reload, i32* %eax.5.reg2mem, !insn.addr !6670
  br i1 %326, label %dec_label_pc_45b7af, label %dec_label_pc_45b7ac, !insn.addr !6670

dec_label_pc_45b7ac:                              ; preds = %dec_label_pc_45b7a7
  store i32 38, i32* %309, align 4, !insn.addr !6671
  store i32 38, i32* %eax.5.reg2mem, !insn.addr !6672
  br label %dec_label_pc_45b7af, !insn.addr !6672

dec_label_pc_45b7af:                              ; preds = %dec_label_pc_45b7ac, %dec_label_pc_45b7a7
  %stack_var_-1908.0 = inttoptr i32 %stack_var_-1908.0.in.reload to i8*
  %eax.5.reload = load i32, i32* %eax.5.reg2mem
  %327 = mul i32 %eax.5.reload, 4, !insn.addr !6673
  %328 = add i32 %327, ptrtoint (i8** @global_var_477b66 to i32), !insn.addr !6673
  %329 = inttoptr i32 %328 to i8*, !insn.addr !6673
  %330 = load i8, i8* %329, align 4, !insn.addr !6673
  %331 = zext i8 %330 to i32, !insn.addr !6673
  %332 = add i32 %327, ptrtoint (i8** @global_var_477b67 to i32), !insn.addr !6674
  %333 = inttoptr i32 %332 to i8*, !insn.addr !6674
  %334 = load i8, i8* %333, align 4, !insn.addr !6674
  %335 = zext i8 %334 to i32, !insn.addr !6674
  %336 = mul i32 %331, 4, !insn.addr !6675
  store i32 %336, i32* %309, align 4, !insn.addr !6676
  %337 = add nuw nsw i32 %335, %331, !insn.addr !6677
  store i32 0, i32* %311, align 4, !insn.addr !6678
  store i32 %314, i32* %313, align 4, !insn.addr !6669
  call void @memset(i8* %stack_var_-1908.0, i8 ptrtoint (i32* @80 to i8), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6679
  %338 = mul i32 %335, 4, !insn.addr !6680
  store i32 %338, i32* %316, align 4, !insn.addr !6681
  %339 = add i32 %327, ptrtoint (i16** @global_var_477b64 to i32), !insn.addr !6682
  %340 = inttoptr i32 %339 to i16*, !insn.addr !6682
  %341 = load i16, i16* %340, align 4, !insn.addr !6682
  %342 = zext i16 %341 to i32, !insn.addr !6682
  %343 = mul i32 %342, 4, !insn.addr !6683
  %344 = add i32 %343, ptrtoint ([578 x i32]* @large_power_data to i32), !insn.addr !6683
  store i32 %344, i32* %318, align 4, !insn.addr !6684
  %345 = add i32 %336, %314, !insn.addr !6685
  store i32 %345, i32* %320, align 4, !insn.addr !6686
  call void @memcpy(i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6687
  %346 = icmp ult i32 %337, 2
  br i1 %346, label %dec_label_pc_45b81a, label %dec_label_pc_45b88c, !insn.addr !6688

dec_label_pc_45b81a:                              ; preds = %dec_label_pc_45b7af
  %347 = load i8*, i8** %stack_var_-1396, align 4, !insn.addr !6689
  %348 = icmp eq i8* %347, null, !insn.addr !6690
  %349 = icmp eq i1 %348, false, !insn.addr !6691
  br i1 %349, label %dec_label_pc_45b837, label %dec_label_pc_45b824, !insn.addr !6691

dec_label_pc_45b824:                              ; preds = %dec_label_pc_45b81a
  store i8* null, i8** %stack_var_-936, align 4, !insn.addr !6692
  store i32 0, i32* %storemerge167.reg2mem, !insn.addr !6693
  store i32 %325, i32* %storemerge27.reg2mem, !insn.addr !6693
  br label %dec_label_pc_45bad4, !insn.addr !6693

dec_label_pc_45b837:                              ; preds = %dec_label_pc_45b81a
  %350 = icmp eq i8* %347, inttoptr (i32 1 to i8*), !insn.addr !6694
  %351 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6695
  %352 = icmp eq i8* %351, null, !insn.addr !6695
  %or.cond = or i1 %350, %352
  br i1 %or.cond, label %dec_label_pc_45baeb, label %dec_label_pc_45b84d, !insn.addr !6696

dec_label_pc_45b84d:                              ; preds = %dec_label_pc_45b837
  %353 = ptrtoint i8* %347 to i32, !insn.addr !6689
  %354 = ptrtoint i8* %351 to i32, !insn.addr !6697
  %355 = zext i32 %353 to i64, !insn.addr !6698
  store i32 0, i32* %ecx.6.reg2mem, !insn.addr !6699
  store i32 0, i32* %esi.6.reg2mem, !insn.addr !6699
  br label %dec_label_pc_45b859, !insn.addr !6699

dec_label_pc_45b859:                              ; preds = %dec_label_pc_45b859, %dec_label_pc_45b84d
  %esi.6.reload = load i32, i32* %esi.6.reg2mem
  %ecx.6.reload = load i32, i32* %ecx.6.reg2mem
  %356 = mul i32 %esi.6.reload, 4, !insn.addr !6698
  %357 = add i32 %356, %324, !insn.addr !6698
  %358 = inttoptr i32 %357 to i32*, !insn.addr !6698
  %359 = load i32, i32* %358, align 4, !insn.addr !6698
  %360 = zext i32 %359 to i64, !insn.addr !6698
  %361 = mul nuw i64 %360, %355, !insn.addr !6698
  %362 = trunc i64 %361 to i32, !insn.addr !6698
  %363 = udiv i64 %361, 4294967296, !insn.addr !6698
  %364 = trunc i64 %363 to i32, !insn.addr !6698
  %365 = add i32 %ecx.6.reload, %362, !insn.addr !6700
  %366 = icmp ult i32 %365, %362, !insn.addr !6700
  store i32 %365, i32* %358, align 4, !insn.addr !6701
  %367 = zext i1 %366 to i32, !insn.addr !6702
  %368 = add i32 %367, %364, !insn.addr !6702
  %369 = add i32 %esi.6.reload, 1, !insn.addr !6703
  %370 = icmp eq i32 %369, %354, !insn.addr !6704
  %371 = icmp eq i1 %370, false, !insn.addr !6705
  store i32 %368, i32* %ecx.6.reg2mem, !insn.addr !6705
  store i32 %369, i32* %esi.6.reg2mem, !insn.addr !6705
  store i32 %368, i32* %ecx.8.reg2mem, !insn.addr !6705
  br i1 %371, label %dec_label_pc_45b859, label %dec_label_pc_45b92a, !insn.addr !6705

dec_label_pc_45b87a:                              ; preds = %dec_label_pc_45b937
  %372 = ptrtoint i8* %410 to i32, !insn.addr !6706
  %373 = mul i32 %372, 4, !insn.addr !6707
  %374 = add i32 %373, %324, !insn.addr !6707
  %375 = inttoptr i32 %374 to i32*, !insn.addr !6707
  store i32 %ecx.8.reload, i32* %375, align 4, !insn.addr !6707
  %376 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6708
  %377 = ptrtoint i8* %376 to i32, !insn.addr !6708
  %378 = add i32 %377, 1, !insn.addr !6708
  %379 = inttoptr i32 %378 to i8*, !insn.addr !6708
  store i8* %379, i8** %stack_var_-936, align 4, !insn.addr !6708
  br label %dec_label_pc_45baeb, !insn.addr !6709

dec_label_pc_45b88c:                              ; preds = %dec_label_pc_45b7af
  %380 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6710
  %switch = icmp ult i8* %380, inttoptr (i32 2 to i8*)
  br i1 %switch, label %dec_label_pc_45b899, label %dec_label_pc_45b960

dec_label_pc_45b899:                              ; preds = %dec_label_pc_45b88c
  %381 = load i8*, i8** %stack_var_-932, align 4, !insn.addr !6711
  %382 = mul i32 %337, 4, !insn.addr !6712
  store i32 %382, i32* %309, align 4, !insn.addr !6713
  store i32 %314, i32* %311, align 4, !insn.addr !6714
  %383 = inttoptr i32 %337 to i8*, !insn.addr !6715
  store i8* %383, i8** %stack_var_-936, align 4, !insn.addr !6715
  store i32 460, i32* %313, align 4, !insn.addr !6716
  store i32 %321, i32* %316, align 4, !insn.addr !6717
  %384 = call i32 @memcpy_s_3(i8* %381, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6718
  %385 = icmp eq i8* %381, null, !insn.addr !6719
  %386 = icmp eq i1 %385, false, !insn.addr !6720
  br i1 %386, label %dec_label_pc_45b8e6, label %dec_label_pc_45b8cc, !insn.addr !6720

dec_label_pc_45b8cc:                              ; preds = %dec_label_pc_45b899
  store i8* null, i8** %stack_var_-936, align 4, !insn.addr !6721
  store i32 0, i32* %storemerge167.reg2mem, !insn.addr !6722
  store i32 %314, i32* %storemerge27.reg2mem, !insn.addr !6722
  br label %dec_label_pc_45bad4, !insn.addr !6722

dec_label_pc_45b8e6:                              ; preds = %dec_label_pc_45b899
  %387 = icmp eq i8* %381, inttoptr (i32 1 to i8*), !insn.addr !6723
  %388 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6724
  %389 = icmp eq i8* %388, null, !insn.addr !6724
  %or.cond61 = or i1 %387, %389
  br i1 %or.cond61, label %dec_label_pc_45baeb, label %dec_label_pc_45b8fc, !insn.addr !6725

dec_label_pc_45b8fc:                              ; preds = %dec_label_pc_45b8e6
  %390 = ptrtoint i8* %388 to i32, !insn.addr !6726
  %391 = ptrtoint i8* %381 to i32, !insn.addr !6727
  %392 = zext i32 %391 to i64, !insn.addr !6728
  store i32 0, i32* %ecx.7.reg2mem, !insn.addr !6729
  store i32 0, i32* %esi.7.reg2mem, !insn.addr !6729
  br label %dec_label_pc_45b90e, !insn.addr !6729

dec_label_pc_45b90e:                              ; preds = %dec_label_pc_45b90e, %dec_label_pc_45b8fc
  %esi.7.reload = load i32, i32* %esi.7.reg2mem
  %ecx.7.reload = load i32, i32* %ecx.7.reg2mem
  %393 = mul i32 %esi.7.reload, 4, !insn.addr !6728
  %394 = add i32 %393, %324, !insn.addr !6728
  %395 = inttoptr i32 %394 to i32*, !insn.addr !6728
  %396 = load i32, i32* %395, align 4, !insn.addr !6728
  %397 = zext i32 %396 to i64, !insn.addr !6728
  %398 = mul nuw i64 %397, %392, !insn.addr !6728
  %399 = trunc i64 %398 to i32, !insn.addr !6728
  %400 = udiv i64 %398, 4294967296, !insn.addr !6728
  %401 = trunc i64 %400 to i32, !insn.addr !6728
  %402 = add i32 %ecx.7.reload, %399, !insn.addr !6730
  %403 = icmp ult i32 %402, %399, !insn.addr !6730
  store i32 %402, i32* %395, align 4, !insn.addr !6731
  %404 = zext i1 %403 to i32, !insn.addr !6732
  %405 = add i32 %404, %401, !insn.addr !6732
  %406 = add i32 %esi.7.reload, 1, !insn.addr !6733
  %407 = icmp eq i32 %406, %390, !insn.addr !6734
  %408 = icmp eq i1 %407, false, !insn.addr !6735
  store i32 %405, i32* %ecx.7.reg2mem, !insn.addr !6735
  store i32 %406, i32* %esi.7.reg2mem, !insn.addr !6735
  store i32 %405, i32* %ecx.8.reg2mem, !insn.addr !6735
  br i1 %408, label %dec_label_pc_45b90e, label %dec_label_pc_45b92a, !insn.addr !6735

dec_label_pc_45b92a:                              ; preds = %dec_label_pc_45b90e, %dec_label_pc_45b859
  %ecx.8.reload = load i32, i32* %ecx.8.reg2mem
  %409 = icmp eq i32 %ecx.8.reload, 0, !insn.addr !6736
  br i1 %409, label %dec_label_pc_45baeb, label %dec_label_pc_45b937, !insn.addr !6737

dec_label_pc_45b937:                              ; preds = %dec_label_pc_45b92a
  %410 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6706
  %411 = icmp ult i8* %410, inttoptr (i32 115 to i8*), !insn.addr !6738
  store i32 %314, i32* %storemerge28.reg2mem, !insn.addr !6739
  br i1 %411, label %dec_label_pc_45b87a, label %dec_label_pc_45bb48, !insn.addr !6739

dec_label_pc_45b960:                              ; preds = %dec_label_pc_45b88c
  %412 = ptrtoint i8* %380 to i32, !insn.addr !6740
  %413 = icmp ult i32 %337, %412, !insn.addr !6740
  %414 = icmp eq i1 %413, false, !insn.addr !6741
  %ecx.10 = select i1 %414, i32 %412, i32 %337
  %415 = icmp eq i32 %ecx.10, 0, !insn.addr !6742
  store i32 0, i32* %eax.12.reg2mem, !insn.addr !6743
  br i1 %415, label %dec_label_pc_45bac4, label %dec_label_pc_45b9c9.preheader, !insn.addr !6743

dec_label_pc_45b9c9.preheader:                    ; preds = %dec_label_pc_45b960
  %spec.select84 = select i1 %413, i32 %314, i32 %321
  %416 = icmp eq i1 %414, false, !insn.addr !6744
  %ecx.9 = select i1 %416, i32 %321, i32 %314
  %edi.5 = select i1 %414, i32 %337, i32 %412
  %417 = inttoptr i32 %337 to i8*
  %storemerge29 = select i1 %414, i8* %380, i8* %417
  %418 = icmp eq i32 %edi.5, 0
  %419 = ptrtoint i8* %storemerge29 to i32
  store i8* null, i8** %stack_var_-1864.0.reg2mem
  store i32 0, i32* %eax.7.reg2mem
  store i32 %ecx.10, i32* %ecx.11.reg2mem
  store i32 0, i32* %esi.8.reg2mem
  br label %dec_label_pc_45b9c9

dec_label_pc_45b9c9:                              ; preds = %dec_label_pc_45b9c9.preheader, %dec_label_pc_45babb
  %esi.8.reload = load i32, i32* %esi.8.reg2mem
  %eax.7.reload = load i32, i32* %eax.7.reg2mem
  %stack_var_-1864.0.reload = load i8*, i8** %stack_var_-1864.0.reg2mem
  %420 = mul i32 %esi.8.reload, 4, !insn.addr !6745
  %421 = add i32 %420, %spec.select84
  %422 = inttoptr i32 %421 to i32*
  %423 = load i32, i32* %422, align 4, !insn.addr !6745
  %424 = icmp eq i32 %423, 0, !insn.addr !6745
  %425 = icmp eq i1 %424, false, !insn.addr !6746
  br i1 %425, label %dec_label_pc_45b9ed, label %dec_label_pc_45b9cf, !insn.addr !6746

dec_label_pc_45b9cf:                              ; preds = %dec_label_pc_45b9c9
  %ecx.11.reload = load i32, i32* %ecx.11.reg2mem
  %426 = icmp eq i32 %esi.8.reload, %eax.7.reload, !insn.addr !6747
  %427 = icmp eq i1 %426, false, !insn.addr !6748
  store i8* %stack_var_-1864.0.reload, i8** %stack_var_-1864.6.reg2mem, !insn.addr !6748
  store i32 %eax.7.reload, i32* %eax.11.reg2mem, !insn.addr !6748
  store i32 %ecx.11.reload, i32* %ecx.15.reg2mem, !insn.addr !6748
  br i1 %427, label %dec_label_pc_45babb, label %dec_label_pc_45b9d7, !insn.addr !6748

dec_label_pc_45b9d7:                              ; preds = %dec_label_pc_45b9cf
  %428 = add i32 %420, %322, !insn.addr !6749
  %429 = inttoptr i32 %428 to i32*, !insn.addr !6749
  store i32 0, i32* %429, align 4, !insn.addr !6749
  %430 = add i32 %esi.8.reload, 1, !insn.addr !6750
  %431 = inttoptr i32 %430 to i8*, !insn.addr !6751
  store i8* %431, i8** %stack_var_-1864.6.reg2mem, !insn.addr !6752
  store i32 %430, i32* %eax.11.reg2mem, !insn.addr !6752
  store i32 %ecx.11.reload, i32* %ecx.15.reg2mem, !insn.addr !6752
  br label %dec_label_pc_45babb, !insn.addr !6752

dec_label_pc_45b9ed:                              ; preds = %dec_label_pc_45b9c9
  store i8* %stack_var_-1864.0.reload, i8** %stack_var_-1864.5.reg2mem, !insn.addr !6753
  store i32 %eax.7.reload, i32* %eax.10.reg2mem, !insn.addr !6753
  store i32 %esi.8.reload, i32* %ecx.14.reg2mem, !insn.addr !6753
  br i1 %418, label %dec_label_pc_45baa6, label %dec_label_pc_45ba05.preheader, !insn.addr !6753

dec_label_pc_45ba05.preheader:                    ; preds = %dec_label_pc_45b9ed
  %432 = icmp eq i32 %esi.8.reload, 115, !insn.addr !6754
  store i32 %323, i32* %storemerge28.reg2mem, !insn.addr !6755
  br i1 %432, label %dec_label_pc_45bb48, label %dec_label_pc_45ba0a.lr.ph, !insn.addr !6755

dec_label_pc_45ba0a.lr.ph:                        ; preds = %dec_label_pc_45ba05.preheader
  %433 = add i32 %esi.8.reload, 1
  store i32 %esi.8.reload, i32* %ecx.12134.reg2mem
  store i32 %eax.7.reload, i32* %eax.8133.reg2mem
  store i8* %stack_var_-1864.0.reload, i8** %stack_var_-1864.1132.reg2mem
  store i8* null, i8** %stack_var_-1896.2131.reg2mem
  store i32 0, i32* %stack_var_-1880.0130.reg2mem
  br label %dec_label_pc_45ba0a

dec_label_pc_45ba05:                              ; preds = %dec_label_pc_45ba25
  %434 = inttoptr i32 %459 to i8*, !insn.addr !6756
  %435 = icmp eq i32 %461, 115, !insn.addr !6754
  store i32 %461, i32* %ecx.12134.reg2mem, !insn.addr !6755
  store i32 %464, i32* %eax.8133.reg2mem, !insn.addr !6755
  store i8* %stack_var_-1864.2.reload, i8** %stack_var_-1864.1132.reg2mem, !insn.addr !6755
  store i8* %434, i8** %stack_var_-1896.2131.reg2mem, !insn.addr !6755
  store i32 %460, i32* %stack_var_-1880.0130.reg2mem, !insn.addr !6755
  br i1 %435, label %dec_label_pc_45ba6e.preheader, label %dec_label_pc_45ba0a, !insn.addr !6755

dec_label_pc_45ba0a:                              ; preds = %dec_label_pc_45ba0a.lr.ph, %dec_label_pc_45ba05
  %stack_var_-1880.0130.reload = load i32, i32* %stack_var_-1880.0130.reg2mem
  %stack_var_-1896.2131.reload = load i8*, i8** %stack_var_-1896.2131.reg2mem
  %eax.8133.reload = load i32, i32* %eax.8133.reg2mem
  %ecx.12134.reload = load i32, i32* %ecx.12134.reg2mem
  %436 = icmp eq i32 %ecx.12134.reload, %eax.8133.reload, !insn.addr !6757
  %437 = icmp eq i1 %436, false, !insn.addr !6758
  %.pre221 = mul i32 %ecx.12134.reload, 4
  %.pre223 = add i32 %.pre221, %322
  %.pre225 = inttoptr i32 %.pre223 to i32*
  br i1 %437, label %dec_label_pc_45ba0a.dec_label_pc_45ba25_crit_edge, label %dec_label_pc_45ba0e, !insn.addr !6758

dec_label_pc_45ba0a.dec_label_pc_45ba25_crit_edge: ; preds = %dec_label_pc_45ba0a
  %stack_var_-1864.1132.reload = load i8*, i8** %stack_var_-1864.1132.reg2mem
  %.pre279 = load i32, i32* %.pre225, align 4
  store i32 %.pre279, i32* %.reg2mem305
  store i8* %stack_var_-1864.1132.reload, i8** %stack_var_-1864.2.reg2mem
  br label %dec_label_pc_45ba25

dec_label_pc_45ba0e:                              ; preds = %dec_label_pc_45ba0a
  store i32 0, i32* %.pre225, align 4, !insn.addr !6759
  %438 = add i32 %433, %stack_var_-1880.0130.reload, !insn.addr !6760
  %439 = inttoptr i32 %438 to i8*, !insn.addr !6761
  store i32 0, i32* %.reg2mem305, !insn.addr !6761
  store i8* %439, i8** %stack_var_-1864.2.reg2mem, !insn.addr !6761
  br label %dec_label_pc_45ba25, !insn.addr !6761

dec_label_pc_45ba25:                              ; preds = %dec_label_pc_45ba0a.dec_label_pc_45ba25_crit_edge, %dec_label_pc_45ba0e
  %stack_var_-1864.2.reload = load i8*, i8** %stack_var_-1864.2.reg2mem
  %.reload306 = load i32, i32* %.reg2mem305, !insn.addr !6762
  %440 = mul i32 %stack_var_-1880.0130.reload, 4, !insn.addr !6763
  %441 = add i32 %440, %ecx.9, !insn.addr !6763
  %442 = inttoptr i32 %441 to i32*, !insn.addr !6763
  %443 = load i32, i32* %442, align 4, !insn.addr !6763
  %444 = load i32, i32* %422, align 4, !insn.addr !6764
  %445 = zext i32 %444 to i64, !insn.addr !6764
  %446 = zext i32 %443 to i64, !insn.addr !6764
  %447 = mul nuw i64 %445, %446, !insn.addr !6764
  %448 = trunc i64 %447 to i32, !insn.addr !6764
  %449 = udiv i64 %447, 4294967296, !insn.addr !6764
  %450 = trunc i64 %449 to i32, !insn.addr !6764
  %451 = ptrtoint i8* %stack_var_-1896.2131.reload to i32, !insn.addr !6765
  %452 = add i32 %448, %451, !insn.addr !6765
  %453 = icmp ult i32 %452, %448, !insn.addr !6765
  %454 = zext i1 %453 to i32, !insn.addr !6766
  %455 = add i32 %454, %450, !insn.addr !6766
  %456 = add i32 %452, %.reload306, !insn.addr !6762
  %457 = icmp ult i32 %456, %.reload306, !insn.addr !6762
  store i32 %456, i32* %.pre225, align 4, !insn.addr !6762
  %458 = zext i1 %457 to i32, !insn.addr !6767
  %459 = add i32 %455, %458, !insn.addr !6767
  %460 = add i32 %stack_var_-1880.0130.reload, 1, !insn.addr !6768
  %461 = add i32 %ecx.12134.reload, 1, !insn.addr !6769
  %462 = icmp eq i32 %460, %edi.5, !insn.addr !6770
  %463 = icmp eq i1 %462, false, !insn.addr !6771
  %464 = ptrtoint i8* %stack_var_-1864.2.reload to i32
  br i1 %463, label %dec_label_pc_45ba05, label %dec_label_pc_45ba6e.preheader, !insn.addr !6771

dec_label_pc_45ba6e.preheader:                    ; preds = %dec_label_pc_45ba25, %dec_label_pc_45ba05
  %465 = icmp eq i32 %459, 0, !insn.addr !6772
  store i32 %459, i32* %edx.9146.reg2mem, !insn.addr !6773
  store i32 %461, i32* %ecx.13145.reg2mem, !insn.addr !6773
  store i32 %464, i32* %eax.9144.reg2mem, !insn.addr !6773
  store i8* %stack_var_-1864.2.reload, i8** %stack_var_-1864.5.reg2mem, !insn.addr !6773
  store i32 %464, i32* %eax.10.reg2mem, !insn.addr !6773
  store i32 %461, i32* %ecx.14.reg2mem, !insn.addr !6773
  br i1 %465, label %dec_label_pc_45baa6, label %dec_label_pc_45ba72, !insn.addr !6773

dec_label_pc_45ba72:                              ; preds = %dec_label_pc_45ba6e.preheader, %dec_label_pc_45ba90
  %ecx.13145.reload = load i32, i32* %ecx.13145.reg2mem
  %466 = icmp eq i32 %ecx.13145.reload, 115, !insn.addr !6774
  store i32 %323, i32* %storemerge28.reg2mem, !insn.addr !6775
  br i1 %466, label %dec_label_pc_45bb48, label %dec_label_pc_45ba7b, !insn.addr !6775

dec_label_pc_45ba7b:                              ; preds = %dec_label_pc_45ba72
  %eax.9144.reload = load i32, i32* %eax.9144.reg2mem
  %edx.9146.reload = load i32, i32* %edx.9146.reg2mem
  %467 = icmp eq i32 %ecx.13145.reload, %eax.9144.reload, !insn.addr !6776
  %468 = icmp eq i1 %467, false, !insn.addr !6777
  %.pre213 = mul i32 %ecx.13145.reload, 4
  %.pre215 = add i32 %.pre213, %322
  %.pre217 = inttoptr i32 %.pre215 to i32*
  %.pre219 = add i32 %ecx.13145.reload, 1
  br i1 %468, label %dec_label_pc_45ba90, label %dec_label_pc_45ba90.thread, !insn.addr !6777

dec_label_pc_45ba90.thread:                       ; preds = %dec_label_pc_45ba7b
  %469 = inttoptr i32 %.pre219 to i8*, !insn.addr !6778
  store i32 %edx.9146.reload, i32* %.pre217, align 4, !insn.addr !6779
  store i8* %469, i8** %stack_var_-1864.5.reg2mem
  store i32 %.pre219, i32* %eax.10.reg2mem
  store i32 %.pre219, i32* %ecx.14.reg2mem
  br label %dec_label_pc_45baa6

dec_label_pc_45ba90:                              ; preds = %dec_label_pc_45ba7b
  %.pre280 = load i32, i32* %.pre217, align 4
  %470 = add i32 %.pre280, %edx.9146.reload, !insn.addr !6779
  %471 = icmp ult i32 %470, %.pre280, !insn.addr !6779
  store i32 %470, i32* %.pre217, align 4, !insn.addr !6779
  %472 = ptrtoint i8* %stack_var_-1864.2.reload to i32
  %473 = icmp eq i1 %471, false, !insn.addr !6772
  store i32 1, i32* %edx.9146.reg2mem, !insn.addr !6773
  store i32 %.pre219, i32* %ecx.13145.reg2mem, !insn.addr !6773
  store i32 %472, i32* %eax.9144.reg2mem, !insn.addr !6773
  store i8* %stack_var_-1864.2.reload, i8** %stack_var_-1864.5.reg2mem, !insn.addr !6773
  store i32 %472, i32* %eax.10.reg2mem, !insn.addr !6773
  store i32 %.pre219, i32* %ecx.14.reg2mem, !insn.addr !6773
  br i1 %473, label %dec_label_pc_45baa6, label %dec_label_pc_45ba72, !insn.addr !6773

dec_label_pc_45baa6:                              ; preds = %dec_label_pc_45ba90, %dec_label_pc_45ba90.thread, %dec_label_pc_45ba6e.preheader, %dec_label_pc_45b9ed
  %ecx.14.reload = load i32, i32* %ecx.14.reg2mem
  %eax.10.reload = load i32, i32* %eax.10.reg2mem
  %stack_var_-1864.5.reload = load i8*, i8** %stack_var_-1864.5.reg2mem
  %474 = icmp eq i32 %ecx.14.reload, 115, !insn.addr !6780
  store i8* %stack_var_-1864.5.reload, i8** %stack_var_-1864.6.reg2mem, !insn.addr !6781
  store i32 %eax.10.reload, i32* %eax.11.reg2mem, !insn.addr !6781
  store i32 %419, i32* %ecx.15.reg2mem, !insn.addr !6781
  store i32 %323, i32* %storemerge28.reg2mem, !insn.addr !6781
  br i1 %474, label %dec_label_pc_45bb48, label %dec_label_pc_45babb, !insn.addr !6781

dec_label_pc_45babb:                              ; preds = %dec_label_pc_45baa6, %dec_label_pc_45b9d7, %dec_label_pc_45b9cf
  %ecx.15.reload = load i32, i32* %ecx.15.reg2mem
  %eax.11.reload = load i32, i32* %eax.11.reg2mem
  %stack_var_-1864.6.reload = load i8*, i8** %stack_var_-1864.6.reg2mem
  %475 = add i32 %esi.8.reload, 1, !insn.addr !6782
  %476 = icmp eq i32 %475, %ecx.15.reload, !insn.addr !6783
  %477 = icmp eq i1 %476, false, !insn.addr !6784
  store i8* %stack_var_-1864.6.reload, i8** %stack_var_-1864.0.reg2mem, !insn.addr !6784
  store i32 %eax.11.reload, i32* %eax.7.reg2mem, !insn.addr !6784
  store i32 %ecx.15.reload, i32* %ecx.11.reg2mem, !insn.addr !6784
  store i32 %475, i32* %esi.8.reg2mem, !insn.addr !6784
  store i32 %eax.11.reload, i32* %eax.12.reg2mem, !insn.addr !6784
  br i1 %477, label %dec_label_pc_45b9c9, label %dec_label_pc_45bac4, !insn.addr !6784

dec_label_pc_45bac4:                              ; preds = %dec_label_pc_45babb, %dec_label_pc_45b960
  %eax.12.reload = load i32, i32* %eax.12.reg2mem
  %478 = inttoptr i32 %eax.12.reload to i8*, !insn.addr !6785
  store i8* %478, i8** %stack_var_-936, align 4, !insn.addr !6785
  %479 = mul i32 %eax.12.reload, 4, !insn.addr !6786
  store i32 %479, i32* %storemerge167.reg2mem, !insn.addr !6786
  store i32 %325, i32* %storemerge27.reg2mem, !insn.addr !6786
  br label %dec_label_pc_45bad4, !insn.addr !6786

dec_label_pc_45bad4:                              ; preds = %dec_label_pc_45b824, %dec_label_pc_45bac4, %dec_label_pc_45b8cc
  %storemerge27.reload = load i32, i32* %storemerge27.reg2mem
  %storemerge167.reload = load i32, i32* %storemerge167.reg2mem
  store i32 %storemerge167.reload, i32* %309, align 4
  store i32 %storemerge27.reload, i32* %311, align 4, !insn.addr !6787
  store i32 460, i32* %313, align 4, !insn.addr !6788
  store i32 %321, i32* %316, align 4, !insn.addr !6789
  %480 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6790
  %481 = call i32 @memcpy_s_3(i8* %480, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6790
  br label %dec_label_pc_45baeb, !insn.addr !6791

dec_label_pc_45baeb:                              ; preds = %dec_label_pc_45bad4, %dec_label_pc_45b87a, %dec_label_pc_45b92a, %dec_label_pc_45b8e6, %dec_label_pc_45b837
  %482 = sub i32 %stack_var_-1908.0.in.reload, %eax.5.reload, !insn.addr !6792
  %483 = icmp eq i32 %482, 0, !insn.addr !6792
  %484 = icmp eq i1 %483, false, !insn.addr !6793
  store i32 %482, i32* %stack_var_-1908.0.in.reg2mem, !insn.addr !6793
  br i1 %484, label %dec_label_pc_45b7a7, label %dec_label_pc_45bb09, !insn.addr !6793

dec_label_pc_45bb09:                              ; preds = %dec_label_pc_45baeb, %dec_label_pc_45b78f
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6794
  br i1 icmp eq (i32 urem (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 10), i32 0), label %dec_label_pc_45c019thread-pre-split, label %dec_label_pc_45bb11, !insn.addr !6794

dec_label_pc_45bb11:                              ; preds = %dec_label_pc_45bb09
  %485 = load i32, i32* inttoptr (i32 add (i32 shl (i32 urem (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 10), i32 2), i32 ptrtoint (i32* @global_var_471f0c to i32)) to i32*), align 4, !insn.addr !6795
  %486 = icmp eq i32 %485, 0, !insn.addr !6796
  %487 = icmp eq i1 %486, false, !insn.addr !6797
  br i1 %487, label %dec_label_pc_45bb7f, label %dec_label_pc_45bb22, !insn.addr !6797

dec_label_pc_45bb22:                              ; preds = %dec_label_pc_45bbc2, %dec_label_pc_45bb11
  store i8* null, i8** %stack_var_-936, align 4, !insn.addr !6798
  %488 = add i32 %307, -4, !insn.addr !6799
  %489 = inttoptr i32 %488 to i32*, !insn.addr !6799
  store i32 0, i32* %489, align 4, !insn.addr !6799
  %.pre197 = ptrtoint i32* %stack_var_-2404 to i32, !insn.addr !6800
  store i32 %.pre197, i32* %.pre-phi198.reg2mem, !insn.addr !6801
  store i32 %488, i32* %storemerge25.reg2mem, !insn.addr !6801
  br label %dec_label_pc_45bb6d, !insn.addr !6801

dec_label_pc_45bb48:                              ; preds = %dec_label_pc_45b937, %dec_label_pc_45ba05.preheader, %dec_label_pc_45baa6, %dec_label_pc_45ba72
  %storemerge28.reload = load i32, i32* %storemerge28.reg2mem
  store i8* null, i8** %stack_var_-936, align 4
  store i32 0, i32* %309, align 4
  store i32 %storemerge28.reload, i32* %311, align 4, !insn.addr !6802
  store i32 460, i32* %313, align 4, !insn.addr !6803
  store i32 %321, i32* %316, align 4, !insn.addr !6804
  %490 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6805
  %491 = call i32 @memcpy_s_3(i8* %490, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6805
  store i8* null, i8** %stack_var_-936, align 4, !insn.addr !6806
  store i32 0, i32* %309, align 4, !insn.addr !6807
  store i32 %323, i32* %.pre-phi198.reg2mem, !insn.addr !6807
  store i32 %308, i32* %storemerge25.reg2mem, !insn.addr !6807
  br label %dec_label_pc_45bb6d, !insn.addr !6807

dec_label_pc_45bb6d:                              ; preds = %dec_label_pc_45bb48, %dec_label_pc_45bb22
  %storemerge25.reload = load i32, i32* %storemerge25.reg2mem
  %.pre-phi198.reload = load i32, i32* %.pre-phi198.reg2mem
  %492 = add i32 %storemerge25.reload, -4, !insn.addr !6800
  %493 = inttoptr i32 %492 to i32*, !insn.addr !6800
  store i32 %.pre-phi198.reload, i32* %493, align 4, !insn.addr !6800
  store i32 %492, i32* %storemerge57.reg2mem, !insn.addr !6808
  store i8** %stack_var_-932, i8*** %storemerge30.in.reg2mem, !insn.addr !6808
  br label %dec_label_pc_45c00f, !insn.addr !6808

dec_label_pc_45bb7f:                              ; preds = %dec_label_pc_45bb11
  %494 = icmp eq i32 %485, 1, !insn.addr !6809
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6810
  br i1 %494, label %dec_label_pc_45c019thread-pre-split, label %dec_label_pc_45bb88, !insn.addr !6810

dec_label_pc_45bb88:                              ; preds = %dec_label_pc_45bb7f
  %495 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6811
  %496 = icmp eq i8* %495, null, !insn.addr !6812
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6813
  br i1 %496, label %dec_label_pc_45c019thread-pre-split, label %dec_label_pc_45bb9a.preheader, !insn.addr !6813

dec_label_pc_45bb9a.preheader:                    ; preds = %dec_label_pc_45bb88
  %497 = ptrtoint i8* %495 to i32, !insn.addr !6811
  %498 = add i32 %39, -928, !insn.addr !6814
  %499 = zext i32 %485 to i64, !insn.addr !6814
  store i32 0, i32* %esi.9.reg2mem
  store i32 0, i32* %edi.6.reg2mem
  br label %dec_label_pc_45bb9a

dec_label_pc_45bb9a:                              ; preds = %dec_label_pc_45bb9a.preheader, %dec_label_pc_45bb9a
  %edi.6.reload = load i32, i32* %edi.6.reg2mem
  %esi.9.reload = load i32, i32* %esi.9.reg2mem
  %500 = mul i32 %esi.9.reload, 4, !insn.addr !6814
  %501 = add i32 %500, %498, !insn.addr !6814
  %502 = inttoptr i32 %501 to i32*, !insn.addr !6814
  %503 = load i32, i32* %502, align 4, !insn.addr !6814
  %504 = zext i32 %503 to i64, !insn.addr !6814
  %505 = mul nuw i64 %504, %499, !insn.addr !6814
  %506 = trunc i64 %505 to i32, !insn.addr !6814
  %507 = udiv i64 %505, 4294967296, !insn.addr !6814
  %508 = trunc i64 %507 to i32, !insn.addr !6814
  %509 = add i32 %edi.6.reload, %506, !insn.addr !6815
  %510 = icmp ult i32 %509, %506, !insn.addr !6815
  store i32 %509, i32* %502, align 4, !insn.addr !6816
  %511 = zext i1 %510 to i32, !insn.addr !6817
  %512 = add i32 %511, %508, !insn.addr !6817
  %513 = add i32 %esi.9.reload, 1, !insn.addr !6818
  %514 = icmp eq i32 %513, %497, !insn.addr !6819
  %515 = icmp eq i1 %514, false, !insn.addr !6820
  store i32 %513, i32* %esi.9.reg2mem, !insn.addr !6820
  store i32 %512, i32* %edi.6.reg2mem, !insn.addr !6820
  br i1 %515, label %dec_label_pc_45bb9a, label %dec_label_pc_45bbba, !insn.addr !6820

dec_label_pc_45bbba:                              ; preds = %dec_label_pc_45bb9a
  %516 = icmp eq i32 %512, 0, !insn.addr !6821
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6822
  br i1 %516, label %dec_label_pc_45c019thread-pre-split, label %dec_label_pc_45bbc2, !insn.addr !6822

dec_label_pc_45bbc2:                              ; preds = %dec_label_pc_45bbba
  %517 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6823
  %518 = icmp ult i8* %517, inttoptr (i32 115 to i8*), !insn.addr !6824
  %519 = icmp eq i1 %518, false, !insn.addr !6825
  br i1 %519, label %dec_label_pc_45bb22, label %dec_label_pc_45bbd1, !insn.addr !6825

dec_label_pc_45bbd1:                              ; preds = %dec_label_pc_45bbc2
  %520 = ptrtoint i8* %517 to i32, !insn.addr !6823
  %521 = mul i32 %520, 4, !insn.addr !6826
  %522 = add i32 %521, %498, !insn.addr !6826
  %523 = inttoptr i32 %522 to i32*, !insn.addr !6826
  store i32 %512, i32* %523, align 4, !insn.addr !6826
  %524 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !6827
  %525 = ptrtoint i8* %524 to i32, !insn.addr !6827
  %526 = add i32 %525, 1, !insn.addr !6827
  %527 = inttoptr i32 %526 to i8*, !insn.addr !6827
  store i8* %527, i8** %stack_var_-936, align 4, !insn.addr !6827
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6828
  br label %dec_label_pc_45c019thread-pre-split, !insn.addr !6828

dec_label_pc_45bbe3:                              ; preds = %dec_label_pc_45b776
  br i1 icmp ult (i32 sub (i32 0, i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32))), i32 10), label %dec_label_pc_45bf3e, label %dec_label_pc_45bbfd.preheader, !insn.addr !6829

dec_label_pc_45bbfd.preheader:                    ; preds = %dec_label_pc_45bbe3
  %528 = add i32 %307, -4
  %529 = inttoptr i32 %528 to i32*
  %530 = add i32 %307, -8
  %531 = inttoptr i32 %530 to i32*
  %532 = add i32 %307, -12
  %533 = inttoptr i32 %532 to i32*
  %534 = ptrtoint i8** %stack_var_-1396 to i32, !insn.addr !6830
  %535 = add i32 %307, -16
  %536 = inttoptr i32 %535 to i32*
  %537 = add i32 %307, -20
  %538 = inttoptr i32 %537 to i32*
  %539 = add i32 %307, -24
  %540 = inttoptr i32 %539 to i32*
  %541 = ptrtoint i8** %stack_var_-468 to i32
  %542 = add i32 %39, -1856
  %543 = add i32 %39, -464
  %544 = ptrtoint i32* %stack_var_-2404 to i32
  %.pre196 = ptrtoint i32* %stack_var_-1860 to i32
  store i32 udiv (i32 sub (i32 0, i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32))), i32 10), i32* %stack_var_-1892.2.in.reg2mem
  br label %dec_label_pc_45bbfd

dec_label_pc_45bbfd:                              ; preds = %dec_label_pc_45bbfd.preheader, %dec_label_pc_45bf20
  %stack_var_-1892.2.in.reload = load i32, i32* %stack_var_-1892.2.in.reg2mem
  %545 = icmp ult i32 %stack_var_-1892.2.in.reload, 39
  store i32 %stack_var_-1892.2.in.reload, i32* %eax.17.reg2mem, !insn.addr !6831
  br i1 %545, label %dec_label_pc_45bc05, label %dec_label_pc_45bc02, !insn.addr !6831

dec_label_pc_45bc02:                              ; preds = %dec_label_pc_45bbfd
  store i32 38, i32* %529, align 4, !insn.addr !6832
  store i32 38, i32* %eax.17.reg2mem, !insn.addr !6833
  br label %dec_label_pc_45bc05, !insn.addr !6833

dec_label_pc_45bc05:                              ; preds = %dec_label_pc_45bc02, %dec_label_pc_45bbfd
  %stack_var_-1892.2 = inttoptr i32 %stack_var_-1892.2.in.reload to i8*
  %eax.17.reload = load i32, i32* %eax.17.reg2mem
  %546 = mul i32 %eax.17.reload, 4, !insn.addr !6834
  %547 = add i32 %546, ptrtoint (i8** @global_var_477b66 to i32), !insn.addr !6834
  %548 = inttoptr i32 %547 to i8*, !insn.addr !6834
  %549 = load i8, i8* %548, align 4, !insn.addr !6834
  %550 = zext i8 %549 to i32, !insn.addr !6834
  %551 = add i32 %546, ptrtoint (i8** @global_var_477b67 to i32), !insn.addr !6835
  %552 = inttoptr i32 %551 to i8*, !insn.addr !6835
  %553 = load i8, i8* %552, align 4, !insn.addr !6835
  %554 = zext i8 %553 to i32, !insn.addr !6835
  %555 = mul i32 %550, 4, !insn.addr !6836
  store i32 %555, i32* %529, align 4, !insn.addr !6837
  %556 = add nuw nsw i32 %554, %550, !insn.addr !6838
  store i32 0, i32* %531, align 4, !insn.addr !6839
  store i32 %534, i32* %533, align 4, !insn.addr !6830
  call void @memset(i8* %stack_var_-1892.2, i8 ptrtoint (i32* @80 to i8), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6840
  %557 = mul i32 %554, 4, !insn.addr !6841
  store i32 %557, i32* %536, align 4, !insn.addr !6842
  %558 = add i32 %546, ptrtoint (i16** @global_var_477b64 to i32), !insn.addr !6843
  %559 = inttoptr i32 %558 to i16*, !insn.addr !6843
  %560 = load i16, i16* %559, align 4, !insn.addr !6843
  %561 = zext i16 %560 to i32, !insn.addr !6843
  %562 = mul i32 %561, 4, !insn.addr !6844
  %563 = add i32 %562, ptrtoint ([578 x i32]* @large_power_data to i32), !insn.addr !6844
  store i32 %563, i32* %538, align 4, !insn.addr !6845
  %564 = add i32 %555, %534, !insn.addr !6846
  store i32 %564, i32* %540, align 4, !insn.addr !6847
  call void @memcpy(i8* bitcast (i32* @80 to i8*), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6848
  %565 = icmp ult i32 %556, 2
  br i1 %565, label %dec_label_pc_45bc74, label %dec_label_pc_45bd04, !insn.addr !6849

dec_label_pc_45bc74:                              ; preds = %dec_label_pc_45bc05
  %566 = load i8*, i8** %stack_var_-1396, align 4, !insn.addr !6850
  %567 = icmp eq i8* %566, null, !insn.addr !6851
  %568 = icmp eq i1 %567, false, !insn.addr !6852
  br i1 %568, label %dec_label_pc_45bc98, label %dec_label_pc_45bc7e, !insn.addr !6852

dec_label_pc_45bc7e:                              ; preds = %dec_label_pc_45bd11, %dec_label_pc_45bc74
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6853
  store i32 %544, i32* %storemerge32.pre-phi.reg2mem, !insn.addr !6854
  store i32 0, i32* %storemerge90.reg2mem, !insn.addr !6854
  br label %dec_label_pc_45bf05, !insn.addr !6854

dec_label_pc_45bc98:                              ; preds = %dec_label_pc_45bc74
  %569 = icmp eq i8* %566, inttoptr (i32 1 to i8*), !insn.addr !6855
  %570 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6856
  %571 = icmp eq i8* %570, null, !insn.addr !6856
  %or.cond63 = or i1 %569, %571
  br i1 %or.cond63, label %dec_label_pc_45bf20, label %dec_label_pc_45bcae, !insn.addr !6857

dec_label_pc_45bcae:                              ; preds = %dec_label_pc_45bc98
  %572 = ptrtoint i8* %566 to i32, !insn.addr !6850
  %573 = ptrtoint i8* %570 to i32, !insn.addr !6858
  %574 = zext i32 %572 to i64, !insn.addr !6859
  store i32 0, i32* %ecx.17.reg2mem, !insn.addr !6860
  store i32 0, i32* %esi.10.reg2mem, !insn.addr !6860
  br label %dec_label_pc_45bcba, !insn.addr !6860

dec_label_pc_45bcba:                              ; preds = %dec_label_pc_45bcba, %dec_label_pc_45bcae
  %esi.10.reload = load i32, i32* %esi.10.reg2mem
  %ecx.17.reload = load i32, i32* %ecx.17.reg2mem
  %575 = mul i32 %esi.10.reload, 4, !insn.addr !6859
  %576 = add i32 %575, %543, !insn.addr !6859
  %577 = inttoptr i32 %576 to i32*, !insn.addr !6859
  %578 = load i32, i32* %577, align 4, !insn.addr !6859
  %579 = zext i32 %578 to i64, !insn.addr !6859
  %580 = mul nuw i64 %579, %574, !insn.addr !6859
  %581 = trunc i64 %580 to i32, !insn.addr !6859
  %582 = udiv i64 %580, 4294967296, !insn.addr !6859
  %583 = trunc i64 %582 to i32, !insn.addr !6859
  %584 = add i32 %ecx.17.reload, %581, !insn.addr !6861
  %585 = icmp ult i32 %584, %581, !insn.addr !6861
  store i32 %584, i32* %577, align 4, !insn.addr !6862
  %586 = zext i1 %585 to i32, !insn.addr !6863
  %587 = add i32 %586, %583, !insn.addr !6863
  %588 = add i32 %esi.10.reload, 1, !insn.addr !6864
  %589 = icmp eq i32 %588, %573, !insn.addr !6865
  %590 = icmp eq i1 %589, false, !insn.addr !6866
  store i32 %587, i32* %ecx.17.reg2mem, !insn.addr !6866
  store i32 %588, i32* %esi.10.reg2mem, !insn.addr !6866
  store i32 %587, i32* %ecx.18.reg2mem, !insn.addr !6866
  br i1 %590, label %dec_label_pc_45bcba, label %dec_label_pc_45bcd6, !insn.addr !6866

dec_label_pc_45bcd6:                              ; preds = %dec_label_pc_45bd70, %dec_label_pc_45bcba
  %ecx.18.reload = load i32, i32* %ecx.18.reg2mem
  %591 = icmp eq i32 %ecx.18.reload, 0, !insn.addr !6867
  br i1 %591, label %dec_label_pc_45bf20, label %dec_label_pc_45bce3, !insn.addr !6868

dec_label_pc_45bce3:                              ; preds = %dec_label_pc_45bcd6
  %592 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6869
  %593 = icmp ult i8* %592, inttoptr (i32 115 to i8*), !insn.addr !6870
  %594 = icmp eq i1 %593, false, !insn.addr !6871
  br i1 %594, label %dec_label_pc_45bfb4, label %dec_label_pc_45bcf2, !insn.addr !6871

dec_label_pc_45bcf2:                              ; preds = %dec_label_pc_45bce3
  %595 = ptrtoint i8* %592 to i32, !insn.addr !6869
  %596 = mul i32 %595, 4, !insn.addr !6872
  %597 = add i32 %596, %543, !insn.addr !6872
  %598 = inttoptr i32 %597 to i32*, !insn.addr !6872
  store i32 %ecx.18.reload, i32* %598, align 4, !insn.addr !6872
  %599 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6873
  %600 = ptrtoint i8* %599 to i32, !insn.addr !6873
  %601 = add i32 %600, 1, !insn.addr !6873
  %602 = inttoptr i32 %601 to i8*, !insn.addr !6873
  store i8* %602, i8** %stack_var_-472, align 4, !insn.addr !6873
  br label %dec_label_pc_45bf20, !insn.addr !6874

dec_label_pc_45bd04:                              ; preds = %dec_label_pc_45bc05
  %603 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6875
  %switch70 = icmp ult i8* %603, inttoptr (i32 2 to i8*)
  br i1 %switch70, label %dec_label_pc_45bd11, label %dec_label_pc_45bd91

dec_label_pc_45bd11:                              ; preds = %dec_label_pc_45bd04
  %604 = load i8*, i8** %stack_var_-468, align 4, !insn.addr !6876
  %605 = mul i32 %556, 4, !insn.addr !6877
  store i32 %605, i32* %529, align 4, !insn.addr !6878
  store i32 %534, i32* %531, align 4, !insn.addr !6879
  %606 = inttoptr i32 %556 to i8*, !insn.addr !6880
  store i8* %606, i8** %stack_var_-472, align 4, !insn.addr !6880
  store i32 460, i32* %533, align 4, !insn.addr !6881
  store i32 %541, i32* %536, align 4, !insn.addr !6882
  %607 = call i32 @memcpy_s_3(i8* %604, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6883
  %608 = icmp eq i8* %604, null, !insn.addr !6884
  br i1 %608, label %dec_label_pc_45bc7e, label %dec_label_pc_45bd48, !insn.addr !6885

dec_label_pc_45bd48:                              ; preds = %dec_label_pc_45bd11
  %609 = icmp eq i8* %604, inttoptr (i32 1 to i8*), !insn.addr !6886
  %610 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6887
  %611 = icmp eq i8* %610, null, !insn.addr !6887
  %or.cond66 = or i1 %609, %611
  br i1 %or.cond66, label %dec_label_pc_45bf20, label %dec_label_pc_45bd5e, !insn.addr !6888

dec_label_pc_45bd5e:                              ; preds = %dec_label_pc_45bd48
  %612 = ptrtoint i8* %610 to i32, !insn.addr !6889
  %613 = ptrtoint i8* %604 to i32, !insn.addr !6890
  %614 = zext i32 %613 to i64, !insn.addr !6891
  store i32 0, i32* %ecx.19.reg2mem, !insn.addr !6892
  store i32 0, i32* %esi.11.reg2mem, !insn.addr !6892
  br label %dec_label_pc_45bd70, !insn.addr !6892

dec_label_pc_45bd70:                              ; preds = %dec_label_pc_45bd70, %dec_label_pc_45bd5e
  %esi.11.reload = load i32, i32* %esi.11.reg2mem
  %ecx.19.reload = load i32, i32* %ecx.19.reg2mem
  %615 = mul i32 %esi.11.reload, 4, !insn.addr !6891
  %616 = add i32 %615, %543, !insn.addr !6891
  %617 = inttoptr i32 %616 to i32*, !insn.addr !6891
  %618 = load i32, i32* %617, align 4, !insn.addr !6891
  %619 = zext i32 %618 to i64, !insn.addr !6891
  %620 = mul nuw i64 %619, %614, !insn.addr !6891
  %621 = trunc i64 %620 to i32, !insn.addr !6891
  %622 = udiv i64 %620, 4294967296, !insn.addr !6891
  %623 = trunc i64 %622 to i32, !insn.addr !6891
  %624 = add i32 %ecx.19.reload, %621, !insn.addr !6893
  %625 = icmp ult i32 %624, %621, !insn.addr !6893
  store i32 %624, i32* %617, align 4, !insn.addr !6894
  %626 = zext i1 %625 to i32, !insn.addr !6895
  %627 = add i32 %626, %623, !insn.addr !6895
  %628 = add i32 %esi.11.reload, 1, !insn.addr !6896
  %629 = icmp eq i32 %628, %612, !insn.addr !6897
  %630 = icmp eq i1 %629, false, !insn.addr !6898
  store i32 %627, i32* %ecx.18.reg2mem, !insn.addr !6898
  store i32 %627, i32* %ecx.19.reg2mem, !insn.addr !6898
  store i32 %628, i32* %esi.11.reg2mem, !insn.addr !6898
  br i1 %630, label %dec_label_pc_45bd70, label %dec_label_pc_45bcd6, !insn.addr !6898

dec_label_pc_45bd91:                              ; preds = %dec_label_pc_45bd04
  %631 = ptrtoint i8* %603 to i32, !insn.addr !6899
  %632 = icmp ult i32 %556, %631, !insn.addr !6899
  %633 = icmp eq i1 %632, false, !insn.addr !6900
  %ecx.21 = select i1 %633, i32 %631, i32 %556
  %634 = icmp eq i32 %ecx.21, 0, !insn.addr !6901
  store i32 0, i32* %eax.24.reg2mem, !insn.addr !6902
  br i1 %634, label %dec_label_pc_45bef5, label %dec_label_pc_45bdfa.preheader, !insn.addr !6902

dec_label_pc_45bdfa.preheader:                    ; preds = %dec_label_pc_45bd91
  %spec.select85 = select i1 %632, i32 %534, i32 %541
  %635 = icmp eq i1 %633, false, !insn.addr !6903
  %ecx.20 = select i1 %635, i32 %541, i32 %534
  %edi.7 = select i1 %633, i32 %556, i32 %631
  %636 = inttoptr i32 %556 to i8*
  %storemerge33 = select i1 %633, i8* %603, i8* %636
  %637 = icmp eq i32 %edi.7, 0
  %638 = ptrtoint i8* %storemerge33 to i32
  store i8* null, i8** %stack_var_-1864.7.reg2mem
  store i32 0, i32* %eax.19.reg2mem
  store i32 %ecx.21, i32* %ecx.22.reg2mem
  store i32 0, i32* %esi.12.reg2mem
  br label %dec_label_pc_45bdfa

dec_label_pc_45bdfa:                              ; preds = %dec_label_pc_45bdfa.preheader, %dec_label_pc_45beec
  %esi.12.reload = load i32, i32* %esi.12.reg2mem
  %eax.19.reload = load i32, i32* %eax.19.reg2mem
  %stack_var_-1864.7.reload = load i8*, i8** %stack_var_-1864.7.reg2mem
  %639 = mul i32 %esi.12.reload, 4, !insn.addr !6904
  %640 = add i32 %639, %spec.select85
  %641 = inttoptr i32 %640 to i32*
  %642 = load i32, i32* %641, align 4, !insn.addr !6904
  %643 = icmp eq i32 %642, 0, !insn.addr !6904
  %644 = icmp eq i1 %643, false, !insn.addr !6905
  br i1 %644, label %dec_label_pc_45be1e, label %dec_label_pc_45be00, !insn.addr !6905

dec_label_pc_45be00:                              ; preds = %dec_label_pc_45bdfa
  %ecx.22.reload = load i32, i32* %ecx.22.reg2mem
  %645 = icmp eq i32 %esi.12.reload, %eax.19.reload, !insn.addr !6906
  %646 = icmp eq i1 %645, false, !insn.addr !6907
  store i8* %stack_var_-1864.7.reload, i8** %stack_var_-1864.13.reg2mem, !insn.addr !6907
  store i32 %eax.19.reload, i32* %eax.23.reg2mem, !insn.addr !6907
  store i32 %ecx.22.reload, i32* %ecx.26.reg2mem, !insn.addr !6907
  br i1 %646, label %dec_label_pc_45beec, label %dec_label_pc_45be08, !insn.addr !6907

dec_label_pc_45be08:                              ; preds = %dec_label_pc_45be00
  %647 = add i32 %639, %542, !insn.addr !6908
  %648 = inttoptr i32 %647 to i32*, !insn.addr !6908
  store i32 0, i32* %648, align 4, !insn.addr !6908
  %649 = add i32 %esi.12.reload, 1, !insn.addr !6909
  %650 = inttoptr i32 %649 to i8*, !insn.addr !6910
  store i8* %650, i8** %stack_var_-1864.13.reg2mem, !insn.addr !6911
  store i32 %649, i32* %eax.23.reg2mem, !insn.addr !6911
  store i32 %ecx.22.reload, i32* %ecx.26.reg2mem, !insn.addr !6911
  br label %dec_label_pc_45beec, !insn.addr !6911

dec_label_pc_45be1e:                              ; preds = %dec_label_pc_45bdfa
  store i8* %stack_var_-1864.7.reload, i8** %stack_var_-1864.12.reg2mem, !insn.addr !6912
  store i32 %eax.19.reload, i32* %eax.22.reg2mem, !insn.addr !6912
  store i32 %esi.12.reload, i32* %ecx.25.reg2mem, !insn.addr !6912
  br i1 %637, label %dec_label_pc_45bed7, label %dec_label_pc_45be36.preheader, !insn.addr !6912

dec_label_pc_45be36.preheader:                    ; preds = %dec_label_pc_45be1e
  %651 = add i32 %esi.12.reload, 1
  store i32 0, i32* %stack_var_-1872.0.reg2mem
  store i32 0, i32* %stack_var_-1880.1.reg2mem
  store i8* %stack_var_-1864.7.reload, i8** %stack_var_-1864.8.reg2mem
  store i32 %eax.19.reload, i32* %eax.20.reg2mem
  store i32 %esi.12.reload, i32* %ecx.23.reg2mem
  br label %dec_label_pc_45be36

dec_label_pc_45be36:                              ; preds = %dec_label_pc_45be36.preheader, %dec_label_pc_45be56
  %ecx.23.reload = load i32, i32* %ecx.23.reg2mem
  %eax.20.reload = load i32, i32* %eax.20.reg2mem
  %stack_var_-1864.8.reload = load i8*, i8** %stack_var_-1864.8.reg2mem
  %stack_var_-1872.0.reload = load i32, i32* %stack_var_-1872.0.reg2mem
  %652 = icmp eq i32 %ecx.23.reload, 115, !insn.addr !6913
  store i8* %stack_var_-1864.8.reload, i8** %stack_var_-1864.10.ph.reg2mem, !insn.addr !6914
  store i32 %eax.20.reload, i32* %eax.21.ph.reg2mem, !insn.addr !6914
  store i32 115, i32* %ecx.24.ph.reg2mem, !insn.addr !6914
  store i32 %stack_var_-1872.0.reload, i32* %edx.14.ph.reg2mem, !insn.addr !6914
  br i1 %652, label %dec_label_pc_45be9f.preheader, label %dec_label_pc_45be3b, !insn.addr !6914

dec_label_pc_45be3b:                              ; preds = %dec_label_pc_45be36
  %stack_var_-1880.1.reload = load i32, i32* %stack_var_-1880.1.reg2mem
  %653 = icmp eq i32 %ecx.23.reload, %eax.20.reload, !insn.addr !6915
  %654 = icmp eq i1 %653, false, !insn.addr !6916
  %.pre207 = mul i32 %ecx.23.reload, 4
  %.pre209 = add i32 %.pre207, %542
  %.pre211 = inttoptr i32 %.pre209 to i32*
  br i1 %654, label %dec_label_pc_45be3b.dec_label_pc_45be56_crit_edge, label %dec_label_pc_45be3f, !insn.addr !6916

dec_label_pc_45be3b.dec_label_pc_45be56_crit_edge: ; preds = %dec_label_pc_45be3b
  %.pre281 = load i32, i32* %.pre211, align 4
  store i32 %.pre281, i32* %.reg2mem307
  store i8* %stack_var_-1864.8.reload, i8** %stack_var_-1864.9.reg2mem
  br label %dec_label_pc_45be56

dec_label_pc_45be3f:                              ; preds = %dec_label_pc_45be3b
  store i32 0, i32* %.pre211, align 4, !insn.addr !6917
  %655 = add i32 %651, %stack_var_-1880.1.reload, !insn.addr !6918
  %656 = inttoptr i32 %655 to i8*, !insn.addr !6919
  store i32 0, i32* %.reg2mem307, !insn.addr !6919
  store i8* %656, i8** %stack_var_-1864.9.reg2mem, !insn.addr !6919
  br label %dec_label_pc_45be56, !insn.addr !6919

dec_label_pc_45be56:                              ; preds = %dec_label_pc_45be3b.dec_label_pc_45be56_crit_edge, %dec_label_pc_45be3f
  %stack_var_-1864.9.reload = load i8*, i8** %stack_var_-1864.9.reg2mem
  %.reload308 = load i32, i32* %.reg2mem307, !insn.addr !6920
  %657 = mul i32 %stack_var_-1880.1.reload, 4, !insn.addr !6921
  %658 = add i32 %657, %ecx.20, !insn.addr !6921
  %659 = inttoptr i32 %658 to i32*, !insn.addr !6921
  %660 = load i32, i32* %659, align 4, !insn.addr !6921
  %661 = load i32, i32* %641, align 4, !insn.addr !6922
  %662 = zext i32 %661 to i64, !insn.addr !6922
  %663 = zext i32 %660 to i64, !insn.addr !6922
  %664 = mul nuw i64 %662, %663, !insn.addr !6922
  %665 = trunc i64 %664 to i32, !insn.addr !6922
  %666 = udiv i64 %664, 4294967296, !insn.addr !6922
  %667 = trunc i64 %666 to i32, !insn.addr !6922
  %668 = add i32 %stack_var_-1872.0.reload, %665, !insn.addr !6923
  %669 = icmp ult i32 %668, %665, !insn.addr !6923
  %670 = zext i1 %669 to i32, !insn.addr !6924
  %671 = add i32 %670, %667, !insn.addr !6924
  %672 = add i32 %668, %.reload308, !insn.addr !6920
  %673 = icmp ult i32 %672, %.reload308, !insn.addr !6920
  store i32 %672, i32* %.pre211, align 4, !insn.addr !6920
  %674 = zext i1 %673 to i32, !insn.addr !6925
  %675 = add i32 %671, %674, !insn.addr !6925
  %676 = add i32 %stack_var_-1880.1.reload, 1, !insn.addr !6926
  %677 = add i32 %ecx.23.reload, 1, !insn.addr !6927
  %678 = icmp eq i32 %676, %edi.7, !insn.addr !6928
  %679 = ptrtoint i8* %stack_var_-1864.9.reload to i32
  %680 = icmp eq i1 %678, false, !insn.addr !6929
  store i32 %675, i32* %stack_var_-1872.0.reg2mem, !insn.addr !6929
  store i32 %676, i32* %stack_var_-1880.1.reg2mem, !insn.addr !6929
  store i8* %stack_var_-1864.9.reload, i8** %stack_var_-1864.8.reg2mem, !insn.addr !6929
  store i32 %679, i32* %eax.20.reg2mem, !insn.addr !6929
  store i32 %677, i32* %ecx.23.reg2mem, !insn.addr !6929
  store i8* %stack_var_-1864.9.reload, i8** %stack_var_-1864.10.ph.reg2mem, !insn.addr !6929
  store i32 %679, i32* %eax.21.ph.reg2mem, !insn.addr !6929
  store i32 %677, i32* %ecx.24.ph.reg2mem, !insn.addr !6929
  store i32 %675, i32* %edx.14.ph.reg2mem, !insn.addr !6929
  br i1 %680, label %dec_label_pc_45be36, label %dec_label_pc_45be9f.preheader, !insn.addr !6929

dec_label_pc_45be9f.preheader:                    ; preds = %dec_label_pc_45be36, %dec_label_pc_45be56
  %edx.14.ph.reload = load i32, i32* %edx.14.ph.reg2mem
  %ecx.24.ph.reload = load i32, i32* %ecx.24.ph.reg2mem
  %eax.21.ph.reload = load i32, i32* %eax.21.ph.reg2mem
  %stack_var_-1864.10.ph.reload = load i8*, i8** %stack_var_-1864.10.ph.reg2mem
  %681 = icmp eq i32 %edx.14.ph.reload, 0, !insn.addr !6930
  store i32 %edx.14.ph.reload, i32* %edx.14127.reg2mem, !insn.addr !6931
  store i32 %ecx.24.ph.reload, i32* %ecx.24126.reg2mem, !insn.addr !6931
  store i32 %eax.21.ph.reload, i32* %eax.21125.reg2mem, !insn.addr !6931
  store i8* %stack_var_-1864.10.ph.reload, i8** %stack_var_-1864.12.reg2mem, !insn.addr !6931
  store i32 %eax.21.ph.reload, i32* %eax.22.reg2mem, !insn.addr !6931
  store i32 %ecx.24.ph.reload, i32* %ecx.25.reg2mem, !insn.addr !6931
  br i1 %681, label %dec_label_pc_45bed7, label %dec_label_pc_45bea3, !insn.addr !6931

dec_label_pc_45bea3:                              ; preds = %dec_label_pc_45be9f.preheader, %dec_label_pc_45bec1
  %ecx.24126.reload = load i32, i32* %ecx.24126.reg2mem
  %682 = icmp eq i32 %ecx.24126.reload, 115, !insn.addr !6932
  br i1 %682, label %dec_label_pc_45bfb4, label %dec_label_pc_45beac, !insn.addr !6933

dec_label_pc_45beac:                              ; preds = %dec_label_pc_45bea3
  %eax.21125.reload = load i32, i32* %eax.21125.reg2mem
  %edx.14127.reload = load i32, i32* %edx.14127.reg2mem
  %683 = icmp eq i32 %ecx.24126.reload, %eax.21125.reload, !insn.addr !6934
  %684 = icmp eq i1 %683, false, !insn.addr !6935
  %.pre199 = mul i32 %ecx.24126.reload, 4
  %.pre201 = add i32 %.pre199, %542
  %.pre203 = inttoptr i32 %.pre201 to i32*
  %.pre205 = add i32 %ecx.24126.reload, 1
  br i1 %684, label %dec_label_pc_45bec1, label %dec_label_pc_45bec1.thread, !insn.addr !6935

dec_label_pc_45bec1.thread:                       ; preds = %dec_label_pc_45beac
  %685 = inttoptr i32 %.pre205 to i8*, !insn.addr !6936
  store i32 %edx.14127.reload, i32* %.pre203, align 4, !insn.addr !6937
  store i8* %685, i8** %stack_var_-1864.12.reg2mem
  store i32 %.pre205, i32* %eax.22.reg2mem
  store i32 %.pre205, i32* %ecx.25.reg2mem
  br label %dec_label_pc_45bed7

dec_label_pc_45bec1:                              ; preds = %dec_label_pc_45beac
  %.pre282 = load i32, i32* %.pre203, align 4
  %686 = add i32 %.pre282, %edx.14127.reload, !insn.addr !6937
  %687 = icmp ult i32 %686, %.pre282, !insn.addr !6937
  store i32 %686, i32* %.pre203, align 4, !insn.addr !6937
  %688 = ptrtoint i8* %stack_var_-1864.10.ph.reload to i32
  %689 = icmp eq i1 %687, false, !insn.addr !6930
  store i32 1, i32* %edx.14127.reg2mem, !insn.addr !6931
  store i32 %.pre205, i32* %ecx.24126.reg2mem, !insn.addr !6931
  store i32 %688, i32* %eax.21125.reg2mem, !insn.addr !6931
  store i8* %stack_var_-1864.10.ph.reload, i8** %stack_var_-1864.12.reg2mem, !insn.addr !6931
  store i32 %688, i32* %eax.22.reg2mem, !insn.addr !6931
  store i32 %.pre205, i32* %ecx.25.reg2mem, !insn.addr !6931
  br i1 %689, label %dec_label_pc_45bed7, label %dec_label_pc_45bea3, !insn.addr !6931

dec_label_pc_45bed7:                              ; preds = %dec_label_pc_45bec1, %dec_label_pc_45bec1.thread, %dec_label_pc_45be9f.preheader, %dec_label_pc_45be1e
  %ecx.25.reload = load i32, i32* %ecx.25.reg2mem
  %eax.22.reload = load i32, i32* %eax.22.reg2mem
  %stack_var_-1864.12.reload = load i8*, i8** %stack_var_-1864.12.reg2mem
  %690 = icmp eq i32 %ecx.25.reload, 115, !insn.addr !6938
  store i8* %stack_var_-1864.12.reload, i8** %stack_var_-1864.13.reg2mem, !insn.addr !6939
  store i32 %eax.22.reload, i32* %eax.23.reg2mem, !insn.addr !6939
  store i32 %638, i32* %ecx.26.reg2mem, !insn.addr !6939
  br i1 %690, label %dec_label_pc_45bfb4, label %dec_label_pc_45beec, !insn.addr !6939

dec_label_pc_45beec:                              ; preds = %dec_label_pc_45bed7, %dec_label_pc_45be08, %dec_label_pc_45be00
  %ecx.26.reload = load i32, i32* %ecx.26.reg2mem
  %eax.23.reload = load i32, i32* %eax.23.reg2mem
  %stack_var_-1864.13.reload = load i8*, i8** %stack_var_-1864.13.reg2mem
  %691 = add i32 %esi.12.reload, 1, !insn.addr !6940
  %692 = icmp eq i32 %691, %ecx.26.reload, !insn.addr !6941
  %693 = icmp eq i1 %692, false, !insn.addr !6942
  store i8* %stack_var_-1864.13.reload, i8** %stack_var_-1864.7.reg2mem, !insn.addr !6942
  store i32 %eax.23.reload, i32* %eax.19.reg2mem, !insn.addr !6942
  store i32 %ecx.26.reload, i32* %ecx.22.reg2mem, !insn.addr !6942
  store i32 %691, i32* %esi.12.reg2mem, !insn.addr !6942
  store i32 %eax.23.reload, i32* %eax.24.reg2mem, !insn.addr !6942
  br i1 %693, label %dec_label_pc_45bdfa, label %dec_label_pc_45bef5, !insn.addr !6942

dec_label_pc_45bef5:                              ; preds = %dec_label_pc_45beec, %dec_label_pc_45bd91
  %eax.24.reload = load i32, i32* %eax.24.reg2mem
  %694 = inttoptr i32 %eax.24.reload to i8*, !insn.addr !6943
  store i8* %694, i8** %stack_var_-472, align 4, !insn.addr !6943
  %695 = mul i32 %eax.24.reload, 4, !insn.addr !6944
  store i32 %.pre196, i32* %storemerge32.pre-phi.reg2mem, !insn.addr !6945
  store i32 %695, i32* %storemerge90.reg2mem, !insn.addr !6945
  br label %dec_label_pc_45bf05, !insn.addr !6945

dec_label_pc_45bf05:                              ; preds = %dec_label_pc_45bef5, %dec_label_pc_45bc7e
  %storemerge90.reload = load i32, i32* %storemerge90.reg2mem
  %storemerge32.pre-phi.reload = load i32, i32* %storemerge32.pre-phi.reg2mem
  store i32 %storemerge90.reload, i32* %529, align 4
  store i32 %storemerge32.pre-phi.reload, i32* %531, align 4, !insn.addr !6946
  store i32 460, i32* %533, align 4, !insn.addr !6947
  store i32 %541, i32* %536, align 4, !insn.addr !6948
  %696 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6949
  %697 = call i32 @memcpy_s_3(i8* %696, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6949
  br label %dec_label_pc_45bf20, !insn.addr !6950

dec_label_pc_45bf20:                              ; preds = %dec_label_pc_45bf05, %dec_label_pc_45bd48, %dec_label_pc_45bcf2, %dec_label_pc_45bcd6, %dec_label_pc_45bc98
  %698 = sub i32 %stack_var_-1892.2.in.reload, %eax.17.reload, !insn.addr !6951
  %699 = icmp eq i32 %698, 0, !insn.addr !6951
  %700 = icmp eq i1 %699, false, !insn.addr !6952
  store i32 %698, i32* %stack_var_-1892.2.in.reg2mem, !insn.addr !6952
  br i1 %700, label %dec_label_pc_45bbfd, label %dec_label_pc_45bf3e, !insn.addr !6952

dec_label_pc_45bf3e:                              ; preds = %dec_label_pc_45bf20, %dec_label_pc_45bbe3
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6953
  br i1 icmp eq (i32 urem (i32 sub (i32 0, i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32))), i32 10), i32 0), label %dec_label_pc_45c019thread-pre-split, label %dec_label_pc_45bf46, !insn.addr !6953

dec_label_pc_45bf46:                              ; preds = %dec_label_pc_45bf3e
  %701 = load i32, i32* inttoptr (i32 add (i32 shl (i32 urem (i32 sub (i32 0, i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32))), i32 10), i32 2), i32 ptrtoint (i32* @global_var_471f0c to i32)) to i32*), align 4, !insn.addr !6954
  store i32 %307, i32* %esp.17.ph.reg2mem
  switch i32 %701, label %dec_label_pc_45bf64 [
    i32 0, label %dec_label_pc_45bff3
    i32 1, label %dec_label_pc_45c019thread-pre-split
  ]

dec_label_pc_45bf64:                              ; preds = %dec_label_pc_45bf46
  %702 = load i8*, i8** %stack_var_-472, align 4
  %703 = icmp eq i8* %702, null, !insn.addr !6955
  store i32 %307, i32* %esp.1789.reg2mem, !insn.addr !6956
  br i1 %703, label %dec_label_pc_45c0ad, label %dec_label_pc_45bf76.preheader, !insn.addr !6956

dec_label_pc_45bf76.preheader:                    ; preds = %dec_label_pc_45bf64
  %704 = ptrtoint i8* %702 to i32, !insn.addr !6957
  %705 = add i32 %39, -464, !insn.addr !6958
  %706 = zext i32 %701 to i64, !insn.addr !6958
  store i32 0, i32* %esi.13.reg2mem
  store i32 0, i32* %edi.8.reg2mem
  br label %dec_label_pc_45bf76

dec_label_pc_45bf76:                              ; preds = %dec_label_pc_45bf76.preheader, %dec_label_pc_45bf76
  %edi.8.reload = load i32, i32* %edi.8.reg2mem
  %esi.13.reload = load i32, i32* %esi.13.reg2mem
  %707 = mul i32 %esi.13.reload, 4, !insn.addr !6958
  %708 = add i32 %707, %705, !insn.addr !6958
  %709 = inttoptr i32 %708 to i32*, !insn.addr !6958
  %710 = load i32, i32* %709, align 4, !insn.addr !6958
  %711 = zext i32 %710 to i64, !insn.addr !6958
  %712 = mul nuw i64 %711, %706, !insn.addr !6958
  %713 = trunc i64 %712 to i32, !insn.addr !6958
  %714 = udiv i64 %712, 4294967296, !insn.addr !6958
  %715 = trunc i64 %714 to i32, !insn.addr !6958
  %716 = add i32 %edi.8.reload, %713, !insn.addr !6959
  %717 = icmp ult i32 %716, %713, !insn.addr !6959
  store i32 %716, i32* %709, align 4, !insn.addr !6960
  %718 = zext i1 %717 to i32, !insn.addr !6961
  %719 = add i32 %718, %715, !insn.addr !6961
  %720 = add i32 %esi.13.reload, 1, !insn.addr !6962
  %721 = icmp eq i32 %720, %704, !insn.addr !6963
  %722 = icmp eq i1 %721, false, !insn.addr !6964
  store i32 %720, i32* %esi.13.reg2mem, !insn.addr !6964
  store i32 %719, i32* %edi.8.reg2mem, !insn.addr !6964
  br i1 %722, label %dec_label_pc_45bf76, label %dec_label_pc_45bf96, !insn.addr !6964

dec_label_pc_45bf96:                              ; preds = %dec_label_pc_45bf76
  %723 = icmp eq i32 %719, 0, !insn.addr !6965
  store i32 %307, i32* %esp.17.ph.reg2mem, !insn.addr !6966
  br i1 %723, label %dec_label_pc_45c019thread-pre-split, label %dec_label_pc_45bf9a, !insn.addr !6966

dec_label_pc_45bf9a:                              ; preds = %dec_label_pc_45bf96
  %724 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6967
  %725 = icmp ult i8* %724, inttoptr (i32 115 to i8*), !insn.addr !6968
  %726 = icmp eq i1 %725, false, !insn.addr !6969
  br i1 %726, label %dec_label_pc_45bff3, label %dec_label_pc_45bfa5, !insn.addr !6969

dec_label_pc_45bfa5:                              ; preds = %dec_label_pc_45bf9a
  %727 = ptrtoint i8* %724 to i32, !insn.addr !6967
  %728 = mul i32 %727, 4, !insn.addr !6970
  %729 = add i32 %728, %705, !insn.addr !6970
  %730 = inttoptr i32 %729 to i32*, !insn.addr !6970
  store i32 %719, i32* %730, align 4, !insn.addr !6970
  %731 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !6971
  %732 = ptrtoint i8* %731 to i32, !insn.addr !6971
  %733 = add i32 %732, 1, !insn.addr !6971
  %734 = inttoptr i32 %733 to i8*, !insn.addr !6971
  store i8* %734, i8** %stack_var_-472, align 4, !insn.addr !6971
  store i8* %734, i8** %.reg2mem309, !insn.addr !6972
  store i32 %307, i32* %esp.17.reg2mem, !insn.addr !6972
  br label %dec_label_pc_45c019, !insn.addr !6972

dec_label_pc_45bfb4:                              ; preds = %dec_label_pc_45bce3, %dec_label_pc_45bed7, %dec_label_pc_45bea3
  store i32 0, i32* %529, align 4, !insn.addr !6973
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6974
  store i32 %544, i32* %531, align 4, !insn.addr !6975
  store i32 460, i32* %533, align 4, !insn.addr !6976
  store i32 %541, i32* %536, align 4, !insn.addr !6977
  %735 = call i32 @memcpy_s_3(i8* null, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6978
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6979
  store i32 0, i32* %529, align 4, !insn.addr !6980
  store i32 %544, i32* %.pre-phi195.reg2mem, !insn.addr !6981
  store i32 %528, i32* %esp.16.reg2mem, !insn.addr !6981
  br label %dec_label_pc_45c002, !insn.addr !6981

dec_label_pc_45bff3:                              ; preds = %dec_label_pc_45bf46, %dec_label_pc_45bf9a
  %736 = add i32 %307, -4, !insn.addr !6982
  %737 = inttoptr i32 %736 to i32*, !insn.addr !6982
  store i32 0, i32* %737, align 4, !insn.addr !6982
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !6983
  %.pre194 = ptrtoint i32* %stack_var_-2404 to i32, !insn.addr !6984
  store i32 %.pre194, i32* %.pre-phi195.reg2mem, !insn.addr !6985
  store i32 %736, i32* %esp.16.reg2mem, !insn.addr !6985
  br label %dec_label_pc_45c002, !insn.addr !6985

dec_label_pc_45c002:                              ; preds = %dec_label_pc_45bff3, %dec_label_pc_45bfb4
  %esp.16.reload = load i32, i32* %esp.16.reg2mem
  %.pre-phi195.reload = load i32, i32* %.pre-phi195.reg2mem
  %738 = add i32 %esp.16.reload, -4, !insn.addr !6984
  %739 = inttoptr i32 %738 to i32*, !insn.addr !6984
  store i32 %.pre-phi195.reload, i32* %739, align 4, !insn.addr !6984
  store i32 %738, i32* %storemerge57.reg2mem, !insn.addr !6986
  store i8** %stack_var_-468, i8*** %storemerge30.in.reg2mem, !insn.addr !6986
  br label %dec_label_pc_45c00f, !insn.addr !6986

dec_label_pc_45c00f:                              ; preds = %dec_label_pc_45c002, %dec_label_pc_45bb6d
  %storemerge30.in.reload = load i8**, i8*** %storemerge30.in.reg2mem
  %storemerge57.reload = load i32, i32* %storemerge57.reg2mem
  %storemerge30 = ptrtoint i8** %storemerge30.in.reload to i32
  %740 = add i32 %storemerge57.reload, -4, !insn.addr !6987
  %741 = inttoptr i32 %740 to i32*, !insn.addr !6987
  store i32 460, i32* %741, align 4, !insn.addr !6987
  %742 = add i32 %storemerge57.reload, -8, !insn.addr !6988
  %743 = inttoptr i32 %742 to i32*, !insn.addr !6988
  store i32 %storemerge30, i32* %743, align 4, !insn.addr !6988
  %744 = call i32 @memcpy_s_3(i8* null, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !6989
  %745 = add i32 %storemerge57.reload, 8, !insn.addr !6990
  store i32 %745, i32* %esp.17.ph.reg2mem, !insn.addr !6990
  br label %dec_label_pc_45c019thread-pre-split, !insn.addr !6990

dec_label_pc_45c019thread-pre-split:              ; preds = %dec_label_pc_45bb09, %dec_label_pc_45bb7f, %dec_label_pc_45bb88, %dec_label_pc_45bbba, %dec_label_pc_45bbd1, %dec_label_pc_45bf3e, %dec_label_pc_45bf96, %dec_label_pc_45c00f, %dec_label_pc_45bf46
  %esp.17.ph.reload = load i32, i32* %esp.17.ph.reg2mem
  %.pr = load i8*, i8** %stack_var_-472, align 4
  store i8* %.pr, i8** %.reg2mem309
  store i32 %esp.17.ph.reload, i32* %esp.17.reg2mem
  br label %dec_label_pc_45c019

dec_label_pc_45c019:                              ; preds = %dec_label_pc_45c019thread-pre-split, %dec_label_pc_45bfa5
  %esp.17.reload = load i32, i32* %esp.17.reg2mem
  %.reload310 = load i8*, i8** %.reg2mem309, !insn.addr !6991
  %746 = icmp eq i8* %.reload310, null, !insn.addr !6992
  store i32 %esp.17.reload, i32* %esp.1789.reg2mem, !insn.addr !6993
  br i1 %746, label %dec_label_pc_45c0ad, label %dec_label_pc_45c031, !insn.addr !6993

dec_label_pc_45c031:                              ; preds = %dec_label_pc_45c019
  %747 = ptrtoint i8* %.reload310 to i32, !insn.addr !6991
  %748 = add i32 %esp.17.reload, -4, !insn.addr !6994
  %749 = inttoptr i32 %748 to i32*, !insn.addr !6994
  store i32 10, i32* %749, align 4, !insn.addr !6994
  %750 = add i32 %39, -464, !insn.addr !6995
  store i32 0, i32* %edi.9.reg2mem, !insn.addr !6996
  br label %dec_label_pc_45c038, !insn.addr !6996

dec_label_pc_45c038:                              ; preds = %dec_label_pc_45c038, %dec_label_pc_45c031
  %edi.9.reload = load i32, i32* %edi.9.reg2mem
  %751 = mul i32 %edi.9.reload, 4, !insn.addr !6995
  %752 = add i32 %751, %750, !insn.addr !6995
  %753 = inttoptr i32 %752 to i32*, !insn.addr !6995
  %754 = load i32, i32* %753, align 4, !insn.addr !6995
  %755 = add i32 %edi.9.reload, 1, !insn.addr !6997
  %756 = icmp eq i32 %755, %747, !insn.addr !6998
  %757 = icmp eq i1 %756, false, !insn.addr !6999
  store i32 %755, i32* %edi.9.reg2mem, !insn.addr !6999
  br i1 %757, label %dec_label_pc_45c038, label %dec_label_pc_45c054, !insn.addr !6999

dec_label_pc_45c054:                              ; preds = %dec_label_pc_45c038
  %758 = icmp ult i32 %754, 429496730
  store i32 %esp.17.reload, i32* %esp.1789.reg2mem, !insn.addr !7000
  br i1 %758, label %dec_label_pc_45c0ad, label %dec_label_pc_45c069, !insn.addr !7000

dec_label_pc_45c069:                              ; preds = %dec_label_pc_45c054
  %759 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !7001
  %760 = icmp ult i8* %759, inttoptr (i32 115 to i8*), !insn.addr !7002
  %761 = icmp eq i1 %760, false, !insn.addr !7003
  br i1 %761, label %dec_label_pc_45c085, label %dec_label_pc_45c074, !insn.addr !7003

dec_label_pc_45c074:                              ; preds = %dec_label_pc_45c069
  %762 = udiv i32 %754, 429496730, !insn.addr !7004
  %763 = ptrtoint i8* %759 to i32, !insn.addr !7001
  %764 = mul i32 %763, 4, !insn.addr !7005
  %765 = add i32 %764, %750, !insn.addr !7005
  %766 = inttoptr i32 %765 to i32*, !insn.addr !7005
  store i32 %762, i32* %766, align 4, !insn.addr !7005
  %767 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !7006
  %768 = ptrtoint i8* %767 to i32, !insn.addr !7006
  %769 = add i32 %768, 1, !insn.addr !7006
  %770 = inttoptr i32 %769 to i8*, !insn.addr !7006
  store i8* %770, i8** %stack_var_-472, align 4, !insn.addr !7006
  store i32 %esp.17.reload, i32* %esp.1789.reg2mem, !insn.addr !7007
  br label %dec_label_pc_45c0ad, !insn.addr !7007

dec_label_pc_45c085:                              ; preds = %dec_label_pc_45c069
  store i32 0, i32* %749, align 4, !insn.addr !7008
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !7009
  %771 = add i32 %esp.17.reload, -8, !insn.addr !7010
  %772 = inttoptr i32 %771 to i32*, !insn.addr !7010
  %773 = ptrtoint i32* %stack_var_-2404 to i32, !insn.addr !7010
  store i32 %773, i32* %772, align 4, !insn.addr !7010
  %774 = add i32 %esp.17.reload, -12, !insn.addr !7011
  %775 = inttoptr i32 %774 to i32*, !insn.addr !7011
  store i32 460, i32* %775, align 4, !insn.addr !7011
  %776 = add i32 %esp.17.reload, -16, !insn.addr !7012
  %777 = inttoptr i32 %776 to i32*, !insn.addr !7012
  %778 = ptrtoint i8** %stack_var_-468 to i32, !insn.addr !7012
  store i32 %778, i32* %777, align 4, !insn.addr !7012
  %779 = call i32 @memcpy_s_3(i8* null, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !7013
  store i32 %esp.17.reload, i32* %esp.1789.reg2mem, !insn.addr !7014
  br label %dec_label_pc_45c0ad, !insn.addr !7014

dec_label_pc_45c0ad:                              ; preds = %dec_label_pc_45bf64, %dec_label_pc_45c054, %dec_label_pc_45c074, %dec_label_pc_45c085, %dec_label_pc_45c019
  %esp.1789.reload = load i32, i32* %esp.1789.reg2mem
  %780 = add i32 %esp.1789.reload, -4, !insn.addr !7015
  %781 = inttoptr i32 %780 to i32*, !insn.addr !7015
  %782 = ptrtoint i8** %stack_var_-936 to i32, !insn.addr !7015
  store i32 %782, i32* %781, align 4, !insn.addr !7015
  %783 = add i32 %esp.1789.reload, -8, !insn.addr !7016
  %784 = inttoptr i32 %783 to i32*, !insn.addr !7016
  %785 = ptrtoint i8** %stack_var_-472 to i32, !insn.addr !7016
  store i32 %785, i32* %784, align 4, !insn.addr !7016
  %786 = call i32 @function_4032b0(), !insn.addr !7017
  %787 = icmp eq i32 %786, 10, !insn.addr !7018
  %788 = icmp eq i1 %787, false, !insn.addr !7019
  br i1 %788, label %dec_label_pc_45c161, label %dec_label_pc_45c0cb, !insn.addr !7019

dec_label_pc_45c0cb:                              ; preds = %dec_label_pc_45c0ad
  %789 = add i32 %result_count, 1, !insn.addr !7020
  %790 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !7021
  %791 = inttoptr i32 %result_count to i8*, !insn.addr !7022
  store i8 49, i8* %791, align 1, !insn.addr !7022
  %792 = icmp eq i8* %790, null, !insn.addr !7023
  store i32 %789, i32* %esi.17.reg2mem, !insn.addr !7024
  store i32 add (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 1), i32* %storemerge.reg2mem, !insn.addr !7024
  br i1 %792, label %dec_label_pc_45c17b, label %dec_label_pc_45c0eb, !insn.addr !7024

dec_label_pc_45c0eb:                              ; preds = %dec_label_pc_45c0cb
  %793 = ptrtoint i8* %790 to i32, !insn.addr !7021
  store i32 10, i32* %781, align 4, !insn.addr !7025
  %794 = add i32 %39, -928, !insn.addr !7026
  store i32 0, i32* %ecx.28.reg2mem, !insn.addr !7027
  br label %dec_label_pc_45c0f4, !insn.addr !7027

dec_label_pc_45c0f4:                              ; preds = %dec_label_pc_45c0f4, %dec_label_pc_45c0eb
  %ecx.28.reload = load i32, i32* %ecx.28.reg2mem
  %795 = mul i32 %ecx.28.reload, 4, !insn.addr !7026
  %796 = add i32 %795, %794, !insn.addr !7026
  %797 = inttoptr i32 %796 to i32*, !insn.addr !7026
  %798 = load i32, i32* %797, align 4, !insn.addr !7026
  %799 = add i32 %ecx.28.reload, 1, !insn.addr !7028
  %800 = icmp eq i32 %799, %793, !insn.addr !7029
  %801 = icmp eq i1 %800, false, !insn.addr !7030
  store i32 %799, i32* %ecx.28.reg2mem, !insn.addr !7030
  br i1 %801, label %dec_label_pc_45c0f4, label %dec_label_pc_45c110, !insn.addr !7030

dec_label_pc_45c110:                              ; preds = %dec_label_pc_45c0f4
  %802 = icmp ult i32 %798, 429496730
  store i32 %789, i32* %esi.17.reg2mem, !insn.addr !7031
  store i32 add (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 1), i32* %storemerge.reg2mem, !insn.addr !7031
  br i1 %802, label %dec_label_pc_45c17b, label %dec_label_pc_45c11f, !insn.addr !7031

dec_label_pc_45c11f:                              ; preds = %dec_label_pc_45c110
  %803 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !7032
  %804 = icmp ult i8* %803, inttoptr (i32 115 to i8*), !insn.addr !7033
  %805 = icmp eq i1 %804, false, !insn.addr !7034
  br i1 %805, label %dec_label_pc_45c139, label %dec_label_pc_45c12a, !insn.addr !7034

dec_label_pc_45c12a:                              ; preds = %dec_label_pc_45c11f
  %806 = udiv i32 %798, 429496730, !insn.addr !7035
  %807 = ptrtoint i8* %803 to i32, !insn.addr !7032
  %808 = mul i32 %807, 4, !insn.addr !7036
  %809 = add i32 %808, %794, !insn.addr !7036
  %810 = inttoptr i32 %809 to i32*, !insn.addr !7036
  store i32 %806, i32* %810, align 4, !insn.addr !7036
  %811 = load i8*, i8** %stack_var_-936, align 4, !insn.addr !7037
  %812 = ptrtoint i8* %811 to i32, !insn.addr !7037
  %813 = add i32 %812, 1, !insn.addr !7037
  %814 = inttoptr i32 %813 to i8*, !insn.addr !7037
  store i8* %814, i8** %stack_var_-936, align 4, !insn.addr !7037
  store i32 %789, i32* %esi.17.reg2mem, !insn.addr !7038
  store i32 add (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 1), i32* %storemerge.reg2mem, !insn.addr !7038
  br label %dec_label_pc_45c17b, !insn.addr !7038

dec_label_pc_45c139:                              ; preds = %dec_label_pc_45c11f
  store i32 0, i32* %781, align 4, !insn.addr !7039
  store i8* null, i8** %stack_var_-936, align 4, !insn.addr !7040
  %815 = ptrtoint i32* %stack_var_-2404 to i32, !insn.addr !7041
  store i32 %815, i32* %784, align 4, !insn.addr !7041
  %816 = add i32 %esp.1789.reload, -12, !insn.addr !7042
  %817 = inttoptr i32 %816 to i32*, !insn.addr !7042
  store i32 460, i32* %817, align 4, !insn.addr !7042
  %818 = add i32 %esp.1789.reload, -16, !insn.addr !7043
  %819 = inttoptr i32 %818 to i32*, !insn.addr !7043
  %820 = ptrtoint i8** %stack_var_-932 to i32, !insn.addr !7043
  store i32 %820, i32* %819, align 4, !insn.addr !7043
  %821 = call i32 @memcpy_s_3(i8* null, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !7044
  store i32 %789, i32* %esi.17.reg2mem, !insn.addr !7045
  store i32 add (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 1), i32* %storemerge.reg2mem, !insn.addr !7045
  br label %dec_label_pc_45c17b, !insn.addr !7045

dec_label_pc_45c161:                              ; preds = %dec_label_pc_45c0ad
  %822 = icmp eq i32 %786, 0, !insn.addr !7046
  %823 = icmp eq i1 %822, false, !insn.addr !7047
  store i32 %result_count, i32* %esi.17.reg2mem, !insn.addr !7047
  store i32 add (i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32 -1), i32* %storemerge.reg2mem, !insn.addr !7047
  br i1 %823, label %dec_label_pc_45c16e, label %dec_label_pc_45c17b, !insn.addr !7047

dec_label_pc_45c16e:                              ; preds = %dec_label_pc_45c161
  %824 = add i32 %result_count, 1, !insn.addr !7048
  %825 = trunc i32 %786 to i8
  %826 = add i8 %825, 48, !insn.addr !7049
  %827 = inttoptr i32 %result_count to i8*, !insn.addr !7049
  store i8 %826, i8* %827, align 1, !insn.addr !7049
  store i32 %824, i32* %esi.17.reg2mem, !insn.addr !7049
  store i32 select (i1 or (i1 icmp eq (i32 sub (i32 ptrtoint (i32* @80 to i32), i32 2147483647), i32 0), i1 icmp eq (i32 ptrtoint (i32* @80 to i32), i32 -2147483648)), i32 0, i32 ptrtoint (i32* @80 to i32)), i32* %storemerge.reg2mem, !insn.addr !7049
  br label %dec_label_pc_45c17b, !insn.addr !7049

dec_label_pc_45c17b:                              ; preds = %dec_label_pc_45c161, %dec_label_pc_45c0cb, %dec_label_pc_45c110, %dec_label_pc_45c12a, %dec_label_pc_45c139, %dec_label_pc_45c16e
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %esi.17.reload = load i32, i32* %esi.17.reg2mem
  %828 = add i32 %17, 4, !insn.addr !7050
  %829 = inttoptr i32 %828 to i32*, !insn.addr !7050
  store i32 %storemerge.reload, i32* %829, align 4, !insn.addr !7050
  %830 = icmp sgt i32 %storemerge.reload, -1, !insn.addr !7051
  %831 = icmp sgt i32 %41, -1
  %or.cond68 = icmp eq i1 %831, %830
  %832 = select i1 %or.cond68, i32 %storemerge.reload, i32 0
  %spec.select86 = add i32 %832, %41
  %833 = add i32 %4, -1, !insn.addr !7052
  %834 = icmp ult i32 %833, %spec.select86, !insn.addr !7053
  %eax.27 = select i1 %834, i32 %833, i32 %spec.select86
  %835 = add i32 %eax.27, %result_count, !insn.addr !7054
  %836 = icmp eq i32 %esi.17.reload, %835, !insn.addr !7055
  store i32 %esi.17.reload, i32* %esi.19.reg2mem, !insn.addr !7056
  br i1 %836, label %dec_label_pc_45c282, label %dec_label_pc_45c1b6.preheader, !insn.addr !7056

dec_label_pc_45c1b6.preheader:                    ; preds = %dec_label_pc_45c17b
  %837 = add i32 %39, -464
  %838 = ptrtoint i32* %stack_var_-2404 to i32
  %839 = add i32 %esp.1789.reload, -12
  %840 = inttoptr i32 %839 to i32*
  %841 = add i32 %esp.1789.reload, -16
  %842 = inttoptr i32 %841 to i32*
  %843 = ptrtoint i8** %stack_var_-468 to i32
  store i32 %esi.17.reload, i32* %esi.18.reg2mem
  br label %dec_label_pc_45c1b6

dec_label_pc_45c1b6:                              ; preds = %dec_label_pc_45c1b6.preheader, %dec_label_pc_45c274
  %esi.18.reload = load i32, i32* %esi.18.reg2mem
  %844 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !7057
  %845 = ptrtoint i8* %844 to i32, !insn.addr !7057
  %846 = icmp eq i8* %844, null, !insn.addr !7058
  store i32 0, i32* %ecx.30.reg2mem, !insn.addr !7059
  store i32 %esi.18.reload, i32* %esi.19.reg2mem, !insn.addr !7059
  br i1 %846, label %dec_label_pc_45c282, label %dec_label_pc_45c1ca, !insn.addr !7059

dec_label_pc_45c1ca:                              ; preds = %dec_label_pc_45c1b6, %dec_label_pc_45c1ca
  %ecx.30.reload = load i32, i32* %ecx.30.reg2mem
  %847 = mul i32 %ecx.30.reload, 4, !insn.addr !7060
  %848 = add i32 %847, %837, !insn.addr !7060
  %849 = inttoptr i32 %848 to i32*, !insn.addr !7060
  %850 = load i32, i32* %849, align 4, !insn.addr !7060
  %851 = add i32 %ecx.30.reload, 1, !insn.addr !7061
  %852 = icmp eq i32 %851, %845, !insn.addr !7062
  %853 = icmp eq i1 %852, false, !insn.addr !7063
  store i32 %851, i32* %ecx.30.reg2mem, !insn.addr !7063
  br i1 %853, label %dec_label_pc_45c1ca, label %dec_label_pc_45c1eb, !insn.addr !7063

dec_label_pc_45c1eb:                              ; preds = %dec_label_pc_45c1ca
  %854 = icmp ult i32 %850, 5
  br i1 %854, label %dec_label_pc_45c234, label %dec_label_pc_45c1f4, !insn.addr !7064

dec_label_pc_45c1f4:                              ; preds = %dec_label_pc_45c1eb
  %855 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !7065
  %856 = icmp ult i8* %855, inttoptr (i32 115 to i8*), !insn.addr !7066
  %857 = icmp eq i1 %856, false, !insn.addr !7067
  br i1 %857, label %dec_label_pc_45c20e, label %dec_label_pc_45c1ff, !insn.addr !7067

dec_label_pc_45c1ff:                              ; preds = %dec_label_pc_45c1f4
  %858 = udiv i32 %850, 5, !insn.addr !7068
  %859 = ptrtoint i8* %855 to i32, !insn.addr !7065
  %860 = mul i32 %859, 4, !insn.addr !7069
  %861 = add i32 %860, %837, !insn.addr !7069
  %862 = inttoptr i32 %861 to i32*, !insn.addr !7069
  store i32 %858, i32* %862, align 4, !insn.addr !7069
  %863 = load i8*, i8** %stack_var_-472, align 4, !insn.addr !7070
  %864 = ptrtoint i8* %863 to i32, !insn.addr !7070
  %865 = add i32 %864, 1, !insn.addr !7070
  %866 = inttoptr i32 %865 to i8*, !insn.addr !7070
  store i8* %866, i8** %stack_var_-472, align 4, !insn.addr !7070
  br label %dec_label_pc_45c234, !insn.addr !7071

dec_label_pc_45c20e:                              ; preds = %dec_label_pc_45c1f4
  store i32 0, i32* %781, align 4, !insn.addr !7072
  store i8* null, i8** %stack_var_-472, align 4, !insn.addr !7073
  store i32 %838, i32* %784, align 4, !insn.addr !7074
  store i32 460, i32* %840, align 4, !insn.addr !7075
  store i32 %843, i32* %842, align 4, !insn.addr !7076
  %867 = call i32 @memcpy_s_3(i8* null, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*), i32 ptrtoint (i32* @80 to i32)), !insn.addr !7077
  br label %dec_label_pc_45c234, !insn.addr !7078

dec_label_pc_45c234:                              ; preds = %dec_label_pc_45c20e, %dec_label_pc_45c1ff, %dec_label_pc_45c1eb
  store i32 %782, i32* %781, align 4, !insn.addr !7079
  store i32 %785, i32* %784, align 4, !insn.addr !7080
  %868 = call i32 @function_4032b0(), !insn.addr !7081
  store i32 8, i32* %781, align 4, !insn.addr !7082
  %869 = sub i32 %835, %esi.18.reload, !insn.addr !7083
  store i32 %868, i32* %eax.28.reg2mem, !insn.addr !7083
  store i32 8, i32* %edi.13.reg2mem, !insn.addr !7083
  br label %dec_label_pc_45c254, !insn.addr !7083

dec_label_pc_45c254:                              ; preds = %dec_label_pc_45c266, %dec_label_pc_45c234
  %edi.13.reload = load i32, i32* %edi.13.reg2mem
  %eax.28.reload = load i32, i32* %eax.28.reg2mem
  %870 = icmp ult i32 %869, %edi.13.reload, !insn.addr !7084
  br i1 %870, label %dec_label_pc_45c266, label %dec_label_pc_45c263, !insn.addr !7085

dec_label_pc_45c263:                              ; preds = %dec_label_pc_45c254
  %871 = urem i32 %eax.28.reload, 10
  %872 = trunc i32 %871 to i8
  %873 = or i8 %872, 48, !insn.addr !7086
  %874 = add i32 %edi.13.reload, %esi.18.reload, !insn.addr !7086
  %875 = inttoptr i32 %874 to i8*, !insn.addr !7086
  store i8 %873, i8* %875, align 1, !insn.addr !7086
  br label %dec_label_pc_45c266, !insn.addr !7086

dec_label_pc_45c266:                              ; preds = %dec_label_pc_45c263, %dec_label_pc_45c254
  %876 = udiv i32 %eax.28.reload, 10, !insn.addr !7087
  %877 = add nsw i32 %edi.13.reload, -1, !insn.addr !7088
  %878 = icmp eq i32 %edi.13.reload, 0, !insn.addr !7089
  %879 = icmp eq i1 %878, false, !insn.addr !7090
  store i32 %876, i32* %eax.28.reg2mem, !insn.addr !7090
  store i32 %877, i32* %edi.13.reg2mem, !insn.addr !7090
  br i1 %879, label %dec_label_pc_45c254, label %dec_label_pc_45c26c, !insn.addr !7090

dec_label_pc_45c26c:                              ; preds = %dec_label_pc_45c266
  %880 = icmp ult i32 %869, 10
  store i32 %869, i32* %ecx.31.reg2mem, !insn.addr !7091
  br i1 %880, label %dec_label_pc_45c274, label %dec_label_pc_45c271, !insn.addr !7091

dec_label_pc_45c271:                              ; preds = %dec_label_pc_45c26c
  store i32 9, i32* %781, align 4, !insn.addr !7092
  store i32 9, i32* %ecx.31.reg2mem, !insn.addr !7093
  br label %dec_label_pc_45c274, !insn.addr !7093

dec_label_pc_45c274:                              ; preds = %dec_label_pc_45c271, %dec_label_pc_45c26c
  %ecx.31.reload = load i32, i32* %ecx.31.reg2mem
  %881 = add i32 %ecx.31.reload, %esi.18.reload, !insn.addr !7094
  %882 = icmp eq i32 %881, %835, !insn.addr !7095
  %883 = icmp eq i1 %882, false, !insn.addr !7096
  store i32 %881, i32* %esi.18.reg2mem, !insn.addr !7096
  store i32 %881, i32* %esi.19.reg2mem, !insn.addr !7096
  br i1 %883, label %dec_label_pc_45c1b6, label %dec_label_pc_45c282, !insn.addr !7096

dec_label_pc_45c282:                              ; preds = %dec_label_pc_45c274, %dec_label_pc_45c1b6, %dec_label_pc_45c17b
  %esi.19.reload = load i32, i32* %esi.19.reg2mem
  %884 = inttoptr i32 %esi.19.reload to i8*, !insn.addr !7097
  store i8 0, i8* %884, align 1, !insn.addr !7097
  store i32 %esp.1789.reload, i32* %esp.26.reg2mem, !insn.addr !7097
  br label %dec_label_pc_45c285, !insn.addr !7097

dec_label_pc_45c285:                              ; preds = %dec_label_pc_45c2c7, %dec_label_pc_45c282
  %885 = icmp eq i8 %storemerge55.reload, 0, !insn.addr !7098
  br i1 %885, label %dec_label_pc_45c29e, label %dec_label_pc_45c291, !insn.addr !7099

dec_label_pc_45c291:                              ; preds = %dec_label_pc_45c285
  %esp.26.reload = load i32, i32* %esp.26.reg2mem
  %886 = add i32 %esp.26.reload, 8, !insn.addr !7100
  %887 = inttoptr i32 %886 to i32*, !insn.addr !7100
  %888 = ptrtoint i32* %reset_fp_state_-1944 to i32, !insn.addr !7100
  store i32 %888, i32* %887, align 4, !insn.addr !7100
  %889 = call i32 @fesetenv(%fenv_t* bitcast (i32* @80 to %fenv_t*)), !insn.addr !7101
  br label %dec_label_pc_45c29e, !insn.addr !7102

dec_label_pc_45c29e:                              ; preds = %dec_label_pc_45c291, %dec_label_pc_45c285
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !7103
  ret void, !insn.addr !7104

dec_label_pc_45c2aa:                              ; preds = %dec_label_pc_45b06d
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_477c3c, i32 0, i32 0), i8** %stack_var_-2424, align 4, !insn.addr !7105
  br label %dec_label_pc_45c2bd, !insn.addr !7106

dec_label_pc_45c2b1:                              ; preds = %dec_label_pc_45b06d
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_477c34, i32 0, i32 0), i8** %stack_var_-2424, align 4, !insn.addr !7107
  br label %dec_label_pc_45c2bd, !insn.addr !7108

dec_label_pc_45c2b8:                              ; preds = %dec_label_pc_45b06d
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_477c2c, i32 0, i32 0), i8** %stack_var_-2424, align 4, !insn.addr !7109
  br label %dec_label_pc_45c2bd, !insn.addr !7109

dec_label_pc_45c2bd:                              ; preds = %dec_label_pc_45c2d5, %dec_label_pc_45c2b8, %dec_label_pc_45c2b1, %dec_label_pc_45c2aa
  %esp.27 = ptrtoint i8** %stack_var_-2424 to i32
  %890 = add i32 %esp.27, -4, !insn.addr !7110
  %891 = inttoptr i32 %890 to i32*, !insn.addr !7110
  %892 = add i32 %esp.27, -8, !insn.addr !7111
  %893 = inttoptr i32 %892 to i32*, !insn.addr !7111
  store i32 %result_count, i32* %893, align 4, !insn.addr !7111
  store i32 %892, i32* %storemerge53.reg2mem, !insn.addr !7111
  br label %dec_label_pc_45c2c7, !insn.addr !7111

dec_label_pc_45c2c7:                              ; preds = %dec_label_pc_45c2bd, %dec_label_pc_45b047
  %storemerge53.reload = load i32, i32* %storemerge53.reg2mem
  %894 = load i8*, i8** %stack_var_-2424, align 4, !insn.addr !7112
  %895 = call i32 @strcpy_s(i8* %894, i32 ptrtoint (i32* @80 to i32), i8* bitcast (i32* @80 to i8*)), !insn.addr !7112
  %896 = add i32 %storemerge53.reload, 12, !insn.addr !7113
  %897 = icmp eq i32 %895, 0, !insn.addr !7114
  %898 = icmp eq i1 %897, false, !insn.addr !7115
  store i32 %896, i32* %esp.26.reg2mem, !insn.addr !7115
  br i1 %898, label %dec_label_pc_45c2dc, label %dec_label_pc_45c285, !insn.addr !7115

dec_label_pc_45c2d5:                              ; preds = %dec_label_pc_45b06d
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_477c24, i32 0, i32 0), i8** %stack_var_-2424, align 4, !insn.addr !7116
  br label %dec_label_pc_45c2bd, !insn.addr !7117

dec_label_pc_45c2dc:                              ; preds = %dec_label_pc_45c2c7
  %899 = add i32 %storemerge53.reload, 8, !insn.addr !7118
  %900 = inttoptr i32 %899 to i32*, !insn.addr !7118
  store i32 0, i32* %900, align 4, !insn.addr !7118
  %901 = add i32 %storemerge53.reload, 4, !insn.addr !7119
  %902 = inttoptr i32 %901 to i32*, !insn.addr !7119
  store i32 0, i32* %902, align 4, !insn.addr !7119
  %903 = inttoptr i32 %storemerge53.reload to i32*, !insn.addr !7120
  store i32 0, i32* %903, align 4, !insn.addr !7120
  %904 = add i32 %storemerge53.reload, -4, !insn.addr !7121
  %905 = inttoptr i32 %904 to i32*, !insn.addr !7121
  store i32 0, i32* %905, align 4, !insn.addr !7121
  %906 = add i32 %storemerge53.reload, -8, !insn.addr !7122
  %907 = inttoptr i32 %906 to i32*, !insn.addr !7122
  store i32 0, i32* %907, align 4, !insn.addr !7122
  %908 = call i32 @__invoke_watson(), !insn.addr !7123
  %909 = call i32 @__asm_int3(), !insn.addr !7124
  %910 = call i32 @__asm_int3(), !insn.addr !7125
  %911 = call i32 @__asm_int3(), !insn.addr !7126
  %912 = call i32 @__asm_int3(), !insn.addr !7127
  %913 = call i32 @__asm_int3(), !insn.addr !7128
  %914 = call i32 @__asm_int3(), !insn.addr !7129
  %915 = call i32 @__asm_int3(), !insn.addr !7130
  %916 = call i32 @__asm_int3(), !insn.addr !7131
  %917 = call i32 @__asm_int3(), !insn.addr !7132
  %918 = call i32 @__asm_int3(), !insn.addr !7133
  %919 = call i32 @__asm_int3(), !insn.addr !7134
  %920 = call i32 @__asm_int3(), !insn.addr !7135
  %921 = call i32 @__asm_int3(), !insn.addr !7136
  %922 = call i32 @__asm_int3(), !insn.addr !7137
  %923 = call i32 @__asm_int3(), !insn.addr !7138
  %924 = call i32 @__asm_int3(), !insn.addr !7139
  %925 = call i32 @__asm_int3(), !insn.addr !7140
  %926 = call i32 @__asm_int3(), !insn.addr !7141
  %927 = call i32 @__asm_int3(), !insn.addr !7142
  %928 = call i32 @__asm_int3(), !insn.addr !7143
  %929 = call i32 @__asm_int3(), !insn.addr !7144
  %930 = call i32 @__asm_int3(), !insn.addr !7145
  %931 = call i32 @__asm_int3(), !insn.addr !7146
  %932 = call i32 @__asm_int3(), !insn.addr !7147
  %933 = call i32 @__asm_int3(), !insn.addr !7148
  %934 = call i32 @__asm_int3(), !insn.addr !7149
  %935 = call i32 @__asm_int3(), !insn.addr !7150
  %936 = call i32 @__asm_int3(), !insn.addr !7151
  %937 = call i32 @__asm_int3(), !insn.addr !7152
  %938 = call i32 @__asm_int3(), !insn.addr !7153
  %939 = call i32 @__asm_int3(), !insn.addr !7154
  %940 = call i32 @__asm_int3(), !insn.addr !7155
  %941 = call i32 @__asm_int3(), !insn.addr !7156
  %942 = call i32 @__asm_int3(), !insn.addr !7157
  %943 = call i32 @__asm_int3(), !insn.addr !7158
  %944 = call i32 @__asm_int3(), !insn.addr !7159
  %945 = call i32 @__asm_int3(), !insn.addr !7160
  %946 = call i32 @__asm_int3(), !insn.addr !7161
  %947 = call i32 @__asm_int3(), !insn.addr !7162
  %948 = call i32 @__asm_int3(), !insn.addr !7163
  %949 = call i32 @__asm_int3(), !insn.addr !7164
  %950 = call i32 @__asm_int3(), !insn.addr !7165
  %951 = call i32 @__asm_int3(), !insn.addr !7166
  %952 = call i32 @__asm_int3(), !insn.addr !7167
  %953 = call i32 @__asm_int3(), !insn.addr !7168
  %954 = call i32 @__asm_int3(), !insn.addr !7169
  %955 = call i32 @__asm_int3(), !insn.addr !7170
  %956 = call i32 @__asm_int3(), !insn.addr !7171
  %957 = call i32 @__asm_int3(), !insn.addr !7172
  %958 = call i32 @__asm_int3(), !insn.addr !7173
  %959 = call i32 @__asm_int3(), !insn.addr !7174
  %960 = call i32 @__asm_int3(), !insn.addr !7175
  %961 = call i32 @__asm_int3(), !insn.addr !7176
  %962 = call i32 @__asm_int3(), !insn.addr !7177
  %963 = call i32 @__asm_int3(), !insn.addr !7178
  %964 = call i32 @__asm_int3(), !insn.addr !7179
  %965 = call i32 @__asm_int3(), !insn.addr !7180
  %966 = call i32 @__asm_int3(), !insn.addr !7181
  %967 = call i32 @__asm_int3(), !insn.addr !7182
  %968 = call i32 @__asm_int3(), !insn.addr !7183
  %969 = call i32 @__asm_int3(), !insn.addr !7184
  %970 = call i32 @__asm_int3(), !insn.addr !7185
  %971 = call i32 @__asm_int3(), !insn.addr !7186
  %972 = call i32 @__asm_int3(), !insn.addr !7187
  %973 = call i32 @__asm_int3(), !insn.addr !7188
  %974 = call i32 @__asm_int3(), !insn.addr !7189
  %975 = call i32 @__asm_int3(), !insn.addr !7190
  %976 = call i32 @__asm_int3(), !insn.addr !7191
  %977 = call i32 @__asm_int3(), !insn.addr !7192
  %978 = call i32 @__asm_int3(), !insn.addr !7193
  %979 = call i32 @__asm_int3(), !insn.addr !7194
  %980 = call i32 @__asm_int3(), !insn.addr !7195
  %981 = call i32 @__asm_int3(), !insn.addr !7196
  %982 = call i32 @__asm_int3(), !insn.addr !7197
  %983 = call i32 @__asm_int3(), !insn.addr !7198
  %984 = call i32 @__asm_int3(), !insn.addr !7199
  %985 = call i32 @__asm_int3(), !insn.addr !7200
  %986 = call i32 @__asm_int3(), !insn.addr !7201
  %987 = call i32 @__asm_int3(), !insn.addr !7202
  %988 = call i32 @__asm_int3(), !insn.addr !7203
  %989 = call i32 @__asm_int3(), !insn.addr !7204
  %990 = call i32 @__asm_int3(), !insn.addr !7205
  %991 = call i32 @__asm_int3(), !insn.addr !7206
  %992 = call i32 @__asm_int3(), !insn.addr !7207
  %993 = call i32 @__asm_int3(), !insn.addr !7208
  %994 = call i32 @__asm_int3(), !insn.addr !7209
  %995 = call i32 @__asm_int3(), !insn.addr !7210
  %996 = call i32 @__asm_int3(), !insn.addr !7211
  %997 = call i32 @__asm_int3(), !insn.addr !7212
  %998 = call i32 @__asm_int3(), !insn.addr !7213
  %999 = call i32 @__asm_int3(), !insn.addr !7214
  %1000 = call i32 @__asm_int3(), !insn.addr !7215
  %1001 = call i32 @__asm_int3(), !insn.addr !7216
  %1002 = call i32 @__asm_int3(), !insn.addr !7217
  %1003 = call i32 @__asm_int3(), !insn.addr !7218
  %1004 = call i32 @__asm_int3(), !insn.addr !7219
  %1005 = call i32 @__asm_int3(), !insn.addr !7220
  %1006 = call i32 @__asm_int3(), !insn.addr !7221
  %1007 = call i32 @__asm_int3(), !insn.addr !7222
  %1008 = call i32 @__asm_int3(), !insn.addr !7223
  %1009 = call i32 @__asm_int3(), !insn.addr !7224
  %1010 = call i32 @__asm_int3(), !insn.addr !7225
  %1011 = call i32 @__asm_int3(), !insn.addr !7226
  %1012 = call i32 @__asm_int3(), !insn.addr !7227
  %1013 = call i32 @__asm_int3(), !insn.addr !7228
  %1014 = call i32 @__asm_int3(), !insn.addr !7229
  %1015 = call i32 @__asm_int3(), !insn.addr !7230
  %1016 = call i32 @__asm_int3(), !insn.addr !7231
  %1017 = call i32 @__asm_int3(), !insn.addr !7232
  %1018 = call i32 @__asm_int3(), !insn.addr !7233
  %1019 = call i32 @__asm_int3(), !insn.addr !7234
  %1020 = call i32 @__asm_int3(), !insn.addr !7235
  %1021 = call i32 @__asm_int3(), !insn.addr !7236
  %1022 = call i32 @__asm_int3(), !insn.addr !7237
  %1023 = call i32 @__asm_int3(), !insn.addr !7238
  %1024 = call i32 @__asm_int3(), !insn.addr !7239
  %1025 = call i32 @__asm_int3(), !insn.addr !7240
  %1026 = call i32 @__asm_int3(), !insn.addr !7241
  %1027 = call i32 @__asm_int3(), !insn.addr !7242
  %1028 = call i32 @__asm_int3(), !insn.addr !7243
  %1029 = call i32 @__asm_int3(), !insn.addr !7244
  %1030 = call i32 @__asm_int3(), !insn.addr !7245
  %1031 = call i32 @__asm_int3(), !insn.addr !7246
  %1032 = call i32 @__asm_int3(), !insn.addr !7247
  %1033 = call i32 @__asm_int3(), !insn.addr !7248
  %1034 = call i32 @__asm_int3(), !insn.addr !7249
  %1035 = call i32 @__asm_int3(), !insn.addr !7250
  %1036 = call i32 @__asm_int3(), !insn.addr !7251
  %1037 = call i32 @__asm_int3(), !insn.addr !7252
  %1038 = call i32 @__asm_int3(), !insn.addr !7253
  %1039 = call i32 @__asm_int3(), !insn.addr !7254
  %1040 = call i32 @__asm_int3(), !insn.addr !7255
  %1041 = call i32 @__asm_int3(), !insn.addr !7256
  %1042 = call i32 @__asm_int3(), !insn.addr !7257
  %1043 = call i32 @__asm_int3(), !insn.addr !7258
  %1044 = call i32 @__asm_int3(), !insn.addr !7259
  %1045 = call i32 @__asm_int3(), !insn.addr !7260
  %1046 = call i32 @__asm_int3(), !insn.addr !7261
  %1047 = call i32 @__asm_int3(), !insn.addr !7262
  %1048 = call i32 @__asm_int3(), !insn.addr !7263
  %1049 = call i32 @__asm_int3(), !insn.addr !7264
  %1050 = call i32 @__asm_int3(), !insn.addr !7265
  %1051 = call i32 @__asm_int3(), !insn.addr !7266
  %1052 = call i32 @__asm_int3(), !insn.addr !7267
  %1053 = call i32 @__asm_int3(), !insn.addr !7268
  %1054 = call i32 @__asm_int3(), !insn.addr !7269
  %1055 = call i32 @__asm_int3(), !insn.addr !7270
  %1056 = call i32 @__asm_int3(), !insn.addr !7271
  %1057 = call i32 @__asm_int3(), !insn.addr !7272
  %1058 = call i32 @__asm_int3(), !insn.addr !7273
  %1059 = call i32 @__asm_int3(), !insn.addr !7274
  %1060 = call i32 @__asm_int3(), !insn.addr !7275
  %1061 = call i32 @__asm_int3(), !insn.addr !7276
  %1062 = call i32 @__asm_int3(), !insn.addr !7277
  %1063 = call i32 @__asm_int3(), !insn.addr !7278
  %1064 = call i32 @__asm_int3(), !insn.addr !7279
  %1065 = call i32 @__asm_int3(), !insn.addr !7280
  %1066 = call i32 @__asm_int3(), !insn.addr !7281
  %1067 = call i32 @__asm_int3(), !insn.addr !7282
  %1068 = call i32 @__asm_int3(), !insn.addr !7283
  %1069 = call i32 @__asm_int3(), !insn.addr !7284
  %1070 = call i32 @__asm_int3(), !insn.addr !7285
  %1071 = call i32 @__asm_int3(), !insn.addr !7286
  %1072 = call i32 @__asm_int3(), !insn.addr !7287
  %1073 = call i32 @__asm_int3(), !insn.addr !7288
  %1074 = call i32 @__asm_int3(), !insn.addr !7289
  %1075 = call i32 @__asm_int3(), !insn.addr !7290
  %1076 = call i32 @__asm_int3(), !insn.addr !7291
  %1077 = call i32 @__asm_int3(), !insn.addr !7292
  %1078 = call i32 @__asm_int3(), !insn.addr !7293
  %1079 = call i32 @__asm_int3(), !insn.addr !7294
  %1080 = call i32 @__asm_int3(), !insn.addr !7295
  %1081 = call i32 @__asm_int3(), !insn.addr !7296
  %1082 = call i32 @__asm_int3(), !insn.addr !7297
  %1083 = call i32 @__asm_int3(), !insn.addr !7298
  %1084 = call i32 @__asm_int3(), !insn.addr !7299
  %1085 = call i32 @__asm_int3(), !insn.addr !7300
  %1086 = call i32 @__asm_int3(), !insn.addr !7301
  %1087 = call i32 @__asm_int3(), !insn.addr !7302
  %1088 = call i32 @__asm_int3(), !insn.addr !7303
  %1089 = call i32 @__asm_int3(), !insn.addr !7304
  %1090 = call i32 @__asm_int3(), !insn.addr !7305
  %1091 = call i32 @__asm_int3(), !insn.addr !7306
  %1092 = call i32 @__asm_int3(), !insn.addr !7307
  %1093 = call i32 @__asm_int3(), !insn.addr !7308
  %1094 = call i32 @__asm_int3(), !insn.addr !7309
  %1095 = call i32 @__asm_int3(), !insn.addr !7310
  %1096 = call i32 @__asm_int3(), !insn.addr !7311
  %1097 = call i32 @__asm_int3(), !insn.addr !7312
  %1098 = call i32 @__asm_int3(), !insn.addr !7313
  %1099 = call i32 @__asm_int3(), !insn.addr !7314
  %1100 = call i32 @__asm_int3(), !insn.addr !7315
  %1101 = call i32 @__asm_int3(), !insn.addr !7316
  %1102 = call i32 @__asm_int3(), !insn.addr !7317
  %1103 = call i32 @__asm_int3(), !insn.addr !7318
  %1104 = call i32 @__asm_int3(), !insn.addr !7319
  %1105 = call i32 @__asm_int3(), !insn.addr !7320
  %1106 = call i32 @__asm_int3(), !insn.addr !7321
  %1107 = call i32 @__asm_int3(), !insn.addr !7322
  %1108 = call i32 @__asm_int3(), !insn.addr !7323
  %1109 = call i32 @__asm_int3(), !insn.addr !7324
  %1110 = call i32 @__asm_int3(), !insn.addr !7325
  %1111 = call i32 @__asm_int3(), !insn.addr !7326
  %1112 = call i32 @__asm_int3(), !insn.addr !7327
  %1113 = call i32 @__asm_int3(), !insn.addr !7328
  %1114 = call i32 @__asm_int3(), !insn.addr !7329
  %1115 = call i32 @__asm_int3(), !insn.addr !7330
  %1116 = call i32 @__asm_int3(), !insn.addr !7331
  %1117 = call i32 @__asm_int3(), !insn.addr !7332
  %1118 = call i32 @__asm_int3(), !insn.addr !7333
  %1119 = call i32 @__asm_int3(), !insn.addr !7334
  %1120 = call i32 @__asm_int3(), !insn.addr !7335
  %1121 = call i32 @__asm_int3(), !insn.addr !7336
  %1122 = call i32 @__asm_int3(), !insn.addr !7337
  %1123 = call i32 @__asm_int3(), !insn.addr !7338
  %1124 = call i32 @__asm_int3(), !insn.addr !7339
  %1125 = call i32 @__asm_int3(), !insn.addr !7340
  %1126 = call i32 @__asm_int3(), !insn.addr !7341
  %1127 = call i32 @__asm_int3(), !insn.addr !7342
  %1128 = call i32 @__asm_int3(), !insn.addr !7343
  %1129 = call i32 @__asm_int3(), !insn.addr !7344
  %1130 = call i32 @__asm_int3(), !insn.addr !7345
  %1131 = call i32 @__asm_int3(), !insn.addr !7346
  %1132 = call i32 @__asm_int3(), !insn.addr !7347
  %1133 = call i32 @__asm_int3(), !insn.addr !7348
  %1134 = call i32 @__asm_int3(), !insn.addr !7349
  %1135 = call i32 @__asm_int3(), !insn.addr !7350
  %1136 = call i32 @__asm_int3(), !insn.addr !7351
  %1137 = call i32 @__asm_int3(), !insn.addr !7352
  %1138 = call i32 @__asm_int3(), !insn.addr !7353
  %1139 = call i32 @__asm_int3(), !insn.addr !7354
  %1140 = call i32 @__asm_int3(), !insn.addr !7355
  %1141 = call i32 @__asm_int3(), !insn.addr !7356
  %1142 = call i32 @__asm_int3(), !insn.addr !7357
  %1143 = call i32 @__asm_int3(), !insn.addr !7358
  %1144 = call i32 @__asm_int3(), !insn.addr !7359
  %1145 = call i32 @__asm_int3(), !insn.addr !7360
  %1146 = call i32 @__asm_int3(), !insn.addr !7361
  %1147 = call i32 @__asm_int3(), !insn.addr !7362
  %1148 = call i32 @__asm_int3(), !insn.addr !7363
  %1149 = call i32 @__asm_int3(), !insn.addr !7364
  %1150 = call i32 @__asm_int3(), !insn.addr !7365
  %1151 = call i32 @__asm_int3(), !insn.addr !7366
  %1152 = call i32 @__asm_int3(), !insn.addr !7367
  %1153 = call i32 @__asm_int3(), !insn.addr !7368
  %1154 = call i32 @__asm_int3(), !insn.addr !7369
  %1155 = call i32 @__asm_int3(), !insn.addr !7370
  %1156 = call i32 @__asm_int3(), !insn.addr !7371
  %1157 = call i32 @__asm_int3(), !insn.addr !7372
  %1158 = call i32 @__asm_int3(), !insn.addr !7373
  %1159 = call i32 @__asm_int3(), !insn.addr !7374
  %1160 = call i32 @__asm_int3(), !insn.addr !7375
  %1161 = call i32 @__asm_int3(), !insn.addr !7376
  %1162 = call i32 @__asm_int3(), !insn.addr !7377
  %1163 = call i32 @__asm_int3(), !insn.addr !7378
  %1164 = call i32 @__asm_int3(), !insn.addr !7379
  %1165 = call i32 @__asm_int3(), !insn.addr !7380
  %1166 = call i32 @__asm_int3(), !insn.addr !7381
  %1167 = call i32 @__asm_int3(), !insn.addr !7382
  %1168 = call i32 @__asm_int3(), !insn.addr !7383
  %1169 = call i32 @__asm_int3(), !insn.addr !7384
  %1170 = call i32 @__asm_int3(), !insn.addr !7385
  %1171 = call i32 @__asm_int3(), !insn.addr !7386
  %1172 = call i32 @__asm_int3(), !insn.addr !7387
  %1173 = call i32 @__asm_int3(), !insn.addr !7388
  %1174 = call i32 @__asm_int3(), !insn.addr !7389
  %1175 = call i32 @__asm_int3(), !insn.addr !7390
  %1176 = call i32 @__asm_int3(), !insn.addr !7391
  %1177 = call i32 @__asm_int3(), !insn.addr !7392
  %1178 = call i32 @__asm_int3(), !insn.addr !7393
  %1179 = call i32 @__asm_int3(), !insn.addr !7394
  %1180 = call i32 @__asm_int3(), !insn.addr !7395
  %1181 = call i32 @__asm_int3(), !insn.addr !7396
  %1182 = call i32 @__asm_int3(), !insn.addr !7397
  %1183 = call i32 @__asm_int3(), !insn.addr !7398
  %1184 = call i32 @__asm_int3(), !insn.addr !7399
  %1185 = call i32 @__asm_int3(), !insn.addr !7400
  %1186 = call i32 @__asm_int3(), !insn.addr !7401
  %1187 = call i32 @__asm_int3(), !insn.addr !7402
  %1188 = call i32 @__asm_int3(), !insn.addr !7403
  %1189 = call i32 @__asm_int3(), !insn.addr !7404
  %1190 = call i32 @__asm_int3(), !insn.addr !7405
  %1191 = call i32 @__asm_int3(), !insn.addr !7406
  %1192 = call i32 @__asm_int3(), !insn.addr !7407
  %1193 = call i32 @__asm_int3(), !insn.addr !7408
  %1194 = call i32 @__asm_int3(), !insn.addr !7409
  %1195 = call i32 @__asm_int3(), !insn.addr !7410
  %1196 = call i32 @__asm_int3(), !insn.addr !7411
  %1197 = call i32 @__asm_int3(), !insn.addr !7412
  %1198 = call i32 @__asm_int3(), !insn.addr !7413
  %1199 = call i32 @__asm_int3(), !insn.addr !7414
  %1200 = call i32 @__asm_int3(), !insn.addr !7415
  %1201 = call i32 @__asm_int3(), !insn.addr !7416
  %1202 = call i32 @__asm_int3(), !insn.addr !7417
  %1203 = call i32 @__asm_int3(), !insn.addr !7418
  %1204 = call i32 @__asm_int3(), !insn.addr !7419
  %1205 = call i32 @__asm_int3(), !insn.addr !7420
  %1206 = call i32 @__asm_int3(), !insn.addr !7421
  %1207 = call i32 @__asm_int3(), !insn.addr !7422
  %1208 = call i32 @__asm_int3(), !insn.addr !7423
  %1209 = call i32 @__asm_int3(), !insn.addr !7424
  %1210 = call i32 @__asm_int3(), !insn.addr !7425
  %1211 = call i32 @__asm_int3(), !insn.addr !7426
  %1212 = call i32 @__asm_int3(), !insn.addr !7427
  %1213 = call i32 @__asm_int3(), !insn.addr !7428
  %1214 = call i32 @__asm_int3(), !insn.addr !7429
  %1215 = call i32 @__asm_int3(), !insn.addr !7430
  %1216 = call i32 @__asm_int3(), !insn.addr !7431
  %1217 = call i32 @__asm_int3(), !insn.addr !7432
  %1218 = call i32 @__asm_int3(), !insn.addr !7433
  %1219 = call i32 @__asm_int3(), !insn.addr !7434
  %1220 = call i32 @__asm_int3(), !insn.addr !7435
  %1221 = call i32 @__asm_int3(), !insn.addr !7436
  %1222 = call i32 @__asm_int3(), !insn.addr !7437
  %1223 = call i32 @__asm_int3(), !insn.addr !7438
  %1224 = call i32 @__asm_int3(), !insn.addr !7439
  %1225 = call i32 @__asm_int3(), !insn.addr !7440
  %1226 = call i32 @__asm_int3(), !insn.addr !7441
  %1227 = call i32 @__asm_int3(), !insn.addr !7442
  %1228 = call i32 @__asm_int3(), !insn.addr !7443
  %1229 = call i32 @__asm_int3(), !insn.addr !7444
  %1230 = call i32 @__asm_int3(), !insn.addr !7445
  %1231 = call i32 @__asm_int3(), !insn.addr !7446
  %1232 = call i32 @__asm_int3(), !insn.addr !7447
  %1233 = call i32 @__asm_int3(), !insn.addr !7448
  %1234 = call i32 @__asm_int3(), !insn.addr !7449
  %1235 = call i32 @__asm_int3(), !insn.addr !7450
  %1236 = call i32 @__asm_int3(), !insn.addr !7451
  %1237 = call i32 @__asm_int3(), !insn.addr !7452
  %1238 = call i32 @__asm_int3(), !insn.addr !7453
  %1239 = call i32 @__asm_int3(), !insn.addr !7454
  %1240 = call i32 @__asm_int3(), !insn.addr !7455
  %1241 = call i32 @__asm_int3(), !insn.addr !7456
  %1242 = call i32 @__asm_int3(), !insn.addr !7457
  %1243 = call i32 @__asm_int3(), !insn.addr !7458
  %1244 = call i32 @__asm_int3(), !insn.addr !7459
  %1245 = call i32 @__asm_int3(), !insn.addr !7460
  %1246 = call i32 @__asm_int3(), !insn.addr !7461
  %1247 = call i32 @__asm_int3(), !insn.addr !7462
  %1248 = call i32 @__asm_int3(), !insn.addr !7463
  %1249 = call i32 @__asm_int3(), !insn.addr !7464
  %1250 = call i32 @__asm_int3(), !insn.addr !7465
  %1251 = call i32 @__asm_int3(), !insn.addr !7466
  %1252 = call i32 @__asm_int3(), !insn.addr !7467
  %1253 = call i32 @__asm_int3(), !insn.addr !7468
  %1254 = call i32 @__asm_int3(), !insn.addr !7469
  %1255 = call i32 @__asm_int3(), !insn.addr !7470
  %1256 = call i32 @__asm_int3(), !insn.addr !7471
  %1257 = call i32 @__asm_int3(), !insn.addr !7472
  %1258 = call i32 @__asm_int3(), !insn.addr !7473
  %1259 = call i32 @__asm_int3(), !insn.addr !7474
  %1260 = call i32 @__asm_int3(), !insn.addr !7475
  %1261 = call i32 @__asm_int3(), !insn.addr !7476
  %1262 = call i32 @__asm_int3(), !insn.addr !7477
  %1263 = call i32 @__asm_int3(), !insn.addr !7478
  %1264 = call i32 @__asm_int3(), !insn.addr !7479
  %1265 = call i32 @__asm_int3(), !insn.addr !7480
  %1266 = call i32 @__asm_int3(), !insn.addr !7481
  %1267 = call i32 @__asm_int3(), !insn.addr !7482
  %1268 = call i32 @__asm_int3(), !insn.addr !7483
  %1269 = call i32 @__asm_int3(), !insn.addr !7484
  %1270 = call i32 @__asm_int3(), !insn.addr !7485
  %1271 = call i32 @__asm_int3(), !insn.addr !7486
  %1272 = call i32 @__asm_int3(), !insn.addr !7487
  %1273 = call i32 @__asm_int3(), !insn.addr !7488
  %1274 = call i32 @__asm_int3(), !insn.addr !7489
  %1275 = call i32 @__asm_int3(), !insn.addr !7490
  %1276 = call i32 @__asm_int3(), !insn.addr !7491
  %1277 = call i32 @__asm_int3(), !insn.addr !7492
  %1278 = call i32 @__asm_int3(), !insn.addr !7493
  %1279 = call i32 @__asm_int3(), !insn.addr !7494
  %1280 = call i32 @__asm_int3(), !insn.addr !7495
  %1281 = call i32 @__asm_int3(), !insn.addr !7496
  %1282 = call i32 @__asm_int3(), !insn.addr !7497
  %1283 = call i32 @__asm_int3(), !insn.addr !7498
  %1284 = call i32 @__asm_int3(), !insn.addr !7499
  %1285 = call i32 @__asm_int3(), !insn.addr !7500
  %1286 = call i32 @__asm_int3(), !insn.addr !7501
  %1287 = call i32 @__asm_int3(), !insn.addr !7502
  %1288 = call i32 @__asm_int3(), !insn.addr !7503
  %1289 = call i32 @__asm_int3(), !insn.addr !7504
  %1290 = call i32 @__asm_int3(), !insn.addr !7505
  %1291 = call i32 @__asm_int3(), !insn.addr !7506
  %1292 = call i32 @__asm_int3(), !insn.addr !7507
  %1293 = call i32 @__asm_int3(), !insn.addr !7508
  %1294 = call i32 @__asm_int3(), !insn.addr !7509
  %1295 = call i32 @__asm_int3(), !insn.addr !7510
  %1296 = call i32 @__asm_int3(), !insn.addr !7511
  %1297 = call i32 @__asm_int3(), !insn.addr !7512
  %1298 = call i32 @__asm_int3(), !insn.addr !7513
  %1299 = call i32 @__asm_int3(), !insn.addr !7514
  %1300 = call i32 @__asm_int3(), !insn.addr !7515
  %1301 = call i32 @__asm_int3(), !insn.addr !7516
  %1302 = call i32 @__asm_int3(), !insn.addr !7517
  %1303 = call i32 @__asm_int3(), !insn.addr !7518
  %1304 = call i32 @__asm_int3(), !insn.addr !7519
  %1305 = call i32 @__asm_int3(), !insn.addr !7520
  %1306 = call i32 @__asm_int3(), !insn.addr !7521
  %1307 = call i32 @__asm_int3(), !insn.addr !7522
  %1308 = call i32 @__asm_int3(), !insn.addr !7523
  %1309 = call i32 @__asm_int3(), !insn.addr !7524
  %1310 = call i32 @__asm_int3(), !insn.addr !7525
  %1311 = call i32 @__asm_int3(), !insn.addr !7526
  %1312 = call i32 @__asm_int3(), !insn.addr !7527
  %1313 = call i32 @__asm_int3(), !insn.addr !7528
  %1314 = call i32 @__asm_int3(), !insn.addr !7529
  %1315 = call i32 @__asm_int3(), !insn.addr !7530
  %1316 = call i32 @__asm_int3(), !insn.addr !7531
  %1317 = call i32 @__asm_int3(), !insn.addr !7532
  %1318 = call i32 @__asm_int3(), !insn.addr !7533
  %1319 = call i32 @__asm_int3(), !insn.addr !7534
  %1320 = call i32 @__asm_int3(), !insn.addr !7535
  %1321 = call i32 @__asm_int3(), !insn.addr !7536
  %1322 = call i32 @__asm_int3(), !insn.addr !7537
  %1323 = call i32 @__asm_int3(), !insn.addr !7538
  %1324 = call i32 @__asm_int3(), !insn.addr !7539
  %1325 = call i32 @__asm_int3(), !insn.addr !7540
  %1326 = call i32 @__asm_int3(), !insn.addr !7541
  %1327 = call i32 @__asm_int3(), !insn.addr !7542
  %1328 = call i32 @__asm_int3(), !insn.addr !7543
  %1329 = call i32 @__asm_int3(), !insn.addr !7544
  %1330 = call i32 @__asm_int3(), !insn.addr !7545
  %1331 = call i32 @__asm_int3(), !insn.addr !7546
  %1332 = call i32 @__asm_int3(), !insn.addr !7547
  %1333 = call i32 @__asm_int3(), !insn.addr !7548
  %1334 = call i32 @__asm_int3(), !insn.addr !7549
  %1335 = call i32 @__asm_int3(), !insn.addr !7550
  %1336 = call i32 @__asm_int3(), !insn.addr !7551
  %1337 = call i32 @__asm_int3(), !insn.addr !7552
  %1338 = call i32 @__asm_int3(), !insn.addr !7553
  %1339 = call i32 @__asm_int3(), !insn.addr !7554
  %1340 = call i32 @__asm_int3(), !insn.addr !7555
  %1341 = call i32 @__asm_int3(), !insn.addr !7556
  %1342 = call i32 @__asm_int3(), !insn.addr !7557
  %1343 = call i32 @__asm_int3(), !insn.addr !7558
  %1344 = call i32 @__asm_int3(), !insn.addr !7559
  %1345 = call i32 @__asm_int3(), !insn.addr !7560
  %1346 = call i32 @__asm_int3(), !insn.addr !7561
  %1347 = call i32 @__asm_int3(), !insn.addr !7562
  %1348 = call i32 @__asm_int3(), !insn.addr !7563
  %1349 = call i32 @__asm_int3(), !insn.addr !7564
  %1350 = call i32 @__asm_int3(), !insn.addr !7565
  %1351 = call i32 @__asm_int3(), !insn.addr !7566
  %1352 = call i32 @__asm_int3(), !insn.addr !7567
  %1353 = call i32 @__asm_int3(), !insn.addr !7568
  %1354 = call i32 @__asm_int3(), !insn.addr !7569
  %1355 = call i32 @__asm_int3(), !insn.addr !7570
  %1356 = call i32 @__asm_int3(), !insn.addr !7571
  %1357 = call i32 @__asm_int3(), !insn.addr !7572
  %1358 = call i32 @__asm_int3(), !insn.addr !7573
  %1359 = call i32 @__asm_int3(), !insn.addr !7574
  %1360 = call i32 @__asm_int3(), !insn.addr !7575
  %1361 = call i32 @__asm_int3(), !insn.addr !7576
  %1362 = call i32 @__asm_int3(), !insn.addr !7577
  %1363 = call i32 @__asm_int3(), !insn.addr !7578
  %1364 = call i32 @__asm_int3(), !insn.addr !7579
  %1365 = call i32 @__asm_int3(), !insn.addr !7580
  %1366 = call i32 @__asm_int3(), !insn.addr !7581
  %1367 = call i32 @__asm_int3(), !insn.addr !7582
  %1368 = call i32 @__asm_int3(), !insn.addr !7583
  %1369 = call i32 @__asm_int3(), !insn.addr !7584
  %1370 = call i32 @__asm_int3(), !insn.addr !7585
  %1371 = call i32 @__asm_int3(), !insn.addr !7586
  %1372 = call i32 @__asm_int3(), !insn.addr !7587
  %1373 = call i32 @__asm_int3(), !insn.addr !7588
  %1374 = call i32 @__asm_int3(), !insn.addr !7589
  %1375 = call i32 @__asm_int3(), !insn.addr !7590
  %1376 = call i32 @__asm_int3(), !insn.addr !7591
  %1377 = call i32 @__asm_int3(), !insn.addr !7592
  %1378 = call i32 @__asm_int3(), !insn.addr !7593
  %1379 = call i32 @__asm_int3(), !insn.addr !7594
  %1380 = call i32 @__asm_int3(), !insn.addr !7595
  %1381 = call i32 @__asm_int3(), !insn.addr !7596
  %1382 = call i32 @__asm_int3(), !insn.addr !7597
  %1383 = call i32 @__asm_int3(), !insn.addr !7598
  %1384 = call i32 @__asm_int3(), !insn.addr !7599
  %1385 = call i32 @__asm_int3(), !insn.addr !7600
  %1386 = call i32 @__asm_int3(), !insn.addr !7601
  %1387 = call i32 @__asm_int3(), !insn.addr !7602
  %1388 = call i32 @__asm_int3(), !insn.addr !7603
  %1389 = call i32 @__asm_int3(), !insn.addr !7604
  %1390 = call i32 @__asm_int3(), !insn.addr !7605
  %1391 = call i32 @__asm_int3(), !insn.addr !7606
  %1392 = call i32 @__asm_int3(), !insn.addr !7607
  %1393 = call i32 @__asm_int3(), !insn.addr !7608
  %1394 = call i32 @__asm_int3(), !insn.addr !7609
  %1395 = call i32 @__asm_int3(), !insn.addr !7610
  %1396 = call i32 @__asm_int3(), !insn.addr !7611
  %1397 = call i32 @__asm_int3(), !insn.addr !7612
  %1398 = call i32 @__asm_int3(), !insn.addr !7613
  %1399 = call i32 @__asm_int3(), !insn.addr !7614
  %1400 = call i32 @__asm_int3(), !insn.addr !7615
  %1401 = call i32 @__asm_int3(), !insn.addr !7616
  %1402 = call i32 @__asm_int3(), !insn.addr !7617
  %1403 = call i32 @__asm_int3(), !insn.addr !7618
  %1404 = call i32 @__asm_int3(), !insn.addr !7619
  %1405 = call i32 @__asm_int3(), !insn.addr !7620
  %1406 = call i32 @__asm_int3(), !insn.addr !7621
  %1407 = call i32 @__asm_int3(), !insn.addr !7622
  %1408 = call i32 @__asm_int3(), !insn.addr !7623
  %1409 = call i32 @__asm_int3(), !insn.addr !7624
  %1410 = call i32 @__asm_int3(), !insn.addr !7625
  %1411 = call i32 @__asm_int3(), !insn.addr !7626
  %1412 = call i32 @__asm_int3(), !insn.addr !7627
  %1413 = call i32 @__asm_int3(), !insn.addr !7628
  %1414 = call i32 @__asm_int3(), !insn.addr !7629
  %1415 = call i32 @__asm_int3(), !insn.addr !7630
  %1416 = call i32 @__asm_int3(), !insn.addr !7631
  %1417 = call i32 @__asm_int3(), !insn.addr !7632
  %1418 = call i32 @__asm_int3(), !insn.addr !7633
  %1419 = call i32 @__asm_int3(), !insn.addr !7634
  %1420 = call i32 @__asm_int3(), !insn.addr !7635
  %1421 = call i32 @__asm_int3(), !insn.addr !7636
  %1422 = call i32 @__asm_int3(), !insn.addr !7637
  %1423 = call i32 @__asm_int3(), !insn.addr !7638
  %1424 = call i32 @__asm_int3(), !insn.addr !7639
  %1425 = call i32 @__asm_int3(), !insn.addr !7640
  %1426 = call i32 @__asm_int3(), !insn.addr !7641
  %1427 = call i32 @__asm_int3(), !insn.addr !7642
  %1428 = call i32 @__asm_int3(), !insn.addr !7643
  %1429 = call i32 @__asm_int3(), !insn.addr !7644
  %1430 = call i32 @__asm_int3(), !insn.addr !7645
  %1431 = call i32 @__asm_int3(), !insn.addr !7646
  %1432 = call i32 @__asm_int3(), !insn.addr !7647
  %1433 = call i32 @__asm_int3(), !insn.addr !7648
  %1434 = call i32 @__asm_int3(), !insn.addr !7649
  %1435 = call i32 @__asm_int3(), !insn.addr !7650
  %1436 = call i32 @__asm_int3(), !insn.addr !7651
  %1437 = call i32 @__asm_int3(), !insn.addr !7652
  %1438 = call i32 @__asm_int3(), !insn.addr !7653
  %1439 = call i32 @__asm_int3(), !insn.addr !7654
  %1440 = call i32 @__asm_int3(), !insn.addr !7655
  %1441 = call i32 @__asm_int3(), !insn.addr !7656
  %1442 = call i32 @__asm_int3(), !insn.addr !7657
  %1443 = call i32 @__asm_int3(), !insn.addr !7658
  %1444 = call i32 @__asm_int3(), !insn.addr !7659
  %1445 = call i32 @__asm_int3(), !insn.addr !7660
  %1446 = call i32 @__asm_int3(), !insn.addr !7661
  %1447 = call i32 @__asm_int3(), !insn.addr !7662
  %1448 = call i32 @__asm_int3(), !insn.addr !7663
  %1449 = call i32 @__asm_int3(), !insn.addr !7664
  %1450 = call i32 @__asm_int3(), !insn.addr !7665
  %1451 = call i32 @__asm_int3(), !insn.addr !7666
  %1452 = call i32 @__asm_int3(), !insn.addr !7667
  %1453 = call i32 @__asm_int3(), !insn.addr !7668
  %1454 = call i32 @__asm_int3(), !insn.addr !7669
  %1455 = call i32 @__asm_int3(), !insn.addr !7670
  %1456 = call i32 @__asm_int3(), !insn.addr !7671
  %1457 = call i32 @__asm_int3(), !insn.addr !7672
  %1458 = call i32 @__asm_int3(), !insn.addr !7673
  %1459 = call i32 @__asm_int3(), !insn.addr !7674
  %1460 = call i32 @__asm_int3(), !insn.addr !7675
  %1461 = call i32 @__asm_int3(), !insn.addr !7676
  %1462 = call i32 @__asm_int3(), !insn.addr !7677
  %1463 = call i32 @__asm_int3(), !insn.addr !7678
  %1464 = call i32 @__asm_int3(), !insn.addr !7679
  %1465 = call i32 @__asm_int3(), !insn.addr !7680
  %1466 = call i32 @__asm_int3(), !insn.addr !7681
  %1467 = call i32 @__asm_int3(), !insn.addr !7682
  %1468 = call i32 @__asm_int3(), !insn.addr !7683
  %1469 = call i32 @__asm_int3(), !insn.addr !7684
  %1470 = call i32 @__asm_int3(), !insn.addr !7685
  %1471 = call i32 @__asm_int3(), !insn.addr !7686
  %1472 = call i32 @__asm_int3(), !insn.addr !7687
  %1473 = call i32 @__asm_int3(), !insn.addr !7688
  %1474 = call i32 @__asm_int3(), !insn.addr !7689
  %1475 = call i32 @__asm_int3(), !insn.addr !7690
  %1476 = call i32 @__asm_int3(), !insn.addr !7691
  %1477 = call i32 @__asm_int3(), !insn.addr !7692
  %1478 = call i32 @__asm_int3(), !insn.addr !7693
  %1479 = call i32 @__asm_int3(), !insn.addr !7694
  %1480 = call i32 @__asm_int3(), !insn.addr !7695
  %1481 = call i32 @__asm_int3(), !insn.addr !7696
  %1482 = call i32 @__asm_int3(), !insn.addr !7697
  %1483 = call i32 @__asm_int3(), !insn.addr !7698
  %1484 = call i32 @__asm_int3(), !insn.addr !7699
  %1485 = call i32 @__asm_int3(), !insn.addr !7700
  %1486 = call i32 @__asm_int3(), !insn.addr !7701
  %1487 = call i32 @__asm_int3(), !insn.addr !7702
  %1488 = call i32 @__asm_int3(), !insn.addr !7703
  %1489 = call i32 @__asm_int3(), !insn.addr !7704
  %1490 = call i32 @__asm_int3(), !insn.addr !7705
  %1491 = call i32 @__asm_int3(), !insn.addr !7706
  %1492 = call i32 @__asm_int3(), !insn.addr !7707
  %1493 = call i32 @__asm_int3(), !insn.addr !7708
  %1494 = call i32 @__asm_int3(), !insn.addr !7709
  %1495 = call i32 @__asm_int3(), !insn.addr !7710
  %1496 = call i32 @__asm_int3(), !insn.addr !7711
  %1497 = call i32 @__asm_int3(), !insn.addr !7712
  %1498 = call i32 @__asm_int3(), !insn.addr !7713
  %1499 = call i32 @__asm_int3(), !insn.addr !7714
  %1500 = call i32 @__asm_int3(), !insn.addr !7715
  %1501 = call i32 @__asm_int3(), !insn.addr !7716
  %1502 = call i32 @__asm_int3(), !insn.addr !7717
  %1503 = call i32 @__asm_int3(), !insn.addr !7718
  %1504 = call i32 @__asm_int3(), !insn.addr !7719
  %1505 = call i32 @__asm_int3(), !insn.addr !7720
  %1506 = call i32 @__asm_int3(), !insn.addr !7721
  %1507 = call i32 @__asm_int3(), !insn.addr !7722
  %1508 = call i32 @__asm_int3(), !insn.addr !7723
  %1509 = call i32 @__asm_int3(), !insn.addr !7724
  %1510 = call i32 @__asm_int3(), !insn.addr !7725
  %1511 = call i32 @__asm_int3(), !insn.addr !7726
  %1512 = call i32 @__asm_int3(), !insn.addr !7727
  %1513 = call i32 @__asm_int3(), !insn.addr !7728
  %1514 = call i32 @__asm_int3(), !insn.addr !7729
  %1515 = call i32 @__asm_int3(), !insn.addr !7730
  %1516 = call i32 @__asm_int3(), !insn.addr !7731
  %1517 = call i32 @__asm_int3(), !insn.addr !7732
  %1518 = call i32 @__asm_int3(), !insn.addr !7733
  %1519 = call i32 @__asm_int3(), !insn.addr !7734
  %1520 = call i32 @__asm_int3(), !insn.addr !7735
  %1521 = call i32 @__asm_int3(), !insn.addr !7736
  %1522 = call i32 @__asm_int3(), !insn.addr !7737
  %1523 = call i32 @__asm_int3(), !insn.addr !7738
  %1524 = call i32 @__asm_int3(), !insn.addr !7739
  %1525 = call i32 @__asm_int3(), !insn.addr !7740
  %1526 = call i32 @__asm_int3(), !insn.addr !7741
  %1527 = call i32 @__asm_int3(), !insn.addr !7742
  %1528 = call i32 @__asm_int3(), !insn.addr !7743
  %1529 = call i32 @__asm_int3(), !insn.addr !7744
  %1530 = call i32 @__asm_int3(), !insn.addr !7745
  %1531 = call i32 @__asm_int3(), !insn.addr !7746
  %1532 = call i32 @__asm_int3(), !insn.addr !7747
  %1533 = call i32 @__asm_int3(), !insn.addr !7748
  %1534 = call i32 @__asm_int3(), !insn.addr !7749
  %1535 = call i32 @__asm_int3(), !insn.addr !7750
  %1536 = call i32 @__asm_int3(), !insn.addr !7751
  %1537 = call i32 @__asm_int3(), !insn.addr !7752
  %1538 = call i32 @__asm_int3(), !insn.addr !7753
  %1539 = call i32 @__asm_int3(), !insn.addr !7754
  %1540 = call i32 @__asm_int3(), !insn.addr !7755
  %1541 = call i32 @__asm_int3(), !insn.addr !7756
  %1542 = call i32 @__asm_int3(), !insn.addr !7757
  %1543 = call i32 @__asm_int3(), !insn.addr !7758
  %1544 = call i32 @__asm_int3(), !insn.addr !7759
  %1545 = call i32 @__asm_int3(), !insn.addr !7760
  %1546 = call i32 @__asm_int3(), !insn.addr !7761
  %1547 = call i32 @__asm_int3(), !insn.addr !7762
  %1548 = call i32 @__asm_int3(), !insn.addr !7763
  %1549 = call i32 @__asm_int3(), !insn.addr !7764
  %1550 = call i32 @__asm_int3(), !insn.addr !7765
  %1551 = call i32 @__asm_int3(), !insn.addr !7766
  %1552 = call i32 @__asm_int3(), !insn.addr !7767
  %1553 = call i32 @__asm_int3(), !insn.addr !7768
  %1554 = call i32 @__asm_int3(), !insn.addr !7769
  %1555 = call i32 @__asm_int3(), !insn.addr !7770
  %1556 = call i32 @__asm_int3(), !insn.addr !7771
  %1557 = call i32 @__asm_int3(), !insn.addr !7772
  %1558 = call i32 @__asm_int3(), !insn.addr !7773
  %1559 = call i32 @__asm_int3(), !insn.addr !7774
  %1560 = call i32 @__asm_int3(), !insn.addr !7775
  %1561 = call i32 @__asm_int3(), !insn.addr !7776
  %1562 = call i32 @__asm_int3(), !insn.addr !7777
  %1563 = call i32 @__asm_int3(), !insn.addr !7778
  %1564 = call i32 @__asm_int3(), !insn.addr !7779
  %1565 = call i32 @__asm_int3(), !insn.addr !7780
  %1566 = call i32 @__asm_int3(), !insn.addr !7781
  %1567 = call i32 @__asm_int3(), !insn.addr !7782
  %1568 = call i32 @__asm_int3(), !insn.addr !7783
  %1569 = call i32 @__asm_int3(), !insn.addr !7784
  %1570 = call i32 @__asm_int3(), !insn.addr !7785
  %1571 = call i32 @__asm_int3(), !insn.addr !7786
  %1572 = call i32 @__asm_int3(), !insn.addr !7787
  %1573 = call i32 @__asm_int3(), !insn.addr !7788
  %1574 = call i32 @__asm_int3(), !insn.addr !7789
  %1575 = call i32 @__asm_int3(), !insn.addr !7790
  %1576 = call i32 @__asm_int3(), !insn.addr !7791
  %1577 = call i32 @__asm_int3(), !insn.addr !7792
  %1578 = call i32 @__asm_int3(), !insn.addr !7793
  %1579 = call i32 @__asm_int3(), !insn.addr !7794
  %1580 = call i32 @__asm_int3(), !insn.addr !7795
  %1581 = call i32 @__asm_int3(), !insn.addr !7796
  %1582 = call i32 @__asm_int3(), !insn.addr !7797
  %1583 = call i32 @__asm_int3(), !insn.addr !7798
  %1584 = call i32 @__asm_int3(), !insn.addr !7799
  %1585 = call i32 @__asm_int3(), !insn.addr !7800
  %1586 = call i32 @__asm_int3(), !insn.addr !7801
  %1587 = call i32 @__asm_int3(), !insn.addr !7802
  %1588 = call i32 @__asm_int3(), !insn.addr !7803
  %1589 = call i32 @__asm_int3(), !insn.addr !7804
  %1590 = call i32 @__asm_int3(), !insn.addr !7805
  %1591 = call i32 @__asm_int3(), !insn.addr !7806
  %1592 = call i32 @__asm_int3(), !insn.addr !7807
  %1593 = call i32 @__asm_int3(), !insn.addr !7808
  %1594 = call i32 @__asm_int3(), !insn.addr !7809
  %1595 = call i32 @__asm_int3(), !insn.addr !7810
  %1596 = call i32 @__asm_int3(), !insn.addr !7811
  %1597 = call i32 @__asm_int3(), !insn.addr !7812
  %1598 = call i32 @__asm_int3(), !insn.addr !7813
  %1599 = call i32 @__asm_int3(), !insn.addr !7814
  %1600 = call i32 @__asm_int3(), !insn.addr !7815
  %1601 = call i32 @__asm_int3(), !insn.addr !7816
  %1602 = call i32 @__asm_int3(), !insn.addr !7817
  %1603 = call i32 @__asm_int3(), !insn.addr !7818
  %1604 = call i32 @__asm_int3(), !insn.addr !7819
  %1605 = call i32 @__asm_int3(), !insn.addr !7820
  %1606 = call i32 @__asm_int3(), !insn.addr !7821
  %1607 = call i32 @__asm_int3(), !insn.addr !7822
  %1608 = call i32 @__asm_int3(), !insn.addr !7823
  %1609 = call i32 @__asm_int3(), !insn.addr !7824
  %1610 = call i32 @__asm_int3(), !insn.addr !7825
  %1611 = call i32 @__asm_int3(), !insn.addr !7826
  %1612 = call i32 @__asm_int3(), !insn.addr !7827
  %1613 = call i32 @__asm_int3(), !insn.addr !7828
  %1614 = call i32 @__asm_int3(), !insn.addr !7829
  %1615 = call i32 @__asm_int3(), !insn.addr !7830
  %1616 = call i32 @__asm_int3(), !insn.addr !7831
  %1617 = call i32 @__asm_int3(), !insn.addr !7832
  %1618 = call i32 @__asm_int3(), !insn.addr !7833
  %1619 = call i32 @__asm_int3(), !insn.addr !7834
  %1620 = call i32 @__asm_int3(), !insn.addr !7835
  %1621 = call i32 @__asm_int3(), !insn.addr !7836
  %1622 = call i32 @__asm_int3(), !insn.addr !7837
  %1623 = call i32 @__asm_int3(), !insn.addr !7838
  %1624 = call i32 @__asm_int3(), !insn.addr !7839
  %1625 = call i32 @__asm_int3(), !insn.addr !7840
  %1626 = call i32 @__asm_int3(), !insn.addr !7841
  %1627 = call i32 @__asm_int3(), !insn.addr !7842
  %1628 = call i32 @__asm_int3(), !insn.addr !7843
  %1629 = call i32 @__asm_int3(), !insn.addr !7844
  %1630 = call i32 @__asm_int3(), !insn.addr !7845
  %1631 = call i32 @__asm_int3(), !insn.addr !7846
  %1632 = call i32 @__asm_int3(), !insn.addr !7847
  %1633 = call i32 @__asm_int3(), !insn.addr !7848
  %1634 = call i32 @__asm_int3(), !insn.addr !7849
  %1635 = call i32 @__asm_int3(), !insn.addr !7850
  %1636 = call i32 @__asm_int3(), !insn.addr !7851
  %1637 = call i32 @__asm_int3(), !insn.addr !7852
  %1638 = call i32 @__asm_int3(), !insn.addr !7853
  %1639 = call i32 @__asm_int3(), !insn.addr !7854
  %1640 = call i32 @__asm_int3(), !insn.addr !7855
  %1641 = call i32 @__asm_int3(), !insn.addr !7856
  %1642 = call i32 @__asm_int3(), !insn.addr !7857
  %1643 = call i32 @__asm_int3(), !insn.addr !7858
  %1644 = call i32 @__asm_int3(), !insn.addr !7859
  %1645 = call i32 @__asm_int3(), !insn.addr !7860
  %1646 = call i32 @__asm_int3(), !insn.addr !7861
  %1647 = call i32 @__asm_int3(), !insn.addr !7862
  %1648 = call i32 @__asm_int3(), !insn.addr !7863
  %1649 = call i32 @__asm_int3(), !insn.addr !7864
  %1650 = call i32 @__asm_int3(), !insn.addr !7865
  %1651 = call i32 @__asm_int3(), !insn.addr !7866
  %1652 = call i32 @__asm_int3(), !insn.addr !7867
  %1653 = call i32 @__asm_int3(), !insn.addr !7868
  %1654 = call i32 @__asm_int3(), !insn.addr !7869
  %1655 = call i32 @__asm_int3(), !insn.addr !7870
  %1656 = call i32 @__asm_int3(), !insn.addr !7871
  %1657 = call i32 @__asm_int3(), !insn.addr !7872
  %1658 = call i32 @__asm_int3(), !insn.addr !7873
  %1659 = call i32 @__asm_int3(), !insn.addr !7874
  %1660 = call i32 @__asm_int3(), !insn.addr !7875
  %1661 = call i32 @__asm_int3(), !insn.addr !7876
  %1662 = call i32 @__asm_int3(), !insn.addr !7877
  %1663 = call i32 @__asm_int3(), !insn.addr !7878
  %1664 = call i32 @__asm_int3(), !insn.addr !7879
  %1665 = call i32 @__asm_int3(), !insn.addr !7880
  %1666 = call i32 @__asm_int3(), !insn.addr !7881
  %1667 = call i32 @__asm_int3(), !insn.addr !7882
  %1668 = call i32 @__asm_int3(), !insn.addr !7883
  %1669 = call i32 @__asm_int3(), !insn.addr !7884
  %1670 = call i32 @__asm_int3(), !insn.addr !7885
  %1671 = call i32 @__asm_int3(), !insn.addr !7886
  %1672 = call i32 @__asm_int3(), !insn.addr !7887
  %1673 = call i32 @__asm_int3(), !insn.addr !7888
  %1674 = call i32 @__asm_int3(), !insn.addr !7889
  %1675 = call i32 @__asm_int3(), !insn.addr !7890
  %1676 = call i32 @__asm_int3(), !insn.addr !7891
  %1677 = call i32 @__asm_int3(), !insn.addr !7892
  %1678 = call i32 @__asm_int3(), !insn.addr !7893
  %1679 = call i32 @__asm_int3(), !insn.addr !7894
  %1680 = call i32 @__asm_int3(), !insn.addr !7895
  %1681 = call i32 @__asm_int3(), !insn.addr !7896
  %1682 = call i32 @__asm_int3(), !insn.addr !7897
  %1683 = call i32 @__asm_int3(), !insn.addr !7898
  %1684 = call i32 @__asm_int3(), !insn.addr !7899
  %1685 = call i32 @__asm_int3(), !insn.addr !7900
  %1686 = call i32 @__asm_int3(), !insn.addr !7901
  %1687 = call i32 @__asm_int3(), !insn.addr !7902
  %1688 = call i32 @__asm_int3(), !insn.addr !7903
  %1689 = call i32 @__asm_int3(), !insn.addr !7904
  %1690 = call i32 @__asm_int3(), !insn.addr !7905
  %1691 = call i32 @__asm_int3(), !insn.addr !7906
  %1692 = call i32 @__asm_int3(), !insn.addr !7907
  %1693 = call i32 @__asm_int3(), !insn.addr !7908
  %1694 = call i32 @__asm_int3(), !insn.addr !7909
  %1695 = call i32 @__asm_int3(), !insn.addr !7910
  %1696 = call i32 @__asm_int3(), !insn.addr !7911
  %1697 = call i32 @__asm_int3(), !insn.addr !7912
  %1698 = call i32 @__asm_int3(), !insn.addr !7913
  %1699 = call i32 @__asm_int3(), !insn.addr !7914
  %1700 = call i32 @__asm_int3(), !insn.addr !7915
  %1701 = call i32 @__asm_int3(), !insn.addr !7916
  %1702 = call i32 @__asm_int3(), !insn.addr !7917
  %1703 = call i32 @__asm_int3(), !insn.addr !7918
  %1704 = call i32 @__asm_int3(), !insn.addr !7919
  %1705 = call i32 @__asm_int3(), !insn.addr !7920
  %1706 = call i32 @__asm_int3(), !insn.addr !7921
  %1707 = call i32 @__asm_int3(), !insn.addr !7922
  %1708 = call i32 @__asm_int3(), !insn.addr !7923
  %1709 = call i32 @__asm_int3(), !insn.addr !7924
  %1710 = call i32 @__asm_int3(), !insn.addr !7925
  %1711 = call i32 @__asm_int3(), !insn.addr !7926
  %1712 = call i32 @__asm_int3(), !insn.addr !7927
  %1713 = call i32 @__asm_int3(), !insn.addr !7928
  %1714 = call i32 @__asm_int3(), !insn.addr !7929
  %1715 = call i32 @__asm_int3(), !insn.addr !7930
  %1716 = call i32 @__asm_int3(), !insn.addr !7931
  %1717 = call i32 @__asm_int3(), !insn.addr !7932
  %1718 = call i32 @__asm_int3(), !insn.addr !7933
  %1719 = call i32 @__asm_int3(), !insn.addr !7934
  %1720 = call i32 @__asm_int3(), !insn.addr !7935
  %1721 = call i32 @__asm_int3(), !insn.addr !7936
  %1722 = call i32 @__asm_int3(), !insn.addr !7937
  %1723 = call i32 @__asm_int3(), !insn.addr !7938
  %1724 = call i32 @__asm_int3(), !insn.addr !7939
  %1725 = call i32 @__asm_int3(), !insn.addr !7940
  %1726 = call i32 @__asm_int3(), !insn.addr !7941
  %1727 = call i32 @__asm_int3(), !insn.addr !7942
  %1728 = call i32 @__asm_int3(), !insn.addr !7943
  %1729 = call i32 @__asm_int3(), !insn.addr !7944
  %1730 = call i32 @__asm_int3(), !insn.addr !7945
  %1731 = call i32 @__asm_int3(), !insn.addr !7946
  %1732 = call i32 @__asm_int3(), !insn.addr !7947
  %1733 = call i32 @__asm_int3(), !insn.addr !7948
  %1734 = call i32 @__asm_int3(), !insn.addr !7949
  %1735 = call i32 @__asm_int3(), !insn.addr !7950
  %1736 = call i32 @__asm_int3(), !insn.addr !7951
  %1737 = call i32 @__asm_int3(), !insn.addr !7952
  %1738 = call i32 @__asm_int3(), !insn.addr !7953
  %1739 = call i32 @__asm_int3(), !insn.addr !7954
  %1740 = call i32 @__asm_int3(), !insn.addr !7955
  %1741 = call i32 @__asm_int3(), !insn.addr !7956
  %1742 = call i32 @__asm_int3(), !insn.addr !7957
  %1743 = call i32 @__asm_int3(), !insn.addr !7958
  %1744 = call i32 @__asm_int3(), !insn.addr !7959
  %1745 = call i32 @__asm_int3(), !insn.addr !7960
  %1746 = call i32 @__asm_int3(), !insn.addr !7961
  %1747 = call i32 @__asm_int3(), !insn.addr !7962
  %1748 = call i32 @__asm_int3(), !insn.addr !7963
  %1749 = call i32 @__asm_int3(), !insn.addr !7964
  %1750 = call i32 @__asm_int3(), !insn.addr !7965
  %1751 = call i32 @__asm_int3(), !insn.addr !7966
  %1752 = call i32 @__asm_int3(), !insn.addr !7967
  %1753 = call i32 @__asm_int3(), !insn.addr !7968
  %1754 = call i32 @__asm_int3(), !insn.addr !7969
  %1755 = call i32 @__asm_int3(), !insn.addr !7970
  %1756 = call i32 @__asm_int3(), !insn.addr !7971
  %1757 = call i32 @__asm_int3(), !insn.addr !7972
  %1758 = call i32 @__asm_int3(), !insn.addr !7973
  %1759 = call i32 @__asm_int3(), !insn.addr !7974
  %1760 = call i32 @__asm_int3(), !insn.addr !7975
  %1761 = call i32 @__asm_int3(), !insn.addr !7976
  %1762 = call i32 @__asm_int3(), !insn.addr !7977
  %1763 = call i32 @__asm_int3(), !insn.addr !7978
  %1764 = call i32 @__asm_int3(), !insn.addr !7979
  %1765 = call i32 @__asm_int3(), !insn.addr !7980
  %1766 = call i32 @__asm_int3(), !insn.addr !7981
  %1767 = call i32 @__asm_int3(), !insn.addr !7982
  %1768 = call i32 @__asm_int3(), !insn.addr !7983
  %1769 = call i32 @__asm_int3(), !insn.addr !7984
  %1770 = call i32 @__asm_int3(), !insn.addr !7985
  %1771 = call i32 @__asm_int3(), !insn.addr !7986
  %1772 = call i32 @__asm_int3(), !insn.addr !7987
  %1773 = call i32 @__asm_int3(), !insn.addr !7988
  %1774 = call i32 @__asm_int3(), !insn.addr !7989
  %1775 = call i32 @__asm_int3(), !insn.addr !7990
  %1776 = call i32 @__asm_int3(), !insn.addr !7991
  %1777 = call i32 @__asm_int3(), !insn.addr !7992
  %1778 = call i32 @__asm_int3(), !insn.addr !7993
  %1779 = call i32 @__asm_int3(), !insn.addr !7994
  %1780 = call i32 @__asm_int3(), !insn.addr !7995
  %1781 = call i32 @__asm_int3(), !insn.addr !7996
  %1782 = call i32 @__asm_int3(), !insn.addr !7997
  %1783 = call i32 @__asm_int3(), !insn.addr !7998
  %1784 = call i32 @__asm_int3(), !insn.addr !7999
  %1785 = call i32 @__asm_int3(), !insn.addr !8000
  %1786 = call i32 @__asm_int3(), !insn.addr !8001
  %1787 = call i32 @__asm_int3(), !insn.addr !8002
  %1788 = call i32 @__asm_int3(), !insn.addr !8003
  %1789 = call i32 @__asm_int3(), !insn.addr !8004
  %1790 = call i32 @__asm_int3(), !insn.addr !8005
  %1791 = call i32 @__asm_int3(), !insn.addr !8006
  %1792 = call i32 @__asm_int3(), !insn.addr !8007
  %1793 = call i32 @__asm_int3(), !insn.addr !8008
  %1794 = call i32 @__asm_int3(), !insn.addr !8009
  %1795 = call i32 @__asm_int3(), !insn.addr !8010
  %1796 = call i32 @__asm_int3(), !insn.addr !8011
  %1797 = call i32 @__asm_int3(), !insn.addr !8012
  %1798 = call i32 @__asm_int3(), !insn.addr !8013
  %1799 = call i32 @__asm_int3(), !insn.addr !8014
  %1800 = call i32 @__asm_int3(), !insn.addr !8015
  %1801 = call i32 @__asm_int3(), !insn.addr !8016
  %1802 = call i32 @__asm_int3(), !insn.addr !8017
  %1803 = call i32 @__asm_int3(), !insn.addr !8018
  %1804 = call i32 @__asm_int3(), !insn.addr !8019
  %1805 = call i32 @__asm_int3(), !insn.addr !8020
  %1806 = call i32 @__asm_int3(), !insn.addr !8021
  %1807 = call i32 @__asm_int3(), !insn.addr !8022
  %1808 = call i32 @__asm_int3(), !insn.addr !8023
  %1809 = call i32 @__asm_int3(), !insn.addr !8024
  %1810 = call i32 @__asm_int3(), !insn.addr !8025
  %1811 = call i32 @__asm_int3(), !insn.addr !8026
  %1812 = call i32 @__asm_int3(), !insn.addr !8027
  %1813 = call i32 @__asm_int3(), !insn.addr !8028
  %1814 = call i32 @__asm_int3(), !insn.addr !8029
  %1815 = call i32 @__asm_int3(), !insn.addr !8030
  %1816 = call i32 @__asm_int3(), !insn.addr !8031
  %1817 = call i32 @__asm_int3(), !insn.addr !8032
  %1818 = call i32 @__asm_int3(), !insn.addr !8033
  %1819 = call i32 @__asm_int3(), !insn.addr !8034
  %1820 = call i32 @__asm_int3(), !insn.addr !8035
  %1821 = call i32 @__asm_int3(), !insn.addr !8036
  %1822 = call i32 @__asm_int3(), !insn.addr !8037
  %1823 = call i32 @__asm_int3(), !insn.addr !8038
  %1824 = call i32 @__asm_int3(), !insn.addr !8039
  %1825 = call i32 @__asm_int3(), !insn.addr !8040
  %1826 = call i32 @__asm_int3(), !insn.addr !8041
  %1827 = call i32 @__asm_int3(), !insn.addr !8042
  %1828 = call i32 @__asm_int3(), !insn.addr !8043
  %1829 = call i32 @__asm_int3(), !insn.addr !8044
  %1830 = call i32 @__asm_int3(), !insn.addr !8045
  %1831 = call i32 @__asm_int3(), !insn.addr !8046
  %1832 = call i32 @__asm_int3(), !insn.addr !8047
  %1833 = call i32 @__asm_int3(), !insn.addr !8048
  %1834 = call i32 @__asm_int3(), !insn.addr !8049
  %1835 = call i32 @__asm_int3(), !insn.addr !8050
  %1836 = call i32 @__asm_int3(), !insn.addr !8051
  %1837 = call i32 @__asm_int3(), !insn.addr !8052
  %1838 = call i32 @__asm_int3(), !insn.addr !8053
  %1839 = call i32 @__asm_int3(), !insn.addr !8054
  %1840 = call i32 @__asm_int3(), !insn.addr !8055
  %1841 = call i32 @__asm_int3(), !insn.addr !8056
  %1842 = call i32 @__asm_int3(), !insn.addr !8057
  %1843 = call i32 @__asm_int3(), !insn.addr !8058
  %1844 = call i32 @__asm_int3(), !insn.addr !8059
  %1845 = call i32 @__asm_int3(), !insn.addr !8060
  %1846 = call i32 @__asm_int3(), !insn.addr !8061
  %1847 = call i32 @__asm_int3(), !insn.addr !8062
  %1848 = call i32 @__asm_int3(), !insn.addr !8063
  %1849 = call i32 @__asm_int3(), !insn.addr !8064
  %1850 = call i32 @__asm_int3(), !insn.addr !8065
  %1851 = call i32 @__asm_int3(), !insn.addr !8066
  %1852 = call i32 @__asm_int3(), !insn.addr !8067
  %1853 = call i32 @__asm_int3(), !insn.addr !8068
  %1854 = call i32 @__asm_int3(), !insn.addr !8069
  %1855 = call i32 @__asm_int3(), !insn.addr !8070
  %1856 = call i32 @__asm_int3(), !insn.addr !8071
  %1857 = call i32 @__asm_int3(), !insn.addr !8072
  %1858 = call i32 @__asm_int3(), !insn.addr !8073
  %1859 = call i32 @__asm_int3(), !insn.addr !8074
  %1860 = call i32 @__asm_int3(), !insn.addr !8075
  %1861 = call i32 @__asm_int3(), !insn.addr !8076
  %1862 = call i32 @__asm_int3(), !insn.addr !8077
  %1863 = call i32 @__asm_int3(), !insn.addr !8078
  %1864 = call i32 @__asm_int3(), !insn.addr !8079
  %1865 = call i32 @__asm_int3(), !insn.addr !8080
  %1866 = call i32 @__asm_int3(), !insn.addr !8081
  %1867 = call i32 @__asm_int3(), !insn.addr !8082
  %1868 = call i32 @__asm_int3(), !insn.addr !8083
  %1869 = call i32 @__asm_int3(), !insn.addr !8084
  %1870 = call i32 @__asm_int3(), !insn.addr !8085
  %1871 = call i32 @__asm_int3(), !insn.addr !8086
  %1872 = call i32 @__asm_int3(), !insn.addr !8087
  %1873 = call i32 @__asm_int3(), !insn.addr !8088
  %1874 = call i32 @__asm_int3(), !insn.addr !8089
  %1875 = call i32 @__asm_int3(), !insn.addr !8090
  %1876 = call i32 @__asm_int3(), !insn.addr !8091
  %1877 = call i32 @__asm_int3(), !insn.addr !8092
  %1878 = call i32 @__asm_int3(), !insn.addr !8093
  %1879 = call i32 @__asm_int3(), !insn.addr !8094
  %1880 = call i32 @__asm_int3(), !insn.addr !8095
  %1881 = call i32 @__asm_int3(), !insn.addr !8096
  %1882 = call i32 @__asm_int3(), !insn.addr !8097
  %1883 = call i32 @__asm_int3(), !insn.addr !8098
  %1884 = call i32 @__asm_int3(), !insn.addr !8099
  %1885 = call i32 @__asm_int3(), !insn.addr !8100
  %1886 = call i32 @__asm_int3(), !insn.addr !8101
  %1887 = call i32 @__asm_int3(), !insn.addr !8102
  %1888 = call i32 @__asm_int3(), !insn.addr !8103
  %1889 = call i32 @__asm_int3(), !insn.addr !8104
  %1890 = call i32 @__asm_int3(), !insn.addr !8105
  %1891 = call i32 @__asm_int3(), !insn.addr !8106
  %1892 = call i32 @__asm_int3(), !insn.addr !8107
  %1893 = call i32 @__asm_int3(), !insn.addr !8108
  %1894 = call i32 @__asm_int3(), !insn.addr !8109
  %1895 = call i32 @__asm_int3(), !insn.addr !8110
  %1896 = call i32 @__asm_int3(), !insn.addr !8111
  %1897 = call i32 @__asm_int3(), !insn.addr !8112
  %1898 = call i32 @__asm_int3(), !insn.addr !8113
  %1899 = call i32 @__asm_int3(), !insn.addr !8114
  %1900 = call i32 @__asm_int3(), !insn.addr !8115
  %1901 = call i32 @__asm_int3(), !insn.addr !8116
  %1902 = call i32 @__asm_int3(), !insn.addr !8117
  %1903 = call i32 @__asm_int3(), !insn.addr !8118
  %1904 = call i32 @__asm_int3(), !insn.addr !8119
  %1905 = call i32 @__asm_int3(), !insn.addr !8120
  %1906 = call i32 @__asm_int3(), !insn.addr !8121
  %1907 = call i32 @__asm_int3(), !insn.addr !8122
  %1908 = call i32 @__asm_int3(), !insn.addr !8123
  %1909 = call i32 @__asm_int3(), !insn.addr !8124
  %1910 = call i32 @__asm_int3(), !insn.addr !8125
  %1911 = call i32 @__asm_int3(), !insn.addr !8126
  %1912 = call i32 @__asm_int3(), !insn.addr !8127
  %1913 = call i32 @__asm_int3(), !insn.addr !8128
  %1914 = call i32 @__asm_int3(), !insn.addr !8129
  %1915 = call i32 @__asm_int3(), !insn.addr !8130
  %1916 = call i32 @__asm_int3(), !insn.addr !8131
  %1917 = call i32 @__asm_int3(), !insn.addr !8132
  %1918 = call i32 @__asm_int3(), !insn.addr !8133
  %1919 = call i32 @__asm_int3(), !insn.addr !8134
  %1920 = call i32 @__asm_int3(), !insn.addr !8135
  %1921 = call i32 @__asm_int3(), !insn.addr !8136
  %1922 = call i32 @__asm_int3(), !insn.addr !8137
  %1923 = call i32 @__asm_int3(), !insn.addr !8138
  %1924 = call i32 @__asm_int3(), !insn.addr !8139
  %1925 = call i32 @__asm_int3(), !insn.addr !8140
  %1926 = call i32 @__asm_int3(), !insn.addr !8141
  %1927 = call i32 @__asm_int3(), !insn.addr !8142
  %1928 = call i32 @__asm_int3(), !insn.addr !8143
  %1929 = call i32 @__asm_int3(), !insn.addr !8144
  %1930 = call i32 @__asm_int3(), !insn.addr !8145
  %1931 = call i32 @__asm_int3(), !insn.addr !8146
  %1932 = call i32 @__asm_int3(), !insn.addr !8147
  %1933 = call i32 @__asm_int3(), !insn.addr !8148
  %1934 = call i32 @__asm_int3(), !insn.addr !8149
  %1935 = call i32 @__asm_int3(), !insn.addr !8150
  %1936 = call i32 @__asm_int3(), !insn.addr !8151
  %1937 = call i32 @__asm_int3(), !insn.addr !8152
  %1938 = call i32 @__asm_int3(), !insn.addr !8153
  %1939 = call i32 @__asm_int3(), !insn.addr !8154
  %1940 = call i32 @__asm_int3(), !insn.addr !8155
  %1941 = call i32 @__asm_int3(), !insn.addr !8156
  %1942 = call i32 @__asm_int3(), !insn.addr !8157
  %1943 = call i32 @__asm_int3(), !insn.addr !8158
  %1944 = call i32 @__asm_int3(), !insn.addr !8159
  %1945 = call i32 @__asm_int3(), !insn.addr !8160
  %1946 = call i32 @__asm_int3(), !insn.addr !8161
  %1947 = call i32 @__asm_int3(), !insn.addr !8162
  %1948 = call i32 @__asm_int3(), !insn.addr !8163
  %1949 = call i32 @__asm_int3(), !insn.addr !8164
  %1950 = call i32 @__asm_int3(), !insn.addr !8165
  %1951 = call i32 @__asm_int3(), !insn.addr !8166
  %1952 = call i32 @__asm_int3(), !insn.addr !8167
  %1953 = call i32 @__asm_int3(), !insn.addr !8168
  %1954 = call i32 @__asm_int3(), !insn.addr !8169
  %1955 = call i32 @__asm_int3(), !insn.addr !8170
  %1956 = call i32 @__asm_int3(), !insn.addr !8171
  %1957 = call i32 @__asm_int3(), !insn.addr !8172
  %1958 = call i32 @__asm_int3(), !insn.addr !8173
  %1959 = call i32 @__asm_int3(), !insn.addr !8174
  %1960 = call i32 @__asm_int3(), !insn.addr !8175
  %1961 = call i32 @__asm_int3(), !insn.addr !8176
  %1962 = call i32 @__asm_int3(), !insn.addr !8177
  %1963 = call i32 @__asm_int3(), !insn.addr !8178
  %1964 = call i32 @__asm_int3(), !insn.addr !8179
  %1965 = call i32 @__asm_int3(), !insn.addr !8180
  %1966 = call i32 @__asm_int3(), !insn.addr !8181
  %1967 = call i32 @__asm_int3(), !insn.addr !8182
  %1968 = call i32 @__asm_int3(), !insn.addr !8183
  %1969 = call i32 @__asm_int3(), !insn.addr !8184
  %1970 = call i32 @__asm_int3(), !insn.addr !8185
  %1971 = call i32 @__asm_int3(), !insn.addr !8186
  %1972 = call i32 @__asm_int3(), !insn.addr !8187
  %1973 = call i32 @__asm_int3(), !insn.addr !8188
  %1974 = call i32 @__asm_int3(), !insn.addr !8189
  %1975 = call i32 @__asm_int3(), !insn.addr !8190
  %1976 = call i32 @__asm_int3(), !insn.addr !8191
  %1977 = call i32 @__asm_int3(), !insn.addr !8192
  %1978 = call i32 @__asm_int3(), !insn.addr !8193
  %1979 = call i32 @__asm_int3(), !insn.addr !8194
  %1980 = call i32 @__asm_int3(), !insn.addr !8195
  %1981 = call i32 @__asm_int3(), !insn.addr !8196
  %1982 = call i32 @__asm_int3(), !insn.addr !8197
  %1983 = call i32 @__asm_int3(), !insn.addr !8198
  %1984 = call i32 @__asm_int3(), !insn.addr !8199
  %1985 = call i32 @__asm_int3(), !insn.addr !8200
  %1986 = call i32 @__asm_int3(), !insn.addr !8201
  %1987 = call i32 @__asm_int3(), !insn.addr !8202
  %1988 = call i32 @__asm_int3(), !insn.addr !8203
  %1989 = call i32 @__asm_int3(), !insn.addr !8204
  %1990 = call i32 @__asm_int3(), !insn.addr !8205
  %1991 = call i32 @__asm_int3(), !insn.addr !8206
  %1992 = call i32 @__asm_int3(), !insn.addr !8207
  %1993 = call i32 @__asm_int3(), !insn.addr !8208
  %1994 = call i32 @__asm_int3(), !insn.addr !8209
  %1995 = call i32 @__asm_int3(), !insn.addr !8210
  %1996 = call i32 @__asm_int3(), !insn.addr !8211
  %1997 = call i32 @__asm_int3(), !insn.addr !8212
  %1998 = call i32 @__asm_int3(), !insn.addr !8213
  %1999 = call i32 @__asm_int3(), !insn.addr !8214
  %2000 = call i32 @__asm_int3(), !insn.addr !8215
  %2001 = call i32 @__asm_int3(), !insn.addr !8216
  %2002 = call i32 @__asm_int3(), !insn.addr !8217
  %2003 = call i32 @__asm_int3(), !insn.addr !8218
  %2004 = call i32 @__asm_int3(), !insn.addr !8219
  %2005 = call i32 @__asm_int3(), !insn.addr !8220
  %2006 = call i32 @__asm_int3(), !insn.addr !8221
  %2007 = call i32 @__asm_int3(), !insn.addr !8222
  %2008 = call i32 @__asm_int3(), !insn.addr !8223
  %2009 = call i32 @__asm_int3(), !insn.addr !8224
  %2010 = call i32 @__asm_int3(), !insn.addr !8225
  %2011 = call i32 @__asm_int3(), !insn.addr !8226
  %2012 = call i32 @__asm_int3(), !insn.addr !8227
  %2013 = call i32 @__asm_int3(), !insn.addr !8228
  %2014 = call i32 @__asm_int3(), !insn.addr !8229
  %2015 = call i32 @__asm_int3(), !insn.addr !8230
  %2016 = call i32 @__asm_int3(), !insn.addr !8231
  %2017 = call i32 @__asm_int3(), !insn.addr !8232
  %2018 = call i32 @__asm_int3(), !insn.addr !8233
  %2019 = call i32 @__asm_int3(), !insn.addr !8234
  %2020 = call i32 @__asm_int3(), !insn.addr !8235
  %2021 = call i32 @__asm_int3(), !insn.addr !8236
  %2022 = call i32 @__asm_int3(), !insn.addr !8237
  %2023 = call i32 @__asm_int3(), !insn.addr !8238
  %2024 = call i32 @__asm_int3(), !insn.addr !8239
  %2025 = call i32 @__asm_int3(), !insn.addr !8240
  %2026 = call i32 @__asm_int3(), !insn.addr !8241
  %2027 = call i32 @__asm_int3(), !insn.addr !8242
  %2028 = call i32 @__asm_int3(), !insn.addr !8243
  %2029 = call i32 @__asm_int3(), !insn.addr !8244
  %2030 = call i32 @__asm_int3(), !insn.addr !8245
  %2031 = call i32 @__asm_int3(), !insn.addr !8246
  %2032 = call i32 @__asm_int3(), !insn.addr !8247
  %2033 = call i32 @__asm_int3(), !insn.addr !8248
  %2034 = call i32 @__asm_int3(), !insn.addr !8249
  %2035 = call i32 @__asm_int3(), !insn.addr !8250
  %2036 = call i32 @__asm_int3(), !insn.addr !8251
  %2037 = call i32 @__asm_int3(), !insn.addr !8252
  %2038 = call i32 @__asm_int3(), !insn.addr !8253
  %2039 = call i32 @__asm_int3(), !insn.addr !8254
  %2040 = call i32 @__asm_int3(), !insn.addr !8255
  %2041 = call i32 @__asm_int3(), !insn.addr !8256
  %2042 = call i32 @__asm_int3(), !insn.addr !8257
  %2043 = call i32 @__asm_int3(), !insn.addr !8258
  %2044 = call i32 @__asm_int3(), !insn.addr !8259
  %2045 = call i32 @__asm_int3(), !insn.addr !8260
  %2046 = call i32 @__asm_int3(), !insn.addr !8261
  %2047 = call i32 @__asm_int3(), !insn.addr !8262
  %2048 = call i32 @__asm_int3(), !insn.addr !8263
  %2049 = call i32 @__asm_int3(), !insn.addr !8264
  %2050 = call i32 @__asm_int3(), !insn.addr !8265
  %2051 = call i32 @__asm_int3(), !insn.addr !8266
  %2052 = call i32 @__asm_int3(), !insn.addr !8267
  %2053 = call i32 @__asm_int3(), !insn.addr !8268
  %2054 = call i32 @__asm_int3(), !insn.addr !8269
  %2055 = call i32 @__asm_int3(), !insn.addr !8270
  %2056 = call i32 @__asm_int3(), !insn.addr !8271
  %2057 = call i32 @__asm_int3(), !insn.addr !8272
  %2058 = call i32 @__asm_int3(), !insn.addr !8273
  %2059 = call i32 @__asm_int3(), !insn.addr !8274
  %2060 = call i32 @__asm_int3(), !insn.addr !8275
  %2061 = call i32 @__asm_int3(), !insn.addr !8276
  %2062 = call i32 @__asm_int3(), !insn.addr !8277
  %2063 = call i32 @__asm_int3(), !insn.addr !8278
  %2064 = call i32 @__asm_int3(), !insn.addr !8279
  %2065 = call i32 @__asm_int3(), !insn.addr !8280
  %2066 = call i32 @__asm_int3(), !insn.addr !8281
  %2067 = call i32 @__asm_int3(), !insn.addr !8282
  %2068 = call i32 @__asm_int3(), !insn.addr !8283
  %2069 = call i32 @__asm_int3(), !insn.addr !8284
  %2070 = call i32 @__asm_int3(), !insn.addr !8285
  %2071 = call i32 @__asm_int3(), !insn.addr !8286
  %2072 = call i32 @__asm_int3(), !insn.addr !8287
  %2073 = call i32 @__asm_int3(), !insn.addr !8288
  %2074 = call i32 @__asm_int3(), !insn.addr !8289
  %2075 = call i32 @__asm_int3(), !insn.addr !8290
  %2076 = call i32 @__asm_int3(), !insn.addr !8291
  %2077 = call i32 @__asm_int3(), !insn.addr !8292
  %2078 = call i32 @__asm_int3(), !insn.addr !8293
  %2079 = call i32 @__asm_int3(), !insn.addr !8294
  %2080 = call i32 @__asm_int3(), !insn.addr !8295
  %2081 = call i32 @__asm_int3(), !insn.addr !8296
  %2082 = call i32 @__asm_int3(), !insn.addr !8297
  %2083 = call i32 @__asm_int3(), !insn.addr !8298
  %2084 = call i32 @__asm_int3(), !insn.addr !8299
  %2085 = call i32 @__asm_int3(), !insn.addr !8300
  %2086 = call i32 @__asm_int3(), !insn.addr !8301
  %2087 = call i32 @__asm_int3(), !insn.addr !8302
  %2088 = call i32 @__asm_int3(), !insn.addr !8303
  %2089 = call i32 @__asm_int3(), !insn.addr !8304
  %2090 = call i32 @__asm_int3(), !insn.addr !8305
  %2091 = call i32 @__asm_int3(), !insn.addr !8306
  %2092 = call i32 @__asm_int3(), !insn.addr !8307
  %2093 = call i32 @__asm_int3(), !insn.addr !8308
  %2094 = call i32 @__asm_int3(), !insn.addr !8309
  %2095 = call i32 @__asm_int3(), !insn.addr !8310
  %2096 = call i32 @__asm_int3(), !insn.addr !8311
  %2097 = call i32 @__asm_int3(), !insn.addr !8312
  %2098 = call i32 @__asm_int3(), !insn.addr !8313
  %2099 = call i32 @__asm_int3(), !insn.addr !8314
  %2100 = call i32 @__asm_int3(), !insn.addr !8315
  %2101 = call i32 @__asm_int3(), !insn.addr !8316
  %2102 = call i32 @__asm_int3(), !insn.addr !8317
  %2103 = call i32 @__asm_int3(), !insn.addr !8318
  %2104 = call i32 @__asm_int3(), !insn.addr !8319
  %2105 = call i32 @__asm_int3(), !insn.addr !8320
  %2106 = call i32 @__asm_int3(), !insn.addr !8321
  %2107 = call i32 @__asm_int3(), !insn.addr !8322
  %2108 = call i32 @__asm_int3(), !insn.addr !8323
  %2109 = call i32 @__asm_int3(), !insn.addr !8324
  %2110 = call i32 @__asm_int3(), !insn.addr !8325
  %2111 = call i32 @__asm_int3(), !insn.addr !8326
  %2112 = call i32 @__asm_int3(), !insn.addr !8327
  %2113 = call i32 @__asm_int3(), !insn.addr !8328
  %2114 = call i32 @__asm_int3(), !insn.addr !8329
  %2115 = call i32 @__asm_int3(), !insn.addr !8330
  %2116 = call i32 @__asm_int3(), !insn.addr !8331
  %2117 = call i32 @__asm_int3(), !insn.addr !8332
  %2118 = call i32 @__asm_int3(), !insn.addr !8333
  %2119 = call i32 @__asm_int3(), !insn.addr !8334
  %2120 = call i32 @__asm_int3(), !insn.addr !8335
  %2121 = call i32 @__asm_int3(), !insn.addr !8336
  %2122 = call i32 @__asm_int3(), !insn.addr !8337
  %2123 = call i32 @__asm_int3(), !insn.addr !8338
  %2124 = call i32 @__asm_int3(), !insn.addr !8339
  %2125 = call i32 @__asm_int3(), !insn.addr !8340
  %2126 = call i32 @__asm_int3(), !insn.addr !8341
  %2127 = call i32 @__asm_int3(), !insn.addr !8342
  %2128 = call i32 @__asm_int3(), !insn.addr !8343
  %2129 = call i32 @__asm_int3(), !insn.addr !8344
  %2130 = call i32 @__asm_int3(), !insn.addr !8345
  %2131 = call i32 @__asm_int3(), !insn.addr !8346
  %2132 = call i32 @__asm_int3(), !insn.addr !8347
  %2133 = call i32 @__asm_int3(), !insn.addr !8348
  %2134 = call i32 @__asm_int3(), !insn.addr !8349
  %2135 = call i32 @__asm_int3(), !insn.addr !8350
  %2136 = call i32 @__asm_int3(), !insn.addr !8351
  %2137 = call i32 @__asm_int3(), !insn.addr !8352
  %2138 = call i32 @__asm_int3(), !insn.addr !8353
  %2139 = call i32 @__asm_int3(), !insn.addr !8354
  %2140 = call i32 @__asm_int3(), !insn.addr !8355
  %2141 = call i32 @__asm_int3(), !insn.addr !8356
  %2142 = call i32 @__asm_int3(), !insn.addr !8357
  %2143 = call i32 @__asm_int3(), !insn.addr !8358
  ret void, !insn.addr !8358
}

declare i32 @memcpy_s_3(i8*, i32, i8*, i32) local_unnamed_addr

define i32 @"common_flush_and_write_nolock<char>"(i32 %c, i32 %stream) local_unnamed_addr {
dec_label_pc_45c85c:
  %storemerge1.reg2mem = alloca i32, !insn.addr !8359
  %.reg2mem = alloca i32, !insn.addr !8359
  %.pre-phi3.reg2mem = alloca i32*, !insn.addr !8359
  %0 = call i32 @_fileno(i32 %stream), !insn.addr !8360
  %1 = add i32 %stream, 12, !insn.addr !8361
  %2 = inttoptr i32 %1 to i32*, !insn.addr !8361
  %3 = load i32, i32* %2, align 4, !insn.addr !8361
  %4 = and i32 %3, 6
  %5 = icmp eq i32 %4, 0, !insn.addr !8362
  %6 = icmp eq i1 %5, false, !insn.addr !8363
  br i1 %6, label %dec_label_pc_45c898, label %dec_label_pc_45c879, !insn.addr !8363

dec_label_pc_45c879:                              ; preds = %dec_label_pc_45c85c
  %7 = call i32* @_errno(), !insn.addr !8364
  store i32 9, i32* %7, align 4, !insn.addr !8365
  br label %dec_label_pc_45c887, !insn.addr !8365

dec_label_pc_45c887:                              ; preds = %dec_label_pc_45c879, %dec_label_pc_45c8a6, %dec_label_pc_45c8be
  %8 = load i32, i32* %2, align 4, !insn.addr !8366
  %9 = or i32 %8, 16, !insn.addr !8366
  store i32 %9, i32* %2, align 4, !insn.addr !8366
  store i32 -1, i32* %storemerge1.reg2mem, !insn.addr !8367
  br label %dec_label_pc_45c96e, !insn.addr !8367

dec_label_pc_45c898:                              ; preds = %dec_label_pc_45c85c
  %10 = and i32 %3, 4096
  %11 = icmp eq i32 %10, 0, !insn.addr !8368
  br i1 %11, label %dec_label_pc_45c8b3, label %dec_label_pc_45c8a6, !insn.addr !8369

dec_label_pc_45c8a6:                              ; preds = %dec_label_pc_45c898
  %12 = call i32* @_errno(), !insn.addr !8370
  store i32 34, i32* %12, align 4, !insn.addr !8371
  br label %dec_label_pc_45c887, !insn.addr !8372

dec_label_pc_45c8b3:                              ; preds = %dec_label_pc_45c898
  %13 = and i32 %3, 1
  %14 = icmp eq i32 %13, 0, !insn.addr !8373
  br i1 %14, label %dec_label_pc_45c8b3.dec_label_pc_45c8e6_crit_edge, label %dec_label_pc_45c8be, !insn.addr !8374

dec_label_pc_45c8b3.dec_label_pc_45c8e6_crit_edge: ; preds = %dec_label_pc_45c8b3
  %.pre = add i32 %stream, 8, !insn.addr !8375
  %.pre2 = inttoptr i32 %.pre to i32*, !insn.addr !8375
  store i32* %.pre2, i32** %.pre-phi3.reg2mem
  store i32 %3, i32* %.reg2mem
  br label %dec_label_pc_45c8e6

dec_label_pc_45c8be:                              ; preds = %dec_label_pc_45c8b3
  %15 = call i1 @stream_is_at_end_of_file_nolock(i32 %stream), !insn.addr !8376
  %16 = add i32 %stream, 8
  %17 = inttoptr i32 %16 to i32*
  store i32 0, i32* %17, align 4, !insn.addr !8377
  %18 = icmp eq i1 %15, false, !insn.addr !8378
  br i1 %18, label %dec_label_pc_45c887, label %dec_label_pc_45c8d5, !insn.addr !8379

dec_label_pc_45c8d5:                              ; preds = %dec_label_pc_45c8be
  %19 = add i32 %stream, 4, !insn.addr !8380
  %20 = inttoptr i32 %19 to i32*, !insn.addr !8380
  %21 = load i32, i32* %20, align 4, !insn.addr !8380
  %22 = inttoptr i32 %stream to i32*, !insn.addr !8381
  store i32 %21, i32* %22, align 4, !insn.addr !8381
  %23 = load i32, i32* %2, align 4, !insn.addr !8382
  %24 = and i32 %23, -2, !insn.addr !8382
  store i32 %24, i32* %2, align 4, !insn.addr !8382
  store i32* %17, i32** %.pre-phi3.reg2mem, !insn.addr !8382
  store i32 %24, i32* %.reg2mem, !insn.addr !8382
  br label %dec_label_pc_45c8e6, !insn.addr !8382

dec_label_pc_45c8e6:                              ; preds = %dec_label_pc_45c8b3.dec_label_pc_45c8e6_crit_edge, %dec_label_pc_45c8d5
  %.reload = load i32, i32* %.reg2mem, !insn.addr !8383
  %.pre-phi3.reload = load i32*, i32** %.pre-phi3.reg2mem
  %25 = and i32 %.reload, -11, !insn.addr !8383
  %26 = or i32 %25, 2, !insn.addr !8384
  store i32 %26, i32* %2, align 4, !insn.addr !8384
  store i32 0, i32* %.pre-phi3.reload, align 4, !insn.addr !8375
  %27 = load i32, i32* %2, align 4, !insn.addr !8385
  %28 = and i32 %27, 1216, !insn.addr !8386
  %29 = icmp eq i32 %28, 0, !insn.addr !8386
  %30 = icmp eq i1 %29, false, !insn.addr !8387
  br i1 %30, label %dec_label_pc_45c947, label %dec_label_pc_45c914, !insn.addr !8387

dec_label_pc_45c914:                              ; preds = %dec_label_pc_45c8e6
  %31 = call i32* @__acrt_iob_func(i32 1), !insn.addr !8388
  %32 = ptrtoint i32* %31 to i32, !insn.addr !8388
  %33 = icmp eq i32 %32, %stream, !insn.addr !8389
  br i1 %33, label %dec_label_pc_45c932, label %dec_label_pc_45c924, !insn.addr !8390

dec_label_pc_45c924:                              ; preds = %dec_label_pc_45c914
  %34 = call i32* @__acrt_iob_func(i32 2), !insn.addr !8391
  %35 = ptrtoint i32* %34 to i32, !insn.addr !8391
  %36 = icmp eq i32 %35, %stream, !insn.addr !8392
  %37 = icmp eq i1 %36, false, !insn.addr !8393
  br i1 %37, label %dec_label_pc_45c93d, label %dec_label_pc_45c932, !insn.addr !8393

dec_label_pc_45c932:                              ; preds = %dec_label_pc_45c924, %dec_label_pc_45c914
  %38 = call i32 @_isatty(i32 %0), !insn.addr !8394
  %39 = icmp eq i32 %38, 0, !insn.addr !8395
  %40 = icmp eq i1 %39, false, !insn.addr !8396
  br i1 %40, label %dec_label_pc_45c947, label %dec_label_pc_45c93d, !insn.addr !8396

dec_label_pc_45c93d:                              ; preds = %dec_label_pc_45c932, %dec_label_pc_45c924
  %41 = call i32 @function_401997(i32 %stream), !insn.addr !8397
  br label %dec_label_pc_45c947, !insn.addr !8398

dec_label_pc_45c947:                              ; preds = %dec_label_pc_45c932, %dec_label_pc_45c93d, %dec_label_pc_45c8e6
  %42 = trunc i32 %c to i8, !insn.addr !8399
  %43 = call i1 @"write_buffer_nolock<char>"(i8 %42, i32 %stream), !insn.addr !8399
  %44 = icmp eq i1 %43, false, !insn.addr !8400
  %45 = icmp eq i1 %44, false, !insn.addr !8401
  br i1 %45, label %dec_label_pc_45c96a, label %dec_label_pc_45c959, !insn.addr !8401

dec_label_pc_45c959:                              ; preds = %dec_label_pc_45c947
  %46 = load i32, i32* %2, align 4, !insn.addr !8402
  %47 = or i32 %46, 16, !insn.addr !8402
  store i32 %47, i32* %2, align 4, !insn.addr !8402
  store i32 -1, i32* %storemerge1.reg2mem, !insn.addr !8403
  br label %dec_label_pc_45c96e, !insn.addr !8403

dec_label_pc_45c96a:                              ; preds = %dec_label_pc_45c947
  %48 = and i32 %c, 255, !insn.addr !8404
  store i32 %48, i32* %storemerge1.reg2mem, !insn.addr !8404
  br label %dec_label_pc_45c96e, !insn.addr !8404

dec_label_pc_45c96e:                              ; preds = %dec_label_pc_45c959, %dec_label_pc_45c96a, %dec_label_pc_45c887
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  ret i32 %storemerge1.reload, !insn.addr !8405
}

define i1 @"write_buffer_nolock<char>"(i8 %c, i32 %stream) local_unnamed_addr {
dec_label_pc_45cb15:
  %eax.0.shrunk.reg2mem = alloca i1, !insn.addr !8406
  %storemerge.reg2mem = alloca i32, !insn.addr !8406
  %edi.0.reg2mem = alloca i32, !insn.addr !8406
  %stack_var_4 = alloca i8, align 1
  store i8 %c, i8* %stack_var_4, align 1
  %0 = call i32 @_fileno(i32 %stream), !insn.addr !8407
  %1 = add i32 %stream, 12, !insn.addr !8408
  %2 = inttoptr i32 %1 to i32*, !insn.addr !8408
  %3 = load i32, i32* %2, align 4, !insn.addr !8408
  %4 = and i32 %3, 192
  %5 = icmp eq i32 %4, 0, !insn.addr !8409
  br i1 %5, label %dec_label_pc_45cbc7, label %dec_label_pc_45cb37, !insn.addr !8410

dec_label_pc_45cb37:                              ; preds = %dec_label_pc_45cb15
  %6 = add i32 %stream, 4, !insn.addr !8411
  %7 = inttoptr i32 %6 to i32*, !insn.addr !8411
  %8 = load i32, i32* %7, align 4, !insn.addr !8411
  %9 = inttoptr i32 %stream to i32*, !insn.addr !8412
  %10 = load i32, i32* %9, align 4, !insn.addr !8412
  %11 = sub i32 %10, %8, !insn.addr !8413
  %12 = add i32 %8, 1, !insn.addr !8414
  store i32 %12, i32* %9, align 4, !insn.addr !8415
  %13 = add i32 %stream, 24, !insn.addr !8416
  %14 = inttoptr i32 %13 to i32*, !insn.addr !8416
  %15 = load i32, i32* %14, align 4, !insn.addr !8416
  %16 = add i32 %15, -1, !insn.addr !8417
  %17 = add i32 %stream, 8, !insn.addr !8418
  %18 = inttoptr i32 %17 to i32*, !insn.addr !8418
  store i32 %16, i32* %18, align 4, !insn.addr !8418
  %19 = icmp slt i32 %11, 1
  br i1 %19, label %dec_label_pc_45cb78, label %dec_label_pc_45cb54, !insn.addr !8419

dec_label_pc_45cb54:                              ; preds = %dec_label_pc_45cb37
  %20 = load i32, i32* %7, align 4, !insn.addr !8420
  %21 = inttoptr i32 %20 to i8*, !insn.addr !8420
  %22 = call i32 @_write(i32 %0, i8* %21, i32 %11), !insn.addr !8421
  store i32 %22, i32* %edi.0.reg2mem, !insn.addr !8422
  br label %dec_label_pc_45cb66, !insn.addr !8422

dec_label_pc_45cb66:                              ; preds = %dec_label_pc_45cba3, %dec_label_pc_45cb9d, %dec_label_pc_45cb54
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %23 = icmp eq i32 %edi.0.reload, %11, !insn.addr !8423
  %24 = load i32, i32* %7, align 4, !insn.addr !8424
  %25 = load i8, i8* %stack_var_4, align 1, !insn.addr !8425
  %26 = inttoptr i32 %24 to i8*, !insn.addr !8426
  store i8 %25, i8* %26, align 1, !insn.addr !8426
  store i1 %23, i1* %eax.0.shrunk.reg2mem, !insn.addr !8427
  br label %dec_label_pc_45cbdd, !insn.addr !8427

dec_label_pc_45cb78:                              ; preds = %dec_label_pc_45cb37
  %27 = icmp ugt i32 %0, -3
  store i32 ptrtoint (i32* @__badioinfo to i32), i32* %storemerge.reg2mem, !insn.addr !8428
  br i1 %27, label %dec_label_pc_45cb9d, label %dec_label_pc_45cb82, !insn.addr !8428

dec_label_pc_45cb82:                              ; preds = %dec_label_pc_45cb78
  %28 = and i32 %0, 63, !insn.addr !8429
  %29 = sdiv i32 %0, 64, !insn.addr !8430
  %narrow = mul nuw nsw i32 %28, 56
  %30 = mul i32 %29, 4, !insn.addr !8431
  %31 = add i32 %30, ptrtoint (i32* @__pioinfo to i32), !insn.addr !8431
  %32 = inttoptr i32 %31 to i32*, !insn.addr !8431
  %33 = load i32, i32* %32, align 4, !insn.addr !8431
  %34 = add i32 %33, %narrow, !insn.addr !8431
  store i32 %34, i32* %storemerge.reg2mem, !insn.addr !8432
  br label %dec_label_pc_45cb9d, !insn.addr !8432

dec_label_pc_45cb9d:                              ; preds = %dec_label_pc_45cb78, %dec_label_pc_45cb82
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %35 = add i32 %storemerge.reload, 40, !insn.addr !8433
  %36 = inttoptr i32 %35 to i8*, !insn.addr !8433
  %37 = load i8, i8* %36, align 1, !insn.addr !8433
  %38 = and i8 %37, 32, !insn.addr !8433
  %39 = icmp eq i8 %38, 0, !insn.addr !8433
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !8434
  br i1 %39, label %dec_label_pc_45cb66, label %dec_label_pc_45cba3, !insn.addr !8434

dec_label_pc_45cba3:                              ; preds = %dec_label_pc_45cb9d
  %40 = call i64 @_lseeki64(i32 %0, i64 0, i32 0), !insn.addr !8435
  %41 = trunc i64 %40 to i32, !insn.addr !8435
  %42 = and i32 %0, %41, !insn.addr !8436
  %43 = icmp eq i32 %42, -1, !insn.addr !8437
  %44 = icmp eq i1 %43, false, !insn.addr !8438
  store i32 0, i32* %edi.0.reg2mem, !insn.addr !8438
  br i1 %44, label %dec_label_pc_45cb66, label %dec_label_pc_45cbb7, !insn.addr !8438

dec_label_pc_45cbb7:                              ; preds = %dec_label_pc_45cba3
  %45 = load i32, i32* %2, align 4, !insn.addr !8439
  %46 = or i32 %45, 16, !insn.addr !8439
  store i32 %46, i32* %2, align 4, !insn.addr !8439
  store i1 true, i1* %eax.0.shrunk.reg2mem, !insn.addr !8440
  br label %dec_label_pc_45cbdd, !insn.addr !8440

dec_label_pc_45cbc7:                              ; preds = %dec_label_pc_45cb15
  %47 = call i32 @_write(i32 %0, i8* nonnull %stack_var_4, i32 1), !insn.addr !8441
  %48 = icmp eq i32 %47, 1, !insn.addr !8442
  store i1 %48, i1* %eax.0.shrunk.reg2mem, !insn.addr !8443
  br label %dec_label_pc_45cbdd, !insn.addr !8443

dec_label_pc_45cbdd:                              ; preds = %dec_label_pc_45cbc7, %dec_label_pc_45cbb7, %dec_label_pc_45cb66
  %eax.0.shrunk.reload = load i1, i1* %eax.0.shrunk.reg2mem
  ret i1 %eax.0.shrunk.reload, !insn.addr !8444
}

define i1 @stream_is_at_end_of_file_nolock(i32 %stream) local_unnamed_addr {
dec_label_pc_45cd15:
  %merge.reg2mem = alloca i1, !insn.addr !8445
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %current_position_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %2 = add i32 %stream, 12, !insn.addr !8446
  %3 = inttoptr i32 %2 to i32*, !insn.addr !8446
  %4 = load i32, i32* %3, align 4, !insn.addr !8446
  %5 = and i32 %4, 8
  %6 = icmp eq i32 %5, 0, !insn.addr !8447
  store i1 true, i1* %merge.reg2mem, !insn.addr !8448
  br i1 %6, label %dec_label_pc_45cd2f, label %dec_label_pc_45cd2b, !insn.addr !8448

dec_label_pc_45cd2b:                              ; preds = %dec_label_pc_45cd7e, %dec_label_pc_45cd6f, %dec_label_pc_45cd58, %dec_label_pc_45cd46, %dec_label_pc_45cd3f, %dec_label_pc_45cd15
  %merge.reload = load i1, i1* %merge.reg2mem
  ret i1 %merge.reload, !insn.addr !8449

dec_label_pc_45cd2f:                              ; preds = %dec_label_pc_45cd15
  %7 = and i32 %4, 192
  %8 = icmp eq i32 %7, 0, !insn.addr !8450
  br i1 %8, label %dec_label_pc_45cd46, label %dec_label_pc_45cd3f, !insn.addr !8451

dec_label_pc_45cd3f:                              ; preds = %dec_label_pc_45cd2f
  %9 = inttoptr i32 %stream to i32*, !insn.addr !8452
  %10 = load i32, i32* %9, align 4, !insn.addr !8452
  %11 = add i32 %stream, 4, !insn.addr !8453
  %12 = inttoptr i32 %11 to i32*, !insn.addr !8453
  %13 = load i32, i32* %12, align 4, !insn.addr !8453
  %14 = icmp eq i32 %10, %13, !insn.addr !8453
  store i1 false, i1* %merge.reg2mem, !insn.addr !8454
  br i1 %14, label %dec_label_pc_45cd2b, label %dec_label_pc_45cd46, !insn.addr !8454

dec_label_pc_45cd46:                              ; preds = %dec_label_pc_45cd3f, %dec_label_pc_45cd2f
  %15 = add i32 %stream, 16, !insn.addr !8455
  %16 = inttoptr i32 %15 to i32*, !insn.addr !8455
  %17 = load i32, i32* %16, align 4, !insn.addr !8455
  %18 = call i32 @_get_osfhandle(i32 %17), !insn.addr !8456
  %19 = icmp eq i32 %18, -1, !insn.addr !8457
  store i1 false, i1* %merge.reg2mem, !insn.addr !8458
  br i1 %19, label %dec_label_pc_45cd2b, label %dec_label_pc_45cd58, !insn.addr !8458

dec_label_pc_45cd58:                              ; preds = %dec_label_pc_45cd46
  %20 = ptrtoint i32* %current_position_-12 to i32, !insn.addr !8459
  %21 = inttoptr i32 %18 to i32*, !insn.addr !8460
  %22 = call i1 @SetFilePointerEx(i32* %21, %_LARGE_INTEGER zeroinitializer, %_LARGE_INTEGER* null, i32 %20), !insn.addr !8460
  %23 = icmp eq i1 %22, false, !insn.addr !8461
  store i1 false, i1* %merge.reg2mem, !insn.addr !8462
  br i1 %23, label %dec_label_pc_45cd2b, label %dec_label_pc_45cd6f, !insn.addr !8462

dec_label_pc_45cd6f:                              ; preds = %dec_label_pc_45cd58
  %24 = bitcast i32* %stack_var_-20 to %_LARGE_INTEGER*
  %25 = call i1 @GetFileSizeEx(i32* %21, %_LARGE_INTEGER* nonnull %24), !insn.addr !8463
  %26 = icmp eq i1 %25, false, !insn.addr !8464
  store i1 false, i1* %merge.reg2mem, !insn.addr !8465
  br i1 %26, label %dec_label_pc_45cd2b, label %dec_label_pc_45cd7e, !insn.addr !8465

dec_label_pc_45cd7e:                              ; preds = %dec_label_pc_45cd6f
  %27 = load i32, i32* %current_position_-12, align 4, !insn.addr !8466
  %28 = load i32, i32* %stack_var_-20, align 4, !insn.addr !8467
  %29 = icmp eq i32 %27, %28, !insn.addr !8467
  %30 = icmp eq i32 %1, %0, !insn.addr !8468
  %or.cond = icmp eq i1 %30, %29
  store i1 %or.cond, i1* %merge.reg2mem, !insn.addr !8469
  br label %dec_label_pc_45cd2b, !insn.addr !8469
}

define i32 @__acrt_stdio_flush_and_write_narrow_nolock(i32 %c, i32 %stream) local_unnamed_addr {
dec_label_pc_45cdbb:
  %0 = call i32 @"common_flush_and_write_nolock<char>"(i32 ptrtoint (i32* @80 to i32), i32 ptrtoint (i32* @80 to i32)), !insn.addr !8470
  ret i32 %0, !insn.addr !8470
}

define i32 @_isatty(i32 %fh) local_unnamed_addr {
dec_label_pc_45cdd5:
  %0 = icmp eq i32 %fh, -2, !insn.addr !8471
  %1 = icmp eq i1 %0, false, !insn.addr !8472
  br i1 %1, label %dec_label_pc_45cdef, label %dec_label_pc_45cde2, !insn.addr !8472

dec_label_pc_45cde2:                              ; preds = %dec_label_pc_45cdd5
  %2 = call i32* @_errno(), !insn.addr !8473
  store i32 9, i32* %2, align 4, !insn.addr !8474
  br label %dec_label_pc_45ce27, !insn.addr !8475

dec_label_pc_45cdef:                              ; preds = %dec_label_pc_45cdd5
  %3 = icmp slt i32 %fh, 0, !insn.addr !8476
  br i1 %3, label %dec_label_pc_45ce17, label %dec_label_pc_45cdf3, !insn.addr !8477

dec_label_pc_45cdf3:                              ; preds = %dec_label_pc_45cdef
  %4 = load i32, i32* @_nhandle, align 4, !insn.addr !8478
  %5 = icmp ugt i32 %4, %fh, !insn.addr !8478
  %6 = icmp eq i1 %5, false, !insn.addr !8479
  br i1 %6, label %dec_label_pc_45ce17, label %dec_label_pc_45cdfb, !insn.addr !8479

dec_label_pc_45cdfb:                              ; preds = %dec_label_pc_45cdf3
  %7 = and i32 %fh, 63, !insn.addr !8480
  %8 = udiv i32 %fh, 64
  %narrow = mul nuw nsw i32 %7, 56
  %9 = mul i32 %8, 4, !insn.addr !8481
  %10 = add i32 %9, ptrtoint (i32* @__pioinfo to i32), !insn.addr !8481
  %11 = inttoptr i32 %10 to i32*, !insn.addr !8481
  %12 = load i32, i32* %11, align 4, !insn.addr !8481
  %13 = add nuw nsw i32 %narrow, 40, !insn.addr !8482
  %14 = add i32 %13, %12, !insn.addr !8482
  %15 = inttoptr i32 %14 to i8*, !insn.addr !8482
  %16 = load i8, i8* %15, align 1, !insn.addr !8482
  %17 = and i8 %16, 64
  %18 = zext i8 %17 to i32, !insn.addr !8483
  ret i32 %18, !insn.addr !8484

dec_label_pc_45ce17:                              ; preds = %dec_label_pc_45cdf3, %dec_label_pc_45cdef
  %19 = call i32* @_errno(), !insn.addr !8485
  store i32 9, i32* %19, align 4, !insn.addr !8486
  call void @_invalid_parameter_noinfo(), !insn.addr !8487
  br label %dec_label_pc_45ce27, !insn.addr !8487

dec_label_pc_45ce27:                              ; preds = %dec_label_pc_45ce17, %dec_label_pc_45cde2
  ret i32 0, !insn.addr !8488
}

define void @__acrt_stdio_allocate_buffer_nolock(i32 %public_stream) local_unnamed_addr {
dec_label_pc_45d367:
  %edi.0.reg2mem = alloca i32, !insn.addr !8489
  %0 = load i32, i32* @_cflush, align 4, !insn.addr !8490
  %1 = add i32 %0, 1, !insn.addr !8490
  store i32 %1, i32* @_cflush, align 4, !insn.addr !8490
  %2 = call i32* @_malloc_base(i32 4096), !insn.addr !8491
  %3 = ptrtoint i32* %2 to i32, !insn.addr !8491
  %4 = add i32 %public_stream, 4, !insn.addr !8492
  %5 = inttoptr i32 %4 to i32*, !insn.addr !8492
  store i32 %3, i32* %5, align 4, !insn.addr !8492
  call void @_free_base(i32* null), !insn.addr !8493
  %6 = load i32, i32* %5, align 4, !insn.addr !8494
  %7 = icmp eq i32 %6, 0, !insn.addr !8494
  %8 = add i32 %public_stream, 12, !insn.addr !8495
  %9 = inttoptr i32 %8 to i32*
  %10 = load i32, i32* %9, align 4
  br i1 %7, label %dec_label_pc_45d39f, label %dec_label_pc_45d397, !insn.addr !8496

dec_label_pc_45d397:                              ; preds = %dec_label_pc_45d367
  %11 = or i32 %10, 64, !insn.addr !8497
  store i32 %11, i32* %9, align 4, !insn.addr !8497
  store i32 4096, i32* %edi.0.reg2mem, !insn.addr !8498
  br label %dec_label_pc_45d3b0, !insn.addr !8498

dec_label_pc_45d39f:                              ; preds = %dec_label_pc_45d367
  %12 = or i32 %10, 1024, !insn.addr !8499
  store i32 %12, i32* %9, align 4, !insn.addr !8499
  %13 = add i32 %public_stream, 20, !insn.addr !8500
  store i32 %13, i32* %5, align 4, !insn.addr !8501
  store i32 2, i32* %edi.0.reg2mem, !insn.addr !8502
  br label %dec_label_pc_45d3b0, !insn.addr !8502

dec_label_pc_45d3b0:                              ; preds = %dec_label_pc_45d39f, %dec_label_pc_45d397
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %14 = add i32 %public_stream, 24, !insn.addr !8503
  %15 = inttoptr i32 %14 to i32*, !insn.addr !8503
  store i32 %edi.0.reload, i32* %15, align 4, !insn.addr !8503
  %16 = load i32, i32* %5, align 4, !insn.addr !8504
  %17 = add i32 %public_stream, 8, !insn.addr !8505
  %18 = inttoptr i32 %17 to i32*, !insn.addr !8505
  store i32 0, i32* %18, align 4, !insn.addr !8505
  %19 = inttoptr i32 %public_stream to i32*, !insn.addr !8506
  store i32 %16, i32* %19, align 4, !insn.addr !8506
  ret void, !insn.addr !8507
}

define i32 @to_abstract_control_1(i32 %machine_control) local_unnamed_addr {
dec_label_pc_45de2b:
  %esi.0.reg2mem = alloca i32, !insn.addr !8508
  %ebx.0.reg2mem = alloca i32, !insn.addr !8508
  %0 = and i32 %machine_control, 32832, !insn.addr !8509
  %1 = icmp eq i32 %0, 32768, !insn.addr !8510
  %2 = icmp eq i1 %1, false, !insn.addr !8511
  store i32 3072, i32* %ebx.0.reg2mem, !insn.addr !8511
  br i1 %2, label %dec_label_pc_45de50, label %dec_label_pc_45de69, !insn.addr !8511

dec_label_pc_45de50:                              ; preds = %dec_label_pc_45de2b
  %3 = icmp eq i32 %0, 64, !insn.addr !8512
  %4 = icmp eq i1 %3, false, !insn.addr !8513
  store i32 2048, i32* %ebx.0.reg2mem, !insn.addr !8513
  br i1 %4, label %dec_label_pc_45de5d, label %dec_label_pc_45de69, !insn.addr !8513

dec_label_pc_45de5d:                              ; preds = %dec_label_pc_45de50
  %5 = icmp eq i32 %0, 32832, !insn.addr !8514
  %spec.select = select i1 %5, i32 1024, i32 0
  store i32 %spec.select, i32* %ebx.0.reg2mem
  br label %dec_label_pc_45de69

dec_label_pc_45de69:                              ; preds = %dec_label_pc_45de5d, %dec_label_pc_45de50, %dec_label_pc_45de2b
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %6 = and i32 %machine_control, 24576, !insn.addr !8515
  store i32 0, i32* %esi.0.reg2mem
  switch i32 %6, label %dec_label_pc_45de82 [
    i32 0, label %dec_label_pc_45de99
    i32 8192, label %dec_label_pc_45de94
    i32 16384, label %dec_label_pc_45de8d
  ]

dec_label_pc_45de82:                              ; preds = %dec_label_pc_45de69
  %7 = icmp eq i32 %6, 24576, !insn.addr !8516
  %8 = icmp eq i1 %7, false, !insn.addr !8517
  %spec.select1 = select i1 %8, i32 0, i32 768
  store i32 %spec.select1, i32* %esi.0.reg2mem
  br label %dec_label_pc_45de99

dec_label_pc_45de8d:                              ; preds = %dec_label_pc_45de69
  store i32 512, i32* %esi.0.reg2mem, !insn.addr !8518
  br label %dec_label_pc_45de99, !insn.addr !8518

dec_label_pc_45de94:                              ; preds = %dec_label_pc_45de69
  store i32 256, i32* %esi.0.reg2mem, !insn.addr !8519
  br label %dec_label_pc_45de99, !insn.addr !8519

dec_label_pc_45de99:                              ; preds = %dec_label_pc_45de82, %dec_label_pc_45de69, %dec_label_pc_45de94, %dec_label_pc_45de8d
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %9 = udiv i32 %machine_control, 8
  %10 = and i32 %9, 48, !insn.addr !8520
  %11 = udiv i32 %machine_control, 64
  %12 = and i32 %11, 8, !insn.addr !8521
  %13 = or i32 %10, %12, !insn.addr !8522
  %14 = udiv i32 %machine_control, 256
  %15 = and i32 %14, 4, !insn.addr !8523
  %16 = or i32 %13, %15, !insn.addr !8524
  %17 = udiv i32 %machine_control, 4096, !insn.addr !8525
  %18 = udiv i32 %machine_control, 1024
  %19 = and i32 %18, 2, !insn.addr !8526
  %20 = and i32 %17, 1, !insn.addr !8527
  %21 = or i32 %16, %19, !insn.addr !8528
  %22 = or i32 %21, %20, !insn.addr !8529
  %23 = or i32 %22, %ebx.0.reload, !insn.addr !8530
  %24 = or i32 %23, %esi.0.reload, !insn.addr !8531
  ret i32 %24, !insn.addr !8532
}

define i32 @to_abstract_control_2(i32 %machine_control) local_unnamed_addr {
dec_label_pc_45df16:
  %esi.0.reg2mem = alloca i32, !insn.addr !8533
  %0 = and i32 %machine_control, 3072, !insn.addr !8534
  store i32 0, i32* %esi.0.reg2mem
  switch i32 %0, label %dec_label_pc_45df6d [
    i32 0, label %dec_label_pc_45df81
    i32 1024, label %dec_label_pc_45df7c
    i32 2048, label %dec_label_pc_45df78
  ]

dec_label_pc_45df6d:                              ; preds = %dec_label_pc_45df16
  %1 = icmp eq i32 %0, 3072, !insn.addr !8535
  %2 = icmp eq i1 %1, false, !insn.addr !8536
  %spec.select = select i1 %2, i32 0, i32 768
  store i32 %spec.select, i32* %esi.0.reg2mem
  br label %dec_label_pc_45df81

dec_label_pc_45df78:                              ; preds = %dec_label_pc_45df16
  store i32 512, i32* %esi.0.reg2mem, !insn.addr !8537
  br label %dec_label_pc_45df81, !insn.addr !8537

dec_label_pc_45df7c:                              ; preds = %dec_label_pc_45df16
  store i32 256, i32* %esi.0.reg2mem, !insn.addr !8538
  br label %dec_label_pc_45df81, !insn.addr !8538

dec_label_pc_45df81:                              ; preds = %dec_label_pc_45df6d, %dec_label_pc_45df16, %dec_label_pc_45df7c, %dec_label_pc_45df78
  %3 = mul i32 %machine_control, 4, !insn.addr !8539
  %4 = and i32 %3, 16384, !insn.addr !8540
  %5 = and i32 %machine_control, 768, !insn.addr !8541
  %switch.selectcmp = icmp eq i32 %5, 512
  %switch.select = select i1 %switch.selectcmp, i32 4096, i32 0
  %switch.selectcmp1 = icmp eq i32 %5, 0
  %switch.select2 = select i1 %switch.selectcmp1, i32 8192, i32 %switch.select
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %6 = mul i32 %machine_control, 16
  %7 = and i32 %6, 32, !insn.addr !8542
  %8 = mul i32 %machine_control, 2
  %9 = and i32 %8, 8, !insn.addr !8543
  %10 = or i32 %7, %9, !insn.addr !8544
  %11 = udiv i32 %machine_control, 2
  %12 = and i32 %11, 4, !insn.addr !8545
  %13 = or i32 %10, %12, !insn.addr !8546
  %14 = udiv i32 %machine_control, 8
  %15 = and i32 %14, 2, !insn.addr !8547
  %16 = udiv i32 %machine_control, 32, !insn.addr !8548
  %17 = or i32 %13, %15, !insn.addr !8549
  %18 = and i32 %6, 16, !insn.addr !8550
  %19 = and i32 %16, 1, !insn.addr !8551
  %20 = or i32 %17, %18, !insn.addr !8552
  %21 = or i32 %20, %19, !insn.addr !8553
  %22 = or i32 %21, %4, !insn.addr !8554
  %23 = or i32 %22, %switch.select2, !insn.addr !8555
  %24 = or i32 %23, %esi.0.reload, !insn.addr !8556
  ret i32 %24, !insn.addr !8557
}

define i32 @to_machine_sse_control(i32 %abstract_control) local_unnamed_addr {
dec_label_pc_45dffd:
  %edi.0.reg2mem = alloca i32, !insn.addr !8558
  %ebx.0.reg2mem = alloca i32, !insn.addr !8558
  %0 = and i32 %abstract_control, 3072, !insn.addr !8559
  store i32 0, i32* %ebx.0.reg2mem
  switch i32 %0, label %dec_label_pc_45e04c [
    i32 1024, label %dec_label_pc_45e047
    i32 2048, label %dec_label_pc_45e042
    i32 3072, label %dec_label_pc_45e03b
  ]

dec_label_pc_45e03b:                              ; preds = %dec_label_pc_45dffd
  store i32 32768, i32* %ebx.0.reg2mem, !insn.addr !8560
  br label %dec_label_pc_45e04c, !insn.addr !8560

dec_label_pc_45e042:                              ; preds = %dec_label_pc_45dffd
  store i32 64, i32* %ebx.0.reg2mem, !insn.addr !8561
  br label %dec_label_pc_45e04c, !insn.addr !8561

dec_label_pc_45e047:                              ; preds = %dec_label_pc_45dffd
  store i32 32832, i32* %ebx.0.reg2mem, !insn.addr !8562
  br label %dec_label_pc_45e04c, !insn.addr !8562

dec_label_pc_45e04c:                              ; preds = %dec_label_pc_45dffd, %dec_label_pc_45e047, %dec_label_pc_45e042, %dec_label_pc_45e03b
  %1 = udiv i32 %abstract_control, 4, !insn.addr !8563
  %2 = and i32 %abstract_control, -1073741824, !insn.addr !8564
  %3 = or i32 %2, %1, !insn.addr !8565
  %4 = udiv i32 %3, 4194304, !insn.addr !8566
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %5 = and i32 %4, 768, !insn.addr !8567
  store i32 0, i32* %edi.0.reg2mem
  switch i32 %5, label %dec_label_pc_45e065 [
    i32 0, label %dec_label_pc_45e07c
    i32 256, label %dec_label_pc_45e077
    i32 512, label %dec_label_pc_45e070
  ]

dec_label_pc_45e065:                              ; preds = %dec_label_pc_45e04c
  %6 = icmp eq i32 %5, 768, !insn.addr !8568
  %7 = icmp eq i1 %6, false, !insn.addr !8569
  %spec.select = select i1 %7, i32 0, i32 24576
  store i32 %spec.select, i32* %edi.0.reg2mem
  br label %dec_label_pc_45e07c

dec_label_pc_45e070:                              ; preds = %dec_label_pc_45e04c
  store i32 16384, i32* %edi.0.reg2mem, !insn.addr !8570
  br label %dec_label_pc_45e07c, !insn.addr !8570

dec_label_pc_45e077:                              ; preds = %dec_label_pc_45e04c
  store i32 8192, i32* %edi.0.reg2mem, !insn.addr !8571
  br label %dec_label_pc_45e07c, !insn.addr !8571

dec_label_pc_45e07c:                              ; preds = %dec_label_pc_45e065, %dec_label_pc_45e04c, %dec_label_pc_45e077, %dec_label_pc_45e070
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %8 = mul i32 %4, 1024
  %9 = and i32 %8, 2048, !insn.addr !8572
  %10 = mul i32 %4, 256
  %11 = and i32 %10, 1024, !insn.addr !8573
  %12 = or i32 %9, %11, !insn.addr !8574
  %13 = mul i32 %4, 64
  %14 = and i32 %13, 512, !insn.addr !8575
  %15 = or i32 %12, %14, !insn.addr !8576
  %16 = mul i32 %4, 8
  %17 = and i32 %16, 256, !insn.addr !8577
  %18 = or i32 %15, %17, !insn.addr !8578
  %19 = mul i32 %4, 4096, !insn.addr !8579
  %20 = and i32 %19, 4096, !insn.addr !8580
  %21 = and i32 %16, 128, !insn.addr !8581
  %22 = or i32 %18, %21, !insn.addr !8582
  %23 = or i32 %22, %20, !insn.addr !8583
  %24 = or i32 %23, %ebx.0.reload, !insn.addr !8584
  %25 = or i32 %24, %edi.0.reload, !insn.addr !8585
  ret i32 %25, !insn.addr !8586
}

define i32 @to_machine_x87_control(i32 %abstract_control) local_unnamed_addr {
dec_label_pc_45e161:
  %edi.0.reg2mem = alloca i32, !insn.addr !8587
  %0 = and i32 %abstract_control, 12582912, !insn.addr !8588
  store i32 0, i32* %edi.0.reg2mem
  switch i32 %0, label %dec_label_pc_45e1c8 [
    i32 0, label %dec_label_pc_45e1df
    i32 4194304, label %dec_label_pc_45e1da
    i32 8388608, label %dec_label_pc_45e1d3
  ]

dec_label_pc_45e1c8:                              ; preds = %dec_label_pc_45e161
  %1 = icmp eq i32 %0, 12582912, !insn.addr !8589
  %2 = icmp eq i1 %1, false, !insn.addr !8590
  %spec.select = select i1 %2, i32 0, i32 3072
  store i32 %spec.select, i32* %edi.0.reg2mem
  br label %dec_label_pc_45e1df

dec_label_pc_45e1d3:                              ; preds = %dec_label_pc_45e161
  store i32 2048, i32* %edi.0.reg2mem, !insn.addr !8591
  br label %dec_label_pc_45e1df, !insn.addr !8591

dec_label_pc_45e1da:                              ; preds = %dec_label_pc_45e161
  store i32 1024, i32* %edi.0.reg2mem, !insn.addr !8592
  br label %dec_label_pc_45e1df, !insn.addr !8592

dec_label_pc_45e1df:                              ; preds = %dec_label_pc_45e1c8, %dec_label_pc_45e161, %dec_label_pc_45e1da, %dec_label_pc_45e1d3
  %3 = udiv i32 %abstract_control, 4, !insn.addr !8593
  %4 = and i32 %3, 1032192, !insn.addr !8594
  %5 = or i32 %4, %0, !insn.addr !8595
  %6 = and i32 %3, 4096, !insn.addr !8596
  %7 = and i32 %abstract_control, 12288, !insn.addr !8597
  %switch.selectcmp = icmp eq i32 %7, 4096
  %switch.select = select i1 %switch.selectcmp, i32 512, i32 0
  %switch.selectcmp1 = icmp eq i32 %7, 0
  %switch.select2 = select i1 %switch.selectcmp1, i32 768, i32 %switch.select
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %8 = udiv i32 %4, 2048
  %9 = and i32 %8, 16, !insn.addr !8598
  %10 = udiv i32 %4, 8192
  %11 = and i32 %10, 8, !insn.addr !8599
  %12 = udiv i32 %5, 262144
  %13 = and i32 %12, 2, !insn.addr !8600
  %14 = udiv i32 %abstract_control, 131072
  %15 = and i32 %14, 4, !insn.addr !8601
  %16 = and i32 %12, 1, !insn.addr !8602
  %17 = udiv i32 %4, 512, !insn.addr !8603
  %18 = and i32 %17, 32, !insn.addr !8604
  %19 = or i32 %6, %15, !insn.addr !8605
  %20 = or i32 %19, %11, !insn.addr !8606
  %21 = or i32 %20, %9, !insn.addr !8607
  %22 = or i32 %21, %18, !insn.addr !8608
  %23 = or i32 %22, %switch.select2, !insn.addr !8609
  %24 = or i32 %23, %13, !insn.addr !8610
  %25 = or i32 %24, %16, !insn.addr !8611
  %26 = or i32 %25, %edi.0.reload, !insn.addr !8612
  ret i32 %26, !insn.addr !8613
}

define i32 @__acrt_fenv_get_control() local_unnamed_addr {
dec_label_pc_45e3be:
  %storemerge.reg2mem = alloca i32, !insn.addr !8614
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i224, align 8
  %1 = bitcast i224* %stack_var_-36 to i8*, !insn.addr !8615
  call void @__asm_rep_stosd_memset(i8* nonnull %1, i32 0, i32 7), !insn.addr !8615
  %2 = call i32 @__asm_fnstenv(), !insn.addr !8616
  %3 = sext i32 %2 to i224, !insn.addr !8616
  store i224 %3, i224* %stack_var_-36, align 8, !insn.addr !8616
  call void @__asm_fldenv(i224 %3), !insn.addr !8617
  %4 = load i224, i224* %stack_var_-36, align 8, !insn.addr !8618
  %5 = trunc i224 %4 to i32, !insn.addr !8618
  %6 = and i32 %5, 7999, !insn.addr !8619
  %7 = call i32 @to_abstract_control_2(i32 %6), !insn.addr !8620
  %8 = load i32, i32* @__isa_available, align 4, !insn.addr !8621
  %9 = icmp sgt i32 %8, 0, !insn.addr !8622
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8622
  br i1 %9, label %dec_label_pc_45e3f6, label %dec_label_pc_45e403, !insn.addr !8622

dec_label_pc_45e3f6:                              ; preds = %dec_label_pc_45e3be
  call void @__asm_stmxcsr(i32 %0), !insn.addr !8623
  %10 = and i32 %0, 65472, !insn.addr !8624
  store i32 %10, i32* %storemerge.reg2mem, !insn.addr !8624
  br label %dec_label_pc_45e403, !insn.addr !8624

dec_label_pc_45e403:                              ; preds = %dec_label_pc_45e3be, %dec_label_pc_45e3f6
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %11 = call i32 @to_abstract_control_1(i32 %storemerge.reload), !insn.addr !8625
  %12 = and i32 %11, 16776960, !insn.addr !8626
  %13 = mul i32 %11, 4, !insn.addr !8627
  %14 = and i32 %13, 252, !insn.addr !8628
  %15 = or i32 %14, %12, !insn.addr !8629
  %16 = mul i32 %15, 64, !insn.addr !8630
  %17 = and i32 %7, 63, !insn.addr !8631
  %18 = or i32 %16, %17, !insn.addr !8632
  %19 = mul i32 %18, 4, !insn.addr !8633
  %20 = and i32 %7, 768, !insn.addr !8634
  %21 = or i32 %19, %20, !insn.addr !8635
  %22 = mul i32 %21, 16384, !insn.addr !8636
  %23 = or i32 %11, %7, !insn.addr !8637
  %24 = or i32 %23, %22, !insn.addr !8638
  ret i32 %24, !insn.addr !8639
}

define i32 @__acrt_fenv_get_status() local_unnamed_addr {
dec_label_pc_45e47e:
  %storemerge.reg2mem = alloca i32, !insn.addr !8640
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = load i32, i32* @__isa_available, align 4, !insn.addr !8641
  %3 = icmp sgt i32 %2, 0, !insn.addr !8642
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8642
  br i1 %3, label %dec_label_pc_45e4e0, label %dec_label_pc_45e4ea, !insn.addr !8642

dec_label_pc_45e4e0:                              ; preds = %dec_label_pc_45e47e
  call void @__asm_stmxcsr(i32 %0), !insn.addr !8643
  %4 = and i32 %0, 63, !insn.addr !8644
  store i32 %4, i32* %storemerge.reg2mem, !insn.addr !8644
  br label %dec_label_pc_45e4ea, !insn.addr !8644

dec_label_pc_45e4ea:                              ; preds = %dec_label_pc_45e47e, %dec_label_pc_45e4e0
  %5 = mul i32 %1, 2
  %6 = and i32 %5, 8, !insn.addr !8645
  %7 = mul i32 %1, 16
  %8 = and i32 %7, 32, !insn.addr !8646
  %9 = or i32 %8, %6, !insn.addr !8647
  %10 = udiv i32 %1, 2
  %11 = and i32 %10, 4, !insn.addr !8648
  %12 = or i32 %9, %11, !insn.addr !8649
  %13 = udiv i32 %1, 8
  %14 = and i32 %13, 2, !insn.addr !8650
  %15 = or i32 %12, %14, !insn.addr !8651
  %16 = udiv i32 %1, 32, !insn.addr !8652
  %17 = and i32 %16, 1, !insn.addr !8653
  %18 = and i32 %7, 16, !insn.addr !8654
  %19 = or i32 %15, %18, !insn.addr !8655
  %20 = or i32 %19, %17, !insn.addr !8656
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %21 = mul i32 %storemerge.reload, 2
  %22 = and i32 %21, 8, !insn.addr !8657
  %23 = mul i32 %storemerge.reload, 16
  %24 = and i32 %23, 32, !insn.addr !8658
  %25 = udiv i32 %storemerge.reload, 2
  %26 = and i32 %25, 4, !insn.addr !8659
  %27 = udiv i32 %storemerge.reload, 8
  %28 = and i32 %27, 2, !insn.addr !8660
  %29 = udiv i32 %storemerge.reload, 32, !insn.addr !8661
  %30 = and i32 %23, 16, !insn.addr !8662
  %31 = or i32 %22, %29, !insn.addr !8663
  %32 = or i32 %31, %24, !insn.addr !8664
  %33 = or i32 %32, %26, !insn.addr !8665
  %34 = or i32 %33, %28, !insn.addr !8666
  %35 = or i32 %34, %30, !insn.addr !8667
  %36 = mul i32 %35, 256, !insn.addr !8668
  %37 = or i32 %36, %20, !insn.addr !8669
  %38 = mul i32 %37, 65536, !insn.addr !8670
  %39 = or i32 %35, %20, !insn.addr !8671
  %40 = or i32 %39, %38, !insn.addr !8672
  ret i32 %40, !insn.addr !8673
}

define void @__acrt_fenv_set_control(i32 %abstract_control) local_unnamed_addr {
dec_label_pc_45e564:
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i224, align 8
  %1 = call i32 @to_machine_x87_control(i32 %abstract_control), !insn.addr !8674
  %2 = bitcast i224* %stack_var_-36 to i8*, !insn.addr !8675
  call void @__asm_rep_stosd_memset(i8* nonnull %2, i32 0, i32 7), !insn.addr !8675
  %3 = call i32 @__asm_fnstenv(), !insn.addr !8676
  %4 = and i32 %1, 7999
  %5 = and i32 %3, -8000
  %6 = or i32 %5, %4, !insn.addr !8677
  %7 = sext i32 %6 to i224, !insn.addr !8678
  store i224 %7, i224* %stack_var_-36, align 8, !insn.addr !8678
  call void @__asm_fldenv(i224 %7), !insn.addr !8679
  %8 = call i32 @to_machine_sse_control(i32 %abstract_control), !insn.addr !8680
  %9 = load i32, i32* @__isa_available, align 4, !insn.addr !8681
  %10 = icmp slt i32 %9, 1, !insn.addr !8682
  br i1 %10, label %dec_label_pc_45e5ca, label %dec_label_pc_45e5af, !insn.addr !8682

dec_label_pc_45e5af:                              ; preds = %dec_label_pc_45e564
  call void @__asm_stmxcsr(i32 %0), !insn.addr !8683
  %11 = and i32 %8, 65472, !insn.addr !8684
  %12 = and i32 %0, -65473, !insn.addr !8685
  %13 = or i32 %11, %12, !insn.addr !8686
  call void @__asm_ldmxcsr(i32 %13), !insn.addr !8687
  br label %dec_label_pc_45e5ca, !insn.addr !8687

dec_label_pc_45e5ca:                              ; preds = %dec_label_pc_45e5af, %dec_label_pc_45e564
  ret void, !insn.addr !8688
}

define void @__acrt_fenv_set_status(i32 %abstract_status) local_unnamed_addr {
dec_label_pc_45e5e6:
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i224, align 8
  %1 = bitcast i224* %stack_var_-36 to i8*, !insn.addr !8689
  call void @__asm_rep_stosd_memset(i8* nonnull %1, i32 0, i32 7), !insn.addr !8689
  %2 = call i32 @__asm_fnstenv(), !insn.addr !8690
  %3 = sext i32 %2 to i224, !insn.addr !8690
  store i224 %3, i224* %stack_var_-36, align 8, !insn.addr !8690
  call void @__asm_fldenv(i224 %3), !insn.addr !8691
  %4 = load i32, i32* @__isa_available, align 4, !insn.addr !8692
  %5 = icmp slt i32 %4, 1, !insn.addr !8693
  br i1 %5, label %dec_label_pc_45e6db, label %dec_label_pc_45e6c5, !insn.addr !8693

dec_label_pc_45e6c5:                              ; preds = %dec_label_pc_45e5e6
  %6 = udiv i32 %abstract_status, 268435456, !insn.addr !8694
  %7 = udiv i32 %abstract_status, 524288
  %8 = and i32 %7, 32, !insn.addr !8695
  %9 = udiv i32 %abstract_status, 2097152
  %10 = and i32 %9, 16, !insn.addr !8696
  %11 = or i32 %8, %10, !insn.addr !8697
  %12 = udiv i32 %abstract_status, 8388608
  %13 = and i32 %12, 8, !insn.addr !8698
  %14 = or i32 %11, %13, !insn.addr !8699
  %15 = udiv i32 %abstract_status, 33554432
  %16 = and i32 %15, 4, !insn.addr !8700
  %17 = or i32 %14, %16, !insn.addr !8701
  %18 = and i32 %6, 1, !insn.addr !8702
  %19 = or i32 %17, %18, !insn.addr !8703
  %20 = and i32 %6, 2, !insn.addr !8704
  call void @__asm_stmxcsr(i32 %0), !insn.addr !8705
  %21 = or i32 %19, %20, !insn.addr !8706
  %22 = and i32 %0, -64, !insn.addr !8707
  %23 = or i32 %21, %22, !insn.addr !8708
  call void @__asm_ldmxcsr(i32 %23), !insn.addr !8709
  br label %dec_label_pc_45e6db, !insn.addr !8709

dec_label_pc_45e6db:                              ; preds = %dec_label_pc_45e6c5, %dec_label_pc_45e5e6
  ret void, !insn.addr !8710
}

declare i32 @_strnicmp(i8*, i8*, i32) local_unnamed_addr

define i32 @_strnicmp_l(i8* %lhs, i8* %rhs, i32 %count, i32 %plocinfo) local_unnamed_addr {
dec_label_pc_45e9ed:
  %eax.2.reg2mem = alloca i32, !insn.addr !8711
  %edi.0.reg2mem = alloca i32, !insn.addr !8711
  %esi.0.reg2mem = alloca i32, !insn.addr !8711
  %ebx.0.reg2mem = alloca i32, !insn.addr !8711
  %0 = call i8 @__decompiler_undefined_function_7()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = icmp eq i8* %lhs, null, !insn.addr !8712
  %4 = icmp eq i1 %3, false, !insn.addr !8713
  br i1 %4, label %dec_label_pc_45ea17, label %dec_label_pc_45e9fd, !insn.addr !8713

dec_label_pc_45e9fd:                              ; preds = %dec_label_pc_45e9ed
  %5 = call i32* @_errno(), !insn.addr !8714
  store i32 22, i32* %5, align 4, !insn.addr !8715
  call void @_invalid_parameter_noinfo(), !insn.addr !8716
  store i32 2147483647, i32* %eax.2.reg2mem, !insn.addr !8717
  br label %dec_label_pc_45eab3, !insn.addr !8717

dec_label_pc_45ea17:                              ; preds = %dec_label_pc_45e9ed
  %6 = icmp eq i8* %rhs, null, !insn.addr !8718
  %7 = icmp eq i1 %6, false, !insn.addr !8719
  br i1 %7, label %dec_label_pc_45ea36, label %dec_label_pc_45ea1f, !insn.addr !8719

dec_label_pc_45ea1f:                              ; preds = %dec_label_pc_45ea17
  %8 = call i32* @_errno(), !insn.addr !8720
  store i32 22, i32* %8, align 4, !insn.addr !8721
  call void @_invalid_parameter_noinfo(), !insn.addr !8722
  store i32 2147483647, i32* %eax.2.reg2mem, !insn.addr !8723
  br label %dec_label_pc_45eab3, !insn.addr !8723

dec_label_pc_45ea36:                              ; preds = %dec_label_pc_45ea17
  %9 = icmp sgt i32 %count, -1
  br i1 %9, label %dec_label_pc_45ea59, label %dec_label_pc_45ea42, !insn.addr !8724

dec_label_pc_45ea42:                              ; preds = %dec_label_pc_45ea36
  %10 = call i32* @_errno(), !insn.addr !8725
  store i32 22, i32* %10, align 4, !insn.addr !8726
  call void @_invalid_parameter_noinfo(), !insn.addr !8727
  store i32 2147483647, i32* %eax.2.reg2mem, !insn.addr !8728
  br label %dec_label_pc_45eab3, !insn.addr !8728

dec_label_pc_45ea59:                              ; preds = %dec_label_pc_45ea36
  %11 = icmp eq i32 %count, 0, !insn.addr !8729
  %12 = icmp eq i1 %11, false, !insn.addr !8730
  store i32 0, i32* %eax.2.reg2mem, !insn.addr !8730
  br i1 %12, label %dec_label_pc_45ea61, label %dec_label_pc_45eab3, !insn.addr !8730

dec_label_pc_45ea61:                              ; preds = %dec_label_pc_45ea59
  %13 = ptrtoint i8* %lhs to i32
  %14 = ptrtoint i8* %rhs to i32, !insn.addr !8731
  %15 = call i32 @function_403d78(i32 %plocinfo), !insn.addr !8732
  %16 = add i32 %1, 148, !insn.addr !8733
  %17 = inttoptr i32 %16 to i32*, !insn.addr !8733
  %18 = load i32, i32* %17, align 4, !insn.addr !8733
  store i32 %14, i32* %ebx.0.reg2mem, !insn.addr !8734
  store i32 %count, i32* %esi.0.reg2mem, !insn.addr !8734
  store i32 %13, i32* %edi.0.reg2mem, !insn.addr !8734
  br label %dec_label_pc_45ea78, !insn.addr !8734

dec_label_pc_45ea78:                              ; preds = %dec_label_pc_45ea97, %dec_label_pc_45ea61
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %19 = inttoptr i32 %edi.0.reload to i8*, !insn.addr !8735
  %20 = load i8, i8* %19, align 1, !insn.addr !8735
  %21 = zext i8 %20 to i32, !insn.addr !8735
  %22 = add i32 %18, %21, !insn.addr !8736
  %23 = inttoptr i32 %22 to i8*, !insn.addr !8736
  %24 = load i8, i8* %23, align 1, !insn.addr !8736
  %25 = zext i8 %24 to i32, !insn.addr !8736
  %26 = inttoptr i32 %ebx.0.reload to i8*, !insn.addr !8737
  %27 = load i8, i8* %26, align 1, !insn.addr !8737
  %28 = zext i8 %27 to i32, !insn.addr !8737
  %29 = add i32 %18, %28, !insn.addr !8738
  %30 = inttoptr i32 %29 to i8*, !insn.addr !8738
  %31 = load i8, i8* %30, align 1, !insn.addr !8738
  %32 = zext i8 %31 to i32, !insn.addr !8738
  %33 = sub nsw i32 %25, %32, !insn.addr !8739
  %34 = icmp eq i32 %33, 0, !insn.addr !8739
  %35 = icmp eq i1 %34, false, !insn.addr !8740
  %36 = icmp eq i8 %24, 0, !insn.addr !8741
  %or.cond = or i1 %36, %35
  br i1 %or.cond, label %dec_label_pc_45ea9f, label %dec_label_pc_45ea97, !insn.addr !8740

dec_label_pc_45ea97:                              ; preds = %dec_label_pc_45ea78
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %37 = add i32 %ebx.0.reload, 1, !insn.addr !8742
  %38 = add i32 %edi.0.reload, 1, !insn.addr !8743
  %39 = add i32 %esi.0.reload, -1, !insn.addr !8744
  %40 = icmp eq i32 %39, 0, !insn.addr !8744
  %41 = icmp eq i1 %40, false, !insn.addr !8745
  store i32 %37, i32* %ebx.0.reg2mem, !insn.addr !8745
  store i32 %39, i32* %esi.0.reg2mem, !insn.addr !8745
  store i32 %38, i32* %edi.0.reg2mem, !insn.addr !8745
  br i1 %41, label %dec_label_pc_45ea78, label %dec_label_pc_45ea9f, !insn.addr !8745

dec_label_pc_45ea9f:                              ; preds = %dec_label_pc_45ea97, %dec_label_pc_45ea78
  %42 = icmp eq i8 %0, 0, !insn.addr !8746
  store i32 %33, i32* %eax.2.reg2mem, !insn.addr !8747
  br i1 %42, label %dec_label_pc_45eab3, label %dec_label_pc_45eaa5, !insn.addr !8747

dec_label_pc_45eaa5:                              ; preds = %dec_label_pc_45ea9f
  %43 = add i32 %2, 848, !insn.addr !8748
  %44 = inttoptr i32 %43 to i32*, !insn.addr !8748
  %45 = load i32, i32* %44, align 4, !insn.addr !8748
  %46 = and i32 %45, -3, !insn.addr !8748
  store i32 %46, i32* %44, align 4, !insn.addr !8748
  store i32 %33, i32* %eax.2.reg2mem, !insn.addr !8748
  br label %dec_label_pc_45eab3, !insn.addr !8748

dec_label_pc_45eab3:                              ; preds = %dec_label_pc_45ea1f, %dec_label_pc_45ea9f, %dec_label_pc_45eaa5, %dec_label_pc_45ea59, %dec_label_pc_45ea42, %dec_label_pc_45e9fd
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  ret i32 %eax.2.reload, !insn.addr !8749
}

define i32 @InternalCompareStringA(i32 %plocinfo, i16* %LocaleName, i32 %dwCmpFlags, i8* %lpString1, i32 %cchCount1, i8* %lpString2, i32 %cchCount2, i32 %code_page) local_unnamed_addr {
dec_label_pc_45fe1d:
  %esp.12.reg2mem = alloca i32, !insn.addr !8750
  %ebx.2.reg2mem = alloca i32, !insn.addr !8750
  %.pre-phi15.reg2mem = alloca i32*, !insn.addr !8750
  %esi.3.reg2mem = alloca i32, !insn.addr !8750
  %.pre-phi18.reg2mem = alloca i32*, !insn.addr !8750
  %esi.1.reg2mem = alloca i32, !insn.addr !8750
  %eax.4.reg2mem = alloca i32, !insn.addr !8750
  %esp.3.reg2mem = alloca i32, !insn.addr !8750
  %eax.3.reg2mem = alloca i32, !insn.addr !8750
  %esp.2.reg2mem = alloca i32, !insn.addr !8750
  %eax.2.reg2mem = alloca i32, !insn.addr !8750
  %stack_var_32.0.reg2mem = alloca i32, !insn.addr !8750
  %ebx.0.reg2mem = alloca i32, !insn.addr !8750
  %esi.0.reg2mem = alloca i32, !insn.addr !8750
  %stack_var_-22 = alloca i8, align 1
  %cpInfo_-28 = alloca %_cpinfo.647, align 8
  %stack_var_-68 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %0 = icmp slt i32 %cchCount1, 1
  br i1 %0, label %dec_label_pc_45fe61, label %dec_label_pc_45fe51, !insn.addr !8751

dec_label_pc_45fe51:                              ; preds = %dec_label_pc_45fe1d
  store i8* %lpString1, i8** %stack_var_-68, align 4, !insn.addr !8752
  %1 = call i32 @__strncnt(i8* %lpString1, i32 %cchCount1), !insn.addr !8753
  store i32 %1, i32* %esi.0.reg2mem, !insn.addr !8754
  br label %dec_label_pc_45fe6a, !insn.addr !8754

dec_label_pc_45fe61:                              ; preds = %dec_label_pc_45fe1d
  %2 = icmp slt i32 %cchCount1, -1, !insn.addr !8755
  store i32 %cchCount1, i32* %esi.0.reg2mem, !insn.addr !8755
  br i1 %2, label %dec_label_pc_460096, label %dec_label_pc_45fe6a, !insn.addr !8755

dec_label_pc_45fe6a:                              ; preds = %dec_label_pc_45fe61, %dec_label_pc_45fe51
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  %3 = icmp slt i32 %cchCount2, 1
  br i1 %3, label %dec_label_pc_45fe7e, label %dec_label_pc_45fe71, !insn.addr !8756

dec_label_pc_45fe71:                              ; preds = %dec_label_pc_45fe6a
  store i8* %lpString2, i8** %stack_var_-68, align 4, !insn.addr !8757
  %4 = call i32 @__strncnt(i8* %lpString2, i32 %cchCount2), !insn.addr !8758
  store i32 %4, i32* %ebx.0.reg2mem, !insn.addr !8759
  br label %dec_label_pc_45fe87, !insn.addr !8759

dec_label_pc_45fe7e:                              ; preds = %dec_label_pc_45fe6a
  %5 = icmp slt i32 %cchCount2, -1, !insn.addr !8760
  store i32 %cchCount2, i32* %ebx.0.reg2mem, !insn.addr !8760
  br i1 %5, label %dec_label_pc_460096, label %dec_label_pc_45fe87, !insn.addr !8760

dec_label_pc_45fe87:                              ; preds = %dec_label_pc_45fe7e, %dec_label_pc_45fe71
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %6 = icmp eq i32 %code_page, 0, !insn.addr !8761
  %7 = icmp eq i1 %6, false, !insn.addr !8762
  store i32 %code_page, i32* %stack_var_32.0.reg2mem, !insn.addr !8762
  br i1 %7, label %dec_label_pc_45fe99, label %dec_label_pc_45fe8e, !insn.addr !8762

dec_label_pc_45fe8e:                              ; preds = %dec_label_pc_45fe87
  %8 = inttoptr i32 %plocinfo to i32*, !insn.addr !8763
  %9 = load i32, i32* %8, align 4, !insn.addr !8763
  %10 = add i32 %9, 8, !insn.addr !8764
  %11 = inttoptr i32 %10 to i32*, !insn.addr !8764
  %12 = load i32, i32* %11, align 4, !insn.addr !8764
  store i32 %12, i32* %stack_var_32.0.reg2mem, !insn.addr !8765
  br label %dec_label_pc_45fe99, !insn.addr !8765

dec_label_pc_45fe99:                              ; preds = %dec_label_pc_45fe8e, %dec_label_pc_45fe87
  %13 = ptrtoint i32* %stack_var_-60 to i32, !insn.addr !8766
  %stack_var_32.0.reload = load i32, i32* %stack_var_32.0.reg2mem
  %14 = icmp ne i32 %esi.0.reload, 0, !insn.addr !8767
  %15 = icmp eq i32 %ebx.0.reload, 0, !insn.addr !8768
  %16 = icmp eq i1 %15, false, !insn.addr !8769
  %or.cond = icmp eq i1 %14, %16
  store i32 %13, i32* %esp.3.reg2mem, !insn.addr !8770
  br i1 %or.cond, label %dec_label_pc_45ff41, label %dec_label_pc_45fea5, !insn.addr !8770

dec_label_pc_45fea5:                              ; preds = %dec_label_pc_45fe99
  %17 = icmp eq i32 %esi.0.reload, %ebx.0.reload, !insn.addr !8771
  store i32 %13, i32* %esp.12.reg2mem, !insn.addr !8772
  br i1 %17, label %dec_label_pc_46008d, label %dec_label_pc_45fead, !insn.addr !8772

dec_label_pc_45fead:                              ; preds = %dec_label_pc_45fea5
  %18 = icmp sgt i32 %ebx.0.reload, 1, !insn.addr !8773
  br i1 %18, label %dec_label_pc_460096, label %dec_label_pc_45feb6, !insn.addr !8773

dec_label_pc_45feb6:                              ; preds = %dec_label_pc_45fead
  %19 = icmp sgt i32 %esi.0.reload, 1, !insn.addr !8774
  store i32 %13, i32* %esp.2.reg2mem, !insn.addr !8774
  br i1 %19, label %dec_label_pc_45fefe, label %dec_label_pc_45febb, !insn.addr !8774

dec_label_pc_45febb:                              ; preds = %dec_label_pc_45feb6
  %20 = inttoptr i32 %stack_var_32.0.reload to i8*, !insn.addr !8775
  store i8* %20, i8** %stack_var_-68, align 4, !insn.addr !8775
  %21 = bitcast %_cpinfo.647* %cpInfo_-28 to %_cpinfo*, !insn.addr !8776
  %22 = call i1 @GetCPInfo(i32 %stack_var_32.0.reload, %_cpinfo* nonnull %21), !insn.addr !8776
  %23 = icmp eq i1 %22, false, !insn.addr !8777
  br i1 %23, label %dec_label_pc_460096, label %dec_label_pc_45fece, !insn.addr !8778

dec_label_pc_45fece:                              ; preds = %dec_label_pc_45febb
  %24 = ptrtoint i8** %stack_var_-68 to i32, !insn.addr !8775
  %25 = icmp slt i32 %esi.0.reload, 1
  br i1 %25, label %dec_label_pc_45ff06, label %dec_label_pc_45fed2, !insn.addr !8779

dec_label_pc_45fed2:                              ; preds = %dec_label_pc_45fece
  %26 = getelementptr inbounds %_cpinfo.647, %_cpinfo.647* %cpInfo_-28, i32 0, i32 0, !insn.addr !8780
  %27 = load i32, i32* %26, align 8, !insn.addr !8780
  %28 = icmp ult i32 %27, 2, !insn.addr !8780
  %29 = load i8, i8* %stack_var_-22, align 1, !insn.addr !8781
  %30 = icmp eq i8 %29, 0, !insn.addr !8781
  %or.cond20 = or i1 %28, %30
  store i32 %24, i32* %esp.2.reg2mem, !insn.addr !8782
  br i1 %or.cond20, label %dec_label_pc_45fefe, label %dec_label_pc_45fee1.preheader, !insn.addr !8782

dec_label_pc_45fee1.preheader:                    ; preds = %dec_label_pc_45fed2
  %31 = ptrtoint i8* %stack_var_-22 to i32, !insn.addr !8783
  store i32 %31, i32* %eax.2.reg2mem
  br label %dec_label_pc_45fee1

dec_label_pc_45fee1:                              ; preds = %dec_label_pc_45fee1.preheader, %dec_label_pc_45fef6
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  %32 = add i32 %eax.2.reload, 1, !insn.addr !8784
  %33 = inttoptr i32 %32 to i8*, !insn.addr !8784
  %34 = load i8, i8* %33, align 1, !insn.addr !8784
  %35 = icmp eq i8 %34, 0, !insn.addr !8785
  store i32 %24, i32* %esp.2.reg2mem, !insn.addr !8786
  br i1 %35, label %dec_label_pc_45fefe, label %dec_label_pc_45fee8, !insn.addr !8786

dec_label_pc_45fee8:                              ; preds = %dec_label_pc_45fee1
  %36 = load i8, i8* %lpString1, align 1, !insn.addr !8787
  %37 = inttoptr i32 %eax.2.reload to i8*, !insn.addr !8788
  %38 = load i8, i8* %37, align 1, !insn.addr !8788
  %39 = icmp ult i8 %36, %38, !insn.addr !8788
  %40 = icmp ugt i8 %36, %34
  %or.cond9 = or i1 %40, %39
  store i32 %24, i32* %esp.12.reg2mem, !insn.addr !8789
  br i1 %or.cond9, label %dec_label_pc_45fef6, label %dec_label_pc_46008d, !insn.addr !8789

dec_label_pc_45fef6:                              ; preds = %dec_label_pc_45fee8
  %41 = add i32 %eax.2.reload, 2, !insn.addr !8790
  %42 = inttoptr i32 %41 to i8*, !insn.addr !8791
  %43 = load i8, i8* %42, align 1, !insn.addr !8791
  %44 = icmp eq i8 %43, 0, !insn.addr !8791
  %45 = icmp eq i1 %44, false, !insn.addr !8792
  store i32 %41, i32* %eax.2.reg2mem, !insn.addr !8792
  store i32 %24, i32* %esp.2.reg2mem, !insn.addr !8792
  br i1 %45, label %dec_label_pc_45fee1, label %dec_label_pc_45fefe, !insn.addr !8792

dec_label_pc_45fefe:                              ; preds = %dec_label_pc_45fef6, %dec_label_pc_45fee1, %dec_label_pc_45fed2, %dec_label_pc_45feb6
  %esp.2.reload = load i32, i32* %esp.2.reg2mem
  %46 = add i32 %esp.2.reload, -4, !insn.addr !8793
  %47 = inttoptr i32 %46 to i32*, !insn.addr !8793
  store i32 3, i32* %47, align 4, !insn.addr !8793
  br label %dec_label_pc_460096, !insn.addr !8793

dec_label_pc_45ff06:                              ; preds = %dec_label_pc_45fece
  %48 = icmp slt i32 %ebx.0.reload, 1
  store i32 %24, i32* %esp.3.reg2mem, !insn.addr !8794
  br i1 %48, label %dec_label_pc_45ff41, label %dec_label_pc_45ff0a, !insn.addr !8794

dec_label_pc_45ff0a:                              ; preds = %dec_label_pc_45ff06
  %49 = getelementptr inbounds %_cpinfo.647, %_cpinfo.647* %cpInfo_-28, i32 0, i32 0, !insn.addr !8795
  %50 = load i32, i32* %49, align 8, !insn.addr !8795
  %51 = icmp ult i32 %50, 2, !insn.addr !8795
  %52 = load i8, i8* %stack_var_-22, align 1, !insn.addr !8796
  %53 = icmp eq i8 %52, 0, !insn.addr !8796
  %or.cond11 = or i1 %51, %53
  br i1 %or.cond11, label %dec_label_pc_460096, label %dec_label_pc_45ff19, !insn.addr !8797

dec_label_pc_45ff19:                              ; preds = %dec_label_pc_45ff0a
  %54 = ptrtoint i8* %stack_var_-22 to i32, !insn.addr !8798
  store i32 %54, i32* %eax.3.reg2mem, !insn.addr !8799
  br label %dec_label_pc_45ff1c, !insn.addr !8799

dec_label_pc_45ff1c:                              ; preds = %dec_label_pc_45ff31, %dec_label_pc_45ff19
  %eax.3.reload = load i32, i32* %eax.3.reg2mem
  %55 = add i32 %eax.3.reload, 1, !insn.addr !8800
  %56 = inttoptr i32 %55 to i8*, !insn.addr !8800
  %57 = load i8, i8* %56, align 1, !insn.addr !8800
  %58 = icmp eq i8 %57, 0, !insn.addr !8801
  br i1 %58, label %dec_label_pc_460096, label %dec_label_pc_45ff23, !insn.addr !8802

dec_label_pc_45ff23:                              ; preds = %dec_label_pc_45ff1c
  %59 = load i8, i8* %lpString2, align 1, !insn.addr !8803
  %60 = inttoptr i32 %eax.3.reload to i8*, !insn.addr !8804
  %61 = load i8, i8* %60, align 1, !insn.addr !8804
  %62 = icmp ult i8 %59, %61, !insn.addr !8804
  %63 = icmp ugt i8 %59, %57
  %or.cond12 = or i1 %63, %62
  store i32 %24, i32* %esp.12.reg2mem, !insn.addr !8805
  br i1 %or.cond12, label %dec_label_pc_45ff31, label %dec_label_pc_46008d, !insn.addr !8805

dec_label_pc_45ff31:                              ; preds = %dec_label_pc_45ff23
  %64 = add i32 %eax.3.reload, 2, !insn.addr !8806
  %65 = inttoptr i32 %64 to i8*, !insn.addr !8807
  %66 = load i8, i8* %65, align 1, !insn.addr !8807
  %67 = icmp eq i8 %66, 0, !insn.addr !8807
  %68 = icmp eq i1 %67, false, !insn.addr !8808
  store i32 %64, i32* %eax.3.reg2mem, !insn.addr !8808
  br i1 %68, label %dec_label_pc_45ff1c, label %dec_label_pc_460096, !insn.addr !8808

dec_label_pc_45ff41:                              ; preds = %dec_label_pc_45fe99, %dec_label_pc_45ff06
  %esp.3.reload = load i32, i32* %esp.3.reg2mem
  %69 = add i32 %esp.3.reload, -4
  %70 = inttoptr i32 %69 to i32*
  store i32 0, i32* %70, align 4, !insn.addr !8809
  %71 = add i32 %esp.3.reload, -8, !insn.addr !8810
  %72 = inttoptr i32 %71 to i32*, !insn.addr !8810
  store i32 0, i32* %72, align 4, !insn.addr !8810
  %73 = add i32 %esp.3.reload, -12, !insn.addr !8811
  %74 = inttoptr i32 %73 to i32*, !insn.addr !8811
  store i32 %esi.0.reload, i32* %74, align 4, !insn.addr !8811
  %75 = ptrtoint i8* %lpString1 to i32, !insn.addr !8812
  %76 = add i32 %esp.3.reload, -16, !insn.addr !8812
  %77 = inttoptr i32 %76 to i32*, !insn.addr !8812
  store i32 %75, i32* %77, align 4, !insn.addr !8812
  %78 = add i32 %esp.3.reload, -20, !insn.addr !8813
  %79 = inttoptr i32 %78 to i32*, !insn.addr !8813
  store i32 9, i32* %79, align 4, !insn.addr !8813
  %80 = add i32 %esp.3.reload, -24, !insn.addr !8814
  %81 = inttoptr i32 %80 to i32*, !insn.addr !8814
  store i32 %stack_var_32.0.reload, i32* %81, align 4, !insn.addr !8814
  %82 = call i32 @function_401712(), !insn.addr !8815
  %83 = icmp eq i32 %82, 0, !insn.addr !8816
  br i1 %83, label %dec_label_pc_460096, label %dec_label_pc_45ff61, !insn.addr !8817

dec_label_pc_45ff61:                              ; preds = %dec_label_pc_45ff41
  %84 = mul i32 %82, 2, !insn.addr !8818
  %85 = add i32 %84, 8, !insn.addr !8819
  %86 = icmp ugt i32 %84, -9, !insn.addr !8820
  %87 = icmp eq i32 %85, 0
  %88 = or i1 %86, %87, !insn.addr !8821
  store i32* %70, i32** %.pre-phi15.reg2mem, !insn.addr !8822
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !8822
  br i1 %88, label %dec_label_pc_460082, label %dec_label_pc_45ff6f, !insn.addr !8822

dec_label_pc_45ff6f:                              ; preds = %dec_label_pc_45ff61
  %89 = icmp ult i32 %85, 1025
  br i1 %89, label %dec_label_pc_45ff76, label %dec_label_pc_45ff90, !insn.addr !8823

dec_label_pc_45ff76:                              ; preds = %dec_label_pc_45ff6f
  call void @_alloca_probe_16(), !insn.addr !8824
  %90 = inttoptr i32 %esp.3.reload to i32*, !insn.addr !8825
  store i32 52428, i32* %90, align 4, !insn.addr !8825
  store i32 %esp.3.reload, i32* %eax.4.reg2mem, !insn.addr !8826
  br label %dec_label_pc_45ffb5, !insn.addr !8826

dec_label_pc_45ff90:                              ; preds = %dec_label_pc_45ff6f
  store i32 %85, i32* %70, align 4, !insn.addr !8827
  %91 = call i32* @_malloc_base(i32 %82), !insn.addr !8828
  %92 = ptrtoint i32* %91 to i32, !insn.addr !8828
  %93 = icmp eq i32* %91, null, !insn.addr !8829
  store i32* %70, i32** %.pre-phi15.reg2mem, !insn.addr !8830
  store i32 %92, i32* %ebx.2.reg2mem, !insn.addr !8830
  br i1 %93, label %dec_label_pc_460082, label %dec_label_pc_45ffa2, !insn.addr !8830

dec_label_pc_45ffa2:                              ; preds = %dec_label_pc_45ff90
  store i32 56797, i32* %91, align 4, !insn.addr !8831
  store i32 %92, i32* %eax.4.reg2mem, !insn.addr !8831
  br label %dec_label_pc_45ffb5, !insn.addr !8831

dec_label_pc_45ffb5:                              ; preds = %dec_label_pc_45ff76, %dec_label_pc_45ffa2
  %eax.4.reload = load i32, i32* %eax.4.reg2mem
  %94 = add i32 %eax.4.reload, 8, !insn.addr !8832
  %95 = icmp eq i32 %94, 0, !insn.addr !8833
  store i32* %70, i32** %.pre-phi15.reg2mem, !insn.addr !8834
  store i32 0, i32* %ebx.2.reg2mem, !insn.addr !8834
  br i1 %95, label %dec_label_pc_460082, label %dec_label_pc_45ffbd, !insn.addr !8834

dec_label_pc_45ffbd:                              ; preds = %dec_label_pc_45ffb5
  store i32 %82, i32* %70, align 4, !insn.addr !8835
  store i32 %94, i32* %72, align 4, !insn.addr !8836
  store i32 %esi.0.reload, i32* %74, align 4, !insn.addr !8837
  store i32 %75, i32* %77, align 4, !insn.addr !8838
  store i32 1, i32* %79, align 4, !insn.addr !8839
  store i32 %stack_var_32.0.reload, i32* %81, align 4, !insn.addr !8840
  %96 = call i32 @function_401712(), !insn.addr !8841
  %97 = icmp eq i32 %96, 0, !insn.addr !8842
  store i32* %70, i32** %.pre-phi15.reg2mem, !insn.addr !8843
  store i32 %94, i32* %ebx.2.reg2mem, !insn.addr !8843
  br i1 %97, label %dec_label_pc_460082, label %dec_label_pc_45ffdb, !insn.addr !8843

dec_label_pc_45ffdb:                              ; preds = %dec_label_pc_45ffbd
  store i32 0, i32* %70, align 4, !insn.addr !8844
  store i32 0, i32* %72, align 4, !insn.addr !8845
  store i32 %ebx.0.reload, i32* %74, align 4, !insn.addr !8846
  %98 = ptrtoint i8* %lpString2 to i32, !insn.addr !8847
  store i32 %98, i32* %77, align 4, !insn.addr !8847
  store i32 9, i32* %79, align 4, !insn.addr !8848
  store i32 %stack_var_32.0.reload, i32* %81, align 4, !insn.addr !8849
  %99 = call i32 @function_401712(), !insn.addr !8850
  %100 = icmp eq i32 %99, 0, !insn.addr !8851
  store i32* %70, i32** %.pre-phi15.reg2mem, !insn.addr !8852
  store i32 %94, i32* %ebx.2.reg2mem, !insn.addr !8852
  br i1 %100, label %dec_label_pc_460082, label %dec_label_pc_45fff7, !insn.addr !8852

dec_label_pc_45fff7:                              ; preds = %dec_label_pc_45ffdb
  %101 = mul i32 %99, 2, !insn.addr !8853
  %102 = add i32 %101, 8, !insn.addr !8854
  %103 = icmp ugt i32 %101, -9, !insn.addr !8855
  %104 = icmp eq i32 %102, 0
  %105 = or i1 %103, %104, !insn.addr !8856
  store i32* %70, i32** %.pre-phi18.reg2mem, !insn.addr !8857
  store i32 0, i32* %esi.3.reg2mem, !insn.addr !8857
  br i1 %105, label %dec_label_pc_460076, label %dec_label_pc_460005, !insn.addr !8857

dec_label_pc_460005:                              ; preds = %dec_label_pc_45fff7
  %106 = icmp ult i32 %102, 1025
  br i1 %106, label %dec_label_pc_46000c, label %dec_label_pc_46001f, !insn.addr !8858

dec_label_pc_46000c:                              ; preds = %dec_label_pc_460005
  call void @_alloca_probe_16(), !insn.addr !8859
  %107 = inttoptr i32 %esp.3.reload to i32*, !insn.addr !8860
  store i32 52428, i32* %107, align 4, !insn.addr !8860
  store i32 %esp.3.reload, i32* %esi.1.reg2mem, !insn.addr !8861
  br label %dec_label_pc_460039, !insn.addr !8861

dec_label_pc_46001f:                              ; preds = %dec_label_pc_460005
  store i32 %102, i32* %70, align 4, !insn.addr !8862
  %108 = call i32* @_malloc_base(i32 %99), !insn.addr !8863
  %109 = ptrtoint i32* %108 to i32, !insn.addr !8863
  %110 = icmp eq i32* %108, null, !insn.addr !8864
  store i32* %70, i32** %.pre-phi18.reg2mem, !insn.addr !8865
  store i32 %109, i32* %esi.3.reg2mem, !insn.addr !8865
  br i1 %110, label %dec_label_pc_460076, label %dec_label_pc_46002c, !insn.addr !8865

dec_label_pc_46002c:                              ; preds = %dec_label_pc_46001f
  store i32 56797, i32* %108, align 4, !insn.addr !8866
  store i32 %109, i32* %esi.1.reg2mem, !insn.addr !8866
  br label %dec_label_pc_460039, !insn.addr !8866

dec_label_pc_460039:                              ; preds = %dec_label_pc_46000c, %dec_label_pc_46002c
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %111 = add i32 %esi.1.reload, 8, !insn.addr !8867
  %112 = icmp eq i32 %111, 0, !insn.addr !8868
  store i32* %70, i32** %.pre-phi18.reg2mem, !insn.addr !8869
  store i32 0, i32* %esi.3.reg2mem, !insn.addr !8869
  br i1 %112, label %dec_label_pc_460076, label %dec_label_pc_46003d, !insn.addr !8869

dec_label_pc_46003d:                              ; preds = %dec_label_pc_460039
  store i32 %99, i32* %70, align 4, !insn.addr !8870
  store i32 %111, i32* %72, align 4, !insn.addr !8871
  store i32 %ebx.0.reload, i32* %74, align 4, !insn.addr !8872
  store i32 %98, i32* %77, align 4, !insn.addr !8873
  store i32 1, i32* %79, align 4, !insn.addr !8874
  store i32 %stack_var_32.0.reload, i32* %81, align 4, !insn.addr !8875
  %113 = call i32 @function_401712(), !insn.addr !8876
  %114 = icmp eq i32 %113, 0, !insn.addr !8877
  store i32* %70, i32** %.pre-phi18.reg2mem, !insn.addr !8878
  store i32 %111, i32* %esi.3.reg2mem, !insn.addr !8878
  br i1 %114, label %dec_label_pc_460076, label %dec_label_pc_460056, !insn.addr !8878

dec_label_pc_460056:                              ; preds = %dec_label_pc_46003d
  store i32 0, i32* %70, align 4, !insn.addr !8879
  store i32 0, i32* %72, align 4, !insn.addr !8880
  store i32 0, i32* %74, align 4, !insn.addr !8881
  store i32 %99, i32* %77, align 4, !insn.addr !8882
  store i32 %111, i32* %79, align 4, !insn.addr !8883
  store i32 %82, i32* %81, align 4, !insn.addr !8884
  %115 = add i32 %esp.3.reload, -28, !insn.addr !8885
  %116 = inttoptr i32 %115 to i32*, !insn.addr !8885
  store i32 %94, i32* %116, align 4, !insn.addr !8885
  %117 = add i32 %esp.3.reload, -32, !insn.addr !8886
  %118 = inttoptr i32 %117 to i32*, !insn.addr !8886
  store i32 %dwCmpFlags, i32* %118, align 4, !insn.addr !8886
  %119 = ptrtoint i16* %LocaleName to i32, !insn.addr !8887
  %120 = add i32 %esp.3.reload, -36, !insn.addr !8887
  %121 = inttoptr i32 %120 to i32*, !insn.addr !8887
  store i32 %119, i32* %121, align 4, !insn.addr !8887
  %122 = call i32 @function_403233(), !insn.addr !8888
  %.pre = add i32 %esp.3.reload, -40
  %.pre17 = inttoptr i32 %.pre to i32*
  store i32* %.pre17, i32** %.pre-phi18.reg2mem, !insn.addr !8889
  store i32 %111, i32* %esi.3.reg2mem, !insn.addr !8889
  br label %dec_label_pc_460076, !insn.addr !8889

dec_label_pc_460076:                              ; preds = %dec_label_pc_45fff7, %dec_label_pc_46001f, %dec_label_pc_460039, %dec_label_pc_46003d, %dec_label_pc_460056
  %esi.3.reload = load i32, i32* %esi.3.reg2mem
  %.pre-phi18.reload = load i32*, i32** %.pre-phi18.reg2mem
  store i32 %esi.3.reload, i32* %.pre-phi18.reload, align 4, !insn.addr !8890
  %123 = call i32 @function_40125d(), !insn.addr !8891
  store i32* %.pre-phi18.reload, i32** %.pre-phi15.reg2mem, !insn.addr !8892
  store i32 %94, i32* %ebx.2.reg2mem, !insn.addr !8892
  br label %dec_label_pc_460082, !insn.addr !8892

dec_label_pc_460082:                              ; preds = %dec_label_pc_45ff61, %dec_label_pc_45ff90, %dec_label_pc_45ffb5, %dec_label_pc_45ffbd, %dec_label_pc_45ffdb, %dec_label_pc_460076
  %ebx.2.reload = load i32, i32* %ebx.2.reg2mem
  %.pre-phi15.reload = load i32*, i32** %.pre-phi15.reg2mem
  store i32 %ebx.2.reload, i32* %.pre-phi15.reload, align 4, !insn.addr !8893
  %124 = call i32 @function_40125d(), !insn.addr !8894
  br label %dec_label_pc_460096, !insn.addr !8895

dec_label_pc_46008d:                              ; preds = %dec_label_pc_45fee8, %dec_label_pc_45ff23, %dec_label_pc_45fea5
  %esp.12.reload = load i32, i32* %esp.12.reg2mem
  %125 = add i32 %esp.12.reload, -4, !insn.addr !8896
  %126 = inttoptr i32 %125 to i32*, !insn.addr !8896
  store i32 2, i32* %126, align 4, !insn.addr !8896
  br label %dec_label_pc_460096, !insn.addr !8897

dec_label_pc_460096:                              ; preds = %dec_label_pc_45ff1c, %dec_label_pc_45ff31, %dec_label_pc_45fefe, %dec_label_pc_46008d, %dec_label_pc_45fe61, %dec_label_pc_45fe7e, %dec_label_pc_45febb, %dec_label_pc_45ff41, %dec_label_pc_45fead, %dec_label_pc_45ff0a, %dec_label_pc_460082
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !8898
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !8899
}

define i32 @__acrt_CompareStringA(i32 %locale, i16* %locale_name, i32 %compare_flags, i8* %string1, i32 %string1_count, i8* %string2, i32 %string2_count, i32 %code_page) local_unnamed_addr {
dec_label_pc_46014a:
  %0 = call i8 @__decompiler_undefined_function_7()
  %locale_update_-16 = alloca i32, align 4
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @function_403d78(i32 %locale), !insn.addr !8900
  %3 = ptrtoint i32* %locale_update_-16 to i32, !insn.addr !8901
  %4 = call i32 @InternalCompareStringA(i32 %3, i16* %locale_name, i32 %compare_flags, i8* %string1, i32 %string1_count, i8* %string2, i32 %string2_count, i32 %code_page), !insn.addr !8902
  %5 = icmp eq i8 %0, 0, !insn.addr !8903
  br i1 %5, label %dec_label_pc_46018e, label %dec_label_pc_460184, !insn.addr !8904

dec_label_pc_460184:                              ; preds = %dec_label_pc_46014a
  %6 = add i32 %1, 848, !insn.addr !8905
  %7 = inttoptr i32 %6 to i32*, !insn.addr !8905
  %8 = load i32, i32* %7, align 4, !insn.addr !8905
  %9 = and i32 %8, -3, !insn.addr !8905
  store i32 %9, i32* %7, align 4, !insn.addr !8905
  br label %dec_label_pc_46018e, !insn.addr !8905

dec_label_pc_46018e:                              ; preds = %dec_label_pc_460184, %dec_label_pc_46014a
  ret i32 %4, !insn.addr !8906
}

define i32 @__acrt_LCMapStringA_stat(i32 %plocinfo, i16* %LocaleName, i32 %dwMapFlags, i8* %lpSrcStr, i32 %cchSrc, i8* %lpDestStr, i32 %cchDest, i32 %code_page, i32 %bError) local_unnamed_addr {
dec_label_pc_460a93:
  %esp.7.reg2mem = alloca i32, !insn.addr !8907
  %ebx.214.reg2mem = alloca i32, !insn.addr !8907
  %edi.2.reg2mem = alloca i32, !insn.addr !8907
  %esp.5.reg2mem = alloca i32, !insn.addr !8907
  %edi.1.reg2mem = alloca i32, !insn.addr !8907
  %ebx.2.reg2mem = alloca i32, !insn.addr !8907
  %ebx.0.reg2mem = alloca i32, !insn.addr !8907
  %stack_var_-96 = alloca i16*, align 4
  %stack_var_-60 = alloca i16*, align 4
  %stack_var_-24 = alloca i32, align 4
  %0 = icmp slt i32 %cchSrc, 1
  br i1 %0, label %dec_label_pc_460ac2, label %dec_label_pc_460aae, !insn.addr !8908

dec_label_pc_460aae:                              ; preds = %dec_label_pc_460a93
  %1 = call i32 @__strncnt(i8* %lpSrcStr, i32 %cchSrc), !insn.addr !8909
  br label %dec_label_pc_460ac2

dec_label_pc_460ac2:                              ; preds = %dec_label_pc_460aae, %dec_label_pc_460a93
  %2 = call i32 @function_401712(), !insn.addr !8910
  %3 = icmp eq i32 %2, 0, !insn.addr !8911
  br i1 %3, label %dec_label_pc_460c5a, label %dec_label_pc_460b02, !insn.addr !8912

dec_label_pc_460b02:                              ; preds = %dec_label_pc_460ac2
  %4 = ptrtoint i32* %stack_var_-24 to i32, !insn.addr !8913
  %5 = mul i32 %2, 2, !insn.addr !8914
  %6 = add i32 %5, 8, !insn.addr !8915
  %7 = icmp ult i32 %5, -8, !insn.addr !8916
  %8 = zext i1 %7 to i32, !insn.addr !8917
  %9 = or i32 %5, %8, !insn.addr !8917
  %10 = sub i32 %5, %9, !insn.addr !8917
  %11 = and i32 %10, %6, !insn.addr !8918
  %12 = icmp eq i32 %11, 0, !insn.addr !8918
  store i32 0, i32* %ebx.214.reg2mem, !insn.addr !8919
  store i32 %4, i32* %esp.7.reg2mem, !insn.addr !8919
  br i1 %12, label %dec_label_pc_460c51, label %dec_label_pc_460b10, !insn.addr !8919

dec_label_pc_460b10:                              ; preds = %dec_label_pc_460b02
  %13 = icmp ult i32 %11, 1025
  br i1 %13, label %dec_label_pc_460b17, label %dec_label_pc_460b2a, !insn.addr !8920

dec_label_pc_460b17:                              ; preds = %dec_label_pc_460b10
  call void @_alloca_probe_16(), !insn.addr !8921
  store i32 52428, i32* %stack_var_-24, align 4, !insn.addr !8922
  store i32 %4, i32* %ebx.0.reg2mem, !insn.addr !8923
  br label %dec_label_pc_460b3d, !insn.addr !8923

dec_label_pc_460b2a:                              ; preds = %dec_label_pc_460b10
  %14 = call i32* @_malloc_base(i32 %11), !insn.addr !8924
  %15 = ptrtoint i32* %14 to i32, !insn.addr !8924
  %16 = icmp eq i32* %14, null, !insn.addr !8925
  store i32 %15, i32* %ebx.2.reg2mem, !insn.addr !8926
  br i1 %16, label %dec_label_pc_460b47, label %dec_label_pc_460b37, !insn.addr !8926

dec_label_pc_460b37:                              ; preds = %dec_label_pc_460b2a
  store i32 56797, i32* %14, align 4, !insn.addr !8927
  store i32 %15, i32* %ebx.0.reg2mem, !insn.addr !8927
  br label %dec_label_pc_460b3d, !insn.addr !8927

dec_label_pc_460b3d:                              ; preds = %dec_label_pc_460b37, %dec_label_pc_460b17
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  %17 = add i32 %ebx.0.reload, 8, !insn.addr !8928
  store i32 %17, i32* %ebx.2.reg2mem, !insn.addr !8928
  br label %dec_label_pc_460b47, !insn.addr !8928

dec_label_pc_460b47:                              ; preds = %dec_label_pc_460b2a, %dec_label_pc_460b3d
  %ebx.2.reload = load i32, i32* %ebx.2.reg2mem
  %18 = icmp eq i32 %ebx.2.reload, 0, !insn.addr !8929
  store i32 0, i32* %ebx.214.reg2mem, !insn.addr !8930
  store i32 %4, i32* %esp.7.reg2mem, !insn.addr !8930
  br i1 %18, label %dec_label_pc_460c51, label %dec_label_pc_460b4f, !insn.addr !8930

dec_label_pc_460b4f:                              ; preds = %dec_label_pc_460b47
  %19 = call i32 @function_401712(), !insn.addr !8931
  %20 = icmp eq i32 %19, 0, !insn.addr !8932
  store i32 %ebx.2.reload, i32* %ebx.214.reg2mem, !insn.addr !8933
  store i32 %4, i32* %esp.7.reg2mem, !insn.addr !8933
  br i1 %20, label %dec_label_pc_460c51, label %dec_label_pc_460b68, !insn.addr !8933

dec_label_pc_460b68:                              ; preds = %dec_label_pc_460b4f
  %21 = ptrtoint i16* %LocaleName to i32
  %22 = bitcast i16** %stack_var_-60 to i32*
  store i32 %21, i32* %22, align 4
  %23 = ptrtoint i16** %stack_var_-60 to i32, !insn.addr !8934
  %24 = call i32 @"___acrt_LCMapStringEx@36"(i32 %21, i32 %dwMapFlags, i32 %ebx.2.reload, i32 %2, i32 0, i32 0, i32 0, i32 0, i32 0), !insn.addr !8935
  %25 = icmp eq i32 %24, 0, !insn.addr !8936
  store i32 %ebx.2.reload, i32* %ebx.214.reg2mem, !insn.addr !8937
  store i32 %23, i32* %esp.7.reg2mem, !insn.addr !8937
  br i1 %25, label %dec_label_pc_460c51, label %dec_label_pc_460b89, !insn.addr !8937

dec_label_pc_460b89:                              ; preds = %dec_label_pc_460b68
  %26 = and i32 %dwMapFlags, 1024, !insn.addr !8938
  %27 = icmp eq i32 %26, 0, !insn.addr !8938
  br i1 %27, label %dec_label_pc_460bcb, label %dec_label_pc_460b93, !insn.addr !8939

dec_label_pc_460b93:                              ; preds = %dec_label_pc_460b89
  %28 = icmp eq i32 %cchDest, 0, !insn.addr !8940
  %29 = icmp sgt i32 %24, %cchDest, !insn.addr !8941
  %or.cond = or i1 %28, %29
  store i32 %ebx.2.reload, i32* %ebx.214.reg2mem, !insn.addr !8942
  store i32 %23, i32* %esp.7.reg2mem, !insn.addr !8942
  br i1 %or.cond, label %dec_label_pc_460c51, label %dec_label_pc_460ba6, !insn.addr !8942

dec_label_pc_460ba6:                              ; preds = %dec_label_pc_460b93
  %30 = ptrtoint i8* %lpDestStr to i32
  %31 = bitcast i16** %stack_var_-96 to i32*
  store i32 %21, i32* %31, align 4
  %32 = ptrtoint i16** %stack_var_-96 to i32, !insn.addr !8943
  %33 = call i32 @"___acrt_LCMapStringEx@36"(i32 %21, i32 %dwMapFlags, i32 %ebx.2.reload, i32 %2, i32 %30, i32 %cchDest, i32 0, i32 0, i32 0), !insn.addr !8944
  store i32 %ebx.2.reload, i32* %ebx.214.reg2mem
  store i32 %32, i32* %esp.7.reg2mem
  br label %dec_label_pc_460c51

dec_label_pc_460bcb:                              ; preds = %dec_label_pc_460b89
  %34 = mul i32 %24, 2, !insn.addr !8945
  %35 = add i32 %34, 8, !insn.addr !8946
  %36 = icmp ult i32 %34, -8, !insn.addr !8947
  %37 = zext i1 %36 to i32, !insn.addr !8948
  %38 = or i32 %34, %37, !insn.addr !8948
  %39 = sub i32 %34, %38, !insn.addr !8948
  %40 = and i32 %39, %35, !insn.addr !8949
  %41 = icmp eq i32 %40, 0, !insn.addr !8949
  store i32 %23, i32* %esp.5.reg2mem, !insn.addr !8950
  store i32 0, i32* %edi.2.reg2mem, !insn.addr !8950
  br i1 %41, label %dec_label_pc_460c48, label %dec_label_pc_460bd9, !insn.addr !8950

dec_label_pc_460bd9:                              ; preds = %dec_label_pc_460bcb
  %42 = icmp ugt i32 %40, 1024
  br i1 %42, label %dec_label_pc_460bf0, label %dec_label_pc_460bdd, !insn.addr !8951

dec_label_pc_460bdd:                              ; preds = %dec_label_pc_460bd9
  call void @_alloca_probe_16(), !insn.addr !8952
  store i16* inttoptr (i32 52428 to i16*), i16** %stack_var_-60, align 4, !insn.addr !8953
  store i32 %23, i32* %edi.1.reg2mem, !insn.addr !8954
  br label %dec_label_pc_460c0a, !insn.addr !8954

dec_label_pc_460bf0:                              ; preds = %dec_label_pc_460bd9
  %43 = call i32* @_malloc_base(i32 %40), !insn.addr !8955
  %44 = ptrtoint i32* %43 to i32, !insn.addr !8955
  %45 = icmp eq i32* %43, null, !insn.addr !8956
  store i32 %23, i32* %esp.5.reg2mem, !insn.addr !8957
  store i32 %44, i32* %edi.2.reg2mem, !insn.addr !8957
  br i1 %45, label %dec_label_pc_460c48, label %dec_label_pc_460bfd, !insn.addr !8957

dec_label_pc_460bfd:                              ; preds = %dec_label_pc_460bf0
  store i32 56797, i32* %43, align 4, !insn.addr !8958
  store i32 %44, i32* %edi.1.reg2mem, !insn.addr !8958
  br label %dec_label_pc_460c0a, !insn.addr !8958

dec_label_pc_460c0a:                              ; preds = %dec_label_pc_460bdd, %dec_label_pc_460bfd
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %46 = add i32 %edi.1.reload, 8, !insn.addr !8959
  %47 = icmp eq i32 %46, 0, !insn.addr !8960
  store i32 %23, i32* %esp.5.reg2mem, !insn.addr !8961
  store i32 0, i32* %edi.2.reg2mem, !insn.addr !8961
  br i1 %47, label %dec_label_pc_460c48, label %dec_label_pc_460c0e, !insn.addr !8961

dec_label_pc_460c0e:                              ; preds = %dec_label_pc_460c0a
  %48 = bitcast i16** %stack_var_-96 to i32*
  store i32 %21, i32* %48, align 4
  %49 = ptrtoint i16** %stack_var_-96 to i32, !insn.addr !8962
  %50 = call i32 @"___acrt_LCMapStringEx@36"(i32 %21, i32 %dwMapFlags, i32 %ebx.2.reload, i32 %2, i32 %46, i32 %24, i32 0, i32 0, i32 0), !insn.addr !8963
  %51 = icmp eq i32 %50, 0, !insn.addr !8964
  store i32 %49, i32* %esp.5.reg2mem, !insn.addr !8965
  store i32 %46, i32* %edi.2.reg2mem, !insn.addr !8965
  br i1 %51, label %dec_label_pc_460c48, label %dec_label_pc_460c29, !insn.addr !8965

dec_label_pc_460c29:                              ; preds = %dec_label_pc_460c0e
  %52 = call i32 @function_404601(), !insn.addr !8966
  %53 = icmp eq i32 %52, 0, !insn.addr !8967
  %54 = icmp eq i1 %53, false, !insn.addr !8968
  store i32 %49, i32* %esp.5.reg2mem, !insn.addr !8968
  store i32 %46, i32* %edi.2.reg2mem, !insn.addr !8968
  br i1 %54, label %dec_label_pc_460c74, label %dec_label_pc_460c48, !insn.addr !8968

dec_label_pc_460c48:                              ; preds = %dec_label_pc_460bcb, %dec_label_pc_460c29, %dec_label_pc_460c0e, %dec_label_pc_460c0a, %dec_label_pc_460bf0
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %esp.5.reload = load i32, i32* %esp.5.reg2mem
  %55 = add i32 %esp.5.reload, -4, !insn.addr !8969
  %56 = inttoptr i32 %55 to i32*, !insn.addr !8969
  store i32 %edi.2.reload, i32* %56, align 4, !insn.addr !8969
  %57 = call i32 @function_40125d(), !insn.addr !8970
  store i32 %ebx.2.reload, i32* %ebx.214.reg2mem, !insn.addr !8971
  store i32 %esp.5.reload, i32* %esp.7.reg2mem, !insn.addr !8971
  br label %dec_label_pc_460c51, !insn.addr !8971

dec_label_pc_460c51:                              ; preds = %dec_label_pc_460b02, %dec_label_pc_460ba6, %dec_label_pc_460b47, %dec_label_pc_460b4f, %dec_label_pc_460b68, %dec_label_pc_460c48, %dec_label_pc_460c74, %dec_label_pc_460b93
  %esp.7.reload = load i32, i32* %esp.7.reg2mem
  %ebx.214.reload = load i32, i32* %ebx.214.reg2mem
  %58 = add i32 %esp.7.reload, -4, !insn.addr !8972
  %59 = inttoptr i32 %58 to i32*, !insn.addr !8972
  store i32 %ebx.214.reload, i32* %59, align 4, !insn.addr !8972
  %60 = call i32 @function_40125d(), !insn.addr !8973
  br label %dec_label_pc_460c5a, !insn.addr !8974

dec_label_pc_460c5a:                              ; preds = %dec_label_pc_460c51, %dec_label_pc_460ac2
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !8975
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !8976

dec_label_pc_460c74:                              ; preds = %dec_label_pc_460c29
  %61 = call i32 @function_40125d(), !insn.addr !8977
  store i32 %ebx.2.reload, i32* %ebx.214.reg2mem, !insn.addr !8978
  store i32 %49, i32* %esp.7.reg2mem, !insn.addr !8978
  br label %dec_label_pc_460c51, !insn.addr !8978
}

define i32 @__acrt_LCMapStringA(i32 %plocinfo, i16* %LocaleName, i32 %dwMapFlags, i8* %lpSrcStr, i32 %cchSrc, i8* %lpDestStr, i32 %cchDest, i32 %code_page, i32 %bError) local_unnamed_addr {
dec_label_pc_460cf7:
  %0 = call i8 @__decompiler_undefined_function_7()
  %_loc_update_-16 = alloca i32, align 4
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @function_403d78(i32 %plocinfo), !insn.addr !8979
  %3 = ptrtoint i32* %_loc_update_-16 to i32, !insn.addr !8980
  %4 = call i32 @__acrt_LCMapStringA_stat(i32 %3, i16* %LocaleName, i32 %dwMapFlags, i8* %lpSrcStr, i32 %cchSrc, i8* %lpDestStr, i32 %cchDest, i32 %code_page, i32 %bError), !insn.addr !8981
  %5 = icmp eq i8 %0, 0, !insn.addr !8982
  br i1 %5, label %dec_label_pc_460d3e, label %dec_label_pc_460d34, !insn.addr !8983

dec_label_pc_460d34:                              ; preds = %dec_label_pc_460cf7
  %6 = add i32 %1, 848, !insn.addr !8984
  %7 = inttoptr i32 %6 to i32*, !insn.addr !8984
  %8 = load i32, i32* %7, align 4, !insn.addr !8984
  %9 = and i32 %8, -3, !insn.addr !8984
  store i32 %9, i32* %7, align 4, !insn.addr !8984
  br label %dec_label_pc_460d3e, !insn.addr !8984

dec_label_pc_460d3e:                              ; preds = %dec_label_pc_460d34, %dec_label_pc_460cf7
  ret i32 %4, !insn.addr !8985
}

define i32 @__acrt_SetEnvironmentVariableA(i8* %lpName, i8* %lpValue) local_unnamed_addr {
dec_label_pc_460e6b:
  %ebx.0.reg2mem = alloca i32, !insn.addr !8986
  %0 = call i32 @function_402ae5(), !insn.addr !8987
  %1 = call i32 @function_403733(), !insn.addr !8988
  %2 = icmp eq i32 %1, 0, !insn.addr !8989
  %3 = icmp eq i1 %2, false, !insn.addr !8990
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !8990
  br i1 %3, label %dec_label_pc_460efa, label %dec_label_pc_460eb6, !insn.addr !8990

dec_label_pc_460eb6:                              ; preds = %dec_label_pc_460e6b
  %4 = call i32 @function_402ae5(), !insn.addr !8991
  %5 = call i32 @function_403733(), !insn.addr !8992
  %6 = icmp eq i32 %5, 0, !insn.addr !8993
  %7 = icmp eq i1 %6, false, !insn.addr !8994
  store i32 0, i32* %ebx.0.reg2mem, !insn.addr !8994
  br i1 %7, label %dec_label_pc_460efa, label %dec_label_pc_460ed2, !insn.addr !8994

dec_label_pc_460ed2:                              ; preds = %dec_label_pc_460eb6
  %8 = call i1 @SetEnvironmentVariableW(i16* null, i16* null), !insn.addr !8995
  %9 = sext i1 %8 to i32, !insn.addr !8995
  store i32 %9, i32* %ebx.0.reg2mem, !insn.addr !8996
  br label %dec_label_pc_460efa, !insn.addr !8996

dec_label_pc_460efa:                              ; preds = %dec_label_pc_460ed2, %dec_label_pc_460eb6, %dec_label_pc_460e6b
  %ebx.0.reload = load i32, i32* %ebx.0.reg2mem
  ret i32 %ebx.0.reload, !insn.addr !8997
}

define i64 @"common_lseek<__int64>"(i32 %fh, i64 %offset, i32 %origin) local_unnamed_addr {
dec_label_pc_4622a8:
  %esi.1.reg2mem = alloca i32, !insn.addr !8998
  %esi.0.reg2mem = alloca i32, !insn.addr !8998
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_401b4f(i32* nonnull @global_var_47a9b8, i32 24), !insn.addr !8999
  %2 = add i32 %0, 8, !insn.addr !9000
  %3 = inttoptr i32 %2 to i32*, !insn.addr !9000
  %4 = load i32, i32* %3, align 4, !insn.addr !9000
  %5 = icmp eq i32 %4, -2, !insn.addr !9001
  %6 = icmp eq i1 %5, false, !insn.addr !9002
  br i1 %6, label %dec_label_pc_4622d4, label %dec_label_pc_4622bc, !insn.addr !9002

dec_label_pc_4622bc:                              ; preds = %dec_label_pc_4622a8
  %7 = call i32* @__doserrno(), !insn.addr !9003
  store i32 0, i32* %7, align 4, !insn.addr !9004
  %8 = call i32* @_errno(), !insn.addr !9005
  store i32 9, i32* %8, align 4, !insn.addr !9006
  store i32 -1, i32* %esi.1.reg2mem, !insn.addr !9007
  br label %dec_label_pc_4623a2, !insn.addr !9007

dec_label_pc_4622d4:                              ; preds = %dec_label_pc_4622a8
  %9 = icmp slt i32 %4, 0, !insn.addr !9008
  br i1 %9, label %dec_label_pc_462385, label %dec_label_pc_4622dc, !insn.addr !9009

dec_label_pc_4622dc:                              ; preds = %dec_label_pc_4622d4
  %10 = load i32, i32* @_nhandle, align 4, !insn.addr !9010
  %11 = icmp ult i32 %4, %10, !insn.addr !9010
  %12 = icmp eq i1 %11, false, !insn.addr !9011
  br i1 %12, label %dec_label_pc_462385, label %dec_label_pc_4622e8, !insn.addr !9011

dec_label_pc_4622e8:                              ; preds = %dec_label_pc_4622dc
  %13 = udiv i32 %4, 64
  %14 = add i32 %0, -28, !insn.addr !9012
  %15 = inttoptr i32 %14 to i32*, !insn.addr !9012
  store i32 %13, i32* %15, align 4, !insn.addr !9012
  %16 = and i32 %4, 63, !insn.addr !9013
  %narrow = mul nuw nsw i32 %16, 56
  %17 = add i32 %0, -32, !insn.addr !9014
  %18 = inttoptr i32 %17 to i32*, !insn.addr !9014
  store i32 %narrow, i32* %18, align 4, !insn.addr !9014
  %19 = mul i32 %13, 4, !insn.addr !9015
  %20 = add i32 %19, ptrtoint (i32* @__pioinfo to i32), !insn.addr !9015
  %21 = inttoptr i32 %20 to i32*, !insn.addr !9015
  %22 = load i32, i32* %21, align 4, !insn.addr !9015
  %23 = add nuw nsw i32 %narrow, 40, !insn.addr !9016
  %24 = add i32 %23, %22, !insn.addr !9016
  %25 = inttoptr i32 %24 to i8*, !insn.addr !9016
  %26 = load i8, i8* %25, align 1, !insn.addr !9016
  %27 = and i8 %26, 1, !insn.addr !9016
  %28 = icmp eq i8 %27, 0, !insn.addr !9016
  br i1 %28, label %dec_label_pc_462385, label %dec_label_pc_462309, !insn.addr !9017

dec_label_pc_462309:                              ; preds = %dec_label_pc_4622e8
  %29 = call i32 @function_40132f(), !insn.addr !9018
  %30 = add i32 %0, -40, !insn.addr !9019
  %31 = inttoptr i32 %30 to i32*, !insn.addr !9019
  store i32 -1, i32* %31, align 4, !insn.addr !9019
  %32 = add i32 %0, -36, !insn.addr !9020
  %33 = inttoptr i32 %32 to i32*, !insn.addr !9020
  store i32 -1, i32* %33, align 4, !insn.addr !9020
  %34 = add i32 %0, -4, !insn.addr !9021
  %35 = inttoptr i32 %34 to i32*, !insn.addr !9021
  store i32 0, i32* %35, align 4, !insn.addr !9021
  %36 = load i32, i32* %15, align 4, !insn.addr !9022
  %37 = mul i32 %36, 4, !insn.addr !9023
  %38 = add i32 %37, ptrtoint (i32* @__pioinfo to i32), !insn.addr !9023
  %39 = inttoptr i32 %38 to i32*, !insn.addr !9023
  %40 = load i32, i32* %39, align 4, !insn.addr !9023
  %41 = load i32, i32* %18, align 4, !insn.addr !9024
  %42 = add i32 %40, 40, !insn.addr !9025
  %43 = add i32 %42, %41, !insn.addr !9025
  %44 = inttoptr i32 %43 to i8*, !insn.addr !9025
  %45 = load i8, i8* %44, align 1, !insn.addr !9025
  %46 = and i8 %45, 1, !insn.addr !9025
  %47 = icmp eq i8 %46, 0, !insn.addr !9025
  %48 = icmp eq i1 %47, false, !insn.addr !9026
  br i1 %48, label %dec_label_pc_462348, label %dec_label_pc_462333, !insn.addr !9026

dec_label_pc_462333:                              ; preds = %dec_label_pc_462309
  %49 = call i32* @_errno(), !insn.addr !9027
  store i32 9, i32* %49, align 4, !insn.addr !9028
  %50 = call i32* @__doserrno(), !insn.addr !9029
  store i32 0, i32* %50, align 4, !insn.addr !9030
  store i32 -1, i32* %esi.0.reg2mem, !insn.addr !9031
  br label %dec_label_pc_462364, !insn.addr !9031

dec_label_pc_462348:                              ; preds = %dec_label_pc_462309
  %51 = add i32 %0, 16, !insn.addr !9032
  %52 = inttoptr i32 %51 to i32*, !insn.addr !9032
  %53 = load i32, i32* %52, align 4, !insn.addr !9032
  %54 = add i32 %0, 12, !insn.addr !9033
  %55 = inttoptr i32 %54 to i32*, !insn.addr !9033
  %56 = load i32, i32* %55, align 4, !insn.addr !9033
  %57 = sext i32 %56 to i64, !insn.addr !9034
  %58 = call i64 @"common_lseek_nolock<__int64>"(i32 %4, i64 %57, i32 %53), !insn.addr !9034
  %59 = trunc i64 %58 to i32, !insn.addr !9034
  store i32 %59, i32* %31, align 4, !insn.addr !9035
  store i32 %narrow, i32* %33, align 4, !insn.addr !9036
  store i32 %59, i32* %esi.0.reg2mem, !insn.addr !9036
  br label %dec_label_pc_462364, !insn.addr !9036

dec_label_pc_462364:                              ; preds = %dec_label_pc_462348, %dec_label_pc_462333
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  store i32 -2, i32* %35, align 4, !insn.addr !9037
  %60 = call i32 @function_46237d(), !insn.addr !9038
  store i32 %esi.0.reload, i32* %esi.1.reg2mem, !insn.addr !9039
  br label %dec_label_pc_4623a2, !insn.addr !9039

dec_label_pc_462385:                              ; preds = %dec_label_pc_4622e8, %dec_label_pc_4622dc, %dec_label_pc_4622d4
  %61 = call i32* @__doserrno(), !insn.addr !9040
  store i32 0, i32* %61, align 4, !insn.addr !9041
  %62 = call i32* @_errno(), !insn.addr !9042
  store i32 9, i32* %62, align 4, !insn.addr !9043
  call void @_invalid_parameter_noinfo(), !insn.addr !9044
  store i32 -1, i32* %esi.1.reg2mem, !insn.addr !9044
  br label %dec_label_pc_4623a2, !insn.addr !9044

dec_label_pc_4623a2:                              ; preds = %dec_label_pc_4622bc, %dec_label_pc_462385, %dec_label_pc_462364
  %esi.1.reload = load i32, i32* %esi.1.reg2mem
  %63 = add i32 %0, -16, !insn.addr !9045
  %64 = inttoptr i32 %63 to i32*, !insn.addr !9045
  %65 = load i32, i32* %64, align 4, !insn.addr !9045
  call void @__writefsdword(i32 0, i32 %65), !insn.addr !9046
  %66 = sext i32 %esi.1.reload to i64, !insn.addr !9047
  ret i64 %66, !insn.addr !9047
}

define i32 @function_46237d() local_unnamed_addr {
dec_label_pc_46237d:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @function_4011db(i32 %0), !insn.addr !9048
  ret i32 %1, !insn.addr !9049
}

define i64 @"common_lseek_nolock<__int64>"(i32 %fh, i64 %offset, i32 %origin) local_unnamed_addr {
dec_label_pc_462463:
  %eax.0.reg2mem = alloca i64, !insn.addr !9050
  %0 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i64, align 8
  %1 = sext i32 %0 to i64, !insn.addr !9051
  store i64 %1, i64* %stack_var_-12, align 8, !insn.addr !9051
  %2 = call i32 @_get_osfhandle(i32 %fh), !insn.addr !9052
  %3 = icmp eq i32 %2, -1, !insn.addr !9053
  %4 = icmp eq i1 %3, false, !insn.addr !9054
  br i1 %4, label %dec_label_pc_46248e, label %dec_label_pc_46247d, !insn.addr !9054

dec_label_pc_46247d:                              ; preds = %dec_label_pc_462463
  %5 = call i32* @_errno(), !insn.addr !9055
  store i32 9, i32* %5, align 4, !insn.addr !9056
  store i64 -1, i64* %eax.0.reg2mem, !insn.addr !9056
  br label %dec_label_pc_4624db, !insn.addr !9056

dec_label_pc_46248e:                              ; preds = %dec_label_pc_462463
  %6 = mul i64 %offset, 4294967296
  %7 = ptrtoint i64* %stack_var_-12 to i32, !insn.addr !9057
  %8 = inttoptr i32 %2 to i32*, !insn.addr !9058
  %9 = sdiv i64 %6, 4294967296, !insn.addr !9058
  %10 = insertvalue %_LARGE_INTEGER undef, i64 %9, 0, !insn.addr !9058
  %11 = inttoptr i32 %origin to %_LARGE_INTEGER*, !insn.addr !9058
  %12 = call i1 @SetFilePointerEx(i32* %8, %_LARGE_INTEGER %10, %_LARGE_INTEGER* %11, i32 %7), !insn.addr !9058
  %13 = icmp eq i1 %12, false, !insn.addr !9059
  %14 = icmp eq i1 %13, false, !insn.addr !9060
  br i1 %14, label %dec_label_pc_4624b5, label %dec_label_pc_4624a6, !insn.addr !9060

dec_label_pc_4624a6:                              ; preds = %dec_label_pc_46248e
  %15 = call i32 @GetLastError(), !insn.addr !9061
  %16 = call i32 @function_4034fe(), !insn.addr !9062
  store i64 -1, i64* %eax.0.reg2mem, !insn.addr !9063
  br label %dec_label_pc_4624db, !insn.addr !9063

dec_label_pc_4624b5:                              ; preds = %dec_label_pc_46248e
  %17 = load i64, i64* %stack_var_-12, align 8, !insn.addr !9064
  %18 = trunc i64 %17 to i32, !insn.addr !9064
  %19 = and i32 %0, %18, !insn.addr !9065
  %20 = icmp eq i32 %19, -1, !insn.addr !9066
  store i64 -1, i64* %eax.0.reg2mem, !insn.addr !9067
  br i1 %20, label %dec_label_pc_4624db, label %dec_label_pc_4624c1, !insn.addr !9067

dec_label_pc_4624c1:                              ; preds = %dec_label_pc_4624b5
  %21 = and i32 %fh, 63, !insn.addr !9068
  %22 = sdiv i32 %fh, 64, !insn.addr !9069
  %narrow = mul nuw nsw i32 %21, 56
  %23 = mul i32 %22, 4, !insn.addr !9070
  %24 = add i32 %23, ptrtoint (i32* @__pioinfo to i32), !insn.addr !9070
  %25 = inttoptr i32 %24 to i32*, !insn.addr !9070
  %26 = load i32, i32* %25, align 4, !insn.addr !9070
  %27 = add nuw nsw i32 %narrow, 40, !insn.addr !9071
  %28 = add i32 %27, %26, !insn.addr !9071
  %29 = inttoptr i32 %28 to i8*, !insn.addr !9071
  %30 = load i8, i8* %29, align 1, !insn.addr !9071
  %31 = and i8 %30, -3, !insn.addr !9071
  store i8 %31, i8* %29, align 1, !insn.addr !9071
  %phitmp = sext i32 %18 to i64
  store i64 %phitmp, i64* %eax.0.reg2mem, !insn.addr !9071
  br label %dec_label_pc_4624db, !insn.addr !9071

dec_label_pc_4624db:                              ; preds = %dec_label_pc_46247d, %dec_label_pc_4624a6, %dec_label_pc_4624b5, %dec_label_pc_4624c1
  %eax.0.reload = load i64, i64* %eax.0.reg2mem
  ret i64 %eax.0.reload, !insn.addr !9072
}

define i64 @_lseeki64(i32 %fh, i64 %offset, i32 %origin) local_unnamed_addr {
dec_label_pc_462606:
  %0 = mul i64 %offset, 4294967296
  %1 = sdiv i64 %0, 4294967296, !insn.addr !9073
  %2 = call i64 @"common_lseek<__int64>"(i32 %fh, i64 %1, i32 %origin), !insn.addr !9073
  %3 = mul i64 %2, 4294967296
  %4 = sdiv i64 %3, 4294967296, !insn.addr !9074
  ret i64 %4, !insn.addr !9074
}

define i64 @_lseeki64_nolock(i32 %fh, i64 %offset, i32 %origin) local_unnamed_addr {
dec_label_pc_462627:
  %0 = mul i64 %offset, 4294967296
  %1 = sdiv i64 %0, 4294967296, !insn.addr !9075
  %2 = call i64 @"common_lseek_nolock<__int64>"(i32 %fh, i64 %1, i32 %origin), !insn.addr !9075
  %3 = mul i64 %2, 4294967296
  %4 = sdiv i64 %3, 4294967296, !insn.addr !9076
  ret i64 %4, !insn.addr !9076
}

define i16 @_putwch_nolock(i16 %c) local_unnamed_addr {
dec_label_pc_462797:
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_4 = alloca i16, align 2
  store i16 %c, i16* %stack_var_4, align 2
  %stack_var_-8 = alloca i32, align 4
  %2 = call i32 @function_40358a(i32 %1, i32 %0), !insn.addr !9077
  %3 = icmp eq i32 %2, 0, !insn.addr !9078
  br i1 %3, label %dec_label_pc_4627c2, label %dec_label_pc_4627a6, !insn.addr !9079

dec_label_pc_4627a6:                              ; preds = %dec_label_pc_462797
  %4 = bitcast i16* %stack_var_4 to i32*, !insn.addr !9080
  %5 = call i32 @function_4028c9(i32* nonnull %4, i32 1, i32* nonnull %stack_var_-8), !insn.addr !9080
  %6 = icmp eq i32 %5, 0, !insn.addr !9081
  br i1 %6, label %dec_label_pc_4627c2, label %dec_label_pc_4627bc, !insn.addr !9082

dec_label_pc_4627bc:                              ; preds = %dec_label_pc_4627a6
  %7 = load i16, i16* %stack_var_4, align 2, !insn.addr !9083
  ret i16 %7, !insn.addr !9084

dec_label_pc_4627c2:                              ; preds = %dec_label_pc_4627a6, %dec_label_pc_462797
  ret i16 -1, !insn.addr !9085
}

define i32 @"__crt_mbstring::__mbrtoc32_utf8"(i32 %pc32, i8* %s, i32 %n, %_Mbstatet* %ps) local_unnamed_addr {
dec_label_pc_463489:
  %edx.2.lcssa.reg2mem = alloca i32, !insn.addr !9086
  %stack_var_-28.010.reg2mem = alloca i32, !insn.addr !9086
  %edx.211.reg2mem = alloca i32, !insn.addr !9086
  %ebx.212.reg2mem = alloca i32, !insn.addr !9086
  %ebx.1.reg2mem = alloca i32, !insn.addr !9086
  %edx.1.reg2mem = alloca i32, !insn.addr !9086
  %ecx.0.reg2mem = alloca i32, !insn.addr !9086
  %eax.0.reg2mem = alloca i32, !insn.addr !9086
  %stack_var_-56 = alloca %_Mbstatet.714, align 8
  %stack_var_-4 = alloca i32, align 4
  %0 = icmp eq i8* %s, null, !insn.addr !9087
  %1 = icmp eq i1 %0, false, !insn.addr !9088
  %storemerge = select i1 %1, i32 %n, i32 1
  %2 = icmp eq i32 %storemerge, 0, !insn.addr !9089
  %3 = icmp eq i1 %2, false, !insn.addr !9090
  br i1 %3, label %dec_label_pc_4634dd, label %dec_label_pc_4634d5, !insn.addr !9090

dec_label_pc_4634d5:                              ; preds = %dec_label_pc_4635b5, %dec_label_pc_463489
  store %_Mbstatet.714 { i32 -2, i16 undef, i16 undef }, %_Mbstatet.714* %stack_var_-56, align 8, !insn.addr !9091
  br label %dec_label_pc_463621, !insn.addr !9092

dec_label_pc_4634dd:                              ; preds = %dec_label_pc_463489
  %4 = ptrtoint %_Mbstatet* %ps to i32
  %5 = ptrtoint i8* %s to i32
  %6 = icmp eq %_Mbstatet* %ps, null, !insn.addr !9093
  %7 = icmp eq i1 %6, false, !insn.addr !9094
  %spec.select = select i1 %7, i32 %4, i32 ptrtoint (%_Mbstatet.714* @internal_pst to i32)
  %ebx.0 = select i1 %1, i32 %5, i32 ptrtoint (i8** @global_var_4703f0 to i32)
  %8 = select i1 %0, i32 0, i32 %pc32, !insn.addr !9095
  %9 = add i32 %spec.select, 6, !insn.addr !9096
  %10 = inttoptr i32 %9 to i16*, !insn.addr !9096
  %11 = load i16, i16* %10, align 2, !insn.addr !9096
  %12 = icmp eq i16 %11, 0, !insn.addr !9096
  %13 = icmp eq i1 %12, false, !insn.addr !9097
  br i1 %13, label %dec_label_pc_463549, label %dec_label_pc_4634e5, !insn.addr !9097

dec_label_pc_4634e5:                              ; preds = %dec_label_pc_4634dd
  %14 = inttoptr i32 %ebx.0 to i8*, !insn.addr !9098
  %15 = load i8, i8* %14, align 1, !insn.addr !9098
  %16 = zext i8 %15 to i32, !insn.addr !9098
  %17 = icmp slt i8 %15, 0, !insn.addr !9099
  br i1 %17, label %dec_label_pc_463504, label %dec_label_pc_4634ef, !insn.addr !9100

dec_label_pc_4634ef:                              ; preds = %dec_label_pc_4634e5
  %18 = icmp eq i32 %8, 0, !insn.addr !9101
  br i1 %18, label %dec_label_pc_463621, label %dec_label_pc_4634f3, !insn.addr !9102

dec_label_pc_4634f3:                              ; preds = %dec_label_pc_4634ef
  %19 = inttoptr i32 %8 to i32*, !insn.addr !9103
  store i32 %16, i32* %19, align 4, !insn.addr !9103
  br label %dec_label_pc_463621, !insn.addr !9103

dec_label_pc_463504:                              ; preds = %dec_label_pc_4634e5
  %20 = and i32 %16, 224, !insn.addr !9104
  %21 = icmp eq i32 %20, 192, !insn.addr !9105
  %22 = icmp eq i1 %21, false, !insn.addr !9106
  store i32 2, i32* %eax.0.reg2mem, !insn.addr !9106
  br i1 %22, label %dec_label_pc_463510, label %dec_label_pc_46352a, !insn.addr !9106

dec_label_pc_463510:                              ; preds = %dec_label_pc_463504
  %23 = and i32 %16, 240, !insn.addr !9107
  %24 = icmp eq i32 %23, 224, !insn.addr !9108
  %25 = icmp eq i1 %24, false, !insn.addr !9109
  store i32 3, i32* %eax.0.reg2mem, !insn.addr !9109
  br i1 %25, label %dec_label_pc_46351c, label %dec_label_pc_46352a, !insn.addr !9109

dec_label_pc_46351c:                              ; preds = %dec_label_pc_463510
  %26 = and i32 %16, 248, !insn.addr !9110
  %27 = icmp eq i32 %26, 240, !insn.addr !9111
  %28 = icmp eq i1 %27, false, !insn.addr !9112
  store i32 4, i32* %eax.0.reg2mem, !insn.addr !9112
  br i1 %28, label %dec_label_pc_46361a, label %dec_label_pc_46352a, !insn.addr !9112

dec_label_pc_46352a:                              ; preds = %dec_label_pc_46351c, %dec_label_pc_463510, %dec_label_pc_463504
  %29 = add i32 %ebx.0, 1, !insn.addr !9113
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  store %_Mbstatet.714 { i32 7, i16 undef, i16 undef }, %_Mbstatet.714* %stack_var_-56, align 8, !insn.addr !9114
  %30 = getelementptr inbounds %_Mbstatet.714, %_Mbstatet.714* %stack_var_-56, i32 0, i32 0, !insn.addr !9115
  %31 = load i32, i32* %30, align 8, !insn.addr !9115
  %32 = sub i32 %31, %eax.0.reload, !insn.addr !9116
  %33 = mul i32 %eax.0.reload, 256, !insn.addr !9117
  %34 = and i32 %32, 31, !insn.addr !9118
  %35 = icmp eq i32 %34, 0, !insn.addr !9118
  %notmask = shl nsw i32 -1, %34
  %phitmp = xor i32 %notmask, 255
  %edx.0 = select i1 %35, i32 0, i32 %phitmp
  %36 = or i32 %33, %eax.0.reload, !insn.addr !9117
  %37 = and i32 %edx.0, %16, !insn.addr !9119
  store i32 %36, i32* %ecx.0.reg2mem, !insn.addr !9120
  store i32 %37, i32* %edx.1.reg2mem, !insn.addr !9120
  store i32 %29, i32* %ebx.1.reg2mem, !insn.addr !9120
  br label %dec_label_pc_46356e, !insn.addr !9120

dec_label_pc_463549:                              ; preds = %dec_label_pc_4634dd
  %38 = add i32 %spec.select, 4, !insn.addr !9121
  %39 = inttoptr i32 %38 to i8*, !insn.addr !9121
  %40 = load i8, i8* %39, align 1, !insn.addr !9121
  %41 = zext i8 %40 to i32, !insn.addr !9121
  %42 = inttoptr i32 %spec.select to i32*, !insn.addr !9122
  %43 = load i32, i32* %42, align 4, !insn.addr !9122
  %44 = inttoptr i32 %9 to i8*, !insn.addr !9123
  %45 = load i8, i8* %44, align 1, !insn.addr !9123
  %46 = zext i8 %45 to i32, !insn.addr !9123
  %47 = mul i32 %46, 256, !insn.addr !9123
  %48 = or i32 %47, %41, !insn.addr !9123
  %.off = add i8 %40, -2
  %switch = icmp ugt i8 %.off, 2
  %49 = icmp eq i8 %45, 0, !insn.addr !9124
  %or.cond = or i1 %switch, %49
  %50 = icmp ugt i8 %40, %45, !insn.addr !9125
  %51 = icmp eq i1 %50, false, !insn.addr !9126
  %or.cond7 = or i1 %or.cond, %51
  store i32 %48, i32* %ecx.0.reg2mem
  store i32 %43, i32* %edx.1.reg2mem
  store i32 %ebx.0, i32* %ebx.1.reg2mem
  br i1 %or.cond7, label %dec_label_pc_46361a, label %dec_label_pc_46356e

dec_label_pc_46356e:                              ; preds = %dec_label_pc_463549, %dec_label_pc_46352a
  %ebx.1.reload = load i32, i32* %ebx.1.reg2mem
  %edx.1.reload = load i32, i32* %edx.1.reg2mem
  %ecx.0.reload = load i32, i32* %ecx.0.reg2mem
  %52 = udiv i32 %ecx.0.reload, 256, !insn.addr !9127
  %53 = and i32 %52, 255, !insn.addr !9127
  %54 = icmp ult i32 %53, %storemerge, !insn.addr !9128
  %55 = icmp eq i1 %54, false, !insn.addr !9129
  %spec.select8 = select i1 %55, i32 %storemerge, i32 %53
  %56 = sub i32 %ebx.1.reload, %5, !insn.addr !9130
  %57 = icmp ult i32 %56, %spec.select8, !insn.addr !9131
  store i32 %ebx.1.reload, i32* %ebx.212.reg2mem, !insn.addr !9132
  store i32 %edx.1.reload, i32* %edx.211.reg2mem, !insn.addr !9132
  store i32 %56, i32* %stack_var_-28.010.reg2mem, !insn.addr !9132
  store i32 %edx.1.reload, i32* %edx.2.lcssa.reg2mem, !insn.addr !9132
  br i1 %57, label %dec_label_pc_46358d, label %dec_label_pc_4635ae, !insn.addr !9132

dec_label_pc_46358d:                              ; preds = %dec_label_pc_46356e, %dec_label_pc_46359b
  %ebx.212.reload = load i32, i32* %ebx.212.reg2mem
  %58 = inttoptr i32 %ebx.212.reload to i8*, !insn.addr !9133
  %59 = load i8, i8* %58, align 1, !insn.addr !9133
  %60 = and i8 %59, -64, !insn.addr !9134
  %61 = icmp eq i8 %60, -128, !insn.addr !9135
  %62 = icmp eq i1 %61, false, !insn.addr !9136
  br i1 %62, label %dec_label_pc_46361a, label %dec_label_pc_46359b, !insn.addr !9136

dec_label_pc_46359b:                              ; preds = %dec_label_pc_46358d
  %stack_var_-28.010.reload = load i32, i32* %stack_var_-28.010.reg2mem
  %edx.211.reload = load i32, i32* %edx.211.reg2mem
  %63 = add nuw i32 %stack_var_-28.010.reload, 1, !insn.addr !9137
  %64 = add i32 %ebx.212.reload, 1, !insn.addr !9138
  %65 = and i8 %59, 63
  %66 = zext i8 %65 to i32, !insn.addr !9139
  %67 = mul i32 %edx.211.reload, 64, !insn.addr !9140
  %68 = or i32 %67, %66, !insn.addr !9141
  %69 = icmp ult i32 %63, %spec.select8, !insn.addr !9131
  store i32 %64, i32* %ebx.212.reg2mem, !insn.addr !9132
  store i32 %68, i32* %edx.211.reg2mem, !insn.addr !9132
  store i32 %63, i32* %stack_var_-28.010.reg2mem, !insn.addr !9132
  store i32 %68, i32* %edx.2.lcssa.reg2mem, !insn.addr !9132
  br i1 %69, label %dec_label_pc_46358d, label %dec_label_pc_4635ae, !insn.addr !9132

dec_label_pc_4635ae:                              ; preds = %dec_label_pc_46359b, %dec_label_pc_46356e
  %edx.2.lcssa.reload = load i32, i32* %edx.2.lcssa.reg2mem
  %70 = icmp ult i32 %spec.select8, %53, !insn.addr !9142
  %71 = icmp eq i1 %70, false, !insn.addr !9143
  br i1 %71, label %dec_label_pc_4635cd, label %dec_label_pc_4635b5, !insn.addr !9143

dec_label_pc_4635b5:                              ; preds = %dec_label_pc_4635ae
  %72 = mul i32 %spec.select8, 256
  %73 = sub i32 %ecx.0.reload, %72
  %74 = trunc i32 %ecx.0.reload to i16
  %75 = and i16 %74, 255, !insn.addr !9144
  %76 = add i32 %spec.select, 4, !insn.addr !9144
  %77 = inttoptr i32 %76 to i16*, !insn.addr !9144
  store i16 %75, i16* %77, align 2, !insn.addr !9144
  %78 = udiv i32 %73, 256, !insn.addr !9145
  %79 = inttoptr i32 %spec.select to i32*, !insn.addr !9146
  store i32 %edx.2.lcssa.reload, i32* %79, align 4, !insn.addr !9146
  %80 = trunc i32 %78 to i16
  %81 = and i16 %80, 255, !insn.addr !9147
  store i16 %81, i16* %10, align 2, !insn.addr !9147
  br label %dec_label_pc_4634d5, !insn.addr !9148

dec_label_pc_4635cd:                              ; preds = %dec_label_pc_4635ae
  %82 = and i32 %edx.2.lcssa.reload, -2048
  %83 = icmp ne i32 %82, 55296
  %84 = icmp ult i32 %edx.2.lcssa.reload, 1114112
  %or.cond5 = icmp eq i1 %84, %83
  br i1 %or.cond5, label %dec_label_pc_4635e5, label %dec_label_pc_46361a, !insn.addr !9149

dec_label_pc_4635e5:                              ; preds = %dec_label_pc_4635cd
  %85 = ptrtoint i32* %stack_var_-4 to i32, !insn.addr !9150
  %86 = mul i32 %ecx.0.reload, 4, !insn.addr !9151
  %87 = and i32 %86, 1020, !insn.addr !9152
  %88 = add i32 %85, -24, !insn.addr !9152
  %89 = add i32 %88, %87, !insn.addr !9152
  %90 = inttoptr i32 %89 to i32*, !insn.addr !9152
  %91 = load i32, i32* %90, align 4, !insn.addr !9152
  %92 = icmp ult i32 %edx.2.lcssa.reload, %91, !insn.addr !9152
  br i1 %92, label %dec_label_pc_46361a, label %dec_label_pc_463603, !insn.addr !9153

dec_label_pc_463603:                              ; preds = %dec_label_pc_4635e5
  %93 = icmp eq i32 %8, 0, !insn.addr !9154
  br i1 %93, label %dec_label_pc_463609, label %dec_label_pc_463607, !insn.addr !9155

dec_label_pc_463607:                              ; preds = %dec_label_pc_463603
  %94 = inttoptr i32 %8 to i32*, !insn.addr !9156
  store i32 %edx.2.lcssa.reload, i32* %94, align 4, !insn.addr !9156
  br label %dec_label_pc_463609, !insn.addr !9156

dec_label_pc_463609:                              ; preds = %dec_label_pc_463607, %dec_label_pc_463603
  %95 = inttoptr i32 %spec.select to i32*, !insn.addr !9157
  store i32 0, i32* %95, align 4, !insn.addr !9157
  %96 = add i32 %spec.select, 4, !insn.addr !9158
  %97 = inttoptr i32 %96 to i32*, !insn.addr !9158
  store i32 0, i32* %97, align 4, !insn.addr !9158
  br label %dec_label_pc_463621, !insn.addr !9159

dec_label_pc_46361a:                              ; preds = %dec_label_pc_46358d, %dec_label_pc_463549, %dec_label_pc_4635cd, %dec_label_pc_4635e5, %dec_label_pc_46351c
  %98 = insertvalue %_Mbstatet.714 undef, i32 %spec.select, 0, !insn.addr !9160
  store %_Mbstatet.714 %98, %_Mbstatet.714* %stack_var_-56, align 8, !insn.addr !9160
  %99 = getelementptr inbounds %_Mbstatet.714, %_Mbstatet.714* %stack_var_-56, i32 0, i32 0, !insn.addr !9161
  %100 = load i32, i32* %99, align 8, !insn.addr !9161
  %101 = call i32 @function_401d52(i32 %100), !insn.addr !9161
  br label %dec_label_pc_463621, !insn.addr !9162

dec_label_pc_463621:                              ; preds = %dec_label_pc_4634ef, %dec_label_pc_4634f3, %dec_label_pc_46361a, %dec_label_pc_463609, %dec_label_pc_4634d5
  call void @__security_check_cookie(i32 ptrtoint (i32* @80 to i32)), !insn.addr !9163
  ret i32 ptrtoint (i32* @80 to i32), !insn.addr !9164
}

define i32 @fegetenv(%fenv_t* %result) local_unnamed_addr {
dec_label_pc_4636a6:
  %0 = ptrtoint %fenv_t* %result to i32
  %1 = call i32 @function_403fc6(), !insn.addr !9165
  %2 = getelementptr inbounds %fenv_t, %fenv_t* %result, i32 0, i32 0, !insn.addr !9166
  store i32 %1, i32* %2, align 4, !insn.addr !9166
  %3 = call i32 @function_40332d(), !insn.addr !9167
  %4 = add i32 %0, 4, !insn.addr !9168
  %5 = inttoptr i32 %4 to i32*, !insn.addr !9168
  store i32 %3, i32* %5, align 4, !insn.addr !9168
  ret i32 0, !insn.addr !9169
}

define i32 @fesetenv(%fenv_t* %requested_env) local_unnamed_addr {
dec_label_pc_4636ca:
  %storemerge.reg2mem = alloca i32, !insn.addr !9170
  %0 = call i32 @__decompiler_undefined_function_0()
  %1 = call i32 @__decompiler_undefined_function_0()
  %2 = call i32 @__decompiler_undefined_function_0()
  %3 = ptrtoint %fenv_t* %requested_env to i32
  %stack_var_-12 = alloca i32, align 4
  %check_env_-8 = alloca %fenv_t, align 8
  %4 = insertvalue %fenv_t undef, i32 %2, 0, !insn.addr !9171
  store %fenv_t %4, %fenv_t* %check_env_-8, align 8, !insn.addr !9171
  %5 = getelementptr inbounds %fenv_t, %fenv_t* %requested_env, i32 0, i32 0, !insn.addr !9172
  %6 = load i32, i32* %5, align 4, !insn.addr !9172
  %.elt = getelementptr inbounds %fenv_t, %fenv_t* %check_env_-8, i32 0, i32 0
  %.unpack = load i32, i32* %.elt, align 8
  %7 = insertvalue %fenv_t undef, i32 %.unpack, 0
  %.elt2 = getelementptr inbounds %fenv_t, %fenv_t* %check_env_-8, i32 0, i32 1
  %.unpack3 = load i32, i32* %.elt2, align 4
  %8 = insertvalue %fenv_t %7, i32 %.unpack3, 1
  %9 = call i32 @function_403521(i32 %6, i32 %0, i32 %2, %fenv_t %8, i32 %1), !insn.addr !9173
  %10 = add i32 %3, 4, !insn.addr !9174
  %11 = inttoptr i32 %10 to i32*, !insn.addr !9174
  %12 = load i32, i32* %11, align 4, !insn.addr !9174
  %13 = call i32 @function_401fc8(i32 %12), !insn.addr !9175
  store i32 0, i32* %stack_var_-12, align 4, !insn.addr !9176
  store %fenv_t { i32 0, i32 undef }, %fenv_t* %check_env_-8, align 8, !insn.addr !9177
  %14 = bitcast i32* %stack_var_-12 to %fenv_t*
  %15 = call i32 @fegetenv(%fenv_t* nonnull %14), !insn.addr !9178
  %16 = icmp eq i32 %15, 0, !insn.addr !9179
  %17 = icmp eq i1 %16, false, !insn.addr !9180
  br i1 %17, label %dec_label_pc_46370f, label %dec_label_pc_4636fc, !insn.addr !9180

dec_label_pc_4636fc:                              ; preds = %dec_label_pc_4636ca
  %18 = load i32, i32* %5, align 4, !insn.addr !9181
  %19 = load i32, i32* %stack_var_-12, align 4, !insn.addr !9182
  %20 = icmp eq i32 %18, %19, !insn.addr !9182
  %21 = icmp eq i1 %20, false, !insn.addr !9183
  br i1 %21, label %dec_label_pc_46370f, label %dec_label_pc_463703, !insn.addr !9183

dec_label_pc_463703:                              ; preds = %dec_label_pc_4636fc
  %22 = load i32, i32* %11, align 4, !insn.addr !9184
  %23 = load i32, i32* %.elt, align 8, !insn.addr !9185
  %24 = icmp eq i32 %22, %23, !insn.addr !9185
  %25 = icmp eq i1 %24, false, !insn.addr !9186
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !9186
  br i1 %25, label %dec_label_pc_46370f, label %dec_label_pc_463712, !insn.addr !9186

dec_label_pc_46370f:                              ; preds = %dec_label_pc_463703, %dec_label_pc_4636fc, %dec_label_pc_4636ca
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !9187
  br label %dec_label_pc_463712, !insn.addr !9187

dec_label_pc_463712:                              ; preds = %dec_label_pc_463703, %dec_label_pc_46370f
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !9188
}

define i32 @feholdexcept(%fenv_t* %penv) local_unnamed_addr {
dec_label_pc_463727:
  %stack_var_-12 = alloca i32, align 4
  %env_-8 = alloca %fenv_t.658, align 8
  store i32 0, i32* %stack_var_-12, align 4, !insn.addr !9189
  store %fenv_t.658 { i32 0, i32 undef }, %fenv_t.658* %env_-8, align 8, !insn.addr !9190
  %0 = bitcast i32* %stack_var_-12 to %fenv_t*
  %1 = call i32 @fegetenv(%fenv_t* nonnull %0), !insn.addr !9191
  %2 = icmp eq i32 %1, 0, !insn.addr !9192
  %3 = icmp eq i1 %2, false, !insn.addr !9193
  br i1 %3, label %dec_label_pc_46376f, label %dec_label_pc_463744, !insn.addr !9193

dec_label_pc_463744:                              ; preds = %dec_label_pc_463727
  %4 = ptrtoint %fenv_t* %penv to i32, !insn.addr !9194
  %5 = load i32, i32* %stack_var_-12, align 4, !insn.addr !9195
  %6 = getelementptr inbounds %fenv_t.658, %fenv_t.658* %env_-8, i32 0, i32 0, !insn.addr !9196
  %7 = load i32, i32* %6, align 8, !insn.addr !9196
  %8 = add i32 %4, 4, !insn.addr !9197
  %9 = inttoptr i32 %8 to i32*, !insn.addr !9197
  store i32 %7, i32* %9, align 4, !insn.addr !9197
  %10 = getelementptr inbounds %fenv_t, %fenv_t* %penv, i32 0, i32 0
  store i32 %5, i32* %10, align 4, !insn.addr !9198
  %11 = or i32 %5, 31, !insn.addr !9199
  store i32 %11, i32* %stack_var_-12, align 4, !insn.addr !9200
  %12 = call i32 @fesetenv(%fenv_t* nonnull %0), !insn.addr !9201
  %13 = icmp eq i32 %12, 0, !insn.addr !9202
  %14 = icmp eq i1 %13, false, !insn.addr !9203
  br i1 %14, label %dec_label_pc_46376f, label %dec_label_pc_463766, !insn.addr !9203

dec_label_pc_463766:                              ; preds = %dec_label_pc_463744
  %15 = call i32 @_clearfp(), !insn.addr !9204
  ret i32 0, !insn.addr !9205

dec_label_pc_46376f:                              ; preds = %dec_label_pc_463744, %dec_label_pc_463727
  ret i32 1, !insn.addr !9206
}

declare void @_CIlog10() local_unnamed_addr

declare double @ceil(double) local_unnamed_addr

define i32 @__strncnt(i8* %string, i32 %count) local_unnamed_addr {
dec_label_pc_4640fd:
  %eax.1.reg2mem = alloca i32, !insn.addr !9207
  %eax.0.reg2mem = alloca i32, !insn.addr !9207
  %0 = ptrtoint i8* %string to i32
  %1 = load i8, i8* %string, align 1, !insn.addr !9208
  %2 = icmp eq i8 %1, 0, !insn.addr !9208
  store i32 0, i32* %eax.0.reg2mem, !insn.addr !9209
  store i32 0, i32* %eax.1.reg2mem, !insn.addr !9209
  br i1 %2, label %dec_label_pc_464117, label %dec_label_pc_46410b, !insn.addr !9209

dec_label_pc_46410b:                              ; preds = %dec_label_pc_4640fd, %dec_label_pc_464110
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %3 = icmp eq i32 %eax.0.reload, %count, !insn.addr !9210
  store i32 %count, i32* %eax.1.reg2mem, !insn.addr !9211
  br i1 %3, label %dec_label_pc_464117, label %dec_label_pc_464110, !insn.addr !9211

dec_label_pc_464110:                              ; preds = %dec_label_pc_46410b
  %4 = add i32 %eax.0.reload, 1, !insn.addr !9212
  %5 = add i32 %4, %0, !insn.addr !9213
  %6 = inttoptr i32 %5 to i8*, !insn.addr !9213
  %7 = load i8, i8* %6, align 1, !insn.addr !9213
  %8 = icmp eq i8 %7, 0, !insn.addr !9213
  %9 = icmp eq i1 %8, false, !insn.addr !9214
  store i32 %4, i32* %eax.0.reg2mem, !insn.addr !9214
  store i32 %4, i32* %eax.1.reg2mem, !insn.addr !9214
  br i1 %9, label %dec_label_pc_46410b, label %dec_label_pc_464117, !insn.addr !9214

dec_label_pc_464117:                              ; preds = %dec_label_pc_464110, %dec_label_pc_46410b, %dec_label_pc_4640fd
  %eax.1.reload = load i32, i32* %eax.1.reg2mem
  ret i32 %eax.1.reload, !insn.addr !9215
}

declare void @__dcrt_lowio_initialize_console_output() local_unnamed_addr

define i32 @__dcrt_lowio_ensure_console_output_initialized() local_unnamed_addr {
dec_label_pc_464586:
  %ecx.0.in.reg2mem = alloca i8*, !insn.addr !9216
  %0 = load i8*, i8** @__dcrt_lowio_console_output_handle, align 4, !insn.addr !9216
  %1 = icmp eq i8* %0, inttoptr (i32 -2 to i8*), !insn.addr !9217
  %2 = icmp eq i1 %1, false, !insn.addr !9218
  store i8* %0, i8** %ecx.0.in.reg2mem, !insn.addr !9218
  br i1 %2, label %dec_label_pc_46459c, label %dec_label_pc_464591, !insn.addr !9218

dec_label_pc_464591:                              ; preds = %dec_label_pc_464586
  call void @__dcrt_lowio_initialize_console_output(), !insn.addr !9219
  %3 = load i8*, i8** @__dcrt_lowio_console_output_handle, align 4, !insn.addr !9220
  store i8* %3, i8** %ecx.0.in.reg2mem, !insn.addr !9220
  br label %dec_label_pc_46459c, !insn.addr !9220

dec_label_pc_46459c:                              ; preds = %dec_label_pc_464591, %dec_label_pc_464586
  %ecx.0.in.reload = load i8*, i8** %ecx.0.in.reg2mem
  %4 = icmp eq i8* %ecx.0.in.reload, inttoptr (i32 -1 to i8*), !insn.addr !9221
  %5 = icmp eq i1 %4, false, !insn.addr !9222
  %6 = zext i1 %5 to i32, !insn.addr !9222
  ret i32 %6, !insn.addr !9223
}

declare void @__dcrt_terminate_console_output() local_unnamed_addr

define i32 @__dcrt_write_console(i8* %lpBuffer, i32 %nNumberOfCharsToWrite, i32* %lpNumberOfCharsWritten) local_unnamed_addr {
dec_label_pc_4645c8:
  %esi.0.reg2mem = alloca i32, !insn.addr !9224
  %0 = load i8*, i8** @__dcrt_lowio_console_output_handle, align 4
  %1 = bitcast i8* %0 to i32*
  %2 = bitcast i8* %lpBuffer to i32*
  %3 = call i1 @WriteConsoleW(i32* %1, i32* %2, i32 %nNumberOfCharsToWrite, i32* %lpNumberOfCharsWritten, i32* null), !insn.addr !9225
  %4 = sext i1 %3 to i32, !insn.addr !9225
  %5 = icmp eq i1 %3, false, !insn.addr !9226
  %6 = icmp eq i1 %5, false, !insn.addr !9227
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !9227
  br i1 %6, label %dec_label_pc_464618, label %dec_label_pc_4645eb, !insn.addr !9227

dec_label_pc_4645eb:                              ; preds = %dec_label_pc_4645c8
  %7 = call i32 @GetLastError(), !insn.addr !9228
  %8 = icmp eq i32 %7, 6, !insn.addr !9229
  %9 = icmp eq i1 %8, false, !insn.addr !9230
  store i32 %4, i32* %esi.0.reg2mem, !insn.addr !9230
  br i1 %9, label %dec_label_pc_464618, label %dec_label_pc_4645f6, !insn.addr !9230

dec_label_pc_4645f6:                              ; preds = %dec_label_pc_4645eb
  %10 = call i32 @function_4042ff(), !insn.addr !9231
  call void @__dcrt_lowio_initialize_console_output(), !insn.addr !9232
  %11 = load i8*, i8** @__dcrt_lowio_console_output_handle, align 4
  %12 = bitcast i8* %11 to i32*
  %13 = inttoptr i32 %4 to i32*, !insn.addr !9233
  %14 = call i1 @WriteConsoleW(i32* %12, i32* %2, i32 %nNumberOfCharsToWrite, i32* %lpNumberOfCharsWritten, i32* %13), !insn.addr !9233
  %15 = sext i1 %14 to i32, !insn.addr !9233
  store i32 %15, i32* %esi.0.reg2mem, !insn.addr !9234
  br label %dec_label_pc_464618, !insn.addr !9234

dec_label_pc_464618:                              ; preds = %dec_label_pc_4645f6, %dec_label_pc_4645eb, %dec_label_pc_4645c8
  %esi.0.reload = load i32, i32* %esi.0.reg2mem
  ret i32 %esi.0.reload, !insn.addr !9235
}

declare i8* @"type_info::`scalar deleting destructor'"(i32*) local_unnamed_addr

declare void @_aulldvrm() local_unnamed_addr

declare void @_allmul() local_unnamed_addr

define void @_allshl() local_unnamed_addr {
dec_label_pc_4675b0:
  ret void
}

define void @_aullshr() local_unnamed_addr {
dec_label_pc_4675e0:
  ret void
}

declare void @_alldvrm() local_unnamed_addr

define void @_alloca_probe_16() local_unnamed_addr {
dec_label_pc_467730:
  call void @_chkstk(), !insn.addr !9236
  ret void, !insn.addr !9236
}

declare void @_chkstk() local_unnamed_addr

define void @_ftol2_sse_excpt() local_unnamed_addr {
dec_label_pc_4677b0:
  ret void
}

define void @strrchr_1(i8* %string, i8 %chr) local_unnamed_addr {
dec_label_pc_46a270:
  %eax.2.reg2mem = alloca i32, !insn.addr !9237
  %xmm0.0.reg2mem = alloca i128, !insn.addr !9237
  %edi.3.reg2mem = alloca i32, !insn.addr !9237
  %edi.2.reg2mem = alloca i32, !insn.addr !9237
  %edi.1.reg2mem = alloca i32, !insn.addr !9237
  %edi.0.reg2mem = alloca i32, !insn.addr !9237
  %eax.0.reg2mem = alloca i32, !insn.addr !9237
  %xmm2.0.reg2mem = alloca i128, !insn.addr !9237
  %0 = call i128 @__decompiler_undefined_function_5()
  %1 = load i32, i32* @__isa_available, align 4, !insn.addr !9238
  %2 = icmp eq i32 %1, 0, !insn.addr !9238
  br i1 %2, label %dec_label_pc_46a2dd, label %dec_label_pc_46a281, !insn.addr !9239

dec_label_pc_46a281:                              ; preds = %dec_label_pc_46a270
  %3 = ptrtoint i8* %string to i32
  %4 = icmp eq i32 %1, 1
  %5 = zext i8 %chr to i32
  br i1 %4, label %dec_label_pc_46a286, label %dec_label_pc_46a2fd, !insn.addr !9240

dec_label_pc_46a286:                              ; preds = %dec_label_pc_46a281
  %6 = mul i32 %5, 256, !insn.addr !9241
  %7 = or i32 %6, %5, !insn.addr !9242
  %8 = call i128 @__asm_movd(i32 %7), !insn.addr !9243
  %9 = call i128 @__asm_pshuflw(i128 %8, i32 0), !insn.addr !9244
  %10 = call i128 @__asm_movlhps(i128 %9, i128 %9), !insn.addr !9245
  %11 = and i32 %3, 15, !insn.addr !9246
  %12 = shl i32 -1, %11
  %13 = sub i32 %3, %11, !insn.addr !9247
  store i32 %12, i32* %eax.0.reg2mem, !insn.addr !9248
  store i32 %13, i32* %edi.0.reg2mem, !insn.addr !9248
  br label %dec_label_pc_46a2ad, !insn.addr !9248

dec_label_pc_46a2ad:                              ; preds = %dec_label_pc_46a2ad, %dec_label_pc_46a286
  %edi.0.reload = load i32, i32* %edi.0.reg2mem
  %eax.0.reload = load i32, i32* %eax.0.reg2mem
  %xmm2.0.reload = load i128, i128* %xmm2.0.reg2mem
  %14 = inttoptr i32 %edi.0.reload to i128*, !insn.addr !9249
  %15 = load i128, i128* %14, align 4, !insn.addr !9249
  %16 = call i128 @__asm_movdqu.5(i128 %15), !insn.addr !9249
  %17 = call i128 @__asm_pxor(i128 %xmm2.0.reload, i128 %xmm2.0.reload), !insn.addr !9250
  %18 = call i128 @__asm_pcmpeqb(i128 %17, i128 %16), !insn.addr !9251
  %19 = call i128 @__asm_pcmpeqb(i128 %16, i128 %10), !insn.addr !9252
  %20 = call i32 @__asm_pmovmskb(i128 %18), !insn.addr !9253
  %21 = and i32 %20, %eax.0.reload, !insn.addr !9254
  %22 = icmp eq i32 %21, 0, !insn.addr !9254
  %23 = icmp eq i1 %22, false, !insn.addr !9255
  %24 = call i32 @__asm_pmovmskb(i128 %19)
  %25 = add i32 %edi.0.reload, 16, !insn.addr !9256
  store i128 %18, i128* %xmm2.0.reg2mem, !insn.addr !9255
  store i32 -1, i32* %eax.0.reg2mem, !insn.addr !9255
  store i32 %25, i32* %edi.0.reg2mem, !insn.addr !9255
  br i1 %23, label %dec_label_pc_46a2dd, label %dec_label_pc_46a2ad, !insn.addr !9255

dec_label_pc_46a2dd:                              ; preds = %dec_label_pc_46a30f, %dec_label_pc_46a328, %dec_label_pc_46a363, %dec_label_pc_46a2ad, %dec_label_pc_46a270, %dec_label_pc_46a33e
  ret void, !insn.addr !9257

dec_label_pc_46a2fd:                              ; preds = %dec_label_pc_46a281
  %26 = icmp eq i8 %chr, 0, !insn.addr !9258
  br i1 %26, label %dec_label_pc_46a33e, label %dec_label_pc_46a305, !insn.addr !9259

dec_label_pc_46a305:                              ; preds = %dec_label_pc_46a2fd
  %27 = and i32 %3, 15, !insn.addr !9260
  %28 = icmp eq i32 %27, 0, !insn.addr !9260
  store i32 %3, i32* %edi.1.reg2mem, !insn.addr !9261
  store i32 %3, i32* %edi.2.reg2mem, !insn.addr !9261
  br i1 %28, label %dec_label_pc_46a324, label %dec_label_pc_46a30f, !insn.addr !9261

dec_label_pc_46a30f:                              ; preds = %dec_label_pc_46a305, %dec_label_pc_46a31b
  %edi.1.reload = load i32, i32* %edi.1.reg2mem
  %29 = inttoptr i32 %edi.1.reload to i8*, !insn.addr !9262
  %30 = load i8, i8* %29, align 1, !insn.addr !9262
  %31 = icmp eq i8 %30, 0, !insn.addr !9263
  br i1 %31, label %dec_label_pc_46a2dd, label %dec_label_pc_46a31b, !insn.addr !9264

dec_label_pc_46a31b:                              ; preds = %dec_label_pc_46a30f
  %32 = add i32 %edi.1.reload, 1, !insn.addr !9265
  %33 = and i32 %32, 15, !insn.addr !9266
  %34 = icmp eq i32 %33, 0, !insn.addr !9266
  %35 = icmp eq i1 %34, false, !insn.addr !9267
  store i32 %32, i32* %edi.1.reg2mem, !insn.addr !9267
  store i32 %32, i32* %edi.2.reg2mem, !insn.addr !9267
  br i1 %35, label %dec_label_pc_46a30f, label %dec_label_pc_46a324, !insn.addr !9267

dec_label_pc_46a324:                              ; preds = %dec_label_pc_46a31b, %dec_label_pc_46a305
  %edi.2.reload = load i32, i32* %edi.2.reg2mem
  %36 = call i128 @__asm_movd(i32 %5), !insn.addr !9268
  store i32 %edi.2.reload, i32* %edi.3.reg2mem, !insn.addr !9268
  br label %dec_label_pc_46a328, !insn.addr !9268

dec_label_pc_46a328:                              ; preds = %dec_label_pc_46a328, %dec_label_pc_46a324
  %edi.3.reload = load i32, i32* %edi.3.reg2mem
  %37 = add i32 %edi.3.reload, 16, !insn.addr !9269
  %38 = icmp eq i32 %37, 0, !insn.addr !9269
  %39 = inttoptr i32 %edi.3.reload to i128*, !insn.addr !9270
  %40 = load i128, i128* %39, align 4, !insn.addr !9270
  call void @__asm_pcmpistri(i128 %36, i128 %40, i32 64), !insn.addr !9270
  %41 = icmp eq i1 %38, false, !insn.addr !9271
  store i32 %37, i32* %edi.3.reg2mem, !insn.addr !9271
  br i1 %41, label %dec_label_pc_46a328, label %dec_label_pc_46a2dd, !insn.addr !9271

dec_label_pc_46a33e:                              ; preds = %dec_label_pc_46a2fd
  %42 = and i32 %3, -16, !insn.addr !9272
  %43 = call i128 @__asm_pxor(i128 %0, i128 %0), !insn.addr !9273
  %44 = inttoptr i32 %42 to i128*, !insn.addr !9274
  %45 = load i128, i128* %44, align 16, !insn.addr !9274
  %46 = call i128 @__asm_pcmpeqb(i128 %43, i128 %45), !insn.addr !9274
  %47 = and i32 %3, 15, !insn.addr !9275
  %48 = shl i32 -1, %47
  %49 = call i32 @__asm_pmovmskb(i128 %46), !insn.addr !9276
  %50 = and i32 %49, %48, !insn.addr !9277
  %51 = icmp eq i32 %50, 0, !insn.addr !9277
  %52 = icmp eq i1 %51, false, !insn.addr !9278
  store i128 %46, i128* %xmm0.0.reg2mem, !insn.addr !9278
  store i32 %42, i32* %eax.2.reg2mem, !insn.addr !9278
  br i1 %52, label %dec_label_pc_46a2dd, label %dec_label_pc_46a363, !insn.addr !9278

dec_label_pc_46a363:                              ; preds = %dec_label_pc_46a33e, %dec_label_pc_46a363
  %eax.2.reload = load i32, i32* %eax.2.reg2mem
  %xmm0.0.reload = load i128, i128* %xmm0.0.reg2mem
  %53 = call i128 @__asm_pxor(i128 %xmm0.0.reload, i128 %xmm0.0.reload), !insn.addr !9279
  %54 = add i32 %eax.2.reload, 16, !insn.addr !9280
  %55 = inttoptr i32 %54 to i128*, !insn.addr !9280
  %56 = load i128, i128* %55, align 16, !insn.addr !9280
  %57 = call i128 @__asm_pcmpeqb(i128 %53, i128 %56), !insn.addr !9280
  %58 = call i32 @__asm_pmovmskb(i128 %57), !insn.addr !9281
  %59 = icmp eq i32 %58, 0, !insn.addr !9282
  store i128 %57, i128* %xmm0.0.reg2mem, !insn.addr !9283
  store i32 %54, i32* %eax.2.reg2mem, !insn.addr !9283
  br i1 %59, label %dec_label_pc_46a363, label %dec_label_pc_46a2dd, !insn.addr !9283
}

declare void @strchr_1(i8*, i8) local_unnamed_addr

declare i1 @CloseHandle(i32*) local_unnamed_addr

declare void @EnterCriticalSection(%_RTL_CRITICAL_SECTION*) local_unnamed_addr

declare void @LeaveCriticalSection(%_RTL_CRITICAL_SECTION*) local_unnamed_addr

declare i32 @UnhandledExceptionFilter(%_EXCEPTION_POINTERS*) local_unnamed_addr

declare i32 (%_EXCEPTION_POINTERS*)* @SetUnhandledExceptionFilter(i32 (%_EXCEPTION_POINTERS*)*) local_unnamed_addr

declare i32* @GetCurrentProcess() local_unnamed_addr

declare i1 @TerminateProcess(i32*, i32) local_unnamed_addr

declare i1 @IsProcessorFeaturePresent(i32) local_unnamed_addr

declare i1 @IsDebuggerPresent() local_unnamed_addr

declare i32* @GetModuleHandleW(i16*) local_unnamed_addr

declare i1 @WriteConsoleW(i32*, i32*, i32, i32*, i32*) local_unnamed_addr

declare i32 @GetLastError() local_unnamed_addr

declare void @SetLastError(i32) local_unnamed_addr

declare i32* @TlsGetValue(i32) local_unnamed_addr

declare i1 @TlsSetValue(i32, i32*) local_unnamed_addr

declare i1 @FreeLibrary(i32*) local_unnamed_addr

declare i32 ()* @GetProcAddress(i32*, i8*) local_unnamed_addr

declare i32* @LoadLibraryExW(i16*, i32*, i32) local_unnamed_addr

declare i1 @GetModuleHandleExW(i32, i16*, i32**) local_unnamed_addr

declare i1 @WriteFile(i32*, i32*, i32, i32*, %_OVERLAPPED*) local_unnamed_addr

declare i32 @CompareStringW(i32, i32, i16*, i32, i16*, i32) local_unnamed_addr

declare i32 @LCMapStringW(i32, i32, i16*, i32, i16*, i32) local_unnamed_addr

declare i1 @GetStringTypeW(i32, i16*, i32, i16*) local_unnamed_addr

declare i1 @IsValidCodePage(i32) local_unnamed_addr

declare i32 @GetACP() local_unnamed_addr

declare i32 @GetOEMCP() local_unnamed_addr

declare i1 @GetCPInfo(i32, %_cpinfo*) local_unnamed_addr

declare i32 @MultiByteToWideChar(i32, i32, i8*, i32, i16*, i32) local_unnamed_addr

declare i32 @WideCharToMultiByte(i32, i32, i16*, i32, i8*, i32, i8*, i1*) local_unnamed_addr

declare i16* @GetEnvironmentStringsW() local_unnamed_addr

declare i1 @FreeEnvironmentStringsW(i16*) local_unnamed_addr

declare i1 @SetEnvironmentVariableW(i16*, i16*) local_unnamed_addr

declare i1 @SetStdHandle(i32, i32*) local_unnamed_addr

declare i32 @GetConsoleCP() local_unnamed_addr

declare i1 @GetConsoleMode(i32*, i32*) local_unnamed_addr

declare i1 @GetFileSizeEx(i32*, %_LARGE_INTEGER*) local_unnamed_addr

declare i1 @SetFilePointerEx(i32*, %_LARGE_INTEGER, %_LARGE_INTEGER*, i32) local_unnamed_addr

declare i32 @__asm_int3() local_unnamed_addr

declare void @__asm_int(i32) local_unnamed_addr

declare void @__asm_rep_stosb_memset(i8*, i8, i32) local_unnamed_addr

declare i128 @__asm_movd(i32) local_unnamed_addr

declare i128 @__asm_pshufd(i128, i32) local_unnamed_addr

declare void @__asm_movups(i128, i128) local_unnamed_addr

declare void @__asm_movdqa(i128, i128) local_unnamed_addr

declare void @__asm_movdqu(i128, i128) local_unnamed_addr

declare i128 @__asm_vpxor(i128, i128) local_unnamed_addr

declare i256 @__asm_vpcmpeqb(i256, i256) local_unnamed_addr

declare i32 @__asm_vpmovmskb(i256) local_unnamed_addr

declare i32 @__asm_vzeroupper() local_unnamed_addr

declare i128 @__asm_xorps(i128, i128) local_unnamed_addr

declare i128 @__asm_movups.3(i128) local_unnamed_addr

declare i128 @__asm_pcmpeqb(i128, i128) local_unnamed_addr

declare i32 @__asm_pmovmskb(i128) local_unnamed_addr

declare i32 @__asm_lfence(i8*, i32) local_unnamed_addr

declare i256 @__asm_vpcmpeqw(i256, i256) local_unnamed_addr

declare i128 @__asm_pcmpeqw(i128, i128) local_unnamed_addr

declare i128 @__asm_pshuflw(i128, i32) local_unnamed_addr

declare i128 @__asm_movlhps(i128, i128) local_unnamed_addr

declare i128 @__asm_movdqu.5(i128) local_unnamed_addr

declare i128 @__asm_pxor(i128, i128) local_unnamed_addr

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1) #0

declare void @__asm_pcmpistri(i128, i128, i32) local_unnamed_addr

declare void @__asm_rep_stosd_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @__asm_fnstenv() local_unnamed_addr

declare void @__asm_fldenv(i224) local_unnamed_addr

declare void @__asm_stmxcsr(i32) local_unnamed_addr

declare void @__asm_ldmxcsr(i32) local_unnamed_addr

declare i128 @__asm_movq(i64) local_unnamed_addr

declare void @__asm_rep_movsb_memcpy(i8*, i8*, i32) local_unnamed_addr

declare void @__asm_movq.7(i64, i128) local_unnamed_addr

declare i128 @__asm_movdqa.8(i128) local_unnamed_addr

declare i128 @__asm_palignr(i128, i128, i32) local_unnamed_addr

declare void @__asm_rep_movsd_memcpy(i8*, i8*, i32) local_unnamed_addr

declare i32 @__asm_fnclex() local_unnamed_addr

declare i32 @__readfsdword(i32) local_unnamed_addr

declare void @__writefsdword(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i128 @__decompiler_undefined_function_5() local_unnamed_addr

declare i1 @__decompiler_undefined_function_6() local_unnamed_addr

declare i8 @__decompiler_undefined_function_7() local_unnamed_addr

declare i256 @__decompiler_undefined_function_21() local_unnamed_addr

attributes #0 = { nounwind readnone speculatable }
