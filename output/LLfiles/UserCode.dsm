;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2023 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2023-06-23 19:11:01
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .text
; function: __mingw_invalidParameterHandler at 0x140001000 -- 0x140001001
0x140001000:   c3                                 	ret 
; data inside code section at 0x140001001 -- 0x140001010
0x140001001:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00      |ff...........@. |
; function: pre_c_init at 0x140001010 -- 0x14000112e
0x140001010:   48 83 ec 28                        	sub rsp, 0x28
0x140001014:   48 8b 05 15 34 00 00               	mov rax, qword ptr [rip + 0x3415]
0x14000101b:   31 c9                              	xor ecx, ecx
0x14000101d:   c7 00 01 00 00 00                  	mov dword ptr [rax], 1
0x140001023:   48 8b 05 16 34 00 00               	mov rax, qword ptr [rip + 0x3416]
0x14000102a:   c7 00 01 00 00 00                  	mov dword ptr [rax], 1
0x140001030:   48 8b 05 19 34 00 00               	mov rax, qword ptr [rip + 0x3419]
0x140001037:   c7 00 01 00 00 00                  	mov dword ptr [rax], 1
0x14000103d:   48 8b 05 9c 33 00 00               	mov rax, qword ptr [rip + 0x339c]
0x140001044:   66 81 38 4d 5a                     	cmp word ptr [rax], 0x5a4d
0x140001049:   75 0f                              	jne 0x14000105a <pre_c_init+0x4a>
0x14000104b:   48 63 50 3c                        	movsxd rdx, dword ptr [rax + 0x3c]
0x14000104f:   48 01 d0                           	add rax, rdx
0x140001052:   81 38 50 45 00 00                  	cmp dword ptr [rax], 0x4550
0x140001058:   74 66                              	je 0x1400010c0 <pre_c_init+0xb0>
0x14000105a:   48 8b 05 bf 33 00 00               	mov rax, qword ptr [rip + 0x33bf]
0x140001061:   89 0d a5 5f 00 00                  	mov dword ptr [rip + 0x5fa5], ecx
0x140001067:   8b 00                              	mov eax, dword ptr [rax]
0x140001069:   85 c0                              	test eax, eax
0x14000106b:   74 43                              	je 0x1400010b0 <pre_c_init+0xa0>
0x14000106d:   b9 02 00 00 00                     	mov ecx, 2
0x140001072:   e8 d1 17 00 00                     	call 0x140002848 <__set_app_type>
0x140001077:   e8 54 17 00 00                     	call 0x1400027d0 <__p__fmode>
0x14000107c:   48 8b 15 6d 34 00 00               	mov rdx, qword ptr [rip + 0x346d]
0x140001083:   8b 12                              	mov edx, dword ptr [rdx]
0x140001085:   89 10                              	mov dword ptr [rax], edx
0x140001087:   e8 54 17 00 00                     	call 0x1400027e0 <__p__commode>
0x14000108c:   48 8b 15 3d 34 00 00               	mov rdx, qword ptr [rip + 0x343d]
0x140001093:   8b 12                              	mov edx, dword ptr [rdx]
0x140001095:   89 10                              	mov dword ptr [rax], edx
0x140001097:   e8 64 07 00 00                     	call 0x140001800 <_setargv>
0x14000109c:   48 8b 05 cd 32 00 00               	mov rax, qword ptr [rip + 0x32cd]
0x1400010a3:   83 38 01                           	cmp dword ptr [rax], 1
0x1400010a6:   74 50                              	je 0x1400010f8 <pre_c_init+0xe8>
0x1400010a8:   31 c0                              	xor eax, eax
0x1400010aa:   48 83 c4 28                        	add rsp, 0x28
0x1400010ae:   c3                                 	ret 
; data inside code section at 0x1400010af -- 0x1400010b0
0x1400010af:   90                                                 |.               |
0x1400010b0:   b9 01 00 00 00                     	mov ecx, 1
0x1400010b5:   e8 8e 17 00 00                     	call 0x140002848 <__set_app_type>
0x1400010ba:   eb bb                              	jmp 0x140001077 <pre_c_init+0x67>
; data inside code section at 0x1400010bc -- 0x1400010c0
0x1400010bc:   0f 1f 40 00                                        |..@.            |
0x1400010c0:   0f b7 50 18                        	movzx edx, word ptr [rax + 0x18]
0x1400010c4:   66 81 fa 0b 01                     	cmp dx, 0x10b
0x1400010c9:   74 45                              	je 0x140001110 <pre_c_init+0x100>
0x1400010cb:   66 81 fa 0b 02                     	cmp dx, 0x20b
0x1400010d0:   75 88                              	jne 0x14000105a <pre_c_init+0x4a>
0x1400010d2:   83 b8 84 00 00 00 0e               	cmp dword ptr [rax + 0x84], 0xe
0x1400010d9:   0f 86 7b ff ff ff                  	jbe 0x14000105a <pre_c_init+0x4a>
0x1400010df:   8b 90 f8 00 00 00                  	mov edx, dword ptr [rax + 0xf8]
0x1400010e5:   31 c9                              	xor ecx, ecx
0x1400010e7:   85 d2                              	test edx, edx
0x1400010e9:   0f 95 c1                           	setne cl
0x1400010ec:   e9 69 ff ff ff                     	jmp 0x14000105a <pre_c_init+0x4a>
; data inside code section at 0x1400010f1 -- 0x1400010f8
0x1400010f1:   0f 1f 80 00 00 00 00                               |.......         |
0x1400010f8:   48 8b 0d 11 34 00 00               	mov rcx, qword ptr [rip + 0x3411]
0x1400010ff:   e8 6c 0e 00 00                     	call 0x140001f70 <__mingw_setusermatherr>
0x140001104:   31 c0                              	xor eax, eax
0x140001106:   48 83 c4 28                        	add rsp, 0x28
0x14000110a:   c3                                 	ret 
; data inside code section at 0x14000110b -- 0x140001110
0x14000110b:   0f 1f 44 00 00                                     |..D..           |
0x140001110:   83 78 74 0e                        	cmp dword ptr [rax + 0x74], 0xe
0x140001114:   0f 86 40 ff ff ff                  	jbe 0x14000105a <pre_c_init+0x4a>
0x14000111a:   44 8b 80 e8 00 00 00               	mov r8d, dword ptr [rax + 0xe8]
0x140001121:   31 c9                              	xor ecx, ecx
0x140001123:   45 85 c0                           	test r8d, r8d
0x140001126:   0f 95 c1                           	setne cl
0x140001129:   e9 2c ff ff ff                     	jmp 0x14000105a <pre_c_init+0x4a>
; data inside code section at 0x14000112e -- 0x140001130
0x14000112e:   66 90                                              |f.              |
; function: pre_cpp_init at 0x140001130 -- 0x140001179
0x140001130:   48 83 ec 38                        	sub rsp, 0x38
0x140001134:   48 8b 05 e5 33 00 00               	mov rax, qword ptr [rip + 0x33e5]
0x14000113b:   4c 8d 05 d6 5e 00 00               	lea r8, [rip + 0x5ed6]
0x140001142:   48 8d 15 d7 5e 00 00               	lea rdx, [rip + 0x5ed7]
0x140001149:   48 8d 0d d8 5e 00 00               	lea rcx, [rip + 0x5ed8]
0x140001150:   8b 00                              	mov eax, dword ptr [rax]
0x140001152:   89 05 ac 5e 00 00                  	mov dword ptr [rip + 0x5eac], eax
0x140001158:   48 8b 05 81 33 00 00               	mov rax, qword ptr [rip + 0x3381]
0x14000115f:   44 8b 08                           	mov r9d, dword ptr [rax]
0x140001162:   48 8d 05 9b 5e 00 00               	lea rax, [rip + 0x5e9b]
0x140001169:   48 89 44 24 20                     	mov qword ptr [rsp + 0x20], rax
0x14000116e:   e8 c5 16 00 00                     	call 0x140002838 <__getmainargs>
0x140001173:   90                                 	nop 
0x140001174:   48 83 c4 38                        	add rsp, 0x38
0x140001178:   c3                                 	ret 
; data inside code section at 0x140001179 -- 0x140001180
0x140001179:   0f 1f 80 00 00 00 00                               |.......         |
; function: __tmainCRTStartup at 0x140001180 -- 0x1400013cf
0x140001180:   41 54                              	push r12
0x140001182:   55                                 	push rbp
0x140001183:   57                                 	push rdi
0x140001184:   56                                 	push rsi
0x140001185:   53                                 	push rbx
0x140001186:   48 83 ec 20                        	sub rsp, 0x20
0x14000118a:   48 8b 1d df 32 00 00               	mov rbx, qword ptr [rip + 0x32df]
0x140001191:   48 8b 2d 48 70 00 00               	mov rbp, qword ptr [rip + 0x7048]
0x140001198:   31 ff                              	xor edi, edi
0x14000119a:   65 48 8b 04 25 30 00 00 00         	mov rax, qword ptr gs:[0x30]
0x1400011a3:   48 8b 70 08                        	mov rsi, qword ptr [rax + 8]
0x1400011a7:   eb 17                              	jmp 0x1400011c0 <__tmainCRTStartup+0x40>
; data inside code section at 0x1400011a9 -- 0x1400011b0
0x1400011a9:   0f 1f 80 00 00 00 00                               |.......         |
0x1400011b0:   48 39 c6                           	cmp rsi, rax
0x1400011b3:   0f 84 67 01 00 00                  	je 0x140001320 <__tmainCRTStartup+0x1a0>
0x1400011b9:   b9 e8 03 00 00                     	mov ecx, 0x3e8
0x1400011be:   ff d5                              	call rbp <Sleep>
0x1400011c0:   48 89 f8                           	mov rax, rdi
0x1400011c3:   f0 48 0f b1 33                     	lock cmpxchg qword ptr [rbx], rsi
0x1400011c8:   48 85 c0                           	test rax, rax
0x1400011cb:   75 e3                              	jne 0x1400011b0 <__tmainCRTStartup+0x30>
0x1400011cd:   48 8b 35 ac 32 00 00               	mov rsi, qword ptr [rip + 0x32ac]
0x1400011d4:   31 ff                              	xor edi, edi
0x1400011d6:   8b 06                              	mov eax, dword ptr [rsi]
0x1400011d8:   83 f8 01                           	cmp eax, 1
0x1400011db:   0f 84 56 01 00 00                  	je 0x140001337 <__tmainCRTStartup+0x1b7>
0x1400011e1:   8b 06                              	mov eax, dword ptr [rsi]
0x1400011e3:   85 c0                              	test eax, eax
0x1400011e5:   0f 84 b5 01 00 00                  	je 0x1400013a0 <__tmainCRTStartup+0x220>
0x1400011eb:   c7 05 13 5e 00 00 01 00 00 00      	mov dword ptr [rip + 0x5e13], 1
0x1400011f5:   8b 06                              	mov eax, dword ptr [rsi]
0x1400011f7:   83 f8 01                           	cmp eax, 1
0x1400011fa:   0f 84 4c 01 00 00                  	je 0x14000134c <__tmainCRTStartup+0x1cc>
0x140001200:   85 ff                              	test edi, edi
0x140001202:   0f 84 65 01 00 00                  	je 0x14000136d <__tmainCRTStartup+0x1ed>
0x140001208:   48 8b 05 c1 31 00 00               	mov rax, qword ptr [rip + 0x31c1]
0x14000120f:   48 8b 00                           	mov rax, qword ptr [rax]
0x140001212:   48 85 c0                           	test rax, rax
0x140001215:   74 0c                              	je 0x140001223 <__tmainCRTStartup+0xa3>
0x140001217:   45 31 c0                           	xor r8d, r8d
0x14000121a:   ba 02 00 00 00                     	mov edx, 2
0x14000121f:   31 c9                              	xor ecx, ecx
0x140001221:   ff d0                              	call rax <__dyn_tls_init>
0x140001223:   e8 a8 09 00 00                     	call 0x140001bd0 <_pei386_runtime_relocator>
0x140001228:   48 8b 0d d1 32 00 00               	mov rcx, qword ptr [rip + 0x32d1]
0x14000122f:   ff 15 a3 6f 00 00                  	call qword ptr [rip + 0x6fa3] <SetUnhandledExceptionFilter>
0x140001235:   48 8b 15 24 32 00 00               	mov rdx, qword ptr [rip + 0x3224]
0x14000123c:   48 8d 0d bd fd ff ff               	lea rcx, [rip - 0x243]
0x140001243:   48 89 02                           	mov qword ptr [rdx], rax
0x140001246:   e8 b5 15 00 00                     	call 0x140002800 <mingw_set_invalid_parameter_handler>
0x14000124b:   e8 90 07 00 00                     	call 0x1400019e0 <_fpreset>
0x140001250:   8b 1d d2 5d 00 00                  	mov ebx, dword ptr [rip + 0x5dd2]
0x140001256:   8d 7b 01                           	lea edi, [rbx + 1]
0x140001259:   48 63 ff                           	movsxd rdi, edi
0x14000125c:   48 c1 e7 03                        	shl rdi, 3
0x140001260:   48 89 f9                           	mov rcx, rdi
0x140001263:   e8 40 16 00 00                     	call 0x1400028a8 <malloc>
0x140001268:   4c 8b 25 b1 5d 00 00               	mov r12, qword ptr [rip + 0x5db1]
0x14000126f:   48 89 c5                           	mov rbp, rax
0x140001272:   85 db                              	test ebx, ebx
0x140001274:   0f 8e 46 01 00 00                  	jle 0x1400013c0 <__tmainCRTStartup+0x240>
0x14000127a:   48 83 ef 08                        	sub rdi, 8
0x14000127e:   31 db                              	xor ebx, ebx
0x140001280:   49 8b 0c 1c                        	mov rcx, qword ptr [r12 + rbx]
0x140001284:   e8 37 16 00 00                     	call 0x1400028c0 <strlen>
0x140001289:   48 8d 70 01                        	lea rsi, [rax + 1]
0x14000128d:   48 89 f1                           	mov rcx, rsi
0x140001290:   e8 13 16 00 00                     	call 0x1400028a8 <malloc>
0x140001295:   49 89 f0                           	mov r8, rsi
0x140001298:   48 89 44 1d 00                     	mov qword ptr [rbp + rbx], rax
0x14000129d:   49 8b 14 1c                        	mov rdx, qword ptr [r12 + rbx]
0x1400012a1:   48 89 c1                           	mov rcx, rax
0x1400012a4:   48 83 c3 08                        	add rbx, 8
0x1400012a8:   e8 03 16 00 00                     	call 0x1400028b0 <memcpy>
0x1400012ad:   48 39 df                           	cmp rdi, rbx
0x1400012b0:   75 ce                              	jne 0x140001280 <__tmainCRTStartup+0x100>
0x1400012b2:   48 01 ef                           	add rdi, rbp
0x1400012b5:   48 c7 07 00 00 00 00               	mov qword ptr [rdi], 0
0x1400012bc:   48 89 2d 5d 5d 00 00               	mov qword ptr [rip + 0x5d5d], rbp
0x1400012c3:   e8 18 05 00 00                     	call 0x1400017e0 <__main>
0x1400012c8:   48 8b 05 21 31 00 00               	mov rax, qword ptr [rip + 0x3121]
0x1400012cf:   4c 8b 05 42 5d 00 00               	mov r8, qword ptr [rip + 0x5d42]
0x1400012d6:   8b 0d 4c 5d 00 00                  	mov ecx, dword ptr [rip + 0x5d4c]
0x1400012dc:   48 8b 00                           	mov rax, qword ptr [rax]
0x1400012df:   4c 89 00                           	mov qword ptr [rax], r8
0x1400012e2:   48 8b 15 37 5d 00 00               	mov rdx, qword ptr [rip + 0x5d37]
0x1400012e9:   e8 56 03 00 00                     	call 0x140001644 <main>
0x1400012ee:   8b 0d 18 5d 00 00                  	mov ecx, dword ptr [rip + 0x5d18]
0x1400012f4:   89 05 16 5d 00 00                  	mov dword ptr [rip + 0x5d16], eax
0x1400012fa:   85 c9                              	test ecx, ecx
0x1400012fc:   0f 84 c6 00 00 00                  	je 0x1400013c8 <__tmainCRTStartup+0x248>
0x140001302:   8b 15 00 5d 00 00                  	mov edx, dword ptr [rip + 0x5d00]
0x140001308:   85 d2                              	test edx, edx
0x14000130a:   74 74                              	je 0x140001380 <__tmainCRTStartup+0x200>
0x14000130c:   48 83 c4 20                        	add rsp, 0x20
0x140001310:   5b                                 	pop rbx
0x140001311:   5e                                 	pop rsi
0x140001312:   5f                                 	pop rdi
0x140001313:   5d                                 	pop rbp
0x140001314:   41 5c                              	pop r12
0x140001316:   c3                                 	ret 
; data inside code section at 0x140001317 -- 0x140001320
0x140001317:   66 0f 1f 84 00 00 00 00  00                        |f........       |
0x140001320:   48 8b 35 59 31 00 00               	mov rsi, qword ptr [rip + 0x3159]
0x140001327:   bf 01 00 00 00                     	mov edi, 1
0x14000132c:   8b 06                              	mov eax, dword ptr [rsi]
0x14000132e:   83 f8 01                           	cmp eax, 1
0x140001331:   0f 85 aa fe ff ff                  	jne 0x1400011e1 <__tmainCRTStartup+0x61>
0x140001337:   b9 1f 00 00 00                     	mov ecx, 0x1f
0x14000133c:   e8 17 15 00 00                     	call 0x140002858 <_amsg_exit>
0x140001341:   8b 06                              	mov eax, dword ptr [rsi]
0x140001343:   83 f8 01                           	cmp eax, 1
0x140001346:   0f 85 b4 fe ff ff                  	jne 0x140001200 <__tmainCRTStartup+0x80>
0x14000134c:   48 8b 15 4d 31 00 00               	mov rdx, qword ptr [rip + 0x314d]
0x140001353:   48 8b 0d 36 31 00 00               	mov rcx, qword ptr [rip + 0x3136]
0x14000135a:   e8 09 15 00 00                     	call 0x140002868 <_initterm>
0x14000135f:   c7 06 02 00 00 00                  	mov dword ptr [rsi], 2
0x140001365:   85 ff                              	test edi, edi
0x140001367:   0f 85 9b fe ff ff                  	jne 0x140001208 <__tmainCRTStartup+0x88>
0x14000136d:   31 c0                              	xor eax, eax
0x14000136f:   48 87 03                           	xchg qword ptr [rbx], rax
0x140001372:   e9 91 fe ff ff                     	jmp 0x140001208 <__tmainCRTStartup+0x88>
; data inside code section at 0x140001377 -- 0x140001380
0x140001377:   66 0f 1f 84 00 00 00 00  00                        |f........       |
0x140001380:   e8 db 14 00 00                     	call 0x140002860 <_cexit>
0x140001385:   8b 05 85 5c 00 00                  	mov eax, dword ptr [rip + 0x5c85]
0x14000138b:   48 83 c4 20                        	add rsp, 0x20
0x14000138f:   5b                                 	pop rbx
0x140001390:   5e                                 	pop rsi
0x140001391:   5f                                 	pop rdi
0x140001392:   5d                                 	pop rbp
0x140001393:   41 5c                              	pop r12
0x140001395:   c3                                 	ret 
; data inside code section at 0x140001396 -- 0x1400013a0
0x140001396:   66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x1400013a0:   48 8b 15 19 31 00 00               	mov rdx, qword ptr [rip + 0x3119]
0x1400013a7:   48 8b 0d 02 31 00 00               	mov rcx, qword ptr [rip + 0x3102]
0x1400013ae:   c7 06 01 00 00 00                  	mov dword ptr [rsi], 1
0x1400013b4:   e8 af 14 00 00                     	call 0x140002868 <_initterm>
0x1400013b9:   e9 37 fe ff ff                     	jmp 0x1400011f5 <__tmainCRTStartup+0x75>
; data inside code section at 0x1400013be -- 0x1400013c0
0x1400013be:   66 90                                              |f.              |
0x1400013c0:   48 89 c7                           	mov rdi, rax
0x1400013c3:   e9 ed fe ff ff                     	jmp 0x1400012b5 <__tmainCRTStartup+0x135>
0x1400013c8:   89 c1                              	mov ecx, eax
0x1400013ca:   e8 b9 14 00 00                     	call 0x140002888 <exit>
; data inside code section at 0x1400013cf -- 0x1400013d0
0x1400013cf:   90                                                 |.               |
; function: WinMainCRTStartup at 0x1400013d0 -- 0x1400013ed
0x1400013d0:   48 83 ec 28                        	sub rsp, 0x28
0x1400013d4:   48 8b 05 45 30 00 00               	mov rax, qword ptr [rip + 0x3045]
0x1400013db:   c7 00 01 00 00 00                  	mov dword ptr [rax], 1
0x1400013e1:   e8 9a fd ff ff                     	call 0x140001180 <__tmainCRTStartup>
0x1400013e6:   90                                 	nop 
0x1400013e7:   90                                 	nop 
0x1400013e8:   48 83 c4 28                        	add rsp, 0x28
0x1400013ec:   c3                                 	ret 
; data inside code section at 0x1400013ed -- 0x1400013f0
0x1400013ed:   0f 1f 00                                           |...             |
; function: mainCRTStartup at 0x1400013f0 -- 0x14000140d
0x1400013f0:   48 83 ec 28                        	sub rsp, 0x28
0x1400013f4:   48 8b 05 25 30 00 00               	mov rax, qword ptr [rip + 0x3025]
0x1400013fb:   c7 00 00 00 00 00                  	mov dword ptr [rax], 0
0x140001401:   e8 7a fd ff ff                     	call 0x140001180 <__tmainCRTStartup>
0x140001406:   90                                 	nop 
0x140001407:   90                                 	nop 
0x140001408:   48 83 c4 28                        	add rsp, 0x28
0x14000140c:   c3                                 	ret 
; data inside code section at 0x14000140d -- 0x140001410
0x14000140d:   0f 1f 00                                           |...             |
; function: atexit at 0x140001410 -- 0x140001424
0x140001410:   48 83 ec 28                        	sub rsp, 0x28
0x140001414:   e8 57 14 00 00                     	call 0x140002870 <_onexit>
0x140001419:   48 83 f8 01                        	cmp rax, 1
0x14000141d:   19 c0                              	sbb eax, eax
0x14000141f:   48 83 c4 28                        	add rsp, 0x28
0x140001423:   c3                                 	ret 
; data inside code section at 0x140001424 -- 0x140001430
0x140001424:   90 90 90 90 90 90 90 90  90 90 90 90               |............    |
; function: __gcc_register_frame at 0x140001430 -- 0x14000143c
0x140001430:   48 8d 0d 09 00 00 00               	lea rcx, [rip + 9]
0x140001437:   e9 d4 ff ff ff                     	jmp 0x140001410 <atexit>
; data inside code section at 0x14000143c -- 0x140001440
0x14000143c:   0f 1f 40 00                                        |..@.            |
; function: __gcc_deregister_frame at 0x140001440 -- 0x140001441
0x140001440:   c3                                 	ret 
; data inside code section at 0x140001441 -- 0x140001450
0x140001441:   90 90 90 90 90 90 90 90  90 90 90 90 90 90 90      |............... |
; function: _Z4swapPiS_ at 0x140001450 -- 0x140001485
0x140001450:   55                                 	push rbp
0x140001451:   48 89 e5                           	mov rbp, rsp
0x140001454:   48 83 ec 10                        	sub rsp, 0x10
0x140001458:   48 89 4d 10                        	mov qword ptr [rbp + 0x10], rcx
0x14000145c:   48 89 55 18                        	mov qword ptr [rbp + 0x18], rdx
0x140001460:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x140001464:   8b 00                              	mov eax, dword ptr [rax]
0x140001466:   89 45 fc                           	mov dword ptr [rbp - 4], eax
0x140001469:   48 8b 45 18                        	mov rax, qword ptr [rbp + 0x18]
0x14000146d:   8b 10                              	mov edx, dword ptr [rax]
0x14000146f:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x140001473:   89 10                              	mov dword ptr [rax], edx
0x140001475:   48 8b 45 18                        	mov rax, qword ptr [rbp + 0x18]
0x140001479:   8b 55 fc                           	mov edx, dword ptr [rbp - 4]
0x14000147c:   89 10                              	mov dword ptr [rax], edx
0x14000147e:   90                                 	nop 
0x14000147f:   48 83 c4 10                        	add rsp, 0x10
0x140001483:   5d                                 	pop rbp
0x140001484:   c3                                 	ret 
; function: _Z9partitionPiii at 0x140001485 -- 0x14000155d
0x140001485:   55                                 	push rbp
0x140001486:   48 89 e5                           	mov rbp, rsp
0x140001489:   48 83 ec 30                        	sub rsp, 0x30
0x14000148d:   48 89 4d 10                        	mov qword ptr [rbp + 0x10], rcx
0x140001491:   89 55 18                           	mov dword ptr [rbp + 0x18], edx
0x140001494:   44 89 45 20                        	mov dword ptr [rbp + 0x20], r8d
0x140001498:   8b 45 20                           	mov eax, dword ptr [rbp + 0x20]
0x14000149b:   48 98                              	cdqe 
0x14000149d:   48 8d 14 85 00 00 00 00            	lea rdx, [rax*4]
0x1400014a5:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x1400014a9:   48 01 d0                           	add rax, rdx
0x1400014ac:   8b 00                              	mov eax, dword ptr [rax]
0x1400014ae:   89 45 f4                           	mov dword ptr [rbp - 0xc], eax
0x1400014b1:   8b 45 18                           	mov eax, dword ptr [rbp + 0x18]
0x1400014b4:   83 e8 01                           	sub eax, 1
0x1400014b7:   89 45 fc                           	mov dword ptr [rbp - 4], eax
0x1400014ba:   8b 45 18                           	mov eax, dword ptr [rbp + 0x18]
0x1400014bd:   89 45 f8                           	mov dword ptr [rbp - 8], eax
0x1400014c0:   eb 53                              	jmp 0x140001515 <_Z9partitionPiii+0x90>
0x1400014c2:   8b 45 f8                           	mov eax, dword ptr [rbp - 8]
0x1400014c5:   48 98                              	cdqe 
0x1400014c7:   48 8d 14 85 00 00 00 00            	lea rdx, [rax*4]
0x1400014cf:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x1400014d3:   48 01 d0                           	add rax, rdx
0x1400014d6:   8b 00                              	mov eax, dword ptr [rax]
0x1400014d8:   39 45 f4                           	cmp dword ptr [rbp - 0xc], eax
0x1400014db:   7e 34                              	jle 0x140001511 <_Z9partitionPiii+0x8c>
0x1400014dd:   83 45 fc 01                        	add dword ptr [rbp - 4], 1
0x1400014e1:   8b 45 f8                           	mov eax, dword ptr [rbp - 8]
0x1400014e4:   48 98                              	cdqe 
0x1400014e6:   48 8d 14 85 00 00 00 00            	lea rdx, [rax*4]
0x1400014ee:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x1400014f2:   48 01 c2                           	add rdx, rax
0x1400014f5:   8b 45 fc                           	mov eax, dword ptr [rbp - 4]
0x1400014f8:   48 98                              	cdqe 
0x1400014fa:   48 8d 0c 85 00 00 00 00            	lea rcx, [rax*4]
0x140001502:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x140001506:   48 01 c8                           	add rax, rcx
0x140001509:   48 89 c1                           	mov rcx, rax
0x14000150c:   e8 3f ff ff ff                     	call 0x140001450 <_Z4swapPiS_>
0x140001511:   83 45 f8 01                        	add dword ptr [rbp - 8], 1
0x140001515:   8b 45 20                           	mov eax, dword ptr [rbp + 0x20]
0x140001518:   3b 45 f8                           	cmp eax, dword ptr [rbp - 8]
0x14000151b:   7f a5                              	jg 0x1400014c2 <_Z9partitionPiii+0x3d>
0x14000151d:   8b 45 20                           	mov eax, dword ptr [rbp + 0x20]
0x140001520:   48 98                              	cdqe 
0x140001522:   48 8d 14 85 00 00 00 00            	lea rdx, [rax*4]
0x14000152a:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x14000152e:   48 01 c2                           	add rdx, rax
0x140001531:   8b 45 fc                           	mov eax, dword ptr [rbp - 4]
0x140001534:   48 98                              	cdqe 
0x140001536:   48 83 c0 01                        	add rax, 1
0x14000153a:   48 8d 0c 85 00 00 00 00            	lea rcx, [rax*4]
0x140001542:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x140001546:   48 01 c8                           	add rax, rcx
0x140001549:   48 89 c1                           	mov rcx, rax
0x14000154c:   e8 ff fe ff ff                     	call 0x140001450 <_Z4swapPiS_>
0x140001551:   8b 45 fc                           	mov eax, dword ptr [rbp - 4]
0x140001554:   83 c0 01                           	add eax, 1
0x140001557:   48 83 c4 30                        	add rsp, 0x30
0x14000155b:   5d                                 	pop rbp
0x14000155c:   c3                                 	ret 
; function: _Z9quickSortPiii at 0x14000155d -- 0x1400015c7
0x14000155d:   55                                 	push rbp
0x14000155e:   48 89 e5                           	mov rbp, rsp
0x140001561:   48 83 ec 30                        	sub rsp, 0x30
0x140001565:   48 89 4d 10                        	mov qword ptr [rbp + 0x10], rcx
0x140001569:   89 55 18                           	mov dword ptr [rbp + 0x18], edx
0x14000156c:   44 89 45 20                        	mov dword ptr [rbp + 0x20], r8d
0x140001570:   8b 45 18                           	mov eax, dword ptr [rbp + 0x18]
0x140001573:   3b 45 20                           	cmp eax, dword ptr [rbp + 0x20]
0x140001576:   7d 48                              	jge 0x1400015c0 <_Z9quickSortPiii+0x63>
0x140001578:   8b 4d 20                           	mov ecx, dword ptr [rbp + 0x20]
0x14000157b:   8b 55 18                           	mov edx, dword ptr [rbp + 0x18]
0x14000157e:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x140001582:   41 89 c8                           	mov r8d, ecx
0x140001585:   48 89 c1                           	mov rcx, rax
0x140001588:   e8 f8 fe ff ff                     	call 0x140001485 <_Z9partitionPiii>
0x14000158d:   89 45 fc                           	mov dword ptr [rbp - 4], eax
0x140001590:   8b 45 fc                           	mov eax, dword ptr [rbp - 4]
0x140001593:   8d 48 ff                           	lea ecx, [rax - 1]
0x140001596:   8b 55 18                           	mov edx, dword ptr [rbp + 0x18]
0x140001599:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x14000159d:   41 89 c8                           	mov r8d, ecx
0x1400015a0:   48 89 c1                           	mov rcx, rax
0x1400015a3:   e8 b5 ff ff ff                     	call 0x14000155d <_Z9quickSortPiii>
0x1400015a8:   8b 45 fc                           	mov eax, dword ptr [rbp - 4]
0x1400015ab:   8d 50 01                           	lea edx, [rax + 1]
0x1400015ae:   8b 4d 20                           	mov ecx, dword ptr [rbp + 0x20]
0x1400015b1:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x1400015b5:   41 89 c8                           	mov r8d, ecx
0x1400015b8:   48 89 c1                           	mov rcx, rax
0x1400015bb:   e8 9d ff ff ff                     	call 0x14000155d <_Z9quickSortPiii>
0x1400015c0:   90                                 	nop 
0x1400015c1:   48 83 c4 30                        	add rsp, 0x30
0x1400015c5:   5d                                 	pop rbp
0x1400015c6:   c3                                 	ret 
; function: _Z10printArrayPii at 0x1400015c7 -- 0x140001644
0x1400015c7:   55                                 	push rbp
0x1400015c8:   48 89 e5                           	mov rbp, rsp
0x1400015cb:   48 83 ec 30                        	sub rsp, 0x30
0x1400015cf:   48 89 4d 10                        	mov qword ptr [rbp + 0x10], rcx
0x1400015d3:   89 55 18                           	mov dword ptr [rbp + 0x18], edx
0x1400015d6:   c7 45 fc 00 00 00 00               	mov dword ptr [rbp - 4], 0
0x1400015dd:   eb 3d                              	jmp 0x14000161c <_Z10printArrayPii+0x55>
0x1400015df:   8b 45 fc                           	mov eax, dword ptr [rbp - 4]
0x1400015e2:   48 98                              	cdqe 
0x1400015e4:   48 8d 14 85 00 00 00 00            	lea rdx, [rax*4]
0x1400015ec:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x1400015f0:   48 01 d0                           	add rax, rdx
0x1400015f3:   8b 00                              	mov eax, dword ptr [rax]
0x1400015f5:   89 c2                              	mov edx, eax
0x1400015f7:   48 8b 05 82 2d 00 00               	mov rax, qword ptr [rip + 0x2d82]
0x1400015fe:   48 89 c1                           	mov rcx, rax
0x140001601:   e8 1a 01 00 00                     	call 0x140001720 <_ZNSolsEi>
0x140001606:   48 89 c1                           	mov rcx, rax
0x140001609:   48 8d 05 f0 29 00 00               	lea rax, [rip + 0x29f0]
0x140001610:   48 89 c2                           	mov rdx, rax
0x140001613:   e8 e8 00 00 00                     	call 0x140001700 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc>
0x140001618:   83 45 fc 01                        	add dword ptr [rbp - 4], 1
0x14000161c:   8b 45 fc                           	mov eax, dword ptr [rbp - 4]
0x14000161f:   3b 45 18                           	cmp eax, dword ptr [rbp + 0x18]
0x140001622:   7c bb                              	jl 0x1400015df <_Z10printArrayPii+0x18>
0x140001624:   48 8b 05 65 2d 00 00               	mov rax, qword ptr [rip + 0x2d65]
0x14000162b:   48 89 c2                           	mov rdx, rax
0x14000162e:   48 8b 05 4b 2d 00 00               	mov rax, qword ptr [rip + 0x2d4b]
0x140001635:   48 89 c1                           	mov rcx, rax
0x140001638:   e8 eb 00 00 00                     	call 0x140001728 <_ZNSolsEPFRSoS_E>
0x14000163d:   90                                 	nop 
0x14000163e:   48 83 c4 30                        	add rsp, 0x30
0x140001642:   5d                                 	pop rbp
0x140001643:   c3                                 	ret 
; function: main at 0x140001644 -- 0x140001675
0x140001644:   55                                 	push rbp
0x140001645:   48 89 e5                           	mov rbp, rsp
0x140001648:   48 83 ec 20                        	sub rsp, 0x20
0x14000164c:   e8 8f 01 00 00                     	call 0x1400017e0 <__main>
0x140001651:   48 8d 05 aa 29 00 00               	lea rax, [rip + 0x29aa]
0x140001658:   48 89 c2                           	mov rdx, rax
0x14000165b:   48 8b 05 1e 2d 00 00               	mov rax, qword ptr [rip + 0x2d1e]
0x140001662:   48 89 c1                           	mov rcx, rax
0x140001665:   e8 96 00 00 00                     	call 0x140001700 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc>
0x14000166a:   b8 00 00 00 00                     	mov eax, 0
0x14000166f:   48 83 c4 20                        	add rsp, 0x20
0x140001673:   5d                                 	pop rbp
0x140001674:   c3                                 	ret 
; function: __tcf_0 at 0x140001675 -- 0x140001693
0x140001675:   55                                 	push rbp
0x140001676:   48 89 e5                           	mov rbp, rsp
0x140001679:   48 83 ec 20                        	sub rsp, 0x20
0x14000167d:   48 8d 05 ac 59 00 00               	lea rax, [rip + 0x59ac]
0x140001684:   48 89 c1                           	mov rcx, rax
0x140001687:   e8 84 00 00 00                     	call 0x140001710 <_ZNSt8ios_base4InitD1Ev>
0x14000168c:   90                                 	nop 
0x14000168d:   48 83 c4 20                        	add rsp, 0x20
0x140001691:   5d                                 	pop rbp
0x140001692:   c3                                 	ret 
; function: _Z41__static_initialization_and_destruction_0ii at 0x140001693 -- 0x1400016d5
0x140001693:   55                                 	push rbp
0x140001694:   48 89 e5                           	mov rbp, rsp
0x140001697:   48 83 ec 20                        	sub rsp, 0x20
0x14000169b:   89 4d 10                           	mov dword ptr [rbp + 0x10], ecx
0x14000169e:   89 55 18                           	mov dword ptr [rbp + 0x18], edx
0x1400016a1:   83 7d 10 01                        	cmp dword ptr [rbp + 0x10], 1
0x1400016a5:   75 27                              	jne 0x1400016ce <_Z41__static_initialization_and_destruction_0ii+0x3b>
0x1400016a7:   81 7d 18 ff ff 00 00               	cmp dword ptr [rbp + 0x18], 0xffff
0x1400016ae:   75 1e                              	jne 0x1400016ce <_Z41__static_initialization_and_destruction_0ii+0x3b>
0x1400016b0:   48 8d 05 79 59 00 00               	lea rax, [rip + 0x5979]
0x1400016b7:   48 89 c1                           	mov rcx, rax
0x1400016ba:   e8 59 00 00 00                     	call 0x140001718 <_ZNSt8ios_base4InitC1Ev>
0x1400016bf:   48 8d 05 af ff ff ff               	lea rax, [rip - 0x51]
0x1400016c6:   48 89 c1                           	mov rcx, rax
0x1400016c9:   e8 42 fd ff ff                     	call 0x140001410 <atexit>
0x1400016ce:   90                                 	nop 
0x1400016cf:   48 83 c4 20                        	add rsp, 0x20
0x1400016d3:   5d                                 	pop rbp
0x1400016d4:   c3                                 	ret 
; function: _GLOBAL__sub_I__Z4swapPiS_ at 0x1400016d5 -- 0x1400016f3
0x1400016d5:   55                                 	push rbp
0x1400016d6:   48 89 e5                           	mov rbp, rsp
0x1400016d9:   48 83 ec 20                        	sub rsp, 0x20
0x1400016dd:   ba ff ff 00 00                     	mov edx, 0xffff
0x1400016e2:   b9 01 00 00 00                     	mov ecx, 1
0x1400016e7:   e8 a7 ff ff ff                     	call 0x140001693 <_Z41__static_initialization_and_destruction_0ii>
0x1400016ec:   90                                 	nop 
0x1400016ed:   48 83 c4 20                        	add rsp, 0x20
0x1400016f1:   5d                                 	pop rbp
0x1400016f2:   c3                                 	ret 
; data inside code section at 0x1400016f3 -- 0x140001700
0x1400016f3:   90 90 90 90 90 90 90 90  90 90 90 90 90            |.............   |
; function: _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc at 0x140001700 -- 0x140001706
0x140001700:   ff 25 fa 6b 00 00                  	jmp qword ptr [rip + 0x6bfa] <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc>
; data inside code section at 0x140001706 -- 0x140001708
0x140001706:   90 90                                              |..              |
; function: _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_ at 0x140001708 -- 0x14000170e
0x140001708:   ff 25 ea 6b 00 00                  	jmp qword ptr [rip + 0x6bea] <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
; data inside code section at 0x14000170e -- 0x140001710
0x14000170e:   90 90                                              |..              |
; function: _ZNSt8ios_base4InitD1Ev at 0x140001710 -- 0x140001716
0x140001710:   ff 25 d2 6b 00 00                  	jmp qword ptr [rip + 0x6bd2] <_ZNSt8ios_base4InitD1Ev>
; data inside code section at 0x140001716 -- 0x140001718
0x140001716:   90 90                                              |..              |
; function: _ZNSt8ios_base4InitC1Ev at 0x140001718 -- 0x14000171e
0x140001718:   ff 25 c2 6b 00 00                  	jmp qword ptr [rip + 0x6bc2] <_ZNSt8ios_base4InitC1Ev>
; data inside code section at 0x14000171e -- 0x140001720
0x14000171e:   90 90                                              |..              |
; function: _ZNSolsEi at 0x140001720 -- 0x140001726
0x140001720:   ff 25 b2 6b 00 00                  	jmp qword ptr [rip + 0x6bb2] <_ZNSolsEi>
; data inside code section at 0x140001726 -- 0x140001728
0x140001726:   90 90                                              |..              |
; function: _ZNSolsEPFRSoS_E at 0x140001728 -- 0x14000172e
0x140001728:   ff 25 a2 6b 00 00                  	jmp qword ptr [rip + 0x6ba2] <_ZNSolsEPFRSoS_E>
; data inside code section at 0x14000172e -- 0x140001730
0x14000172e:   90 90                                              |..              |
; function: __do_global_dtors at 0x140001730 -- 0x14000176a
0x140001730:   48 83 ec 28                        	sub rsp, 0x28
0x140001734:   48 8b 05 c5 18 00 00               	mov rax, qword ptr [rip + 0x18c5]
0x14000173b:   48 8b 00                           	mov rax, qword ptr [rax]
0x14000173e:   48 85 c0                           	test rax, rax
0x140001741:   74 22                              	je 0x140001765 <__do_global_dtors+0x35>
0x140001743:   0f 1f 44 00 00                     	nop dword ptr [rax + rax]
0x140001748:   ff d0                              	call rax
0x14000174a:   48 8b 05 af 18 00 00               	mov rax, qword ptr [rip + 0x18af]
0x140001751:   48 8d 50 08                        	lea rdx, [rax + 8]
0x140001755:   48 8b 40 08                        	mov rax, qword ptr [rax + 8]
0x140001759:   48 89 15 a0 18 00 00               	mov qword ptr [rip + 0x18a0], rdx
0x140001760:   48 85 c0                           	test rax, rax
0x140001763:   75 e3                              	jne 0x140001748 <__do_global_dtors+0x18>
0x140001765:   48 83 c4 28                        	add rsp, 0x28
0x140001769:   c3                                 	ret 
; data inside code section at 0x14000176a -- 0x140001770
0x14000176a:   66 0f 1f 44 00 00                                  |f..D..          |
; function: __do_global_ctors at 0x140001770 -- 0x1400017da
0x140001770:   56                                 	push rsi
0x140001771:   53                                 	push rbx
0x140001772:   48 83 ec 28                        	sub rsp, 0x28
0x140001776:   48 8b 15 23 2c 00 00               	mov rdx, qword ptr [rip + 0x2c23]
0x14000177d:   48 8b 02                           	mov rax, qword ptr [rdx]
0x140001780:   89 c1                              	mov ecx, eax
0x140001782:   83 f8 ff                           	cmp eax, -1
0x140001785:   74 39                              	je 0x1400017c0 <__do_global_ctors+0x50>
0x140001787:   85 c9                              	test ecx, ecx
0x140001789:   74 20                              	je 0x1400017ab <__do_global_ctors+0x3b>
0x14000178b:   89 c8                              	mov eax, ecx
0x14000178d:   83 e9 01                           	sub ecx, 1
0x140001790:   48 8d 1c c2                        	lea rbx, [rdx + rax*8]
0x140001794:   48 29 c8                           	sub rax, rcx
0x140001797:   48 8d 74 c2 f8                     	lea rsi, [rdx + rax*8 - 8]
0x14000179c:   0f 1f 40 00                        	nop dword ptr [rax]
0x1400017a0:   ff 13                              	call qword ptr [rbx]
0x1400017a2:   48 83 eb 08                        	sub rbx, 8
0x1400017a6:   48 39 f3                           	cmp rbx, rsi
0x1400017a9:   75 f5                              	jne 0x1400017a0 <__do_global_ctors+0x30>
0x1400017ab:   48 8d 0d 7e ff ff ff               	lea rcx, [rip - 0x82]
0x1400017b2:   48 83 c4 28                        	add rsp, 0x28
0x1400017b6:   5b                                 	pop rbx
0x1400017b7:   5e                                 	pop rsi
0x1400017b8:   e9 53 fc ff ff                     	jmp 0x140001410 <atexit>
; data inside code section at 0x1400017bd -- 0x1400017c0
0x1400017bd:   0f 1f 00                                           |...             |
0x1400017c0:   31 c0                              	xor eax, eax
0x1400017c2:   66 0f 1f 44 00 00                  	nop word ptr [rax + rax]
0x1400017c8:   44 8d 40 01                        	lea r8d, [rax + 1]
0x1400017cc:   89 c1                              	mov ecx, eax
0x1400017ce:   4a 83 3c c2 00                     	cmp qword ptr [rdx + r8*8], 0
0x1400017d3:   4c 89 c0                           	mov rax, r8
0x1400017d6:   75 f0                              	jne 0x1400017c8 <__do_global_ctors+0x58>
0x1400017d8:   eb ad                              	jmp 0x140001787 <__do_global_ctors+0x17>
; data inside code section at 0x1400017da -- 0x1400017e0
0x1400017da:   66 0f 1f 44 00 00                                  |f..D..          |
; function: __main at 0x1400017e0 -- 0x1400017ff
0x1400017e0:   8b 05 5a 58 00 00                  	mov eax, dword ptr [rip + 0x585a]
0x1400017e6:   85 c0                              	test eax, eax
0x1400017e8:   74 06                              	je 0x1400017f0 <__main+0x10>
0x1400017ea:   c3                                 	ret 
; data inside code section at 0x1400017eb -- 0x1400017f0
0x1400017eb:   0f 1f 44 00 00                                     |..D..           |
0x1400017f0:   c7 05 46 58 00 00 01 00 00 00      	mov dword ptr [rip + 0x5846], 1
0x1400017fa:   e9 71 ff ff ff                     	jmp 0x140001770 <__do_global_ctors>
; data inside code section at 0x1400017ff -- 0x140001800
0x1400017ff:   90                                                 |.               |
; function: _setargv at 0x140001800 -- 0x140001803
0x140001800:   31 c0                              	xor eax, eax
0x140001802:   c3                                 	ret 
; data inside code section at 0x140001803 -- 0x140001810
0x140001803:   90 90 90 90 90 90 90 90  90 90 90 90 90            |.............   |
; function: __dyn_tls_dtor at 0x140001810 -- 0x14000183f
0x140001810:   48 83 ec 28                        	sub rsp, 0x28
0x140001814:   83 fa 03                           	cmp edx, 3
0x140001817:   74 17                              	je 0x140001830 <__dyn_tls_dtor+0x20>
0x140001819:   85 d2                              	test edx, edx
0x14000181b:   74 13                              	je 0x140001830 <__dyn_tls_dtor+0x20>
0x14000181d:   b8 01 00 00 00                     	mov eax, 1
0x140001822:   48 83 c4 28                        	add rsp, 0x28
0x140001826:   c3                                 	ret 
; data inside code section at 0x140001827 -- 0x140001830
0x140001827:   66 0f 1f 84 00 00 00 00  00                        |f........       |
0x140001830:   e8 5b 0a 00 00                     	call 0x140002290 <__mingw_TLScallback>
0x140001835:   b8 01 00 00 00                     	mov eax, 1
0x14000183a:   48 83 c4 28                        	add rsp, 0x28
0x14000183e:   c3                                 	ret 
; data inside code section at 0x14000183f -- 0x140001840
0x14000183f:   90                                                 |.               |
; function: __dyn_tls_init at 0x140001840 -- 0x1400018c1
0x140001840:   56                                 	push rsi
0x140001841:   53                                 	push rbx
0x140001842:   48 83 ec 28                        	sub rsp, 0x28
0x140001846:   48 8b 05 13 2b 00 00               	mov rax, qword ptr [rip + 0x2b13]
0x14000184d:   83 38 02                           	cmp dword ptr [rax], 2
0x140001850:   74 06                              	je 0x140001858 <__dyn_tls_init+0x18>
0x140001852:   c7 00 02 00 00 00                  	mov dword ptr [rax], 2
0x140001858:   83 fa 02                           	cmp edx, 2
0x14000185b:   74 13                              	je 0x140001870 <__dyn_tls_init+0x30>
0x14000185d:   83 fa 01                           	cmp edx, 1
0x140001860:   74 4e                              	je 0x1400018b0 <__dyn_tls_init+0x70>
0x140001862:   b8 01 00 00 00                     	mov eax, 1
0x140001867:   48 83 c4 28                        	add rsp, 0x28
0x14000186b:   5b                                 	pop rbx
0x14000186c:   5e                                 	pop rsi
0x14000186d:   c3                                 	ret 
; data inside code section at 0x14000186e -- 0x140001870
0x14000186e:   66 90                                              |f.              |
0x140001870:   48 8d 1d e1 77 00 00               	lea rbx, [rip + 0x77e1]
0x140001877:   48 8d 35 da 77 00 00               	lea rsi, [rip + 0x77da]
0x14000187e:   48 39 de                           	cmp rsi, rbx
0x140001881:   74 df                              	je 0x140001862 <__dyn_tls_init+0x22>
0x140001883:   0f 1f 44 00 00                     	nop dword ptr [rax + rax]
0x140001888:   48 8b 03                           	mov rax, qword ptr [rbx]
0x14000188b:   48 85 c0                           	test rax, rax
0x14000188e:   74 02                              	je 0x140001892 <__dyn_tls_init+0x52>
0x140001890:   ff d0                              	call rax
0x140001892:   48 83 c3 08                        	add rbx, 8
0x140001896:   48 39 de                           	cmp rsi, rbx
0x140001899:   75 ed                              	jne 0x140001888 <__dyn_tls_init+0x48>
0x14000189b:   b8 01 00 00 00                     	mov eax, 1
0x1400018a0:   48 83 c4 28                        	add rsp, 0x28
0x1400018a4:   5b                                 	pop rbx
0x1400018a5:   5e                                 	pop rsi
0x1400018a6:   c3                                 	ret 
; data inside code section at 0x1400018a7 -- 0x1400018b0
0x1400018a7:   66 0f 1f 84 00 00 00 00  00                        |f........       |
0x1400018b0:   e8 db 09 00 00                     	call 0x140002290 <__mingw_TLScallback>
0x1400018b5:   b8 01 00 00 00                     	mov eax, 1
0x1400018ba:   48 83 c4 28                        	add rsp, 0x28
0x1400018be:   5b                                 	pop rbx
0x1400018bf:   5e                                 	pop rsi
0x1400018c0:   c3                                 	ret 
; data inside code section at 0x1400018c1 -- 0x1400018d0
0x1400018c1:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00      |ff...........@. |
; function: __tlregdtor at 0x1400018d0 -- 0x1400018d3
0x1400018d0:   31 c0                              	xor eax, eax
0x1400018d2:   c3                                 	ret 
; data inside code section at 0x1400018d3 -- 0x1400018e0
0x1400018d3:   90 90 90 90 90 90 90 90  90 90 90 90 90            |.............   |
; function: _matherr at 0x1400018e0 -- 0x1400019d8
0x1400018e0:   56                                 	push rsi
0x1400018e1:   53                                 	push rbx
0x1400018e2:   48 83 ec 78                        	sub rsp, 0x78
0x1400018e6:   0f 11 74 24 40                     	movups xmmword ptr [rsp + 0x40], xmm6
0x1400018eb:   0f 11 7c 24 50                     	movups xmmword ptr [rsp + 0x50], xmm7
0x1400018f0:   44 0f 11 44 24 60                  	movups xmmword ptr [rsp + 0x60], xmm8
0x1400018f6:   83 39 06                           	cmp dword ptr [rcx], 6
0x1400018f9:   0f 87 cd 00 00 00                  	ja 0x1400019cc <_matherr+0xec>
0x1400018ff:   8b 01                              	mov eax, dword ptr [rcx]
0x140001901:   48 8d 15 9c 28 00 00               	lea rdx, [rip + 0x289c]
0x140001908:   48 63 04 82                        	movsxd rax, dword ptr [rdx + rax*4]
0x14000190c:   48 01 d0                           	add rax, rdx
0x14000190f:   ff e0                              	jmp rax
; data inside code section at 0x140001911 -- 0x140001918
0x140001911:   0f 1f 80 00 00 00 00                               |.......         |
0x140001918:   48 8d 1d 80 27 00 00               	lea rbx, [rip + 0x2780]
0x14000191f:   f2 44 0f 10 41 20                  	movsd xmm8, qword ptr [rcx + 0x20]
0x140001925:   f2 0f 10 79 18                     	movsd xmm7, qword ptr [rcx + 0x18]
0x14000192a:   f2 0f 10 71 10                     	movsd xmm6, qword ptr [rcx + 0x10]
0x14000192f:   48 8b 71 08                        	mov rsi, qword ptr [rcx + 8]
0x140001933:   b9 02 00 00 00                     	mov ecx, 2
0x140001938:   e8 d3 0e 00 00                     	call 0x140002810 <__acrt_iob_func>
0x14000193d:   f2 44 0f 11 44 24 30               	movsd qword ptr [rsp + 0x30], xmm8
0x140001944:   49 89 d8                           	mov r8, rbx
0x140001947:   48 8d 15 2a 28 00 00               	lea rdx, [rip + 0x282a]
0x14000194e:   f2 0f 11 7c 24 28                  	movsd qword ptr [rsp + 0x28], xmm7
0x140001954:   48 89 c1                           	mov rcx, rax
0x140001957:   49 89 f1                           	mov r9, rsi
0x14000195a:   f2 0f 11 74 24 20                  	movsd qword ptr [rsp + 0x20], xmm6
0x140001960:   e8 2b 0f 00 00                     	call 0x140002890 <fprintf>
0x140001965:   90                                 	nop 
0x140001966:   0f 10 74 24 40                     	movups xmm6, xmmword ptr [rsp + 0x40]
0x14000196b:   0f 10 7c 24 50                     	movups xmm7, xmmword ptr [rsp + 0x50]
0x140001970:   31 c0                              	xor eax, eax
0x140001972:   44 0f 10 44 24 60                  	movups xmm8, xmmword ptr [rsp + 0x60]
0x140001978:   48 83 c4 78                        	add rsp, 0x78
0x14000197c:   5b                                 	pop rbx
0x14000197d:   5e                                 	pop rsi
0x14000197e:   c3                                 	ret 
; data inside code section at 0x14000197f -- 0x140001980
0x14000197f:   90                                                 |.               |
0x140001980:   48 8d 1d f9 26 00 00               	lea rbx, [rip + 0x26f9]
0x140001987:   eb 96                              	jmp 0x14000191f <_matherr+0x3f>
; data inside code section at 0x140001989 -- 0x140001990
0x140001989:   0f 1f 80 00 00 00 00                               |.......         |
0x140001990:   48 8d 1d 49 27 00 00               	lea rbx, [rip + 0x2749]
0x140001997:   eb 86                              	jmp 0x14000191f <_matherr+0x3f>
; data inside code section at 0x140001999 -- 0x1400019a0
0x140001999:   0f 1f 80 00 00 00 00                               |.......         |
0x1400019a0:   48 8d 1d 19 27 00 00               	lea rbx, [rip + 0x2719]
0x1400019a7:   e9 73 ff ff ff                     	jmp 0x14000191f <_matherr+0x3f>
; data inside code section at 0x1400019ac -- 0x1400019b0
0x1400019ac:   0f 1f 40 00                                        |..@.            |
0x1400019b0:   48 8d 1d 79 27 00 00               	lea rbx, [rip + 0x2779]
0x1400019b7:   e9 63 ff ff ff                     	jmp 0x14000191f <_matherr+0x3f>
; data inside code section at 0x1400019bc -- 0x1400019c0
0x1400019bc:   0f 1f 40 00                                        |..@.            |
0x1400019c0:   48 8d 1d 41 27 00 00               	lea rbx, [rip + 0x2741]
0x1400019c7:   e9 53 ff ff ff                     	jmp 0x14000191f <_matherr+0x3f>
0x1400019cc:   48 8d 1d 93 27 00 00               	lea rbx, [rip + 0x2793]
0x1400019d3:   e9 47 ff ff ff                     	jmp 0x14000191f <_matherr+0x3f>
; data inside code section at 0x1400019d8 -- 0x1400019e0
0x1400019d8:   90 90 90 90 90 90 90 90                            |........        |
; function: _fpreset at 0x1400019e0 -- 0x1400019e3
0x1400019e0:   db e3                              	fninit 
0x1400019e2:   c3                                 	ret 
; data inside code section at 0x1400019e3 -- 0x1400019f0
0x1400019e3:   90 90 90 90 90 90 90 90  90 90 90 90 90            |.............   |
; function: __report_error at 0x1400019f0 -- 0x140001a58
0x1400019f0:   56                                 	push rsi
0x1400019f1:   53                                 	push rbx
0x1400019f2:   48 83 ec 38                        	sub rsp, 0x38
0x1400019f6:   48 89 cb                           	mov rbx, rcx
0x1400019f9:   48 8d 44 24 58                     	lea rax, [rsp + 0x58]
0x1400019fe:   b9 02 00 00 00                     	mov ecx, 2
0x140001a03:   48 89 54 24 58                     	mov qword ptr [rsp + 0x58], rdx
0x140001a08:   4c 89 44 24 60                     	mov qword ptr [rsp + 0x60], r8
0x140001a0d:   4c 89 4c 24 68                     	mov qword ptr [rsp + 0x68], r9
0x140001a12:   48 89 44 24 28                     	mov qword ptr [rsp + 0x28], rax
0x140001a17:   e8 f4 0d 00 00                     	call 0x140002810 <__acrt_iob_func>
0x140001a1c:   41 b8 1b 00 00 00                  	mov r8d, 0x1b
0x140001a22:   ba 01 00 00 00                     	mov edx, 1
0x140001a27:   48 8d 0d 92 27 00 00               	lea rcx, [rip + 0x2792]
0x140001a2e:   49 89 c1                           	mov r9, rax
0x140001a31:   e8 6a 0e 00 00                     	call 0x1400028a0 <fwrite>
0x140001a36:   48 8b 74 24 28                     	mov rsi, qword ptr [rsp + 0x28]
0x140001a3b:   b9 02 00 00 00                     	mov ecx, 2
0x140001a40:   e8 cb 0d 00 00                     	call 0x140002810 <__acrt_iob_func>
0x140001a45:   48 89 da                           	mov rdx, rbx
0x140001a48:   48 89 c1                           	mov rcx, rax
0x140001a4b:   49 89 f0                           	mov r8, rsi
0x140001a4e:   e8 7d 0e 00 00                     	call 0x1400028d0 <vfprintf>
0x140001a53:   e8 20 0e 00 00                     	call 0x140002878 <abort>
; data inside code section at 0x140001a58 -- 0x140001a60
0x140001a58:   90 0f 1f 80 00 00 00 00                            |........        |
; function: mark_section_writable at 0x140001a60 -- 0x140001bc1
0x140001a60:   57                                 	push rdi
0x140001a61:   56                                 	push rsi
0x140001a62:   53                                 	push rbx
0x140001a63:   48 83 ec 50                        	sub rsp, 0x50
0x140001a67:   48 63 35 36 56 00 00               	movsxd rsi, dword ptr [rip + 0x5636]
0x140001a6e:   48 89 cb                           	mov rbx, rcx
0x140001a71:   85 f6                              	test esi, esi
0x140001a73:   0f 8e 17 01 00 00                  	jle 0x140001b90 <mark_section_writable+0x130>
0x140001a79:   48 8b 05 28 56 00 00               	mov rax, qword ptr [rip + 0x5628]
0x140001a80:   45 31 c9                           	xor r9d, r9d
0x140001a83:   48 83 c0 18                        	add rax, 0x18
0x140001a87:   66 0f 1f 84 00 00 00 00 00         	nop word ptr [rax + rax]
0x140001a90:   4c 8b 00                           	mov r8, qword ptr [rax]
0x140001a93:   4c 39 c3                           	cmp rbx, r8
0x140001a96:   72 13                              	jb 0x140001aab <mark_section_writable+0x4b>
0x140001a98:   48 8b 50 08                        	mov rdx, qword ptr [rax + 8]
0x140001a9c:   8b 52 08                           	mov edx, dword ptr [rdx + 8]
0x140001a9f:   49 01 d0                           	add r8, rdx
0x140001aa2:   4c 39 c3                           	cmp rbx, r8
0x140001aa5:   0f 82 8a 00 00 00                  	jb 0x140001b35 <mark_section_writable+0xd5>
0x140001aab:   41 83 c1 01                        	add r9d, 1
0x140001aaf:   48 83 c0 28                        	add rax, 0x28
0x140001ab3:   41 39 f1                           	cmp r9d, esi
0x140001ab6:   75 d8                              	jne 0x140001a90 <mark_section_writable+0x30>
0x140001ab8:   48 89 d9                           	mov rcx, rbx
0x140001abb:   e8 f0 09 00 00                     	call 0x1400024b0 <__mingw_GetSectionForAddress>
0x140001ac0:   48 89 c7                           	mov rdi, rax
0x140001ac3:   48 85 c0                           	test rax, rax
0x140001ac6:   0f 84 e6 00 00 00                  	je 0x140001bb2 <mark_section_writable+0x152>
0x140001acc:   48 8b 05 d5 55 00 00               	mov rax, qword ptr [rip + 0x55d5]
0x140001ad3:   48 8d 1c b6                        	lea rbx, [rsi + rsi*4]
0x140001ad7:   48 c1 e3 03                        	shl rbx, 3
0x140001adb:   48 01 d8                           	add rax, rbx
0x140001ade:   48 89 78 20                        	mov qword ptr [rax + 0x20], rdi
0x140001ae2:   c7 00 00 00 00 00                  	mov dword ptr [rax], 0
0x140001ae8:   e8 03 0b 00 00                     	call 0x1400025f0 <_GetPEImageBase>
0x140001aed:   8b 57 0c                           	mov edx, dword ptr [rdi + 0xc]
0x140001af0:   41 b8 30 00 00 00                  	mov r8d, 0x30
0x140001af6:   48 8d 0c 10                        	lea rcx, [rax + rdx]
0x140001afa:   48 8b 05 a7 55 00 00               	mov rax, qword ptr [rip + 0x55a7]
0x140001b01:   48 8d 54 24 20                     	lea rdx, [rsp + 0x20]
0x140001b06:   48 89 4c 18 18                     	mov qword ptr [rax + rbx + 0x18], rcx
0x140001b0b:   ff 15 e7 66 00 00                  	call qword ptr [rip + 0x66e7] <VirtualQuery>
0x140001b11:   48 85 c0                           	test rax, rax
0x140001b14:   0f 84 7d 00 00 00                  	je 0x140001b97 <mark_section_writable+0x137>
0x140001b1a:   8b 44 24 44                        	mov eax, dword ptr [rsp + 0x44]
0x140001b1e:   8d 50 c0                           	lea edx, [rax - 0x40]
0x140001b21:   83 e2 bf                           	and edx, 0xffffffbf
0x140001b24:   74 08                              	je 0x140001b2e <mark_section_writable+0xce>
0x140001b26:   8d 50 fc                           	lea edx, [rax - 4]
0x140001b29:   83 e2 fb                           	and edx, 0xfffffffb
0x140001b2c:   75 12                              	jne 0x140001b40 <mark_section_writable+0xe0>
0x140001b2e:   83 05 6f 55 00 00 01               	add dword ptr [rip + 0x556f], 1
0x140001b35:   48 83 c4 50                        	add rsp, 0x50
0x140001b39:   5b                                 	pop rbx
0x140001b3a:   5e                                 	pop rsi
0x140001b3b:   5f                                 	pop rdi
0x140001b3c:   c3                                 	ret 
; data inside code section at 0x140001b3d -- 0x140001b40
0x140001b3d:   0f 1f 00                                           |...             |
0x140001b40:   83 f8 02                           	cmp eax, 2
0x140001b43:   48 8b 4c 24 20                     	mov rcx, qword ptr [rsp + 0x20]
0x140001b48:   48 8b 54 24 38                     	mov rdx, qword ptr [rsp + 0x38]
0x140001b4d:   41 b8 40 00 00 00                  	mov r8d, 0x40
0x140001b53:   b8 04 00 00 00                     	mov eax, 4
0x140001b58:   44 0f 44 c0                        	cmove r8d, eax
0x140001b5c:   48 03 1d 45 55 00 00               	add rbx, qword ptr [rip + 0x5545]
0x140001b63:   48 89 4b 08                        	mov qword ptr [rbx + 8], rcx
0x140001b67:   49 89 d9                           	mov r9, rbx
0x140001b6a:   48 89 53 10                        	mov qword ptr [rbx + 0x10], rdx
0x140001b6e:   ff 15 7c 66 00 00                  	call qword ptr [rip + 0x667c] <VirtualProtect>
0x140001b74:   85 c0                              	test eax, eax
0x140001b76:   75 b6                              	jne 0x140001b2e <mark_section_writable+0xce>
0x140001b78:   ff 15 42 66 00 00                  	call qword ptr [rip + 0x6642] <GetLastError>
0x140001b7e:   48 8d 0d b3 26 00 00               	lea rcx, [rip + 0x26b3]
0x140001b85:   89 c2                              	mov edx, eax
0x140001b87:   e8 64 fe ff ff                     	call 0x1400019f0 <__report_error>
; data inside code section at 0x140001b8c -- 0x140001b90
0x140001b8c:   0f 1f 40 00                                        |..@.            |
0x140001b90:   31 f6                              	xor esi, esi
0x140001b92:   e9 21 ff ff ff                     	jmp 0x140001ab8 <mark_section_writable+0x58>
0x140001b97:   48 8b 05 0a 55 00 00               	mov rax, qword ptr [rip + 0x550a]
0x140001b9e:   8b 57 08                           	mov edx, dword ptr [rdi + 8]
0x140001ba1:   48 8d 0d 58 26 00 00               	lea rcx, [rip + 0x2658]
0x140001ba8:   4c 8b 44 18 18                     	mov r8, qword ptr [rax + rbx + 0x18]
0x140001bad:   e8 3e fe ff ff                     	call 0x1400019f0 <__report_error>
0x140001bb2:   48 89 da                           	mov rdx, rbx
0x140001bb5:   48 8d 0d 24 26 00 00               	lea rcx, [rip + 0x2624]
0x140001bbc:   e8 2f fe ff ff                     	call 0x1400019f0 <__report_error>
; data inside code section at 0x140001bc1 -- 0x140001bd0
0x140001bc1:   90 66 66 2e 0f 1f 84 00  00 00 00 00 0f 1f 00      |.ff............ |
; function: _pei386_runtime_relocator at 0x140001bd0 -- 0x140001f2a
0x140001bd0:   55                                 	push rbp
0x140001bd1:   41 57                              	push r15
0x140001bd3:   41 56                              	push r14
0x140001bd5:   41 55                              	push r13
0x140001bd7:   41 54                              	push r12
0x140001bd9:   57                                 	push rdi
0x140001bda:   56                                 	push rsi
0x140001bdb:   53                                 	push rbx
0x140001bdc:   48 83 ec 48                        	sub rsp, 0x48
0x140001be0:   48 8d 6c 24 40                     	lea rbp, [rsp + 0x40]
0x140001be5:   44 8b 25 b4 54 00 00               	mov r12d, dword ptr [rip + 0x54b4]
0x140001bec:   45 85 e4                           	test r12d, r12d
0x140001bef:   74 17                              	je 0x140001c08 <_pei386_runtime_relocator+0x38>
0x140001bf1:   48 8d 65 08                        	lea rsp, [rbp + 8]
0x140001bf5:   5b                                 	pop rbx
0x140001bf6:   5e                                 	pop rsi
0x140001bf7:   5f                                 	pop rdi
0x140001bf8:   41 5c                              	pop r12
0x140001bfa:   41 5d                              	pop r13
0x140001bfc:   41 5e                              	pop r14
0x140001bfe:   41 5f                              	pop r15
0x140001c00:   5d                                 	pop rbp
0x140001c01:   c3                                 	ret 
; data inside code section at 0x140001c02 -- 0x140001c08
0x140001c02:   66 0f 1f 44 00 00                                  |f..D..          |
0x140001c08:   c7 05 8e 54 00 00 01 00 00 00      	mov dword ptr [rip + 0x548e], 1
0x140001c12:   e8 19 09 00 00                     	call 0x140002530 <__mingw_GetSectionCount>
0x140001c17:   48 98                              	cdqe 
0x140001c19:   48 8d 04 80                        	lea rax, [rax + rax*4]
0x140001c1d:   48 8d 04 c5 0f 00 00 00            	lea rax, [rax*8 + 0xf]
0x140001c25:   48 83 e0 f0                        	and rax, 0xfffffffffffffff0
0x140001c29:   e8 62 0b 00 00                     	call 0x140002790 <___chkstk_ms>
0x140001c2e:   4c 8b 2d 7b 27 00 00               	mov r13, qword ptr [rip + 0x277b]
0x140001c35:   48 8b 1d 84 27 00 00               	mov rbx, qword ptr [rip + 0x2784]
0x140001c3c:   c7 05 5e 54 00 00 00 00 00 00      	mov dword ptr [rip + 0x545e], 0
0x140001c46:   48 29 c4                           	sub rsp, rax
0x140001c49:   48 8d 44 24 30                     	lea rax, [rsp + 0x30]
0x140001c4e:   48 89 05 53 54 00 00               	mov qword ptr [rip + 0x5453], rax
0x140001c55:   4c 89 e8                           	mov rax, r13
0x140001c58:   48 29 d8                           	sub rax, rbx
0x140001c5b:   48 83 f8 07                        	cmp rax, 7
0x140001c5f:   7e 90                              	jle 0x140001bf1 <_pei386_runtime_relocator+0x21>
0x140001c61:   8b 13                              	mov edx, dword ptr [rbx]
0x140001c63:   48 83 f8 0b                        	cmp rax, 0xb
0x140001c67:   0f 8f 7b 01 00 00                  	jg 0x140001de8 <_pei386_runtime_relocator+0x218>
0x140001c6d:   8b 03                              	mov eax, dword ptr [rbx]
0x140001c6f:   85 c0                              	test eax, eax
0x140001c71:   0f 85 69 02 00 00                  	jne 0x140001ee0 <_pei386_runtime_relocator+0x310>
0x140001c77:   8b 43 04                           	mov eax, dword ptr [rbx + 4]
0x140001c7a:   85 c0                              	test eax, eax
0x140001c7c:   0f 85 5e 02 00 00                  	jne 0x140001ee0 <_pei386_runtime_relocator+0x310>
0x140001c82:   8b 53 08                           	mov edx, dword ptr [rbx + 8]
0x140001c85:   83 fa 01                           	cmp edx, 1
0x140001c88:   0f 85 90 02 00 00                  	jne 0x140001f1e <_pei386_runtime_relocator+0x34e>
0x140001c8e:   48 83 c3 0c                        	add rbx, 0xc
0x140001c92:   4c 39 eb                           	cmp rbx, r13
0x140001c95:   0f 83 56 ff ff ff                  	jae 0x140001bf1 <_pei386_runtime_relocator+0x21>
0x140001c9b:   4c 8b 35 3e 27 00 00               	mov r14, qword ptr [rip + 0x273e]
0x140001ca2:   49 bf ff ff ff 7f ff ff ff ff      	movabs r15, 0xffffffff7fffffff
0x140001cac:   eb 54                              	jmp 0x140001d02 <_pei386_runtime_relocator+0x132>
; data inside code section at 0x140001cae -- 0x140001cb0
0x140001cae:   66 90                                              |f.              |
0x140001cb0:   0f b6 37                           	movzx esi, byte ptr [rdi]
0x140001cb3:   81 e1 c0 00 00 00                  	and ecx, 0xc0
0x140001cb9:   40 84 f6                           	test sil, sil
0x140001cbc:   0f 89 06 02 00 00                  	jns 0x140001ec8 <_pei386_runtime_relocator+0x2f8>
0x140001cc2:   48 81 ce 00 ff ff ff               	or rsi, 0xffffffffffffff00
0x140001cc9:   48 29 c6                           	sub rsi, rax
0x140001ccc:   4c 01 ce                           	add rsi, r9
0x140001ccf:   85 c9                              	test ecx, ecx
0x140001cd1:   75 17                              	jne 0x140001cea <_pei386_runtime_relocator+0x11a>
0x140001cd3:   48 81 fe ff 00 00 00               	cmp rsi, 0xff
0x140001cda:   0f 8f 4f 01 00 00                  	jg 0x140001e2f <_pei386_runtime_relocator+0x25f>
0x140001ce0:   48 83 fe 80                        	cmp rsi, -0x80
0x140001ce4:   0f 8c 45 01 00 00                  	jl 0x140001e2f <_pei386_runtime_relocator+0x25f>
0x140001cea:   48 89 f9                           	mov rcx, rdi
0x140001ced:   e8 6e fd ff ff                     	call 0x140001a60 <mark_section_writable>
0x140001cf2:   40 88 37                           	mov byte ptr [rdi], sil
0x140001cf5:   48 83 c3 0c                        	add rbx, 0xc
0x140001cf9:   4c 39 eb                           	cmp rbx, r13
0x140001cfc:   0f 83 8e 00 00 00                  	jae 0x140001d90 <_pei386_runtime_relocator+0x1c0>
0x140001d02:   8b 03                              	mov eax, dword ptr [rbx]
0x140001d04:   8b 4b 08                           	mov ecx, dword ptr [rbx + 8]
0x140001d07:   8b 7b 04                           	mov edi, dword ptr [rbx + 4]
0x140001d0a:   4c 01 f0                           	add rax, r14
0x140001d0d:   0f b6 d1                           	movzx edx, cl
0x140001d10:   4c 8b 08                           	mov r9, qword ptr [rax]
0x140001d13:   4c 01 f7                           	add rdi, r14
0x140001d16:   83 fa 20                           	cmp edx, 0x20
0x140001d19:   0f 84 29 01 00 00                  	je 0x140001e48 <_pei386_runtime_relocator+0x278>
0x140001d1f:   0f 87 eb 00 00 00                  	ja 0x140001e10 <_pei386_runtime_relocator+0x240>
0x140001d25:   83 fa 08                           	cmp edx, 8
0x140001d28:   74 86                              	je 0x140001cb0 <_pei386_runtime_relocator+0xe0>
0x140001d2a:   83 fa 10                           	cmp edx, 0x10
0x140001d2d:   0f 85 df 01 00 00                  	jne 0x140001f12 <_pei386_runtime_relocator+0x342>
0x140001d33:   0f b7 37                           	movzx esi, word ptr [rdi]
0x140001d36:   81 e1 c0 00 00 00                  	and ecx, 0xc0
0x140001d3c:   66 85 f6                           	test si, si
0x140001d3f:   0f 89 6b 01 00 00                  	jns 0x140001eb0 <_pei386_runtime_relocator+0x2e0>
0x140001d45:   48 81 ce 00 00 ff ff               	or rsi, 0xffffffffffff0000
0x140001d4c:   48 29 c6                           	sub rsi, rax
0x140001d4f:   4c 01 ce                           	add rsi, r9
0x140001d52:   85 c9                              	test ecx, ecx
0x140001d54:   75 1a                              	jne 0x140001d70 <_pei386_runtime_relocator+0x1a0>
0x140001d56:   48 81 fe 00 80 ff ff               	cmp rsi, -0x8000
0x140001d5d:   0f 8c cc 00 00 00                  	jl 0x140001e2f <_pei386_runtime_relocator+0x25f>
0x140001d63:   48 81 fe ff ff 00 00               	cmp rsi, 0xffff
0x140001d6a:   0f 8f bf 00 00 00                  	jg 0x140001e2f <_pei386_runtime_relocator+0x25f>
0x140001d70:   48 89 f9                           	mov rcx, rdi
0x140001d73:   48 83 c3 0c                        	add rbx, 0xc
0x140001d77:   e8 e4 fc ff ff                     	call 0x140001a60 <mark_section_writable>
0x140001d7c:   66 89 37                           	mov word ptr [rdi], si
0x140001d7f:   4c 39 eb                           	cmp rbx, r13
0x140001d82:   0f 82 7a ff ff ff                  	jb 0x140001d02 <_pei386_runtime_relocator+0x132>
0x140001d88:   0f 1f 84 00 00 00 00 00            	nop dword ptr [rax + rax]
0x140001d90:   8b 15 0e 53 00 00                  	mov edx, dword ptr [rip + 0x530e]
0x140001d96:   85 d2                              	test edx, edx
0x140001d98:   0f 8e 53 fe ff ff                  	jle 0x140001bf1 <_pei386_runtime_relocator+0x21>
0x140001d9e:   48 8b 35 4b 64 00 00               	mov rsi, qword ptr [rip + 0x644b]
0x140001da5:   31 db                              	xor ebx, ebx
0x140001da7:   48 8d 7d fc                        	lea rdi, [rbp - 4]
0x140001dab:   0f 1f 44 00 00                     	nop dword ptr [rax + rax]
0x140001db0:   48 8b 05 f1 52 00 00               	mov rax, qword ptr [rip + 0x52f1]
0x140001db7:   48 01 d8                           	add rax, rbx
0x140001dba:   44 8b 00                           	mov r8d, dword ptr [rax]
0x140001dbd:   45 85 c0                           	test r8d, r8d
0x140001dc0:   74 0d                              	je 0x140001dcf <_pei386_runtime_relocator+0x1ff>
0x140001dc2:   48 8b 50 10                        	mov rdx, qword ptr [rax + 0x10]
0x140001dc6:   48 8b 48 08                        	mov rcx, qword ptr [rax + 8]
0x140001dca:   49 89 f9                           	mov r9, rdi
0x140001dcd:   ff d6                              	call rsi <VirtualProtect>
0x140001dcf:   41 83 c4 01                        	add r12d, 1
0x140001dd3:   48 83 c3 28                        	add rbx, 0x28
0x140001dd7:   44 3b 25 c6 52 00 00               	cmp r12d, dword ptr [rip + 0x52c6]
0x140001dde:   7c d0                              	jl 0x140001db0 <_pei386_runtime_relocator+0x1e0>
0x140001de0:   e9 0c fe ff ff                     	jmp 0x140001bf1 <_pei386_runtime_relocator+0x21>
; data inside code section at 0x140001de5 -- 0x140001de8
0x140001de5:   0f 1f 00                                           |...             |
0x140001de8:   85 d2                              	test edx, edx
0x140001dea:   0f 85 f0 00 00 00                  	jne 0x140001ee0 <_pei386_runtime_relocator+0x310>
0x140001df0:   8b 43 04                           	mov eax, dword ptr [rbx + 4]
0x140001df3:   89 c2                              	mov edx, eax
0x140001df5:   0b 53 08                           	or edx, dword ptr [rbx + 8]
0x140001df8:   0f 85 7c fe ff ff                  	jne 0x140001c7a <_pei386_runtime_relocator+0xaa>
0x140001dfe:   48 83 c3 0c                        	add rbx, 0xc
0x140001e02:   e9 66 fe ff ff                     	jmp 0x140001c6d <_pei386_runtime_relocator+0x9d>
; data inside code section at 0x140001e07 -- 0x140001e10
0x140001e07:   66 0f 1f 84 00 00 00 00  00                        |f........       |
0x140001e10:   83 fa 40                           	cmp edx, 0x40
0x140001e13:   0f 85 f9 00 00 00                  	jne 0x140001f12 <_pei386_runtime_relocator+0x342>
0x140001e19:   48 8b 37                           	mov rsi, qword ptr [rdi]
0x140001e1c:   48 29 c6                           	sub rsi, rax
0x140001e1f:   4c 01 ce                           	add rsi, r9
0x140001e22:   81 e1 c0 00 00 00                  	and ecx, 0xc0
0x140001e28:   75 66                              	jne 0x140001e90 <_pei386_runtime_relocator+0x2c0>
0x140001e2a:   48 85 f6                           	test rsi, rsi
0x140001e2d:   78 61                              	js 0x140001e90 <_pei386_runtime_relocator+0x2c0>
0x140001e2f:   48 89 74 24 20                     	mov qword ptr [rsp + 0x20], rsi
0x140001e34:   49 89 f8                           	mov r8, rdi
0x140001e37:   48 8d 0d 8a 24 00 00               	lea rcx, [rip + 0x248a]
0x140001e3e:   e8 ad fb ff ff                     	call 0x1400019f0 <__report_error>
; data inside code section at 0x140001e43 -- 0x140001e48
0x140001e43:   0f 1f 44 00 00                                     |..D..           |
0x140001e48:   8b 37                              	mov esi, dword ptr [rdi]
0x140001e4a:   81 e1 c0 00 00 00                  	and ecx, 0xc0
0x140001e50:   85 f6                              	test esi, esi
0x140001e52:   79 4c                              	jns 0x140001ea0 <_pei386_runtime_relocator+0x2d0>
0x140001e54:   49 bb 00 00 00 00 ff ff ff ff      	movabs r11, 0xffffffff00000000
0x140001e5e:   4c 09 de                           	or rsi, r11
0x140001e61:   48 29 c6                           	sub rsi, rax
0x140001e64:   4c 01 ce                           	add rsi, r9
0x140001e67:   85 c9                              	test ecx, ecx
0x140001e69:   75 0f                              	jne 0x140001e7a <_pei386_runtime_relocator+0x2aa>
0x140001e6b:   4c 39 fe                           	cmp rsi, r15
0x140001e6e:   7e bf                              	jle 0x140001e2f <_pei386_runtime_relocator+0x25f>
0x140001e70:   b8 ff ff ff ff                     	mov eax, 0xffffffff
0x140001e75:   48 39 c6                           	cmp rsi, rax
0x140001e78:   7f b5                              	jg 0x140001e2f <_pei386_runtime_relocator+0x25f>
0x140001e7a:   48 89 f9                           	mov rcx, rdi
0x140001e7d:   e8 de fb ff ff                     	call 0x140001a60 <mark_section_writable>
0x140001e82:   89 37                              	mov dword ptr [rdi], esi
0x140001e84:   e9 6c fe ff ff                     	jmp 0x140001cf5 <_pei386_runtime_relocator+0x125>
; data inside code section at 0x140001e89 -- 0x140001e90
0x140001e89:   0f 1f 80 00 00 00 00                               |.......         |
0x140001e90:   48 89 f9                           	mov rcx, rdi
0x140001e93:   e8 c8 fb ff ff                     	call 0x140001a60 <mark_section_writable>
0x140001e98:   48 89 37                           	mov qword ptr [rdi], rsi
0x140001e9b:   e9 55 fe ff ff                     	jmp 0x140001cf5 <_pei386_runtime_relocator+0x125>
0x140001ea0:   48 29 c6                           	sub rsi, rax
0x140001ea3:   4c 01 ce                           	add rsi, r9
0x140001ea6:   85 c9                              	test ecx, ecx
0x140001ea8:   74 c1                              	je 0x140001e6b <_pei386_runtime_relocator+0x29b>
0x140001eaa:   eb ce                              	jmp 0x140001e7a <_pei386_runtime_relocator+0x2aa>
; data inside code section at 0x140001eac -- 0x140001eb0
0x140001eac:   0f 1f 40 00                                        |..@.            |
0x140001eb0:   48 29 c6                           	sub rsi, rax
0x140001eb3:   4c 01 ce                           	add rsi, r9
0x140001eb6:   85 c9                              	test ecx, ecx
0x140001eb8:   0f 84 98 fe ff ff                  	je 0x140001d56 <_pei386_runtime_relocator+0x186>
0x140001ebe:   e9 ad fe ff ff                     	jmp 0x140001d70 <_pei386_runtime_relocator+0x1a0>
; data inside code section at 0x140001ec3 -- 0x140001ec8
0x140001ec3:   0f 1f 44 00 00                                     |..D..           |
0x140001ec8:   48 29 c6                           	sub rsi, rax
0x140001ecb:   4c 01 ce                           	add rsi, r9
0x140001ece:   85 c9                              	test ecx, ecx
0x140001ed0:   0f 84 fd fd ff ff                  	je 0x140001cd3 <_pei386_runtime_relocator+0x103>
0x140001ed6:   e9 0f fe ff ff                     	jmp 0x140001cea <_pei386_runtime_relocator+0x11a>
; data inside code section at 0x140001edb -- 0x140001ee0
0x140001edb:   0f 1f 44 00 00                                     |..D..           |
0x140001ee0:   4c 39 eb                           	cmp rbx, r13
0x140001ee3:   0f 83 08 fd ff ff                  	jae 0x140001bf1 <_pei386_runtime_relocator+0x21>
0x140001ee9:   4c 8b 35 f0 24 00 00               	mov r14, qword ptr [rip + 0x24f0]
0x140001ef0:   8b 73 04                           	mov esi, dword ptr [rbx + 4]
0x140001ef3:   8b 3b                              	mov edi, dword ptr [rbx]
0x140001ef5:   48 83 c3 08                        	add rbx, 8
0x140001ef9:   4c 01 f6                           	add rsi, r14
0x140001efc:   03 3e                              	add edi, dword ptr [rsi]
0x140001efe:   48 89 f1                           	mov rcx, rsi
0x140001f01:   e8 5a fb ff ff                     	call 0x140001a60 <mark_section_writable>
0x140001f06:   89 3e                              	mov dword ptr [rsi], edi
0x140001f08:   4c 39 eb                           	cmp rbx, r13
0x140001f0b:   72 e3                              	jb 0x140001ef0 <_pei386_runtime_relocator+0x320>
0x140001f0d:   e9 7e fe ff ff                     	jmp 0x140001d90 <_pei386_runtime_relocator+0x1c0>
0x140001f12:   48 8d 0d 7f 23 00 00               	lea rcx, [rip + 0x237f]
0x140001f19:   e8 d2 fa ff ff                     	call 0x1400019f0 <__report_error>
0x140001f1e:   48 8d 0d 3b 23 00 00               	lea rcx, [rip + 0x233b]
0x140001f25:   e8 c6 fa ff ff                     	call 0x1400019f0 <__report_error>
; data inside code section at 0x140001f2a -- 0x140001f30
0x140001f2a:   90 90 90 90 90 90                                  |......          |
; function: __mingw_raise_matherr at 0x140001f30 -- 0x140001f6e
0x140001f30:   48 83 ec 58                        	sub rsp, 0x58
0x140001f34:   48 8b 05 75 51 00 00               	mov rax, qword ptr [rip + 0x5175]
0x140001f3b:   66 0f 14 d3                        	unpcklpd xmm2, xmm3
0x140001f3f:   48 85 c0                           	test rax, rax
0x140001f42:   74 25                              	je 0x140001f69 <__mingw_raise_matherr+0x39>
0x140001f44:   f2 0f 10 84 24 80 00 00 00         	movsd xmm0, qword ptr [rsp + 0x80]
0x140001f4d:   89 4c 24 20                        	mov dword ptr [rsp + 0x20], ecx
0x140001f51:   48 8d 4c 24 20                     	lea rcx, [rsp + 0x20]
0x140001f56:   48 89 54 24 28                     	mov qword ptr [rsp + 0x28], rdx
0x140001f5b:   0f 11 54 24 30                     	movups xmmword ptr [rsp + 0x30], xmm2
0x140001f60:   f2 0f 11 44 24 40                  	movsd qword ptr [rsp + 0x40], xmm0
0x140001f66:   ff d0                              	call rax
0x140001f68:   90                                 	nop 
0x140001f69:   48 83 c4 58                        	add rsp, 0x58
0x140001f6d:   c3                                 	ret 
; data inside code section at 0x140001f6e -- 0x140001f70
0x140001f6e:   66 90                                              |f.              |
; function: __mingw_setusermatherr at 0x140001f70 -- 0x140001f7c
0x140001f70:   48 89 0d 39 51 00 00               	mov qword ptr [rip + 0x5139], rcx
0x140001f77:   e9 d4 08 00 00                     	jmp 0x140002850 <__setusermatherr>
; data inside code section at 0x140001f7c -- 0x140001f80
0x140001f7c:   90 90 90 90                                        |....            |
; function: _gnu_exception_handler at 0x140001f80 -- 0x140002118
0x140001f80:   53                                 	push rbx
0x140001f81:   48 83 ec 20                        	sub rsp, 0x20
0x140001f85:   48 8b 11                           	mov rdx, qword ptr [rcx]
0x140001f88:   8b 02                              	mov eax, dword ptr [rdx]
0x140001f8a:   48 89 cb                           	mov rbx, rcx
0x140001f8d:   89 c1                              	mov ecx, eax
0x140001f8f:   81 e1 ff ff ff 20                  	and ecx, 0x20ffffff
0x140001f95:   81 f9 43 43 47 20                  	cmp ecx, 0x20474343
0x140001f9b:   0f 84 9f 00 00 00                  	je 0x140002040 <_gnu_exception_handler+0xc0>
0x140001fa1:   3d 96 00 00 c0                     	cmp eax, 0xc0000096
0x140001fa6:   77 77                              	ja 0x14000201f <_gnu_exception_handler+0x9f>
0x140001fa8:   3d 8b 00 00 c0                     	cmp eax, 0xc000008b
0x140001fad:   76 21                              	jbe 0x140001fd0 <_gnu_exception_handler+0x50>
0x140001faf:   05 73 ff ff 3f                     	add eax, 0x3fffff73
0x140001fb4:   83 f8 09                           	cmp eax, 9
0x140001fb7:   77 54                              	ja 0x14000200d <_gnu_exception_handler+0x8d>
0x140001fb9:   48 8d 15 60 23 00 00               	lea rdx, [rip + 0x2360]
0x140001fc0:   48 63 04 82                        	movsxd rax, dword ptr [rdx + rax*4]
0x140001fc4:   48 01 d0                           	add rax, rdx
0x140001fc7:   ff e0                              	jmp rax
; data inside code section at 0x140001fc9 -- 0x140001fd0
0x140001fc9:   0f 1f 80 00 00 00 00                               |.......         |
0x140001fd0:   3d 05 00 00 c0                     	cmp eax, 0xc0000005
0x140001fd5:   0f 84 d5 00 00 00                  	je 0x1400020b0 <_gnu_exception_handler+0x130>
0x140001fdb:   76 3b                              	jbe 0x140002018 <_gnu_exception_handler+0x98>
0x140001fdd:   3d 08 00 00 c0                     	cmp eax, 0xc0000008
0x140001fe2:   74 29                              	je 0x14000200d <_gnu_exception_handler+0x8d>
0x140001fe4:   3d 1d 00 00 c0                     	cmp eax, 0xc000001d
0x140001fe9:   75 34                              	jne 0x14000201f <_gnu_exception_handler+0x9f>
0x140001feb:   31 d2                              	xor edx, edx
0x140001fed:   b9 04 00 00 00                     	mov ecx, 4
0x140001ff2:   e8 c1 08 00 00                     	call 0x1400028b8 <signal>
0x140001ff7:   48 83 f8 01                        	cmp rax, 1
0x140001ffb:   0f 84 d6 00 00 00                  	je 0x1400020d7 <_gnu_exception_handler+0x157>
0x140002001:   48 85 c0                           	test rax, rax
0x140002004:   74 19                              	je 0x14000201f <_gnu_exception_handler+0x9f>
0x140002006:   b9 04 00 00 00                     	mov ecx, 4
0x14000200b:   ff d0                              	call rax
0x14000200d:   b8 ff ff ff ff                     	mov eax, 0xffffffff
0x140002012:   48 83 c4 20                        	add rsp, 0x20
0x140002016:   5b                                 	pop rbx
0x140002017:   c3                                 	ret 
0x140002018:   3d 02 00 00 80                     	cmp eax, 0x80000002
0x14000201d:   74 ee                              	je 0x14000200d <_gnu_exception_handler+0x8d>
0x14000201f:   48 8b 05 aa 50 00 00               	mov rax, qword ptr [rip + 0x50aa]
0x140002026:   48 85 c0                           	test rax, rax
0x140002029:   74 25                              	je 0x140002050 <_gnu_exception_handler+0xd0>
0x14000202b:   48 89 d9                           	mov rcx, rbx
0x14000202e:   48 83 c4 20                        	add rsp, 0x20
0x140002032:   5b                                 	pop rbx
0x140002033:   48 ff e0                           	jmp rax
; data inside code section at 0x140002036 -- 0x140002040
0x140002036:   66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x140002040:   f6 42 04 01                        	test byte ptr [rdx + 4], 1
0x140002044:   0f 85 57 ff ff ff                  	jne 0x140001fa1 <_gnu_exception_handler+0x21>
0x14000204a:   eb c1                              	jmp 0x14000200d <_gnu_exception_handler+0x8d>
; data inside code section at 0x14000204c -- 0x140002050
0x14000204c:   0f 1f 40 00                                        |..@.            |
0x140002050:   31 c0                              	xor eax, eax
0x140002052:   48 83 c4 20                        	add rsp, 0x20
0x140002056:   5b                                 	pop rbx
0x140002057:   c3                                 	ret 
; data inside code section at 0x140002058 -- 0x140002060
0x140002058:   0f 1f 84 00 00 00 00 00                            |........        |
0x140002060:   31 d2                              	xor edx, edx
0x140002062:   b9 08 00 00 00                     	mov ecx, 8
0x140002067:   e8 4c 08 00 00                     	call 0x1400028b8 <signal>
0x14000206c:   48 83 f8 01                        	cmp rax, 1
0x140002070:   0f 84 89 00 00 00                  	je 0x1400020ff <_gnu_exception_handler+0x17f>
0x140002076:   48 85 c0                           	test rax, rax
0x140002079:   74 a4                              	je 0x14000201f <_gnu_exception_handler+0x9f>
0x14000207b:   b9 08 00 00 00                     	mov ecx, 8
0x140002080:   ff d0                              	call rax
0x140002082:   eb 89                              	jmp 0x14000200d <_gnu_exception_handler+0x8d>
; data inside code section at 0x140002084 -- 0x140002088
0x140002084:   0f 1f 40 00                                        |..@.            |
0x140002088:   31 d2                              	xor edx, edx
0x14000208a:   b9 08 00 00 00                     	mov ecx, 8
0x14000208f:   e8 24 08 00 00                     	call 0x1400028b8 <signal>
0x140002094:   48 83 f8 01                        	cmp rax, 1
0x140002098:   75 dc                              	jne 0x140002076 <_gnu_exception_handler+0xf6>
0x14000209a:   ba 01 00 00 00                     	mov edx, 1
0x14000209f:   b9 08 00 00 00                     	mov ecx, 8
0x1400020a4:   e8 0f 08 00 00                     	call 0x1400028b8 <signal>
0x1400020a9:   e9 5f ff ff ff                     	jmp 0x14000200d <_gnu_exception_handler+0x8d>
; data inside code section at 0x1400020ae -- 0x1400020b0
0x1400020ae:   66 90                                              |f.              |
0x1400020b0:   31 d2                              	xor edx, edx
0x1400020b2:   b9 0b 00 00 00                     	mov ecx, 0xb
0x1400020b7:   e8 fc 07 00 00                     	call 0x1400028b8 <signal>
0x1400020bc:   48 83 f8 01                        	cmp rax, 1
0x1400020c0:   74 29                              	je 0x1400020eb <_gnu_exception_handler+0x16b>
0x1400020c2:   48 85 c0                           	test rax, rax
0x1400020c5:   0f 84 54 ff ff ff                  	je 0x14000201f <_gnu_exception_handler+0x9f>
0x1400020cb:   b9 0b 00 00 00                     	mov ecx, 0xb
0x1400020d0:   ff d0                              	call rax
0x1400020d2:   e9 36 ff ff ff                     	jmp 0x14000200d <_gnu_exception_handler+0x8d>
0x1400020d7:   ba 01 00 00 00                     	mov edx, 1
0x1400020dc:   b9 04 00 00 00                     	mov ecx, 4
0x1400020e1:   e8 d2 07 00 00                     	call 0x1400028b8 <signal>
0x1400020e6:   e9 22 ff ff ff                     	jmp 0x14000200d <_gnu_exception_handler+0x8d>
0x1400020eb:   ba 01 00 00 00                     	mov edx, 1
0x1400020f0:   b9 0b 00 00 00                     	mov ecx, 0xb
0x1400020f5:   e8 be 07 00 00                     	call 0x1400028b8 <signal>
0x1400020fa:   e9 0e ff ff ff                     	jmp 0x14000200d <_gnu_exception_handler+0x8d>
0x1400020ff:   ba 01 00 00 00                     	mov edx, 1
0x140002104:   b9 08 00 00 00                     	mov ecx, 8
0x140002109:   e8 aa 07 00 00                     	call 0x1400028b8 <signal>
0x14000210e:   e8 cd f8 ff ff                     	call 0x1400019e0 <_fpreset>
0x140002113:   e9 f5 fe ff ff                     	jmp 0x14000200d <_gnu_exception_handler+0x8d>
; data inside code section at 0x140002118 -- 0x140002120
0x140002118:   90 90 90 90 90 90 90 90                            |........        |
; function: __mingwthr_run_key_dtors.part.0 at 0x140002120 -- 0x140002190
0x140002120:   41 54                              	push r12
0x140002122:   55                                 	push rbp
0x140002123:   57                                 	push rdi
0x140002124:   56                                 	push rsi
0x140002125:   53                                 	push rbx
0x140002126:   48 83 ec 20                        	sub rsp, 0x20
0x14000212a:   4c 8d 25 cf 4f 00 00               	lea r12, [rip + 0x4fcf]
0x140002131:   4c 89 e1                           	mov rcx, r12
0x140002134:   ff 15 7e 60 00 00                  	call qword ptr [rip + 0x607e] <EnterCriticalSection>
0x14000213a:   48 8b 1d 9f 4f 00 00               	mov rbx, qword ptr [rip + 0x4f9f]
0x140002141:   48 85 db                           	test rbx, rbx
0x140002144:   74 36                              	je 0x14000217c <__mingwthr_run_key_dtors.part.0+0x5c>
0x140002146:   48 8b 2d 9b 60 00 00               	mov rbp, qword ptr [rip + 0x609b]
0x14000214d:   48 8b 3d 6c 60 00 00               	mov rdi, qword ptr [rip + 0x606c]
0x140002154:   0f 1f 40 00                        	nop dword ptr [rax]
0x140002158:   8b 0b                              	mov ecx, dword ptr [rbx]
0x14000215a:   ff d5                              	call rbp <TlsGetValue>
0x14000215c:   48 89 c6                           	mov rsi, rax
0x14000215f:   ff d7                              	call rdi <GetLastError>
0x140002161:   85 c0                              	test eax, eax
0x140002163:   75 0e                              	jne 0x140002173 <__mingwthr_run_key_dtors.part.0+0x53>
0x140002165:   48 85 f6                           	test rsi, rsi
0x140002168:   74 09                              	je 0x140002173 <__mingwthr_run_key_dtors.part.0+0x53>
0x14000216a:   48 8b 43 08                        	mov rax, qword ptr [rbx + 8]
0x14000216e:   48 89 f1                           	mov rcx, rsi
0x140002171:   ff d0                              	call rax
0x140002173:   48 8b 5b 10                        	mov rbx, qword ptr [rbx + 0x10]
0x140002177:   48 85 db                           	test rbx, rbx
0x14000217a:   75 dc                              	jne 0x140002158 <__mingwthr_run_key_dtors.part.0+0x38>
0x14000217c:   4c 89 e1                           	mov rcx, r12
0x14000217f:   48 83 c4 20                        	add rsp, 0x20
0x140002183:   5b                                 	pop rbx
0x140002184:   5e                                 	pop rsi
0x140002185:   5f                                 	pop rdi
0x140002186:   5d                                 	pop rbp
0x140002187:   41 5c                              	pop r12
0x140002189:   48 ff 25 40 60 00 00               	jmp qword ptr [rip + 0x6040] <LeaveCriticalSection>
; function: ___w64_mingwthr_add_key_dtor at 0x140002190 -- 0x1400021ff
0x140002190:   57                                 	push rdi
0x140002191:   56                                 	push rsi
0x140002192:   53                                 	push rbx
0x140002193:   48 83 ec 20                        	sub rsp, 0x20
0x140002197:   8b 05 4b 4f 00 00                  	mov eax, dword ptr [rip + 0x4f4b]
0x14000219d:   89 cf                              	mov edi, ecx
0x14000219f:   48 89 d6                           	mov rsi, rdx
0x1400021a2:   85 c0                              	test eax, eax
0x1400021a4:   75 0a                              	jne 0x1400021b0 <___w64_mingwthr_add_key_dtor+0x20>
0x1400021a6:   31 c0                              	xor eax, eax
0x1400021a8:   48 83 c4 20                        	add rsp, 0x20
0x1400021ac:   5b                                 	pop rbx
0x1400021ad:   5e                                 	pop rsi
0x1400021ae:   5f                                 	pop rdi
0x1400021af:   c3                                 	ret 
0x1400021b0:   ba 18 00 00 00                     	mov edx, 0x18
0x1400021b5:   b9 01 00 00 00                     	mov ecx, 1
0x1400021ba:   e8 c1 06 00 00                     	call 0x140002880 <calloc>
0x1400021bf:   48 89 c3                           	mov rbx, rax
0x1400021c2:   48 85 c0                           	test rax, rax
0x1400021c5:   74 33                              	je 0x1400021fa <___w64_mingwthr_add_key_dtor+0x6a>
0x1400021c7:   48 89 70 08                        	mov qword ptr [rax + 8], rsi
0x1400021cb:   48 8d 35 2e 4f 00 00               	lea rsi, [rip + 0x4f2e]
0x1400021d2:   89 38                              	mov dword ptr [rax], edi
0x1400021d4:   48 89 f1                           	mov rcx, rsi
0x1400021d7:   ff 15 db 5f 00 00                  	call qword ptr [rip + 0x5fdb] <EnterCriticalSection>
0x1400021dd:   48 8b 05 fc 4e 00 00               	mov rax, qword ptr [rip + 0x4efc]
0x1400021e4:   48 89 f1                           	mov rcx, rsi
0x1400021e7:   48 89 1d f2 4e 00 00               	mov qword ptr [rip + 0x4ef2], rbx
0x1400021ee:   48 89 43 10                        	mov qword ptr [rbx + 0x10], rax
0x1400021f2:   ff 15 d8 5f 00 00                  	call qword ptr [rip + 0x5fd8] <LeaveCriticalSection>
0x1400021f8:   eb ac                              	jmp 0x1400021a6 <___w64_mingwthr_add_key_dtor+0x16>
0x1400021fa:   83 c8 ff                           	or eax, 0xffffffff
0x1400021fd:   eb a9                              	jmp 0x1400021a8 <___w64_mingwthr_add_key_dtor+0x18>
; data inside code section at 0x1400021ff -- 0x140002200
0x1400021ff:   90                                                 |.               |
; function: ___w64_mingwthr_remove_key_dtor at 0x140002200 -- 0x140002281
0x140002200:   56                                 	push rsi
0x140002201:   53                                 	push rbx
0x140002202:   48 83 ec 28                        	sub rsp, 0x28
0x140002206:   8b 05 dc 4e 00 00                  	mov eax, dword ptr [rip + 0x4edc]
0x14000220c:   89 cb                              	mov ebx, ecx
0x14000220e:   85 c0                              	test eax, eax
0x140002210:   75 0e                              	jne 0x140002220 <___w64_mingwthr_remove_key_dtor+0x20>
0x140002212:   31 c0                              	xor eax, eax
0x140002214:   48 83 c4 28                        	add rsp, 0x28
0x140002218:   5b                                 	pop rbx
0x140002219:   5e                                 	pop rsi
0x14000221a:   c3                                 	ret 
; data inside code section at 0x14000221b -- 0x140002220
0x14000221b:   0f 1f 44 00 00                                     |..D..           |
0x140002220:   48 8d 35 d9 4e 00 00               	lea rsi, [rip + 0x4ed9]
0x140002227:   48 89 f1                           	mov rcx, rsi
0x14000222a:   ff 15 88 5f 00 00                  	call qword ptr [rip + 0x5f88] <EnterCriticalSection>
0x140002230:   48 8b 0d a9 4e 00 00               	mov rcx, qword ptr [rip + 0x4ea9]
0x140002237:   48 85 c9                           	test rcx, rcx
0x14000223a:   74 27                              	je 0x140002263 <___w64_mingwthr_remove_key_dtor+0x63>
0x14000223c:   31 d2                              	xor edx, edx
0x14000223e:   eb 0b                              	jmp 0x14000224b <___w64_mingwthr_remove_key_dtor+0x4b>
0x140002240:   48 89 ca                           	mov rdx, rcx
0x140002243:   48 85 c0                           	test rax, rax
0x140002246:   74 1b                              	je 0x140002263 <___w64_mingwthr_remove_key_dtor+0x63>
0x140002248:   48 89 c1                           	mov rcx, rax
0x14000224b:   8b 01                              	mov eax, dword ptr [rcx]
0x14000224d:   39 d8                              	cmp eax, ebx
0x14000224f:   48 8b 41 10                        	mov rax, qword ptr [rcx + 0x10]
0x140002253:   75 eb                              	jne 0x140002240 <___w64_mingwthr_remove_key_dtor+0x40>
0x140002255:   48 85 d2                           	test rdx, rdx
0x140002258:   74 1e                              	je 0x140002278 <___w64_mingwthr_remove_key_dtor+0x78>
0x14000225a:   48 89 42 10                        	mov qword ptr [rdx + 0x10], rax
0x14000225e:   e8 35 06 00 00                     	call 0x140002898 <free>
0x140002263:   48 89 f1                           	mov rcx, rsi
0x140002266:   ff 15 64 5f 00 00                  	call qword ptr [rip + 0x5f64] <LeaveCriticalSection>
0x14000226c:   31 c0                              	xor eax, eax
0x14000226e:   48 83 c4 28                        	add rsp, 0x28
0x140002272:   5b                                 	pop rbx
0x140002273:   5e                                 	pop rsi
0x140002274:   c3                                 	ret 
; data inside code section at 0x140002275 -- 0x140002278
0x140002275:   0f 1f 00                                           |...             |
0x140002278:   48 89 05 61 4e 00 00               	mov qword ptr [rip + 0x4e61], rax
0x14000227f:   eb dd                              	jmp 0x14000225e <___w64_mingwthr_remove_key_dtor+0x5e>
; data inside code section at 0x140002281 -- 0x140002290
0x140002281:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00      |ff...........@. |
; function: __mingw_TLScallback at 0x140002290 -- 0x140002382
0x140002290:   53                                 	push rbx
0x140002291:   48 83 ec 20                        	sub rsp, 0x20
0x140002295:   83 fa 02                           	cmp edx, 2
0x140002298:   0f 84 b2 00 00 00                  	je 0x140002350 <__mingw_TLScallback+0xc0>
0x14000229e:   77 30                              	ja 0x1400022d0 <__mingw_TLScallback+0x40>
0x1400022a0:   85 d2                              	test edx, edx
0x1400022a2:   74 4c                              	je 0x1400022f0 <__mingw_TLScallback+0x60>
0x1400022a4:   8b 05 3e 4e 00 00                  	mov eax, dword ptr [rip + 0x4e3e]
0x1400022aa:   85 c0                              	test eax, eax
0x1400022ac:   0f 84 be 00 00 00                  	je 0x140002370 <__mingw_TLScallback+0xe0>
0x1400022b2:   c7 05 2c 4e 00 00 01 00 00 00      	mov dword ptr [rip + 0x4e2c], 1
0x1400022bc:   b8 01 00 00 00                     	mov eax, 1
0x1400022c1:   48 83 c4 20                        	add rsp, 0x20
0x1400022c5:   5b                                 	pop rbx
0x1400022c6:   c3                                 	ret 
; data inside code section at 0x1400022c7 -- 0x1400022d0
0x1400022c7:   66 0f 1f 84 00 00 00 00  00                        |f........       |
0x1400022d0:   83 fa 03                           	cmp edx, 3
0x1400022d3:   75 e7                              	jne 0x1400022bc <__mingw_TLScallback+0x2c>
0x1400022d5:   8b 05 0d 4e 00 00                  	mov eax, dword ptr [rip + 0x4e0d]
0x1400022db:   85 c0                              	test eax, eax
0x1400022dd:   74 dd                              	je 0x1400022bc <__mingw_TLScallback+0x2c>
0x1400022df:   e8 3c fe ff ff                     	call 0x140002120 <__mingwthr_run_key_dtors.part.0>
0x1400022e4:   eb d6                              	jmp 0x1400022bc <__mingw_TLScallback+0x2c>
; data inside code section at 0x1400022e6 -- 0x1400022f0
0x1400022e6:   66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x1400022f0:   8b 05 f2 4d 00 00                  	mov eax, dword ptr [rip + 0x4df2]
0x1400022f6:   85 c0                              	test eax, eax
0x1400022f8:   75 66                              	jne 0x140002360 <__mingw_TLScallback+0xd0>
0x1400022fa:   8b 05 e8 4d 00 00                  	mov eax, dword ptr [rip + 0x4de8]
0x140002300:   83 f8 01                           	cmp eax, 1
0x140002303:   75 b7                              	jne 0x1400022bc <__mingw_TLScallback+0x2c>
0x140002305:   48 8b 1d d4 4d 00 00               	mov rbx, qword ptr [rip + 0x4dd4]
0x14000230c:   48 85 db                           	test rbx, rbx
0x14000230f:   74 18                              	je 0x140002329 <__mingw_TLScallback+0x99>
0x140002311:   0f 1f 80 00 00 00 00               	nop dword ptr [rax]
0x140002318:   48 89 d9                           	mov rcx, rbx
0x14000231b:   48 8b 5b 10                        	mov rbx, qword ptr [rbx + 0x10]
0x14000231f:   e8 74 05 00 00                     	call 0x140002898 <free>
0x140002324:   48 85 db                           	test rbx, rbx
0x140002327:   75 ef                              	jne 0x140002318 <__mingw_TLScallback+0x88>
0x140002329:   48 8d 0d d0 4d 00 00               	lea rcx, [rip + 0x4dd0]
0x140002330:   48 c7 05 a5 4d 00 00 00 00 00 00   	mov qword ptr [rip + 0x4da5], 0
0x14000233b:   c7 05 a3 4d 00 00 00 00 00 00      	mov dword ptr [rip + 0x4da3], 0
0x140002345:   ff 15 65 5e 00 00                  	call qword ptr [rip + 0x5e65] <DeleteCriticalSection>
0x14000234b:   e9 6c ff ff ff                     	jmp 0x1400022bc <__mingw_TLScallback+0x2c>
0x140002350:   e8 8b f6 ff ff                     	call 0x1400019e0 <_fpreset>
0x140002355:   b8 01 00 00 00                     	mov eax, 1
0x14000235a:   48 83 c4 20                        	add rsp, 0x20
0x14000235e:   5b                                 	pop rbx
0x14000235f:   c3                                 	ret 
0x140002360:   e8 bb fd ff ff                     	call 0x140002120 <__mingwthr_run_key_dtors.part.0>
0x140002365:   eb 93                              	jmp 0x1400022fa <__mingw_TLScallback+0x6a>
; data inside code section at 0x140002367 -- 0x140002370
0x140002367:   66 0f 1f 84 00 00 00 00  00                        |f........       |
0x140002370:   48 8d 0d 89 4d 00 00               	lea rcx, [rip + 0x4d89]
0x140002377:   ff 15 4b 5e 00 00                  	call qword ptr [rip + 0x5e4b] <InitializeCriticalSection>
0x14000237d:   e9 30 ff ff ff                     	jmp 0x1400022b2 <__mingw_TLScallback+0x22>
; data inside code section at 0x140002382 -- 0x140002390
0x140002382:   90 90 90 90 90 90 90 90  90 90 90 90 90 90         |..............  |
; function: _ValidateImageBase at 0x140002390 -- 0x1400023bc
0x140002390:   31 c0                              	xor eax, eax
0x140002392:   66 81 39 4d 5a                     	cmp word ptr [rcx], 0x5a4d
0x140002397:   75 0f                              	jne 0x1400023a8 <_ValidateImageBase+0x18>
0x140002399:   48 63 51 3c                        	movsxd rdx, dword ptr [rcx + 0x3c]
0x14000239d:   48 01 d1                           	add rcx, rdx
0x1400023a0:   81 39 50 45 00 00                  	cmp dword ptr [rcx], 0x4550
0x1400023a6:   74 08                              	je 0x1400023b0 <_ValidateImageBase+0x20>
0x1400023a8:   c3                                 	ret 
; data inside code section at 0x1400023a9 -- 0x1400023b0
0x1400023a9:   0f 1f 80 00 00 00 00                               |.......         |
0x1400023b0:   31 c0                              	xor eax, eax
0x1400023b2:   66 81 79 18 0b 02                  	cmp word ptr [rcx + 0x18], 0x20b
0x1400023b8:   0f 94 c0                           	sete al
0x1400023bb:   c3                                 	ret 
; data inside code section at 0x1400023bc -- 0x1400023c0
0x1400023bc:   0f 1f 40 00                                        |..@.            |
; function: _FindPESection at 0x1400023c0 -- 0x140002410
0x1400023c0:   48 63 41 3c                        	movsxd rax, dword ptr [rcx + 0x3c]
0x1400023c4:   48 01 c1                           	add rcx, rax
0x1400023c7:   0f b7 41 14                        	movzx eax, word ptr [rcx + 0x14]
0x1400023cb:   44 0f b7 41 06                     	movzx r8d, word ptr [rcx + 6]
0x1400023d0:   48 8d 44 01 18                     	lea rax, [rcx + rax + 0x18]
0x1400023d5:   66 45 85 c0                        	test r8w, r8w
0x1400023d9:   74 32                              	je 0x14000240d <_FindPESection+0x4d>
0x1400023db:   41 8d 48 ff                        	lea ecx, [r8 - 1]
0x1400023df:   48 8d 0c 89                        	lea rcx, [rcx + rcx*4]
0x1400023e3:   4c 8d 4c c8 28                     	lea r9, [rax + rcx*8 + 0x28]
0x1400023e8:   0f 1f 84 00 00 00 00 00            	nop dword ptr [rax + rax]
0x1400023f0:   44 8b 40 0c                        	mov r8d, dword ptr [rax + 0xc]
0x1400023f4:   4c 89 c1                           	mov rcx, r8
0x1400023f7:   4c 39 c2                           	cmp rdx, r8
0x1400023fa:   72 08                              	jb 0x140002404 <_FindPESection+0x44>
0x1400023fc:   03 48 08                           	add ecx, dword ptr [rax + 8]
0x1400023ff:   48 39 ca                           	cmp rdx, rcx
0x140002402:   72 0b                              	jb 0x14000240f <_FindPESection+0x4f>
0x140002404:   48 83 c0 28                        	add rax, 0x28
0x140002408:   4c 39 c8                           	cmp rax, r9
0x14000240b:   75 e3                              	jne 0x1400023f0 <_FindPESection+0x30>
0x14000240d:   31 c0                              	xor eax, eax
0x14000240f:   c3                                 	ret 
; function: _FindPESectionByName at 0x140002410 -- 0x1400024ad
0x140002410:   57                                 	push rdi
0x140002411:   56                                 	push rsi
0x140002412:   53                                 	push rbx
0x140002413:   48 83 ec 20                        	sub rsp, 0x20
0x140002417:   48 89 ce                           	mov rsi, rcx
0x14000241a:   e8 a1 04 00 00                     	call 0x1400028c0 <strlen>
0x14000241f:   48 83 f8 08                        	cmp rax, 8
0x140002423:   77 7b                              	ja 0x1400024a0 <_FindPESectionByName+0x90>
0x140002425:   48 8b 15 b4 1f 00 00               	mov rdx, qword ptr [rip + 0x1fb4]
0x14000242c:   31 db                              	xor ebx, ebx
0x14000242e:   66 81 3a 4d 5a                     	cmp word ptr [rdx], 0x5a4d
0x140002433:   75 59                              	jne 0x14000248e <_FindPESectionByName+0x7e>
0x140002435:   48 63 42 3c                        	movsxd rax, dword ptr [rdx + 0x3c]
0x140002439:   48 01 d0                           	add rax, rdx
0x14000243c:   81 38 50 45 00 00                  	cmp dword ptr [rax], 0x4550
0x140002442:   75 4a                              	jne 0x14000248e <_FindPESectionByName+0x7e>
0x140002444:   66 81 78 18 0b 02                  	cmp word ptr [rax + 0x18], 0x20b
0x14000244a:   75 42                              	jne 0x14000248e <_FindPESectionByName+0x7e>
0x14000244c:   0f b7 50 14                        	movzx edx, word ptr [rax + 0x14]
0x140002450:   48 8d 5c 10 18                     	lea rbx, [rax + rdx + 0x18]
0x140002455:   0f b7 50 06                        	movzx edx, word ptr [rax + 6]
0x140002459:   66 85 d2                           	test dx, dx
0x14000245c:   74 42                              	je 0x1400024a0 <_FindPESectionByName+0x90>
0x14000245e:   8d 42 ff                           	lea eax, [rdx - 1]
0x140002461:   48 8d 04 80                        	lea rax, [rax + rax*4]
0x140002465:   48 8d 7c c3 28                     	lea rdi, [rbx + rax*8 + 0x28]
0x14000246a:   eb 0d                              	jmp 0x140002479 <_FindPESectionByName+0x69>
; data inside code section at 0x14000246c -- 0x140002470
0x14000246c:   0f 1f 40 00                                        |..@.            |
0x140002470:   48 83 c3 28                        	add rbx, 0x28
0x140002474:   48 39 fb                           	cmp rbx, rdi
0x140002477:   74 27                              	je 0x1400024a0 <_FindPESectionByName+0x90>
0x140002479:   41 b8 08 00 00 00                  	mov r8d, 8
0x14000247f:   48 89 f2                           	mov rdx, rsi
0x140002482:   48 89 d9                           	mov rcx, rbx
0x140002485:   e8 3e 04 00 00                     	call 0x1400028c8 <strncmp>
0x14000248a:   85 c0                              	test eax, eax
0x14000248c:   75 e2                              	jne 0x140002470 <_FindPESectionByName+0x60>
0x14000248e:   48 89 d8                           	mov rax, rbx
0x140002491:   48 83 c4 20                        	add rsp, 0x20
0x140002495:   5b                                 	pop rbx
0x140002496:   5e                                 	pop rsi
0x140002497:   5f                                 	pop rdi
0x140002498:   c3                                 	ret 
; data inside code section at 0x140002499 -- 0x1400024a0
0x140002499:   0f 1f 80 00 00 00 00                               |.......         |
0x1400024a0:   31 db                              	xor ebx, ebx
0x1400024a2:   48 89 d8                           	mov rax, rbx
0x1400024a5:   48 83 c4 20                        	add rsp, 0x20
0x1400024a9:   5b                                 	pop rbx
0x1400024aa:   5e                                 	pop rsi
0x1400024ab:   5f                                 	pop rdi
0x1400024ac:   c3                                 	ret 
; data inside code section at 0x1400024ad -- 0x1400024b0
0x1400024ad:   0f 1f 00                                           |...             |
; function: __mingw_GetSectionForAddress at 0x1400024b0 -- 0x140002530
0x1400024b0:   48 8b 15 29 1f 00 00               	mov rdx, qword ptr [rip + 0x1f29]
0x1400024b7:   31 c0                              	xor eax, eax
0x1400024b9:   66 81 3a 4d 5a                     	cmp word ptr [rdx], 0x5a4d
0x1400024be:   75 10                              	jne 0x1400024d0 <__mingw_GetSectionForAddress+0x20>
0x1400024c0:   4c 63 42 3c                        	movsxd r8, dword ptr [rdx + 0x3c]
0x1400024c4:   49 01 d0                           	add r8, rdx
0x1400024c7:   41 81 38 50 45 00 00               	cmp dword ptr [r8], 0x4550
0x1400024ce:   74 08                              	je 0x1400024d8 <__mingw_GetSectionForAddress+0x28>
0x1400024d0:   c3                                 	ret 
; data inside code section at 0x1400024d1 -- 0x1400024d8
0x1400024d1:   0f 1f 80 00 00 00 00                               |.......         |
0x1400024d8:   66 41 81 78 18 0b 02               	cmp word ptr [r8 + 0x18], 0x20b
0x1400024df:   75 ef                              	jne 0x1400024d0 <__mingw_GetSectionForAddress+0x20>
0x1400024e1:   41 0f b7 40 14                     	movzx eax, word ptr [r8 + 0x14]
0x1400024e6:   48 29 d1                           	sub rcx, rdx
0x1400024e9:   49 8d 44 00 18                     	lea rax, [r8 + rax + 0x18]
0x1400024ee:   45 0f b7 40 06                     	movzx r8d, word ptr [r8 + 6]
0x1400024f3:   66 45 85 c0                        	test r8w, r8w
0x1400024f7:   74 34                              	je 0x14000252d <__mingw_GetSectionForAddress+0x7d>
0x1400024f9:   41 8d 50 ff                        	lea edx, [r8 - 1]
0x1400024fd:   48 8d 14 92                        	lea rdx, [rdx + rdx*4]
0x140002501:   4c 8d 4c d0 28                     	lea r9, [rax + rdx*8 + 0x28]
0x140002506:   66 2e 0f 1f 84 00 00 00 00 00      	nop word ptr cs:[rax + rax]
0x140002510:   44 8b 40 0c                        	mov r8d, dword ptr [rax + 0xc]
0x140002514:   4c 89 c2                           	mov rdx, r8
0x140002517:   4c 39 c1                           	cmp rcx, r8
0x14000251a:   72 08                              	jb 0x140002524 <__mingw_GetSectionForAddress+0x74>
0x14000251c:   03 50 08                           	add edx, dword ptr [rax + 8]
0x14000251f:   48 39 d1                           	cmp rcx, rdx
0x140002522:   72 ac                              	jb 0x1400024d0 <__mingw_GetSectionForAddress+0x20>
0x140002524:   48 83 c0 28                        	add rax, 0x28
0x140002528:   4c 39 c8                           	cmp rax, r9
0x14000252b:   75 e3                              	jne 0x140002510 <__mingw_GetSectionForAddress+0x60>
0x14000252d:   31 c0                              	xor eax, eax
0x14000252f:   c3                                 	ret 
; function: __mingw_GetSectionCount at 0x140002530 -- 0x140002567
0x140002530:   48 8b 05 a9 1e 00 00               	mov rax, qword ptr [rip + 0x1ea9]
0x140002537:   31 c9                              	xor ecx, ecx
0x140002539:   66 81 38 4d 5a                     	cmp word ptr [rax], 0x5a4d
0x14000253e:   75 0f                              	jne 0x14000254f <__mingw_GetSectionCount+0x1f>
0x140002540:   48 63 50 3c                        	movsxd rdx, dword ptr [rax + 0x3c]
0x140002544:   48 01 d0                           	add rax, rdx
0x140002547:   81 38 50 45 00 00                  	cmp dword ptr [rax], 0x4550
0x14000254d:   74 09                              	je 0x140002558 <__mingw_GetSectionCount+0x28>
0x14000254f:   89 c8                              	mov eax, ecx
0x140002551:   c3                                 	ret 
; data inside code section at 0x140002552 -- 0x140002558
0x140002552:   66 0f 1f 44 00 00                                  |f..D..          |
0x140002558:   66 81 78 18 0b 02                  	cmp word ptr [rax + 0x18], 0x20b
0x14000255e:   75 ef                              	jne 0x14000254f <__mingw_GetSectionCount+0x1f>
0x140002560:   0f b7 48 06                        	movzx ecx, word ptr [rax + 6]
0x140002564:   89 c8                              	mov eax, ecx
0x140002566:   c3                                 	ret 
; data inside code section at 0x140002567 -- 0x140002570
0x140002567:   66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: _FindPESectionExec at 0x140002570 -- 0x1400025e3
0x140002570:   4c 8b 05 69 1e 00 00               	mov r8, qword ptr [rip + 0x1e69]
0x140002577:   31 c0                              	xor eax, eax
0x140002579:   66 41 81 38 4d 5a                  	cmp word ptr [r8], 0x5a4d
0x14000257f:   75 0f                              	jne 0x140002590 <_FindPESectionExec+0x20>
0x140002581:   49 63 50 3c                        	movsxd rdx, dword ptr [r8 + 0x3c]
0x140002585:   4c 01 c2                           	add rdx, r8
0x140002588:   81 3a 50 45 00 00                  	cmp dword ptr [rdx], 0x4550
0x14000258e:   74 08                              	je 0x140002598 <_FindPESectionExec+0x28>
0x140002590:   c3                                 	ret 
; data inside code section at 0x140002591 -- 0x140002598
0x140002591:   0f 1f 80 00 00 00 00                               |.......         |
0x140002598:   66 81 7a 18 0b 02                  	cmp word ptr [rdx + 0x18], 0x20b
0x14000259e:   75 f0                              	jne 0x140002590 <_FindPESectionExec+0x20>
0x1400025a0:   0f b7 42 14                        	movzx eax, word ptr [rdx + 0x14]
0x1400025a4:   44 0f b7 42 06                     	movzx r8d, word ptr [rdx + 6]
0x1400025a9:   48 8d 44 02 18                     	lea rax, [rdx + rax + 0x18]
0x1400025ae:   66 45 85 c0                        	test r8w, r8w
0x1400025b2:   74 2c                              	je 0x1400025e0 <_FindPESectionExec+0x70>
0x1400025b4:   41 8d 50 ff                        	lea edx, [r8 - 1]
0x1400025b8:   48 8d 14 92                        	lea rdx, [rdx + rdx*4]
0x1400025bc:   48 8d 54 d0 28                     	lea rdx, [rax + rdx*8 + 0x28]
0x1400025c1:   0f 1f 80 00 00 00 00               	nop dword ptr [rax]
0x1400025c8:   f6 40 27 20                        	test byte ptr [rax + 0x27], 0x20
0x1400025cc:   74 09                              	je 0x1400025d7 <_FindPESectionExec+0x67>
0x1400025ce:   48 85 c9                           	test rcx, rcx
0x1400025d1:   74 bd                              	je 0x140002590 <_FindPESectionExec+0x20>
0x1400025d3:   48 83 e9 01                        	sub rcx, 1
0x1400025d7:   48 83 c0 28                        	add rax, 0x28
0x1400025db:   48 39 d0                           	cmp rax, rdx
0x1400025de:   75 e8                              	jne 0x1400025c8 <_FindPESectionExec+0x58>
0x1400025e0:   31 c0                              	xor eax, eax
0x1400025e2:   c3                                 	ret 
; data inside code section at 0x1400025e3 -- 0x1400025f0
0x1400025e3:   66 66 2e 0f 1f 84 00 00  00 00 00 66 90            |ff.........f.   |
; function: _GetPEImageBase at 0x1400025f0 -- 0x140002626
0x1400025f0:   48 8b 05 e9 1d 00 00               	mov rax, qword ptr [rip + 0x1de9]
0x1400025f7:   31 d2                              	xor edx, edx
0x1400025f9:   66 81 38 4d 5a                     	cmp word ptr [rax], 0x5a4d
0x1400025fe:   75 0f                              	jne 0x14000260f <_GetPEImageBase+0x1f>
0x140002600:   48 63 48 3c                        	movsxd rcx, dword ptr [rax + 0x3c]
0x140002604:   48 01 c1                           	add rcx, rax
0x140002607:   81 39 50 45 00 00                  	cmp dword ptr [rcx], 0x4550
0x14000260d:   74 09                              	je 0x140002618 <_GetPEImageBase+0x28>
0x14000260f:   48 89 d0                           	mov rax, rdx
0x140002612:   c3                                 	ret 
; data inside code section at 0x140002613 -- 0x140002618
0x140002613:   0f 1f 44 00 00                                     |..D..           |
0x140002618:   66 81 79 18 0b 02                  	cmp word ptr [rcx + 0x18], 0x20b
0x14000261e:   48 0f 44 d0                        	cmove rdx, rax
0x140002622:   48 89 d0                           	mov rax, rdx
0x140002625:   c3                                 	ret 
; data inside code section at 0x140002626 -- 0x140002630
0x140002626:   66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: _IsNonwritableInCurrentImage at 0x140002630 -- 0x1400026b9
0x140002630:   48 8b 15 a9 1d 00 00               	mov rdx, qword ptr [rip + 0x1da9]
0x140002637:   31 c0                              	xor eax, eax
0x140002639:   66 81 3a 4d 5a                     	cmp word ptr [rdx], 0x5a4d
0x14000263e:   75 10                              	jne 0x140002650 <_IsNonwritableInCurrentImage+0x20>
0x140002640:   4c 63 42 3c                        	movsxd r8, dword ptr [rdx + 0x3c]
0x140002644:   49 01 d0                           	add r8, rdx
0x140002647:   41 81 38 50 45 00 00               	cmp dword ptr [r8], 0x4550
0x14000264e:   74 08                              	je 0x140002658 <_IsNonwritableInCurrentImage+0x28>
0x140002650:   c3                                 	ret 
; data inside code section at 0x140002651 -- 0x140002658
0x140002651:   0f 1f 80 00 00 00 00                               |.......         |
0x140002658:   66 41 81 78 18 0b 02               	cmp word ptr [r8 + 0x18], 0x20b
0x14000265f:   75 ef                              	jne 0x140002650 <_IsNonwritableInCurrentImage+0x20>
0x140002661:   48 29 d1                           	sub rcx, rdx
0x140002664:   45 0f b7 48 06                     	movzx r9d, word ptr [r8 + 6]
0x140002669:   41 0f b7 50 14                     	movzx edx, word ptr [r8 + 0x14]
0x14000266e:   49 8d 54 10 18                     	lea rdx, [r8 + rdx + 0x18]
0x140002673:   66 45 85 c9                        	test r9w, r9w
0x140002677:   74 d7                              	je 0x140002650 <_IsNonwritableInCurrentImage+0x20>
0x140002679:   41 8d 41 ff                        	lea eax, [r9 - 1]
0x14000267d:   48 8d 04 80                        	lea rax, [rax + rax*4]
0x140002681:   4c 8d 4c c2 28                     	lea r9, [rdx + rax*8 + 0x28]
0x140002686:   66 2e 0f 1f 84 00 00 00 00 00      	nop word ptr cs:[rax + rax]
0x140002690:   44 8b 42 0c                        	mov r8d, dword ptr [rdx + 0xc]
0x140002694:   4c 89 c0                           	mov rax, r8
0x140002697:   4c 39 c1                           	cmp rcx, r8
0x14000269a:   72 08                              	jb 0x1400026a4 <_IsNonwritableInCurrentImage+0x74>
0x14000269c:   03 42 08                           	add eax, dword ptr [rdx + 8]
0x14000269f:   48 39 c1                           	cmp rcx, rax
0x1400026a2:   72 0c                              	jb 0x1400026b0 <_IsNonwritableInCurrentImage+0x80>
0x1400026a4:   48 83 c2 28                        	add rdx, 0x28
0x1400026a8:   49 39 d1                           	cmp r9, rdx
0x1400026ab:   75 e3                              	jne 0x140002690 <_IsNonwritableInCurrentImage+0x60>
0x1400026ad:   31 c0                              	xor eax, eax
0x1400026af:   c3                                 	ret 
0x1400026b0:   8b 42 24                           	mov eax, dword ptr [rdx + 0x24]
0x1400026b3:   f7 d0                              	not eax
0x1400026b5:   c1 e8 1f                           	shr eax, 0x1f
0x1400026b8:   c3                                 	ret 
; data inside code section at 0x1400026b9 -- 0x1400026c0
0x1400026b9:   0f 1f 80 00 00 00 00                               |.......         |
; function: __mingw_enum_import_library_names at 0x1400026c0 -- 0x140002786
0x1400026c0:   4c 8b 1d 19 1d 00 00               	mov r11, qword ptr [rip + 0x1d19]
0x1400026c7:   45 31 c9                           	xor r9d, r9d
0x1400026ca:   66 41 81 3b 4d 5a                  	cmp word ptr [r11], 0x5a4d
0x1400026d0:   75 10                              	jne 0x1400026e2 <__mingw_enum_import_library_names+0x22>
0x1400026d2:   4d 63 43 3c                        	movsxd r8, dword ptr [r11 + 0x3c]
0x1400026d6:   4d 01 d8                           	add r8, r11
0x1400026d9:   41 81 38 50 45 00 00               	cmp dword ptr [r8], 0x4550
0x1400026e0:   74 0e                              	je 0x1400026f0 <__mingw_enum_import_library_names+0x30>
0x1400026e2:   4c 89 c8                           	mov rax, r9
0x1400026e5:   c3                                 	ret 
; data inside code section at 0x1400026e6 -- 0x1400026f0
0x1400026e6:   66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x1400026f0:   66 41 81 78 18 0b 02               	cmp word ptr [r8 + 0x18], 0x20b
0x1400026f7:   75 e9                              	jne 0x1400026e2 <__mingw_enum_import_library_names+0x22>
0x1400026f9:   41 8b 80 90 00 00 00               	mov eax, dword ptr [r8 + 0x90]
0x140002700:   85 c0                              	test eax, eax
0x140002702:   74 de                              	je 0x1400026e2 <__mingw_enum_import_library_names+0x22>
0x140002704:   41 0f b7 50 14                     	movzx edx, word ptr [r8 + 0x14]
0x140002709:   45 0f b7 50 06                     	movzx r10d, word ptr [r8 + 6]
0x14000270e:   49 8d 54 10 18                     	lea rdx, [r8 + rdx + 0x18]
0x140002713:   66 45 85 d2                        	test r10w, r10w
0x140002717:   74 c9                              	je 0x1400026e2 <__mingw_enum_import_library_names+0x22>
0x140002719:   45 8d 42 ff                        	lea r8d, [r10 - 1]
0x14000271d:   4f 8d 04 80                        	lea r8, [r8 + r8*4]
0x140002721:   4e 8d 54 c2 28                     	lea r10, [rdx + r8*8 + 0x28]
0x140002726:   66 2e 0f 1f 84 00 00 00 00 00      	nop word ptr cs:[rax + rax]
0x140002730:   44 8b 4a 0c                        	mov r9d, dword ptr [rdx + 0xc]
0x140002734:   4d 89 c8                           	mov r8, r9
0x140002737:   4c 39 c8                           	cmp rax, r9
0x14000273a:   72 09                              	jb 0x140002745 <__mingw_enum_import_library_names+0x85>
0x14000273c:   44 03 42 08                        	add r8d, dword ptr [rdx + 8]
0x140002740:   4c 39 c0                           	cmp rax, r8
0x140002743:   72 13                              	jb 0x140002758 <__mingw_enum_import_library_names+0x98>
0x140002745:   48 83 c2 28                        	add rdx, 0x28
0x140002749:   4c 39 d2                           	cmp rdx, r10
0x14000274c:   75 e2                              	jne 0x140002730 <__mingw_enum_import_library_names+0x70>
0x14000274e:   45 31 c9                           	xor r9d, r9d
0x140002751:   4c 89 c8                           	mov rax, r9
0x140002754:   c3                                 	ret 
; data inside code section at 0x140002755 -- 0x140002758
0x140002755:   0f 1f 00                                           |...             |
0x140002758:   4c 01 d8                           	add rax, r11
0x14000275b:   eb 0a                              	jmp 0x140002767 <__mingw_enum_import_library_names+0xa7>
; data inside code section at 0x14000275d -- 0x140002760
0x14000275d:   0f 1f 00                                           |...             |
0x140002760:   83 e9 01                           	sub ecx, 1
0x140002763:   48 83 c0 14                        	add rax, 0x14
0x140002767:   44 8b 40 04                        	mov r8d, dword ptr [rax + 4]
0x14000276b:   45 85 c0                           	test r8d, r8d
0x14000276e:   75 07                              	jne 0x140002777 <__mingw_enum_import_library_names+0xb7>
0x140002770:   8b 50 0c                           	mov edx, dword ptr [rax + 0xc]
0x140002773:   85 d2                              	test edx, edx
0x140002775:   74 d7                              	je 0x14000274e <__mingw_enum_import_library_names+0x8e>
0x140002777:   85 c9                              	test ecx, ecx
0x140002779:   7f e5                              	jg 0x140002760 <__mingw_enum_import_library_names+0xa0>
0x14000277b:   44 8b 48 0c                        	mov r9d, dword ptr [rax + 0xc]
0x14000277f:   4d 01 d9                           	add r9, r11
0x140002782:   4c 89 c8                           	mov rax, r9
0x140002785:   c3                                 	ret 
; data inside code section at 0x140002786 -- 0x140002790
0x140002786:   90 90 90 90 90 90 90 90  90 90                     |..........      |
; function: ___chkstk_ms at 0x140002790 -- 0x1400027c2
0x140002790:   51                                 	push rcx
0x140002791:   50                                 	push rax
0x140002792:   48 3d 00 10 00 00                  	cmp rax, 0x1000
0x140002798:   48 8d 4c 24 18                     	lea rcx, [rsp + 0x18]
0x14000279d:   72 19                              	jb 0x1400027b8 <___chkstk_ms+0x28>
0x14000279f:   48 81 e9 00 10 00 00               	sub rcx, 0x1000
0x1400027a6:   48 83 09 00                        	or qword ptr [rcx], 0
0x1400027aa:   48 2d 00 10 00 00                  	sub rax, 0x1000
0x1400027b0:   48 3d 00 10 00 00                  	cmp rax, 0x1000
0x1400027b6:   77 e7                              	ja 0x14000279f <___chkstk_ms+0xf>
0x1400027b8:   48 29 c1                           	sub rcx, rax
0x1400027bb:   48 83 09 00                        	or qword ptr [rcx], 0
0x1400027bf:   58                                 	pop rax
0x1400027c0:   59                                 	pop rcx
0x1400027c1:   c3                                 	ret 
; data inside code section at 0x1400027c2 -- 0x1400027d0
0x1400027c2:   90 90 90 90 90 90 90 90  90 90 90 90 90 90         |..............  |
; function: __p__fmode at 0x1400027d0 -- 0x1400027db
0x1400027d0:   48 8b 05 39 1c 00 00               	mov rax, qword ptr [rip + 0x1c39]
0x1400027d7:   48 8b 00                           	mov rax, qword ptr [rax]
0x1400027da:   c3                                 	ret 
; data inside code section at 0x1400027db -- 0x1400027e0
0x1400027db:   90 90 90 90 90                                     |.....           |
; function: __p__commode at 0x1400027e0 -- 0x1400027eb
0x1400027e0:   48 8b 05 19 1c 00 00               	mov rax, qword ptr [rip + 0x1c19]
0x1400027e7:   48 8b 00                           	mov rax, qword ptr [rax]
0x1400027ea:   c3                                 	ret 
; data inside code section at 0x1400027eb -- 0x1400027f0
0x1400027eb:   90 90 90 90 90                                     |.....           |
; function: mingw_get_invalid_parameter_handler at 0x1400027f0 -- 0x1400027f8
0x1400027f0:   48 8b 05 79 49 00 00               	mov rax, qword ptr [rip + 0x4979]
0x1400027f7:   c3                                 	ret 
; data inside code section at 0x1400027f8 -- 0x140002800
0x1400027f8:   0f 1f 84 00 00 00 00 00                            |........        |
; function: mingw_set_invalid_parameter_handler at 0x140002800 -- 0x14000280b
0x140002800:   48 89 c8                           	mov rax, rcx
0x140002803:   48 87 05 66 49 00 00               	xchg qword ptr [rip + 0x4966], rax
0x14000280a:   c3                                 	ret 
; data inside code section at 0x14000280b -- 0x140002810
0x14000280b:   90 90 90 90 90                                     |.....           |
; function: __acrt_iob_func at 0x140002810 -- 0x14000282f
0x140002810:   53                                 	push rbx
0x140002811:   48 83 ec 20                        	sub rsp, 0x20
0x140002815:   89 cb                              	mov ebx, ecx
0x140002817:   e8 24 00 00 00                     	call 0x140002840 <__iob_func>
0x14000281c:   89 d9                              	mov ecx, ebx
0x14000281e:   48 8d 14 49                        	lea rdx, [rcx + rcx*2]
0x140002822:   48 c1 e2 04                        	shl rdx, 4
0x140002826:   48 01 d0                           	add rax, rdx
0x140002829:   48 83 c4 20                        	add rsp, 0x20
0x14000282d:   5b                                 	pop rbx
0x14000282e:   c3                                 	ret 
; data inside code section at 0x14000282f -- 0x140002830
0x14000282f:   90                                                 |.               |
; function: __C_specific_handler at 0x140002830 -- 0x140002836
0x140002830:   ff 25 d2 59 00 00                  	jmp qword ptr [rip + 0x59d2] <__C_specific_handler>
; data inside code section at 0x140002836 -- 0x140002838
0x140002836:   90 90                                              |..              |
; function: __getmainargs at 0x140002838 -- 0x14000283e
0x140002838:   ff 25 d2 59 00 00                  	jmp qword ptr [rip + 0x59d2] <__getmainargs>
; data inside code section at 0x14000283e -- 0x140002840
0x14000283e:   90 90                                              |..              |
; function: __iob_func at 0x140002840 -- 0x140002846
0x140002840:   ff 25 da 59 00 00                  	jmp qword ptr [rip + 0x59da] <__iob_func>
; data inside code section at 0x140002846 -- 0x140002848
0x140002846:   90 90                                              |..              |
; function: __set_app_type at 0x140002848 -- 0x14000284e
0x140002848:   ff 25 da 59 00 00                  	jmp qword ptr [rip + 0x59da] <__set_app_type>
; data inside code section at 0x14000284e -- 0x140002850
0x14000284e:   90 90                                              |..              |
; function: __setusermatherr at 0x140002850 -- 0x140002856
0x140002850:   ff 25 da 59 00 00                  	jmp qword ptr [rip + 0x59da] <__setusermatherr>
; data inside code section at 0x140002856 -- 0x140002858
0x140002856:   90 90                                              |..              |
; function: _amsg_exit at 0x140002858 -- 0x14000285e
0x140002858:   ff 25 da 59 00 00                  	jmp qword ptr [rip + 0x59da] <_amsg_exit>
; data inside code section at 0x14000285e -- 0x140002860
0x14000285e:   90 90                                              |..              |
; function: _cexit at 0x140002860 -- 0x140002866
0x140002860:   ff 25 da 59 00 00                  	jmp qword ptr [rip + 0x59da] <_cexit>
; data inside code section at 0x140002866 -- 0x140002868
0x140002866:   90 90                                              |..              |
; function: _initterm at 0x140002868 -- 0x14000286e
0x140002868:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <_initterm>
; data inside code section at 0x14000286e -- 0x140002870
0x14000286e:   90 90                                              |..              |
; function: _onexit at 0x140002870 -- 0x140002876
0x140002870:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <_onexit>
; data inside code section at 0x140002876 -- 0x140002878
0x140002876:   90 90                                              |..              |
; function: abort at 0x140002878 -- 0x14000287e
0x140002878:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <abort>
; data inside code section at 0x14000287e -- 0x140002880
0x14000287e:   90 90                                              |..              |
; function: calloc at 0x140002880 -- 0x140002886
0x140002880:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <calloc>
; data inside code section at 0x140002886 -- 0x140002888
0x140002886:   90 90                                              |..              |
; function: exit at 0x140002888 -- 0x14000288e
0x140002888:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <exit>
; data inside code section at 0x14000288e -- 0x140002890
0x14000288e:   90 90                                              |..              |
; function: fprintf at 0x140002890 -- 0x140002896
0x140002890:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <fprintf>
; data inside code section at 0x140002896 -- 0x140002898
0x140002896:   90 90                                              |..              |
; function: free at 0x140002898 -- 0x14000289e
0x140002898:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <free>
; data inside code section at 0x14000289e -- 0x1400028a0
0x14000289e:   90 90                                              |..              |
; function: fwrite at 0x1400028a0 -- 0x1400028a6
0x1400028a0:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <fwrite>
; data inside code section at 0x1400028a6 -- 0x1400028a8
0x1400028a6:   90 90                                              |..              |
; function: malloc at 0x1400028a8 -- 0x1400028ae
0x1400028a8:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <malloc>
; data inside code section at 0x1400028ae -- 0x1400028b0
0x1400028ae:   90 90                                              |..              |
; function: memcpy at 0x1400028b0 -- 0x1400028b6
0x1400028b0:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <memcpy>
; data inside code section at 0x1400028b6 -- 0x1400028b8
0x1400028b6:   90 90                                              |..              |
; function: signal at 0x1400028b8 -- 0x1400028be
0x1400028b8:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <signal>
; data inside code section at 0x1400028be -- 0x1400028c0
0x1400028be:   90 90                                              |..              |
; function: strlen at 0x1400028c0 -- 0x1400028c6
0x1400028c0:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <strlen>
; data inside code section at 0x1400028c6 -- 0x1400028c8
0x1400028c6:   90 90                                              |..              |
; function: strncmp at 0x1400028c8 -- 0x1400028ce
0x1400028c8:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <strncmp>
; data inside code section at 0x1400028ce -- 0x1400028d0
0x1400028ce:   90 90                                              |..              |
; function: vfprintf at 0x1400028d0 -- 0x1400028d6
0x1400028d0:   ff 25 ea 59 00 00                  	jmp qword ptr [rip + 0x59ea] <vfprintf>
; data inside code section at 0x1400028d6 -- 0x1400028e0
0x1400028d6:   90 90 0f 1f 84 00 00 00  00 00                     |..........      |
; function: VirtualQuery at 0x1400028e0 -- 0x1400028e6
0x1400028e0:   ff 25 12 59 00 00                  	jmp qword ptr [rip + 0x5912] <VirtualQuery>
; data inside code section at 0x1400028e6 -- 0x1400028e8
0x1400028e6:   90 90                                              |..              |
; function: VirtualProtect at 0x1400028e8 -- 0x1400028ee
0x1400028e8:   ff 25 02 59 00 00                  	jmp qword ptr [rip + 0x5902] <VirtualProtect>
; data inside code section at 0x1400028ee -- 0x1400028f0
0x1400028ee:   90 90                                              |..              |
; function: TlsGetValue at 0x1400028f0 -- 0x1400028f6
0x1400028f0:   ff 25 f2 58 00 00                  	jmp qword ptr [rip + 0x58f2] <TlsGetValue>
; data inside code section at 0x1400028f6 -- 0x1400028f8
0x1400028f6:   90 90                                              |..              |
; function: Sleep at 0x1400028f8 -- 0x1400028fe
0x1400028f8:   ff 25 e2 58 00 00                  	jmp qword ptr [rip + 0x58e2] <Sleep>
; data inside code section at 0x1400028fe -- 0x140002900
0x1400028fe:   90 90                                              |..              |
; function: SetUnhandledExceptionFilter at 0x140002900 -- 0x140002906
0x140002900:   ff 25 d2 58 00 00                  	jmp qword ptr [rip + 0x58d2] <SetUnhandledExceptionFilter>
; data inside code section at 0x140002906 -- 0x140002908
0x140002906:   90 90                                              |..              |
; function: LeaveCriticalSection at 0x140002908 -- 0x14000290e
0x140002908:   ff 25 c2 58 00 00                  	jmp qword ptr [rip + 0x58c2] <LeaveCriticalSection>
; data inside code section at 0x14000290e -- 0x140002910
0x14000290e:   90 90                                              |..              |
; function: InitializeCriticalSection at 0x140002910 -- 0x140002916
0x140002910:   ff 25 b2 58 00 00                  	jmp qword ptr [rip + 0x58b2] <InitializeCriticalSection>
; data inside code section at 0x140002916 -- 0x140002918
0x140002916:   90 90                                              |..              |
; function: GetLastError at 0x140002918 -- 0x14000291e
0x140002918:   ff 25 a2 58 00 00                  	jmp qword ptr [rip + 0x58a2] <GetLastError>
; data inside code section at 0x14000291e -- 0x140002920
0x14000291e:   90 90                                              |..              |
; function: EnterCriticalSection at 0x140002920 -- 0x140002926
0x140002920:   ff 25 92 58 00 00                  	jmp qword ptr [rip + 0x5892] <EnterCriticalSection>
; data inside code section at 0x140002926 -- 0x140002928
0x140002926:   90 90                                              |..              |
; function: DeleteCriticalSection at 0x140002928 -- 0x14000292e
0x140002928:   ff 25 82 58 00 00                  	jmp qword ptr [rip + 0x5882] <DeleteCriticalSection>
; data inside code section at 0x14000292e -- 0x140002930
0x14000292e:   90 90                                              |..              |
; function: register_frame_ctor at 0x140002930 -- 0x140002935
0x140002930:   e9 fb ea ff ff                     	jmp 0x140001430 <__gcc_register_frame>
; data inside code section at 0x140002935 -- 0x140002970
0x140002935:   90 90 90 90 90 90 90 90  90 90 90 ff ff ff ff ff   |................|
0x140002945:   ff ff ff d5 16 00 40 01  00 00 00 30 29 00 40 01   |......@....0).@.|
0x140002955:   00 00 00 00 00 00 00 00  00 00 00 ff ff ff ff ff   |................|
0x140002965:   ff ff ff 00 00 00 00 00  00 00 00                  |...........     |

;;
;; Data Segment
;;

; section: .data
0x140003000:   68 29 00 40 01 00 00 00  00 00 00 00 00 00 00 00   |h).@............|
0x140003010:   ff ff ff ff ff ff ff ff  00 00 00 00 00 00 00 00   |................|
0x140003020:   ff ff ff ff 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x140003030:   02 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x140003040:   ff ff ff ff 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x140003050:   d0 27 00 40 01 00 00 00  00 00 00 00 00 00 00 00   |.'.@............|
0x140003060:   e0 27 00 40 01 00 00 00  00 00 00 00 00 00 00 00   |.'.@............|
0x140003070:   f0 27 00 40 01 00 00 00  00 28 00 40 01 00 00 00   |.'.@.....(.@....|
0x140003080:   10 28 00 40 01 00 00 00  00 00 00 00 00 00 00 00   |.(.@............|
0x140003090:   ??                                                 |?               |
; section: .rdata
0x140004000:   20 00                                              | .              |
0x140004002:   48 65 6c 6c 6f 00                                  |Hello.          |   "Hello"
0x140004008:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x140004018:   00 00 00 00 00 00 00 00  40 18 00 40 01 00 00 00   |........@..@....|
0x140004028:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x140004038:   00 00 00 00 00 00 00 00  00 a0 00 40 01 00 00 00   |...........@....|
0x140004048:   08 a0 00 40 01 00 00 00  7c 70 00 40 01 00 00 00   |...@....|p.@....|
0x140004058:   38 90 00 40 01 00 00 00  00 00 00 00 00 00 00 00   |8..@............|
0x140004068:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x140004078:   00 00 00 00 00 00 00 00                            |........        |
0x140004080:   41 72 67 75 6d 65 6e 74  20 64 6f 6d 61 69 6e 20   |Argument domain |   "Argument domain error (DOMAIN)"
0x140004090:   65 72 72 6f 72 20 28 44  4f 4d 41 49 4e 29 00      |error (DOMAIN). |
0x14000409f:   41 72 67 75 6d 65 6e 74  20 73 69 6e 67 75 6c 61   |Argument singula|   "Argument singularity (SIGN)"
0x1400040af:   72 69 74 79 20 28 53 49  47 4e 29 00               |rity (SIGN).    |
0x1400040bb:   00 00 00 00 00                                     |.....           |
0x1400040c0:   4f 76 65 72 66 6c 6f 77  20 72 61 6e 67 65 20 65   |Overflow range e|   "Overflow range error (OVERFLOW)"
0x1400040d0:   72 72 6f 72 20 28 4f 56  45 52 46 4c 4f 57 29 00   |rror (OVERFLOW).|
0x1400040e0:   50 61 72 74 69 61 6c 20  6c 6f 73 73 20 6f 66 20   |Partial loss of |   "Partial loss of significance (PLOSS)"
0x1400040f0:   73 69 67 6e 69 66 69 63  61 6e 63 65 20 28 50 4c   |significance (PL|
0x140004100:   4f 53 53 29 00                                     |OSS).           |
0x140004105:   00 00 00                                           |...             |
0x140004108:   54 6f 74 61 6c 20 6c 6f  73 73 20 6f 66 20 73 69   |Total loss of si|   "Total loss of significance (TLOSS)"
0x140004118:   67 6e 69 66 69 63 61 6e  63 65 20 28 54 4c 4f 53   |gnificance (TLOS|
0x140004128:   53 29 00                                           |S).             |
0x14000412b:   00 00 00 00 00                                     |.....           |
0x140004130:   54 68 65 20 72 65 73 75  6c 74 20 69 73 20 74 6f   |The result is to|   "The result is too small to be represented (UNDERFLOW)"
0x140004140:   6f 20 73 6d 61 6c 6c 20  74 6f 20 62 65 20 72 65   |o small to be re|
0x140004150:   70 72 65 73 65 6e 74 65  64 20 28 55 4e 44 45 52   |presented (UNDER|
0x140004160:   46 4c 4f 57 29 00                                  |FLOW).          |
0x140004166:   55 6e 6b 6e 6f 77 6e 20  65 72 72 6f 72 00         |Unknown error.  |   "Unknown error"
0x140004174:   00 00 00 00                                        |....            |
0x140004178:   5f 6d 61 74 68 65 72 72  28 29 3a 20 25 73 20 69   |_matherr(): %s i|   "_matherr(): %s in %s(%g, %g)  (retval=%g)\n"
0x140004188:   6e 20 25 73 28 25 67 2c  20 25 67 29 20 20 28 72   |n %s(%g, %g)  (r|
0x140004198:   65 74 76 61 6c 3d 25 67  29 0a 00                  |etval=%g)..     |
0x1400041a3:   00 28 d8 ff ff dc d7 ff  ff 74 d7 ff ff fc d7 ff   |.(.......t......|
0x1400041b3:   ff 0c d8 ff ff 1c d8 ff  ff ec d7 ff ff            |.............   |
0x1400041c0:   4d 69 6e 67 77 2d 77 36  34 20 72 75 6e 74 69 6d   |Mingw-w64 runtim|   "Mingw-w64 runtime failure:\n"
0x1400041d0:   65 20 66 61 69 6c 75 72  65 3a 0a 00               |e failure:..    |
0x1400041dc:   00 00 00 00                                        |....            |
0x1400041e0:   41 64 64 72 65 73 73 20  25 70 20 68 61 73 20 6e   |Address %p has n|   "Address %p has no image-section"
0x1400041f0:   6f 20 69 6d 61 67 65 2d  73 65 63 74 69 6f 6e 00   |o image-section.|
0x140004200:   20 20 56 69 72 74 75 61  6c 51 75 65 72 79 20 66   |  VirtualQuery f|   "  VirtualQuery failed for %d bytes at address %p"
0x140004210:   61 69 6c 65 64 20 66 6f  72 20 25 64 20 62 79 74   |ailed for %d byt|
0x140004220:   65 73 20 61 74 20 61 64  64 72 65 73 73 20 25 70   |es at address %p|
0x140004230:   00                                                 |.               |
0x140004231:   00 00 00 00 00 00 00                               |.......         |
0x140004238:   20 20 56 69 72 74 75 61  6c 50 72 6f 74 65 63 74   |  VirtualProtect|   "  VirtualProtect failed with code 0x%x"
0x140004248:   20 66 61 69 6c 65 64 20  77 69 74 68 20 63 6f 64   | failed with cod|
0x140004258:   65 20 30 78 25 78 00                               |e 0x%x.         |
0x14000425f:   00                                                 |.               |
0x140004260:   20 20 55 6e 6b 6e 6f 77  6e 20 70 73 65 75 64 6f   |  Unknown pseudo|   "  Unknown pseudo relocation protocol version %d.\n"
0x140004270:   20 72 65 6c 6f 63 61 74  69 6f 6e 20 70 72 6f 74   | relocation prot|
0x140004280:   6f 63 6f 6c 20 76 65 72  73 69 6f 6e 20 25 64 2e   |ocol version %d.|
0x140004290:   0a 00                                              |..              |
0x140004292:   00 00 00 00 00 00                                  |......          |
0x140004298:   20 20 55 6e 6b 6e 6f 77  6e 20 70 73 65 75 64 6f   |  Unknown pseudo|   "  Unknown pseudo relocation bit size %d.\n"
0x1400042a8:   20 72 65 6c 6f 63 61 74  69 6f 6e 20 62 69 74 20   | relocation bit |
0x1400042b8:   73 69 7a 65 20 25 64 2e  0a 00                     |size %d...      |
0x1400042c2:   00 00 00 00 00 00                                  |......          |
0x1400042c8:   25 64 20 62 69 74 20 70  73 65 75 64 6f 20 72 65   |%d bit pseudo re|   "%d bit pseudo relocation at %p out of range, targeting %p, yielding the value %p.\n"
0x1400042d8:   6c 6f 63 61 74 69 6f 6e  20 61 74 20 25 70 20 6f   |location at %p o|
0x1400042e8:   75 74 20 6f 66 20 72 61  6e 67 65 2c 20 74 61 72   |ut of range, tar|
0x1400042f8:   67 65 74 69 6e 67 20 25  70 2c 20 79 69 65 6c 64   |geting %p, yield|
0x140004308:   69 6e 67 20 74 68 65 20  76 61 6c 75 65 20 25 70   |ing the value %p|
0x140004318:   2e 0a 00                                           |...             |
0x14000431b:   00 00 00 00 00 40 dd ff  ff 40 dd ff ff 40 dd ff   |.....@...@...@..|
0x14000432b:   ff 40 dd ff ff 40 dd ff  ff ed dc ff ff 40 dd ff   |.@...@.......@..|
0x14000433b:   ff 68 dd ff ff ed dc ff  ff cb dc ff ff 00 00 00   |.h..............|
0x14000434b:   00 00 00 00 00 d0 1b 00  00 00 00 00 00 00 00 00   |................|
0x14000435b:   00 00 00 00 00 30 30 00  40 01 00 00 00 00 00 00   |.....00.@.......|
0x14000436b:   00 00 00 00 00 40 30 00  40 01 00 00 00 00 00 00   |.....@0.@.......|
0x14000437b:   00 00 00 00 00 f0 82 00  40 01 00 00 00 00 00 00   |........@.......|
0x14000438b:   00 00 00 00 00 08 17 00  40 01 00 00 00 00 00 00   |........@.......|
0x14000439b:   00 00 00 00 00 40 29 00  40 01 00 00 00 00 00 00   |.....@).@.......|
0x1400043ab:   00 00 00 00 00 b8 4a 00  40 01 00 00 00 00 00 00   |......J.@.......|
0x1400043bb:   00 00 00 00 00 a0 4a 00  40 01 00 00 00 00 00 00   |......J.@.......|
0x1400043cb:   00 00 00 00 00 20 40 00  40 01 00 00 00 00 00 00   |..... @.@.......|
0x1400043db:   00 00 00 00 00 00 00 00  40 01 00 00 00 00 00 00   |........@.......|
0x1400043eb:   00 00 00 00 00 18 82 00  40 01 00 00 00 00 00 00   |........@.......|
0x1400043fb:   00 00 00 00 00 48 82 00  40 01 00 00 00 00 00 00   |.....H..@.......|
0x14000440b:   00 00 00 00 00 50 82 00  40 01 00 00 00 00 00 00   |.....P..@.......|
0x14000441b:   00 00 00 00 00 90 70 00  40 01 00 00 00 00 00 00   |......p.@.......|
0x14000442b:   00 00 00 00 00 78 70 00  40 01 00 00 00 00 00 00   |.....xp.@.......|
0x14000443b:   00 00 00 00 00 74 70 00  40 01 00 00 00 00 00 00   |.....tp.@.......|
0x14000444b:   00 00 00 00 00 70 70 00  40 01 00 00 00 00 00 00   |.....pp.@.......|
0x14000445b:   00 00 00 00 00 d0 70 00  40 01 00 00 00 00 00 00   |......p.@.......|
0x14000446b:   00 00 00 00 00 50 70 00  40 01 00 00 00 00 00 00   |.....Pp.@.......|
0x14000447b:   00 00 00 00 00 58 70 00  40 01 00 00 00 00 00 00   |.....Xp.@.......|
0x14000448b:   00 00 00 00 00 00 90 00  40 01 00 00 00 00 00 00   |........@.......|
0x14000449b:   00 00 00 00 00 10 90 00  40 01 00 00 00 00 00 00   |........@.......|
0x1400044ab:   00 00 00 00 00 18 90 00  40 01 00 00 00 00 00 00   |........@.......|
0x1400044bb:   00 00 00 00 00 28 90 00  40 01 00 00 00 00 00 00   |.....(..@.......|
0x1400044cb:   00 00 00 00 00 80 70 00  40 01 00 00 00 00 00 00   |......p.@.......|
0x1400044db:   00 00 00 00 00 20 30 00  40 01 00 00 00 00 00 00   |..... 0.@.......|
0x1400044eb:   00 00 00 00 00 c0 70 00  40 01 00 00 00 00 00 00   |......p.@.......|
0x1400044fb:   00 00 00 00 00 80 1f 00  40 01 00 00 00 00 00 00   |........@.......|
0x14000450b:   00 00 00 00 00 e0 18 00  40 01 00 00 00 00 00 00   |........@.......|
0x14000451b:   00 00 00 00 00 60 70 00  40 01 00 00 00 00 00 00   |.....`p.@.......|
0x14000452b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x14000453b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000454b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x14000455b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 31 30   |.....GCC: (Rev10|
0x14000456b:   2c 20 42 75 69 6c 74 20  62 79 20 4d 53 59 53 32   |, Built by MSYS2|
0x14000457b:   20 70 72 6f 6a 65 63 74  29 20 31 32 2e 32 2e 30   | project) 12.2.0|
0x14000458b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 31 30   |.....GCC: (Rev10|
0x14000459b:   2c 20 42 75 69 6c 74 20  62 79 20 4d 53 59 53 32   |, Built by MSYS2|
0x1400045ab:   20 70 72 6f 6a 65 63 74  29 20 31 32 2e 32 2e 30   | project) 12.2.0|
0x1400045bb:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x1400045cb:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x1400045db:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x1400045eb:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x1400045fb:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000460b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x14000461b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x14000462b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000463b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x14000464b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x14000465b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000466b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x14000467b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x14000468b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000469b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x1400046ab:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x1400046bb:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x1400046cb:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x1400046db:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x1400046eb:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x1400046fb:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x14000470b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x14000471b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000472b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x14000473b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x14000474b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000475b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x14000476b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x14000477b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000478b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x14000479b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x1400047ab:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x1400047bb:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x1400047cb:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x1400047db:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x1400047eb:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x1400047fb:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x14000480b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000481b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x14000482b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x14000483b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000484b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x14000485b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x14000486b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000487b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x14000488b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x14000489b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x1400048ab:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x1400048bb:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x1400048cb:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x1400048db:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x1400048eb:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x1400048fb:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000490b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x14000491b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x14000492b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000493b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x14000494b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 31 30   |.....GCC: (Rev10|
0x14000495b:   2c 20 42 75 69 6c 74 20  62 79 20 4d 53 59 53 32   |, Built by MSYS2|
0x14000496b:   20 70 72 6f 6a 65 63 74  29 20 31 32 2e 32 2e 30   | project) 12.2.0|
0x14000497b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x14000498b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x14000499b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x1400049ab:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x1400049bb:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x1400049cb:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x1400049db:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x1400049eb:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x1400049fb:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x140004a0b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x140004a1b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x140004a2b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x140004a3b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 37 2c   |.....GCC: (Rev7,|
0x140004a4b:   20 42 75 69 6c 74 20 62  79 20 4d 53 59 53 32 20   | Built by MSYS2 |
0x140004a5b:   70 72 6f 6a 65 63 74 29  20 31 32 2e 32 2e 30 00   |project) 12.2.0.|
0x140004a6b:   00 00 00 00 00 47 43 43  3a 20 28 52 65 76 31 30   |.....GCC: (Rev10|
0x140004a7b:   2c 20 42 75 69 6c 74 20  62 79 20 4d 53 59 53 32   |, Built by MSYS2|
0x140004a8b:   20 70 72 6f 6a 65 63 74  29 20 31 32 2e 32 2e 30   | project) 12.2.0|
0x140004a9b:   00 00 00 00 00 00 00 00  00 00 00 00 00 01 00 00   |................|
0x140004aab:   00 f0 82 00 00 80 43 00  00 40 00 00 00 ??         |......C..@...?  |
; section: .pdata
0x140005000:   00 10 00 00 01 10 00 00  00 60 00 00 10 10 00 00   |.........`......|
0x140005010:   2e 11 00 00 04 60 00 00  30 11 00 00 79 11 00 00   |.....`..0...y...|
0x140005020:   0c 60 00 00 80 11 00 00  d0 13 00 00 14 60 00 00   |.`...........`..|
0x140005030:   d0 13 00 00 ed 13 00 00  24 60 00 00 f0 13 00 00   |........$`......|
0x140005040:   0d 14 00 00 44 60 00 00  10 14 00 00 24 14 00 00   |....D`......$...|
0x140005050:   64 60 00 00 30 14 00 00  3c 14 00 00 6c 60 00 00   |d`..0...<...l`..|
0x140005060:   40 14 00 00 41 14 00 00  70 60 00 00 50 14 00 00   |@...A...p`..P...|
0x140005070:   85 14 00 00 74 60 00 00  85 14 00 00 5d 15 00 00   |....t`......]...|
0x140005080:   80 60 00 00 5d 15 00 00  c7 15 00 00 8c 60 00 00   |.`..]........`..|
0x140005090:   c7 15 00 00 44 16 00 00  98 60 00 00 44 16 00 00   |....D....`..D...|
0x1400050a0:   75 16 00 00 a4 60 00 00  75 16 00 00 93 16 00 00   |u....`..u.......|
0x1400050b0:   b0 60 00 00 93 16 00 00  d5 16 00 00 bc 60 00 00   |.`...........`..|
0x1400050c0:   d5 16 00 00 f3 16 00 00  c8 60 00 00 30 17 00 00   |.........`..0...|
0x1400050d0:   6a 17 00 00 d4 60 00 00  70 17 00 00 da 17 00 00   |j....`..p.......|
0x1400050e0:   dc 60 00 00 e0 17 00 00  ff 17 00 00 e8 60 00 00   |.`...........`..|
0x1400050f0:   00 18 00 00 03 18 00 00  ec 60 00 00 10 18 00 00   |.........`......|
0x140005100:   3f 18 00 00 f0 60 00 00  40 18 00 00 c1 18 00 00   |?....`..@.......|
0x140005110:   f8 60 00 00 d0 18 00 00  d3 18 00 00 04 61 00 00   |.`...........a..|
0x140005120:   e0 18 00 00 d8 19 00 00  08 61 00 00 e0 19 00 00   |.........a......|
0x140005130:   e3 19 00 00 20 61 00 00  f0 19 00 00 59 1a 00 00   |.... a......Y...|
0x140005140:   24 61 00 00 60 1a 00 00  c2 1b 00 00 30 61 00 00   |$a..`.......0a..|
0x140005150:   d0 1b 00 00 2b 1f 00 00  3c 61 00 00 30 1f 00 00   |....+...<a..0...|
0x140005160:   6e 1f 00 00 54 61 00 00  70 1f 00 00 7c 1f 00 00   |n...Ta..p...|...|
0x140005170:   5c 61 00 00 80 1f 00 00  18 21 00 00 60 61 00 00   |\a.......!..`a..|
0x140005180:   20 21 00 00 90 21 00 00  68 61 00 00 90 21 00 00   | !...!..ha...!..|
0x140005190:   ff 21 00 00 78 61 00 00  00 22 00 00 81 22 00 00   |.!..xa..."..."..|
0x1400051a0:   84 61 00 00 90 22 00 00  82 23 00 00 90 61 00 00   |.a..."...#...a..|
0x1400051b0:   90 23 00 00 bc 23 00 00  98 61 00 00 c0 23 00 00   |.#...#...a...#..|
0x1400051c0:   10 24 00 00 9c 61 00 00  10 24 00 00 ad 24 00 00   |.$...a...$...$..|
0x1400051d0:   a0 61 00 00 b0 24 00 00  30 25 00 00 ac 61 00 00   |.a...$..0%...a..|
0x1400051e0:   30 25 00 00 67 25 00 00  b0 61 00 00 70 25 00 00   |0%..g%...a..p%..|
0x1400051f0:   e3 25 00 00 b4 61 00 00  f0 25 00 00 26 26 00 00   |.%...a...%..&&..|
0x140005200:   b8 61 00 00 30 26 00 00  b9 26 00 00 bc 61 00 00   |.a..0&...&...a..|
0x140005210:   c0 26 00 00 86 27 00 00  c0 61 00 00 d0 27 00 00   |.&...'...a...'..|
0x140005220:   db 27 00 00 c4 61 00 00  e0 27 00 00 eb 27 00 00   |.'...a...'...'..|
0x140005230:   c8 61 00 00 f0 27 00 00  f8 27 00 00 cc 61 00 00   |.a...'...'...a..|
0x140005240:   00 28 00 00 0b 28 00 00  d0 61 00 00 10 28 00 00   |.(...(...a...(..|
0x140005250:   2f 28 00 00 d4 61 00 00  30 29 00 00 35 29 00 00   |/(...a..0)..5)..|
0x140005260:   dc 61 00 00 ??                                     |.a..?           |
; section: .xdata
0x140006000:   01 00 00 00 01 04 01 00  04 42 00 00 01 04 01 00   |.........B......|
0x140006010:   04 62 00 00 01 0a 06 00  0a 32 06 30 05 60 04 70   |.b.......2.0.`.p|
0x140006020:   03 50 02 c0 09 04 01 00  04 42 00 00 30 28 00 00   |.P.......B..0(..|
0x140006030:   01 00 00 00 d4 13 00 00  e7 13 00 00 80 1f 00 00   |................|
0x140006040:   e7 13 00 00 09 04 01 00  04 42 00 00 30 28 00 00   |.........B..0(..|
0x140006050:   01 00 00 00 f4 13 00 00  07 14 00 00 80 1f 00 00   |................|
0x140006060:   07 14 00 00 01 04 01 00  04 42 00 00 01 00 00 00   |.........B......|
0x140006070:   01 00 00 00 01 08 03 05  08 12 04 03 01 50 00 00   |.............P..|
0x140006080:   01 08 03 05 08 52 04 03  01 50 00 00 01 08 03 05   |.....R...P......|
0x140006090:   08 52 04 03 01 50 00 00  01 08 03 05 08 52 04 03   |.R...P.......R..|
0x1400060a0:   01 50 00 00 01 08 03 05  08 32 04 03 01 50 00 00   |.P.......2...P..|
0x1400060b0:   01 08 03 05 08 32 04 03  01 50 00 00 01 08 03 05   |.....2...P......|
0x1400060c0:   08 32 04 03 01 50 00 00  01 08 03 05 08 32 04 03   |.2...P.......2..|
0x1400060d0:   01 50 00 00 01 04 01 00  04 42 00 00 01 06 03 00   |.P.......B......|
0x1400060e0:   06 42 02 30 01 60 00 00  01 00 00 00 01 00 00 00   |.B.0.`..........|
0x1400060f0:   01 04 01 00 04 42 00 00  01 06 03 00 06 42 02 30   |.....B.......B.0|
0x140006100:   01 60 00 00 01 00 00 00  01 16 09 00 16 88 06 00   |.`..............|
0x140006110:   10 78 05 00 0b 68 04 00  06 e2 02 30 01 60 00 00   |.x...h.....0.`..|
0x140006120:   01 00 00 00 01 06 03 00  06 62 02 30 01 60 00 00   |.........b.0.`..|
0x140006130:   01 07 04 00 07 92 03 30  02 60 01 70 01 15 0a 45   |.......0.`.p...E|
0x140006140:   15 03 10 82 0c 30 0b 60  0a 70 09 c0 07 d0 05 e0   |.....0.`.p......|
0x140006150:   03 f0 01 50 01 04 01 00  04 a2 00 00 01 00 00 00   |...P............|
0x140006160:   01 05 02 00 05 32 01 30  01 0a 06 00 0a 32 06 30   |.....2.0.....2.0|
0x140006170:   05 60 04 70 03 50 02 c0  01 07 04 00 07 32 03 30   |.`.p.P.......2.0|
0x140006180:   02 60 01 70 01 06 03 00  06 42 02 30 01 60 00 00   |.`.p.....B.0.`..|
0x140006190:   01 05 02 00 05 32 01 30  01 00 00 00 01 00 00 00   |.....2.0........|
0x1400061a0:   01 07 04 00 07 32 03 30  02 60 01 70 01 00 00 00   |.....2.0.`.p....|
0x1400061b0:   01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00   |................|
0x1400061c0:   01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00   |................|
0x1400061d0:   01 00 00 00 01 05 02 00  05 32 01 30 01 00 00 00   |.........2.0....|
0x1400061e0:   ??                                                 |?               |
; section: .idata
0x140008000:   50 80 00 00 00 00 00 00  00 00 00 00 04 86 00 00   |P...............|
0x140008010:   b0 81 00 00 a8 80 00 00  00 00 00 00 00 00 00 00   |................|
0x140008020:   74 86 00 00 08 82 00 00  70 81 00 00 00 00 00 00   |t.......p.......|
0x140008030:   00 00 00 00 9c 86 00 00  d0 82 00 00 00 00 00 00   |................|
0x140008040:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x140008050:   10 83 00 00 00 00 00 00  28 83 00 00 00 00 00 00   |........(.......|
0x140008060:   40 83 00 00 00 00 00 00  50 83 00 00 00 00 00 00   |@.......P.......|
0x140008070:   6c 83 00 00 00 00 00 00  84 83 00 00 00 00 00 00   |l...............|
0x140008080:   a2 83 00 00 00 00 00 00  aa 83 00 00 00 00 00 00   |................|
0x140008090:   b8 83 00 00 00 00 00 00  ca 83 00 00 00 00 00 00   |................|
0x1400080a0:   00 00 00 00 00 00 00 00  da 83 00 00 00 00 00 00   |................|
0x1400080b0:   f2 83 00 00 00 00 00 00  02 84 00 00 00 00 00 00   |................|
0x1400080c0:   0e 84 00 00 00 00 00 00  1c 84 00 00 00 00 00 00   |................|
0x1400080d0:   2e 84 00 00 00 00 00 00  42 84 00 00 00 00 00 00   |........B.......|
0x1400080e0:   50 84 00 00 00 00 00 00  5a 84 00 00 00 00 00 00   |P.......Z.......|
0x1400080f0:   66 84 00 00 00 00 00 00  70 84 00 00 00 00 00 00   |f.......p.......|
0x140008100:   7c 84 00 00 00 00 00 00  86 84 00 00 00 00 00 00   ||...............|
0x140008110:   8e 84 00 00 00 00 00 00  98 84 00 00 00 00 00 00   |................|
0x140008120:   a0 84 00 00 00 00 00 00  aa 84 00 00 00 00 00 00   |................|
0x140008130:   b2 84 00 00 00 00 00 00  bc 84 00 00 00 00 00 00   |................|
0x140008140:   c6 84 00 00 00 00 00 00  d0 84 00 00 00 00 00 00   |................|
0x140008150:   da 84 00 00 00 00 00 00  e4 84 00 00 00 00 00 00   |................|
0x140008160:   ee 84 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x140008170:   fc 84 00 00 00 00 00 00  10 85 00 00 00 00 00 00   |................|
0x140008180:   1c 85 00 00 00 00 00 00  38 85 00 00 00 00 00 00   |........8.......|
0x140008190:   54 85 00 00 00 00 00 00  60 85 00 00 00 00 00 00   |T.......`.......|
0x1400081a0:   a0 85 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x1400081b0:   10 83 00 00 00 00 00 00  28 83 00 00 00 00 00 00   |........(.......|
0x1400081c0:   40 83 00 00 00 00 00 00  50 83 00 00 00 00 00 00   |@.......P.......|
0x1400081d0:   6c 83 00 00 00 00 00 00  84 83 00 00 00 00 00 00   |l...............|
0x1400081e0:   a2 83 00 00 00 00 00 00  aa 83 00 00 00 00 00 00   |................|
0x1400081f0:   b8 83 00 00 00 00 00 00  ca 83 00 00 00 00 00 00   |................|
0x140008200:   00 00 00 00 00 00 00 00  da 83 00 00 00 00 00 00   |................|
0x140008210:   f2 83 00 00 00 00 00 00  02 84 00 00 00 00 00 00   |................|
0x140008220:   0e 84 00 00 00 00 00 00  1c 84 00 00 00 00 00 00   |................|
0x140008230:   2e 84 00 00 00 00 00 00  42 84 00 00 00 00 00 00   |........B.......|
0x140008240:   50 84 00 00 00 00 00 00  5a 84 00 00 00 00 00 00   |P.......Z.......|
0x140008250:   66 84 00 00 00 00 00 00  70 84 00 00 00 00 00 00   |f.......p.......|
0x140008260:   7c 84 00 00 00 00 00 00  86 84 00 00 00 00 00 00   ||...............|
0x140008270:   8e 84 00 00 00 00 00 00  98 84 00 00 00 00 00 00   |................|
0x140008280:   a0 84 00 00 00 00 00 00  aa 84 00 00 00 00 00 00   |................|
0x140008290:   b2 84 00 00 00 00 00 00  bc 84 00 00 00 00 00 00   |................|
0x1400082a0:   c6 84 00 00 00 00 00 00  d0 84 00 00 00 00 00 00   |................|
0x1400082b0:   da 84 00 00 00 00 00 00  e4 84 00 00 00 00 00 00   |................|
0x1400082c0:   ee 84 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x1400082d0:   fc 84 00 00 00 00 00 00  10 85 00 00 00 00 00 00   |................|
0x1400082e0:   1c 85 00 00 00 00 00 00  38 85 00 00 00 00 00 00   |........8.......|
0x1400082f0:   54 85 00 00 00 00 00 00  60 85 00 00 00 00 00 00   |T.......`.......|
0x140008300:   a0 85 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x140008310:   19 01 44 65 6c 65 74 65  43 72 69 74 69 63 61 6c   |..DeleteCritical|
0x140008320:   53 65 63 74 69 6f 6e 00  3d 01 45 6e 74 65 72 43   |Section.=.EnterC|
0x140008330:   72 69 74 69 63 61 6c 53  65 63 74 69 6f 6e 00 00   |riticalSection..|
0x140008340:   74 02 47 65 74 4c 61 73  74 45 72 72 6f 72 00 00   |t.GetLastError..|
0x140008350:   7a 03 49 6e 69 74 69 61  6c 69 7a 65 43 72 69 74   |z.InitializeCrit|
0x140008360:   69 63 61 6c 53 65 63 74  69 6f 6e 00 d6 03 4c 65   |icalSection...Le|
0x140008370:   61 76 65 43 72 69 74 69  63 61 6c 53 65 63 74 69   |aveCriticalSecti|
0x140008380:   6f 6e 00 00 6f 05 53 65  74 55 6e 68 61 6e 64 6c   |on..o.SetUnhandl|
0x140008390:   65 64 45 78 63 65 70 74  69 6f 6e 46 69 6c 74 65   |edExceptionFilte|
0x1400083a0:   72 00 7f 05 53 6c 65 65  70 00 a2 05 54 6c 73 47   |r...Sleep...TlsG|
0x1400083b0:   65 74 56 61 6c 75 65 00  d1 05 56 69 72 74 75 61   |etValue...Virtua|
0x1400083c0:   6c 50 72 6f 74 65 63 74  00 00 d3 05 56 69 72 74   |lProtect....Virt|
0x1400083d0:   75 61 6c 51 75 65 72 79  00 00 38 00 5f 5f 43 5f   |ualQuery..8.__C_|
0x1400083e0:   73 70 65 63 69 66 69 63  5f 68 61 6e 64 6c 65 72   |specific_handler|
0x1400083f0:   00 00 52 00 5f 5f 67 65  74 6d 61 69 6e 61 72 67   |..R.__getmainarg|
0x140008400:   73 00 53 00 5f 5f 69 6e  69 74 65 6e 76 00 54 00   |s.S.__initenv.T.|
0x140008410:   5f 5f 69 6f 62 5f 66 75  6e 63 00 00 62 00 5f 5f   |__iob_func..b.__|
0x140008420:   73 65 74 5f 61 70 70 5f  74 79 70 65 00 00 64 00   |set_app_type..d.|
0x140008430:   5f 5f 73 65 74 75 73 65  72 6d 61 74 68 65 72 72   |__setusermatherr|
0x140008440:   00 00 7e 00 5f 61 6d 73  67 5f 65 78 69 74 00 00   |..~._amsg_exit..|
0x140008450:   92 00 5f 63 65 78 69 74  00 00 a1 00 5f 63 6f 6d   |.._cexit...._com|
0x140008460:   6d 6f 64 65 00 00 fe 00  5f 66 6d 6f 64 65 00 00   |mode...._fmode..|
0x140008470:   51 01 5f 69 6e 69 74 74  65 72 6d 00 6b 02 5f 6f   |Q._initterm.k._o|
0x140008480:   6e 65 78 69 74 00 1c 04  61 62 6f 72 74 00 2d 04   |nexit...abort.-.|
0x140008490:   63 61 6c 6c 6f 63 00 00  3a 04 65 78 69 74 00 00   |calloc..:.exit..|
0x1400084a0:   4e 04 66 70 72 69 6e 74  66 00 55 04 66 72 65 65   |N.fprintf.U.free|
0x1400084b0:   00 00 62 04 66 77 72 69  74 65 00 00 92 04 6d 61   |..b.fwrite....ma|
0x1400084c0:   6c 6c 6f 63 00 00 9a 04  6d 65 6d 63 70 79 00 00   |lloc....memcpy..|
0x1400084d0:   ba 04 73 69 67 6e 61 6c  00 00 d1 04 73 74 72 6c   |..signal....strl|
0x1400084e0:   65 6e 00 00 d4 04 73 74  72 6e 63 6d 70 00 f8 04   |en....strncmp...|
0x1400084f0:   76 66 70 72 69 6e 74 66  00 00 00 00 6e 07 5f 5a   |vfprintf....n._Z|
0x140008500:   4e 53 6f 6c 73 45 50 46  52 53 6f 53 5f 45 00 00   |NSolsEPFRSoS_E..|
0x140008510:   77 07 5f 5a 4e 53 6f 6c  73 45 69 00 33 14 5f 5a   |w._ZNSolsEi.3._Z|
0x140008520:   4e 53 74 38 69 6f 73 5f  62 61 73 65 34 49 6e 69   |NSt8ios_base4Ini|
0x140008530:   74 43 31 45 76 00 00 00  35 14 5f 5a 4e 53 74 38   |tC1Ev...5._ZNSt8|
0x140008540:   69 6f 73 5f 62 61 73 65  34 49 6e 69 74 44 31 45   |ios_base4InitD1E|
0x140008550:   76 00 00 00 62 15 5f 5a  53 74 34 63 6f 75 74 00   |v...b._ZSt4cout.|
0x140008560:   63 15 5f 5a 53 74 34 65  6e 64 6c 49 63 53 74 31   |c._ZSt4endlIcSt1|
0x140008570:   31 63 68 61 72 5f 74 72  61 69 74 73 49 63 45 45   |1char_traitsIcEE|
0x140008580:   52 53 74 31 33 62 61 73  69 63 5f 6f 73 74 72 65   |RSt13basic_ostre|
0x140008590:   61 6d 49 54 5f 54 30 5f  45 53 36 5f 00 00 00 00   |amIT_T0_ES6_....|
0x1400085a0:   da 15 5f 5a 53 74 6c 73  49 53 74 31 31 63 68 61   |.._ZStlsISt11cha|
0x1400085b0:   72 5f 74 72 61 69 74 73  49 63 45 45 52 53 74 31   |r_traitsIcEERSt1|
0x1400085c0:   33 62 61 73 69 63 5f 6f  73 74 72 65 61 6d 49 63   |3basic_ostreamIc|
0x1400085d0:   54 5f 45 53 35 5f 50 4b  63 00 00 00 00 80 00 00   |T_ES5_PKc.......|
0x1400085e0:   00 80 00 00 00 80 00 00  00 80 00 00 00 80 00 00   |................|
0x1400085f0:   00 80 00 00 00 80 00 00  00 80 00 00 00 80 00 00   |................|
0x140008600:   00 80 00 00 4b 45 52 4e  45 4c 33 32 2e 64 6c 6c   |....KERNEL32.dll|
0x140008610:   00 00 00 00 14 80 00 00  14 80 00 00 14 80 00 00   |................|
0x140008620:   14 80 00 00 14 80 00 00  14 80 00 00 14 80 00 00   |................|
0x140008630:   14 80 00 00 14 80 00 00  14 80 00 00 14 80 00 00   |................|
0x140008640:   14 80 00 00 14 80 00 00  14 80 00 00 14 80 00 00   |................|
0x140008650:   14 80 00 00 14 80 00 00  14 80 00 00 14 80 00 00   |................|
0x140008660:   14 80 00 00 14 80 00 00  14 80 00 00 14 80 00 00   |................|
0x140008670:   14 80 00 00 6d 73 76 63  72 74 2e 64 6c 6c 00 00   |....msvcrt.dll..|
0x140008680:   28 80 00 00 28 80 00 00  28 80 00 00 28 80 00 00   |(...(...(...(...|
0x140008690:   28 80 00 00 28 80 00 00  28 80 00 00 6c 69 62 73   |(...(...(...libs|
0x1400086a0:   74 64 63 2b 2b 2d 36 2e  64 6c 6c 00 ??            |tdc++-6.dll.?   |
; section: .CRT
0x140009000:   00 00 00 00 00 00 00 00  30 11 00 40 01 00 00 00   |........0..@....|
0x140009010:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x140009020:   10 10 00 40 01 00 00 00  00 00 00 00 00 00 00 00   |...@............|
0x140009030:   00 00 00 00 00 00 00 00  40 18 00 40 01 00 00 00   |........@..@....|
0x140009040:   10 18 00 40 01 00 00 00  00 00 00 00 00 00 00 00   |...@............|
0x140009050:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x140009060:   ??                                                 |?               |
; section: .tls
0x14000a000:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x14000a010:   ??                                                 |?               |
; section: .rsrc
0x14000b000:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 01 00   |................|
0x14000b010:   18 00 00 00 18 00 00 80  00 00 00 00 00 00 00 00   |................|
0x14000b020:   00 00 00 00 00 00 01 00  01 00 00 00 30 00 00 80   |............0...|
0x14000b030:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 01 00   |................|
0x14000b040:   00 00 00 00 48 00 00 00  58 b0 00 00 8f 04 00 00   |....H...X.......|
0x14000b050:   00 00 00 00 00 00 00 00  3c 3f 78 6d 6c 20 76 65   |........<?xml ve|
0x14000b060:   72 73 69 6f 6e 3d 22 31  2e 30 22 20 65 6e 63 6f   |rsion="1.0" enco|
0x14000b070:   64 69 6e 67 3d 22 55 54  46 2d 38 22 20 73 74 61   |ding="UTF-8" sta|
0x14000b080:   6e 64 61 6c 6f 6e 65 3d  22 79 65 73 22 3f 3e 0a   |ndalone="yes"?>.|
0x14000b090:   3c 61 73 73 65 6d 62 6c  79 20 78 6d 6c 6e 73 3d   |<assembly xmlns=|
0x14000b0a0:   22 75 72 6e 3a 73 63 68  65 6d 61 73 2d 6d 69 63   |"urn:schemas-mic|
0x14000b0b0:   72 6f 73 6f 66 74 2d 63  6f 6d 3a 61 73 6d 2e 76   |rosoft-com:asm.v|
0x14000b0c0:   31 22 20 6d 61 6e 69 66  65 73 74 56 65 72 73 69   |1" manifestVersi|
0x14000b0d0:   6f 6e 3d 22 31 2e 30 22  3e 0a 20 20 3c 74 72 75   |on="1.0">.  <tru|
0x14000b0e0:   73 74 49 6e 66 6f 20 78  6d 6c 6e 73 3d 22 75 72   |stInfo xmlns="ur|
0x14000b0f0:   6e 3a 73 63 68 65 6d 61  73 2d 6d 69 63 72 6f 73   |n:schemas-micros|
0x14000b100:   6f 66 74 2d 63 6f 6d 3a  61 73 6d 2e 76 33 22 3e   |oft-com:asm.v3">|
0x14000b110:   0a 20 20 20 20 3c 73 65  63 75 72 69 74 79 3e 0a   |.    <security>.|
0x14000b120:   20 20 20 20 20 20 3c 72  65 71 75 65 73 74 65 64   |      <requested|
0x14000b130:   50 72 69 76 69 6c 65 67  65 73 3e 0a 20 20 20 20   |Privileges>.    |
0x14000b140:   20 20 20 20 3c 72 65 71  75 65 73 74 65 64 45 78   |    <requestedEx|
0x14000b150:   65 63 75 74 69 6f 6e 4c  65 76 65 6c 20 6c 65 76   |ecutionLevel lev|
0x14000b160:   65 6c 3d 22 61 73 49 6e  76 6f 6b 65 72 22 2f 3e   |el="asInvoker"/>|
0x14000b170:   0a 20 20 20 20 20 20 3c  2f 72 65 71 75 65 73 74   |.      </request|
0x14000b180:   65 64 50 72 69 76 69 6c  65 67 65 73 3e 0a 20 20   |edPrivileges>.  |
0x14000b190:   20 20 3c 2f 73 65 63 75  72 69 74 79 3e 0a 20 20   |  </security>.  |
0x14000b1a0:   3c 2f 74 72 75 73 74 49  6e 66 6f 3e 0a 20 20 3c   |</trustInfo>.  <|
0x14000b1b0:   63 6f 6d 70 61 74 69 62  69 6c 69 74 79 20 78 6d   |compatibility xm|
0x14000b1c0:   6c 6e 73 3d 22 75 72 6e  3a 73 63 68 65 6d 61 73   |lns="urn:schemas|
0x14000b1d0:   2d 6d 69 63 72 6f 73 6f  66 74 2d 63 6f 6d 3a 63   |-microsoft-com:c|
0x14000b1e0:   6f 6d 70 61 74 69 62 69  6c 69 74 79 2e 76 31 22   |ompatibility.v1"|
0x14000b1f0:   3e 0a 20 20 20 20 3c 61  70 70 6c 69 63 61 74 69   |>.    <applicati|
0x14000b200:   6f 6e 3e 0a 20 20 20 20  20 20 3c 21 2d 2d 54 68   |on>.      <!--Th|
0x14000b210:   65 20 49 44 20 62 65 6c  6f 77 20 69 6e 64 69 63   |e ID below indic|
0x14000b220:   61 74 65 73 20 61 70 70  6c 69 63 61 74 69 6f 6e   |ates application|
0x14000b230:   20 73 75 70 70 6f 72 74  20 66 6f 72 20 57 69 6e   | support for Win|
0x14000b240:   64 6f 77 73 20 56 69 73  74 61 20 2d 2d 3e 0a 20   |dows Vista -->. |
0x14000b250:   20 20 20 20 20 3c 73 75  70 70 6f 72 74 65 64 4f   |     <supportedO|
0x14000b260:   53 20 49 64 3d 22 7b 65  32 30 31 31 34 35 37 2d   |S Id="{e2011457-|
0x14000b270:   31 35 34 36 2d 34 33 63  35 2d 61 35 66 65 2d 30   |1546-43c5-a5fe-0|
0x14000b280:   30 38 64 65 65 65 33 64  33 66 30 7d 22 2f 3e 0a   |08deee3d3f0}"/>.|
0x14000b290:   20 20 20 20 20 20 3c 21  2d 2d 54 68 65 20 49 44   |      <!--The ID|
0x14000b2a0:   20 62 65 6c 6f 77 20 69  6e 64 69 63 61 74 65 73   | below indicates|
0x14000b2b0:   20 61 70 70 6c 69 63 61  74 69 6f 6e 20 73 75 70   | application sup|
0x14000b2c0:   70 6f 72 74 20 66 6f 72  20 57 69 6e 64 6f 77 73   |port for Windows|
0x14000b2d0:   20 37 20 2d 2d 3e 0a 20  20 20 20 20 20 3c 73 75   | 7 -->.      <su|
0x14000b2e0:   70 70 6f 72 74 65 64 4f  53 20 49 64 3d 22 7b 33   |pportedOS Id="{3|
0x14000b2f0:   35 31 33 38 62 39 61 2d  35 64 39 36 2d 34 66 62   |5138b9a-5d96-4fb|
0x14000b300:   64 2d 38 65 32 64 2d 61  32 34 34 30 32 32 35 66   |d-8e2d-a2440225f|
0x14000b310:   39 33 61 7d 22 2f 3e 0a  20 20 20 20 20 20 3c 21   |93a}"/>.      <!|
0x14000b320:   2d 2d 54 68 65 20 49 44  20 62 65 6c 6f 77 20 69   |--The ID below i|
0x14000b330:   6e 64 69 63 61 74 65 73  20 61 70 70 6c 69 63 61   |ndicates applica|
0x14000b340:   74 69 6f 6e 20 73 75 70  70 6f 72 74 20 66 6f 72   |tion support for|
0x14000b350:   20 57 69 6e 64 6f 77 73  20 38 20 2d 2d 3e 0a 20   | Windows 8 -->. |
0x14000b360:   20 20 20 20 20 3c 73 75  70 70 6f 72 74 65 64 4f   |     <supportedO|
0x14000b370:   53 20 49 64 3d 22 7b 34  61 32 66 32 38 65 33 2d   |S Id="{4a2f28e3-|
0x14000b380:   35 33 62 39 2d 34 34 34  31 2d 62 61 39 63 2d 64   |53b9-4441-ba9c-d|
0x14000b390:   36 39 64 34 61 34 61 36  65 33 38 7d 22 2f 3e 0a   |69d4a4a6e38}"/>.|
0x14000b3a0:   20 20 20 20 20 20 3c 21  2d 2d 54 68 65 20 49 44   |      <!--The ID|
0x14000b3b0:   20 62 65 6c 6f 77 20 69  6e 64 69 63 61 74 65 73   | below indicates|
0x14000b3c0:   20 61 70 70 6c 69 63 61  74 69 6f 6e 20 73 75 70   | application sup|
0x14000b3d0:   70 6f 72 74 20 66 6f 72  20 57 69 6e 64 6f 77 73   |port for Windows|
0x14000b3e0:   20 38 2e 31 20 2d 2d 3e  0a 20 20 20 20 20 20 3c   | 8.1 -->.      <|
0x14000b3f0:   73 75 70 70 6f 72 74 65  64 4f 53 20 49 64 3d 22   |supportedOS Id="|
0x14000b400:   7b 31 66 36 37 36 63 37  36 2d 38 30 65 31 2d 34   |{1f676c76-80e1-4|
0x14000b410:   32 33 39 2d 39 35 62 62  2d 38 33 64 30 66 36 64   |239-95bb-83d0f6d|
0x14000b420:   30 64 61 37 38 7d 22 2f  3e 20 0a 20 20 20 20 20   |0da78}"/> .     |
0x14000b430:   20 3c 21 2d 2d 54 68 65  20 49 44 20 62 65 6c 6f   | <!--The ID belo|
0x14000b440:   77 20 69 6e 64 69 63 61  74 65 73 20 61 70 70 6c   |w indicates appl|
0x14000b450:   69 63 61 74 69 6f 6e 20  73 75 70 70 6f 72 74 20   |ication support |
0x14000b460:   66 6f 72 20 57 69 6e 64  6f 77 73 20 31 30 20 2d   |for Windows 10 -|
0x14000b470:   2d 3e 0a 20 20 20 20 20  20 3c 73 75 70 70 6f 72   |->.      <suppor|
0x14000b480:   74 65 64 4f 53 20 49 64  3d 22 7b 38 65 30 66 37   |tedOS Id="{8e0f7|
0x14000b490:   61 31 32 2d 62 66 62 33  2d 34 66 65 38 2d 62 39   |a12-bfb3-4fe8-b9|
0x14000b4a0:   61 35 2d 34 38 66 64 35  30 61 31 35 61 39 61 7d   |a5-48fd50a15a9a}|
0x14000b4b0:   22 2f 3e 20 0a 20 20 20  20 3c 2f 61 70 70 6c 69   |"/> .    </appli|
0x14000b4c0:   63 61 74 69 6f 6e 3e 0a  20 20 3c 2f 63 6f 6d 70   |cation>.  </comp|
0x14000b4d0:   61 74 69 62 69 6c 69 74  79 3e 0a 3c 2f 61 73 73   |atibility>.</ass|
0x14000b4e0:   65 6d 62 6c 79 3e 0a 00  ??                        |embly>..?       |
; section: .reloc
0x14000c000:   00 20 00 00 0c 00 00 00  48 a9 50 a9 00 30 00 00   |. ......H.P..0..|
0x14000c010:   14 00 00 00 00 a0 50 a0  60 a0 70 a0 78 a0 80 a0   |......P.`.p.x...|
0x14000c020:   00 40 00 00 4c 00 00 00  20 a0 40 a0 48 a0 50 a0   |.@..L... .@.H.P.|
0x14000c030:   58 a0 60 a3 70 a3 80 a3  90 a3 a0 a3 b0 a3 c0 a3   |X.`.p...........|
0x14000c040:   d0 a3 e0 a3 f0 a3 00 a4  10 a4 20 a4 30 a4 40 a4   |.......... .0.@.|
0x14000c050:   50 a4 60 a4 70 a4 80 a4  90 a4 a0 a4 b0 a4 c0 a4   |P.`.p...........|
0x14000c060:   d0 a4 e0 a4 f0 a4 00 a5  10 a5 20 a5 00 90 00 00   |.......... .....|
0x14000c070:   10 00 00 00 08 a0 20 a0  38 a0 40 a0 ??            |...... .8.@.?   |
